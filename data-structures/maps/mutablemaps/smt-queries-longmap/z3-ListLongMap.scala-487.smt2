; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10690 () Bool)

(assert start!10690)

(declare-fun b!85245 () Bool)

(declare-fun b_free!2237 () Bool)

(declare-fun b_next!2237 () Bool)

(assert (=> b!85245 (= b_free!2237 (not b_next!2237))))

(declare-fun tp!8938 () Bool)

(declare-fun b_and!5153 () Bool)

(assert (=> b!85245 (= tp!8938 b_and!5153)))

(declare-fun b!85246 () Bool)

(declare-fun b_free!2239 () Bool)

(declare-fun b_next!2239 () Bool)

(assert (=> b!85246 (= b_free!2239 (not b_next!2239))))

(declare-fun tp!8936 () Bool)

(declare-fun b_and!5155 () Bool)

(assert (=> b!85246 (= tp!8936 b_and!5155)))

(declare-fun mapIsEmpty!3399 () Bool)

(declare-fun mapRes!3399 () Bool)

(assert (=> mapIsEmpty!3399 mapRes!3399))

(declare-fun b!85240 () Bool)

(declare-fun e!55623 () Bool)

(declare-fun tp_is_empty!2535 () Bool)

(assert (=> b!85240 (= e!55623 tp_is_empty!2535)))

(declare-fun b!85241 () Bool)

(declare-fun e!55617 () Bool)

(declare-fun e!55619 () Bool)

(assert (=> b!85241 (= e!55617 (and e!55619 mapRes!3399))))

(declare-fun condMapEmpty!3399 () Bool)

(declare-datatypes ((V!3027 0))(
  ( (V!3028 (val!1312 Int)) )
))
(declare-datatypes ((array!4028 0))(
  ( (array!4029 (arr!1918 (Array (_ BitVec 32) (_ BitVec 64))) (size!2162 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!924 0))(
  ( (ValueCellFull!924 (v!2647 V!3027)) (EmptyCell!924) )
))
(declare-datatypes ((array!4030 0))(
  ( (array!4031 (arr!1919 (Array (_ BitVec 32) ValueCell!924)) (size!2163 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!756 0))(
  ( (LongMapFixedSize!757 (defaultEntry!2338 Int) (mask!6366 (_ BitVec 32)) (extraKeys!2177 (_ BitVec 32)) (zeroValue!2230 V!3027) (minValue!2230 V!3027) (_size!427 (_ BitVec 32)) (_keys!4010 array!4028) (_values!2321 array!4030) (_vacant!427 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!564 0))(
  ( (Cell!565 (v!2648 LongMapFixedSize!756)) )
))
(declare-datatypes ((LongMap!564 0))(
  ( (LongMap!565 (underlying!293 Cell!564)) )
))
(declare-fun thiss!992 () LongMap!564)

(declare-fun mapDefault!3400 () ValueCell!924)

(assert (=> b!85241 (= condMapEmpty!3399 (= (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3400)))))

(declare-fun b!85242 () Bool)

(declare-fun e!55609 () Bool)

(declare-fun mapRes!3400 () Bool)

(assert (=> b!85242 (= e!55609 (and e!55623 mapRes!3400))))

(declare-fun condMapEmpty!3400 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!756)

(declare-fun mapDefault!3399 () ValueCell!924)

(assert (=> b!85242 (= condMapEmpty!3400 (= (arr!1919 (_values!2321 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3399)))))

(declare-fun b!85243 () Bool)

(declare-fun e!55608 () Bool)

(declare-fun e!55624 () Bool)

(assert (=> b!85243 (= e!55608 e!55624)))

(declare-fun res!43923 () Bool)

(assert (=> b!85243 (=> (not res!43923) (not e!55624))))

(declare-datatypes ((tuple2!2232 0))(
  ( (tuple2!2233 (_1!1126 (_ BitVec 64)) (_2!1126 V!3027)) )
))
(declare-datatypes ((List!1552 0))(
  ( (Nil!1549) (Cons!1548 (h!2139 tuple2!2232) (t!5277 List!1552)) )
))
(declare-datatypes ((ListLongMap!1487 0))(
  ( (ListLongMap!1488 (toList!759 List!1552)) )
))
(declare-fun lt!40165 () ListLongMap!1487)

(declare-fun lt!40177 () ListLongMap!1487)

(assert (=> b!85243 (= res!43923 (= lt!40165 lt!40177))))

(declare-fun map!1195 (LongMapFixedSize!756) ListLongMap!1487)

(assert (=> b!85243 (= lt!40177 (map!1195 newMap!16))))

(declare-fun from!355 () (_ BitVec 32))

(declare-fun getCurrentListMap!443 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) Int) ListLongMap!1487)

(assert (=> b!85243 (= lt!40165 (getCurrentListMap!443 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun mapIsEmpty!3400 () Bool)

(assert (=> mapIsEmpty!3400 mapRes!3400))

(declare-fun b!85244 () Bool)

(declare-fun res!43920 () Bool)

(assert (=> b!85244 (=> (not res!43920) (not e!55608))))

(assert (=> b!85244 (= res!43920 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6366 newMap!16)) (_size!427 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun e!55621 () Bool)

(declare-fun array_inv!1149 (array!4028) Bool)

(declare-fun array_inv!1150 (array!4030) Bool)

(assert (=> b!85245 (= e!55621 (and tp!8938 tp_is_empty!2535 (array_inv!1149 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (array_inv!1150 (_values!2321 (v!2648 (underlying!293 thiss!992)))) e!55617))))

(declare-fun e!55607 () Bool)

(assert (=> b!85246 (= e!55607 (and tp!8936 tp_is_empty!2535 (array_inv!1149 (_keys!4010 newMap!16)) (array_inv!1150 (_values!2321 newMap!16)) e!55609))))

(declare-fun b!85247 () Bool)

(declare-fun res!43922 () Bool)

(assert (=> b!85247 (=> (not res!43922) (not e!55608))))

(assert (=> b!85247 (= res!43922 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!85248 () Bool)

(declare-datatypes ((Unit!2533 0))(
  ( (Unit!2534) )
))
(declare-fun e!55610 () Unit!2533)

(declare-fun Unit!2535 () Unit!2533)

(assert (=> b!85248 (= e!55610 Unit!2535)))

(declare-fun b!85249 () Bool)

(declare-fun e!55622 () Bool)

(declare-fun e!55618 () Bool)

(assert (=> b!85249 (= e!55622 e!55618)))

(declare-fun res!43927 () Bool)

(assert (=> b!85249 (=> (not res!43927) (not e!55618))))

(declare-datatypes ((tuple2!2234 0))(
  ( (tuple2!2235 (_1!1127 Bool) (_2!1127 LongMapFixedSize!756)) )
))
(declare-fun lt!40174 () tuple2!2234)

(assert (=> b!85249 (= res!43927 (and (_1!1127 lt!40174) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!40168 () Unit!2533)

(assert (=> b!85249 (= lt!40168 e!55610)))

(declare-fun c!13814 () Bool)

(declare-fun contains!762 (ListLongMap!1487 (_ BitVec 64)) Bool)

(assert (=> b!85249 (= c!13814 (contains!762 lt!40177 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun lt!40164 () V!3027)

(declare-fun update!122 (LongMapFixedSize!756 (_ BitVec 64) V!3027) tuple2!2234)

(assert (=> b!85249 (= lt!40174 (update!122 newMap!16 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))

(declare-fun res!43926 () Bool)

(assert (=> start!10690 (=> (not res!43926) (not e!55608))))

(declare-fun valid!326 (LongMap!564) Bool)

(assert (=> start!10690 (= res!43926 (valid!326 thiss!992))))

(assert (=> start!10690 e!55608))

(declare-fun e!55613 () Bool)

(assert (=> start!10690 e!55613))

(assert (=> start!10690 true))

(assert (=> start!10690 e!55607))

(declare-fun mapNonEmpty!3399 () Bool)

(declare-fun tp!8937 () Bool)

(declare-fun e!55615 () Bool)

(assert (=> mapNonEmpty!3399 (= mapRes!3400 (and tp!8937 e!55615))))

(declare-fun mapKey!3399 () (_ BitVec 32))

(declare-fun mapRest!3400 () (Array (_ BitVec 32) ValueCell!924))

(declare-fun mapValue!3400 () ValueCell!924)

(assert (=> mapNonEmpty!3399 (= (arr!1919 (_values!2321 newMap!16)) (store mapRest!3400 mapKey!3399 mapValue!3400))))

(declare-fun b!85250 () Bool)

(assert (=> b!85250 (= e!55615 tp_is_empty!2535)))

(declare-fun b!85251 () Bool)

(assert (=> b!85251 (= e!55619 tp_is_empty!2535)))

(declare-fun b!85252 () Bool)

(declare-fun e!55620 () Bool)

(assert (=> b!85252 (= e!55620 e!55621)))

(declare-fun b!85253 () Bool)

(assert (=> b!85253 (= e!55624 e!55622)))

(declare-fun res!43924 () Bool)

(assert (=> b!85253 (=> (not res!43924) (not e!55622))))

(assert (=> b!85253 (= res!43924 (and (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1212 (ValueCell!924 V!3027) V!3027)

(declare-fun dynLambda!352 (Int (_ BitVec 64)) V!3027)

(assert (=> b!85253 (= lt!40164 (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) from!355) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85254 () Bool)

(declare-fun e!55614 () Bool)

(assert (=> b!85254 (= e!55618 (not e!55614))))

(declare-fun res!43925 () Bool)

(assert (=> b!85254 (=> res!43925 e!55614)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!85254 (= res!43925 (not (validMask!0 (mask!6366 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun lt!40172 () tuple2!2232)

(declare-fun lt!40171 () tuple2!2232)

(declare-fun lt!40169 () ListLongMap!1487)

(declare-fun lt!40176 () ListLongMap!1487)

(declare-fun +!116 (ListLongMap!1487 tuple2!2232) ListLongMap!1487)

(assert (=> b!85254 (= (+!116 lt!40176 lt!40171) (+!116 (+!116 lt!40169 lt!40171) lt!40172))))

(assert (=> b!85254 (= lt!40171 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun lt!40162 () Unit!2533)

(declare-fun addCommutativeForDiffKeys!35 (ListLongMap!1487 (_ BitVec 64) V!3027 (_ BitVec 64) V!3027) Unit!2533)

(assert (=> b!85254 (= lt!40162 (addCommutativeForDiffKeys!35 lt!40169 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun lt!40160 () ListLongMap!1487)

(assert (=> b!85254 (= lt!40160 lt!40176)))

(assert (=> b!85254 (= lt!40176 (+!116 lt!40169 lt!40172))))

(declare-fun lt!40170 () ListLongMap!1487)

(declare-fun lt!40163 () tuple2!2232)

(assert (=> b!85254 (= lt!40160 (+!116 lt!40170 lt!40163))))

(declare-fun lt!40173 () ListLongMap!1487)

(assert (=> b!85254 (= lt!40169 (+!116 lt!40173 lt!40163))))

(assert (=> b!85254 (= lt!40163 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))

(assert (=> b!85254 (= lt!40170 (+!116 lt!40173 lt!40172))))

(assert (=> b!85254 (= lt!40172 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))

(declare-fun lt!40161 () Unit!2533)

(assert (=> b!85254 (= lt!40161 (addCommutativeForDiffKeys!35 lt!40173 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!80 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) Int) ListLongMap!1487)

(assert (=> b!85254 (= lt!40173 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun mapNonEmpty!3400 () Bool)

(declare-fun tp!8935 () Bool)

(declare-fun e!55616 () Bool)

(assert (=> mapNonEmpty!3400 (= mapRes!3399 (and tp!8935 e!55616))))

(declare-fun mapRest!3399 () (Array (_ BitVec 32) ValueCell!924))

(declare-fun mapValue!3399 () ValueCell!924)

(declare-fun mapKey!3400 () (_ BitVec 32))

(assert (=> mapNonEmpty!3400 (= (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (store mapRest!3399 mapKey!3400 mapValue!3399))))

(declare-fun b!85255 () Bool)

(assert (=> b!85255 (= e!55616 tp_is_empty!2535)))

(declare-fun b!85256 () Bool)

(declare-fun Unit!2536 () Unit!2533)

(assert (=> b!85256 (= e!55610 Unit!2536)))

(declare-fun lt!40175 () Unit!2533)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!72 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) (_ BitVec 32) Int) Unit!2533)

(assert (=> b!85256 (= lt!40175 (lemmaListMapContainsThenArrayContainsFrom!72 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4028 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!85256 (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!40166 () Unit!2533)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4028 (_ BitVec 32) (_ BitVec 32)) Unit!2533)

(assert (=> b!85256 (= lt!40166 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1553 0))(
  ( (Nil!1550) (Cons!1549 (h!2140 (_ BitVec 64)) (t!5278 List!1553)) )
))
(declare-fun arrayNoDuplicates!0 (array!4028 (_ BitVec 32) List!1553) Bool)

(assert (=> b!85256 (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) from!355 Nil!1550)))

(declare-fun lt!40167 () Unit!2533)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4028 (_ BitVec 32) (_ BitVec 64) List!1553) Unit!2533)

(assert (=> b!85256 (= lt!40167 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550)))))

(assert (=> b!85256 false))

(declare-fun b!85257 () Bool)

(declare-fun res!43921 () Bool)

(assert (=> b!85257 (=> (not res!43921) (not e!55608))))

(declare-fun valid!327 (LongMapFixedSize!756) Bool)

(assert (=> b!85257 (= res!43921 (valid!327 newMap!16))))

(declare-fun b!85258 () Bool)

(assert (=> b!85258 (= e!55614 (or (not (= (size!2163 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6366 (v!2648 (underlying!293 thiss!992)))))) (not (= (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (size!2163 (_values!2321 (v!2648 (underlying!293 thiss!992)))))) (bvslt (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun b!85259 () Bool)

(assert (=> b!85259 (= e!55613 e!55620)))

(assert (= (and start!10690 res!43926) b!85247))

(assert (= (and b!85247 res!43922) b!85257))

(assert (= (and b!85257 res!43921) b!85244))

(assert (= (and b!85244 res!43920) b!85243))

(assert (= (and b!85243 res!43923) b!85253))

(assert (= (and b!85253 res!43924) b!85249))

(assert (= (and b!85249 c!13814) b!85256))

(assert (= (and b!85249 (not c!13814)) b!85248))

(assert (= (and b!85249 res!43927) b!85254))

(assert (= (and b!85254 (not res!43925)) b!85258))

(assert (= (and b!85241 condMapEmpty!3399) mapIsEmpty!3399))

(assert (= (and b!85241 (not condMapEmpty!3399)) mapNonEmpty!3400))

(get-info :version)

(assert (= (and mapNonEmpty!3400 ((_ is ValueCellFull!924) mapValue!3399)) b!85255))

(assert (= (and b!85241 ((_ is ValueCellFull!924) mapDefault!3400)) b!85251))

(assert (= b!85245 b!85241))

(assert (= b!85252 b!85245))

(assert (= b!85259 b!85252))

(assert (= start!10690 b!85259))

(assert (= (and b!85242 condMapEmpty!3400) mapIsEmpty!3400))

(assert (= (and b!85242 (not condMapEmpty!3400)) mapNonEmpty!3399))

(assert (= (and mapNonEmpty!3399 ((_ is ValueCellFull!924) mapValue!3400)) b!85250))

(assert (= (and b!85242 ((_ is ValueCellFull!924) mapDefault!3399)) b!85240))

(assert (= b!85246 b!85242))

(assert (= start!10690 b!85246))

(declare-fun b_lambda!3791 () Bool)

(assert (=> (not b_lambda!3791) (not b!85253)))

(declare-fun t!5274 () Bool)

(declare-fun tb!1693 () Bool)

(assert (=> (and b!85245 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))) t!5274) tb!1693))

(declare-fun result!2917 () Bool)

(assert (=> tb!1693 (= result!2917 tp_is_empty!2535)))

(assert (=> b!85253 t!5274))

(declare-fun b_and!5157 () Bool)

(assert (= b_and!5153 (and (=> t!5274 result!2917) b_and!5157)))

(declare-fun tb!1695 () Bool)

(declare-fun t!5276 () Bool)

(assert (=> (and b!85246 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))) t!5276) tb!1695))

(declare-fun result!2921 () Bool)

(assert (= result!2921 result!2917))

(assert (=> b!85253 t!5276))

(declare-fun b_and!5159 () Bool)

(assert (= b_and!5155 (and (=> t!5276 result!2921) b_and!5159)))

(declare-fun m!89413 () Bool)

(assert (=> b!85256 m!89413))

(declare-fun m!89415 () Bool)

(assert (=> b!85256 m!89415))

(declare-fun m!89417 () Bool)

(assert (=> b!85256 m!89417))

(declare-fun m!89419 () Bool)

(assert (=> b!85256 m!89419))

(assert (=> b!85256 m!89417))

(assert (=> b!85256 m!89417))

(declare-fun m!89421 () Bool)

(assert (=> b!85256 m!89421))

(assert (=> b!85256 m!89417))

(declare-fun m!89423 () Bool)

(assert (=> b!85256 m!89423))

(assert (=> b!85253 m!89417))

(declare-fun m!89425 () Bool)

(assert (=> b!85253 m!89425))

(declare-fun m!89427 () Bool)

(assert (=> b!85253 m!89427))

(assert (=> b!85253 m!89425))

(assert (=> b!85253 m!89427))

(declare-fun m!89429 () Bool)

(assert (=> b!85253 m!89429))

(declare-fun m!89431 () Bool)

(assert (=> start!10690 m!89431))

(assert (=> b!85249 m!89417))

(assert (=> b!85249 m!89417))

(declare-fun m!89433 () Bool)

(assert (=> b!85249 m!89433))

(assert (=> b!85249 m!89417))

(declare-fun m!89435 () Bool)

(assert (=> b!85249 m!89435))

(declare-fun m!89437 () Bool)

(assert (=> b!85257 m!89437))

(declare-fun m!89439 () Bool)

(assert (=> mapNonEmpty!3400 m!89439))

(declare-fun m!89441 () Bool)

(assert (=> b!85245 m!89441))

(declare-fun m!89443 () Bool)

(assert (=> b!85245 m!89443))

(declare-fun m!89445 () Bool)

(assert (=> b!85254 m!89445))

(declare-fun m!89447 () Bool)

(assert (=> b!85254 m!89447))

(assert (=> b!85254 m!89417))

(declare-fun m!89449 () Bool)

(assert (=> b!85254 m!89449))

(declare-fun m!89451 () Bool)

(assert (=> b!85254 m!89451))

(declare-fun m!89453 () Bool)

(assert (=> b!85254 m!89453))

(assert (=> b!85254 m!89417))

(declare-fun m!89455 () Bool)

(assert (=> b!85254 m!89455))

(declare-fun m!89457 () Bool)

(assert (=> b!85254 m!89457))

(assert (=> b!85254 m!89417))

(declare-fun m!89459 () Bool)

(assert (=> b!85254 m!89459))

(declare-fun m!89461 () Bool)

(assert (=> b!85254 m!89461))

(declare-fun m!89463 () Bool)

(assert (=> b!85254 m!89463))

(assert (=> b!85254 m!89457))

(declare-fun m!89465 () Bool)

(assert (=> b!85254 m!89465))

(declare-fun m!89467 () Bool)

(assert (=> mapNonEmpty!3399 m!89467))

(declare-fun m!89469 () Bool)

(assert (=> b!85246 m!89469))

(declare-fun m!89471 () Bool)

(assert (=> b!85246 m!89471))

(declare-fun m!89473 () Bool)

(assert (=> b!85243 m!89473))

(declare-fun m!89475 () Bool)

(assert (=> b!85243 m!89475))

(check-sat (not b!85245) (not b!85246) (not b!85254) b_and!5159 (not mapNonEmpty!3399) (not b!85257) (not mapNonEmpty!3400) (not b_lambda!3791) (not b_next!2237) b_and!5157 (not b!85256) (not start!10690) (not b_next!2239) (not b!85253) tp_is_empty!2535 (not b!85243) (not b!85249))
(check-sat b_and!5157 b_and!5159 (not b_next!2237) (not b_next!2239))
(get-model)

(declare-fun b_lambda!3795 () Bool)

(assert (= b_lambda!3791 (or (and b!85245 b_free!2237) (and b!85246 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))))) b_lambda!3795)))

(check-sat (not b!85245) (not b!85246) (not b!85254) b_and!5159 (not mapNonEmpty!3399) (not b!85257) (not mapNonEmpty!3400) (not b_next!2237) (not b_lambda!3795) b_and!5157 (not b!85256) (not start!10690) (not b_next!2239) (not b!85253) tp_is_empty!2535 (not b!85243) (not b!85249))
(check-sat b_and!5157 b_and!5159 (not b_next!2237) (not b_next!2239))
(get-model)

(declare-fun d!22065 () Bool)

(assert (=> d!22065 (= (valid!326 thiss!992) (valid!327 (v!2648 (underlying!293 thiss!992))))))

(declare-fun bs!3597 () Bool)

(assert (= bs!3597 d!22065))

(declare-fun m!89541 () Bool)

(assert (=> bs!3597 m!89541))

(assert (=> start!10690 d!22065))

(declare-fun d!22067 () Bool)

(declare-fun e!55681 () Bool)

(assert (=> d!22067 e!55681))

(declare-fun res!43956 () Bool)

(assert (=> d!22067 (=> (not res!43956) (not e!55681))))

(declare-fun lt!40241 () ListLongMap!1487)

(assert (=> d!22067 (= res!43956 (contains!762 lt!40241 (_1!1126 lt!40171)))))

(declare-fun lt!40240 () List!1552)

(assert (=> d!22067 (= lt!40241 (ListLongMap!1488 lt!40240))))

(declare-fun lt!40242 () Unit!2533)

(declare-fun lt!40243 () Unit!2533)

(assert (=> d!22067 (= lt!40242 lt!40243)))

(declare-datatypes ((Option!145 0))(
  ( (Some!144 (v!2652 V!3027)) (None!143) )
))
(declare-fun getValueByKey!139 (List!1552 (_ BitVec 64)) Option!145)

(assert (=> d!22067 (= (getValueByKey!139 lt!40240 (_1!1126 lt!40171)) (Some!144 (_2!1126 lt!40171)))))

(declare-fun lemmaContainsTupThenGetReturnValue!58 (List!1552 (_ BitVec 64) V!3027) Unit!2533)

(assert (=> d!22067 (= lt!40243 (lemmaContainsTupThenGetReturnValue!58 lt!40240 (_1!1126 lt!40171) (_2!1126 lt!40171)))))

(declare-fun insertStrictlySorted!60 (List!1552 (_ BitVec 64) V!3027) List!1552)

(assert (=> d!22067 (= lt!40240 (insertStrictlySorted!60 (toList!759 lt!40169) (_1!1126 lt!40171) (_2!1126 lt!40171)))))

(assert (=> d!22067 (= (+!116 lt!40169 lt!40171) lt!40241)))

(declare-fun b!85328 () Bool)

(declare-fun res!43957 () Bool)

(assert (=> b!85328 (=> (not res!43957) (not e!55681))))

(assert (=> b!85328 (= res!43957 (= (getValueByKey!139 (toList!759 lt!40241) (_1!1126 lt!40171)) (Some!144 (_2!1126 lt!40171))))))

(declare-fun b!85329 () Bool)

(declare-fun contains!764 (List!1552 tuple2!2232) Bool)

(assert (=> b!85329 (= e!55681 (contains!764 (toList!759 lt!40241) lt!40171))))

(assert (= (and d!22067 res!43956) b!85328))

(assert (= (and b!85328 res!43957) b!85329))

(declare-fun m!89543 () Bool)

(assert (=> d!22067 m!89543))

(declare-fun m!89545 () Bool)

(assert (=> d!22067 m!89545))

(declare-fun m!89547 () Bool)

(assert (=> d!22067 m!89547))

(declare-fun m!89549 () Bool)

(assert (=> d!22067 m!89549))

(declare-fun m!89551 () Bool)

(assert (=> b!85328 m!89551))

(declare-fun m!89553 () Bool)

(assert (=> b!85329 m!89553))

(assert (=> b!85254 d!22067))

(declare-fun d!22069 () Bool)

(assert (=> d!22069 (= (+!116 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (+!116 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun lt!40246 () Unit!2533)

(declare-fun choose!506 (ListLongMap!1487 (_ BitVec 64) V!3027 (_ BitVec 64) V!3027) Unit!2533)

(assert (=> d!22069 (= lt!40246 (choose!506 lt!40173 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))

(assert (=> d!22069 (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22069 (= (addCommutativeForDiffKeys!35 lt!40173 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) lt!40246)))

(declare-fun bs!3598 () Bool)

(assert (= bs!3598 d!22069))

(declare-fun m!89555 () Bool)

(assert (=> bs!3598 m!89555))

(declare-fun m!89557 () Bool)

(assert (=> bs!3598 m!89557))

(assert (=> bs!3598 m!89417))

(declare-fun m!89559 () Bool)

(assert (=> bs!3598 m!89559))

(declare-fun m!89561 () Bool)

(assert (=> bs!3598 m!89561))

(declare-fun m!89563 () Bool)

(assert (=> bs!3598 m!89563))

(assert (=> bs!3598 m!89555))

(assert (=> bs!3598 m!89561))

(assert (=> b!85254 d!22069))

(declare-fun d!22071 () Bool)

(declare-fun e!55682 () Bool)

(assert (=> d!22071 e!55682))

(declare-fun res!43958 () Bool)

(assert (=> d!22071 (=> (not res!43958) (not e!55682))))

(declare-fun lt!40248 () ListLongMap!1487)

(assert (=> d!22071 (= res!43958 (contains!762 lt!40248 (_1!1126 lt!40172)))))

(declare-fun lt!40247 () List!1552)

(assert (=> d!22071 (= lt!40248 (ListLongMap!1488 lt!40247))))

(declare-fun lt!40249 () Unit!2533)

(declare-fun lt!40250 () Unit!2533)

(assert (=> d!22071 (= lt!40249 lt!40250)))

(assert (=> d!22071 (= (getValueByKey!139 lt!40247 (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172)))))

(assert (=> d!22071 (= lt!40250 (lemmaContainsTupThenGetReturnValue!58 lt!40247 (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(assert (=> d!22071 (= lt!40247 (insertStrictlySorted!60 (toList!759 lt!40169) (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(assert (=> d!22071 (= (+!116 lt!40169 lt!40172) lt!40248)))

(declare-fun b!85330 () Bool)

(declare-fun res!43959 () Bool)

(assert (=> b!85330 (=> (not res!43959) (not e!55682))))

(assert (=> b!85330 (= res!43959 (= (getValueByKey!139 (toList!759 lt!40248) (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172))))))

(declare-fun b!85331 () Bool)

(assert (=> b!85331 (= e!55682 (contains!764 (toList!759 lt!40248) lt!40172))))

(assert (= (and d!22071 res!43958) b!85330))

(assert (= (and b!85330 res!43959) b!85331))

(declare-fun m!89565 () Bool)

(assert (=> d!22071 m!89565))

(declare-fun m!89567 () Bool)

(assert (=> d!22071 m!89567))

(declare-fun m!89569 () Bool)

(assert (=> d!22071 m!89569))

(declare-fun m!89571 () Bool)

(assert (=> d!22071 m!89571))

(declare-fun m!89573 () Bool)

(assert (=> b!85330 m!89573))

(declare-fun m!89575 () Bool)

(assert (=> b!85331 m!89575))

(assert (=> b!85254 d!22071))

(declare-fun d!22073 () Bool)

(declare-fun e!55683 () Bool)

(assert (=> d!22073 e!55683))

(declare-fun res!43960 () Bool)

(assert (=> d!22073 (=> (not res!43960) (not e!55683))))

(declare-fun lt!40252 () ListLongMap!1487)

(assert (=> d!22073 (= res!43960 (contains!762 lt!40252 (_1!1126 lt!40171)))))

(declare-fun lt!40251 () List!1552)

(assert (=> d!22073 (= lt!40252 (ListLongMap!1488 lt!40251))))

(declare-fun lt!40253 () Unit!2533)

(declare-fun lt!40254 () Unit!2533)

(assert (=> d!22073 (= lt!40253 lt!40254)))

(assert (=> d!22073 (= (getValueByKey!139 lt!40251 (_1!1126 lt!40171)) (Some!144 (_2!1126 lt!40171)))))

(assert (=> d!22073 (= lt!40254 (lemmaContainsTupThenGetReturnValue!58 lt!40251 (_1!1126 lt!40171) (_2!1126 lt!40171)))))

(assert (=> d!22073 (= lt!40251 (insertStrictlySorted!60 (toList!759 lt!40176) (_1!1126 lt!40171) (_2!1126 lt!40171)))))

(assert (=> d!22073 (= (+!116 lt!40176 lt!40171) lt!40252)))

(declare-fun b!85332 () Bool)

(declare-fun res!43961 () Bool)

(assert (=> b!85332 (=> (not res!43961) (not e!55683))))

(assert (=> b!85332 (= res!43961 (= (getValueByKey!139 (toList!759 lt!40252) (_1!1126 lt!40171)) (Some!144 (_2!1126 lt!40171))))))

(declare-fun b!85333 () Bool)

(assert (=> b!85333 (= e!55683 (contains!764 (toList!759 lt!40252) lt!40171))))

(assert (= (and d!22073 res!43960) b!85332))

(assert (= (and b!85332 res!43961) b!85333))

(declare-fun m!89577 () Bool)

(assert (=> d!22073 m!89577))

(declare-fun m!89579 () Bool)

(assert (=> d!22073 m!89579))

(declare-fun m!89581 () Bool)

(assert (=> d!22073 m!89581))

(declare-fun m!89583 () Bool)

(assert (=> d!22073 m!89583))

(declare-fun m!89585 () Bool)

(assert (=> b!85332 m!89585))

(declare-fun m!89587 () Bool)

(assert (=> b!85333 m!89587))

(assert (=> b!85254 d!22073))

(declare-fun d!22075 () Bool)

(declare-fun e!55684 () Bool)

(assert (=> d!22075 e!55684))

(declare-fun res!43962 () Bool)

(assert (=> d!22075 (=> (not res!43962) (not e!55684))))

(declare-fun lt!40256 () ListLongMap!1487)

(assert (=> d!22075 (= res!43962 (contains!762 lt!40256 (_1!1126 lt!40172)))))

(declare-fun lt!40255 () List!1552)

(assert (=> d!22075 (= lt!40256 (ListLongMap!1488 lt!40255))))

(declare-fun lt!40257 () Unit!2533)

(declare-fun lt!40258 () Unit!2533)

(assert (=> d!22075 (= lt!40257 lt!40258)))

(assert (=> d!22075 (= (getValueByKey!139 lt!40255 (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172)))))

(assert (=> d!22075 (= lt!40258 (lemmaContainsTupThenGetReturnValue!58 lt!40255 (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(assert (=> d!22075 (= lt!40255 (insertStrictlySorted!60 (toList!759 lt!40173) (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(assert (=> d!22075 (= (+!116 lt!40173 lt!40172) lt!40256)))

(declare-fun b!85334 () Bool)

(declare-fun res!43963 () Bool)

(assert (=> b!85334 (=> (not res!43963) (not e!55684))))

(assert (=> b!85334 (= res!43963 (= (getValueByKey!139 (toList!759 lt!40256) (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172))))))

(declare-fun b!85335 () Bool)

(assert (=> b!85335 (= e!55684 (contains!764 (toList!759 lt!40256) lt!40172))))

(assert (= (and d!22075 res!43962) b!85334))

(assert (= (and b!85334 res!43963) b!85335))

(declare-fun m!89589 () Bool)

(assert (=> d!22075 m!89589))

(declare-fun m!89591 () Bool)

(assert (=> d!22075 m!89591))

(declare-fun m!89593 () Bool)

(assert (=> d!22075 m!89593))

(declare-fun m!89595 () Bool)

(assert (=> d!22075 m!89595))

(declare-fun m!89597 () Bool)

(assert (=> b!85334 m!89597))

(declare-fun m!89599 () Bool)

(assert (=> b!85335 m!89599))

(assert (=> b!85254 d!22075))

(declare-fun d!22077 () Bool)

(assert (=> d!22077 (= (+!116 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (+!116 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun lt!40259 () Unit!2533)

(assert (=> d!22077 (= lt!40259 (choose!506 lt!40169 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))

(assert (=> d!22077 (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22077 (= (addCommutativeForDiffKeys!35 lt!40169 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))) lt!40259)))

(declare-fun bs!3599 () Bool)

(assert (= bs!3599 d!22077))

(declare-fun m!89601 () Bool)

(assert (=> bs!3599 m!89601))

(declare-fun m!89603 () Bool)

(assert (=> bs!3599 m!89603))

(assert (=> bs!3599 m!89417))

(declare-fun m!89605 () Bool)

(assert (=> bs!3599 m!89605))

(declare-fun m!89607 () Bool)

(assert (=> bs!3599 m!89607))

(declare-fun m!89609 () Bool)

(assert (=> bs!3599 m!89609))

(assert (=> bs!3599 m!89601))

(assert (=> bs!3599 m!89607))

(assert (=> b!85254 d!22077))

(declare-fun d!22079 () Bool)

(assert (=> d!22079 (= (validMask!0 (mask!6366 (v!2648 (underlying!293 thiss!992)))) (and (or (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000001111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000011111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000001111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000011111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000001111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000011111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000001111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000011111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000001111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000011111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000001111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000011111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000111111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000001111111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000011111111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000111111111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000001111111111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000011111111111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000111111111111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00001111111111111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00011111111111111111111111111111) (= (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!85254 d!22079))

(declare-fun d!22081 () Bool)

(declare-fun e!55685 () Bool)

(assert (=> d!22081 e!55685))

(declare-fun res!43964 () Bool)

(assert (=> d!22081 (=> (not res!43964) (not e!55685))))

(declare-fun lt!40261 () ListLongMap!1487)

(assert (=> d!22081 (= res!43964 (contains!762 lt!40261 (_1!1126 lt!40163)))))

(declare-fun lt!40260 () List!1552)

(assert (=> d!22081 (= lt!40261 (ListLongMap!1488 lt!40260))))

(declare-fun lt!40262 () Unit!2533)

(declare-fun lt!40263 () Unit!2533)

(assert (=> d!22081 (= lt!40262 lt!40263)))

(assert (=> d!22081 (= (getValueByKey!139 lt!40260 (_1!1126 lt!40163)) (Some!144 (_2!1126 lt!40163)))))

(assert (=> d!22081 (= lt!40263 (lemmaContainsTupThenGetReturnValue!58 lt!40260 (_1!1126 lt!40163) (_2!1126 lt!40163)))))

(assert (=> d!22081 (= lt!40260 (insertStrictlySorted!60 (toList!759 lt!40173) (_1!1126 lt!40163) (_2!1126 lt!40163)))))

(assert (=> d!22081 (= (+!116 lt!40173 lt!40163) lt!40261)))

(declare-fun b!85336 () Bool)

(declare-fun res!43965 () Bool)

(assert (=> b!85336 (=> (not res!43965) (not e!55685))))

(assert (=> b!85336 (= res!43965 (= (getValueByKey!139 (toList!759 lt!40261) (_1!1126 lt!40163)) (Some!144 (_2!1126 lt!40163))))))

(declare-fun b!85337 () Bool)

(assert (=> b!85337 (= e!55685 (contains!764 (toList!759 lt!40261) lt!40163))))

(assert (= (and d!22081 res!43964) b!85336))

(assert (= (and b!85336 res!43965) b!85337))

(declare-fun m!89611 () Bool)

(assert (=> d!22081 m!89611))

(declare-fun m!89613 () Bool)

(assert (=> d!22081 m!89613))

(declare-fun m!89615 () Bool)

(assert (=> d!22081 m!89615))

(declare-fun m!89617 () Bool)

(assert (=> d!22081 m!89617))

(declare-fun m!89619 () Bool)

(assert (=> b!85336 m!89619))

(declare-fun m!89621 () Bool)

(assert (=> b!85337 m!89621))

(assert (=> b!85254 d!22081))

(declare-fun b!85362 () Bool)

(declare-fun e!55701 () Bool)

(declare-fun e!55702 () Bool)

(assert (=> b!85362 (= e!55701 e!55702)))

(declare-fun c!13829 () Bool)

(assert (=> b!85362 (= c!13829 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!85363 () Bool)

(declare-fun e!55700 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!85363 (= e!55700 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85363 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!85364 () Bool)

(declare-fun lt!40279 () Unit!2533)

(declare-fun lt!40281 () Unit!2533)

(assert (=> b!85364 (= lt!40279 lt!40281)))

(declare-fun lt!40278 () ListLongMap!1487)

(declare-fun lt!40283 () V!3027)

(declare-fun lt!40282 () (_ BitVec 64))

(declare-fun lt!40280 () (_ BitVec 64))

(assert (=> b!85364 (not (contains!762 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)) lt!40280))))

(declare-fun addStillNotContains!33 (ListLongMap!1487 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2533)

(assert (=> b!85364 (= lt!40281 (addStillNotContains!33 lt!40278 lt!40282 lt!40283 lt!40280))))

(assert (=> b!85364 (= lt!40280 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!85364 (= lt!40283 (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!85364 (= lt!40282 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!8034 () ListLongMap!1487)

(assert (=> b!85364 (= lt!40278 call!8034)))

(declare-fun e!55703 () ListLongMap!1487)

(assert (=> b!85364 (= e!55703 (+!116 call!8034 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!85365 () Bool)

(declare-fun e!55705 () ListLongMap!1487)

(assert (=> b!85365 (= e!55705 (ListLongMap!1488 Nil!1549))))

(declare-fun b!85367 () Bool)

(declare-fun e!55706 () Bool)

(assert (=> b!85367 (= e!55701 e!55706)))

(assert (=> b!85367 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun res!43977 () Bool)

(declare-fun lt!40284 () ListLongMap!1487)

(assert (=> b!85367 (= res!43977 (contains!762 lt!40284 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85367 (=> (not res!43977) (not e!55706))))

(declare-fun b!85368 () Bool)

(declare-fun isEmpty!340 (ListLongMap!1487) Bool)

(assert (=> b!85368 (= e!55702 (isEmpty!340 lt!40284))))

(declare-fun b!85369 () Bool)

(declare-fun e!55704 () Bool)

(assert (=> b!85369 (= e!55704 e!55701)))

(declare-fun c!13828 () Bool)

(assert (=> b!85369 (= c!13828 e!55700)))

(declare-fun res!43975 () Bool)

(assert (=> b!85369 (=> (not res!43975) (not e!55700))))

(assert (=> b!85369 (= res!43975 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!85370 () Bool)

(assert (=> b!85370 (= e!55703 call!8034)))

(declare-fun b!85371 () Bool)

(assert (=> b!85371 (= e!55705 e!55703)))

(declare-fun c!13826 () Bool)

(assert (=> b!85371 (= c!13826 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85372 () Bool)

(assert (=> b!85372 (= e!55702 (= lt!40284 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun bm!8031 () Bool)

(assert (=> bm!8031 (= call!8034 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun b!85373 () Bool)

(assert (=> b!85373 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> b!85373 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_values!2321 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun apply!82 (ListLongMap!1487 (_ BitVec 64)) V!3027)

(assert (=> b!85373 (= e!55706 (= (apply!82 lt!40284 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!22083 () Bool)

(assert (=> d!22083 e!55704))

(declare-fun res!43974 () Bool)

(assert (=> d!22083 (=> (not res!43974) (not e!55704))))

(assert (=> d!22083 (= res!43974 (not (contains!762 lt!40284 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22083 (= lt!40284 e!55705)))

(declare-fun c!13827 () Bool)

(assert (=> d!22083 (= c!13827 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> d!22083 (validMask!0 (mask!6366 (v!2648 (underlying!293 thiss!992))))))

(assert (=> d!22083 (= (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))) lt!40284)))

(declare-fun b!85366 () Bool)

(declare-fun res!43976 () Bool)

(assert (=> b!85366 (=> (not res!43976) (not e!55704))))

(assert (=> b!85366 (= res!43976 (not (contains!762 lt!40284 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22083 c!13827) b!85365))

(assert (= (and d!22083 (not c!13827)) b!85371))

(assert (= (and b!85371 c!13826) b!85364))

(assert (= (and b!85371 (not c!13826)) b!85370))

(assert (= (or b!85364 b!85370) bm!8031))

(assert (= (and d!22083 res!43974) b!85366))

(assert (= (and b!85366 res!43976) b!85369))

(assert (= (and b!85369 res!43975) b!85363))

(assert (= (and b!85369 c!13828) b!85367))

(assert (= (and b!85369 (not c!13828)) b!85362))

(assert (= (and b!85367 res!43977) b!85373))

(assert (= (and b!85362 c!13829) b!85372))

(assert (= (and b!85362 (not c!13829)) b!85368))

(declare-fun b_lambda!3797 () Bool)

(assert (=> (not b_lambda!3797) (not b!85364)))

(assert (=> b!85364 t!5274))

(declare-fun b_and!5169 () Bool)

(assert (= b_and!5157 (and (=> t!5274 result!2917) b_and!5169)))

(assert (=> b!85364 t!5276))

(declare-fun b_and!5171 () Bool)

(assert (= b_and!5159 (and (=> t!5276 result!2921) b_and!5171)))

(declare-fun b_lambda!3799 () Bool)

(assert (=> (not b_lambda!3799) (not b!85373)))

(assert (=> b!85373 t!5274))

(declare-fun b_and!5173 () Bool)

(assert (= b_and!5169 (and (=> t!5274 result!2917) b_and!5173)))

(assert (=> b!85373 t!5276))

(declare-fun b_and!5175 () Bool)

(assert (= b_and!5171 (and (=> t!5276 result!2921) b_and!5175)))

(declare-fun m!89623 () Bool)

(assert (=> b!85371 m!89623))

(assert (=> b!85371 m!89623))

(declare-fun m!89625 () Bool)

(assert (=> b!85371 m!89625))

(assert (=> b!85363 m!89623))

(assert (=> b!85363 m!89623))

(assert (=> b!85363 m!89625))

(declare-fun m!89627 () Bool)

(assert (=> b!85372 m!89627))

(declare-fun m!89629 () Bool)

(assert (=> d!22083 m!89629))

(assert (=> d!22083 m!89445))

(assert (=> b!85367 m!89623))

(assert (=> b!85367 m!89623))

(declare-fun m!89631 () Bool)

(assert (=> b!85367 m!89631))

(assert (=> bm!8031 m!89627))

(declare-fun m!89633 () Bool)

(assert (=> b!85368 m!89633))

(declare-fun m!89635 () Bool)

(assert (=> b!85364 m!89635))

(declare-fun m!89637 () Bool)

(assert (=> b!85364 m!89637))

(declare-fun m!89639 () Bool)

(assert (=> b!85364 m!89639))

(declare-fun m!89641 () Bool)

(assert (=> b!85364 m!89641))

(assert (=> b!85364 m!89623))

(assert (=> b!85364 m!89427))

(assert (=> b!85364 m!89635))

(assert (=> b!85364 m!89427))

(declare-fun m!89643 () Bool)

(assert (=> b!85364 m!89643))

(assert (=> b!85364 m!89637))

(declare-fun m!89645 () Bool)

(assert (=> b!85364 m!89645))

(assert (=> b!85373 m!89623))

(declare-fun m!89647 () Bool)

(assert (=> b!85373 m!89647))

(assert (=> b!85373 m!89635))

(assert (=> b!85373 m!89635))

(assert (=> b!85373 m!89427))

(assert (=> b!85373 m!89643))

(assert (=> b!85373 m!89623))

(assert (=> b!85373 m!89427))

(declare-fun m!89649 () Bool)

(assert (=> b!85366 m!89649))

(assert (=> b!85254 d!22083))

(declare-fun d!22085 () Bool)

(declare-fun e!55707 () Bool)

(assert (=> d!22085 e!55707))

(declare-fun res!43978 () Bool)

(assert (=> d!22085 (=> (not res!43978) (not e!55707))))

(declare-fun lt!40286 () ListLongMap!1487)

(assert (=> d!22085 (= res!43978 (contains!762 lt!40286 (_1!1126 lt!40163)))))

(declare-fun lt!40285 () List!1552)

(assert (=> d!22085 (= lt!40286 (ListLongMap!1488 lt!40285))))

(declare-fun lt!40287 () Unit!2533)

(declare-fun lt!40288 () Unit!2533)

(assert (=> d!22085 (= lt!40287 lt!40288)))

(assert (=> d!22085 (= (getValueByKey!139 lt!40285 (_1!1126 lt!40163)) (Some!144 (_2!1126 lt!40163)))))

(assert (=> d!22085 (= lt!40288 (lemmaContainsTupThenGetReturnValue!58 lt!40285 (_1!1126 lt!40163) (_2!1126 lt!40163)))))

(assert (=> d!22085 (= lt!40285 (insertStrictlySorted!60 (toList!759 lt!40170) (_1!1126 lt!40163) (_2!1126 lt!40163)))))

(assert (=> d!22085 (= (+!116 lt!40170 lt!40163) lt!40286)))

(declare-fun b!85374 () Bool)

(declare-fun res!43979 () Bool)

(assert (=> b!85374 (=> (not res!43979) (not e!55707))))

(assert (=> b!85374 (= res!43979 (= (getValueByKey!139 (toList!759 lt!40286) (_1!1126 lt!40163)) (Some!144 (_2!1126 lt!40163))))))

(declare-fun b!85375 () Bool)

(assert (=> b!85375 (= e!55707 (contains!764 (toList!759 lt!40286) lt!40163))))

(assert (= (and d!22085 res!43978) b!85374))

(assert (= (and b!85374 res!43979) b!85375))

(declare-fun m!89651 () Bool)

(assert (=> d!22085 m!89651))

(declare-fun m!89653 () Bool)

(assert (=> d!22085 m!89653))

(declare-fun m!89655 () Bool)

(assert (=> d!22085 m!89655))

(declare-fun m!89657 () Bool)

(assert (=> d!22085 m!89657))

(declare-fun m!89659 () Bool)

(assert (=> b!85374 m!89659))

(declare-fun m!89661 () Bool)

(assert (=> b!85375 m!89661))

(assert (=> b!85254 d!22085))

(declare-fun d!22087 () Bool)

(declare-fun e!55708 () Bool)

(assert (=> d!22087 e!55708))

(declare-fun res!43980 () Bool)

(assert (=> d!22087 (=> (not res!43980) (not e!55708))))

(declare-fun lt!40290 () ListLongMap!1487)

(assert (=> d!22087 (= res!43980 (contains!762 lt!40290 (_1!1126 lt!40172)))))

(declare-fun lt!40289 () List!1552)

(assert (=> d!22087 (= lt!40290 (ListLongMap!1488 lt!40289))))

(declare-fun lt!40291 () Unit!2533)

(declare-fun lt!40292 () Unit!2533)

(assert (=> d!22087 (= lt!40291 lt!40292)))

(assert (=> d!22087 (= (getValueByKey!139 lt!40289 (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172)))))

(assert (=> d!22087 (= lt!40292 (lemmaContainsTupThenGetReturnValue!58 lt!40289 (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(assert (=> d!22087 (= lt!40289 (insertStrictlySorted!60 (toList!759 (+!116 lt!40169 lt!40171)) (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(assert (=> d!22087 (= (+!116 (+!116 lt!40169 lt!40171) lt!40172) lt!40290)))

(declare-fun b!85376 () Bool)

(declare-fun res!43981 () Bool)

(assert (=> b!85376 (=> (not res!43981) (not e!55708))))

(assert (=> b!85376 (= res!43981 (= (getValueByKey!139 (toList!759 lt!40290) (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172))))))

(declare-fun b!85377 () Bool)

(assert (=> b!85377 (= e!55708 (contains!764 (toList!759 lt!40290) lt!40172))))

(assert (= (and d!22087 res!43980) b!85376))

(assert (= (and b!85376 res!43981) b!85377))

(declare-fun m!89663 () Bool)

(assert (=> d!22087 m!89663))

(declare-fun m!89665 () Bool)

(assert (=> d!22087 m!89665))

(declare-fun m!89667 () Bool)

(assert (=> d!22087 m!89667))

(declare-fun m!89669 () Bool)

(assert (=> d!22087 m!89669))

(declare-fun m!89671 () Bool)

(assert (=> b!85376 m!89671))

(declare-fun m!89673 () Bool)

(assert (=> b!85377 m!89673))

(assert (=> b!85254 d!22087))

(declare-fun d!22089 () Bool)

(declare-fun e!55714 () Bool)

(assert (=> d!22089 e!55714))

(declare-fun res!43984 () Bool)

(assert (=> d!22089 (=> res!43984 e!55714)))

(declare-fun lt!40303 () Bool)

(assert (=> d!22089 (= res!43984 (not lt!40303))))

(declare-fun lt!40304 () Bool)

(assert (=> d!22089 (= lt!40303 lt!40304)))

(declare-fun lt!40302 () Unit!2533)

(declare-fun e!55713 () Unit!2533)

(assert (=> d!22089 (= lt!40302 e!55713)))

(declare-fun c!13832 () Bool)

(assert (=> d!22089 (= c!13832 lt!40304)))

(declare-fun containsKey!143 (List!1552 (_ BitVec 64)) Bool)

(assert (=> d!22089 (= lt!40304 (containsKey!143 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22089 (= (contains!762 lt!40177 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) lt!40303)))

(declare-fun b!85384 () Bool)

(declare-fun lt!40301 () Unit!2533)

(assert (=> b!85384 (= e!55713 lt!40301)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!92 (List!1552 (_ BitVec 64)) Unit!2533)

(assert (=> b!85384 (= lt!40301 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun isDefined!93 (Option!145) Bool)

(assert (=> b!85384 (isDefined!93 (getValueByKey!139 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!85385 () Bool)

(declare-fun Unit!2541 () Unit!2533)

(assert (=> b!85385 (= e!55713 Unit!2541)))

(declare-fun b!85386 () Bool)

(assert (=> b!85386 (= e!55714 (isDefined!93 (getValueByKey!139 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (= (and d!22089 c!13832) b!85384))

(assert (= (and d!22089 (not c!13832)) b!85385))

(assert (= (and d!22089 (not res!43984)) b!85386))

(assert (=> d!22089 m!89417))

(declare-fun m!89675 () Bool)

(assert (=> d!22089 m!89675))

(assert (=> b!85384 m!89417))

(declare-fun m!89677 () Bool)

(assert (=> b!85384 m!89677))

(assert (=> b!85384 m!89417))

(declare-fun m!89679 () Bool)

(assert (=> b!85384 m!89679))

(assert (=> b!85384 m!89679))

(declare-fun m!89681 () Bool)

(assert (=> b!85384 m!89681))

(assert (=> b!85386 m!89417))

(assert (=> b!85386 m!89679))

(assert (=> b!85386 m!89679))

(assert (=> b!85386 m!89681))

(assert (=> b!85249 d!22089))

(declare-fun bm!8080 () Bool)

(declare-fun call!8094 () ListLongMap!1487)

(declare-fun call!8089 () ListLongMap!1487)

(assert (=> bm!8080 (= call!8094 call!8089)))

(declare-fun bm!8081 () Bool)

(declare-fun call!8093 () ListLongMap!1487)

(assert (=> bm!8081 (= call!8093 call!8089)))

(declare-fun b!85472 () Bool)

(declare-fun e!55771 () Bool)

(declare-fun call!8088 () Bool)

(assert (=> b!85472 (= e!55771 (not call!8088))))

(declare-fun call!8102 () tuple2!2234)

(declare-fun c!13871 () Bool)

(declare-datatypes ((SeekEntryResult!253 0))(
  ( (MissingZero!253 (index!3149 (_ BitVec 32))) (Found!253 (index!3150 (_ BitVec 32))) (Intermediate!253 (undefined!1065 Bool) (index!3151 (_ BitVec 32)) (x!12006 (_ BitVec 32))) (Undefined!253) (MissingVacant!253 (index!3152 (_ BitVec 32))) )
))
(declare-fun lt!40372 () SeekEntryResult!253)

(declare-fun bm!8082 () Bool)

(declare-fun updateHelperNewKey!31 (LongMapFixedSize!756 (_ BitVec 64) V!3027 (_ BitVec 32)) tuple2!2234)

(assert (=> bm!8082 (= call!8102 (updateHelperNewKey!31 newMap!16 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372))))))

(declare-fun b!85473 () Bool)

(declare-fun res!44013 () Bool)

(declare-fun lt!40363 () SeekEntryResult!253)

(assert (=> b!85473 (= res!44013 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3152 lt!40363)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55767 () Bool)

(assert (=> b!85473 (=> (not res!44013) (not e!55767))))

(declare-fun b!85474 () Bool)

(declare-fun res!44018 () Bool)

(declare-fun lt!40359 () SeekEntryResult!253)

(assert (=> b!85474 (= res!44018 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3152 lt!40359)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85474 (=> (not res!44018) (not e!55771))))

(declare-fun bm!8083 () Bool)

(declare-fun call!8098 () ListLongMap!1487)

(declare-fun lt!40373 () tuple2!2234)

(assert (=> bm!8083 (= call!8098 (map!1195 (_2!1127 lt!40373)))))

(declare-fun b!85475 () Bool)

(declare-fun e!55773 () ListLongMap!1487)

(assert (=> b!85475 (= e!55773 call!8094)))

(declare-fun b!85476 () Bool)

(declare-fun e!55762 () tuple2!2234)

(declare-fun e!55779 () tuple2!2234)

(assert (=> b!85476 (= e!55762 e!55779)))

(declare-fun c!13861 () Bool)

(assert (=> b!85476 (= c!13861 ((_ is MissingZero!253) lt!40372))))

(declare-fun bm!8084 () Bool)

(declare-fun call!8096 () ListLongMap!1487)

(declare-fun call!8092 () ListLongMap!1487)

(assert (=> bm!8084 (= call!8096 call!8092)))

(declare-fun b!85477 () Bool)

(declare-fun e!55778 () Unit!2533)

(declare-fun Unit!2542 () Unit!2533)

(assert (=> b!85477 (= e!55778 Unit!2542)))

(declare-fun lt!40369 () Unit!2533)

(declare-fun call!8086 () Unit!2533)

(assert (=> b!85477 (= lt!40369 call!8086)))

(declare-fun call!8104 () SeekEntryResult!253)

(assert (=> b!85477 (= lt!40363 call!8104)))

(declare-fun c!13866 () Bool)

(assert (=> b!85477 (= c!13866 ((_ is MissingZero!253) lt!40363))))

(declare-fun e!55760 () Bool)

(assert (=> b!85477 e!55760))

(declare-fun lt!40361 () Unit!2533)

(assert (=> b!85477 (= lt!40361 lt!40369)))

(assert (=> b!85477 false))

(declare-fun d!22091 () Bool)

(declare-fun e!55761 () Bool)

(assert (=> d!22091 e!55761))

(declare-fun res!44015 () Bool)

(assert (=> d!22091 (=> (not res!44015) (not e!55761))))

(assert (=> d!22091 (= res!44015 (valid!327 (_2!1127 lt!40373)))))

(declare-fun e!55766 () tuple2!2234)

(assert (=> d!22091 (= lt!40373 e!55766)))

(declare-fun c!13870 () Bool)

(assert (=> d!22091 (= c!13870 (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvneg (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (=> d!22091 (valid!327 newMap!16)))

(assert (=> d!22091 (= (update!122 newMap!16 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164) lt!40373)))

(declare-fun b!85471 () Bool)

(declare-fun e!55768 () Bool)

(assert (=> b!85471 (= e!55768 ((_ is Undefined!253) lt!40359))))

(declare-fun b!85478 () Bool)

(declare-fun e!55765 () Bool)

(assert (=> b!85478 (= e!55765 ((_ is Undefined!253) lt!40363))))

(declare-fun b!85479 () Bool)

(declare-fun e!55776 () Bool)

(declare-fun lt!40378 () SeekEntryResult!253)

(assert (=> b!85479 (= e!55776 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40378)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!85480 () Bool)

(declare-fun lt!40362 () Unit!2533)

(declare-fun lt!40375 () Unit!2533)

(assert (=> b!85480 (= lt!40362 lt!40375)))

(declare-fun call!8087 () Bool)

(assert (=> b!85480 call!8087))

(declare-fun lt!40379 () array!4030)

(declare-fun lemmaValidKeyInArrayIsInListMap!89 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) Int) Unit!2533)

(assert (=> b!85480 (= lt!40375 (lemmaValidKeyInArrayIsInListMap!89 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3150 lt!40372) (defaultEntry!2338 newMap!16)))))

(assert (=> b!85480 (= lt!40379 (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))))

(declare-fun lt!40365 () Unit!2533)

(declare-fun lt!40384 () Unit!2533)

(assert (=> b!85480 (= lt!40365 lt!40384)))

(assert (=> b!85480 (= call!8092 call!8093)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) (_ BitVec 64) V!3027 Int) Unit!2533)

(assert (=> b!85480 (= lt!40384 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3150 lt!40372) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40374 () Unit!2533)

(assert (=> b!85480 (= lt!40374 e!55778)))

(declare-fun c!13864 () Bool)

(assert (=> b!85480 (= c!13864 (contains!762 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> b!85480 (= e!55779 (tuple2!2235 true (LongMapFixedSize!757 (defaultEntry!2338 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (_size!427 newMap!16) (_keys!4010 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (_vacant!427 newMap!16))))))

(declare-fun b!85481 () Bool)

(declare-fun e!55775 () tuple2!2234)

(assert (=> b!85481 (= e!55766 e!55775)))

(declare-fun c!13872 () Bool)

(assert (=> b!85481 (= c!13872 (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85482 () Bool)

(declare-fun res!44020 () Bool)

(declare-fun e!55780 () Bool)

(assert (=> b!85482 (=> (not res!44020) (not e!55780))))

(assert (=> b!85482 (= res!44020 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3149 lt!40359)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8085 () Bool)

(declare-fun call!8097 () Bool)

(declare-fun call!8090 () Bool)

(assert (=> bm!8085 (= call!8097 call!8090)))

(declare-fun bm!8086 () Bool)

(declare-fun call!8103 () ListLongMap!1487)

(declare-fun call!8084 () ListLongMap!1487)

(assert (=> bm!8086 (= call!8103 call!8084)))

(declare-fun bm!8087 () Bool)

(declare-fun c!13874 () Bool)

(declare-fun c!13868 () Bool)

(assert (=> bm!8087 (= c!13874 c!13868)))

(declare-fun e!55772 () ListLongMap!1487)

(assert (=> bm!8087 (= call!8087 (contains!762 e!55772 (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))

(declare-fun b!85483 () Bool)

(declare-fun e!55777 () Bool)

(declare-fun call!8106 () Bool)

(assert (=> b!85483 (= e!55777 (not call!8106))))

(declare-fun bm!8088 () Bool)

(declare-fun call!8091 () Bool)

(declare-fun call!8101 () Bool)

(assert (=> bm!8088 (= call!8091 call!8101)))

(declare-fun b!85484 () Bool)

(declare-fun res!44026 () Bool)

(assert (=> b!85484 (=> (not res!44026) (not e!55777))))

(assert (=> b!85484 (= res!44026 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3149 lt!40363)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85485 () Bool)

(declare-fun lt!40381 () Unit!2533)

(declare-fun lt!40383 () Unit!2533)

(assert (=> b!85485 (= lt!40381 lt!40383)))

(assert (=> b!85485 (= call!8096 call!8103)))

(declare-fun lt!40385 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 V!3027 Int) Unit!2533)

(assert (=> b!85485 (= lt!40383 (lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40385 (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) lt!40164 (defaultEntry!2338 newMap!16)))))

(assert (=> b!85485 (= lt!40385 (bvor (extraKeys!2177 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!85485 (= e!55775 (tuple2!2235 true (LongMapFixedSize!757 (defaultEntry!2338 newMap!16) (mask!6366 newMap!16) (bvor (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) (zeroValue!2230 newMap!16) lt!40164 (_size!427 newMap!16) (_keys!4010 newMap!16) (_values!2321 newMap!16) (_vacant!427 newMap!16))))))

(declare-fun b!85486 () Bool)

(assert (=> b!85486 (= e!55773 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!85487 () Bool)

(assert (=> b!85487 (= e!55780 (not call!8088))))

(declare-fun lt!40377 () SeekEntryResult!253)

(declare-fun bm!8089 () Bool)

(declare-fun c!13865 () Bool)

(declare-fun c!13867 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!8089 (= call!8101 (inRange!0 (ite c!13868 (ite c!13865 (index!3150 lt!40378) (ite c!13867 (index!3149 lt!40359) (index!3152 lt!40359))) (ite c!13864 (index!3150 lt!40377) (ite c!13866 (index!3149 lt!40363) (index!3152 lt!40363)))) (mask!6366 newMap!16)))))

(declare-fun bm!8090 () Bool)

(assert (=> bm!8090 (= call!8089 (getCurrentListMap!443 (_keys!4010 newMap!16) (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!85488 () Bool)

(declare-fun res!44016 () Bool)

(assert (=> b!85488 (= res!44016 call!8090)))

(declare-fun e!55769 () Bool)

(assert (=> b!85488 (=> (not res!44016) (not e!55769))))

(declare-fun b!85489 () Bool)

(declare-fun e!55770 () Bool)

(declare-fun e!55764 () Bool)

(assert (=> b!85489 (= e!55770 e!55764)))

(declare-fun res!44025 () Bool)

(assert (=> b!85489 (= res!44025 (contains!762 call!8098 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> b!85489 (=> (not res!44025) (not e!55764))))

(declare-fun bm!8091 () Bool)

(declare-fun call!8099 () SeekEntryResult!253)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4028 (_ BitVec 32)) SeekEntryResult!253)

(assert (=> bm!8091 (= call!8099 (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!85490 () Bool)

(declare-fun res!44023 () Bool)

(assert (=> b!85490 (= res!44023 call!8091)))

(assert (=> b!85490 (=> (not res!44023) (not e!55776))))

(declare-fun b!85491 () Bool)

(declare-fun res!44019 () Bool)

(assert (=> b!85491 (=> (not res!44019) (not e!55777))))

(assert (=> b!85491 (= res!44019 call!8097)))

(assert (=> b!85491 (= e!55760 e!55777)))

(declare-fun b!85492 () Bool)

(assert (=> b!85492 (= e!55767 (not call!8106))))

(declare-fun b!85493 () Bool)

(declare-fun e!55763 () tuple2!2234)

(assert (=> b!85493 (= e!55766 e!55763)))

(assert (=> b!85493 (= lt!40372 (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(assert (=> b!85493 (= c!13868 ((_ is Undefined!253) lt!40372))))

(declare-fun bm!8092 () Bool)

(declare-fun call!8095 () Bool)

(assert (=> bm!8092 (= call!8088 call!8095)))

(declare-fun b!85494 () Bool)

(assert (=> b!85494 (= e!55772 call!8084)))

(declare-fun b!85495 () Bool)

(declare-fun res!44021 () Bool)

(assert (=> b!85495 (=> (not res!44021) (not e!55780))))

(declare-fun call!8083 () Bool)

(assert (=> b!85495 (= res!44021 call!8083)))

(declare-fun e!55774 () Bool)

(assert (=> b!85495 (= e!55774 e!55780)))

(declare-fun b!85496 () Bool)

(declare-fun lt!40370 () Unit!2533)

(declare-fun lt!40368 () Unit!2533)

(assert (=> b!85496 (= lt!40370 lt!40368)))

(assert (=> b!85496 (= call!8096 call!8103)))

(declare-fun lt!40380 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!31 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 V!3027 Int) Unit!2533)

(assert (=> b!85496 (= lt!40368 (lemmaChangeZeroKeyThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40380 (zeroValue!2230 newMap!16) lt!40164 (minValue!2230 newMap!16) (defaultEntry!2338 newMap!16)))))

(assert (=> b!85496 (= lt!40380 (bvor (extraKeys!2177 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!85496 (= e!55775 (tuple2!2235 true (LongMapFixedSize!757 (defaultEntry!2338 newMap!16) (mask!6366 newMap!16) (bvor (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) lt!40164 (minValue!2230 newMap!16) (_size!427 newMap!16) (_keys!4010 newMap!16) (_values!2321 newMap!16) (_vacant!427 newMap!16))))))

(declare-fun bm!8093 () Bool)

(assert (=> bm!8093 (= call!8095 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!8094 () Bool)

(assert (=> bm!8094 (= call!8090 call!8101)))

(declare-fun b!85497 () Bool)

(assert (=> b!85497 (= c!13871 ((_ is MissingVacant!253) lt!40372))))

(assert (=> b!85497 (= e!55763 e!55762)))

(declare-fun bm!8095 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) Int) Unit!2533)

(assert (=> bm!8095 (= call!8086 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(declare-fun bm!8096 () Bool)

(declare-fun call!8100 () Unit!2533)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) Int) Unit!2533)

(assert (=> bm!8096 (= call!8100 (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(declare-fun bm!8097 () Bool)

(declare-fun call!8105 () SeekEntryResult!253)

(assert (=> bm!8097 (= call!8105 call!8099)))

(declare-fun b!85498 () Bool)

(declare-fun lt!40376 () tuple2!2234)

(assert (=> b!85498 (= lt!40376 call!8102)))

(assert (=> b!85498 (= e!55779 (tuple2!2235 (_1!1127 lt!40376) (_2!1127 lt!40376)))))

(declare-fun b!85499 () Bool)

(declare-fun lt!40360 () Unit!2533)

(declare-fun e!55759 () Unit!2533)

(assert (=> b!85499 (= lt!40360 e!55759)))

(assert (=> b!85499 (= c!13865 call!8087)))

(assert (=> b!85499 (= e!55763 (tuple2!2235 false newMap!16))))

(declare-fun bm!8098 () Bool)

(assert (=> bm!8098 (= call!8104 call!8099)))

(declare-fun b!85500 () Bool)

(declare-fun c!13869 () Bool)

(assert (=> b!85500 (= c!13869 ((_ is MissingVacant!253) lt!40359))))

(assert (=> b!85500 (= e!55774 e!55768)))

(declare-fun b!85501 () Bool)

(assert (=> b!85501 (= e!55772 call!8093)))

(declare-fun b!85502 () Bool)

(declare-fun lt!40366 () Unit!2533)

(assert (=> b!85502 (= e!55759 lt!40366)))

(assert (=> b!85502 (= lt!40366 call!8086)))

(assert (=> b!85502 (= lt!40359 call!8105)))

(assert (=> b!85502 (= c!13867 ((_ is MissingZero!253) lt!40359))))

(assert (=> b!85502 e!55774))

(declare-fun b!85503 () Bool)

(assert (=> b!85503 (= e!55769 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40377)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!85504 () Bool)

(declare-fun lt!40367 () Unit!2533)

(assert (=> b!85504 (= e!55778 lt!40367)))

(assert (=> b!85504 (= lt!40367 call!8100)))

(assert (=> b!85504 (= lt!40377 call!8104)))

(declare-fun res!44024 () Bool)

(assert (=> b!85504 (= res!44024 ((_ is Found!253) lt!40377))))

(assert (=> b!85504 (=> (not res!44024) (not e!55769))))

(assert (=> b!85504 e!55769))

(declare-fun bm!8099 () Bool)

(assert (=> bm!8099 (= call!8092 (+!116 e!55773 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun c!13862 () Bool)

(assert (=> bm!8099 (= c!13862 c!13870)))

(declare-fun bm!8100 () Bool)

(assert (=> bm!8100 (= call!8083 call!8091)))

(declare-fun bm!8101 () Bool)

(declare-fun call!8085 () ListLongMap!1487)

(assert (=> bm!8101 (= call!8085 (map!1195 newMap!16))))

(declare-fun b!85505 () Bool)

(assert (=> b!85505 (= e!55768 e!55771)))

(declare-fun res!44017 () Bool)

(assert (=> b!85505 (= res!44017 call!8083)))

(assert (=> b!85505 (=> (not res!44017) (not e!55771))))

(declare-fun b!85506 () Bool)

(declare-fun lt!40364 () tuple2!2234)

(assert (=> b!85506 (= e!55762 (tuple2!2235 (_1!1127 lt!40364) (_2!1127 lt!40364)))))

(assert (=> b!85506 (= lt!40364 call!8102)))

(declare-fun b!85507 () Bool)

(declare-fun c!13863 () Bool)

(assert (=> b!85507 (= c!13863 ((_ is MissingVacant!253) lt!40363))))

(assert (=> b!85507 (= e!55760 e!55765)))

(declare-fun bm!8102 () Bool)

(assert (=> bm!8102 (= call!8084 (getCurrentListMap!443 (_keys!4010 newMap!16) (ite c!13870 (_values!2321 newMap!16) lt!40379) (mask!6366 newMap!16) (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!85508 () Bool)

(assert (=> b!85508 (= e!55764 (= call!8098 (+!116 call!8085 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!85509 () Bool)

(declare-fun Unit!2543 () Unit!2533)

(assert (=> b!85509 (= e!55759 Unit!2543)))

(declare-fun lt!40382 () Unit!2533)

(assert (=> b!85509 (= lt!40382 call!8100)))

(assert (=> b!85509 (= lt!40378 call!8105)))

(declare-fun res!44022 () Bool)

(assert (=> b!85509 (= res!44022 ((_ is Found!253) lt!40378))))

(assert (=> b!85509 (=> (not res!44022) (not e!55776))))

(assert (=> b!85509 e!55776))

(declare-fun lt!40371 () Unit!2533)

(assert (=> b!85509 (= lt!40371 lt!40382)))

(assert (=> b!85509 false))

(declare-fun b!85510 () Bool)

(assert (=> b!85510 (= e!55765 e!55767)))

(declare-fun res!44014 () Bool)

(assert (=> b!85510 (= res!44014 call!8097)))

(assert (=> b!85510 (=> (not res!44014) (not e!55767))))

(declare-fun b!85511 () Bool)

(assert (=> b!85511 (= e!55761 e!55770)))

(declare-fun c!13873 () Bool)

(assert (=> b!85511 (= c!13873 (_1!1127 lt!40373))))

(declare-fun bm!8103 () Bool)

(assert (=> bm!8103 (= call!8106 call!8095)))

(declare-fun b!85512 () Bool)

(assert (=> b!85512 (= e!55770 (= call!8098 call!8085))))

(assert (= (and d!22091 c!13870) b!85481))

(assert (= (and d!22091 (not c!13870)) b!85493))

(assert (= (and b!85481 c!13872) b!85496))

(assert (= (and b!85481 (not c!13872)) b!85485))

(assert (= (or b!85496 b!85485) bm!8086))

(assert (= (or b!85496 b!85485) bm!8080))

(assert (= (or b!85496 b!85485) bm!8084))

(assert (= (and b!85493 c!13868) b!85499))

(assert (= (and b!85493 (not c!13868)) b!85497))

(assert (= (and b!85499 c!13865) b!85509))

(assert (= (and b!85499 (not c!13865)) b!85502))

(assert (= (and b!85509 res!44022) b!85490))

(assert (= (and b!85490 res!44023) b!85479))

(assert (= (and b!85502 c!13867) b!85495))

(assert (= (and b!85502 (not c!13867)) b!85500))

(assert (= (and b!85495 res!44021) b!85482))

(assert (= (and b!85482 res!44020) b!85487))

(assert (= (and b!85500 c!13869) b!85505))

(assert (= (and b!85500 (not c!13869)) b!85471))

(assert (= (and b!85505 res!44017) b!85474))

(assert (= (and b!85474 res!44018) b!85472))

(assert (= (or b!85495 b!85505) bm!8100))

(assert (= (or b!85487 b!85472) bm!8092))

(assert (= (or b!85490 bm!8100) bm!8088))

(assert (= (or b!85509 b!85502) bm!8097))

(assert (= (and b!85497 c!13871) b!85506))

(assert (= (and b!85497 (not c!13871)) b!85476))

(assert (= (and b!85476 c!13861) b!85498))

(assert (= (and b!85476 (not c!13861)) b!85480))

(assert (= (and b!85480 c!13864) b!85504))

(assert (= (and b!85480 (not c!13864)) b!85477))

(assert (= (and b!85504 res!44024) b!85488))

(assert (= (and b!85488 res!44016) b!85503))

(assert (= (and b!85477 c!13866) b!85491))

(assert (= (and b!85477 (not c!13866)) b!85507))

(assert (= (and b!85491 res!44019) b!85484))

(assert (= (and b!85484 res!44026) b!85483))

(assert (= (and b!85507 c!13863) b!85510))

(assert (= (and b!85507 (not c!13863)) b!85478))

(assert (= (and b!85510 res!44014) b!85473))

(assert (= (and b!85473 res!44013) b!85492))

(assert (= (or b!85491 b!85510) bm!8085))

(assert (= (or b!85483 b!85492) bm!8103))

(assert (= (or b!85488 bm!8085) bm!8094))

(assert (= (or b!85504 b!85477) bm!8098))

(assert (= (or b!85506 b!85498) bm!8082))

(assert (= (or bm!8092 bm!8103) bm!8093))

(assert (= (or bm!8097 bm!8098) bm!8091))

(assert (= (or bm!8088 bm!8094) bm!8089))

(assert (= (or b!85509 b!85504) bm!8096))

(assert (= (or b!85499 b!85480) bm!8081))

(assert (= (or b!85502 b!85477) bm!8095))

(assert (= (or b!85499 b!85480) bm!8087))

(assert (= (and bm!8087 c!13874) b!85501))

(assert (= (and bm!8087 (not c!13874)) b!85494))

(assert (= (or bm!8080 bm!8081) bm!8090))

(assert (= (or bm!8086 b!85494) bm!8102))

(assert (= (or bm!8084 b!85480) bm!8099))

(assert (= (and bm!8099 c!13862) b!85475))

(assert (= (and bm!8099 (not c!13862)) b!85486))

(assert (= (and d!22091 res!44015) b!85511))

(assert (= (and b!85511 c!13873) b!85489))

(assert (= (and b!85511 (not c!13873)) b!85512))

(assert (= (and b!85489 res!44025) b!85508))

(assert (= (or b!85508 b!85512) bm!8101))

(assert (= (or b!85489 b!85508 b!85512) bm!8083))

(declare-fun m!89683 () Bool)

(assert (=> b!85486 m!89683))

(declare-fun m!89685 () Bool)

(assert (=> b!85479 m!89685))

(declare-fun m!89687 () Bool)

(assert (=> b!85482 m!89687))

(declare-fun m!89689 () Bool)

(assert (=> d!22091 m!89689))

(assert (=> d!22091 m!89437))

(declare-fun m!89691 () Bool)

(assert (=> bm!8087 m!89691))

(declare-fun m!89693 () Bool)

(assert (=> bm!8087 m!89693))

(assert (=> bm!8093 m!89417))

(declare-fun m!89695 () Bool)

(assert (=> bm!8093 m!89695))

(assert (=> b!85493 m!89417))

(declare-fun m!89697 () Bool)

(assert (=> b!85493 m!89697))

(declare-fun m!89699 () Bool)

(assert (=> b!85496 m!89699))

(assert (=> bm!8082 m!89417))

(declare-fun m!89701 () Bool)

(assert (=> bm!8082 m!89701))

(assert (=> b!85489 m!89417))

(declare-fun m!89703 () Bool)

(assert (=> b!85489 m!89703))

(declare-fun m!89705 () Bool)

(assert (=> bm!8099 m!89705))

(declare-fun m!89707 () Bool)

(assert (=> b!85503 m!89707))

(assert (=> bm!8096 m!89417))

(declare-fun m!89709 () Bool)

(assert (=> bm!8096 m!89709))

(assert (=> bm!8095 m!89417))

(declare-fun m!89711 () Bool)

(assert (=> bm!8095 m!89711))

(declare-fun m!89713 () Bool)

(assert (=> b!85474 m!89713))

(declare-fun m!89715 () Bool)

(assert (=> bm!8089 m!89715))

(declare-fun m!89717 () Bool)

(assert (=> bm!8090 m!89717))

(declare-fun m!89719 () Bool)

(assert (=> bm!8090 m!89719))

(declare-fun m!89721 () Bool)

(assert (=> bm!8083 m!89721))

(assert (=> bm!8091 m!89417))

(assert (=> bm!8091 m!89697))

(declare-fun m!89723 () Bool)

(assert (=> b!85484 m!89723))

(declare-fun m!89725 () Bool)

(assert (=> b!85485 m!89725))

(assert (=> bm!8101 m!89473))

(declare-fun m!89727 () Bool)

(assert (=> b!85473 m!89727))

(declare-fun m!89729 () Bool)

(assert (=> bm!8102 m!89729))

(declare-fun m!89731 () Bool)

(assert (=> b!85508 m!89731))

(assert (=> b!85480 m!89417))

(declare-fun m!89733 () Bool)

(assert (=> b!85480 m!89733))

(assert (=> b!85480 m!89683))

(assert (=> b!85480 m!89683))

(assert (=> b!85480 m!89417))

(declare-fun m!89735 () Bool)

(assert (=> b!85480 m!89735))

(assert (=> b!85480 m!89717))

(declare-fun m!89737 () Bool)

(assert (=> b!85480 m!89737))

(assert (=> b!85249 d!22091))

(declare-fun d!22093 () Bool)

(assert (=> d!22093 (= (array_inv!1149 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvsge (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!85245 d!22093))

(declare-fun d!22095 () Bool)

(assert (=> d!22095 (= (array_inv!1150 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvsge (size!2163 (_values!2321 (v!2648 (underlying!293 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!85245 d!22095))

(declare-fun d!22097 () Bool)

(assert (=> d!22097 (= (array_inv!1149 (_keys!4010 newMap!16)) (bvsge (size!2162 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85246 d!22097))

(declare-fun d!22099 () Bool)

(assert (=> d!22099 (= (array_inv!1150 (_values!2321 newMap!16)) (bvsge (size!2163 (_values!2321 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85246 d!22099))

(declare-fun d!22101 () Bool)

(assert (=> d!22101 (not (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40388 () Unit!2533)

(declare-fun choose!68 (array!4028 (_ BitVec 32) (_ BitVec 64) List!1553) Unit!2533)

(assert (=> d!22101 (= lt!40388 (choose!68 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550)))))

(assert (=> d!22101 (bvslt (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!22101 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550)) lt!40388)))

(declare-fun bs!3600 () Bool)

(assert (= bs!3600 d!22101))

(assert (=> bs!3600 m!89417))

(assert (=> bs!3600 m!89421))

(assert (=> bs!3600 m!89417))

(declare-fun m!89739 () Bool)

(assert (=> bs!3600 m!89739))

(assert (=> b!85256 d!22101))

(declare-fun d!22103 () Bool)

(assert (=> d!22103 (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) from!355 Nil!1550)))

(declare-fun lt!40391 () Unit!2533)

(declare-fun choose!39 (array!4028 (_ BitVec 32) (_ BitVec 32)) Unit!2533)

(assert (=> d!22103 (= lt!40391 (choose!39 (_keys!4010 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!22103 (bvslt (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!22103 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000 from!355) lt!40391)))

(declare-fun bs!3601 () Bool)

(assert (= bs!3601 d!22103))

(assert (=> bs!3601 m!89415))

(declare-fun m!89741 () Bool)

(assert (=> bs!3601 m!89741))

(assert (=> b!85256 d!22103))

(declare-fun d!22105 () Bool)

(declare-fun res!44031 () Bool)

(declare-fun e!55785 () Bool)

(assert (=> d!22105 (=> res!44031 e!55785)))

(assert (=> d!22105 (= res!44031 (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22105 (= (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!55785)))

(declare-fun b!85517 () Bool)

(declare-fun e!55786 () Bool)

(assert (=> b!85517 (= e!55785 e!55786)))

(declare-fun res!44032 () Bool)

(assert (=> b!85517 (=> (not res!44032) (not e!55786))))

(assert (=> b!85517 (= res!44032 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!85518 () Bool)

(assert (=> b!85518 (= e!55786 (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!22105 (not res!44031)) b!85517))

(assert (= (and b!85517 res!44032) b!85518))

(assert (=> d!22105 m!89623))

(assert (=> b!85518 m!89417))

(declare-fun m!89743 () Bool)

(assert (=> b!85518 m!89743))

(assert (=> b!85256 d!22105))

(declare-fun d!22107 () Bool)

(declare-fun e!55789 () Bool)

(assert (=> d!22107 e!55789))

(declare-fun c!13877 () Bool)

(assert (=> d!22107 (= c!13877 (and (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!40394 () Unit!2533)

(declare-fun choose!507 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) (_ BitVec 32) Int) Unit!2533)

(assert (=> d!22107 (= lt!40394 (choose!507 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(assert (=> d!22107 (validMask!0 (mask!6366 (v!2648 (underlying!293 thiss!992))))))

(assert (=> d!22107 (= (lemmaListMapContainsThenArrayContainsFrom!72 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))) lt!40394)))

(declare-fun b!85523 () Bool)

(assert (=> b!85523 (= e!55789 (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!85524 () Bool)

(assert (=> b!85524 (= e!55789 (ite (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!22107 c!13877) b!85523))

(assert (= (and d!22107 (not c!13877)) b!85524))

(assert (=> d!22107 m!89417))

(declare-fun m!89745 () Bool)

(assert (=> d!22107 m!89745))

(assert (=> d!22107 m!89445))

(assert (=> b!85523 m!89417))

(assert (=> b!85523 m!89421))

(assert (=> b!85256 d!22107))

(declare-fun b!85535 () Bool)

(declare-fun e!55800 () Bool)

(declare-fun call!8109 () Bool)

(assert (=> b!85535 (= e!55800 call!8109)))

(declare-fun b!85536 () Bool)

(declare-fun e!55799 () Bool)

(declare-fun e!55798 () Bool)

(assert (=> b!85536 (= e!55799 e!55798)))

(declare-fun res!44039 () Bool)

(assert (=> b!85536 (=> (not res!44039) (not e!55798))))

(declare-fun e!55801 () Bool)

(assert (=> b!85536 (= res!44039 (not e!55801))))

(declare-fun res!44040 () Bool)

(assert (=> b!85536 (=> (not res!44040) (not e!55801))))

(assert (=> b!85536 (= res!44040 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun d!22109 () Bool)

(declare-fun res!44041 () Bool)

(assert (=> d!22109 (=> res!44041 e!55799)))

(assert (=> d!22109 (= res!44041 (bvsge from!355 (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> d!22109 (= (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) from!355 Nil!1550) e!55799)))

(declare-fun b!85537 () Bool)

(assert (=> b!85537 (= e!55800 call!8109)))

(declare-fun b!85538 () Bool)

(declare-fun contains!765 (List!1553 (_ BitVec 64)) Bool)

(assert (=> b!85538 (= e!55801 (contains!765 Nil!1550 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!85539 () Bool)

(assert (=> b!85539 (= e!55798 e!55800)))

(declare-fun c!13880 () Bool)

(assert (=> b!85539 (= c!13880 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun bm!8106 () Bool)

(assert (=> bm!8106 (= call!8109 (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)))))

(assert (= (and d!22109 (not res!44041)) b!85536))

(assert (= (and b!85536 res!44040) b!85538))

(assert (= (and b!85536 res!44039) b!85539))

(assert (= (and b!85539 c!13880) b!85537))

(assert (= (and b!85539 (not c!13880)) b!85535))

(assert (= (or b!85537 b!85535) bm!8106))

(assert (=> b!85536 m!89417))

(assert (=> b!85536 m!89417))

(declare-fun m!89747 () Bool)

(assert (=> b!85536 m!89747))

(assert (=> b!85538 m!89417))

(assert (=> b!85538 m!89417))

(declare-fun m!89749 () Bool)

(assert (=> b!85538 m!89749))

(assert (=> b!85539 m!89417))

(assert (=> b!85539 m!89417))

(assert (=> b!85539 m!89747))

(assert (=> bm!8106 m!89417))

(declare-fun m!89751 () Bool)

(assert (=> bm!8106 m!89751))

(assert (=> b!85256 d!22109))

(declare-fun d!22111 () Bool)

(declare-fun res!44048 () Bool)

(declare-fun e!55804 () Bool)

(assert (=> d!22111 (=> (not res!44048) (not e!55804))))

(declare-fun simpleValid!57 (LongMapFixedSize!756) Bool)

(assert (=> d!22111 (= res!44048 (simpleValid!57 newMap!16))))

(assert (=> d!22111 (= (valid!327 newMap!16) e!55804)))

(declare-fun b!85546 () Bool)

(declare-fun res!44049 () Bool)

(assert (=> b!85546 (=> (not res!44049) (not e!55804))))

(declare-fun arrayCountValidKeys!0 (array!4028 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!85546 (= res!44049 (= (arrayCountValidKeys!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (_size!427 newMap!16)))))

(declare-fun b!85547 () Bool)

(declare-fun res!44050 () Bool)

(assert (=> b!85547 (=> (not res!44050) (not e!55804))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4028 (_ BitVec 32)) Bool)

(assert (=> b!85547 (= res!44050 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!85548 () Bool)

(assert (=> b!85548 (= e!55804 (arrayNoDuplicates!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 Nil!1550))))

(assert (= (and d!22111 res!44048) b!85546))

(assert (= (and b!85546 res!44049) b!85547))

(assert (= (and b!85547 res!44050) b!85548))

(declare-fun m!89753 () Bool)

(assert (=> d!22111 m!89753))

(declare-fun m!89755 () Bool)

(assert (=> b!85546 m!89755))

(declare-fun m!89757 () Bool)

(assert (=> b!85547 m!89757))

(declare-fun m!89759 () Bool)

(assert (=> b!85548 m!89759))

(assert (=> b!85257 d!22111))

(declare-fun d!22113 () Bool)

(assert (=> d!22113 (= (map!1195 newMap!16) (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun bs!3602 () Bool)

(assert (= bs!3602 d!22113))

(assert (=> bs!3602 m!89683))

(assert (=> b!85243 d!22113))

(declare-fun bm!8121 () Bool)

(declare-fun call!8130 () ListLongMap!1487)

(declare-fun call!8127 () ListLongMap!1487)

(assert (=> bm!8121 (= call!8130 call!8127)))

(declare-fun b!85591 () Bool)

(declare-fun e!55840 () ListLongMap!1487)

(declare-fun call!8125 () ListLongMap!1487)

(assert (=> b!85591 (= e!55840 call!8125)))

(declare-fun b!85592 () Bool)

(declare-fun e!55842 () ListLongMap!1487)

(declare-fun call!8128 () ListLongMap!1487)

(assert (=> b!85592 (= e!55842 call!8128)))

(declare-fun b!85593 () Bool)

(declare-fun e!55838 () Bool)

(declare-fun e!55841 () Bool)

(assert (=> b!85593 (= e!55838 e!55841)))

(declare-fun res!44074 () Bool)

(assert (=> b!85593 (=> (not res!44074) (not e!55841))))

(declare-fun lt!40443 () ListLongMap!1487)

(assert (=> b!85593 (= res!44074 (contains!762 lt!40443 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85593 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun bm!8122 () Bool)

(assert (=> bm!8122 (= call!8128 call!8130)))

(declare-fun b!85594 () Bool)

(declare-fun e!55837 () Unit!2533)

(declare-fun Unit!2544 () Unit!2533)

(assert (=> b!85594 (= e!55837 Unit!2544)))

(declare-fun b!85595 () Bool)

(declare-fun e!55834 () Bool)

(declare-fun e!55831 () Bool)

(assert (=> b!85595 (= e!55834 e!55831)))

(declare-fun res!44072 () Bool)

(declare-fun call!8129 () Bool)

(assert (=> b!85595 (= res!44072 call!8129)))

(assert (=> b!85595 (=> (not res!44072) (not e!55831))))

(declare-fun b!85597 () Bool)

(declare-fun e!55843 () Bool)

(declare-fun call!8126 () Bool)

(assert (=> b!85597 (= e!55843 (not call!8126))))

(declare-fun b!85598 () Bool)

(declare-fun c!13897 () Bool)

(assert (=> b!85598 (= c!13897 (and (not (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!85598 (= e!55840 e!55842)))

(declare-fun c!13896 () Bool)

(declare-fun c!13894 () Bool)

(declare-fun bm!8123 () Bool)

(declare-fun call!8124 () ListLongMap!1487)

(assert (=> bm!8123 (= call!8124 (+!116 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128)) (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!85599 () Bool)

(declare-fun e!55832 () ListLongMap!1487)

(assert (=> b!85599 (= e!55832 (+!116 call!8124 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun bm!8124 () Bool)

(assert (=> bm!8124 (= call!8129 (contains!762 lt!40443 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85600 () Bool)

(assert (=> b!85600 (= e!55842 call!8125)))

(declare-fun b!85601 () Bool)

(declare-fun res!44077 () Bool)

(declare-fun e!55835 () Bool)

(assert (=> b!85601 (=> (not res!44077) (not e!55835))))

(assert (=> b!85601 (= res!44077 e!55834)))

(declare-fun c!13898 () Bool)

(assert (=> b!85601 (= c!13898 (not (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!85602 () Bool)

(assert (=> b!85602 (= e!55832 e!55840)))

(assert (=> b!85602 (= c!13894 (and (not (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85603 () Bool)

(assert (=> b!85603 (= e!55835 e!55843)))

(declare-fun c!13893 () Bool)

(assert (=> b!85603 (= c!13893 (not (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8125 () Bool)

(assert (=> bm!8125 (= call!8125 call!8124)))

(declare-fun d!22115 () Bool)

(assert (=> d!22115 e!55835))

(declare-fun res!44076 () Bool)

(assert (=> d!22115 (=> (not res!44076) (not e!55835))))

(assert (=> d!22115 (= res!44076 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun lt!40457 () ListLongMap!1487)

(assert (=> d!22115 (= lt!40443 lt!40457)))

(declare-fun lt!40439 () Unit!2533)

(assert (=> d!22115 (= lt!40439 e!55837)))

(declare-fun c!13895 () Bool)

(declare-fun e!55839 () Bool)

(assert (=> d!22115 (= c!13895 e!55839)))

(declare-fun res!44070 () Bool)

(assert (=> d!22115 (=> (not res!44070) (not e!55839))))

(assert (=> d!22115 (= res!44070 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> d!22115 (= lt!40457 e!55832)))

(assert (=> d!22115 (= c!13896 (and (not (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22115 (validMask!0 (mask!6366 (v!2648 (underlying!293 thiss!992))))))

(assert (=> d!22115 (= (getCurrentListMap!443 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))) lt!40443)))

(declare-fun b!85596 () Bool)

(assert (=> b!85596 (= e!55834 (not call!8129))))

(declare-fun b!85604 () Bool)

(declare-fun lt!40447 () Unit!2533)

(assert (=> b!85604 (= e!55837 lt!40447)))

(declare-fun lt!40456 () ListLongMap!1487)

(assert (=> b!85604 (= lt!40456 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun lt!40440 () (_ BitVec 64))

(assert (=> b!85604 (= lt!40440 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40458 () (_ BitVec 64))

(assert (=> b!85604 (= lt!40458 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40450 () Unit!2533)

(declare-fun addStillContains!58 (ListLongMap!1487 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2533)

(assert (=> b!85604 (= lt!40450 (addStillContains!58 lt!40456 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40458))))

(assert (=> b!85604 (contains!762 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40458)))

(declare-fun lt!40446 () Unit!2533)

(assert (=> b!85604 (= lt!40446 lt!40450)))

(declare-fun lt!40452 () ListLongMap!1487)

(assert (=> b!85604 (= lt!40452 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun lt!40455 () (_ BitVec 64))

(assert (=> b!85604 (= lt!40455 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40454 () (_ BitVec 64))

(assert (=> b!85604 (= lt!40454 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40448 () Unit!2533)

(declare-fun addApplyDifferent!58 (ListLongMap!1487 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2533)

(assert (=> b!85604 (= lt!40448 (addApplyDifferent!58 lt!40452 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40454))))

(assert (=> b!85604 (= (apply!82 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40454) (apply!82 lt!40452 lt!40454))))

(declare-fun lt!40459 () Unit!2533)

(assert (=> b!85604 (= lt!40459 lt!40448)))

(declare-fun lt!40445 () ListLongMap!1487)

(assert (=> b!85604 (= lt!40445 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun lt!40451 () (_ BitVec 64))

(assert (=> b!85604 (= lt!40451 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40442 () (_ BitVec 64))

(assert (=> b!85604 (= lt!40442 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40453 () Unit!2533)

(assert (=> b!85604 (= lt!40453 (addApplyDifferent!58 lt!40445 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40442))))

(assert (=> b!85604 (= (apply!82 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40442) (apply!82 lt!40445 lt!40442))))

(declare-fun lt!40444 () Unit!2533)

(assert (=> b!85604 (= lt!40444 lt!40453)))

(declare-fun lt!40449 () ListLongMap!1487)

(assert (=> b!85604 (= lt!40449 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun lt!40460 () (_ BitVec 64))

(assert (=> b!85604 (= lt!40460 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40441 () (_ BitVec 64))

(assert (=> b!85604 (= lt!40441 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!85604 (= lt!40447 (addApplyDifferent!58 lt!40449 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40441))))

(assert (=> b!85604 (= (apply!82 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40441) (apply!82 lt!40449 lt!40441))))

(declare-fun b!85605 () Bool)

(declare-fun e!55833 () Bool)

(assert (=> b!85605 (= e!55833 (= (apply!82 lt!40443 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun b!85606 () Bool)

(assert (=> b!85606 (= e!55839 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85607 () Bool)

(assert (=> b!85607 (= e!55841 (= (apply!82 lt!40443 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85607 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_values!2321 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> b!85607 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun bm!8126 () Bool)

(assert (=> bm!8126 (= call!8126 (contains!762 lt!40443 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85608 () Bool)

(assert (=> b!85608 (= e!55843 e!55833)))

(declare-fun res!44073 () Bool)

(assert (=> b!85608 (= res!44073 call!8126)))

(assert (=> b!85608 (=> (not res!44073) (not e!55833))))

(declare-fun b!85609 () Bool)

(declare-fun res!44071 () Bool)

(assert (=> b!85609 (=> (not res!44071) (not e!55835))))

(assert (=> b!85609 (= res!44071 e!55838)))

(declare-fun res!44069 () Bool)

(assert (=> b!85609 (=> res!44069 e!55838)))

(declare-fun e!55836 () Bool)

(assert (=> b!85609 (= res!44069 (not e!55836))))

(declare-fun res!44075 () Bool)

(assert (=> b!85609 (=> (not res!44075) (not e!55836))))

(assert (=> b!85609 (= res!44075 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun bm!8127 () Bool)

(assert (=> bm!8127 (= call!8127 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun b!85610 () Bool)

(assert (=> b!85610 (= e!55836 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85611 () Bool)

(assert (=> b!85611 (= e!55831 (= (apply!82 lt!40443 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))

(assert (= (and d!22115 c!13896) b!85599))

(assert (= (and d!22115 (not c!13896)) b!85602))

(assert (= (and b!85602 c!13894) b!85591))

(assert (= (and b!85602 (not c!13894)) b!85598))

(assert (= (and b!85598 c!13897) b!85600))

(assert (= (and b!85598 (not c!13897)) b!85592))

(assert (= (or b!85600 b!85592) bm!8122))

(assert (= (or b!85591 bm!8122) bm!8121))

(assert (= (or b!85591 b!85600) bm!8125))

(assert (= (or b!85599 bm!8121) bm!8127))

(assert (= (or b!85599 bm!8125) bm!8123))

(assert (= (and d!22115 res!44070) b!85606))

(assert (= (and d!22115 c!13895) b!85604))

(assert (= (and d!22115 (not c!13895)) b!85594))

(assert (= (and d!22115 res!44076) b!85609))

(assert (= (and b!85609 res!44075) b!85610))

(assert (= (and b!85609 (not res!44069)) b!85593))

(assert (= (and b!85593 res!44074) b!85607))

(assert (= (and b!85609 res!44071) b!85601))

(assert (= (and b!85601 c!13898) b!85595))

(assert (= (and b!85601 (not c!13898)) b!85596))

(assert (= (and b!85595 res!44072) b!85611))

(assert (= (or b!85595 b!85596) bm!8124))

(assert (= (and b!85601 res!44077) b!85603))

(assert (= (and b!85603 c!13893) b!85608))

(assert (= (and b!85603 (not c!13893)) b!85597))

(assert (= (and b!85608 res!44073) b!85605))

(assert (= (or b!85608 b!85597) bm!8126))

(declare-fun b_lambda!3801 () Bool)

(assert (=> (not b_lambda!3801) (not b!85607)))

(assert (=> b!85607 t!5274))

(declare-fun b_and!5177 () Bool)

(assert (= b_and!5173 (and (=> t!5274 result!2917) b_and!5177)))

(assert (=> b!85607 t!5276))

(declare-fun b_and!5179 () Bool)

(assert (= b_and!5175 (and (=> t!5276 result!2921) b_and!5179)))

(declare-fun m!89761 () Bool)

(assert (=> b!85605 m!89761))

(declare-fun m!89763 () Bool)

(assert (=> b!85604 m!89763))

(declare-fun m!89765 () Bool)

(assert (=> b!85604 m!89765))

(declare-fun m!89767 () Bool)

(assert (=> b!85604 m!89767))

(declare-fun m!89769 () Bool)

(assert (=> b!85604 m!89769))

(declare-fun m!89771 () Bool)

(assert (=> b!85604 m!89771))

(declare-fun m!89773 () Bool)

(assert (=> b!85604 m!89773))

(declare-fun m!89775 () Bool)

(assert (=> b!85604 m!89775))

(declare-fun m!89777 () Bool)

(assert (=> b!85604 m!89777))

(declare-fun m!89779 () Bool)

(assert (=> b!85604 m!89779))

(declare-fun m!89781 () Bool)

(assert (=> b!85604 m!89781))

(assert (=> b!85604 m!89777))

(assert (=> b!85604 m!89623))

(assert (=> b!85604 m!89453))

(assert (=> b!85604 m!89771))

(declare-fun m!89783 () Bool)

(assert (=> b!85604 m!89783))

(assert (=> b!85604 m!89773))

(declare-fun m!89785 () Bool)

(assert (=> b!85604 m!89785))

(declare-fun m!89787 () Bool)

(assert (=> b!85604 m!89787))

(assert (=> b!85604 m!89763))

(declare-fun m!89789 () Bool)

(assert (=> b!85604 m!89789))

(declare-fun m!89791 () Bool)

(assert (=> b!85604 m!89791))

(declare-fun m!89793 () Bool)

(assert (=> b!85599 m!89793))

(declare-fun m!89795 () Bool)

(assert (=> b!85611 m!89795))

(declare-fun m!89797 () Bool)

(assert (=> bm!8124 m!89797))

(assert (=> b!85610 m!89623))

(assert (=> b!85610 m!89623))

(assert (=> b!85610 m!89625))

(assert (=> b!85607 m!89623))

(assert (=> b!85607 m!89623))

(declare-fun m!89799 () Bool)

(assert (=> b!85607 m!89799))

(assert (=> b!85607 m!89635))

(assert (=> b!85607 m!89427))

(assert (=> b!85607 m!89643))

(assert (=> b!85607 m!89427))

(assert (=> b!85607 m!89635))

(assert (=> bm!8127 m!89453))

(assert (=> d!22115 m!89445))

(declare-fun m!89801 () Bool)

(assert (=> bm!8123 m!89801))

(declare-fun m!89803 () Bool)

(assert (=> bm!8126 m!89803))

(assert (=> b!85593 m!89623))

(assert (=> b!85593 m!89623))

(declare-fun m!89805 () Bool)

(assert (=> b!85593 m!89805))

(assert (=> b!85606 m!89623))

(assert (=> b!85606 m!89623))

(assert (=> b!85606 m!89625))

(assert (=> b!85243 d!22115))

(declare-fun d!22117 () Bool)

(declare-fun c!13901 () Bool)

(assert (=> d!22117 (= c!13901 ((_ is ValueCellFull!924) (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun e!55846 () V!3027)

(assert (=> d!22117 (= (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) from!355) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55846)))

(declare-fun b!85616 () Bool)

(declare-fun get!1214 (ValueCell!924 V!3027) V!3027)

(assert (=> b!85616 (= e!55846 (get!1214 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) from!355) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85617 () Bool)

(declare-fun get!1215 (ValueCell!924 V!3027) V!3027)

(assert (=> b!85617 (= e!55846 (get!1215 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) from!355) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22117 c!13901) b!85616))

(assert (= (and d!22117 (not c!13901)) b!85617))

(assert (=> b!85616 m!89425))

(assert (=> b!85616 m!89427))

(declare-fun m!89807 () Bool)

(assert (=> b!85616 m!89807))

(assert (=> b!85617 m!89425))

(assert (=> b!85617 m!89427))

(declare-fun m!89809 () Bool)

(assert (=> b!85617 m!89809))

(assert (=> b!85253 d!22117))

(declare-fun condMapEmpty!3409 () Bool)

(declare-fun mapDefault!3409 () ValueCell!924)

(assert (=> mapNonEmpty!3400 (= condMapEmpty!3409 (= mapRest!3399 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3409)))))

(declare-fun e!55852 () Bool)

(declare-fun mapRes!3409 () Bool)

(assert (=> mapNonEmpty!3400 (= tp!8935 (and e!55852 mapRes!3409))))

(declare-fun b!85624 () Bool)

(declare-fun e!55851 () Bool)

(assert (=> b!85624 (= e!55851 tp_is_empty!2535)))

(declare-fun mapIsEmpty!3409 () Bool)

(assert (=> mapIsEmpty!3409 mapRes!3409))

(declare-fun b!85625 () Bool)

(assert (=> b!85625 (= e!55852 tp_is_empty!2535)))

(declare-fun mapNonEmpty!3409 () Bool)

(declare-fun tp!8953 () Bool)

(assert (=> mapNonEmpty!3409 (= mapRes!3409 (and tp!8953 e!55851))))

(declare-fun mapRest!3409 () (Array (_ BitVec 32) ValueCell!924))

(declare-fun mapKey!3409 () (_ BitVec 32))

(declare-fun mapValue!3409 () ValueCell!924)

(assert (=> mapNonEmpty!3409 (= mapRest!3399 (store mapRest!3409 mapKey!3409 mapValue!3409))))

(assert (= (and mapNonEmpty!3400 condMapEmpty!3409) mapIsEmpty!3409))

(assert (= (and mapNonEmpty!3400 (not condMapEmpty!3409)) mapNonEmpty!3409))

(assert (= (and mapNonEmpty!3409 ((_ is ValueCellFull!924) mapValue!3409)) b!85624))

(assert (= (and mapNonEmpty!3400 ((_ is ValueCellFull!924) mapDefault!3409)) b!85625))

(declare-fun m!89811 () Bool)

(assert (=> mapNonEmpty!3409 m!89811))

(declare-fun condMapEmpty!3410 () Bool)

(declare-fun mapDefault!3410 () ValueCell!924)

(assert (=> mapNonEmpty!3399 (= condMapEmpty!3410 (= mapRest!3400 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3410)))))

(declare-fun e!55854 () Bool)

(declare-fun mapRes!3410 () Bool)

(assert (=> mapNonEmpty!3399 (= tp!8937 (and e!55854 mapRes!3410))))

(declare-fun b!85626 () Bool)

(declare-fun e!55853 () Bool)

(assert (=> b!85626 (= e!55853 tp_is_empty!2535)))

(declare-fun mapIsEmpty!3410 () Bool)

(assert (=> mapIsEmpty!3410 mapRes!3410))

(declare-fun b!85627 () Bool)

(assert (=> b!85627 (= e!55854 tp_is_empty!2535)))

(declare-fun mapNonEmpty!3410 () Bool)

(declare-fun tp!8954 () Bool)

(assert (=> mapNonEmpty!3410 (= mapRes!3410 (and tp!8954 e!55853))))

(declare-fun mapKey!3410 () (_ BitVec 32))

(declare-fun mapValue!3410 () ValueCell!924)

(declare-fun mapRest!3410 () (Array (_ BitVec 32) ValueCell!924))

(assert (=> mapNonEmpty!3410 (= mapRest!3400 (store mapRest!3410 mapKey!3410 mapValue!3410))))

(assert (= (and mapNonEmpty!3399 condMapEmpty!3410) mapIsEmpty!3410))

(assert (= (and mapNonEmpty!3399 (not condMapEmpty!3410)) mapNonEmpty!3410))

(assert (= (and mapNonEmpty!3410 ((_ is ValueCellFull!924) mapValue!3410)) b!85626))

(assert (= (and mapNonEmpty!3399 ((_ is ValueCellFull!924) mapDefault!3410)) b!85627))

(declare-fun m!89813 () Bool)

(assert (=> mapNonEmpty!3410 m!89813))

(declare-fun b_lambda!3803 () Bool)

(assert (= b_lambda!3799 (or (and b!85245 b_free!2237) (and b!85246 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))))) b_lambda!3803)))

(declare-fun b_lambda!3805 () Bool)

(assert (= b_lambda!3797 (or (and b!85245 b_free!2237) (and b!85246 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))))) b_lambda!3805)))

(declare-fun b_lambda!3807 () Bool)

(assert (= b_lambda!3801 (or (and b!85245 b_free!2237) (and b!85246 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))))) b_lambda!3807)))

(check-sat (not bm!8101) (not b!85496) (not b!85363) (not b!85547) (not b!85523) (not b!85334) (not b!85593) (not d!22069) (not b!85374) (not bm!8124) (not mapNonEmpty!3409) (not b!85335) (not b!85486) (not bm!8090) (not d!22115) (not d!22087) b_and!5177 (not b!85384) (not b!85366) (not d!22073) (not bm!8095) (not b!85610) (not bm!8126) (not b!85376) (not b_lambda!3805) (not b!85548) (not b!85372) (not d!22113) (not b!85480) (not b!85493) (not d!22103) (not bm!8082) (not b!85604) (not d!22081) (not b!85606) (not bm!8096) (not d!22091) (not b!85386) (not b!85616) (not b!85329) (not b!85375) (not b!85508) (not b!85611) (not bm!8087) (not b_next!2239) (not b!85377) (not b!85617) (not b!85330) (not bm!8089) (not b!85332) (not b!85333) (not d!22075) (not b!85328) (not b_next!2237) (not b!85538) (not b!85337) (not b!85607) (not bm!8123) (not b!85367) (not bm!8031) (not d!22101) (not b!85368) (not bm!8091) (not mapNonEmpty!3410) (not b_lambda!3795) (not bm!8083) (not b_lambda!3807) b_and!5179 (not b!85331) (not b_lambda!3803) (not d!22083) (not b!85605) (not d!22071) (not bm!8127) (not d!22107) (not bm!8093) (not d!22077) tp_is_empty!2535 (not b!85489) (not bm!8106) (not d!22111) (not b!85485) (not b!85536) (not b!85373) (not b!85518) (not d!22065) (not b!85546) (not bm!8099) (not b!85336) (not b!85364) (not d!22067) (not b!85599) (not b!85539) (not b!85371) (not bm!8102) (not d!22085) (not d!22089))
(check-sat b_and!5177 b_and!5179 (not b_next!2237) (not b_next!2239))
(get-model)

(declare-fun d!22119 () Bool)

(declare-fun e!55856 () Bool)

(assert (=> d!22119 e!55856))

(declare-fun res!44078 () Bool)

(assert (=> d!22119 (=> res!44078 e!55856)))

(declare-fun lt!40463 () Bool)

(assert (=> d!22119 (= res!44078 (not lt!40463))))

(declare-fun lt!40464 () Bool)

(assert (=> d!22119 (= lt!40463 lt!40464)))

(declare-fun lt!40462 () Unit!2533)

(declare-fun e!55855 () Unit!2533)

(assert (=> d!22119 (= lt!40462 e!55855)))

(declare-fun c!13902 () Bool)

(assert (=> d!22119 (= c!13902 lt!40464)))

(assert (=> d!22119 (= lt!40464 (containsKey!143 (toList!759 lt!40290) (_1!1126 lt!40172)))))

(assert (=> d!22119 (= (contains!762 lt!40290 (_1!1126 lt!40172)) lt!40463)))

(declare-fun b!85628 () Bool)

(declare-fun lt!40461 () Unit!2533)

(assert (=> b!85628 (= e!55855 lt!40461)))

(assert (=> b!85628 (= lt!40461 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40290) (_1!1126 lt!40172)))))

(assert (=> b!85628 (isDefined!93 (getValueByKey!139 (toList!759 lt!40290) (_1!1126 lt!40172)))))

(declare-fun b!85629 () Bool)

(declare-fun Unit!2545 () Unit!2533)

(assert (=> b!85629 (= e!55855 Unit!2545)))

(declare-fun b!85630 () Bool)

(assert (=> b!85630 (= e!55856 (isDefined!93 (getValueByKey!139 (toList!759 lt!40290) (_1!1126 lt!40172))))))

(assert (= (and d!22119 c!13902) b!85628))

(assert (= (and d!22119 (not c!13902)) b!85629))

(assert (= (and d!22119 (not res!44078)) b!85630))

(declare-fun m!89815 () Bool)

(assert (=> d!22119 m!89815))

(declare-fun m!89817 () Bool)

(assert (=> b!85628 m!89817))

(assert (=> b!85628 m!89671))

(assert (=> b!85628 m!89671))

(declare-fun m!89819 () Bool)

(assert (=> b!85628 m!89819))

(assert (=> b!85630 m!89671))

(assert (=> b!85630 m!89671))

(assert (=> b!85630 m!89819))

(assert (=> d!22087 d!22119))

(declare-fun b!85639 () Bool)

(declare-fun e!55861 () Option!145)

(assert (=> b!85639 (= e!55861 (Some!144 (_2!1126 (h!2139 lt!40289))))))

(declare-fun b!85641 () Bool)

(declare-fun e!55862 () Option!145)

(assert (=> b!85641 (= e!55862 (getValueByKey!139 (t!5277 lt!40289) (_1!1126 lt!40172)))))

(declare-fun b!85640 () Bool)

(assert (=> b!85640 (= e!55861 e!55862)))

(declare-fun c!13908 () Bool)

(assert (=> b!85640 (= c!13908 (and ((_ is Cons!1548) lt!40289) (not (= (_1!1126 (h!2139 lt!40289)) (_1!1126 lt!40172)))))))

(declare-fun d!22121 () Bool)

(declare-fun c!13907 () Bool)

(assert (=> d!22121 (= c!13907 (and ((_ is Cons!1548) lt!40289) (= (_1!1126 (h!2139 lt!40289)) (_1!1126 lt!40172))))))

(assert (=> d!22121 (= (getValueByKey!139 lt!40289 (_1!1126 lt!40172)) e!55861)))

(declare-fun b!85642 () Bool)

(assert (=> b!85642 (= e!55862 None!143)))

(assert (= (and d!22121 c!13907) b!85639))

(assert (= (and d!22121 (not c!13907)) b!85640))

(assert (= (and b!85640 c!13908) b!85641))

(assert (= (and b!85640 (not c!13908)) b!85642))

(declare-fun m!89821 () Bool)

(assert (=> b!85641 m!89821))

(assert (=> d!22087 d!22121))

(declare-fun d!22123 () Bool)

(assert (=> d!22123 (= (getValueByKey!139 lt!40289 (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172)))))

(declare-fun lt!40467 () Unit!2533)

(declare-fun choose!508 (List!1552 (_ BitVec 64) V!3027) Unit!2533)

(assert (=> d!22123 (= lt!40467 (choose!508 lt!40289 (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(declare-fun e!55865 () Bool)

(assert (=> d!22123 e!55865))

(declare-fun res!44083 () Bool)

(assert (=> d!22123 (=> (not res!44083) (not e!55865))))

(declare-fun isStrictlySorted!293 (List!1552) Bool)

(assert (=> d!22123 (= res!44083 (isStrictlySorted!293 lt!40289))))

(assert (=> d!22123 (= (lemmaContainsTupThenGetReturnValue!58 lt!40289 (_1!1126 lt!40172) (_2!1126 lt!40172)) lt!40467)))

(declare-fun b!85647 () Bool)

(declare-fun res!44084 () Bool)

(assert (=> b!85647 (=> (not res!44084) (not e!55865))))

(assert (=> b!85647 (= res!44084 (containsKey!143 lt!40289 (_1!1126 lt!40172)))))

(declare-fun b!85648 () Bool)

(assert (=> b!85648 (= e!55865 (contains!764 lt!40289 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(assert (= (and d!22123 res!44083) b!85647))

(assert (= (and b!85647 res!44084) b!85648))

(assert (=> d!22123 m!89665))

(declare-fun m!89823 () Bool)

(assert (=> d!22123 m!89823))

(declare-fun m!89825 () Bool)

(assert (=> d!22123 m!89825))

(declare-fun m!89827 () Bool)

(assert (=> b!85647 m!89827))

(declare-fun m!89829 () Bool)

(assert (=> b!85648 m!89829))

(assert (=> d!22087 d!22123))

(declare-fun e!55877 () List!1552)

(declare-fun c!13918 () Bool)

(declare-fun b!85669 () Bool)

(declare-fun c!13917 () Bool)

(assert (=> b!85669 (= e!55877 (ite c!13917 (t!5277 (toList!759 (+!116 lt!40169 lt!40171))) (ite c!13918 (Cons!1548 (h!2139 (toList!759 (+!116 lt!40169 lt!40171))) (t!5277 (toList!759 (+!116 lt!40169 lt!40171)))) Nil!1549)))))

(declare-fun b!85670 () Bool)

(declare-fun e!55879 () Bool)

(declare-fun lt!40470 () List!1552)

(assert (=> b!85670 (= e!55879 (contains!764 lt!40470 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!85671 () Bool)

(declare-fun e!55878 () List!1552)

(declare-fun e!55876 () List!1552)

(assert (=> b!85671 (= e!55878 e!55876)))

(assert (=> b!85671 (= c!13917 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40169 lt!40171))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40169 lt!40171)))) (_1!1126 lt!40172))))))

(declare-fun b!85672 () Bool)

(declare-fun res!44089 () Bool)

(assert (=> b!85672 (=> (not res!44089) (not e!55879))))

(assert (=> b!85672 (= res!44089 (containsKey!143 lt!40470 (_1!1126 lt!40172)))))

(declare-fun d!22125 () Bool)

(assert (=> d!22125 e!55879))

(declare-fun res!44090 () Bool)

(assert (=> d!22125 (=> (not res!44090) (not e!55879))))

(assert (=> d!22125 (= res!44090 (isStrictlySorted!293 lt!40470))))

(assert (=> d!22125 (= lt!40470 e!55878)))

(declare-fun c!13919 () Bool)

(assert (=> d!22125 (= c!13919 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40169 lt!40171))) (bvslt (_1!1126 (h!2139 (toList!759 (+!116 lt!40169 lt!40171)))) (_1!1126 lt!40172))))))

(assert (=> d!22125 (isStrictlySorted!293 (toList!759 (+!116 lt!40169 lt!40171)))))

(assert (=> d!22125 (= (insertStrictlySorted!60 (toList!759 (+!116 lt!40169 lt!40171)) (_1!1126 lt!40172) (_2!1126 lt!40172)) lt!40470)))

(declare-fun call!8137 () List!1552)

(declare-fun bm!8134 () Bool)

(declare-fun $colon$colon!71 (List!1552 tuple2!2232) List!1552)

(assert (=> bm!8134 (= call!8137 ($colon$colon!71 e!55877 (ite c!13919 (h!2139 (toList!759 (+!116 lt!40169 lt!40171))) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172)))))))

(declare-fun c!13920 () Bool)

(assert (=> bm!8134 (= c!13920 c!13919)))

(declare-fun bm!8135 () Bool)

(declare-fun call!8139 () List!1552)

(declare-fun call!8138 () List!1552)

(assert (=> bm!8135 (= call!8139 call!8138)))

(declare-fun b!85673 () Bool)

(assert (=> b!85673 (= e!55878 call!8137)))

(declare-fun b!85674 () Bool)

(declare-fun e!55880 () List!1552)

(assert (=> b!85674 (= e!55880 call!8139)))

(declare-fun b!85675 () Bool)

(assert (=> b!85675 (= e!55876 call!8138)))

(declare-fun b!85676 () Bool)

(assert (=> b!85676 (= e!55877 (insertStrictlySorted!60 (t!5277 (toList!759 (+!116 lt!40169 lt!40171))) (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(declare-fun b!85677 () Bool)

(assert (=> b!85677 (= e!55880 call!8139)))

(declare-fun b!85678 () Bool)

(assert (=> b!85678 (= c!13918 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40169 lt!40171))) (bvsgt (_1!1126 (h!2139 (toList!759 (+!116 lt!40169 lt!40171)))) (_1!1126 lt!40172))))))

(assert (=> b!85678 (= e!55876 e!55880)))

(declare-fun bm!8136 () Bool)

(assert (=> bm!8136 (= call!8138 call!8137)))

(assert (= (and d!22125 c!13919) b!85673))

(assert (= (and d!22125 (not c!13919)) b!85671))

(assert (= (and b!85671 c!13917) b!85675))

(assert (= (and b!85671 (not c!13917)) b!85678))

(assert (= (and b!85678 c!13918) b!85677))

(assert (= (and b!85678 (not c!13918)) b!85674))

(assert (= (or b!85677 b!85674) bm!8135))

(assert (= (or b!85675 bm!8135) bm!8136))

(assert (= (or b!85673 bm!8136) bm!8134))

(assert (= (and bm!8134 c!13920) b!85676))

(assert (= (and bm!8134 (not c!13920)) b!85669))

(assert (= (and d!22125 res!44090) b!85672))

(assert (= (and b!85672 res!44089) b!85670))

(declare-fun m!89831 () Bool)

(assert (=> b!85672 m!89831))

(declare-fun m!89833 () Bool)

(assert (=> b!85676 m!89833))

(declare-fun m!89835 () Bool)

(assert (=> d!22125 m!89835))

(declare-fun m!89837 () Bool)

(assert (=> d!22125 m!89837))

(declare-fun m!89839 () Bool)

(assert (=> b!85670 m!89839))

(declare-fun m!89841 () Bool)

(assert (=> bm!8134 m!89841))

(assert (=> d!22087 d!22125))

(declare-fun d!22127 () Bool)

(declare-fun e!55882 () Bool)

(assert (=> d!22127 e!55882))

(declare-fun res!44091 () Bool)

(assert (=> d!22127 (=> res!44091 e!55882)))

(declare-fun lt!40473 () Bool)

(assert (=> d!22127 (= res!44091 (not lt!40473))))

(declare-fun lt!40474 () Bool)

(assert (=> d!22127 (= lt!40473 lt!40474)))

(declare-fun lt!40472 () Unit!2533)

(declare-fun e!55881 () Unit!2533)

(assert (=> d!22127 (= lt!40472 e!55881)))

(declare-fun c!13921 () Bool)

(assert (=> d!22127 (= c!13921 lt!40474)))

(assert (=> d!22127 (= lt!40474 (containsKey!143 (toList!759 lt!40241) (_1!1126 lt!40171)))))

(assert (=> d!22127 (= (contains!762 lt!40241 (_1!1126 lt!40171)) lt!40473)))

(declare-fun b!85679 () Bool)

(declare-fun lt!40471 () Unit!2533)

(assert (=> b!85679 (= e!55881 lt!40471)))

(assert (=> b!85679 (= lt!40471 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40241) (_1!1126 lt!40171)))))

(assert (=> b!85679 (isDefined!93 (getValueByKey!139 (toList!759 lt!40241) (_1!1126 lt!40171)))))

(declare-fun b!85680 () Bool)

(declare-fun Unit!2546 () Unit!2533)

(assert (=> b!85680 (= e!55881 Unit!2546)))

(declare-fun b!85681 () Bool)

(assert (=> b!85681 (= e!55882 (isDefined!93 (getValueByKey!139 (toList!759 lt!40241) (_1!1126 lt!40171))))))

(assert (= (and d!22127 c!13921) b!85679))

(assert (= (and d!22127 (not c!13921)) b!85680))

(assert (= (and d!22127 (not res!44091)) b!85681))

(declare-fun m!89843 () Bool)

(assert (=> d!22127 m!89843))

(declare-fun m!89845 () Bool)

(assert (=> b!85679 m!89845))

(assert (=> b!85679 m!89551))

(assert (=> b!85679 m!89551))

(declare-fun m!89847 () Bool)

(assert (=> b!85679 m!89847))

(assert (=> b!85681 m!89551))

(assert (=> b!85681 m!89551))

(assert (=> b!85681 m!89847))

(assert (=> d!22067 d!22127))

(declare-fun b!85682 () Bool)

(declare-fun e!55883 () Option!145)

(assert (=> b!85682 (= e!55883 (Some!144 (_2!1126 (h!2139 lt!40240))))))

(declare-fun b!85684 () Bool)

(declare-fun e!55884 () Option!145)

(assert (=> b!85684 (= e!55884 (getValueByKey!139 (t!5277 lt!40240) (_1!1126 lt!40171)))))

(declare-fun b!85683 () Bool)

(assert (=> b!85683 (= e!55883 e!55884)))

(declare-fun c!13923 () Bool)

(assert (=> b!85683 (= c!13923 (and ((_ is Cons!1548) lt!40240) (not (= (_1!1126 (h!2139 lt!40240)) (_1!1126 lt!40171)))))))

(declare-fun d!22129 () Bool)

(declare-fun c!13922 () Bool)

(assert (=> d!22129 (= c!13922 (and ((_ is Cons!1548) lt!40240) (= (_1!1126 (h!2139 lt!40240)) (_1!1126 lt!40171))))))

(assert (=> d!22129 (= (getValueByKey!139 lt!40240 (_1!1126 lt!40171)) e!55883)))

(declare-fun b!85685 () Bool)

(assert (=> b!85685 (= e!55884 None!143)))

(assert (= (and d!22129 c!13922) b!85682))

(assert (= (and d!22129 (not c!13922)) b!85683))

(assert (= (and b!85683 c!13923) b!85684))

(assert (= (and b!85683 (not c!13923)) b!85685))

(declare-fun m!89849 () Bool)

(assert (=> b!85684 m!89849))

(assert (=> d!22067 d!22129))

(declare-fun d!22131 () Bool)

(assert (=> d!22131 (= (getValueByKey!139 lt!40240 (_1!1126 lt!40171)) (Some!144 (_2!1126 lt!40171)))))

(declare-fun lt!40475 () Unit!2533)

(assert (=> d!22131 (= lt!40475 (choose!508 lt!40240 (_1!1126 lt!40171) (_2!1126 lt!40171)))))

(declare-fun e!55885 () Bool)

(assert (=> d!22131 e!55885))

(declare-fun res!44092 () Bool)

(assert (=> d!22131 (=> (not res!44092) (not e!55885))))

(assert (=> d!22131 (= res!44092 (isStrictlySorted!293 lt!40240))))

(assert (=> d!22131 (= (lemmaContainsTupThenGetReturnValue!58 lt!40240 (_1!1126 lt!40171) (_2!1126 lt!40171)) lt!40475)))

(declare-fun b!85686 () Bool)

(declare-fun res!44093 () Bool)

(assert (=> b!85686 (=> (not res!44093) (not e!55885))))

(assert (=> b!85686 (= res!44093 (containsKey!143 lt!40240 (_1!1126 lt!40171)))))

(declare-fun b!85687 () Bool)

(assert (=> b!85687 (= e!55885 (contains!764 lt!40240 (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(assert (= (and d!22131 res!44092) b!85686))

(assert (= (and b!85686 res!44093) b!85687))

(assert (=> d!22131 m!89545))

(declare-fun m!89851 () Bool)

(assert (=> d!22131 m!89851))

(declare-fun m!89853 () Bool)

(assert (=> d!22131 m!89853))

(declare-fun m!89855 () Bool)

(assert (=> b!85686 m!89855))

(declare-fun m!89857 () Bool)

(assert (=> b!85687 m!89857))

(assert (=> d!22067 d!22131))

(declare-fun e!55887 () List!1552)

(declare-fun c!13924 () Bool)

(declare-fun c!13925 () Bool)

(declare-fun b!85688 () Bool)

(assert (=> b!85688 (= e!55887 (ite c!13924 (t!5277 (toList!759 lt!40169)) (ite c!13925 (Cons!1548 (h!2139 (toList!759 lt!40169)) (t!5277 (toList!759 lt!40169))) Nil!1549)))))

(declare-fun b!85689 () Bool)

(declare-fun e!55889 () Bool)

(declare-fun lt!40476 () List!1552)

(assert (=> b!85689 (= e!55889 (contains!764 lt!40476 (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun b!85690 () Bool)

(declare-fun e!55888 () List!1552)

(declare-fun e!55886 () List!1552)

(assert (=> b!85690 (= e!55888 e!55886)))

(assert (=> b!85690 (= c!13924 (and ((_ is Cons!1548) (toList!759 lt!40169)) (= (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 lt!40171))))))

(declare-fun b!85691 () Bool)

(declare-fun res!44094 () Bool)

(assert (=> b!85691 (=> (not res!44094) (not e!55889))))

(assert (=> b!85691 (= res!44094 (containsKey!143 lt!40476 (_1!1126 lt!40171)))))

(declare-fun d!22133 () Bool)

(assert (=> d!22133 e!55889))

(declare-fun res!44095 () Bool)

(assert (=> d!22133 (=> (not res!44095) (not e!55889))))

(assert (=> d!22133 (= res!44095 (isStrictlySorted!293 lt!40476))))

(assert (=> d!22133 (= lt!40476 e!55888)))

(declare-fun c!13926 () Bool)

(assert (=> d!22133 (= c!13926 (and ((_ is Cons!1548) (toList!759 lt!40169)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 lt!40171))))))

(assert (=> d!22133 (isStrictlySorted!293 (toList!759 lt!40169))))

(assert (=> d!22133 (= (insertStrictlySorted!60 (toList!759 lt!40169) (_1!1126 lt!40171) (_2!1126 lt!40171)) lt!40476)))

(declare-fun bm!8137 () Bool)

(declare-fun call!8140 () List!1552)

(assert (=> bm!8137 (= call!8140 ($colon$colon!71 e!55887 (ite c!13926 (h!2139 (toList!759 lt!40169)) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171)))))))

(declare-fun c!13927 () Bool)

(assert (=> bm!8137 (= c!13927 c!13926)))

(declare-fun bm!8138 () Bool)

(declare-fun call!8142 () List!1552)

(declare-fun call!8141 () List!1552)

(assert (=> bm!8138 (= call!8142 call!8141)))

(declare-fun b!85692 () Bool)

(assert (=> b!85692 (= e!55888 call!8140)))

(declare-fun b!85693 () Bool)

(declare-fun e!55890 () List!1552)

(assert (=> b!85693 (= e!55890 call!8142)))

(declare-fun b!85694 () Bool)

(assert (=> b!85694 (= e!55886 call!8141)))

(declare-fun b!85695 () Bool)

(assert (=> b!85695 (= e!55887 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40169)) (_1!1126 lt!40171) (_2!1126 lt!40171)))))

(declare-fun b!85696 () Bool)

(assert (=> b!85696 (= e!55890 call!8142)))

(declare-fun b!85697 () Bool)

(assert (=> b!85697 (= c!13925 (and ((_ is Cons!1548) (toList!759 lt!40169)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 lt!40171))))))

(assert (=> b!85697 (= e!55886 e!55890)))

(declare-fun bm!8139 () Bool)

(assert (=> bm!8139 (= call!8141 call!8140)))

(assert (= (and d!22133 c!13926) b!85692))

(assert (= (and d!22133 (not c!13926)) b!85690))

(assert (= (and b!85690 c!13924) b!85694))

(assert (= (and b!85690 (not c!13924)) b!85697))

(assert (= (and b!85697 c!13925) b!85696))

(assert (= (and b!85697 (not c!13925)) b!85693))

(assert (= (or b!85696 b!85693) bm!8138))

(assert (= (or b!85694 bm!8138) bm!8139))

(assert (= (or b!85692 bm!8139) bm!8137))

(assert (= (and bm!8137 c!13927) b!85695))

(assert (= (and bm!8137 (not c!13927)) b!85688))

(assert (= (and d!22133 res!44095) b!85691))

(assert (= (and b!85691 res!44094) b!85689))

(declare-fun m!89859 () Bool)

(assert (=> b!85691 m!89859))

(declare-fun m!89861 () Bool)

(assert (=> b!85695 m!89861))

(declare-fun m!89863 () Bool)

(assert (=> d!22133 m!89863))

(declare-fun m!89865 () Bool)

(assert (=> d!22133 m!89865))

(declare-fun m!89867 () Bool)

(assert (=> b!85689 m!89867))

(declare-fun m!89869 () Bool)

(assert (=> bm!8137 m!89869))

(assert (=> d!22067 d!22133))

(declare-fun d!22135 () Bool)

(declare-fun get!1216 (Option!145) V!3027)

(assert (=> d!22135 (= (apply!82 lt!40443 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1216 (getValueByKey!139 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3603 () Bool)

(assert (= bs!3603 d!22135))

(declare-fun m!89871 () Bool)

(assert (=> bs!3603 m!89871))

(assert (=> bs!3603 m!89871))

(declare-fun m!89873 () Bool)

(assert (=> bs!3603 m!89873))

(assert (=> b!85605 d!22135))

(declare-fun d!22137 () Bool)

(assert (=> d!22137 (= (apply!82 lt!40284 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1216 (getValueByKey!139 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3604 () Bool)

(assert (= bs!3604 d!22137))

(assert (=> bs!3604 m!89623))

(declare-fun m!89875 () Bool)

(assert (=> bs!3604 m!89875))

(assert (=> bs!3604 m!89875))

(declare-fun m!89877 () Bool)

(assert (=> bs!3604 m!89877))

(assert (=> b!85373 d!22137))

(declare-fun d!22139 () Bool)

(declare-fun c!13928 () Bool)

(assert (=> d!22139 (= c!13928 ((_ is ValueCellFull!924) (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!55891 () V!3027)

(assert (=> d!22139 (= (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55891)))

(declare-fun b!85698 () Bool)

(assert (=> b!85698 (= e!55891 (get!1214 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85699 () Bool)

(assert (=> b!85699 (= e!55891 (get!1215 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22139 c!13928) b!85698))

(assert (= (and d!22139 (not c!13928)) b!85699))

(assert (=> b!85698 m!89635))

(assert (=> b!85698 m!89427))

(declare-fun m!89879 () Bool)

(assert (=> b!85698 m!89879))

(assert (=> b!85699 m!89635))

(assert (=> b!85699 m!89427))

(declare-fun m!89881 () Bool)

(assert (=> b!85699 m!89881))

(assert (=> b!85373 d!22139))

(declare-fun d!22141 () Bool)

(declare-fun e!55894 () Bool)

(assert (=> d!22141 e!55894))

(declare-fun res!44100 () Bool)

(assert (=> d!22141 (=> (not res!44100) (not e!55894))))

(declare-fun lt!40481 () SeekEntryResult!253)

(assert (=> d!22141 (= res!44100 ((_ is Found!253) lt!40481))))

(assert (=> d!22141 (= lt!40481 (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun lt!40482 () Unit!2533)

(declare-fun choose!509 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) Int) Unit!2533)

(assert (=> d!22141 (= lt!40482 (choose!509 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22141 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22141 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)) lt!40482)))

(declare-fun b!85704 () Bool)

(declare-fun res!44101 () Bool)

(assert (=> b!85704 (=> (not res!44101) (not e!55894))))

(assert (=> b!85704 (= res!44101 (inRange!0 (index!3150 lt!40481) (mask!6366 newMap!16)))))

(declare-fun b!85705 () Bool)

(assert (=> b!85705 (= e!55894 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40481)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> b!85705 (and (bvsge (index!3150 lt!40481) #b00000000000000000000000000000000) (bvslt (index!3150 lt!40481) (size!2162 (_keys!4010 newMap!16))))))

(assert (= (and d!22141 res!44100) b!85704))

(assert (= (and b!85704 res!44101) b!85705))

(assert (=> d!22141 m!89417))

(assert (=> d!22141 m!89697))

(assert (=> d!22141 m!89417))

(declare-fun m!89883 () Bool)

(assert (=> d!22141 m!89883))

(declare-fun m!89885 () Bool)

(assert (=> d!22141 m!89885))

(declare-fun m!89887 () Bool)

(assert (=> b!85704 m!89887))

(declare-fun m!89889 () Bool)

(assert (=> b!85705 m!89889))

(assert (=> bm!8096 d!22141))

(declare-fun d!22143 () Bool)

(declare-fun e!55896 () Bool)

(assert (=> d!22143 e!55896))

(declare-fun res!44102 () Bool)

(assert (=> d!22143 (=> res!44102 e!55896)))

(declare-fun lt!40485 () Bool)

(assert (=> d!22143 (= res!44102 (not lt!40485))))

(declare-fun lt!40486 () Bool)

(assert (=> d!22143 (= lt!40485 lt!40486)))

(declare-fun lt!40484 () Unit!2533)

(declare-fun e!55895 () Unit!2533)

(assert (=> d!22143 (= lt!40484 e!55895)))

(declare-fun c!13929 () Bool)

(assert (=> d!22143 (= c!13929 lt!40486)))

(assert (=> d!22143 (= lt!40486 (containsKey!143 (toList!759 lt!40286) (_1!1126 lt!40163)))))

(assert (=> d!22143 (= (contains!762 lt!40286 (_1!1126 lt!40163)) lt!40485)))

(declare-fun b!85706 () Bool)

(declare-fun lt!40483 () Unit!2533)

(assert (=> b!85706 (= e!55895 lt!40483)))

(assert (=> b!85706 (= lt!40483 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40286) (_1!1126 lt!40163)))))

(assert (=> b!85706 (isDefined!93 (getValueByKey!139 (toList!759 lt!40286) (_1!1126 lt!40163)))))

(declare-fun b!85707 () Bool)

(declare-fun Unit!2547 () Unit!2533)

(assert (=> b!85707 (= e!55895 Unit!2547)))

(declare-fun b!85708 () Bool)

(assert (=> b!85708 (= e!55896 (isDefined!93 (getValueByKey!139 (toList!759 lt!40286) (_1!1126 lt!40163))))))

(assert (= (and d!22143 c!13929) b!85706))

(assert (= (and d!22143 (not c!13929)) b!85707))

(assert (= (and d!22143 (not res!44102)) b!85708))

(declare-fun m!89891 () Bool)

(assert (=> d!22143 m!89891))

(declare-fun m!89893 () Bool)

(assert (=> b!85706 m!89893))

(assert (=> b!85706 m!89659))

(assert (=> b!85706 m!89659))

(declare-fun m!89895 () Bool)

(assert (=> b!85706 m!89895))

(assert (=> b!85708 m!89659))

(assert (=> b!85708 m!89659))

(assert (=> b!85708 m!89895))

(assert (=> d!22085 d!22143))

(declare-fun b!85709 () Bool)

(declare-fun e!55897 () Option!145)

(assert (=> b!85709 (= e!55897 (Some!144 (_2!1126 (h!2139 lt!40285))))))

(declare-fun b!85711 () Bool)

(declare-fun e!55898 () Option!145)

(assert (=> b!85711 (= e!55898 (getValueByKey!139 (t!5277 lt!40285) (_1!1126 lt!40163)))))

(declare-fun b!85710 () Bool)

(assert (=> b!85710 (= e!55897 e!55898)))

(declare-fun c!13931 () Bool)

(assert (=> b!85710 (= c!13931 (and ((_ is Cons!1548) lt!40285) (not (= (_1!1126 (h!2139 lt!40285)) (_1!1126 lt!40163)))))))

(declare-fun d!22145 () Bool)

(declare-fun c!13930 () Bool)

(assert (=> d!22145 (= c!13930 (and ((_ is Cons!1548) lt!40285) (= (_1!1126 (h!2139 lt!40285)) (_1!1126 lt!40163))))))

(assert (=> d!22145 (= (getValueByKey!139 lt!40285 (_1!1126 lt!40163)) e!55897)))

(declare-fun b!85712 () Bool)

(assert (=> b!85712 (= e!55898 None!143)))

(assert (= (and d!22145 c!13930) b!85709))

(assert (= (and d!22145 (not c!13930)) b!85710))

(assert (= (and b!85710 c!13931) b!85711))

(assert (= (and b!85710 (not c!13931)) b!85712))

(declare-fun m!89897 () Bool)

(assert (=> b!85711 m!89897))

(assert (=> d!22085 d!22145))

(declare-fun d!22147 () Bool)

(assert (=> d!22147 (= (getValueByKey!139 lt!40285 (_1!1126 lt!40163)) (Some!144 (_2!1126 lt!40163)))))

(declare-fun lt!40487 () Unit!2533)

(assert (=> d!22147 (= lt!40487 (choose!508 lt!40285 (_1!1126 lt!40163) (_2!1126 lt!40163)))))

(declare-fun e!55899 () Bool)

(assert (=> d!22147 e!55899))

(declare-fun res!44103 () Bool)

(assert (=> d!22147 (=> (not res!44103) (not e!55899))))

(assert (=> d!22147 (= res!44103 (isStrictlySorted!293 lt!40285))))

(assert (=> d!22147 (= (lemmaContainsTupThenGetReturnValue!58 lt!40285 (_1!1126 lt!40163) (_2!1126 lt!40163)) lt!40487)))

(declare-fun b!85713 () Bool)

(declare-fun res!44104 () Bool)

(assert (=> b!85713 (=> (not res!44104) (not e!55899))))

(assert (=> b!85713 (= res!44104 (containsKey!143 lt!40285 (_1!1126 lt!40163)))))

(declare-fun b!85714 () Bool)

(assert (=> b!85714 (= e!55899 (contains!764 lt!40285 (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(assert (= (and d!22147 res!44103) b!85713))

(assert (= (and b!85713 res!44104) b!85714))

(assert (=> d!22147 m!89653))

(declare-fun m!89899 () Bool)

(assert (=> d!22147 m!89899))

(declare-fun m!89901 () Bool)

(assert (=> d!22147 m!89901))

(declare-fun m!89903 () Bool)

(assert (=> b!85713 m!89903))

(declare-fun m!89905 () Bool)

(assert (=> b!85714 m!89905))

(assert (=> d!22085 d!22147))

(declare-fun b!85715 () Bool)

(declare-fun c!13933 () Bool)

(declare-fun c!13932 () Bool)

(declare-fun e!55901 () List!1552)

(assert (=> b!85715 (= e!55901 (ite c!13932 (t!5277 (toList!759 lt!40170)) (ite c!13933 (Cons!1548 (h!2139 (toList!759 lt!40170)) (t!5277 (toList!759 lt!40170))) Nil!1549)))))

(declare-fun b!85716 () Bool)

(declare-fun e!55903 () Bool)

(declare-fun lt!40488 () List!1552)

(assert (=> b!85716 (= e!55903 (contains!764 lt!40488 (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun b!85717 () Bool)

(declare-fun e!55902 () List!1552)

(declare-fun e!55900 () List!1552)

(assert (=> b!85717 (= e!55902 e!55900)))

(assert (=> b!85717 (= c!13932 (and ((_ is Cons!1548) (toList!759 lt!40170)) (= (_1!1126 (h!2139 (toList!759 lt!40170))) (_1!1126 lt!40163))))))

(declare-fun b!85718 () Bool)

(declare-fun res!44105 () Bool)

(assert (=> b!85718 (=> (not res!44105) (not e!55903))))

(assert (=> b!85718 (= res!44105 (containsKey!143 lt!40488 (_1!1126 lt!40163)))))

(declare-fun d!22149 () Bool)

(assert (=> d!22149 e!55903))

(declare-fun res!44106 () Bool)

(assert (=> d!22149 (=> (not res!44106) (not e!55903))))

(assert (=> d!22149 (= res!44106 (isStrictlySorted!293 lt!40488))))

(assert (=> d!22149 (= lt!40488 e!55902)))

(declare-fun c!13934 () Bool)

(assert (=> d!22149 (= c!13934 (and ((_ is Cons!1548) (toList!759 lt!40170)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40170))) (_1!1126 lt!40163))))))

(assert (=> d!22149 (isStrictlySorted!293 (toList!759 lt!40170))))

(assert (=> d!22149 (= (insertStrictlySorted!60 (toList!759 lt!40170) (_1!1126 lt!40163) (_2!1126 lt!40163)) lt!40488)))

(declare-fun call!8143 () List!1552)

(declare-fun bm!8140 () Bool)

(assert (=> bm!8140 (= call!8143 ($colon$colon!71 e!55901 (ite c!13934 (h!2139 (toList!759 lt!40170)) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163)))))))

(declare-fun c!13935 () Bool)

(assert (=> bm!8140 (= c!13935 c!13934)))

(declare-fun bm!8141 () Bool)

(declare-fun call!8145 () List!1552)

(declare-fun call!8144 () List!1552)

(assert (=> bm!8141 (= call!8145 call!8144)))

(declare-fun b!85719 () Bool)

(assert (=> b!85719 (= e!55902 call!8143)))

(declare-fun b!85720 () Bool)

(declare-fun e!55904 () List!1552)

(assert (=> b!85720 (= e!55904 call!8145)))

(declare-fun b!85721 () Bool)

(assert (=> b!85721 (= e!55900 call!8144)))

(declare-fun b!85722 () Bool)

(assert (=> b!85722 (= e!55901 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40170)) (_1!1126 lt!40163) (_2!1126 lt!40163)))))

(declare-fun b!85723 () Bool)

(assert (=> b!85723 (= e!55904 call!8145)))

(declare-fun b!85724 () Bool)

(assert (=> b!85724 (= c!13933 (and ((_ is Cons!1548) (toList!759 lt!40170)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40170))) (_1!1126 lt!40163))))))

(assert (=> b!85724 (= e!55900 e!55904)))

(declare-fun bm!8142 () Bool)

(assert (=> bm!8142 (= call!8144 call!8143)))

(assert (= (and d!22149 c!13934) b!85719))

(assert (= (and d!22149 (not c!13934)) b!85717))

(assert (= (and b!85717 c!13932) b!85721))

(assert (= (and b!85717 (not c!13932)) b!85724))

(assert (= (and b!85724 c!13933) b!85723))

(assert (= (and b!85724 (not c!13933)) b!85720))

(assert (= (or b!85723 b!85720) bm!8141))

(assert (= (or b!85721 bm!8141) bm!8142))

(assert (= (or b!85719 bm!8142) bm!8140))

(assert (= (and bm!8140 c!13935) b!85722))

(assert (= (and bm!8140 (not c!13935)) b!85715))

(assert (= (and d!22149 res!44106) b!85718))

(assert (= (and b!85718 res!44105) b!85716))

(declare-fun m!89907 () Bool)

(assert (=> b!85718 m!89907))

(declare-fun m!89909 () Bool)

(assert (=> b!85722 m!89909))

(declare-fun m!89911 () Bool)

(assert (=> d!22149 m!89911))

(declare-fun m!89913 () Bool)

(assert (=> d!22149 m!89913))

(declare-fun m!89915 () Bool)

(assert (=> b!85716 m!89915))

(declare-fun m!89917 () Bool)

(assert (=> bm!8140 m!89917))

(assert (=> d!22085 d!22149))

(declare-fun bm!8143 () Bool)

(declare-fun call!8152 () ListLongMap!1487)

(declare-fun call!8149 () ListLongMap!1487)

(assert (=> bm!8143 (= call!8152 call!8149)))

(declare-fun b!85725 () Bool)

(declare-fun e!55914 () ListLongMap!1487)

(declare-fun call!8147 () ListLongMap!1487)

(assert (=> b!85725 (= e!55914 call!8147)))

(declare-fun b!85726 () Bool)

(declare-fun e!55916 () ListLongMap!1487)

(declare-fun call!8150 () ListLongMap!1487)

(assert (=> b!85726 (= e!55916 call!8150)))

(declare-fun b!85727 () Bool)

(declare-fun e!55912 () Bool)

(declare-fun e!55915 () Bool)

(assert (=> b!85727 (= e!55912 e!55915)))

(declare-fun res!44112 () Bool)

(assert (=> b!85727 (=> (not res!44112) (not e!55915))))

(declare-fun lt!40493 () ListLongMap!1487)

(assert (=> b!85727 (= res!44112 (contains!762 lt!40493 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!85727 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8144 () Bool)

(assert (=> bm!8144 (= call!8150 call!8152)))

(declare-fun b!85728 () Bool)

(declare-fun e!55911 () Unit!2533)

(declare-fun Unit!2548 () Unit!2533)

(assert (=> b!85728 (= e!55911 Unit!2548)))

(declare-fun b!85729 () Bool)

(declare-fun e!55908 () Bool)

(declare-fun e!55905 () Bool)

(assert (=> b!85729 (= e!55908 e!55905)))

(declare-fun res!44110 () Bool)

(declare-fun call!8151 () Bool)

(assert (=> b!85729 (= res!44110 call!8151)))

(assert (=> b!85729 (=> (not res!44110) (not e!55905))))

(declare-fun b!85731 () Bool)

(declare-fun e!55917 () Bool)

(declare-fun call!8148 () Bool)

(assert (=> b!85731 (= e!55917 (not call!8148))))

(declare-fun b!85732 () Bool)

(declare-fun c!13940 () Bool)

(assert (=> b!85732 (= c!13940 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!85732 (= e!55914 e!55916)))

(declare-fun bm!8145 () Bool)

(declare-fun c!13937 () Bool)

(declare-fun call!8146 () ListLongMap!1487)

(declare-fun c!13939 () Bool)

(assert (=> bm!8145 (= call!8146 (+!116 (ite c!13939 call!8149 (ite c!13937 call!8152 call!8150)) (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!85733 () Bool)

(declare-fun e!55906 () ListLongMap!1487)

(assert (=> b!85733 (= e!55906 (+!116 call!8146 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun bm!8146 () Bool)

(assert (=> bm!8146 (= call!8151 (contains!762 lt!40493 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85734 () Bool)

(assert (=> b!85734 (= e!55916 call!8147)))

(declare-fun b!85735 () Bool)

(declare-fun res!44115 () Bool)

(declare-fun e!55909 () Bool)

(assert (=> b!85735 (=> (not res!44115) (not e!55909))))

(assert (=> b!85735 (= res!44115 e!55908)))

(declare-fun c!13941 () Bool)

(assert (=> b!85735 (= c!13941 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!85736 () Bool)

(assert (=> b!85736 (= e!55906 e!55914)))

(assert (=> b!85736 (= c!13937 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85737 () Bool)

(assert (=> b!85737 (= e!55909 e!55917)))

(declare-fun c!13936 () Bool)

(assert (=> b!85737 (= c!13936 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8147 () Bool)

(assert (=> bm!8147 (= call!8147 call!8146)))

(declare-fun d!22151 () Bool)

(assert (=> d!22151 e!55909))

(declare-fun res!44114 () Bool)

(assert (=> d!22151 (=> (not res!44114) (not e!55909))))

(assert (=> d!22151 (= res!44114 (or (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))))

(declare-fun lt!40507 () ListLongMap!1487)

(assert (=> d!22151 (= lt!40493 lt!40507)))

(declare-fun lt!40489 () Unit!2533)

(assert (=> d!22151 (= lt!40489 e!55911)))

(declare-fun c!13938 () Bool)

(declare-fun e!55913 () Bool)

(assert (=> d!22151 (= c!13938 e!55913)))

(declare-fun res!44108 () Bool)

(assert (=> d!22151 (=> (not res!44108) (not e!55913))))

(assert (=> d!22151 (= res!44108 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22151 (= lt!40507 e!55906)))

(assert (=> d!22151 (= c!13939 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22151 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22151 (= (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!40493)))

(declare-fun b!85730 () Bool)

(assert (=> b!85730 (= e!55908 (not call!8151))))

(declare-fun b!85738 () Bool)

(declare-fun lt!40497 () Unit!2533)

(assert (=> b!85738 (= e!55911 lt!40497)))

(declare-fun lt!40506 () ListLongMap!1487)

(assert (=> b!85738 (= lt!40506 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40490 () (_ BitVec 64))

(assert (=> b!85738 (= lt!40490 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40508 () (_ BitVec 64))

(assert (=> b!85738 (= lt!40508 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40500 () Unit!2533)

(assert (=> b!85738 (= lt!40500 (addStillContains!58 lt!40506 lt!40490 (zeroValue!2230 newMap!16) lt!40508))))

(assert (=> b!85738 (contains!762 (+!116 lt!40506 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16))) lt!40508)))

(declare-fun lt!40496 () Unit!2533)

(assert (=> b!85738 (= lt!40496 lt!40500)))

(declare-fun lt!40502 () ListLongMap!1487)

(assert (=> b!85738 (= lt!40502 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40505 () (_ BitVec 64))

(assert (=> b!85738 (= lt!40505 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40504 () (_ BitVec 64))

(assert (=> b!85738 (= lt!40504 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40498 () Unit!2533)

(assert (=> b!85738 (= lt!40498 (addApplyDifferent!58 lt!40502 lt!40505 (minValue!2230 newMap!16) lt!40504))))

(assert (=> b!85738 (= (apply!82 (+!116 lt!40502 (tuple2!2233 lt!40505 (minValue!2230 newMap!16))) lt!40504) (apply!82 lt!40502 lt!40504))))

(declare-fun lt!40509 () Unit!2533)

(assert (=> b!85738 (= lt!40509 lt!40498)))

(declare-fun lt!40495 () ListLongMap!1487)

(assert (=> b!85738 (= lt!40495 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40501 () (_ BitVec 64))

(assert (=> b!85738 (= lt!40501 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40492 () (_ BitVec 64))

(assert (=> b!85738 (= lt!40492 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40503 () Unit!2533)

(assert (=> b!85738 (= lt!40503 (addApplyDifferent!58 lt!40495 lt!40501 (zeroValue!2230 newMap!16) lt!40492))))

(assert (=> b!85738 (= (apply!82 (+!116 lt!40495 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16))) lt!40492) (apply!82 lt!40495 lt!40492))))

(declare-fun lt!40494 () Unit!2533)

(assert (=> b!85738 (= lt!40494 lt!40503)))

(declare-fun lt!40499 () ListLongMap!1487)

(assert (=> b!85738 (= lt!40499 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40510 () (_ BitVec 64))

(assert (=> b!85738 (= lt!40510 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40491 () (_ BitVec 64))

(assert (=> b!85738 (= lt!40491 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85738 (= lt!40497 (addApplyDifferent!58 lt!40499 lt!40510 (minValue!2230 newMap!16) lt!40491))))

(assert (=> b!85738 (= (apply!82 (+!116 lt!40499 (tuple2!2233 lt!40510 (minValue!2230 newMap!16))) lt!40491) (apply!82 lt!40499 lt!40491))))

(declare-fun b!85739 () Bool)

(declare-fun e!55907 () Bool)

(assert (=> b!85739 (= e!55907 (= (apply!82 lt!40493 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!85740 () Bool)

(assert (=> b!85740 (= e!55913 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85741 () Bool)

(assert (=> b!85741 (= e!55915 (= (apply!82 lt!40493 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85741 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_values!2321 newMap!16))))))

(assert (=> b!85741 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8148 () Bool)

(assert (=> bm!8148 (= call!8148 (contains!762 lt!40493 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85742 () Bool)

(assert (=> b!85742 (= e!55917 e!55907)))

(declare-fun res!44111 () Bool)

(assert (=> b!85742 (= res!44111 call!8148)))

(assert (=> b!85742 (=> (not res!44111) (not e!55907))))

(declare-fun b!85743 () Bool)

(declare-fun res!44109 () Bool)

(assert (=> b!85743 (=> (not res!44109) (not e!55909))))

(assert (=> b!85743 (= res!44109 e!55912)))

(declare-fun res!44107 () Bool)

(assert (=> b!85743 (=> res!44107 e!55912)))

(declare-fun e!55910 () Bool)

(assert (=> b!85743 (= res!44107 (not e!55910))))

(declare-fun res!44113 () Bool)

(assert (=> b!85743 (=> (not res!44113) (not e!55910))))

(assert (=> b!85743 (= res!44113 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8149 () Bool)

(assert (=> bm!8149 (= call!8149 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!85744 () Bool)

(assert (=> b!85744 (= e!55910 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85745 () Bool)

(assert (=> b!85745 (= e!55905 (= (apply!82 lt!40493 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(assert (= (and d!22151 c!13939) b!85733))

(assert (= (and d!22151 (not c!13939)) b!85736))

(assert (= (and b!85736 c!13937) b!85725))

(assert (= (and b!85736 (not c!13937)) b!85732))

(assert (= (and b!85732 c!13940) b!85734))

(assert (= (and b!85732 (not c!13940)) b!85726))

(assert (= (or b!85734 b!85726) bm!8144))

(assert (= (or b!85725 bm!8144) bm!8143))

(assert (= (or b!85725 b!85734) bm!8147))

(assert (= (or b!85733 bm!8143) bm!8149))

(assert (= (or b!85733 bm!8147) bm!8145))

(assert (= (and d!22151 res!44108) b!85740))

(assert (= (and d!22151 c!13938) b!85738))

(assert (= (and d!22151 (not c!13938)) b!85728))

(assert (= (and d!22151 res!44114) b!85743))

(assert (= (and b!85743 res!44113) b!85744))

(assert (= (and b!85743 (not res!44107)) b!85727))

(assert (= (and b!85727 res!44112) b!85741))

(assert (= (and b!85743 res!44109) b!85735))

(assert (= (and b!85735 c!13941) b!85729))

(assert (= (and b!85735 (not c!13941)) b!85730))

(assert (= (and b!85729 res!44110) b!85745))

(assert (= (or b!85729 b!85730) bm!8146))

(assert (= (and b!85735 res!44115) b!85737))

(assert (= (and b!85737 c!13936) b!85742))

(assert (= (and b!85737 (not c!13936)) b!85731))

(assert (= (and b!85742 res!44111) b!85739))

(assert (= (or b!85742 b!85731) bm!8148))

(declare-fun b_lambda!3809 () Bool)

(assert (=> (not b_lambda!3809) (not b!85741)))

(declare-fun tb!1701 () Bool)

(declare-fun t!5286 () Bool)

(assert (=> (and b!85245 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16)) t!5286) tb!1701))

(declare-fun result!2931 () Bool)

(assert (=> tb!1701 (= result!2931 tp_is_empty!2535)))

(assert (=> b!85741 t!5286))

(declare-fun b_and!5181 () Bool)

(assert (= b_and!5177 (and (=> t!5286 result!2931) b_and!5181)))

(declare-fun t!5288 () Bool)

(declare-fun tb!1703 () Bool)

(assert (=> (and b!85246 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 newMap!16)) t!5288) tb!1703))

(declare-fun result!2933 () Bool)

(assert (= result!2933 result!2931))

(assert (=> b!85741 t!5288))

(declare-fun b_and!5183 () Bool)

(assert (= b_and!5179 (and (=> t!5288 result!2933) b_and!5183)))

(declare-fun m!89919 () Bool)

(assert (=> b!85739 m!89919))

(declare-fun m!89921 () Bool)

(assert (=> b!85738 m!89921))

(declare-fun m!89923 () Bool)

(assert (=> b!85738 m!89923))

(declare-fun m!89925 () Bool)

(assert (=> b!85738 m!89925))

(declare-fun m!89927 () Bool)

(assert (=> b!85738 m!89927))

(declare-fun m!89929 () Bool)

(assert (=> b!85738 m!89929))

(declare-fun m!89931 () Bool)

(assert (=> b!85738 m!89931))

(declare-fun m!89933 () Bool)

(assert (=> b!85738 m!89933))

(declare-fun m!89935 () Bool)

(assert (=> b!85738 m!89935))

(declare-fun m!89937 () Bool)

(assert (=> b!85738 m!89937))

(declare-fun m!89939 () Bool)

(assert (=> b!85738 m!89939))

(assert (=> b!85738 m!89935))

(declare-fun m!89941 () Bool)

(assert (=> b!85738 m!89941))

(declare-fun m!89943 () Bool)

(assert (=> b!85738 m!89943))

(assert (=> b!85738 m!89929))

(declare-fun m!89945 () Bool)

(assert (=> b!85738 m!89945))

(assert (=> b!85738 m!89931))

(declare-fun m!89947 () Bool)

(assert (=> b!85738 m!89947))

(declare-fun m!89949 () Bool)

(assert (=> b!85738 m!89949))

(assert (=> b!85738 m!89921))

(declare-fun m!89951 () Bool)

(assert (=> b!85738 m!89951))

(declare-fun m!89953 () Bool)

(assert (=> b!85738 m!89953))

(declare-fun m!89955 () Bool)

(assert (=> b!85733 m!89955))

(declare-fun m!89957 () Bool)

(assert (=> b!85745 m!89957))

(declare-fun m!89959 () Bool)

(assert (=> bm!8146 m!89959))

(assert (=> b!85744 m!89941))

(assert (=> b!85744 m!89941))

(declare-fun m!89961 () Bool)

(assert (=> b!85744 m!89961))

(assert (=> b!85741 m!89941))

(assert (=> b!85741 m!89941))

(declare-fun m!89963 () Bool)

(assert (=> b!85741 m!89963))

(declare-fun m!89965 () Bool)

(assert (=> b!85741 m!89965))

(declare-fun m!89967 () Bool)

(assert (=> b!85741 m!89967))

(declare-fun m!89969 () Bool)

(assert (=> b!85741 m!89969))

(assert (=> b!85741 m!89967))

(assert (=> b!85741 m!89965))

(assert (=> bm!8149 m!89943))

(assert (=> d!22151 m!89885))

(declare-fun m!89971 () Bool)

(assert (=> bm!8145 m!89971))

(declare-fun m!89973 () Bool)

(assert (=> bm!8148 m!89973))

(assert (=> b!85727 m!89941))

(assert (=> b!85727 m!89941))

(declare-fun m!89975 () Bool)

(assert (=> b!85727 m!89975))

(assert (=> b!85740 m!89941))

(assert (=> b!85740 m!89941))

(assert (=> b!85740 m!89961))

(assert (=> b!85486 d!22151))

(declare-fun d!22153 () Bool)

(declare-fun res!44120 () Bool)

(declare-fun e!55922 () Bool)

(assert (=> d!22153 (=> res!44120 e!55922)))

(assert (=> d!22153 (= res!44120 (and ((_ is Cons!1548) (toList!759 lt!40177)) (= (_1!1126 (h!2139 (toList!759 lt!40177))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (=> d!22153 (= (containsKey!143 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) e!55922)))

(declare-fun b!85750 () Bool)

(declare-fun e!55923 () Bool)

(assert (=> b!85750 (= e!55922 e!55923)))

(declare-fun res!44121 () Bool)

(assert (=> b!85750 (=> (not res!44121) (not e!55923))))

(assert (=> b!85750 (= res!44121 (and (or (not ((_ is Cons!1548) (toList!759 lt!40177))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40177))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))) ((_ is Cons!1548) (toList!759 lt!40177)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40177))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(declare-fun b!85751 () Bool)

(assert (=> b!85751 (= e!55923 (containsKey!143 (t!5277 (toList!759 lt!40177)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (= (and d!22153 (not res!44120)) b!85750))

(assert (= (and b!85750 res!44121) b!85751))

(assert (=> b!85751 m!89417))

(declare-fun m!89977 () Bool)

(assert (=> b!85751 m!89977))

(assert (=> d!22089 d!22153))

(declare-fun d!22155 () Bool)

(assert (=> d!22155 (= (apply!82 lt!40443 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1216 (getValueByKey!139 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3605 () Bool)

(assert (= bs!3605 d!22155))

(assert (=> bs!3605 m!89623))

(declare-fun m!89979 () Bool)

(assert (=> bs!3605 m!89979))

(assert (=> bs!3605 m!89979))

(declare-fun m!89981 () Bool)

(assert (=> bs!3605 m!89981))

(assert (=> b!85607 d!22155))

(assert (=> b!85607 d!22139))

(declare-fun b!85760 () Bool)

(declare-fun e!55929 () (_ BitVec 32))

(declare-fun e!55928 () (_ BitVec 32))

(assert (=> b!85760 (= e!55929 e!55928)))

(declare-fun c!13947 () Bool)

(assert (=> b!85760 (= c!13947 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8152 () Bool)

(declare-fun call!8155 () (_ BitVec 32))

(assert (=> bm!8152 (= call!8155 (arrayCountValidKeys!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!85761 () Bool)

(assert (=> b!85761 (= e!55928 (bvadd #b00000000000000000000000000000001 call!8155))))

(declare-fun b!85762 () Bool)

(assert (=> b!85762 (= e!55929 #b00000000000000000000000000000000)))

(declare-fun b!85763 () Bool)

(assert (=> b!85763 (= e!55928 call!8155)))

(declare-fun d!22157 () Bool)

(declare-fun lt!40513 () (_ BitVec 32))

(assert (=> d!22157 (and (bvsge lt!40513 #b00000000000000000000000000000000) (bvsle lt!40513 (bvsub (size!2162 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22157 (= lt!40513 e!55929)))

(declare-fun c!13946 () Bool)

(assert (=> d!22157 (= c!13946 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22157 (and (bvsle #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2162 (_keys!4010 newMap!16)) (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22157 (= (arrayCountValidKeys!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) lt!40513)))

(assert (= (and d!22157 c!13946) b!85762))

(assert (= (and d!22157 (not c!13946)) b!85760))

(assert (= (and b!85760 c!13947) b!85761))

(assert (= (and b!85760 (not c!13947)) b!85763))

(assert (= (or b!85761 b!85763) bm!8152))

(assert (=> b!85760 m!89941))

(assert (=> b!85760 m!89941))

(assert (=> b!85760 m!89961))

(declare-fun m!89983 () Bool)

(assert (=> bm!8152 m!89983))

(assert (=> b!85546 d!22157))

(assert (=> bm!8127 d!22083))

(declare-fun d!22159 () Bool)

(assert (=> d!22159 (= (inRange!0 (ite c!13868 (ite c!13865 (index!3150 lt!40378) (ite c!13867 (index!3149 lt!40359) (index!3152 lt!40359))) (ite c!13864 (index!3150 lt!40377) (ite c!13866 (index!3149 lt!40363) (index!3152 lt!40363)))) (mask!6366 newMap!16)) (and (bvsge (ite c!13868 (ite c!13865 (index!3150 lt!40378) (ite c!13867 (index!3149 lt!40359) (index!3152 lt!40359))) (ite c!13864 (index!3150 lt!40377) (ite c!13866 (index!3149 lt!40363) (index!3152 lt!40363)))) #b00000000000000000000000000000000) (bvslt (ite c!13868 (ite c!13865 (index!3150 lt!40378) (ite c!13867 (index!3149 lt!40359) (index!3152 lt!40359))) (ite c!13864 (index!3150 lt!40377) (ite c!13866 (index!3149 lt!40363) (index!3152 lt!40363)))) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8089 d!22159))

(declare-fun b!85764 () Bool)

(declare-fun e!55932 () Bool)

(declare-fun call!8156 () Bool)

(assert (=> b!85764 (= e!55932 call!8156)))

(declare-fun b!85765 () Bool)

(declare-fun e!55931 () Bool)

(declare-fun e!55930 () Bool)

(assert (=> b!85765 (= e!55931 e!55930)))

(declare-fun res!44122 () Bool)

(assert (=> b!85765 (=> (not res!44122) (not e!55930))))

(declare-fun e!55933 () Bool)

(assert (=> b!85765 (= res!44122 (not e!55933))))

(declare-fun res!44123 () Bool)

(assert (=> b!85765 (=> (not res!44123) (not e!55933))))

(assert (=> b!85765 (= res!44123 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!22161 () Bool)

(declare-fun res!44124 () Bool)

(assert (=> d!22161 (=> res!44124 e!55931)))

(assert (=> d!22161 (= res!44124 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22161 (= (arrayNoDuplicates!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 Nil!1550) e!55931)))

(declare-fun b!85766 () Bool)

(assert (=> b!85766 (= e!55932 call!8156)))

(declare-fun b!85767 () Bool)

(assert (=> b!85767 (= e!55933 (contains!765 Nil!1550 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85768 () Bool)

(assert (=> b!85768 (= e!55930 e!55932)))

(declare-fun c!13948 () Bool)

(assert (=> b!85768 (= c!13948 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8153 () Bool)

(assert (=> bm!8153 (= call!8156 (arrayNoDuplicates!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13948 (Cons!1549 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) Nil!1550) Nil!1550)))))

(assert (= (and d!22161 (not res!44124)) b!85765))

(assert (= (and b!85765 res!44123) b!85767))

(assert (= (and b!85765 res!44122) b!85768))

(assert (= (and b!85768 c!13948) b!85766))

(assert (= (and b!85768 (not c!13948)) b!85764))

(assert (= (or b!85766 b!85764) bm!8153))

(assert (=> b!85765 m!89941))

(assert (=> b!85765 m!89941))

(assert (=> b!85765 m!89961))

(assert (=> b!85767 m!89941))

(assert (=> b!85767 m!89941))

(declare-fun m!89985 () Bool)

(assert (=> b!85767 m!89985))

(assert (=> b!85768 m!89941))

(assert (=> b!85768 m!89941))

(assert (=> b!85768 m!89961))

(assert (=> bm!8153 m!89941))

(declare-fun m!89987 () Bool)

(assert (=> bm!8153 m!89987))

(assert (=> b!85548 d!22161))

(declare-fun b!85769 () Bool)

(declare-fun e!55934 () Option!145)

(assert (=> b!85769 (= e!55934 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40290)))))))

(declare-fun b!85771 () Bool)

(declare-fun e!55935 () Option!145)

(assert (=> b!85771 (= e!55935 (getValueByKey!139 (t!5277 (toList!759 lt!40290)) (_1!1126 lt!40172)))))

(declare-fun b!85770 () Bool)

(assert (=> b!85770 (= e!55934 e!55935)))

(declare-fun c!13950 () Bool)

(assert (=> b!85770 (= c!13950 (and ((_ is Cons!1548) (toList!759 lt!40290)) (not (= (_1!1126 (h!2139 (toList!759 lt!40290))) (_1!1126 lt!40172)))))))

(declare-fun d!22163 () Bool)

(declare-fun c!13949 () Bool)

(assert (=> d!22163 (= c!13949 (and ((_ is Cons!1548) (toList!759 lt!40290)) (= (_1!1126 (h!2139 (toList!759 lt!40290))) (_1!1126 lt!40172))))))

(assert (=> d!22163 (= (getValueByKey!139 (toList!759 lt!40290) (_1!1126 lt!40172)) e!55934)))

(declare-fun b!85772 () Bool)

(assert (=> b!85772 (= e!55935 None!143)))

(assert (= (and d!22163 c!13949) b!85769))

(assert (= (and d!22163 (not c!13949)) b!85770))

(assert (= (and b!85770 c!13950) b!85771))

(assert (= (and b!85770 (not c!13950)) b!85772))

(declare-fun m!89989 () Bool)

(assert (=> b!85771 m!89989))

(assert (=> b!85376 d!22163))

(declare-fun b!85785 () Bool)

(declare-fun e!55944 () SeekEntryResult!253)

(declare-fun lt!40522 () SeekEntryResult!253)

(assert (=> b!85785 (= e!55944 (MissingZero!253 (index!3151 lt!40522)))))

(declare-fun b!85786 () Bool)

(declare-fun e!55943 () SeekEntryResult!253)

(assert (=> b!85786 (= e!55943 (Found!253 (index!3151 lt!40522)))))

(declare-fun b!85788 () Bool)

(declare-fun c!13957 () Bool)

(declare-fun lt!40521 () (_ BitVec 64))

(assert (=> b!85788 (= c!13957 (= lt!40521 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85788 (= e!55943 e!55944)))

(declare-fun b!85789 () Bool)

(declare-fun e!55942 () SeekEntryResult!253)

(assert (=> b!85789 (= e!55942 Undefined!253)))

(declare-fun b!85790 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4028 (_ BitVec 32)) SeekEntryResult!253)

(assert (=> b!85790 (= e!55944 (seekKeyOrZeroReturnVacant!0 (x!12006 lt!40522) (index!3151 lt!40522) (index!3151 lt!40522) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!85787 () Bool)

(assert (=> b!85787 (= e!55942 e!55943)))

(assert (=> b!85787 (= lt!40521 (select (arr!1918 (_keys!4010 newMap!16)) (index!3151 lt!40522)))))

(declare-fun c!13958 () Bool)

(assert (=> b!85787 (= c!13958 (= lt!40521 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun lt!40520 () SeekEntryResult!253)

(declare-fun d!22165 () Bool)

(assert (=> d!22165 (and (or ((_ is Undefined!253) lt!40520) (not ((_ is Found!253) lt!40520)) (and (bvsge (index!3150 lt!40520) #b00000000000000000000000000000000) (bvslt (index!3150 lt!40520) (size!2162 (_keys!4010 newMap!16))))) (or ((_ is Undefined!253) lt!40520) ((_ is Found!253) lt!40520) (not ((_ is MissingZero!253) lt!40520)) (and (bvsge (index!3149 lt!40520) #b00000000000000000000000000000000) (bvslt (index!3149 lt!40520) (size!2162 (_keys!4010 newMap!16))))) (or ((_ is Undefined!253) lt!40520) ((_ is Found!253) lt!40520) ((_ is MissingZero!253) lt!40520) (not ((_ is MissingVacant!253) lt!40520)) (and (bvsge (index!3152 lt!40520) #b00000000000000000000000000000000) (bvslt (index!3152 lt!40520) (size!2162 (_keys!4010 newMap!16))))) (or ((_ is Undefined!253) lt!40520) (ite ((_ is Found!253) lt!40520) (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40520)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (ite ((_ is MissingZero!253) lt!40520) (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3149 lt!40520)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!253) lt!40520) (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3152 lt!40520)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22165 (= lt!40520 e!55942)))

(declare-fun c!13959 () Bool)

(assert (=> d!22165 (= c!13959 (and ((_ is Intermediate!253) lt!40522) (undefined!1065 lt!40522)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4028 (_ BitVec 32)) SeekEntryResult!253)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!22165 (= lt!40522 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (mask!6366 newMap!16)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(assert (=> d!22165 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22165 (= (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)) lt!40520)))

(assert (= (and d!22165 c!13959) b!85789))

(assert (= (and d!22165 (not c!13959)) b!85787))

(assert (= (and b!85787 c!13958) b!85786))

(assert (= (and b!85787 (not c!13958)) b!85788))

(assert (= (and b!85788 c!13957) b!85785))

(assert (= (and b!85788 (not c!13957)) b!85790))

(assert (=> b!85790 m!89417))

(declare-fun m!89991 () Bool)

(assert (=> b!85790 m!89991))

(declare-fun m!89993 () Bool)

(assert (=> b!85787 m!89993))

(assert (=> d!22165 m!89885))

(declare-fun m!89995 () Bool)

(assert (=> d!22165 m!89995))

(declare-fun m!89997 () Bool)

(assert (=> d!22165 m!89997))

(assert (=> d!22165 m!89417))

(declare-fun m!89999 () Bool)

(assert (=> d!22165 m!89999))

(declare-fun m!90001 () Bool)

(assert (=> d!22165 m!90001))

(assert (=> d!22165 m!89417))

(assert (=> d!22165 m!89997))

(declare-fun m!90003 () Bool)

(assert (=> d!22165 m!90003))

(assert (=> bm!8091 d!22165))

(assert (=> d!22101 d!22105))

(declare-fun d!22167 () Bool)

(assert (=> d!22167 (not (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!22167 true))

(declare-fun _$68!73 () Unit!2533)

(assert (=> d!22167 (= (choose!68 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550)) _$68!73)))

(declare-fun bs!3606 () Bool)

(assert (= bs!3606 d!22167))

(assert (=> bs!3606 m!89417))

(assert (=> bs!3606 m!89421))

(assert (=> d!22101 d!22167))

(declare-fun d!22169 () Bool)

(assert (=> d!22169 (= (apply!82 lt!40443 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1216 (getValueByKey!139 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3607 () Bool)

(assert (= bs!3607 d!22169))

(declare-fun m!90005 () Bool)

(assert (=> bs!3607 m!90005))

(assert (=> bs!3607 m!90005))

(declare-fun m!90007 () Bool)

(assert (=> bs!3607 m!90007))

(assert (=> b!85611 d!22169))

(declare-fun b!85791 () Bool)

(declare-fun e!55945 () Option!145)

(assert (=> b!85791 (= e!55945 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40286)))))))

(declare-fun b!85793 () Bool)

(declare-fun e!55946 () Option!145)

(assert (=> b!85793 (= e!55946 (getValueByKey!139 (t!5277 (toList!759 lt!40286)) (_1!1126 lt!40163)))))

(declare-fun b!85792 () Bool)

(assert (=> b!85792 (= e!55945 e!55946)))

(declare-fun c!13961 () Bool)

(assert (=> b!85792 (= c!13961 (and ((_ is Cons!1548) (toList!759 lt!40286)) (not (= (_1!1126 (h!2139 (toList!759 lt!40286))) (_1!1126 lt!40163)))))))

(declare-fun d!22171 () Bool)

(declare-fun c!13960 () Bool)

(assert (=> d!22171 (= c!13960 (and ((_ is Cons!1548) (toList!759 lt!40286)) (= (_1!1126 (h!2139 (toList!759 lt!40286))) (_1!1126 lt!40163))))))

(assert (=> d!22171 (= (getValueByKey!139 (toList!759 lt!40286) (_1!1126 lt!40163)) e!55945)))

(declare-fun b!85794 () Bool)

(assert (=> b!85794 (= e!55946 None!143)))

(assert (= (and d!22171 c!13960) b!85791))

(assert (= (and d!22171 (not c!13960)) b!85792))

(assert (= (and b!85792 c!13961) b!85793))

(assert (= (and b!85792 (not c!13961)) b!85794))

(declare-fun m!90009 () Bool)

(assert (=> b!85793 m!90009))

(assert (=> b!85374 d!22171))

(declare-fun d!22173 () Bool)

(assert (=> d!22173 (= (map!1195 (_2!1127 lt!40373)) (getCurrentListMap!443 (_keys!4010 (_2!1127 lt!40373)) (_values!2321 (_2!1127 lt!40373)) (mask!6366 (_2!1127 lt!40373)) (extraKeys!2177 (_2!1127 lt!40373)) (zeroValue!2230 (_2!1127 lt!40373)) (minValue!2230 (_2!1127 lt!40373)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1127 lt!40373))))))

(declare-fun bs!3608 () Bool)

(assert (= bs!3608 d!22173))

(declare-fun m!90011 () Bool)

(assert (=> bs!3608 m!90011))

(assert (=> bm!8083 d!22173))

(declare-fun d!22175 () Bool)

(assert (=> d!22175 (not (contains!762 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)) lt!40280))))

(declare-fun lt!40525 () Unit!2533)

(declare-fun choose!510 (ListLongMap!1487 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2533)

(assert (=> d!22175 (= lt!40525 (choose!510 lt!40278 lt!40282 lt!40283 lt!40280))))

(declare-fun e!55949 () Bool)

(assert (=> d!22175 e!55949))

(declare-fun res!44127 () Bool)

(assert (=> d!22175 (=> (not res!44127) (not e!55949))))

(assert (=> d!22175 (= res!44127 (not (contains!762 lt!40278 lt!40280)))))

(assert (=> d!22175 (= (addStillNotContains!33 lt!40278 lt!40282 lt!40283 lt!40280) lt!40525)))

(declare-fun b!85798 () Bool)

(assert (=> b!85798 (= e!55949 (not (= lt!40282 lt!40280)))))

(assert (= (and d!22175 res!44127) b!85798))

(assert (=> d!22175 m!89637))

(assert (=> d!22175 m!89637))

(assert (=> d!22175 m!89645))

(declare-fun m!90013 () Bool)

(assert (=> d!22175 m!90013))

(declare-fun m!90015 () Bool)

(assert (=> d!22175 m!90015))

(assert (=> b!85364 d!22175))

(declare-fun d!22177 () Bool)

(declare-fun e!55950 () Bool)

(assert (=> d!22177 e!55950))

(declare-fun res!44128 () Bool)

(assert (=> d!22177 (=> (not res!44128) (not e!55950))))

(declare-fun lt!40527 () ListLongMap!1487)

(assert (=> d!22177 (= res!44128 (contains!762 lt!40527 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!40526 () List!1552)

(assert (=> d!22177 (= lt!40527 (ListLongMap!1488 lt!40526))))

(declare-fun lt!40528 () Unit!2533)

(declare-fun lt!40529 () Unit!2533)

(assert (=> d!22177 (= lt!40528 lt!40529)))

(assert (=> d!22177 (= (getValueByKey!139 lt!40526 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22177 (= lt!40529 (lemmaContainsTupThenGetReturnValue!58 lt!40526 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22177 (= lt!40526 (insertStrictlySorted!60 (toList!759 call!8034) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22177 (= (+!116 call!8034 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!40527)))

(declare-fun b!85799 () Bool)

(declare-fun res!44129 () Bool)

(assert (=> b!85799 (=> (not res!44129) (not e!55950))))

(assert (=> b!85799 (= res!44129 (= (getValueByKey!139 (toList!759 lt!40527) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!85800 () Bool)

(assert (=> b!85800 (= e!55950 (contains!764 (toList!759 lt!40527) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!22177 res!44128) b!85799))

(assert (= (and b!85799 res!44129) b!85800))

(declare-fun m!90017 () Bool)

(assert (=> d!22177 m!90017))

(declare-fun m!90019 () Bool)

(assert (=> d!22177 m!90019))

(declare-fun m!90021 () Bool)

(assert (=> d!22177 m!90021))

(declare-fun m!90023 () Bool)

(assert (=> d!22177 m!90023))

(declare-fun m!90025 () Bool)

(assert (=> b!85799 m!90025))

(declare-fun m!90027 () Bool)

(assert (=> b!85800 m!90027))

(assert (=> b!85364 d!22177))

(declare-fun d!22179 () Bool)

(declare-fun e!55952 () Bool)

(assert (=> d!22179 e!55952))

(declare-fun res!44130 () Bool)

(assert (=> d!22179 (=> res!44130 e!55952)))

(declare-fun lt!40532 () Bool)

(assert (=> d!22179 (= res!44130 (not lt!40532))))

(declare-fun lt!40533 () Bool)

(assert (=> d!22179 (= lt!40532 lt!40533)))

(declare-fun lt!40531 () Unit!2533)

(declare-fun e!55951 () Unit!2533)

(assert (=> d!22179 (= lt!40531 e!55951)))

(declare-fun c!13962 () Bool)

(assert (=> d!22179 (= c!13962 lt!40533)))

(assert (=> d!22179 (= lt!40533 (containsKey!143 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280))))

(assert (=> d!22179 (= (contains!762 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)) lt!40280) lt!40532)))

(declare-fun b!85801 () Bool)

(declare-fun lt!40530 () Unit!2533)

(assert (=> b!85801 (= e!55951 lt!40530)))

(assert (=> b!85801 (= lt!40530 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280))))

(assert (=> b!85801 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280))))

(declare-fun b!85802 () Bool)

(declare-fun Unit!2549 () Unit!2533)

(assert (=> b!85802 (= e!55951 Unit!2549)))

(declare-fun b!85803 () Bool)

(assert (=> b!85803 (= e!55952 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280)))))

(assert (= (and d!22179 c!13962) b!85801))

(assert (= (and d!22179 (not c!13962)) b!85802))

(assert (= (and d!22179 (not res!44130)) b!85803))

(declare-fun m!90029 () Bool)

(assert (=> d!22179 m!90029))

(declare-fun m!90031 () Bool)

(assert (=> b!85801 m!90031))

(declare-fun m!90033 () Bool)

(assert (=> b!85801 m!90033))

(assert (=> b!85801 m!90033))

(declare-fun m!90035 () Bool)

(assert (=> b!85801 m!90035))

(assert (=> b!85803 m!90033))

(assert (=> b!85803 m!90033))

(assert (=> b!85803 m!90035))

(assert (=> b!85364 d!22179))

(declare-fun d!22181 () Bool)

(declare-fun e!55953 () Bool)

(assert (=> d!22181 e!55953))

(declare-fun res!44131 () Bool)

(assert (=> d!22181 (=> (not res!44131) (not e!55953))))

(declare-fun lt!40535 () ListLongMap!1487)

(assert (=> d!22181 (= res!44131 (contains!762 lt!40535 (_1!1126 (tuple2!2233 lt!40282 lt!40283))))))

(declare-fun lt!40534 () List!1552)

(assert (=> d!22181 (= lt!40535 (ListLongMap!1488 lt!40534))))

(declare-fun lt!40536 () Unit!2533)

(declare-fun lt!40537 () Unit!2533)

(assert (=> d!22181 (= lt!40536 lt!40537)))

(assert (=> d!22181 (= (getValueByKey!139 lt!40534 (_1!1126 (tuple2!2233 lt!40282 lt!40283))) (Some!144 (_2!1126 (tuple2!2233 lt!40282 lt!40283))))))

(assert (=> d!22181 (= lt!40537 (lemmaContainsTupThenGetReturnValue!58 lt!40534 (_1!1126 (tuple2!2233 lt!40282 lt!40283)) (_2!1126 (tuple2!2233 lt!40282 lt!40283))))))

(assert (=> d!22181 (= lt!40534 (insertStrictlySorted!60 (toList!759 lt!40278) (_1!1126 (tuple2!2233 lt!40282 lt!40283)) (_2!1126 (tuple2!2233 lt!40282 lt!40283))))))

(assert (=> d!22181 (= (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)) lt!40535)))

(declare-fun b!85804 () Bool)

(declare-fun res!44132 () Bool)

(assert (=> b!85804 (=> (not res!44132) (not e!55953))))

(assert (=> b!85804 (= res!44132 (= (getValueByKey!139 (toList!759 lt!40535) (_1!1126 (tuple2!2233 lt!40282 lt!40283))) (Some!144 (_2!1126 (tuple2!2233 lt!40282 lt!40283)))))))

(declare-fun b!85805 () Bool)

(assert (=> b!85805 (= e!55953 (contains!764 (toList!759 lt!40535) (tuple2!2233 lt!40282 lt!40283)))))

(assert (= (and d!22181 res!44131) b!85804))

(assert (= (and b!85804 res!44132) b!85805))

(declare-fun m!90037 () Bool)

(assert (=> d!22181 m!90037))

(declare-fun m!90039 () Bool)

(assert (=> d!22181 m!90039))

(declare-fun m!90041 () Bool)

(assert (=> d!22181 m!90041))

(declare-fun m!90043 () Bool)

(assert (=> d!22181 m!90043))

(declare-fun m!90045 () Bool)

(assert (=> b!85804 m!90045))

(declare-fun m!90047 () Bool)

(assert (=> b!85805 m!90047))

(assert (=> b!85364 d!22181))

(assert (=> b!85364 d!22139))

(declare-fun d!22183 () Bool)

(declare-fun lt!40540 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!88 (List!1552) (InoxSet tuple2!2232))

(assert (=> d!22183 (= lt!40540 (select (content!88 (toList!759 lt!40290)) lt!40172))))

(declare-fun e!55958 () Bool)

(assert (=> d!22183 (= lt!40540 e!55958)))

(declare-fun res!44138 () Bool)

(assert (=> d!22183 (=> (not res!44138) (not e!55958))))

(assert (=> d!22183 (= res!44138 ((_ is Cons!1548) (toList!759 lt!40290)))))

(assert (=> d!22183 (= (contains!764 (toList!759 lt!40290) lt!40172) lt!40540)))

(declare-fun b!85810 () Bool)

(declare-fun e!55959 () Bool)

(assert (=> b!85810 (= e!55958 e!55959)))

(declare-fun res!44137 () Bool)

(assert (=> b!85810 (=> res!44137 e!55959)))

(assert (=> b!85810 (= res!44137 (= (h!2139 (toList!759 lt!40290)) lt!40172))))

(declare-fun b!85811 () Bool)

(assert (=> b!85811 (= e!55959 (contains!764 (t!5277 (toList!759 lt!40290)) lt!40172))))

(assert (= (and d!22183 res!44138) b!85810))

(assert (= (and b!85810 (not res!44137)) b!85811))

(declare-fun m!90049 () Bool)

(assert (=> d!22183 m!90049))

(declare-fun m!90051 () Bool)

(assert (=> d!22183 m!90051))

(declare-fun m!90053 () Bool)

(assert (=> b!85811 m!90053))

(assert (=> b!85377 d!22183))

(declare-fun d!22185 () Bool)

(declare-fun e!55960 () Bool)

(assert (=> d!22185 e!55960))

(declare-fun res!44139 () Bool)

(assert (=> d!22185 (=> (not res!44139) (not e!55960))))

(declare-fun lt!40542 () ListLongMap!1487)

(assert (=> d!22185 (= res!44139 (contains!762 lt!40542 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!40541 () List!1552)

(assert (=> d!22185 (= lt!40542 (ListLongMap!1488 lt!40541))))

(declare-fun lt!40543 () Unit!2533)

(declare-fun lt!40544 () Unit!2533)

(assert (=> d!22185 (= lt!40543 lt!40544)))

(assert (=> d!22185 (= (getValueByKey!139 lt!40541 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22185 (= lt!40544 (lemmaContainsTupThenGetReturnValue!58 lt!40541 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22185 (= lt!40541 (insertStrictlySorted!60 (toList!759 lt!40169) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22185 (= (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!40542)))

(declare-fun b!85812 () Bool)

(declare-fun res!44140 () Bool)

(assert (=> b!85812 (=> (not res!44140) (not e!55960))))

(assert (=> b!85812 (= res!44140 (= (getValueByKey!139 (toList!759 lt!40542) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!85813 () Bool)

(assert (=> b!85813 (= e!55960 (contains!764 (toList!759 lt!40542) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!22185 res!44139) b!85812))

(assert (= (and b!85812 res!44140) b!85813))

(declare-fun m!90055 () Bool)

(assert (=> d!22185 m!90055))

(declare-fun m!90057 () Bool)

(assert (=> d!22185 m!90057))

(declare-fun m!90059 () Bool)

(assert (=> d!22185 m!90059))

(declare-fun m!90061 () Bool)

(assert (=> d!22185 m!90061))

(declare-fun m!90063 () Bool)

(assert (=> b!85812 m!90063))

(declare-fun m!90065 () Bool)

(assert (=> b!85813 m!90065))

(assert (=> d!22077 d!22185))

(declare-fun d!22187 () Bool)

(declare-fun e!55961 () Bool)

(assert (=> d!22187 e!55961))

(declare-fun res!44141 () Bool)

(assert (=> d!22187 (=> (not res!44141) (not e!55961))))

(declare-fun lt!40546 () ListLongMap!1487)

(assert (=> d!22187 (= res!44141 (contains!762 lt!40546 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!40545 () List!1552)

(assert (=> d!22187 (= lt!40546 (ListLongMap!1488 lt!40545))))

(declare-fun lt!40547 () Unit!2533)

(declare-fun lt!40548 () Unit!2533)

(assert (=> d!22187 (= lt!40547 lt!40548)))

(assert (=> d!22187 (= (getValueByKey!139 lt!40545 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22187 (= lt!40548 (lemmaContainsTupThenGetReturnValue!58 lt!40545 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22187 (= lt!40545 (insertStrictlySorted!60 (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22187 (= (+!116 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!40546)))

(declare-fun b!85814 () Bool)

(declare-fun res!44142 () Bool)

(assert (=> b!85814 (=> (not res!44142) (not e!55961))))

(assert (=> b!85814 (= res!44142 (= (getValueByKey!139 (toList!759 lt!40546) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!85815 () Bool)

(assert (=> b!85815 (= e!55961 (contains!764 (toList!759 lt!40546) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!22187 res!44141) b!85814))

(assert (= (and b!85814 res!44142) b!85815))

(declare-fun m!90067 () Bool)

(assert (=> d!22187 m!90067))

(declare-fun m!90069 () Bool)

(assert (=> d!22187 m!90069))

(declare-fun m!90071 () Bool)

(assert (=> d!22187 m!90071))

(declare-fun m!90073 () Bool)

(assert (=> d!22187 m!90073))

(declare-fun m!90075 () Bool)

(assert (=> b!85814 m!90075))

(declare-fun m!90077 () Bool)

(assert (=> b!85815 m!90077))

(assert (=> d!22077 d!22187))

(declare-fun d!22189 () Bool)

(declare-fun e!55962 () Bool)

(assert (=> d!22189 e!55962))

(declare-fun res!44143 () Bool)

(assert (=> d!22189 (=> (not res!44143) (not e!55962))))

(declare-fun lt!40550 () ListLongMap!1487)

(assert (=> d!22189 (= res!44143 (contains!762 lt!40550 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!40549 () List!1552)

(assert (=> d!22189 (= lt!40550 (ListLongMap!1488 lt!40549))))

(declare-fun lt!40551 () Unit!2533)

(declare-fun lt!40552 () Unit!2533)

(assert (=> d!22189 (= lt!40551 lt!40552)))

(assert (=> d!22189 (= (getValueByKey!139 lt!40549 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22189 (= lt!40552 (lemmaContainsTupThenGetReturnValue!58 lt!40549 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22189 (= lt!40549 (insertStrictlySorted!60 (toList!759 lt!40169) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22189 (= (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40550)))

(declare-fun b!85816 () Bool)

(declare-fun res!44144 () Bool)

(assert (=> b!85816 (=> (not res!44144) (not e!55962))))

(assert (=> b!85816 (= res!44144 (= (getValueByKey!139 (toList!759 lt!40550) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!85817 () Bool)

(assert (=> b!85817 (= e!55962 (contains!764 (toList!759 lt!40550) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22189 res!44143) b!85816))

(assert (= (and b!85816 res!44144) b!85817))

(declare-fun m!90079 () Bool)

(assert (=> d!22189 m!90079))

(declare-fun m!90081 () Bool)

(assert (=> d!22189 m!90081))

(declare-fun m!90083 () Bool)

(assert (=> d!22189 m!90083))

(declare-fun m!90085 () Bool)

(assert (=> d!22189 m!90085))

(declare-fun m!90087 () Bool)

(assert (=> b!85816 m!90087))

(declare-fun m!90089 () Bool)

(assert (=> b!85817 m!90089))

(assert (=> d!22077 d!22189))

(declare-fun d!22191 () Bool)

(declare-fun e!55963 () Bool)

(assert (=> d!22191 e!55963))

(declare-fun res!44145 () Bool)

(assert (=> d!22191 (=> (not res!44145) (not e!55963))))

(declare-fun lt!40554 () ListLongMap!1487)

(assert (=> d!22191 (= res!44145 (contains!762 lt!40554 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!40553 () List!1552)

(assert (=> d!22191 (= lt!40554 (ListLongMap!1488 lt!40553))))

(declare-fun lt!40555 () Unit!2533)

(declare-fun lt!40556 () Unit!2533)

(assert (=> d!22191 (= lt!40555 lt!40556)))

(assert (=> d!22191 (= (getValueByKey!139 lt!40553 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22191 (= lt!40556 (lemmaContainsTupThenGetReturnValue!58 lt!40553 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22191 (= lt!40553 (insertStrictlySorted!60 (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22191 (= (+!116 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40554)))

(declare-fun b!85818 () Bool)

(declare-fun res!44146 () Bool)

(assert (=> b!85818 (=> (not res!44146) (not e!55963))))

(assert (=> b!85818 (= res!44146 (= (getValueByKey!139 (toList!759 lt!40554) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!85819 () Bool)

(assert (=> b!85819 (= e!55963 (contains!764 (toList!759 lt!40554) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22191 res!44145) b!85818))

(assert (= (and b!85818 res!44146) b!85819))

(declare-fun m!90091 () Bool)

(assert (=> d!22191 m!90091))

(declare-fun m!90093 () Bool)

(assert (=> d!22191 m!90093))

(declare-fun m!90095 () Bool)

(assert (=> d!22191 m!90095))

(declare-fun m!90097 () Bool)

(assert (=> d!22191 m!90097))

(declare-fun m!90099 () Bool)

(assert (=> b!85818 m!90099))

(declare-fun m!90101 () Bool)

(assert (=> b!85819 m!90101))

(assert (=> d!22077 d!22191))

(declare-fun d!22193 () Bool)

(assert (=> d!22193 (= (+!116 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (+!116 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (=> d!22193 true))

(declare-fun _$28!142 () Unit!2533)

(assert (=> d!22193 (= (choose!506 lt!40169 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))) _$28!142)))

(declare-fun bs!3609 () Bool)

(assert (= bs!3609 d!22193))

(assert (=> bs!3609 m!89607))

(assert (=> bs!3609 m!89607))

(assert (=> bs!3609 m!89609))

(assert (=> bs!3609 m!89601))

(assert (=> bs!3609 m!89601))

(assert (=> bs!3609 m!89603))

(assert (=> d!22077 d!22193))

(declare-fun b!85820 () Bool)

(declare-fun e!55964 () Option!145)

(assert (=> b!85820 (= e!55964 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40241)))))))

(declare-fun b!85822 () Bool)

(declare-fun e!55965 () Option!145)

(assert (=> b!85822 (= e!55965 (getValueByKey!139 (t!5277 (toList!759 lt!40241)) (_1!1126 lt!40171)))))

(declare-fun b!85821 () Bool)

(assert (=> b!85821 (= e!55964 e!55965)))

(declare-fun c!13964 () Bool)

(assert (=> b!85821 (= c!13964 (and ((_ is Cons!1548) (toList!759 lt!40241)) (not (= (_1!1126 (h!2139 (toList!759 lt!40241))) (_1!1126 lt!40171)))))))

(declare-fun d!22195 () Bool)

(declare-fun c!13963 () Bool)

(assert (=> d!22195 (= c!13963 (and ((_ is Cons!1548) (toList!759 lt!40241)) (= (_1!1126 (h!2139 (toList!759 lt!40241))) (_1!1126 lt!40171))))))

(assert (=> d!22195 (= (getValueByKey!139 (toList!759 lt!40241) (_1!1126 lt!40171)) e!55964)))

(declare-fun b!85823 () Bool)

(assert (=> b!85823 (= e!55965 None!143)))

(assert (= (and d!22195 c!13963) b!85820))

(assert (= (and d!22195 (not c!13963)) b!85821))

(assert (= (and b!85821 c!13964) b!85822))

(assert (= (and b!85821 (not c!13964)) b!85823))

(declare-fun m!90103 () Bool)

(assert (=> b!85822 m!90103))

(assert (=> b!85328 d!22195))

(declare-fun b!85824 () Bool)

(declare-fun e!55966 () Option!145)

(assert (=> b!85824 (= e!55966 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40252)))))))

(declare-fun b!85826 () Bool)

(declare-fun e!55967 () Option!145)

(assert (=> b!85826 (= e!55967 (getValueByKey!139 (t!5277 (toList!759 lt!40252)) (_1!1126 lt!40171)))))

(declare-fun b!85825 () Bool)

(assert (=> b!85825 (= e!55966 e!55967)))

(declare-fun c!13966 () Bool)

(assert (=> b!85825 (= c!13966 (and ((_ is Cons!1548) (toList!759 lt!40252)) (not (= (_1!1126 (h!2139 (toList!759 lt!40252))) (_1!1126 lt!40171)))))))

(declare-fun d!22197 () Bool)

(declare-fun c!13965 () Bool)

(assert (=> d!22197 (= c!13965 (and ((_ is Cons!1548) (toList!759 lt!40252)) (= (_1!1126 (h!2139 (toList!759 lt!40252))) (_1!1126 lt!40171))))))

(assert (=> d!22197 (= (getValueByKey!139 (toList!759 lt!40252) (_1!1126 lt!40171)) e!55966)))

(declare-fun b!85827 () Bool)

(assert (=> b!85827 (= e!55967 None!143)))

(assert (= (and d!22197 c!13965) b!85824))

(assert (= (and d!22197 (not c!13965)) b!85825))

(assert (= (and b!85825 c!13966) b!85826))

(assert (= (and b!85825 (not c!13966)) b!85827))

(declare-fun m!90105 () Bool)

(assert (=> b!85826 m!90105))

(assert (=> b!85332 d!22197))

(declare-fun d!22199 () Bool)

(assert (=> d!22199 (= (get!1215 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) from!355) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85617 d!22199))

(declare-fun d!22201 () Bool)

(assert (=> d!22201 (= (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (and (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85539 d!22201))

(declare-fun d!22203 () Bool)

(declare-fun e!55970 () Bool)

(assert (=> d!22203 e!55970))

(declare-fun res!44149 () Bool)

(assert (=> d!22203 (=> (not res!44149) (not e!55970))))

(assert (=> d!22203 (= res!44149 (and (bvsge (index!3150 lt!40372) #b00000000000000000000000000000000) (bvslt (index!3150 lt!40372) (size!2162 (_keys!4010 newMap!16)))))))

(declare-fun lt!40559 () Unit!2533)

(declare-fun choose!511 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) Int) Unit!2533)

(assert (=> d!22203 (= lt!40559 (choose!511 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3150 lt!40372) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22203 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22203 (= (lemmaValidKeyInArrayIsInListMap!89 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3150 lt!40372) (defaultEntry!2338 newMap!16)) lt!40559)))

(declare-fun b!85830 () Bool)

(assert (=> b!85830 (= e!55970 (contains!762 (getCurrentListMap!443 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372))))))

(assert (= (and d!22203 res!44149) b!85830))

(declare-fun m!90107 () Bool)

(assert (=> d!22203 m!90107))

(assert (=> d!22203 m!89885))

(declare-fun m!90109 () Bool)

(assert (=> b!85830 m!90109))

(assert (=> b!85830 m!89691))

(assert (=> b!85830 m!90109))

(assert (=> b!85830 m!89691))

(declare-fun m!90111 () Bool)

(assert (=> b!85830 m!90111))

(assert (=> b!85480 d!22203))

(declare-fun d!22205 () Bool)

(declare-fun e!55973 () Bool)

(assert (=> d!22205 e!55973))

(declare-fun res!44152 () Bool)

(assert (=> d!22205 (=> (not res!44152) (not e!55973))))

(assert (=> d!22205 (= res!44152 (and (bvsge (index!3150 lt!40372) #b00000000000000000000000000000000) (bvslt (index!3150 lt!40372) (size!2163 (_values!2321 newMap!16)))))))

(declare-fun lt!40562 () Unit!2533)

(declare-fun choose!512 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) (_ BitVec 64) V!3027 Int) Unit!2533)

(assert (=> d!22205 (= lt!40562 (choose!512 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3150 lt!40372) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22205 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22205 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3150 lt!40372) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 (defaultEntry!2338 newMap!16)) lt!40562)))

(declare-fun b!85833 () Bool)

(assert (=> b!85833 (= e!55973 (= (+!116 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (getCurrentListMap!443 (_keys!4010 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))))

(assert (= (and d!22205 res!44152) b!85833))

(assert (=> d!22205 m!89417))

(declare-fun m!90113 () Bool)

(assert (=> d!22205 m!90113))

(assert (=> d!22205 m!89885))

(assert (=> b!85833 m!89683))

(assert (=> b!85833 m!89683))

(declare-fun m!90115 () Bool)

(assert (=> b!85833 m!90115))

(assert (=> b!85833 m!89717))

(declare-fun m!90117 () Bool)

(assert (=> b!85833 m!90117))

(assert (=> b!85480 d!22205))

(declare-fun d!22207 () Bool)

(declare-fun e!55975 () Bool)

(assert (=> d!22207 e!55975))

(declare-fun res!44153 () Bool)

(assert (=> d!22207 (=> res!44153 e!55975)))

(declare-fun lt!40565 () Bool)

(assert (=> d!22207 (= res!44153 (not lt!40565))))

(declare-fun lt!40566 () Bool)

(assert (=> d!22207 (= lt!40565 lt!40566)))

(declare-fun lt!40564 () Unit!2533)

(declare-fun e!55974 () Unit!2533)

(assert (=> d!22207 (= lt!40564 e!55974)))

(declare-fun c!13967 () Bool)

(assert (=> d!22207 (= c!13967 lt!40566)))

(assert (=> d!22207 (= lt!40566 (containsKey!143 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22207 (= (contains!762 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) lt!40565)))

(declare-fun b!85834 () Bool)

(declare-fun lt!40563 () Unit!2533)

(assert (=> b!85834 (= e!55974 lt!40563)))

(assert (=> b!85834 (= lt!40563 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> b!85834 (isDefined!93 (getValueByKey!139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!85835 () Bool)

(declare-fun Unit!2550 () Unit!2533)

(assert (=> b!85835 (= e!55974 Unit!2550)))

(declare-fun b!85836 () Bool)

(assert (=> b!85836 (= e!55975 (isDefined!93 (getValueByKey!139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (= (and d!22207 c!13967) b!85834))

(assert (= (and d!22207 (not c!13967)) b!85835))

(assert (= (and d!22207 (not res!44153)) b!85836))

(assert (=> d!22207 m!89417))

(declare-fun m!90119 () Bool)

(assert (=> d!22207 m!90119))

(assert (=> b!85834 m!89417))

(declare-fun m!90121 () Bool)

(assert (=> b!85834 m!90121))

(assert (=> b!85834 m!89417))

(declare-fun m!90123 () Bool)

(assert (=> b!85834 m!90123))

(assert (=> b!85834 m!90123))

(declare-fun m!90125 () Bool)

(assert (=> b!85834 m!90125))

(assert (=> b!85836 m!89417))

(assert (=> b!85836 m!90123))

(assert (=> b!85836 m!90123))

(assert (=> b!85836 m!90125))

(assert (=> b!85480 d!22207))

(assert (=> b!85480 d!22151))

(declare-fun d!22209 () Bool)

(declare-fun res!44154 () Bool)

(declare-fun e!55976 () Bool)

(assert (=> d!22209 (=> (not res!44154) (not e!55976))))

(assert (=> d!22209 (= res!44154 (simpleValid!57 (v!2648 (underlying!293 thiss!992))))))

(assert (=> d!22209 (= (valid!327 (v!2648 (underlying!293 thiss!992))) e!55976)))

(declare-fun b!85837 () Bool)

(declare-fun res!44155 () Bool)

(assert (=> b!85837 (=> (not res!44155) (not e!55976))))

(assert (=> b!85837 (= res!44155 (= (arrayCountValidKeys!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000 (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))) (_size!427 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun b!85838 () Bool)

(declare-fun res!44156 () Bool)

(assert (=> b!85838 (=> (not res!44156) (not e!55976))))

(assert (=> b!85838 (= res!44156 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun b!85839 () Bool)

(assert (=> b!85839 (= e!55976 (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000 Nil!1550))))

(assert (= (and d!22209 res!44154) b!85837))

(assert (= (and b!85837 res!44155) b!85838))

(assert (= (and b!85838 res!44156) b!85839))

(declare-fun m!90127 () Bool)

(assert (=> d!22209 m!90127))

(declare-fun m!90129 () Bool)

(assert (=> b!85837 m!90129))

(declare-fun m!90131 () Bool)

(assert (=> b!85838 m!90131))

(declare-fun m!90133 () Bool)

(assert (=> b!85839 m!90133))

(assert (=> d!22065 d!22209))

(declare-fun d!22211 () Bool)

(declare-fun e!55977 () Bool)

(assert (=> d!22211 e!55977))

(declare-fun res!44157 () Bool)

(assert (=> d!22211 (=> (not res!44157) (not e!55977))))

(declare-fun lt!40568 () ListLongMap!1487)

(assert (=> d!22211 (= res!44157 (contains!762 lt!40568 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!40567 () List!1552)

(assert (=> d!22211 (= lt!40568 (ListLongMap!1488 lt!40567))))

(declare-fun lt!40569 () Unit!2533)

(declare-fun lt!40570 () Unit!2533)

(assert (=> d!22211 (= lt!40569 lt!40570)))

(assert (=> d!22211 (= (getValueByKey!139 lt!40567 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22211 (= lt!40570 (lemmaContainsTupThenGetReturnValue!58 lt!40567 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22211 (= lt!40567 (insertStrictlySorted!60 (toList!759 call!8124) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22211 (= (+!116 call!8124 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40568)))

(declare-fun b!85840 () Bool)

(declare-fun res!44158 () Bool)

(assert (=> b!85840 (=> (not res!44158) (not e!55977))))

(assert (=> b!85840 (= res!44158 (= (getValueByKey!139 (toList!759 lt!40568) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!85841 () Bool)

(assert (=> b!85841 (= e!55977 (contains!764 (toList!759 lt!40568) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22211 res!44157) b!85840))

(assert (= (and b!85840 res!44158) b!85841))

(declare-fun m!90135 () Bool)

(assert (=> d!22211 m!90135))

(declare-fun m!90137 () Bool)

(assert (=> d!22211 m!90137))

(declare-fun m!90139 () Bool)

(assert (=> d!22211 m!90139))

(declare-fun m!90141 () Bool)

(assert (=> d!22211 m!90141))

(declare-fun m!90143 () Bool)

(assert (=> b!85840 m!90143))

(declare-fun m!90145 () Bool)

(assert (=> b!85841 m!90145))

(assert (=> b!85599 d!22211))

(declare-fun d!22213 () Bool)

(declare-fun e!55979 () Bool)

(assert (=> d!22213 e!55979))

(declare-fun res!44159 () Bool)

(assert (=> d!22213 (=> res!44159 e!55979)))

(declare-fun lt!40573 () Bool)

(assert (=> d!22213 (= res!44159 (not lt!40573))))

(declare-fun lt!40574 () Bool)

(assert (=> d!22213 (= lt!40573 lt!40574)))

(declare-fun lt!40572 () Unit!2533)

(declare-fun e!55978 () Unit!2533)

(assert (=> d!22213 (= lt!40572 e!55978)))

(declare-fun c!13968 () Bool)

(assert (=> d!22213 (= c!13968 lt!40574)))

(assert (=> d!22213 (= lt!40574 (containsKey!143 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22213 (= (contains!762 lt!40284 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40573)))

(declare-fun b!85842 () Bool)

(declare-fun lt!40571 () Unit!2533)

(assert (=> b!85842 (= e!55978 lt!40571)))

(assert (=> b!85842 (= lt!40571 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85842 (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85843 () Bool)

(declare-fun Unit!2551 () Unit!2533)

(assert (=> b!85843 (= e!55978 Unit!2551)))

(declare-fun b!85844 () Bool)

(assert (=> b!85844 (= e!55979 (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22213 c!13968) b!85842))

(assert (= (and d!22213 (not c!13968)) b!85843))

(assert (= (and d!22213 (not res!44159)) b!85844))

(declare-fun m!90147 () Bool)

(assert (=> d!22213 m!90147))

(declare-fun m!90149 () Bool)

(assert (=> b!85842 m!90149))

(declare-fun m!90151 () Bool)

(assert (=> b!85842 m!90151))

(assert (=> b!85842 m!90151))

(declare-fun m!90153 () Bool)

(assert (=> b!85842 m!90153))

(assert (=> b!85844 m!90151))

(assert (=> b!85844 m!90151))

(assert (=> b!85844 m!90153))

(assert (=> b!85366 d!22213))

(declare-fun b!85845 () Bool)

(declare-fun e!55980 () Option!145)

(assert (=> b!85845 (= e!55980 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40248)))))))

(declare-fun b!85847 () Bool)

(declare-fun e!55981 () Option!145)

(assert (=> b!85847 (= e!55981 (getValueByKey!139 (t!5277 (toList!759 lt!40248)) (_1!1126 lt!40172)))))

(declare-fun b!85846 () Bool)

(assert (=> b!85846 (= e!55980 e!55981)))

(declare-fun c!13970 () Bool)

(assert (=> b!85846 (= c!13970 (and ((_ is Cons!1548) (toList!759 lt!40248)) (not (= (_1!1126 (h!2139 (toList!759 lt!40248))) (_1!1126 lt!40172)))))))

(declare-fun d!22215 () Bool)

(declare-fun c!13969 () Bool)

(assert (=> d!22215 (= c!13969 (and ((_ is Cons!1548) (toList!759 lt!40248)) (= (_1!1126 (h!2139 (toList!759 lt!40248))) (_1!1126 lt!40172))))))

(assert (=> d!22215 (= (getValueByKey!139 (toList!759 lt!40248) (_1!1126 lt!40172)) e!55980)))

(declare-fun b!85848 () Bool)

(assert (=> b!85848 (= e!55981 None!143)))

(assert (= (and d!22215 c!13969) b!85845))

(assert (= (and d!22215 (not c!13969)) b!85846))

(assert (= (and b!85846 c!13970) b!85847))

(assert (= (and b!85846 (not c!13970)) b!85848))

(declare-fun m!90155 () Bool)

(assert (=> b!85847 m!90155))

(assert (=> b!85330 d!22215))

(declare-fun b!85849 () Bool)

(declare-fun e!55982 () Option!145)

(assert (=> b!85849 (= e!55982 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40256)))))))

(declare-fun b!85851 () Bool)

(declare-fun e!55983 () Option!145)

(assert (=> b!85851 (= e!55983 (getValueByKey!139 (t!5277 (toList!759 lt!40256)) (_1!1126 lt!40172)))))

(declare-fun b!85850 () Bool)

(assert (=> b!85850 (= e!55982 e!55983)))

(declare-fun c!13972 () Bool)

(assert (=> b!85850 (= c!13972 (and ((_ is Cons!1548) (toList!759 lt!40256)) (not (= (_1!1126 (h!2139 (toList!759 lt!40256))) (_1!1126 lt!40172)))))))

(declare-fun d!22217 () Bool)

(declare-fun c!13971 () Bool)

(assert (=> d!22217 (= c!13971 (and ((_ is Cons!1548) (toList!759 lt!40256)) (= (_1!1126 (h!2139 (toList!759 lt!40256))) (_1!1126 lt!40172))))))

(assert (=> d!22217 (= (getValueByKey!139 (toList!759 lt!40256) (_1!1126 lt!40172)) e!55982)))

(declare-fun b!85852 () Bool)

(assert (=> b!85852 (= e!55983 None!143)))

(assert (= (and d!22217 c!13971) b!85849))

(assert (= (and d!22217 (not c!13971)) b!85850))

(assert (= (and b!85850 c!13972) b!85851))

(assert (= (and b!85850 (not c!13972)) b!85852))

(declare-fun m!90157 () Bool)

(assert (=> b!85851 m!90157))

(assert (=> b!85334 d!22217))

(declare-fun d!22219 () Bool)

(declare-fun isEmpty!341 (List!1552) Bool)

(assert (=> d!22219 (= (isEmpty!340 lt!40284) (isEmpty!341 (toList!759 lt!40284)))))

(declare-fun bs!3610 () Bool)

(assert (= bs!3610 d!22219))

(declare-fun m!90159 () Bool)

(assert (=> bs!3610 m!90159))

(assert (=> b!85368 d!22219))

(declare-fun b!85853 () Bool)

(declare-fun e!55984 () Option!145)

(assert (=> b!85853 (= e!55984 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40261)))))))

(declare-fun b!85855 () Bool)

(declare-fun e!55985 () Option!145)

(assert (=> b!85855 (= e!55985 (getValueByKey!139 (t!5277 (toList!759 lt!40261)) (_1!1126 lt!40163)))))

(declare-fun b!85854 () Bool)

(assert (=> b!85854 (= e!55984 e!55985)))

(declare-fun c!13974 () Bool)

(assert (=> b!85854 (= c!13974 (and ((_ is Cons!1548) (toList!759 lt!40261)) (not (= (_1!1126 (h!2139 (toList!759 lt!40261))) (_1!1126 lt!40163)))))))

(declare-fun d!22221 () Bool)

(declare-fun c!13973 () Bool)

(assert (=> d!22221 (= c!13973 (and ((_ is Cons!1548) (toList!759 lt!40261)) (= (_1!1126 (h!2139 (toList!759 lt!40261))) (_1!1126 lt!40163))))))

(assert (=> d!22221 (= (getValueByKey!139 (toList!759 lt!40261) (_1!1126 lt!40163)) e!55984)))

(declare-fun b!85856 () Bool)

(assert (=> b!85856 (= e!55985 None!143)))

(assert (= (and d!22221 c!13973) b!85853))

(assert (= (and d!22221 (not c!13973)) b!85854))

(assert (= (and b!85854 c!13974) b!85855))

(assert (= (and b!85854 (not c!13974)) b!85856))

(declare-fun m!90161 () Bool)

(assert (=> b!85855 m!90161))

(assert (=> b!85336 d!22221))

(declare-fun b!85857 () Bool)

(declare-fun e!55987 () Bool)

(declare-fun e!55988 () Bool)

(assert (=> b!85857 (= e!55987 e!55988)))

(declare-fun c!13978 () Bool)

(assert (=> b!85857 (= c!13978 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!85858 () Bool)

(declare-fun e!55986 () Bool)

(assert (=> b!85858 (= e!55986 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!85858 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!85859 () Bool)

(declare-fun lt!40576 () Unit!2533)

(declare-fun lt!40578 () Unit!2533)

(assert (=> b!85859 (= lt!40576 lt!40578)))

(declare-fun lt!40580 () V!3027)

(declare-fun lt!40579 () (_ BitVec 64))

(declare-fun lt!40575 () ListLongMap!1487)

(declare-fun lt!40577 () (_ BitVec 64))

(assert (=> b!85859 (not (contains!762 (+!116 lt!40575 (tuple2!2233 lt!40579 lt!40580)) lt!40577))))

(assert (=> b!85859 (= lt!40578 (addStillNotContains!33 lt!40575 lt!40579 lt!40580 lt!40577))))

(assert (=> b!85859 (= lt!40577 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!85859 (= lt!40580 (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!85859 (= lt!40579 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!8157 () ListLongMap!1487)

(assert (=> b!85859 (= lt!40575 call!8157)))

(declare-fun e!55989 () ListLongMap!1487)

(assert (=> b!85859 (= e!55989 (+!116 call!8157 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!85860 () Bool)

(declare-fun e!55991 () ListLongMap!1487)

(assert (=> b!85860 (= e!55991 (ListLongMap!1488 Nil!1549))))

(declare-fun b!85862 () Bool)

(declare-fun e!55992 () Bool)

(assert (=> b!85862 (= e!55987 e!55992)))

(assert (=> b!85862 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun res!44163 () Bool)

(declare-fun lt!40581 () ListLongMap!1487)

(assert (=> b!85862 (= res!44163 (contains!762 lt!40581 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!85862 (=> (not res!44163) (not e!55992))))

(declare-fun b!85863 () Bool)

(assert (=> b!85863 (= e!55988 (isEmpty!340 lt!40581))))

(declare-fun b!85864 () Bool)

(declare-fun e!55990 () Bool)

(assert (=> b!85864 (= e!55990 e!55987)))

(declare-fun c!13977 () Bool)

(assert (=> b!85864 (= c!13977 e!55986)))

(declare-fun res!44161 () Bool)

(assert (=> b!85864 (=> (not res!44161) (not e!55986))))

(assert (=> b!85864 (= res!44161 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!85865 () Bool)

(assert (=> b!85865 (= e!55989 call!8157)))

(declare-fun b!85866 () Bool)

(assert (=> b!85866 (= e!55991 e!55989)))

(declare-fun c!13975 () Bool)

(assert (=> b!85866 (= c!13975 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85867 () Bool)

(assert (=> b!85867 (= e!55988 (= lt!40581 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun bm!8154 () Bool)

(assert (=> bm!8154 (= call!8157 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun b!85868 () Bool)

(assert (=> b!85868 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> b!85868 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2163 (_values!2321 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> b!85868 (= e!55992 (= (apply!82 lt!40581 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!22223 () Bool)

(assert (=> d!22223 e!55990))

(declare-fun res!44160 () Bool)

(assert (=> d!22223 (=> (not res!44160) (not e!55990))))

(assert (=> d!22223 (= res!44160 (not (contains!762 lt!40581 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22223 (= lt!40581 e!55991)))

(declare-fun c!13976 () Bool)

(assert (=> d!22223 (= c!13976 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> d!22223 (validMask!0 (mask!6366 (v!2648 (underlying!293 thiss!992))))))

(assert (=> d!22223 (= (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))) lt!40581)))

(declare-fun b!85861 () Bool)

(declare-fun res!44162 () Bool)

(assert (=> b!85861 (=> (not res!44162) (not e!55990))))

(assert (=> b!85861 (= res!44162 (not (contains!762 lt!40581 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22223 c!13976) b!85860))

(assert (= (and d!22223 (not c!13976)) b!85866))

(assert (= (and b!85866 c!13975) b!85859))

(assert (= (and b!85866 (not c!13975)) b!85865))

(assert (= (or b!85859 b!85865) bm!8154))

(assert (= (and d!22223 res!44160) b!85861))

(assert (= (and b!85861 res!44162) b!85864))

(assert (= (and b!85864 res!44161) b!85858))

(assert (= (and b!85864 c!13977) b!85862))

(assert (= (and b!85864 (not c!13977)) b!85857))

(assert (= (and b!85862 res!44163) b!85868))

(assert (= (and b!85857 c!13978) b!85867))

(assert (= (and b!85857 (not c!13978)) b!85863))

(declare-fun b_lambda!3811 () Bool)

(assert (=> (not b_lambda!3811) (not b!85859)))

(assert (=> b!85859 t!5274))

(declare-fun b_and!5185 () Bool)

(assert (= b_and!5181 (and (=> t!5274 result!2917) b_and!5185)))

(assert (=> b!85859 t!5276))

(declare-fun b_and!5187 () Bool)

(assert (= b_and!5183 (and (=> t!5276 result!2921) b_and!5187)))

(declare-fun b_lambda!3813 () Bool)

(assert (=> (not b_lambda!3813) (not b!85868)))

(assert (=> b!85868 t!5274))

(declare-fun b_and!5189 () Bool)

(assert (= b_and!5185 (and (=> t!5274 result!2917) b_and!5189)))

(assert (=> b!85868 t!5276))

(declare-fun b_and!5191 () Bool)

(assert (= b_and!5187 (and (=> t!5276 result!2921) b_and!5191)))

(declare-fun m!90163 () Bool)

(assert (=> b!85866 m!90163))

(assert (=> b!85866 m!90163))

(declare-fun m!90165 () Bool)

(assert (=> b!85866 m!90165))

(assert (=> b!85858 m!90163))

(assert (=> b!85858 m!90163))

(assert (=> b!85858 m!90165))

(declare-fun m!90167 () Bool)

(assert (=> b!85867 m!90167))

(declare-fun m!90169 () Bool)

(assert (=> d!22223 m!90169))

(assert (=> d!22223 m!89445))

(assert (=> b!85862 m!90163))

(assert (=> b!85862 m!90163))

(declare-fun m!90171 () Bool)

(assert (=> b!85862 m!90171))

(assert (=> bm!8154 m!90167))

(declare-fun m!90173 () Bool)

(assert (=> b!85863 m!90173))

(declare-fun m!90175 () Bool)

(assert (=> b!85859 m!90175))

(declare-fun m!90177 () Bool)

(assert (=> b!85859 m!90177))

(declare-fun m!90179 () Bool)

(assert (=> b!85859 m!90179))

(declare-fun m!90181 () Bool)

(assert (=> b!85859 m!90181))

(assert (=> b!85859 m!90163))

(assert (=> b!85859 m!89427))

(assert (=> b!85859 m!90175))

(assert (=> b!85859 m!89427))

(declare-fun m!90183 () Bool)

(assert (=> b!85859 m!90183))

(assert (=> b!85859 m!90177))

(declare-fun m!90185 () Bool)

(assert (=> b!85859 m!90185))

(assert (=> b!85868 m!90163))

(declare-fun m!90187 () Bool)

(assert (=> b!85868 m!90187))

(assert (=> b!85868 m!90175))

(assert (=> b!85868 m!90175))

(assert (=> b!85868 m!89427))

(assert (=> b!85868 m!90183))

(assert (=> b!85868 m!90163))

(assert (=> b!85868 m!89427))

(declare-fun m!90189 () Bool)

(assert (=> b!85861 m!90189))

(assert (=> b!85372 d!22223))

(declare-fun d!22225 () Bool)

(declare-fun e!55993 () Bool)

(assert (=> d!22225 e!55993))

(declare-fun res!44164 () Bool)

(assert (=> d!22225 (=> (not res!44164) (not e!55993))))

(declare-fun lt!40583 () ListLongMap!1487)

(assert (=> d!22225 (= res!44164 (contains!762 lt!40583 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!40582 () List!1552)

(assert (=> d!22225 (= lt!40583 (ListLongMap!1488 lt!40582))))

(declare-fun lt!40584 () Unit!2533)

(declare-fun lt!40585 () Unit!2533)

(assert (=> d!22225 (= lt!40584 lt!40585)))

(assert (=> d!22225 (= (getValueByKey!139 lt!40582 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22225 (= lt!40585 (lemmaContainsTupThenGetReturnValue!58 lt!40582 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22225 (= lt!40582 (insertStrictlySorted!60 (toList!759 call!8085) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22225 (= (+!116 call!8085 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!40583)))

(declare-fun b!85869 () Bool)

(declare-fun res!44165 () Bool)

(assert (=> b!85869 (=> (not res!44165) (not e!55993))))

(assert (=> b!85869 (= res!44165 (= (getValueByKey!139 (toList!759 lt!40583) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!85870 () Bool)

(assert (=> b!85870 (= e!55993 (contains!764 (toList!759 lt!40583) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!22225 res!44164) b!85869))

(assert (= (and b!85869 res!44165) b!85870))

(declare-fun m!90191 () Bool)

(assert (=> d!22225 m!90191))

(declare-fun m!90193 () Bool)

(assert (=> d!22225 m!90193))

(declare-fun m!90195 () Bool)

(assert (=> d!22225 m!90195))

(declare-fun m!90197 () Bool)

(assert (=> d!22225 m!90197))

(declare-fun m!90199 () Bool)

(assert (=> b!85869 m!90199))

(declare-fun m!90201 () Bool)

(assert (=> b!85870 m!90201))

(assert (=> b!85508 d!22225))

(declare-fun d!22227 () Bool)

(declare-fun res!44166 () Bool)

(declare-fun e!55994 () Bool)

(assert (=> d!22227 (=> res!44166 e!55994)))

(assert (=> d!22227 (= res!44166 (= (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22227 (= (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000) e!55994)))

(declare-fun b!85871 () Bool)

(declare-fun e!55995 () Bool)

(assert (=> b!85871 (= e!55994 e!55995)))

(declare-fun res!44167 () Bool)

(assert (=> b!85871 (=> (not res!44167) (not e!55995))))

(assert (=> b!85871 (= res!44167 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!85872 () Bool)

(assert (=> b!85872 (= e!55995 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!22227 (not res!44166)) b!85871))

(assert (= (and b!85871 res!44167) b!85872))

(assert (=> d!22227 m!89941))

(assert (=> b!85872 m!89417))

(declare-fun m!90203 () Bool)

(assert (=> b!85872 m!90203))

(assert (=> bm!8093 d!22227))

(declare-fun d!22229 () Bool)

(assert (=> d!22229 (= (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85606 d!22229))

(declare-fun b!85889 () Bool)

(declare-fun e!56007 () Bool)

(declare-fun call!8163 () Bool)

(assert (=> b!85889 (= e!56007 (not call!8163))))

(declare-fun b!85890 () Bool)

(declare-fun res!44176 () Bool)

(declare-fun e!56006 () Bool)

(assert (=> b!85890 (=> (not res!44176) (not e!56006))))

(declare-fun lt!40591 () SeekEntryResult!253)

(assert (=> b!85890 (= res!44176 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3152 lt!40591)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85890 (and (bvsge (index!3152 lt!40591) #b00000000000000000000000000000000) (bvslt (index!3152 lt!40591) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!85891 () Bool)

(assert (=> b!85891 (and (bvsge (index!3149 lt!40591) #b00000000000000000000000000000000) (bvslt (index!3149 lt!40591) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun res!44179 () Bool)

(assert (=> b!85891 (= res!44179 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3149 lt!40591)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85891 (=> (not res!44179) (not e!56007))))

(declare-fun bm!8159 () Bool)

(assert (=> bm!8159 (= call!8163 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!22231 () Bool)

(declare-fun e!56005 () Bool)

(assert (=> d!22231 e!56005))

(declare-fun c!13983 () Bool)

(assert (=> d!22231 (= c!13983 ((_ is MissingZero!253) lt!40591))))

(assert (=> d!22231 (= lt!40591 (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun lt!40590 () Unit!2533)

(declare-fun choose!513 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) Int) Unit!2533)

(assert (=> d!22231 (= lt!40590 (choose!513 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22231 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22231 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)) lt!40590)))

(declare-fun b!85892 () Bool)

(declare-fun res!44178 () Bool)

(assert (=> b!85892 (=> (not res!44178) (not e!56006))))

(declare-fun call!8162 () Bool)

(assert (=> b!85892 (= res!44178 call!8162)))

(declare-fun e!56004 () Bool)

(assert (=> b!85892 (= e!56004 e!56006)))

(declare-fun bm!8160 () Bool)

(assert (=> bm!8160 (= call!8162 (inRange!0 (ite c!13983 (index!3149 lt!40591) (index!3152 lt!40591)) (mask!6366 newMap!16)))))

(declare-fun b!85893 () Bool)

(assert (=> b!85893 (= e!56006 (not call!8163))))

(declare-fun b!85894 () Bool)

(assert (=> b!85894 (= e!56005 e!56007)))

(declare-fun res!44177 () Bool)

(assert (=> b!85894 (= res!44177 call!8162)))

(assert (=> b!85894 (=> (not res!44177) (not e!56007))))

(declare-fun b!85895 () Bool)

(assert (=> b!85895 (= e!56005 e!56004)))

(declare-fun c!13984 () Bool)

(assert (=> b!85895 (= c!13984 ((_ is MissingVacant!253) lt!40591))))

(declare-fun b!85896 () Bool)

(assert (=> b!85896 (= e!56004 ((_ is Undefined!253) lt!40591))))

(assert (= (and d!22231 c!13983) b!85894))

(assert (= (and d!22231 (not c!13983)) b!85895))

(assert (= (and b!85894 res!44177) b!85891))

(assert (= (and b!85891 res!44179) b!85889))

(assert (= (and b!85895 c!13984) b!85892))

(assert (= (and b!85895 (not c!13984)) b!85896))

(assert (= (and b!85892 res!44178) b!85890))

(assert (= (and b!85890 res!44176) b!85893))

(assert (= (or b!85894 b!85892) bm!8160))

(assert (= (or b!85889 b!85893) bm!8159))

(declare-fun m!90205 () Bool)

(assert (=> b!85890 m!90205))

(assert (=> d!22231 m!89417))

(assert (=> d!22231 m!89697))

(assert (=> d!22231 m!89417))

(declare-fun m!90207 () Bool)

(assert (=> d!22231 m!90207))

(assert (=> d!22231 m!89885))

(assert (=> bm!8159 m!89417))

(assert (=> bm!8159 m!89695))

(declare-fun m!90209 () Bool)

(assert (=> bm!8160 m!90209))

(declare-fun m!90211 () Bool)

(assert (=> b!85891 m!90211))

(assert (=> bm!8095 d!22231))

(assert (=> bm!8031 d!22223))

(declare-fun d!22233 () Bool)

(declare-fun e!56008 () Bool)

(assert (=> d!22233 e!56008))

(declare-fun res!44180 () Bool)

(assert (=> d!22233 (=> (not res!44180) (not e!56008))))

(declare-fun lt!40593 () ListLongMap!1487)

(assert (=> d!22233 (= res!44180 (contains!762 lt!40593 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!40592 () List!1552)

(assert (=> d!22233 (= lt!40593 (ListLongMap!1488 lt!40592))))

(declare-fun lt!40594 () Unit!2533)

(declare-fun lt!40595 () Unit!2533)

(assert (=> d!22233 (= lt!40594 lt!40595)))

(assert (=> d!22233 (= (getValueByKey!139 lt!40592 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22233 (= lt!40595 (lemmaContainsTupThenGetReturnValue!58 lt!40592 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22233 (= lt!40592 (insertStrictlySorted!60 (toList!759 lt!40456) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22233 (= (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40593)))

(declare-fun b!85897 () Bool)

(declare-fun res!44181 () Bool)

(assert (=> b!85897 (=> (not res!44181) (not e!56008))))

(assert (=> b!85897 (= res!44181 (= (getValueByKey!139 (toList!759 lt!40593) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!85898 () Bool)

(assert (=> b!85898 (= e!56008 (contains!764 (toList!759 lt!40593) (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22233 res!44180) b!85897))

(assert (= (and b!85897 res!44181) b!85898))

(declare-fun m!90213 () Bool)

(assert (=> d!22233 m!90213))

(declare-fun m!90215 () Bool)

(assert (=> d!22233 m!90215))

(declare-fun m!90217 () Bool)

(assert (=> d!22233 m!90217))

(declare-fun m!90219 () Bool)

(assert (=> d!22233 m!90219))

(declare-fun m!90221 () Bool)

(assert (=> b!85897 m!90221))

(declare-fun m!90223 () Bool)

(assert (=> b!85898 m!90223))

(assert (=> b!85604 d!22233))

(declare-fun d!22235 () Bool)

(declare-fun e!56010 () Bool)

(assert (=> d!22235 e!56010))

(declare-fun res!44182 () Bool)

(assert (=> d!22235 (=> res!44182 e!56010)))

(declare-fun lt!40598 () Bool)

(assert (=> d!22235 (= res!44182 (not lt!40598))))

(declare-fun lt!40599 () Bool)

(assert (=> d!22235 (= lt!40598 lt!40599)))

(declare-fun lt!40597 () Unit!2533)

(declare-fun e!56009 () Unit!2533)

(assert (=> d!22235 (= lt!40597 e!56009)))

(declare-fun c!13985 () Bool)

(assert (=> d!22235 (= c!13985 lt!40599)))

(assert (=> d!22235 (= lt!40599 (containsKey!143 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458))))

(assert (=> d!22235 (= (contains!762 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40458) lt!40598)))

(declare-fun b!85899 () Bool)

(declare-fun lt!40596 () Unit!2533)

(assert (=> b!85899 (= e!56009 lt!40596)))

(assert (=> b!85899 (= lt!40596 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458))))

(assert (=> b!85899 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458))))

(declare-fun b!85900 () Bool)

(declare-fun Unit!2552 () Unit!2533)

(assert (=> b!85900 (= e!56009 Unit!2552)))

(declare-fun b!85901 () Bool)

(assert (=> b!85901 (= e!56010 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458)))))

(assert (= (and d!22235 c!13985) b!85899))

(assert (= (and d!22235 (not c!13985)) b!85900))

(assert (= (and d!22235 (not res!44182)) b!85901))

(declare-fun m!90225 () Bool)

(assert (=> d!22235 m!90225))

(declare-fun m!90227 () Bool)

(assert (=> b!85899 m!90227))

(declare-fun m!90229 () Bool)

(assert (=> b!85899 m!90229))

(assert (=> b!85899 m!90229))

(declare-fun m!90231 () Bool)

(assert (=> b!85899 m!90231))

(assert (=> b!85901 m!90229))

(assert (=> b!85901 m!90229))

(assert (=> b!85901 m!90231))

(assert (=> b!85604 d!22235))

(declare-fun d!22237 () Bool)

(assert (=> d!22237 (= (apply!82 lt!40452 lt!40454) (get!1216 (getValueByKey!139 (toList!759 lt!40452) lt!40454)))))

(declare-fun bs!3611 () Bool)

(assert (= bs!3611 d!22237))

(declare-fun m!90233 () Bool)

(assert (=> bs!3611 m!90233))

(assert (=> bs!3611 m!90233))

(declare-fun m!90235 () Bool)

(assert (=> bs!3611 m!90235))

(assert (=> b!85604 d!22237))

(declare-fun d!22239 () Bool)

(assert (=> d!22239 (= (apply!82 lt!40449 lt!40441) (get!1216 (getValueByKey!139 (toList!759 lt!40449) lt!40441)))))

(declare-fun bs!3612 () Bool)

(assert (= bs!3612 d!22239))

(declare-fun m!90237 () Bool)

(assert (=> bs!3612 m!90237))

(assert (=> bs!3612 m!90237))

(declare-fun m!90239 () Bool)

(assert (=> bs!3612 m!90239))

(assert (=> b!85604 d!22239))

(declare-fun d!22241 () Bool)

(assert (=> d!22241 (contains!762 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40458)))

(declare-fun lt!40602 () Unit!2533)

(declare-fun choose!514 (ListLongMap!1487 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2533)

(assert (=> d!22241 (= lt!40602 (choose!514 lt!40456 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40458))))

(assert (=> d!22241 (contains!762 lt!40456 lt!40458)))

(assert (=> d!22241 (= (addStillContains!58 lt!40456 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40458) lt!40602)))

(declare-fun bs!3613 () Bool)

(assert (= bs!3613 d!22241))

(assert (=> bs!3613 m!89763))

(assert (=> bs!3613 m!89763))

(assert (=> bs!3613 m!89765))

(declare-fun m!90241 () Bool)

(assert (=> bs!3613 m!90241))

(declare-fun m!90243 () Bool)

(assert (=> bs!3613 m!90243))

(assert (=> b!85604 d!22241))

(declare-fun d!22243 () Bool)

(assert (=> d!22243 (= (apply!82 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40441) (apply!82 lt!40449 lt!40441))))

(declare-fun lt!40605 () Unit!2533)

(declare-fun choose!515 (ListLongMap!1487 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2533)

(assert (=> d!22243 (= lt!40605 (choose!515 lt!40449 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40441))))

(declare-fun e!56013 () Bool)

(assert (=> d!22243 e!56013))

(declare-fun res!44185 () Bool)

(assert (=> d!22243 (=> (not res!44185) (not e!56013))))

(assert (=> d!22243 (= res!44185 (contains!762 lt!40449 lt!40441))))

(assert (=> d!22243 (= (addApplyDifferent!58 lt!40449 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40441) lt!40605)))

(declare-fun b!85906 () Bool)

(assert (=> b!85906 (= e!56013 (not (= lt!40441 lt!40460)))))

(assert (= (and d!22243 res!44185) b!85906))

(declare-fun m!90245 () Bool)

(assert (=> d!22243 m!90245))

(assert (=> d!22243 m!89771))

(declare-fun m!90247 () Bool)

(assert (=> d!22243 m!90247))

(assert (=> d!22243 m!89767))

(assert (=> d!22243 m!89771))

(assert (=> d!22243 m!89783))

(assert (=> b!85604 d!22243))

(declare-fun d!22245 () Bool)

(assert (=> d!22245 (= (apply!82 lt!40445 lt!40442) (get!1216 (getValueByKey!139 (toList!759 lt!40445) lt!40442)))))

(declare-fun bs!3614 () Bool)

(assert (= bs!3614 d!22245))

(declare-fun m!90249 () Bool)

(assert (=> bs!3614 m!90249))

(assert (=> bs!3614 m!90249))

(declare-fun m!90251 () Bool)

(assert (=> bs!3614 m!90251))

(assert (=> b!85604 d!22245))

(declare-fun d!22247 () Bool)

(assert (=> d!22247 (= (apply!82 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40454) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40454)))))

(declare-fun bs!3615 () Bool)

(assert (= bs!3615 d!22247))

(declare-fun m!90253 () Bool)

(assert (=> bs!3615 m!90253))

(assert (=> bs!3615 m!90253))

(declare-fun m!90255 () Bool)

(assert (=> bs!3615 m!90255))

(assert (=> b!85604 d!22247))

(declare-fun d!22249 () Bool)

(declare-fun e!56014 () Bool)

(assert (=> d!22249 e!56014))

(declare-fun res!44186 () Bool)

(assert (=> d!22249 (=> (not res!44186) (not e!56014))))

(declare-fun lt!40607 () ListLongMap!1487)

(assert (=> d!22249 (= res!44186 (contains!762 lt!40607 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!40606 () List!1552)

(assert (=> d!22249 (= lt!40607 (ListLongMap!1488 lt!40606))))

(declare-fun lt!40608 () Unit!2533)

(declare-fun lt!40609 () Unit!2533)

(assert (=> d!22249 (= lt!40608 lt!40609)))

(assert (=> d!22249 (= (getValueByKey!139 lt!40606 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22249 (= lt!40609 (lemmaContainsTupThenGetReturnValue!58 lt!40606 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22249 (= lt!40606 (insertStrictlySorted!60 (toList!759 lt!40445) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22249 (= (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40607)))

(declare-fun b!85907 () Bool)

(declare-fun res!44187 () Bool)

(assert (=> b!85907 (=> (not res!44187) (not e!56014))))

(assert (=> b!85907 (= res!44187 (= (getValueByKey!139 (toList!759 lt!40607) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!85908 () Bool)

(assert (=> b!85908 (= e!56014 (contains!764 (toList!759 lt!40607) (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22249 res!44186) b!85907))

(assert (= (and b!85907 res!44187) b!85908))

(declare-fun m!90257 () Bool)

(assert (=> d!22249 m!90257))

(declare-fun m!90259 () Bool)

(assert (=> d!22249 m!90259))

(declare-fun m!90261 () Bool)

(assert (=> d!22249 m!90261))

(declare-fun m!90263 () Bool)

(assert (=> d!22249 m!90263))

(declare-fun m!90265 () Bool)

(assert (=> b!85907 m!90265))

(declare-fun m!90267 () Bool)

(assert (=> b!85908 m!90267))

(assert (=> b!85604 d!22249))

(declare-fun d!22251 () Bool)

(assert (=> d!22251 (= (apply!82 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40442) (apply!82 lt!40445 lt!40442))))

(declare-fun lt!40610 () Unit!2533)

(assert (=> d!22251 (= lt!40610 (choose!515 lt!40445 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40442))))

(declare-fun e!56015 () Bool)

(assert (=> d!22251 e!56015))

(declare-fun res!44188 () Bool)

(assert (=> d!22251 (=> (not res!44188) (not e!56015))))

(assert (=> d!22251 (= res!44188 (contains!762 lt!40445 lt!40442))))

(assert (=> d!22251 (= (addApplyDifferent!58 lt!40445 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40442) lt!40610)))

(declare-fun b!85909 () Bool)

(assert (=> b!85909 (= e!56015 (not (= lt!40442 lt!40451)))))

(assert (= (and d!22251 res!44188) b!85909))

(declare-fun m!90269 () Bool)

(assert (=> d!22251 m!90269))

(assert (=> d!22251 m!89777))

(declare-fun m!90271 () Bool)

(assert (=> d!22251 m!90271))

(assert (=> d!22251 m!89769))

(assert (=> d!22251 m!89777))

(assert (=> d!22251 m!89779))

(assert (=> b!85604 d!22251))

(declare-fun d!22253 () Bool)

(assert (=> d!22253 (= (apply!82 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40441) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40441)))))

(declare-fun bs!3616 () Bool)

(assert (= bs!3616 d!22253))

(declare-fun m!90273 () Bool)

(assert (=> bs!3616 m!90273))

(assert (=> bs!3616 m!90273))

(declare-fun m!90275 () Bool)

(assert (=> bs!3616 m!90275))

(assert (=> b!85604 d!22253))

(declare-fun d!22255 () Bool)

(assert (=> d!22255 (= (apply!82 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40442) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40442)))))

(declare-fun bs!3617 () Bool)

(assert (= bs!3617 d!22255))

(declare-fun m!90277 () Bool)

(assert (=> bs!3617 m!90277))

(assert (=> bs!3617 m!90277))

(declare-fun m!90279 () Bool)

(assert (=> bs!3617 m!90279))

(assert (=> b!85604 d!22255))

(declare-fun d!22257 () Bool)

(assert (=> d!22257 (= (apply!82 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40454) (apply!82 lt!40452 lt!40454))))

(declare-fun lt!40611 () Unit!2533)

(assert (=> d!22257 (= lt!40611 (choose!515 lt!40452 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40454))))

(declare-fun e!56016 () Bool)

(assert (=> d!22257 e!56016))

(declare-fun res!44189 () Bool)

(assert (=> d!22257 (=> (not res!44189) (not e!56016))))

(assert (=> d!22257 (= res!44189 (contains!762 lt!40452 lt!40454))))

(assert (=> d!22257 (= (addApplyDifferent!58 lt!40452 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40454) lt!40611)))

(declare-fun b!85910 () Bool)

(assert (=> b!85910 (= e!56016 (not (= lt!40454 lt!40455)))))

(assert (= (and d!22257 res!44189) b!85910))

(declare-fun m!90281 () Bool)

(assert (=> d!22257 m!90281))

(assert (=> d!22257 m!89773))

(declare-fun m!90283 () Bool)

(assert (=> d!22257 m!90283))

(assert (=> d!22257 m!89789))

(assert (=> d!22257 m!89773))

(assert (=> d!22257 m!89785))

(assert (=> b!85604 d!22257))

(assert (=> b!85604 d!22083))

(declare-fun d!22259 () Bool)

(declare-fun e!56017 () Bool)

(assert (=> d!22259 e!56017))

(declare-fun res!44190 () Bool)

(assert (=> d!22259 (=> (not res!44190) (not e!56017))))

(declare-fun lt!40613 () ListLongMap!1487)

(assert (=> d!22259 (= res!44190 (contains!762 lt!40613 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!40612 () List!1552)

(assert (=> d!22259 (= lt!40613 (ListLongMap!1488 lt!40612))))

(declare-fun lt!40614 () Unit!2533)

(declare-fun lt!40615 () Unit!2533)

(assert (=> d!22259 (= lt!40614 lt!40615)))

(assert (=> d!22259 (= (getValueByKey!139 lt!40612 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22259 (= lt!40615 (lemmaContainsTupThenGetReturnValue!58 lt!40612 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22259 (= lt!40612 (insertStrictlySorted!60 (toList!759 lt!40452) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22259 (= (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40613)))

(declare-fun b!85911 () Bool)

(declare-fun res!44191 () Bool)

(assert (=> b!85911 (=> (not res!44191) (not e!56017))))

(assert (=> b!85911 (= res!44191 (= (getValueByKey!139 (toList!759 lt!40613) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!85912 () Bool)

(assert (=> b!85912 (= e!56017 (contains!764 (toList!759 lt!40613) (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22259 res!44190) b!85911))

(assert (= (and b!85911 res!44191) b!85912))

(declare-fun m!90285 () Bool)

(assert (=> d!22259 m!90285))

(declare-fun m!90287 () Bool)

(assert (=> d!22259 m!90287))

(declare-fun m!90289 () Bool)

(assert (=> d!22259 m!90289))

(declare-fun m!90291 () Bool)

(assert (=> d!22259 m!90291))

(declare-fun m!90293 () Bool)

(assert (=> b!85911 m!90293))

(declare-fun m!90295 () Bool)

(assert (=> b!85912 m!90295))

(assert (=> b!85604 d!22259))

(declare-fun d!22261 () Bool)

(declare-fun e!56018 () Bool)

(assert (=> d!22261 e!56018))

(declare-fun res!44192 () Bool)

(assert (=> d!22261 (=> (not res!44192) (not e!56018))))

(declare-fun lt!40617 () ListLongMap!1487)

(assert (=> d!22261 (= res!44192 (contains!762 lt!40617 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!40616 () List!1552)

(assert (=> d!22261 (= lt!40617 (ListLongMap!1488 lt!40616))))

(declare-fun lt!40618 () Unit!2533)

(declare-fun lt!40619 () Unit!2533)

(assert (=> d!22261 (= lt!40618 lt!40619)))

(assert (=> d!22261 (= (getValueByKey!139 lt!40616 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22261 (= lt!40619 (lemmaContainsTupThenGetReturnValue!58 lt!40616 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22261 (= lt!40616 (insertStrictlySorted!60 (toList!759 lt!40449) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22261 (= (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40617)))

(declare-fun b!85913 () Bool)

(declare-fun res!44193 () Bool)

(assert (=> b!85913 (=> (not res!44193) (not e!56018))))

(assert (=> b!85913 (= res!44193 (= (getValueByKey!139 (toList!759 lt!40617) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!85914 () Bool)

(assert (=> b!85914 (= e!56018 (contains!764 (toList!759 lt!40617) (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22261 res!44192) b!85913))

(assert (= (and b!85913 res!44193) b!85914))

(declare-fun m!90297 () Bool)

(assert (=> d!22261 m!90297))

(declare-fun m!90299 () Bool)

(assert (=> d!22261 m!90299))

(declare-fun m!90301 () Bool)

(assert (=> d!22261 m!90301))

(declare-fun m!90303 () Bool)

(assert (=> d!22261 m!90303))

(declare-fun m!90305 () Bool)

(assert (=> b!85913 m!90305))

(declare-fun m!90307 () Bool)

(assert (=> b!85914 m!90307))

(assert (=> b!85604 d!22261))

(assert (=> d!22115 d!22079))

(declare-fun d!22263 () Bool)

(declare-fun e!56021 () Bool)

(assert (=> d!22263 e!56021))

(declare-fun c!13988 () Bool)

(assert (=> d!22263 (= c!13988 (and (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!22263 true))

(declare-fun _$29!108 () Unit!2533)

(assert (=> d!22263 (= (choose!507 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))) _$29!108)))

(declare-fun b!85919 () Bool)

(assert (=> b!85919 (= e!56021 (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!85920 () Bool)

(assert (=> b!85920 (= e!56021 (ite (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!22263 c!13988) b!85919))

(assert (= (and d!22263 (not c!13988)) b!85920))

(assert (=> b!85919 m!89417))

(assert (=> b!85919 m!89421))

(assert (=> d!22107 d!22263))

(assert (=> d!22107 d!22079))

(declare-fun b!85929 () Bool)

(declare-fun e!56028 () Bool)

(declare-fun e!56029 () Bool)

(assert (=> b!85929 (= e!56028 e!56029)))

(declare-fun lt!40627 () (_ BitVec 64))

(assert (=> b!85929 (= lt!40627 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40626 () Unit!2533)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4028 (_ BitVec 64) (_ BitVec 32)) Unit!2533)

(assert (=> b!85929 (= lt!40626 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4010 newMap!16) lt!40627 #b00000000000000000000000000000000))))

(assert (=> b!85929 (arrayContainsKey!0 (_keys!4010 newMap!16) lt!40627 #b00000000000000000000000000000000)))

(declare-fun lt!40628 () Unit!2533)

(assert (=> b!85929 (= lt!40628 lt!40626)))

(declare-fun res!44198 () Bool)

(assert (=> b!85929 (= res!44198 (= (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (_keys!4010 newMap!16) (mask!6366 newMap!16)) (Found!253 #b00000000000000000000000000000000)))))

(assert (=> b!85929 (=> (not res!44198) (not e!56029))))

(declare-fun d!22265 () Bool)

(declare-fun res!44199 () Bool)

(declare-fun e!56030 () Bool)

(assert (=> d!22265 (=> res!44199 e!56030)))

(assert (=> d!22265 (= res!44199 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22265 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 newMap!16) (mask!6366 newMap!16)) e!56030)))

(declare-fun b!85930 () Bool)

(declare-fun call!8166 () Bool)

(assert (=> b!85930 (= e!56029 call!8166)))

(declare-fun bm!8163 () Bool)

(assert (=> bm!8163 (= call!8166 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!85931 () Bool)

(assert (=> b!85931 (= e!56030 e!56028)))

(declare-fun c!13991 () Bool)

(assert (=> b!85931 (= c!13991 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85932 () Bool)

(assert (=> b!85932 (= e!56028 call!8166)))

(assert (= (and d!22265 (not res!44199)) b!85931))

(assert (= (and b!85931 c!13991) b!85929))

(assert (= (and b!85931 (not c!13991)) b!85932))

(assert (= (and b!85929 res!44198) b!85930))

(assert (= (or b!85930 b!85932) bm!8163))

(assert (=> b!85929 m!89941))

(declare-fun m!90309 () Bool)

(assert (=> b!85929 m!90309))

(declare-fun m!90311 () Bool)

(assert (=> b!85929 m!90311))

(assert (=> b!85929 m!89941))

(declare-fun m!90313 () Bool)

(assert (=> b!85929 m!90313))

(declare-fun m!90315 () Bool)

(assert (=> bm!8163 m!90315))

(assert (=> b!85931 m!89941))

(assert (=> b!85931 m!89941))

(assert (=> b!85931 m!89961))

(assert (=> b!85547 d!22265))

(declare-fun d!22267 () Bool)

(assert (=> d!22267 (= (+!116 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (+!116 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (=> d!22267 true))

(declare-fun _$28!143 () Unit!2533)

(assert (=> d!22267 (= (choose!506 lt!40173 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) _$28!143)))

(declare-fun bs!3618 () Bool)

(assert (= bs!3618 d!22267))

(assert (=> bs!3618 m!89561))

(assert (=> bs!3618 m!89561))

(assert (=> bs!3618 m!89563))

(assert (=> bs!3618 m!89555))

(assert (=> bs!3618 m!89555))

(assert (=> bs!3618 m!89557))

(assert (=> d!22069 d!22267))

(declare-fun d!22269 () Bool)

(declare-fun e!56031 () Bool)

(assert (=> d!22269 e!56031))

(declare-fun res!44200 () Bool)

(assert (=> d!22269 (=> (not res!44200) (not e!56031))))

(declare-fun lt!40630 () ListLongMap!1487)

(assert (=> d!22269 (= res!44200 (contains!762 lt!40630 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!40629 () List!1552)

(assert (=> d!22269 (= lt!40630 (ListLongMap!1488 lt!40629))))

(declare-fun lt!40631 () Unit!2533)

(declare-fun lt!40632 () Unit!2533)

(assert (=> d!22269 (= lt!40631 lt!40632)))

(assert (=> d!22269 (= (getValueByKey!139 lt!40629 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22269 (= lt!40632 (lemmaContainsTupThenGetReturnValue!58 lt!40629 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22269 (= lt!40629 (insertStrictlySorted!60 (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22269 (= (+!116 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40630)))

(declare-fun b!85933 () Bool)

(declare-fun res!44201 () Bool)

(assert (=> b!85933 (=> (not res!44201) (not e!56031))))

(assert (=> b!85933 (= res!44201 (= (getValueByKey!139 (toList!759 lt!40630) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!85934 () Bool)

(assert (=> b!85934 (= e!56031 (contains!764 (toList!759 lt!40630) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22269 res!44200) b!85933))

(assert (= (and b!85933 res!44201) b!85934))

(declare-fun m!90317 () Bool)

(assert (=> d!22269 m!90317))

(declare-fun m!90319 () Bool)

(assert (=> d!22269 m!90319))

(declare-fun m!90321 () Bool)

(assert (=> d!22269 m!90321))

(declare-fun m!90323 () Bool)

(assert (=> d!22269 m!90323))

(declare-fun m!90325 () Bool)

(assert (=> b!85933 m!90325))

(declare-fun m!90327 () Bool)

(assert (=> b!85934 m!90327))

(assert (=> d!22069 d!22269))

(declare-fun d!22271 () Bool)

(declare-fun e!56032 () Bool)

(assert (=> d!22271 e!56032))

(declare-fun res!44202 () Bool)

(assert (=> d!22271 (=> (not res!44202) (not e!56032))))

(declare-fun lt!40634 () ListLongMap!1487)

(assert (=> d!22271 (= res!44202 (contains!762 lt!40634 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!40633 () List!1552)

(assert (=> d!22271 (= lt!40634 (ListLongMap!1488 lt!40633))))

(declare-fun lt!40635 () Unit!2533)

(declare-fun lt!40636 () Unit!2533)

(assert (=> d!22271 (= lt!40635 lt!40636)))

(assert (=> d!22271 (= (getValueByKey!139 lt!40633 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22271 (= lt!40636 (lemmaContainsTupThenGetReturnValue!58 lt!40633 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22271 (= lt!40633 (insertStrictlySorted!60 (toList!759 lt!40173) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22271 (= (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40634)))

(declare-fun b!85935 () Bool)

(declare-fun res!44203 () Bool)

(assert (=> b!85935 (=> (not res!44203) (not e!56032))))

(assert (=> b!85935 (= res!44203 (= (getValueByKey!139 (toList!759 lt!40634) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!85936 () Bool)

(assert (=> b!85936 (= e!56032 (contains!764 (toList!759 lt!40634) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22271 res!44202) b!85935))

(assert (= (and b!85935 res!44203) b!85936))

(declare-fun m!90329 () Bool)

(assert (=> d!22271 m!90329))

(declare-fun m!90331 () Bool)

(assert (=> d!22271 m!90331))

(declare-fun m!90333 () Bool)

(assert (=> d!22271 m!90333))

(declare-fun m!90335 () Bool)

(assert (=> d!22271 m!90335))

(declare-fun m!90337 () Bool)

(assert (=> b!85935 m!90337))

(declare-fun m!90339 () Bool)

(assert (=> b!85936 m!90339))

(assert (=> d!22069 d!22271))

(declare-fun d!22273 () Bool)

(declare-fun e!56033 () Bool)

(assert (=> d!22273 e!56033))

(declare-fun res!44204 () Bool)

(assert (=> d!22273 (=> (not res!44204) (not e!56033))))

(declare-fun lt!40638 () ListLongMap!1487)

(assert (=> d!22273 (= res!44204 (contains!762 lt!40638 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!40637 () List!1552)

(assert (=> d!22273 (= lt!40638 (ListLongMap!1488 lt!40637))))

(declare-fun lt!40639 () Unit!2533)

(declare-fun lt!40640 () Unit!2533)

(assert (=> d!22273 (= lt!40639 lt!40640)))

(assert (=> d!22273 (= (getValueByKey!139 lt!40637 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22273 (= lt!40640 (lemmaContainsTupThenGetReturnValue!58 lt!40637 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22273 (= lt!40637 (insertStrictlySorted!60 (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22273 (= (+!116 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!40638)))

(declare-fun b!85937 () Bool)

(declare-fun res!44205 () Bool)

(assert (=> b!85937 (=> (not res!44205) (not e!56033))))

(assert (=> b!85937 (= res!44205 (= (getValueByKey!139 (toList!759 lt!40638) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!85938 () Bool)

(assert (=> b!85938 (= e!56033 (contains!764 (toList!759 lt!40638) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!22273 res!44204) b!85937))

(assert (= (and b!85937 res!44205) b!85938))

(declare-fun m!90341 () Bool)

(assert (=> d!22273 m!90341))

(declare-fun m!90343 () Bool)

(assert (=> d!22273 m!90343))

(declare-fun m!90345 () Bool)

(assert (=> d!22273 m!90345))

(declare-fun m!90347 () Bool)

(assert (=> d!22273 m!90347))

(declare-fun m!90349 () Bool)

(assert (=> b!85937 m!90349))

(declare-fun m!90351 () Bool)

(assert (=> b!85938 m!90351))

(assert (=> d!22069 d!22273))

(declare-fun d!22275 () Bool)

(declare-fun e!56034 () Bool)

(assert (=> d!22275 e!56034))

(declare-fun res!44206 () Bool)

(assert (=> d!22275 (=> (not res!44206) (not e!56034))))

(declare-fun lt!40642 () ListLongMap!1487)

(assert (=> d!22275 (= res!44206 (contains!762 lt!40642 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!40641 () List!1552)

(assert (=> d!22275 (= lt!40642 (ListLongMap!1488 lt!40641))))

(declare-fun lt!40643 () Unit!2533)

(declare-fun lt!40644 () Unit!2533)

(assert (=> d!22275 (= lt!40643 lt!40644)))

(assert (=> d!22275 (= (getValueByKey!139 lt!40641 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22275 (= lt!40644 (lemmaContainsTupThenGetReturnValue!58 lt!40641 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22275 (= lt!40641 (insertStrictlySorted!60 (toList!759 lt!40173) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22275 (= (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!40642)))

(declare-fun b!85939 () Bool)

(declare-fun res!44207 () Bool)

(assert (=> b!85939 (=> (not res!44207) (not e!56034))))

(assert (=> b!85939 (= res!44207 (= (getValueByKey!139 (toList!759 lt!40642) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!85940 () Bool)

(assert (=> b!85940 (= e!56034 (contains!764 (toList!759 lt!40642) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!22275 res!44206) b!85939))

(assert (= (and b!85939 res!44207) b!85940))

(declare-fun m!90353 () Bool)

(assert (=> d!22275 m!90353))

(declare-fun m!90355 () Bool)

(assert (=> d!22275 m!90355))

(declare-fun m!90357 () Bool)

(assert (=> d!22275 m!90357))

(declare-fun m!90359 () Bool)

(assert (=> d!22275 m!90359))

(declare-fun m!90361 () Bool)

(assert (=> b!85939 m!90361))

(declare-fun m!90363 () Bool)

(assert (=> b!85940 m!90363))

(assert (=> d!22069 d!22275))

(assert (=> b!85523 d!22105))

(declare-fun d!22277 () Bool)

(declare-fun e!56036 () Bool)

(assert (=> d!22277 e!56036))

(declare-fun res!44208 () Bool)

(assert (=> d!22277 (=> res!44208 e!56036)))

(declare-fun lt!40647 () Bool)

(assert (=> d!22277 (= res!44208 (not lt!40647))))

(declare-fun lt!40648 () Bool)

(assert (=> d!22277 (= lt!40647 lt!40648)))

(declare-fun lt!40646 () Unit!2533)

(declare-fun e!56035 () Unit!2533)

(assert (=> d!22277 (= lt!40646 e!56035)))

(declare-fun c!13992 () Bool)

(assert (=> d!22277 (= c!13992 lt!40648)))

(assert (=> d!22277 (= lt!40648 (containsKey!143 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22277 (= (contains!762 lt!40443 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40647)))

(declare-fun b!85941 () Bool)

(declare-fun lt!40645 () Unit!2533)

(assert (=> b!85941 (= e!56035 lt!40645)))

(assert (=> b!85941 (= lt!40645 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85941 (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85942 () Bool)

(declare-fun Unit!2553 () Unit!2533)

(assert (=> b!85942 (= e!56035 Unit!2553)))

(declare-fun b!85943 () Bool)

(assert (=> b!85943 (= e!56036 (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22277 c!13992) b!85941))

(assert (= (and d!22277 (not c!13992)) b!85942))

(assert (= (and d!22277 (not res!44208)) b!85943))

(declare-fun m!90365 () Bool)

(assert (=> d!22277 m!90365))

(declare-fun m!90367 () Bool)

(assert (=> b!85941 m!90367))

(assert (=> b!85941 m!89871))

(assert (=> b!85941 m!89871))

(declare-fun m!90369 () Bool)

(assert (=> b!85941 m!90369))

(assert (=> b!85943 m!89871))

(assert (=> b!85943 m!89871))

(assert (=> b!85943 m!90369))

(assert (=> bm!8126 d!22277))

(declare-fun b!85953 () Bool)

(declare-fun res!44217 () Bool)

(declare-fun e!56039 () Bool)

(assert (=> b!85953 (=> (not res!44217) (not e!56039))))

(declare-fun size!2166 (LongMapFixedSize!756) (_ BitVec 32))

(assert (=> b!85953 (= res!44217 (bvsge (size!2166 newMap!16) (_size!427 newMap!16)))))

(declare-fun b!85954 () Bool)

(declare-fun res!44219 () Bool)

(assert (=> b!85954 (=> (not res!44219) (not e!56039))))

(assert (=> b!85954 (= res!44219 (= (size!2166 newMap!16) (bvadd (_size!427 newMap!16) (bvsdiv (bvadd (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!85955 () Bool)

(assert (=> b!85955 (= e!56039 (and (bvsge (extraKeys!2177 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2177 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!427 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!85952 () Bool)

(declare-fun res!44218 () Bool)

(assert (=> b!85952 (=> (not res!44218) (not e!56039))))

(assert (=> b!85952 (= res!44218 (and (= (size!2163 (_values!2321 newMap!16)) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001)) (= (size!2162 (_keys!4010 newMap!16)) (size!2163 (_values!2321 newMap!16))) (bvsge (_size!427 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!427 newMap!16) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!22279 () Bool)

(declare-fun res!44220 () Bool)

(assert (=> d!22279 (=> (not res!44220) (not e!56039))))

(assert (=> d!22279 (= res!44220 (validMask!0 (mask!6366 newMap!16)))))

(assert (=> d!22279 (= (simpleValid!57 newMap!16) e!56039)))

(assert (= (and d!22279 res!44220) b!85952))

(assert (= (and b!85952 res!44218) b!85953))

(assert (= (and b!85953 res!44217) b!85954))

(assert (= (and b!85954 res!44219) b!85955))

(declare-fun m!90371 () Bool)

(assert (=> b!85953 m!90371))

(assert (=> b!85954 m!90371))

(assert (=> d!22279 m!89885))

(assert (=> d!22111 d!22279))

(assert (=> d!22103 d!22109))

(declare-fun d!22281 () Bool)

(assert (=> d!22281 (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) from!355 Nil!1550)))

(assert (=> d!22281 true))

(declare-fun _$71!114 () Unit!2533)

(assert (=> d!22281 (= (choose!39 (_keys!4010 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!114)))

(declare-fun bs!3619 () Bool)

(assert (= bs!3619 d!22281))

(assert (=> bs!3619 m!89415))

(assert (=> d!22103 d!22281))

(declare-fun d!22283 () Bool)

(assert (=> d!22283 (= (+!116 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40385 (zeroValue!2230 newMap!16) lt!40164 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40651 () Unit!2533)

(declare-fun choose!516 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 V!3027 Int) Unit!2533)

(assert (=> d!22283 (= lt!40651 (choose!516 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40385 (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) lt!40164 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22283 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22283 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40385 (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) lt!40164 (defaultEntry!2338 newMap!16)) lt!40651)))

(declare-fun bs!3620 () Bool)

(assert (= bs!3620 d!22283))

(assert (=> bs!3620 m!89683))

(declare-fun m!90373 () Bool)

(assert (=> bs!3620 m!90373))

(assert (=> bs!3620 m!89885))

(declare-fun m!90375 () Bool)

(assert (=> bs!3620 m!90375))

(assert (=> bs!3620 m!89683))

(declare-fun m!90377 () Bool)

(assert (=> bs!3620 m!90377))

(assert (=> b!85485 d!22283))

(declare-fun d!22285 () Bool)

(declare-fun e!56041 () Bool)

(assert (=> d!22285 e!56041))

(declare-fun res!44221 () Bool)

(assert (=> d!22285 (=> res!44221 e!56041)))

(declare-fun lt!40654 () Bool)

(assert (=> d!22285 (= res!44221 (not lt!40654))))

(declare-fun lt!40655 () Bool)

(assert (=> d!22285 (= lt!40654 lt!40655)))

(declare-fun lt!40653 () Unit!2533)

(declare-fun e!56040 () Unit!2533)

(assert (=> d!22285 (= lt!40653 e!56040)))

(declare-fun c!13993 () Bool)

(assert (=> d!22285 (= c!13993 lt!40655)))

(assert (=> d!22285 (= lt!40655 (containsKey!143 (toList!759 lt!40252) (_1!1126 lt!40171)))))

(assert (=> d!22285 (= (contains!762 lt!40252 (_1!1126 lt!40171)) lt!40654)))

(declare-fun b!85956 () Bool)

(declare-fun lt!40652 () Unit!2533)

(assert (=> b!85956 (= e!56040 lt!40652)))

(assert (=> b!85956 (= lt!40652 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40252) (_1!1126 lt!40171)))))

(assert (=> b!85956 (isDefined!93 (getValueByKey!139 (toList!759 lt!40252) (_1!1126 lt!40171)))))

(declare-fun b!85957 () Bool)

(declare-fun Unit!2554 () Unit!2533)

(assert (=> b!85957 (= e!56040 Unit!2554)))

(declare-fun b!85958 () Bool)

(assert (=> b!85958 (= e!56041 (isDefined!93 (getValueByKey!139 (toList!759 lt!40252) (_1!1126 lt!40171))))))

(assert (= (and d!22285 c!13993) b!85956))

(assert (= (and d!22285 (not c!13993)) b!85957))

(assert (= (and d!22285 (not res!44221)) b!85958))

(declare-fun m!90379 () Bool)

(assert (=> d!22285 m!90379))

(declare-fun m!90381 () Bool)

(assert (=> b!85956 m!90381))

(assert (=> b!85956 m!89585))

(assert (=> b!85956 m!89585))

(declare-fun m!90383 () Bool)

(assert (=> b!85956 m!90383))

(assert (=> b!85958 m!89585))

(assert (=> b!85958 m!89585))

(assert (=> b!85958 m!90383))

(assert (=> d!22073 d!22285))

(declare-fun b!85959 () Bool)

(declare-fun e!56042 () Option!145)

(assert (=> b!85959 (= e!56042 (Some!144 (_2!1126 (h!2139 lt!40251))))))

(declare-fun b!85961 () Bool)

(declare-fun e!56043 () Option!145)

(assert (=> b!85961 (= e!56043 (getValueByKey!139 (t!5277 lt!40251) (_1!1126 lt!40171)))))

(declare-fun b!85960 () Bool)

(assert (=> b!85960 (= e!56042 e!56043)))

(declare-fun c!13995 () Bool)

(assert (=> b!85960 (= c!13995 (and ((_ is Cons!1548) lt!40251) (not (= (_1!1126 (h!2139 lt!40251)) (_1!1126 lt!40171)))))))

(declare-fun d!22287 () Bool)

(declare-fun c!13994 () Bool)

(assert (=> d!22287 (= c!13994 (and ((_ is Cons!1548) lt!40251) (= (_1!1126 (h!2139 lt!40251)) (_1!1126 lt!40171))))))

(assert (=> d!22287 (= (getValueByKey!139 lt!40251 (_1!1126 lt!40171)) e!56042)))

(declare-fun b!85962 () Bool)

(assert (=> b!85962 (= e!56043 None!143)))

(assert (= (and d!22287 c!13994) b!85959))

(assert (= (and d!22287 (not c!13994)) b!85960))

(assert (= (and b!85960 c!13995) b!85961))

(assert (= (and b!85960 (not c!13995)) b!85962))

(declare-fun m!90385 () Bool)

(assert (=> b!85961 m!90385))

(assert (=> d!22073 d!22287))

(declare-fun d!22289 () Bool)

(assert (=> d!22289 (= (getValueByKey!139 lt!40251 (_1!1126 lt!40171)) (Some!144 (_2!1126 lt!40171)))))

(declare-fun lt!40656 () Unit!2533)

(assert (=> d!22289 (= lt!40656 (choose!508 lt!40251 (_1!1126 lt!40171) (_2!1126 lt!40171)))))

(declare-fun e!56044 () Bool)

(assert (=> d!22289 e!56044))

(declare-fun res!44222 () Bool)

(assert (=> d!22289 (=> (not res!44222) (not e!56044))))

(assert (=> d!22289 (= res!44222 (isStrictlySorted!293 lt!40251))))

(assert (=> d!22289 (= (lemmaContainsTupThenGetReturnValue!58 lt!40251 (_1!1126 lt!40171) (_2!1126 lt!40171)) lt!40656)))

(declare-fun b!85963 () Bool)

(declare-fun res!44223 () Bool)

(assert (=> b!85963 (=> (not res!44223) (not e!56044))))

(assert (=> b!85963 (= res!44223 (containsKey!143 lt!40251 (_1!1126 lt!40171)))))

(declare-fun b!85964 () Bool)

(assert (=> b!85964 (= e!56044 (contains!764 lt!40251 (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(assert (= (and d!22289 res!44222) b!85963))

(assert (= (and b!85963 res!44223) b!85964))

(assert (=> d!22289 m!89579))

(declare-fun m!90387 () Bool)

(assert (=> d!22289 m!90387))

(declare-fun m!90389 () Bool)

(assert (=> d!22289 m!90389))

(declare-fun m!90391 () Bool)

(assert (=> b!85963 m!90391))

(declare-fun m!90393 () Bool)

(assert (=> b!85964 m!90393))

(assert (=> d!22073 d!22289))

(declare-fun b!85965 () Bool)

(declare-fun e!56046 () List!1552)

(declare-fun c!13997 () Bool)

(declare-fun c!13996 () Bool)

(assert (=> b!85965 (= e!56046 (ite c!13996 (t!5277 (toList!759 lt!40176)) (ite c!13997 (Cons!1548 (h!2139 (toList!759 lt!40176)) (t!5277 (toList!759 lt!40176))) Nil!1549)))))

(declare-fun b!85966 () Bool)

(declare-fun e!56048 () Bool)

(declare-fun lt!40657 () List!1552)

(assert (=> b!85966 (= e!56048 (contains!764 lt!40657 (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun b!85967 () Bool)

(declare-fun e!56047 () List!1552)

(declare-fun e!56045 () List!1552)

(assert (=> b!85967 (= e!56047 e!56045)))

(assert (=> b!85967 (= c!13996 (and ((_ is Cons!1548) (toList!759 lt!40176)) (= (_1!1126 (h!2139 (toList!759 lt!40176))) (_1!1126 lt!40171))))))

(declare-fun b!85968 () Bool)

(declare-fun res!44224 () Bool)

(assert (=> b!85968 (=> (not res!44224) (not e!56048))))

(assert (=> b!85968 (= res!44224 (containsKey!143 lt!40657 (_1!1126 lt!40171)))))

(declare-fun d!22291 () Bool)

(assert (=> d!22291 e!56048))

(declare-fun res!44225 () Bool)

(assert (=> d!22291 (=> (not res!44225) (not e!56048))))

(assert (=> d!22291 (= res!44225 (isStrictlySorted!293 lt!40657))))

(assert (=> d!22291 (= lt!40657 e!56047)))

(declare-fun c!13998 () Bool)

(assert (=> d!22291 (= c!13998 (and ((_ is Cons!1548) (toList!759 lt!40176)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40176))) (_1!1126 lt!40171))))))

(assert (=> d!22291 (isStrictlySorted!293 (toList!759 lt!40176))))

(assert (=> d!22291 (= (insertStrictlySorted!60 (toList!759 lt!40176) (_1!1126 lt!40171) (_2!1126 lt!40171)) lt!40657)))

(declare-fun call!8167 () List!1552)

(declare-fun bm!8164 () Bool)

(assert (=> bm!8164 (= call!8167 ($colon$colon!71 e!56046 (ite c!13998 (h!2139 (toList!759 lt!40176)) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171)))))))

(declare-fun c!13999 () Bool)

(assert (=> bm!8164 (= c!13999 c!13998)))

(declare-fun bm!8165 () Bool)

(declare-fun call!8169 () List!1552)

(declare-fun call!8168 () List!1552)

(assert (=> bm!8165 (= call!8169 call!8168)))

(declare-fun b!85969 () Bool)

(assert (=> b!85969 (= e!56047 call!8167)))

(declare-fun b!85970 () Bool)

(declare-fun e!56049 () List!1552)

(assert (=> b!85970 (= e!56049 call!8169)))

(declare-fun b!85971 () Bool)

(assert (=> b!85971 (= e!56045 call!8168)))

(declare-fun b!85972 () Bool)

(assert (=> b!85972 (= e!56046 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40176)) (_1!1126 lt!40171) (_2!1126 lt!40171)))))

(declare-fun b!85973 () Bool)

(assert (=> b!85973 (= e!56049 call!8169)))

(declare-fun b!85974 () Bool)

(assert (=> b!85974 (= c!13997 (and ((_ is Cons!1548) (toList!759 lt!40176)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40176))) (_1!1126 lt!40171))))))

(assert (=> b!85974 (= e!56045 e!56049)))

(declare-fun bm!8166 () Bool)

(assert (=> bm!8166 (= call!8168 call!8167)))

(assert (= (and d!22291 c!13998) b!85969))

(assert (= (and d!22291 (not c!13998)) b!85967))

(assert (= (and b!85967 c!13996) b!85971))

(assert (= (and b!85967 (not c!13996)) b!85974))

(assert (= (and b!85974 c!13997) b!85973))

(assert (= (and b!85974 (not c!13997)) b!85970))

(assert (= (or b!85973 b!85970) bm!8165))

(assert (= (or b!85971 bm!8165) bm!8166))

(assert (= (or b!85969 bm!8166) bm!8164))

(assert (= (and bm!8164 c!13999) b!85972))

(assert (= (and bm!8164 (not c!13999)) b!85965))

(assert (= (and d!22291 res!44225) b!85968))

(assert (= (and b!85968 res!44224) b!85966))

(declare-fun m!90395 () Bool)

(assert (=> b!85968 m!90395))

(declare-fun m!90397 () Bool)

(assert (=> b!85972 m!90397))

(declare-fun m!90399 () Bool)

(assert (=> d!22291 m!90399))

(declare-fun m!90401 () Bool)

(assert (=> d!22291 m!90401))

(declare-fun m!90403 () Bool)

(assert (=> b!85966 m!90403))

(declare-fun m!90405 () Bool)

(assert (=> bm!8164 m!90405))

(assert (=> d!22073 d!22291))

(declare-fun d!22293 () Bool)

(declare-fun e!56051 () Bool)

(assert (=> d!22293 e!56051))

(declare-fun res!44226 () Bool)

(assert (=> d!22293 (=> res!44226 e!56051)))

(declare-fun lt!40660 () Bool)

(assert (=> d!22293 (= res!44226 (not lt!40660))))

(declare-fun lt!40661 () Bool)

(assert (=> d!22293 (= lt!40660 lt!40661)))

(declare-fun lt!40659 () Unit!2533)

(declare-fun e!56050 () Unit!2533)

(assert (=> d!22293 (= lt!40659 e!56050)))

(declare-fun c!14000 () Bool)

(assert (=> d!22293 (= c!14000 lt!40661)))

(assert (=> d!22293 (= lt!40661 (containsKey!143 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!22293 (= (contains!762 lt!40443 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40660)))

(declare-fun b!85975 () Bool)

(declare-fun lt!40658 () Unit!2533)

(assert (=> b!85975 (= e!56050 lt!40658)))

(assert (=> b!85975 (= lt!40658 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85975 (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85976 () Bool)

(declare-fun Unit!2555 () Unit!2533)

(assert (=> b!85976 (= e!56050 Unit!2555)))

(declare-fun b!85977 () Bool)

(assert (=> b!85977 (= e!56051 (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!22293 c!14000) b!85975))

(assert (= (and d!22293 (not c!14000)) b!85976))

(assert (= (and d!22293 (not res!44226)) b!85977))

(assert (=> d!22293 m!89623))

(declare-fun m!90407 () Bool)

(assert (=> d!22293 m!90407))

(assert (=> b!85975 m!89623))

(declare-fun m!90409 () Bool)

(assert (=> b!85975 m!90409))

(assert (=> b!85975 m!89623))

(assert (=> b!85975 m!89979))

(assert (=> b!85975 m!89979))

(declare-fun m!90411 () Bool)

(assert (=> b!85975 m!90411))

(assert (=> b!85977 m!89623))

(assert (=> b!85977 m!89979))

(assert (=> b!85977 m!89979))

(assert (=> b!85977 m!90411))

(assert (=> b!85593 d!22293))

(declare-fun bm!8167 () Bool)

(declare-fun call!8176 () ListLongMap!1487)

(declare-fun call!8173 () ListLongMap!1487)

(assert (=> bm!8167 (= call!8176 call!8173)))

(declare-fun b!85978 () Bool)

(declare-fun e!56061 () ListLongMap!1487)

(declare-fun call!8171 () ListLongMap!1487)

(assert (=> b!85978 (= e!56061 call!8171)))

(declare-fun b!85979 () Bool)

(declare-fun e!56063 () ListLongMap!1487)

(declare-fun call!8174 () ListLongMap!1487)

(assert (=> b!85979 (= e!56063 call!8174)))

(declare-fun b!85980 () Bool)

(declare-fun e!56059 () Bool)

(declare-fun e!56062 () Bool)

(assert (=> b!85980 (= e!56059 e!56062)))

(declare-fun res!44232 () Bool)

(assert (=> b!85980 (=> (not res!44232) (not e!56062))))

(declare-fun lt!40666 () ListLongMap!1487)

(assert (=> b!85980 (= res!44232 (contains!762 lt!40666 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!85980 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8168 () Bool)

(assert (=> bm!8168 (= call!8174 call!8176)))

(declare-fun b!85981 () Bool)

(declare-fun e!56058 () Unit!2533)

(declare-fun Unit!2556 () Unit!2533)

(assert (=> b!85981 (= e!56058 Unit!2556)))

(declare-fun b!85982 () Bool)

(declare-fun e!56055 () Bool)

(declare-fun e!56052 () Bool)

(assert (=> b!85982 (= e!56055 e!56052)))

(declare-fun res!44230 () Bool)

(declare-fun call!8175 () Bool)

(assert (=> b!85982 (= res!44230 call!8175)))

(assert (=> b!85982 (=> (not res!44230) (not e!56052))))

(declare-fun b!85984 () Bool)

(declare-fun e!56064 () Bool)

(declare-fun call!8172 () Bool)

(assert (=> b!85984 (= e!56064 (not call!8172))))

(declare-fun b!85985 () Bool)

(declare-fun c!14005 () Bool)

(assert (=> b!85985 (= c!14005 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!85985 (= e!56061 e!56063)))

(declare-fun c!14004 () Bool)

(declare-fun bm!8169 () Bool)

(declare-fun c!14002 () Bool)

(declare-fun call!8170 () ListLongMap!1487)

(assert (=> bm!8169 (= call!8170 (+!116 (ite c!14004 call!8173 (ite c!14002 call!8176 call!8174)) (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!85986 () Bool)

(declare-fun e!56053 () ListLongMap!1487)

(assert (=> b!85986 (= e!56053 (+!116 call!8170 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun bm!8170 () Bool)

(assert (=> bm!8170 (= call!8175 (contains!762 lt!40666 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85987 () Bool)

(assert (=> b!85987 (= e!56063 call!8171)))

(declare-fun b!85988 () Bool)

(declare-fun res!44235 () Bool)

(declare-fun e!56056 () Bool)

(assert (=> b!85988 (=> (not res!44235) (not e!56056))))

(assert (=> b!85988 (= res!44235 e!56055)))

(declare-fun c!14006 () Bool)

(assert (=> b!85988 (= c!14006 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!85989 () Bool)

(assert (=> b!85989 (= e!56053 e!56061)))

(assert (=> b!85989 (= c!14002 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85990 () Bool)

(assert (=> b!85990 (= e!56056 e!56064)))

(declare-fun c!14001 () Bool)

(assert (=> b!85990 (= c!14001 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8171 () Bool)

(assert (=> bm!8171 (= call!8171 call!8170)))

(declare-fun d!22295 () Bool)

(assert (=> d!22295 e!56056))

(declare-fun res!44234 () Bool)

(assert (=> d!22295 (=> (not res!44234) (not e!56056))))

(assert (=> d!22295 (= res!44234 (or (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))))

(declare-fun lt!40680 () ListLongMap!1487)

(assert (=> d!22295 (= lt!40666 lt!40680)))

(declare-fun lt!40662 () Unit!2533)

(assert (=> d!22295 (= lt!40662 e!56058)))

(declare-fun c!14003 () Bool)

(declare-fun e!56060 () Bool)

(assert (=> d!22295 (= c!14003 e!56060)))

(declare-fun res!44228 () Bool)

(assert (=> d!22295 (=> (not res!44228) (not e!56060))))

(assert (=> d!22295 (= res!44228 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22295 (= lt!40680 e!56053)))

(assert (=> d!22295 (= c!14004 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22295 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22295 (= (getCurrentListMap!443 (_keys!4010 newMap!16) (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!40666)))

(declare-fun b!85983 () Bool)

(assert (=> b!85983 (= e!56055 (not call!8175))))

(declare-fun b!85991 () Bool)

(declare-fun lt!40670 () Unit!2533)

(assert (=> b!85991 (= e!56058 lt!40670)))

(declare-fun lt!40679 () ListLongMap!1487)

(assert (=> b!85991 (= lt!40679 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40663 () (_ BitVec 64))

(assert (=> b!85991 (= lt!40663 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40681 () (_ BitVec 64))

(assert (=> b!85991 (= lt!40681 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40673 () Unit!2533)

(assert (=> b!85991 (= lt!40673 (addStillContains!58 lt!40679 lt!40663 (zeroValue!2230 newMap!16) lt!40681))))

(assert (=> b!85991 (contains!762 (+!116 lt!40679 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16))) lt!40681)))

(declare-fun lt!40669 () Unit!2533)

(assert (=> b!85991 (= lt!40669 lt!40673)))

(declare-fun lt!40675 () ListLongMap!1487)

(assert (=> b!85991 (= lt!40675 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40678 () (_ BitVec 64))

(assert (=> b!85991 (= lt!40678 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40677 () (_ BitVec 64))

(assert (=> b!85991 (= lt!40677 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40671 () Unit!2533)

(assert (=> b!85991 (= lt!40671 (addApplyDifferent!58 lt!40675 lt!40678 (minValue!2230 newMap!16) lt!40677))))

(assert (=> b!85991 (= (apply!82 (+!116 lt!40675 (tuple2!2233 lt!40678 (minValue!2230 newMap!16))) lt!40677) (apply!82 lt!40675 lt!40677))))

(declare-fun lt!40682 () Unit!2533)

(assert (=> b!85991 (= lt!40682 lt!40671)))

(declare-fun lt!40668 () ListLongMap!1487)

(assert (=> b!85991 (= lt!40668 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40674 () (_ BitVec 64))

(assert (=> b!85991 (= lt!40674 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40665 () (_ BitVec 64))

(assert (=> b!85991 (= lt!40665 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40676 () Unit!2533)

(assert (=> b!85991 (= lt!40676 (addApplyDifferent!58 lt!40668 lt!40674 (zeroValue!2230 newMap!16) lt!40665))))

(assert (=> b!85991 (= (apply!82 (+!116 lt!40668 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16))) lt!40665) (apply!82 lt!40668 lt!40665))))

(declare-fun lt!40667 () Unit!2533)

(assert (=> b!85991 (= lt!40667 lt!40676)))

(declare-fun lt!40672 () ListLongMap!1487)

(assert (=> b!85991 (= lt!40672 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40683 () (_ BitVec 64))

(assert (=> b!85991 (= lt!40683 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40664 () (_ BitVec 64))

(assert (=> b!85991 (= lt!40664 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85991 (= lt!40670 (addApplyDifferent!58 lt!40672 lt!40683 (minValue!2230 newMap!16) lt!40664))))

(assert (=> b!85991 (= (apply!82 (+!116 lt!40672 (tuple2!2233 lt!40683 (minValue!2230 newMap!16))) lt!40664) (apply!82 lt!40672 lt!40664))))

(declare-fun b!85992 () Bool)

(declare-fun e!56054 () Bool)

(assert (=> b!85992 (= e!56054 (= (apply!82 lt!40666 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!85993 () Bool)

(assert (=> b!85993 (= e!56060 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85994 () Bool)

(assert (=> b!85994 (= e!56062 (= (apply!82 lt!40666 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85994 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))))))))

(assert (=> b!85994 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8172 () Bool)

(assert (=> bm!8172 (= call!8172 (contains!762 lt!40666 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85995 () Bool)

(assert (=> b!85995 (= e!56064 e!56054)))

(declare-fun res!44231 () Bool)

(assert (=> b!85995 (= res!44231 call!8172)))

(assert (=> b!85995 (=> (not res!44231) (not e!56054))))

(declare-fun b!85996 () Bool)

(declare-fun res!44229 () Bool)

(assert (=> b!85996 (=> (not res!44229) (not e!56056))))

(assert (=> b!85996 (= res!44229 e!56059)))

(declare-fun res!44227 () Bool)

(assert (=> b!85996 (=> res!44227 e!56059)))

(declare-fun e!56057 () Bool)

(assert (=> b!85996 (= res!44227 (not e!56057))))

(declare-fun res!44233 () Bool)

(assert (=> b!85996 (=> (not res!44233) (not e!56057))))

(assert (=> b!85996 (= res!44233 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8173 () Bool)

(assert (=> bm!8173 (= call!8173 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!85997 () Bool)

(assert (=> b!85997 (= e!56057 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85998 () Bool)

(assert (=> b!85998 (= e!56052 (= (apply!82 lt!40666 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(assert (= (and d!22295 c!14004) b!85986))

(assert (= (and d!22295 (not c!14004)) b!85989))

(assert (= (and b!85989 c!14002) b!85978))

(assert (= (and b!85989 (not c!14002)) b!85985))

(assert (= (and b!85985 c!14005) b!85987))

(assert (= (and b!85985 (not c!14005)) b!85979))

(assert (= (or b!85987 b!85979) bm!8168))

(assert (= (or b!85978 bm!8168) bm!8167))

(assert (= (or b!85978 b!85987) bm!8171))

(assert (= (or b!85986 bm!8167) bm!8173))

(assert (= (or b!85986 bm!8171) bm!8169))

(assert (= (and d!22295 res!44228) b!85993))

(assert (= (and d!22295 c!14003) b!85991))

(assert (= (and d!22295 (not c!14003)) b!85981))

(assert (= (and d!22295 res!44234) b!85996))

(assert (= (and b!85996 res!44233) b!85997))

(assert (= (and b!85996 (not res!44227)) b!85980))

(assert (= (and b!85980 res!44232) b!85994))

(assert (= (and b!85996 res!44229) b!85988))

(assert (= (and b!85988 c!14006) b!85982))

(assert (= (and b!85988 (not c!14006)) b!85983))

(assert (= (and b!85982 res!44230) b!85998))

(assert (= (or b!85982 b!85983) bm!8170))

(assert (= (and b!85988 res!44235) b!85990))

(assert (= (and b!85990 c!14001) b!85995))

(assert (= (and b!85990 (not c!14001)) b!85984))

(assert (= (and b!85995 res!44231) b!85992))

(assert (= (or b!85995 b!85984) bm!8172))

(declare-fun b_lambda!3815 () Bool)

(assert (=> (not b_lambda!3815) (not b!85994)))

(assert (=> b!85994 t!5286))

(declare-fun b_and!5193 () Bool)

(assert (= b_and!5189 (and (=> t!5286 result!2931) b_and!5193)))

(assert (=> b!85994 t!5288))

(declare-fun b_and!5195 () Bool)

(assert (= b_and!5191 (and (=> t!5288 result!2933) b_and!5195)))

(declare-fun m!90413 () Bool)

(assert (=> b!85992 m!90413))

(declare-fun m!90415 () Bool)

(assert (=> b!85991 m!90415))

(declare-fun m!90417 () Bool)

(assert (=> b!85991 m!90417))

(declare-fun m!90419 () Bool)

(assert (=> b!85991 m!90419))

(declare-fun m!90421 () Bool)

(assert (=> b!85991 m!90421))

(declare-fun m!90423 () Bool)

(assert (=> b!85991 m!90423))

(declare-fun m!90425 () Bool)

(assert (=> b!85991 m!90425))

(declare-fun m!90427 () Bool)

(assert (=> b!85991 m!90427))

(declare-fun m!90429 () Bool)

(assert (=> b!85991 m!90429))

(declare-fun m!90431 () Bool)

(assert (=> b!85991 m!90431))

(declare-fun m!90433 () Bool)

(assert (=> b!85991 m!90433))

(assert (=> b!85991 m!90429))

(assert (=> b!85991 m!89941))

(declare-fun m!90435 () Bool)

(assert (=> b!85991 m!90435))

(assert (=> b!85991 m!90423))

(declare-fun m!90437 () Bool)

(assert (=> b!85991 m!90437))

(assert (=> b!85991 m!90425))

(declare-fun m!90439 () Bool)

(assert (=> b!85991 m!90439))

(declare-fun m!90441 () Bool)

(assert (=> b!85991 m!90441))

(assert (=> b!85991 m!90415))

(declare-fun m!90443 () Bool)

(assert (=> b!85991 m!90443))

(declare-fun m!90445 () Bool)

(assert (=> b!85991 m!90445))

(declare-fun m!90447 () Bool)

(assert (=> b!85986 m!90447))

(declare-fun m!90449 () Bool)

(assert (=> b!85998 m!90449))

(declare-fun m!90451 () Bool)

(assert (=> bm!8170 m!90451))

(assert (=> b!85997 m!89941))

(assert (=> b!85997 m!89941))

(assert (=> b!85997 m!89961))

(assert (=> b!85994 m!89941))

(assert (=> b!85994 m!89941))

(declare-fun m!90453 () Bool)

(assert (=> b!85994 m!90453))

(declare-fun m!90455 () Bool)

(assert (=> b!85994 m!90455))

(assert (=> b!85994 m!89967))

(declare-fun m!90457 () Bool)

(assert (=> b!85994 m!90457))

(assert (=> b!85994 m!89967))

(assert (=> b!85994 m!90455))

(assert (=> bm!8173 m!90435))

(assert (=> d!22295 m!89885))

(declare-fun m!90459 () Bool)

(assert (=> bm!8169 m!90459))

(declare-fun m!90461 () Bool)

(assert (=> bm!8172 m!90461))

(assert (=> b!85980 m!89941))

(assert (=> b!85980 m!89941))

(declare-fun m!90463 () Bool)

(assert (=> b!85980 m!90463))

(assert (=> b!85993 m!89941))

(assert (=> b!85993 m!89941))

(assert (=> b!85993 m!89961))

(assert (=> bm!8090 d!22295))

(declare-fun d!22297 () Bool)

(declare-fun e!56066 () Bool)

(assert (=> d!22297 e!56066))

(declare-fun res!44236 () Bool)

(assert (=> d!22297 (=> res!44236 e!56066)))

(declare-fun lt!40686 () Bool)

(assert (=> d!22297 (= res!44236 (not lt!40686))))

(declare-fun lt!40687 () Bool)

(assert (=> d!22297 (= lt!40686 lt!40687)))

(declare-fun lt!40685 () Unit!2533)

(declare-fun e!56065 () Unit!2533)

(assert (=> d!22297 (= lt!40685 e!56065)))

(declare-fun c!14007 () Bool)

(assert (=> d!22297 (= c!14007 lt!40687)))

(assert (=> d!22297 (= lt!40687 (containsKey!143 (toList!759 lt!40248) (_1!1126 lt!40172)))))

(assert (=> d!22297 (= (contains!762 lt!40248 (_1!1126 lt!40172)) lt!40686)))

(declare-fun b!85999 () Bool)

(declare-fun lt!40684 () Unit!2533)

(assert (=> b!85999 (= e!56065 lt!40684)))

(assert (=> b!85999 (= lt!40684 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40248) (_1!1126 lt!40172)))))

(assert (=> b!85999 (isDefined!93 (getValueByKey!139 (toList!759 lt!40248) (_1!1126 lt!40172)))))

(declare-fun b!86000 () Bool)

(declare-fun Unit!2557 () Unit!2533)

(assert (=> b!86000 (= e!56065 Unit!2557)))

(declare-fun b!86001 () Bool)

(assert (=> b!86001 (= e!56066 (isDefined!93 (getValueByKey!139 (toList!759 lt!40248) (_1!1126 lt!40172))))))

(assert (= (and d!22297 c!14007) b!85999))

(assert (= (and d!22297 (not c!14007)) b!86000))

(assert (= (and d!22297 (not res!44236)) b!86001))

(declare-fun m!90465 () Bool)

(assert (=> d!22297 m!90465))

(declare-fun m!90467 () Bool)

(assert (=> b!85999 m!90467))

(assert (=> b!85999 m!89573))

(assert (=> b!85999 m!89573))

(declare-fun m!90469 () Bool)

(assert (=> b!85999 m!90469))

(assert (=> b!86001 m!89573))

(assert (=> b!86001 m!89573))

(assert (=> b!86001 m!90469))

(assert (=> d!22071 d!22297))

(declare-fun b!86002 () Bool)

(declare-fun e!56067 () Option!145)

(assert (=> b!86002 (= e!56067 (Some!144 (_2!1126 (h!2139 lt!40247))))))

(declare-fun b!86004 () Bool)

(declare-fun e!56068 () Option!145)

(assert (=> b!86004 (= e!56068 (getValueByKey!139 (t!5277 lt!40247) (_1!1126 lt!40172)))))

(declare-fun b!86003 () Bool)

(assert (=> b!86003 (= e!56067 e!56068)))

(declare-fun c!14009 () Bool)

(assert (=> b!86003 (= c!14009 (and ((_ is Cons!1548) lt!40247) (not (= (_1!1126 (h!2139 lt!40247)) (_1!1126 lt!40172)))))))

(declare-fun d!22299 () Bool)

(declare-fun c!14008 () Bool)

(assert (=> d!22299 (= c!14008 (and ((_ is Cons!1548) lt!40247) (= (_1!1126 (h!2139 lt!40247)) (_1!1126 lt!40172))))))

(assert (=> d!22299 (= (getValueByKey!139 lt!40247 (_1!1126 lt!40172)) e!56067)))

(declare-fun b!86005 () Bool)

(assert (=> b!86005 (= e!56068 None!143)))

(assert (= (and d!22299 c!14008) b!86002))

(assert (= (and d!22299 (not c!14008)) b!86003))

(assert (= (and b!86003 c!14009) b!86004))

(assert (= (and b!86003 (not c!14009)) b!86005))

(declare-fun m!90471 () Bool)

(assert (=> b!86004 m!90471))

(assert (=> d!22071 d!22299))

(declare-fun d!22301 () Bool)

(assert (=> d!22301 (= (getValueByKey!139 lt!40247 (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172)))))

(declare-fun lt!40688 () Unit!2533)

(assert (=> d!22301 (= lt!40688 (choose!508 lt!40247 (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(declare-fun e!56069 () Bool)

(assert (=> d!22301 e!56069))

(declare-fun res!44237 () Bool)

(assert (=> d!22301 (=> (not res!44237) (not e!56069))))

(assert (=> d!22301 (= res!44237 (isStrictlySorted!293 lt!40247))))

(assert (=> d!22301 (= (lemmaContainsTupThenGetReturnValue!58 lt!40247 (_1!1126 lt!40172) (_2!1126 lt!40172)) lt!40688)))

(declare-fun b!86006 () Bool)

(declare-fun res!44238 () Bool)

(assert (=> b!86006 (=> (not res!44238) (not e!56069))))

(assert (=> b!86006 (= res!44238 (containsKey!143 lt!40247 (_1!1126 lt!40172)))))

(declare-fun b!86007 () Bool)

(assert (=> b!86007 (= e!56069 (contains!764 lt!40247 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(assert (= (and d!22301 res!44237) b!86006))

(assert (= (and b!86006 res!44238) b!86007))

(assert (=> d!22301 m!89567))

(declare-fun m!90473 () Bool)

(assert (=> d!22301 m!90473))

(declare-fun m!90475 () Bool)

(assert (=> d!22301 m!90475))

(declare-fun m!90477 () Bool)

(assert (=> b!86006 m!90477))

(declare-fun m!90479 () Bool)

(assert (=> b!86007 m!90479))

(assert (=> d!22071 d!22301))

(declare-fun e!56071 () List!1552)

(declare-fun b!86008 () Bool)

(declare-fun c!14011 () Bool)

(declare-fun c!14010 () Bool)

(assert (=> b!86008 (= e!56071 (ite c!14010 (t!5277 (toList!759 lt!40169)) (ite c!14011 (Cons!1548 (h!2139 (toList!759 lt!40169)) (t!5277 (toList!759 lt!40169))) Nil!1549)))))

(declare-fun b!86009 () Bool)

(declare-fun e!56073 () Bool)

(declare-fun lt!40689 () List!1552)

(assert (=> b!86009 (= e!56073 (contains!764 lt!40689 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!86010 () Bool)

(declare-fun e!56072 () List!1552)

(declare-fun e!56070 () List!1552)

(assert (=> b!86010 (= e!56072 e!56070)))

(assert (=> b!86010 (= c!14010 (and ((_ is Cons!1548) (toList!759 lt!40169)) (= (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 lt!40172))))))

(declare-fun b!86011 () Bool)

(declare-fun res!44239 () Bool)

(assert (=> b!86011 (=> (not res!44239) (not e!56073))))

(assert (=> b!86011 (= res!44239 (containsKey!143 lt!40689 (_1!1126 lt!40172)))))

(declare-fun d!22303 () Bool)

(assert (=> d!22303 e!56073))

(declare-fun res!44240 () Bool)

(assert (=> d!22303 (=> (not res!44240) (not e!56073))))

(assert (=> d!22303 (= res!44240 (isStrictlySorted!293 lt!40689))))

(assert (=> d!22303 (= lt!40689 e!56072)))

(declare-fun c!14012 () Bool)

(assert (=> d!22303 (= c!14012 (and ((_ is Cons!1548) (toList!759 lt!40169)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 lt!40172))))))

(assert (=> d!22303 (isStrictlySorted!293 (toList!759 lt!40169))))

(assert (=> d!22303 (= (insertStrictlySorted!60 (toList!759 lt!40169) (_1!1126 lt!40172) (_2!1126 lt!40172)) lt!40689)))

(declare-fun bm!8174 () Bool)

(declare-fun call!8177 () List!1552)

(assert (=> bm!8174 (= call!8177 ($colon$colon!71 e!56071 (ite c!14012 (h!2139 (toList!759 lt!40169)) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172)))))))

(declare-fun c!14013 () Bool)

(assert (=> bm!8174 (= c!14013 c!14012)))

(declare-fun bm!8175 () Bool)

(declare-fun call!8179 () List!1552)

(declare-fun call!8178 () List!1552)

(assert (=> bm!8175 (= call!8179 call!8178)))

(declare-fun b!86012 () Bool)

(assert (=> b!86012 (= e!56072 call!8177)))

(declare-fun b!86013 () Bool)

(declare-fun e!56074 () List!1552)

(assert (=> b!86013 (= e!56074 call!8179)))

(declare-fun b!86014 () Bool)

(assert (=> b!86014 (= e!56070 call!8178)))

(declare-fun b!86015 () Bool)

(assert (=> b!86015 (= e!56071 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40169)) (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(declare-fun b!86016 () Bool)

(assert (=> b!86016 (= e!56074 call!8179)))

(declare-fun b!86017 () Bool)

(assert (=> b!86017 (= c!14011 (and ((_ is Cons!1548) (toList!759 lt!40169)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 lt!40172))))))

(assert (=> b!86017 (= e!56070 e!56074)))

(declare-fun bm!8176 () Bool)

(assert (=> bm!8176 (= call!8178 call!8177)))

(assert (= (and d!22303 c!14012) b!86012))

(assert (= (and d!22303 (not c!14012)) b!86010))

(assert (= (and b!86010 c!14010) b!86014))

(assert (= (and b!86010 (not c!14010)) b!86017))

(assert (= (and b!86017 c!14011) b!86016))

(assert (= (and b!86017 (not c!14011)) b!86013))

(assert (= (or b!86016 b!86013) bm!8175))

(assert (= (or b!86014 bm!8175) bm!8176))

(assert (= (or b!86012 bm!8176) bm!8174))

(assert (= (and bm!8174 c!14013) b!86015))

(assert (= (and bm!8174 (not c!14013)) b!86008))

(assert (= (and d!22303 res!44240) b!86011))

(assert (= (and b!86011 res!44239) b!86009))

(declare-fun m!90481 () Bool)

(assert (=> b!86011 m!90481))

(declare-fun m!90483 () Bool)

(assert (=> b!86015 m!90483))

(declare-fun m!90485 () Bool)

(assert (=> d!22303 m!90485))

(assert (=> d!22303 m!89865))

(declare-fun m!90487 () Bool)

(assert (=> b!86009 m!90487))

(declare-fun m!90489 () Bool)

(assert (=> bm!8174 m!90489))

(assert (=> d!22071 d!22303))

(declare-fun b!86052 () Bool)

(declare-fun e!56093 () Unit!2533)

(declare-fun Unit!2558 () Unit!2533)

(assert (=> b!86052 (= e!56093 Unit!2558)))

(declare-fun lt!40763 () Unit!2533)

(assert (=> b!86052 (= lt!40763 (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40767 () SeekEntryResult!253)

(declare-fun call!8191 () SeekEntryResult!253)

(assert (=> b!86052 (= lt!40767 call!8191)))

(declare-fun res!44267 () Bool)

(assert (=> b!86052 (= res!44267 ((_ is Found!253) lt!40767))))

(declare-fun e!56092 () Bool)

(assert (=> b!86052 (=> (not res!44267) (not e!56092))))

(assert (=> b!86052 e!56092))

(declare-fun lt!40758 () Unit!2533)

(assert (=> b!86052 (= lt!40758 lt!40763)))

(assert (=> b!86052 false))

(declare-fun bm!8185 () Bool)

(declare-fun c!14022 () Bool)

(declare-fun lt!40778 () SeekEntryResult!253)

(declare-fun c!14025 () Bool)

(declare-fun call!8189 () Bool)

(assert (=> bm!8185 (= call!8189 (inRange!0 (ite c!14025 (index!3150 lt!40767) (ite c!14022 (index!3149 lt!40778) (index!3152 lt!40778))) (mask!6366 newMap!16)))))

(declare-fun bm!8186 () Bool)

(declare-fun call!8190 () Bool)

(assert (=> bm!8186 (= call!8190 call!8189)))

(declare-fun b!86053 () Bool)

(declare-fun res!44260 () Bool)

(declare-fun e!56097 () Bool)

(assert (=> b!86053 (=> (not res!44260) (not e!56097))))

(declare-fun lt!40759 () tuple2!2234)

(assert (=> b!86053 (= res!44260 (valid!327 (_2!1127 lt!40759)))))

(declare-fun b!86054 () Bool)

(declare-fun res!44263 () Bool)

(assert (=> b!86054 (=> (not res!44263) (not e!56097))))

(assert (=> b!86054 (= res!44263 (contains!762 (map!1195 (_2!1127 lt!40759)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!86055 () Bool)

(declare-fun e!56094 () Unit!2533)

(declare-fun Unit!2559 () Unit!2533)

(assert (=> b!86055 (= e!56094 Unit!2559)))

(declare-fun lt!40777 () Unit!2533)

(declare-fun lemmaArrayContainsKeyThenInListMap!19 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) (_ BitVec 32) Int) Unit!2533)

(assert (=> b!86055 (= lt!40777 (lemmaArrayContainsKeyThenInListMap!19 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(assert (=> b!86055 (contains!762 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))

(declare-fun lt!40762 () Unit!2533)

(assert (=> b!86055 (= lt!40762 lt!40777)))

(assert (=> b!86055 false))

(declare-fun b!86056 () Bool)

(declare-fun e!56095 () Bool)

(declare-fun call!8188 () Bool)

(assert (=> b!86056 (= e!56095 (not call!8188))))

(declare-fun b!86057 () Bool)

(declare-fun c!14023 () Bool)

(assert (=> b!86057 (= c!14023 ((_ is MissingVacant!253) lt!40778))))

(declare-fun e!56091 () Bool)

(declare-fun e!56096 () Bool)

(assert (=> b!86057 (= e!56091 e!56096)))

(declare-fun d!22305 () Bool)

(assert (=> d!22305 e!56097))

(declare-fun res!44264 () Bool)

(assert (=> d!22305 (=> (not res!44264) (not e!56097))))

(assert (=> d!22305 (= res!44264 (_1!1127 lt!40759))))

(assert (=> d!22305 (= lt!40759 (tuple2!2235 true (LongMapFixedSize!757 (defaultEntry!2338 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (bvadd (_size!427 newMap!16) #b00000000000000000000000000000001) (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (_vacant!427 newMap!16))))))

(declare-fun lt!40772 () Unit!2533)

(declare-fun lt!40769 () Unit!2533)

(assert (=> d!22305 (= lt!40772 lt!40769)))

(declare-fun lt!40768 () array!4028)

(declare-fun lt!40766 () array!4030)

(assert (=> d!22305 (contains!762 (getCurrentListMap!443 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372))))))

(assert (=> d!22305 (= lt!40769 (lemmaValidKeyInArrayIsInListMap!89 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22305 (= lt!40766 (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))))

(assert (=> d!22305 (= lt!40768 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun lt!40770 () Unit!2533)

(declare-fun lt!40764 () Unit!2533)

(assert (=> d!22305 (= lt!40770 lt!40764)))

(declare-fun lt!40779 () array!4028)

(assert (=> d!22305 (= (arrayCountValidKeys!0 lt!40779 (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (bvadd (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4028 (_ BitVec 32)) Unit!2533)

(assert (=> d!22305 (= lt!40764 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!40779 (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372))))))

(assert (=> d!22305 (= lt!40779 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun lt!40774 () Unit!2533)

(declare-fun lt!40750 () Unit!2533)

(assert (=> d!22305 (= lt!40774 lt!40750)))

(declare-fun lt!40752 () array!4028)

(assert (=> d!22305 (arrayContainsKey!0 lt!40752 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!22305 (= lt!40750 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!40752 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372))))))

(assert (=> d!22305 (= lt!40752 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun lt!40754 () Unit!2533)

(declare-fun lt!40757 () Unit!2533)

(assert (=> d!22305 (= lt!40754 lt!40757)))

(assert (=> d!22305 (= (+!116 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (getCurrentListMap!443 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!19 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) (_ BitVec 64) V!3027 Int) Unit!2533)

(assert (=> d!22305 (= lt!40757 (lemmaAddValidKeyToArrayThenAddPairToListMap!19 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40771 () Unit!2533)

(declare-fun lt!40755 () Unit!2533)

(assert (=> d!22305 (= lt!40771 lt!40755)))

(assert (=> d!22305 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (mask!6366 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4028 (_ BitVec 32) (_ BitVec 32)) Unit!2533)

(assert (=> d!22305 (= lt!40755 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (mask!6366 newMap!16)))))

(declare-fun lt!40756 () Unit!2533)

(declare-fun lt!40751 () Unit!2533)

(assert (=> d!22305 (= lt!40756 lt!40751)))

(assert (=> d!22305 (= (arrayCountValidKeys!0 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4028 (_ BitVec 32) (_ BitVec 64)) Unit!2533)

(assert (=> d!22305 (= lt!40751 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4010 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun lt!40765 () Unit!2533)

(declare-fun lt!40761 () Unit!2533)

(assert (=> d!22305 (= lt!40765 lt!40761)))

(declare-fun lt!40760 () (_ BitVec 32))

(declare-fun lt!40773 () List!1553)

(assert (=> d!22305 (arrayNoDuplicates!0 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) lt!40760 lt!40773)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4028 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1553) Unit!2533)

(assert (=> d!22305 (= lt!40761 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) lt!40760 lt!40773))))

(assert (=> d!22305 (= lt!40773 Nil!1550)))

(assert (=> d!22305 (= lt!40760 #b00000000000000000000000000000000)))

(declare-fun lt!40776 () Unit!2533)

(assert (=> d!22305 (= lt!40776 e!56094)))

(declare-fun c!14024 () Bool)

(assert (=> d!22305 (= c!14024 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!40775 () Unit!2533)

(assert (=> d!22305 (= lt!40775 e!56093)))

(assert (=> d!22305 (= c!14025 (contains!762 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22305 (valid!327 newMap!16)))

(assert (=> d!22305 (= (updateHelperNewKey!31 newMap!16 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372))) lt!40759)))

(declare-fun b!86058 () Bool)

(declare-fun res!44261 () Bool)

(assert (=> b!86058 (=> (not res!44261) (not e!56095))))

(assert (=> b!86058 (= res!44261 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3149 lt!40778)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8187 () Bool)

(assert (=> bm!8187 (= call!8188 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!86059 () Bool)

(declare-fun lt!40753 () Unit!2533)

(assert (=> b!86059 (= e!56093 lt!40753)))

(assert (=> b!86059 (= lt!40753 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(assert (=> b!86059 (= lt!40778 call!8191)))

(assert (=> b!86059 (= c!14022 ((_ is MissingZero!253) lt!40778))))

(assert (=> b!86059 e!56091))

(declare-fun b!86060 () Bool)

(declare-fun res!44259 () Bool)

(assert (=> b!86060 (=> (not res!44259) (not e!56095))))

(assert (=> b!86060 (= res!44259 call!8190)))

(assert (=> b!86060 (= e!56091 e!56095)))

(declare-fun bm!8188 () Bool)

(assert (=> bm!8188 (= call!8191 (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!86061 () Bool)

(declare-fun Unit!2560 () Unit!2533)

(assert (=> b!86061 (= e!56094 Unit!2560)))

(declare-fun b!86062 () Bool)

(assert (=> b!86062 (= e!56097 (= (map!1195 (_2!1127 lt!40759)) (+!116 (map!1195 newMap!16) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86063 () Bool)

(declare-fun e!56098 () Bool)

(assert (=> b!86063 (= e!56096 e!56098)))

(declare-fun res!44262 () Bool)

(assert (=> b!86063 (= res!44262 call!8190)))

(assert (=> b!86063 (=> (not res!44262) (not e!56098))))

(declare-fun b!86064 () Bool)

(assert (=> b!86064 (= e!56092 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40767)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!86065 () Bool)

(declare-fun res!44266 () Bool)

(assert (=> b!86065 (= res!44266 call!8189)))

(assert (=> b!86065 (=> (not res!44266) (not e!56092))))

(declare-fun b!86066 () Bool)

(assert (=> b!86066 (= e!56096 ((_ is Undefined!253) lt!40778))))

(declare-fun b!86067 () Bool)

(assert (=> b!86067 (= e!56098 (not call!8188))))

(declare-fun b!86068 () Bool)

(declare-fun res!44265 () Bool)

(assert (=> b!86068 (= res!44265 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3152 lt!40778)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86068 (=> (not res!44265) (not e!56098))))

(assert (= (and d!22305 c!14025) b!86052))

(assert (= (and d!22305 (not c!14025)) b!86059))

(assert (= (and b!86052 res!44267) b!86065))

(assert (= (and b!86065 res!44266) b!86064))

(assert (= (and b!86059 c!14022) b!86060))

(assert (= (and b!86059 (not c!14022)) b!86057))

(assert (= (and b!86060 res!44259) b!86058))

(assert (= (and b!86058 res!44261) b!86056))

(assert (= (and b!86057 c!14023) b!86063))

(assert (= (and b!86057 (not c!14023)) b!86066))

(assert (= (and b!86063 res!44262) b!86068))

(assert (= (and b!86068 res!44265) b!86067))

(assert (= (or b!86060 b!86063) bm!8186))

(assert (= (or b!86056 b!86067) bm!8187))

(assert (= (or b!86065 bm!8186) bm!8185))

(assert (= (or b!86052 b!86059) bm!8188))

(assert (= (and d!22305 c!14024) b!86055))

(assert (= (and d!22305 (not c!14024)) b!86061))

(assert (= (and d!22305 res!44264) b!86053))

(assert (= (and b!86053 res!44260) b!86054))

(assert (= (and b!86054 res!44263) b!86062))

(declare-fun m!90491 () Bool)

(assert (=> b!86064 m!90491))

(declare-fun m!90493 () Bool)

(assert (=> bm!8185 m!90493))

(assert (=> bm!8187 m!89417))

(assert (=> bm!8187 m!89695))

(declare-fun m!90495 () Bool)

(assert (=> b!86068 m!90495))

(declare-fun m!90497 () Bool)

(assert (=> b!86053 m!90497))

(assert (=> d!22305 m!89755))

(assert (=> d!22305 m!89417))

(declare-fun m!90499 () Bool)

(assert (=> d!22305 m!90499))

(declare-fun m!90501 () Bool)

(assert (=> d!22305 m!90501))

(declare-fun m!90503 () Bool)

(assert (=> d!22305 m!90503))

(declare-fun m!90505 () Bool)

(assert (=> d!22305 m!90505))

(declare-fun m!90507 () Bool)

(assert (=> d!22305 m!90507))

(assert (=> d!22305 m!89417))

(declare-fun m!90509 () Bool)

(assert (=> d!22305 m!90509))

(assert (=> d!22305 m!89417))

(declare-fun m!90511 () Bool)

(assert (=> d!22305 m!90511))

(declare-fun m!90513 () Bool)

(assert (=> d!22305 m!90513))

(declare-fun m!90515 () Bool)

(assert (=> d!22305 m!90515))

(assert (=> d!22305 m!89683))

(assert (=> d!22305 m!89417))

(assert (=> d!22305 m!89735))

(assert (=> d!22305 m!89417))

(declare-fun m!90517 () Bool)

(assert (=> d!22305 m!90517))

(assert (=> d!22305 m!89417))

(declare-fun m!90519 () Bool)

(assert (=> d!22305 m!90519))

(assert (=> d!22305 m!89683))

(assert (=> d!22305 m!90115))

(declare-fun m!90521 () Bool)

(assert (=> d!22305 m!90521))

(assert (=> d!22305 m!89417))

(assert (=> d!22305 m!89695))

(assert (=> d!22305 m!90501))

(declare-fun m!90523 () Bool)

(assert (=> d!22305 m!90523))

(assert (=> d!22305 m!89683))

(assert (=> d!22305 m!90503))

(assert (=> d!22305 m!89437))

(assert (=> d!22305 m!89417))

(declare-fun m!90525 () Bool)

(assert (=> d!22305 m!90525))

(declare-fun m!90527 () Bool)

(assert (=> d!22305 m!90527))

(declare-fun m!90529 () Bool)

(assert (=> d!22305 m!90529))

(declare-fun m!90531 () Bool)

(assert (=> d!22305 m!90531))

(declare-fun m!90533 () Bool)

(assert (=> d!22305 m!90533))

(declare-fun m!90535 () Bool)

(assert (=> b!86058 m!90535))

(assert (=> b!86055 m!89417))

(declare-fun m!90537 () Bool)

(assert (=> b!86055 m!90537))

(assert (=> b!86055 m!89683))

(assert (=> b!86055 m!89683))

(assert (=> b!86055 m!89417))

(assert (=> b!86055 m!89735))

(declare-fun m!90539 () Bool)

(assert (=> b!86054 m!90539))

(assert (=> b!86054 m!90539))

(assert (=> b!86054 m!89417))

(declare-fun m!90541 () Bool)

(assert (=> b!86054 m!90541))

(assert (=> b!86062 m!90539))

(assert (=> b!86062 m!89473))

(assert (=> b!86062 m!89473))

(declare-fun m!90543 () Bool)

(assert (=> b!86062 m!90543))

(assert (=> b!86059 m!89417))

(assert (=> b!86059 m!89711))

(assert (=> bm!8188 m!89417))

(assert (=> bm!8188 m!89697))

(assert (=> b!86052 m!89417))

(assert (=> b!86052 m!89709))

(assert (=> bm!8082 d!22305))

(declare-fun d!22307 () Bool)

(declare-fun e!56100 () Bool)

(assert (=> d!22307 e!56100))

(declare-fun res!44268 () Bool)

(assert (=> d!22307 (=> res!44268 e!56100)))

(declare-fun lt!40782 () Bool)

(assert (=> d!22307 (= res!44268 (not lt!40782))))

(declare-fun lt!40783 () Bool)

(assert (=> d!22307 (= lt!40782 lt!40783)))

(declare-fun lt!40781 () Unit!2533)

(declare-fun e!56099 () Unit!2533)

(assert (=> d!22307 (= lt!40781 e!56099)))

(declare-fun c!14026 () Bool)

(assert (=> d!22307 (= c!14026 lt!40783)))

(assert (=> d!22307 (= lt!40783 (containsKey!143 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22307 (= (contains!762 lt!40284 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40782)))

(declare-fun b!86069 () Bool)

(declare-fun lt!40780 () Unit!2533)

(assert (=> b!86069 (= e!56099 lt!40780)))

(assert (=> b!86069 (= lt!40780 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86069 (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86070 () Bool)

(declare-fun Unit!2561 () Unit!2533)

(assert (=> b!86070 (= e!56099 Unit!2561)))

(declare-fun b!86071 () Bool)

(assert (=> b!86071 (= e!56100 (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22307 c!14026) b!86069))

(assert (= (and d!22307 (not c!14026)) b!86070))

(assert (= (and d!22307 (not res!44268)) b!86071))

(declare-fun m!90545 () Bool)

(assert (=> d!22307 m!90545))

(declare-fun m!90547 () Bool)

(assert (=> b!86069 m!90547))

(declare-fun m!90549 () Bool)

(assert (=> b!86069 m!90549))

(assert (=> b!86069 m!90549))

(declare-fun m!90551 () Bool)

(assert (=> b!86069 m!90551))

(assert (=> b!86071 m!90549))

(assert (=> b!86071 m!90549))

(assert (=> b!86071 m!90551))

(assert (=> d!22083 d!22307))

(assert (=> d!22083 d!22079))

(declare-fun d!22309 () Bool)

(declare-fun lt!40784 () Bool)

(assert (=> d!22309 (= lt!40784 (select (content!88 (toList!759 lt!40286)) lt!40163))))

(declare-fun e!56101 () Bool)

(assert (=> d!22309 (= lt!40784 e!56101)))

(declare-fun res!44270 () Bool)

(assert (=> d!22309 (=> (not res!44270) (not e!56101))))

(assert (=> d!22309 (= res!44270 ((_ is Cons!1548) (toList!759 lt!40286)))))

(assert (=> d!22309 (= (contains!764 (toList!759 lt!40286) lt!40163) lt!40784)))

(declare-fun b!86072 () Bool)

(declare-fun e!56102 () Bool)

(assert (=> b!86072 (= e!56101 e!56102)))

(declare-fun res!44269 () Bool)

(assert (=> b!86072 (=> res!44269 e!56102)))

(assert (=> b!86072 (= res!44269 (= (h!2139 (toList!759 lt!40286)) lt!40163))))

(declare-fun b!86073 () Bool)

(assert (=> b!86073 (= e!56102 (contains!764 (t!5277 (toList!759 lt!40286)) lt!40163))))

(assert (= (and d!22309 res!44270) b!86072))

(assert (= (and b!86072 (not res!44269)) b!86073))

(declare-fun m!90553 () Bool)

(assert (=> d!22309 m!90553))

(declare-fun m!90555 () Bool)

(assert (=> d!22309 m!90555))

(declare-fun m!90557 () Bool)

(assert (=> b!86073 m!90557))

(assert (=> b!85375 d!22309))

(declare-fun d!22311 () Bool)

(declare-fun e!56104 () Bool)

(assert (=> d!22311 e!56104))

(declare-fun res!44271 () Bool)

(assert (=> d!22311 (=> res!44271 e!56104)))

(declare-fun lt!40787 () Bool)

(assert (=> d!22311 (= res!44271 (not lt!40787))))

(declare-fun lt!40788 () Bool)

(assert (=> d!22311 (= lt!40787 lt!40788)))

(declare-fun lt!40786 () Unit!2533)

(declare-fun e!56103 () Unit!2533)

(assert (=> d!22311 (= lt!40786 e!56103)))

(declare-fun c!14027 () Bool)

(assert (=> d!22311 (= c!14027 lt!40788)))

(assert (=> d!22311 (= lt!40788 (containsKey!143 (toList!759 lt!40256) (_1!1126 lt!40172)))))

(assert (=> d!22311 (= (contains!762 lt!40256 (_1!1126 lt!40172)) lt!40787)))

(declare-fun b!86074 () Bool)

(declare-fun lt!40785 () Unit!2533)

(assert (=> b!86074 (= e!56103 lt!40785)))

(assert (=> b!86074 (= lt!40785 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40256) (_1!1126 lt!40172)))))

(assert (=> b!86074 (isDefined!93 (getValueByKey!139 (toList!759 lt!40256) (_1!1126 lt!40172)))))

(declare-fun b!86075 () Bool)

(declare-fun Unit!2562 () Unit!2533)

(assert (=> b!86075 (= e!56103 Unit!2562)))

(declare-fun b!86076 () Bool)

(assert (=> b!86076 (= e!56104 (isDefined!93 (getValueByKey!139 (toList!759 lt!40256) (_1!1126 lt!40172))))))

(assert (= (and d!22311 c!14027) b!86074))

(assert (= (and d!22311 (not c!14027)) b!86075))

(assert (= (and d!22311 (not res!44271)) b!86076))

(declare-fun m!90559 () Bool)

(assert (=> d!22311 m!90559))

(declare-fun m!90561 () Bool)

(assert (=> b!86074 m!90561))

(assert (=> b!86074 m!89597))

(assert (=> b!86074 m!89597))

(declare-fun m!90563 () Bool)

(assert (=> b!86074 m!90563))

(assert (=> b!86076 m!89597))

(assert (=> b!86076 m!89597))

(assert (=> b!86076 m!90563))

(assert (=> d!22075 d!22311))

(declare-fun b!86077 () Bool)

(declare-fun e!56105 () Option!145)

(assert (=> b!86077 (= e!56105 (Some!144 (_2!1126 (h!2139 lt!40255))))))

(declare-fun b!86079 () Bool)

(declare-fun e!56106 () Option!145)

(assert (=> b!86079 (= e!56106 (getValueByKey!139 (t!5277 lt!40255) (_1!1126 lt!40172)))))

(declare-fun b!86078 () Bool)

(assert (=> b!86078 (= e!56105 e!56106)))

(declare-fun c!14029 () Bool)

(assert (=> b!86078 (= c!14029 (and ((_ is Cons!1548) lt!40255) (not (= (_1!1126 (h!2139 lt!40255)) (_1!1126 lt!40172)))))))

(declare-fun d!22313 () Bool)

(declare-fun c!14028 () Bool)

(assert (=> d!22313 (= c!14028 (and ((_ is Cons!1548) lt!40255) (= (_1!1126 (h!2139 lt!40255)) (_1!1126 lt!40172))))))

(assert (=> d!22313 (= (getValueByKey!139 lt!40255 (_1!1126 lt!40172)) e!56105)))

(declare-fun b!86080 () Bool)

(assert (=> b!86080 (= e!56106 None!143)))

(assert (= (and d!22313 c!14028) b!86077))

(assert (= (and d!22313 (not c!14028)) b!86078))

(assert (= (and b!86078 c!14029) b!86079))

(assert (= (and b!86078 (not c!14029)) b!86080))

(declare-fun m!90565 () Bool)

(assert (=> b!86079 m!90565))

(assert (=> d!22075 d!22313))

(declare-fun d!22315 () Bool)

(assert (=> d!22315 (= (getValueByKey!139 lt!40255 (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172)))))

(declare-fun lt!40789 () Unit!2533)

(assert (=> d!22315 (= lt!40789 (choose!508 lt!40255 (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(declare-fun e!56107 () Bool)

(assert (=> d!22315 e!56107))

(declare-fun res!44272 () Bool)

(assert (=> d!22315 (=> (not res!44272) (not e!56107))))

(assert (=> d!22315 (= res!44272 (isStrictlySorted!293 lt!40255))))

(assert (=> d!22315 (= (lemmaContainsTupThenGetReturnValue!58 lt!40255 (_1!1126 lt!40172) (_2!1126 lt!40172)) lt!40789)))

(declare-fun b!86081 () Bool)

(declare-fun res!44273 () Bool)

(assert (=> b!86081 (=> (not res!44273) (not e!56107))))

(assert (=> b!86081 (= res!44273 (containsKey!143 lt!40255 (_1!1126 lt!40172)))))

(declare-fun b!86082 () Bool)

(assert (=> b!86082 (= e!56107 (contains!764 lt!40255 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(assert (= (and d!22315 res!44272) b!86081))

(assert (= (and b!86081 res!44273) b!86082))

(assert (=> d!22315 m!89591))

(declare-fun m!90567 () Bool)

(assert (=> d!22315 m!90567))

(declare-fun m!90569 () Bool)

(assert (=> d!22315 m!90569))

(declare-fun m!90571 () Bool)

(assert (=> b!86081 m!90571))

(declare-fun m!90573 () Bool)

(assert (=> b!86082 m!90573))

(assert (=> d!22075 d!22315))

(declare-fun c!14031 () Bool)

(declare-fun e!56109 () List!1552)

(declare-fun b!86083 () Bool)

(declare-fun c!14030 () Bool)

(assert (=> b!86083 (= e!56109 (ite c!14030 (t!5277 (toList!759 lt!40173)) (ite c!14031 (Cons!1548 (h!2139 (toList!759 lt!40173)) (t!5277 (toList!759 lt!40173))) Nil!1549)))))

(declare-fun b!86084 () Bool)

(declare-fun e!56111 () Bool)

(declare-fun lt!40790 () List!1552)

(assert (=> b!86084 (= e!56111 (contains!764 lt!40790 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!86085 () Bool)

(declare-fun e!56110 () List!1552)

(declare-fun e!56108 () List!1552)

(assert (=> b!86085 (= e!56110 e!56108)))

(assert (=> b!86085 (= c!14030 (and ((_ is Cons!1548) (toList!759 lt!40173)) (= (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 lt!40172))))))

(declare-fun b!86086 () Bool)

(declare-fun res!44274 () Bool)

(assert (=> b!86086 (=> (not res!44274) (not e!56111))))

(assert (=> b!86086 (= res!44274 (containsKey!143 lt!40790 (_1!1126 lt!40172)))))

(declare-fun d!22317 () Bool)

(assert (=> d!22317 e!56111))

(declare-fun res!44275 () Bool)

(assert (=> d!22317 (=> (not res!44275) (not e!56111))))

(assert (=> d!22317 (= res!44275 (isStrictlySorted!293 lt!40790))))

(assert (=> d!22317 (= lt!40790 e!56110)))

(declare-fun c!14032 () Bool)

(assert (=> d!22317 (= c!14032 (and ((_ is Cons!1548) (toList!759 lt!40173)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 lt!40172))))))

(assert (=> d!22317 (isStrictlySorted!293 (toList!759 lt!40173))))

(assert (=> d!22317 (= (insertStrictlySorted!60 (toList!759 lt!40173) (_1!1126 lt!40172) (_2!1126 lt!40172)) lt!40790)))

(declare-fun bm!8189 () Bool)

(declare-fun call!8192 () List!1552)

(assert (=> bm!8189 (= call!8192 ($colon$colon!71 e!56109 (ite c!14032 (h!2139 (toList!759 lt!40173)) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172)))))))

(declare-fun c!14033 () Bool)

(assert (=> bm!8189 (= c!14033 c!14032)))

(declare-fun bm!8190 () Bool)

(declare-fun call!8194 () List!1552)

(declare-fun call!8193 () List!1552)

(assert (=> bm!8190 (= call!8194 call!8193)))

(declare-fun b!86087 () Bool)

(assert (=> b!86087 (= e!56110 call!8192)))

(declare-fun b!86088 () Bool)

(declare-fun e!56112 () List!1552)

(assert (=> b!86088 (= e!56112 call!8194)))

(declare-fun b!86089 () Bool)

(assert (=> b!86089 (= e!56108 call!8193)))

(declare-fun b!86090 () Bool)

(assert (=> b!86090 (= e!56109 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40173)) (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(declare-fun b!86091 () Bool)

(assert (=> b!86091 (= e!56112 call!8194)))

(declare-fun b!86092 () Bool)

(assert (=> b!86092 (= c!14031 (and ((_ is Cons!1548) (toList!759 lt!40173)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 lt!40172))))))

(assert (=> b!86092 (= e!56108 e!56112)))

(declare-fun bm!8191 () Bool)

(assert (=> bm!8191 (= call!8193 call!8192)))

(assert (= (and d!22317 c!14032) b!86087))

(assert (= (and d!22317 (not c!14032)) b!86085))

(assert (= (and b!86085 c!14030) b!86089))

(assert (= (and b!86085 (not c!14030)) b!86092))

(assert (= (and b!86092 c!14031) b!86091))

(assert (= (and b!86092 (not c!14031)) b!86088))

(assert (= (or b!86091 b!86088) bm!8190))

(assert (= (or b!86089 bm!8190) bm!8191))

(assert (= (or b!86087 bm!8191) bm!8189))

(assert (= (and bm!8189 c!14033) b!86090))

(assert (= (and bm!8189 (not c!14033)) b!86083))

(assert (= (and d!22317 res!44275) b!86086))

(assert (= (and b!86086 res!44274) b!86084))

(declare-fun m!90575 () Bool)

(assert (=> b!86086 m!90575))

(declare-fun m!90577 () Bool)

(assert (=> b!86090 m!90577))

(declare-fun m!90579 () Bool)

(assert (=> d!22317 m!90579))

(declare-fun m!90581 () Bool)

(assert (=> d!22317 m!90581))

(declare-fun m!90583 () Bool)

(assert (=> b!86084 m!90583))

(declare-fun m!90585 () Bool)

(assert (=> bm!8189 m!90585))

(assert (=> d!22075 d!22317))

(declare-fun d!22319 () Bool)

(declare-fun e!56114 () Bool)

(assert (=> d!22319 e!56114))

(declare-fun res!44276 () Bool)

(assert (=> d!22319 (=> res!44276 e!56114)))

(declare-fun lt!40793 () Bool)

(assert (=> d!22319 (= res!44276 (not lt!40793))))

(declare-fun lt!40794 () Bool)

(assert (=> d!22319 (= lt!40793 lt!40794)))

(declare-fun lt!40792 () Unit!2533)

(declare-fun e!56113 () Unit!2533)

(assert (=> d!22319 (= lt!40792 e!56113)))

(declare-fun c!14034 () Bool)

(assert (=> d!22319 (= c!14034 lt!40794)))

(assert (=> d!22319 (= lt!40794 (containsKey!143 (toList!759 lt!40261) (_1!1126 lt!40163)))))

(assert (=> d!22319 (= (contains!762 lt!40261 (_1!1126 lt!40163)) lt!40793)))

(declare-fun b!86093 () Bool)

(declare-fun lt!40791 () Unit!2533)

(assert (=> b!86093 (= e!56113 lt!40791)))

(assert (=> b!86093 (= lt!40791 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40261) (_1!1126 lt!40163)))))

(assert (=> b!86093 (isDefined!93 (getValueByKey!139 (toList!759 lt!40261) (_1!1126 lt!40163)))))

(declare-fun b!86094 () Bool)

(declare-fun Unit!2563 () Unit!2533)

(assert (=> b!86094 (= e!56113 Unit!2563)))

(declare-fun b!86095 () Bool)

(assert (=> b!86095 (= e!56114 (isDefined!93 (getValueByKey!139 (toList!759 lt!40261) (_1!1126 lt!40163))))))

(assert (= (and d!22319 c!14034) b!86093))

(assert (= (and d!22319 (not c!14034)) b!86094))

(assert (= (and d!22319 (not res!44276)) b!86095))

(declare-fun m!90587 () Bool)

(assert (=> d!22319 m!90587))

(declare-fun m!90589 () Bool)

(assert (=> b!86093 m!90589))

(assert (=> b!86093 m!89619))

(assert (=> b!86093 m!89619))

(declare-fun m!90591 () Bool)

(assert (=> b!86093 m!90591))

(assert (=> b!86095 m!89619))

(assert (=> b!86095 m!89619))

(assert (=> b!86095 m!90591))

(assert (=> d!22081 d!22319))

(declare-fun b!86096 () Bool)

(declare-fun e!56115 () Option!145)

(assert (=> b!86096 (= e!56115 (Some!144 (_2!1126 (h!2139 lt!40260))))))

(declare-fun b!86098 () Bool)

(declare-fun e!56116 () Option!145)

(assert (=> b!86098 (= e!56116 (getValueByKey!139 (t!5277 lt!40260) (_1!1126 lt!40163)))))

(declare-fun b!86097 () Bool)

(assert (=> b!86097 (= e!56115 e!56116)))

(declare-fun c!14036 () Bool)

(assert (=> b!86097 (= c!14036 (and ((_ is Cons!1548) lt!40260) (not (= (_1!1126 (h!2139 lt!40260)) (_1!1126 lt!40163)))))))

(declare-fun d!22321 () Bool)

(declare-fun c!14035 () Bool)

(assert (=> d!22321 (= c!14035 (and ((_ is Cons!1548) lt!40260) (= (_1!1126 (h!2139 lt!40260)) (_1!1126 lt!40163))))))

(assert (=> d!22321 (= (getValueByKey!139 lt!40260 (_1!1126 lt!40163)) e!56115)))

(declare-fun b!86099 () Bool)

(assert (=> b!86099 (= e!56116 None!143)))

(assert (= (and d!22321 c!14035) b!86096))

(assert (= (and d!22321 (not c!14035)) b!86097))

(assert (= (and b!86097 c!14036) b!86098))

(assert (= (and b!86097 (not c!14036)) b!86099))

(declare-fun m!90593 () Bool)

(assert (=> b!86098 m!90593))

(assert (=> d!22081 d!22321))

(declare-fun d!22323 () Bool)

(assert (=> d!22323 (= (getValueByKey!139 lt!40260 (_1!1126 lt!40163)) (Some!144 (_2!1126 lt!40163)))))

(declare-fun lt!40795 () Unit!2533)

(assert (=> d!22323 (= lt!40795 (choose!508 lt!40260 (_1!1126 lt!40163) (_2!1126 lt!40163)))))

(declare-fun e!56117 () Bool)

(assert (=> d!22323 e!56117))

(declare-fun res!44277 () Bool)

(assert (=> d!22323 (=> (not res!44277) (not e!56117))))

(assert (=> d!22323 (= res!44277 (isStrictlySorted!293 lt!40260))))

(assert (=> d!22323 (= (lemmaContainsTupThenGetReturnValue!58 lt!40260 (_1!1126 lt!40163) (_2!1126 lt!40163)) lt!40795)))

(declare-fun b!86100 () Bool)

(declare-fun res!44278 () Bool)

(assert (=> b!86100 (=> (not res!44278) (not e!56117))))

(assert (=> b!86100 (= res!44278 (containsKey!143 lt!40260 (_1!1126 lt!40163)))))

(declare-fun b!86101 () Bool)

(assert (=> b!86101 (= e!56117 (contains!764 lt!40260 (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(assert (= (and d!22323 res!44277) b!86100))

(assert (= (and b!86100 res!44278) b!86101))

(assert (=> d!22323 m!89613))

(declare-fun m!90595 () Bool)

(assert (=> d!22323 m!90595))

(declare-fun m!90597 () Bool)

(assert (=> d!22323 m!90597))

(declare-fun m!90599 () Bool)

(assert (=> b!86100 m!90599))

(declare-fun m!90601 () Bool)

(assert (=> b!86101 m!90601))

(assert (=> d!22081 d!22323))

(declare-fun c!14037 () Bool)

(declare-fun e!56119 () List!1552)

(declare-fun c!14038 () Bool)

(declare-fun b!86102 () Bool)

(assert (=> b!86102 (= e!56119 (ite c!14037 (t!5277 (toList!759 lt!40173)) (ite c!14038 (Cons!1548 (h!2139 (toList!759 lt!40173)) (t!5277 (toList!759 lt!40173))) Nil!1549)))))

(declare-fun b!86103 () Bool)

(declare-fun e!56121 () Bool)

(declare-fun lt!40796 () List!1552)

(assert (=> b!86103 (= e!56121 (contains!764 lt!40796 (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun b!86104 () Bool)

(declare-fun e!56120 () List!1552)

(declare-fun e!56118 () List!1552)

(assert (=> b!86104 (= e!56120 e!56118)))

(assert (=> b!86104 (= c!14037 (and ((_ is Cons!1548) (toList!759 lt!40173)) (= (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 lt!40163))))))

(declare-fun b!86105 () Bool)

(declare-fun res!44279 () Bool)

(assert (=> b!86105 (=> (not res!44279) (not e!56121))))

(assert (=> b!86105 (= res!44279 (containsKey!143 lt!40796 (_1!1126 lt!40163)))))

(declare-fun d!22325 () Bool)

(assert (=> d!22325 e!56121))

(declare-fun res!44280 () Bool)

(assert (=> d!22325 (=> (not res!44280) (not e!56121))))

(assert (=> d!22325 (= res!44280 (isStrictlySorted!293 lt!40796))))

(assert (=> d!22325 (= lt!40796 e!56120)))

(declare-fun c!14039 () Bool)

(assert (=> d!22325 (= c!14039 (and ((_ is Cons!1548) (toList!759 lt!40173)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 lt!40163))))))

(assert (=> d!22325 (isStrictlySorted!293 (toList!759 lt!40173))))

(assert (=> d!22325 (= (insertStrictlySorted!60 (toList!759 lt!40173) (_1!1126 lt!40163) (_2!1126 lt!40163)) lt!40796)))

(declare-fun bm!8192 () Bool)

(declare-fun call!8195 () List!1552)

(assert (=> bm!8192 (= call!8195 ($colon$colon!71 e!56119 (ite c!14039 (h!2139 (toList!759 lt!40173)) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163)))))))

(declare-fun c!14040 () Bool)

(assert (=> bm!8192 (= c!14040 c!14039)))

(declare-fun bm!8193 () Bool)

(declare-fun call!8197 () List!1552)

(declare-fun call!8196 () List!1552)

(assert (=> bm!8193 (= call!8197 call!8196)))

(declare-fun b!86106 () Bool)

(assert (=> b!86106 (= e!56120 call!8195)))

(declare-fun b!86107 () Bool)

(declare-fun e!56122 () List!1552)

(assert (=> b!86107 (= e!56122 call!8197)))

(declare-fun b!86108 () Bool)

(assert (=> b!86108 (= e!56118 call!8196)))

(declare-fun b!86109 () Bool)

(assert (=> b!86109 (= e!56119 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40173)) (_1!1126 lt!40163) (_2!1126 lt!40163)))))

(declare-fun b!86110 () Bool)

(assert (=> b!86110 (= e!56122 call!8197)))

(declare-fun b!86111 () Bool)

(assert (=> b!86111 (= c!14038 (and ((_ is Cons!1548) (toList!759 lt!40173)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 lt!40163))))))

(assert (=> b!86111 (= e!56118 e!56122)))

(declare-fun bm!8194 () Bool)

(assert (=> bm!8194 (= call!8196 call!8195)))

(assert (= (and d!22325 c!14039) b!86106))

(assert (= (and d!22325 (not c!14039)) b!86104))

(assert (= (and b!86104 c!14037) b!86108))

(assert (= (and b!86104 (not c!14037)) b!86111))

(assert (= (and b!86111 c!14038) b!86110))

(assert (= (and b!86111 (not c!14038)) b!86107))

(assert (= (or b!86110 b!86107) bm!8193))

(assert (= (or b!86108 bm!8193) bm!8194))

(assert (= (or b!86106 bm!8194) bm!8192))

(assert (= (and bm!8192 c!14040) b!86109))

(assert (= (and bm!8192 (not c!14040)) b!86102))

(assert (= (and d!22325 res!44280) b!86105))

(assert (= (and b!86105 res!44279) b!86103))

(declare-fun m!90603 () Bool)

(assert (=> b!86105 m!90603))

(declare-fun m!90605 () Bool)

(assert (=> b!86109 m!90605))

(declare-fun m!90607 () Bool)

(assert (=> d!22325 m!90607))

(assert (=> d!22325 m!90581))

(declare-fun m!90609 () Bool)

(assert (=> b!86103 m!90609))

(declare-fun m!90611 () Bool)

(assert (=> bm!8192 m!90611))

(assert (=> d!22081 d!22325))

(declare-fun d!22327 () Bool)

(declare-fun e!56124 () Bool)

(assert (=> d!22327 e!56124))

(declare-fun res!44281 () Bool)

(assert (=> d!22327 (=> res!44281 e!56124)))

(declare-fun lt!40799 () Bool)

(assert (=> d!22327 (= res!44281 (not lt!40799))))

(declare-fun lt!40800 () Bool)

(assert (=> d!22327 (= lt!40799 lt!40800)))

(declare-fun lt!40798 () Unit!2533)

(declare-fun e!56123 () Unit!2533)

(assert (=> d!22327 (= lt!40798 e!56123)))

(declare-fun c!14041 () Bool)

(assert (=> d!22327 (= c!14041 lt!40800)))

(assert (=> d!22327 (= lt!40800 (containsKey!143 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22327 (= (contains!762 call!8098 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) lt!40799)))

(declare-fun b!86112 () Bool)

(declare-fun lt!40797 () Unit!2533)

(assert (=> b!86112 (= e!56123 lt!40797)))

(assert (=> b!86112 (= lt!40797 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> b!86112 (isDefined!93 (getValueByKey!139 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!86113 () Bool)

(declare-fun Unit!2564 () Unit!2533)

(assert (=> b!86113 (= e!56123 Unit!2564)))

(declare-fun b!86114 () Bool)

(assert (=> b!86114 (= e!56124 (isDefined!93 (getValueByKey!139 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (= (and d!22327 c!14041) b!86112))

(assert (= (and d!22327 (not c!14041)) b!86113))

(assert (= (and d!22327 (not res!44281)) b!86114))

(assert (=> d!22327 m!89417))

(declare-fun m!90613 () Bool)

(assert (=> d!22327 m!90613))

(assert (=> b!86112 m!89417))

(declare-fun m!90615 () Bool)

(assert (=> b!86112 m!90615))

(assert (=> b!86112 m!89417))

(declare-fun m!90617 () Bool)

(assert (=> b!86112 m!90617))

(assert (=> b!86112 m!90617))

(declare-fun m!90619 () Bool)

(assert (=> b!86112 m!90619))

(assert (=> b!86114 m!89417))

(assert (=> b!86114 m!90617))

(assert (=> b!86114 m!90617))

(assert (=> b!86114 m!90619))

(assert (=> b!85489 d!22327))

(declare-fun d!22329 () Bool)

(declare-fun res!44282 () Bool)

(declare-fun e!56125 () Bool)

(assert (=> d!22329 (=> (not res!44282) (not e!56125))))

(assert (=> d!22329 (= res!44282 (simpleValid!57 (_2!1127 lt!40373)))))

(assert (=> d!22329 (= (valid!327 (_2!1127 lt!40373)) e!56125)))

(declare-fun b!86115 () Bool)

(declare-fun res!44283 () Bool)

(assert (=> b!86115 (=> (not res!44283) (not e!56125))))

(assert (=> b!86115 (= res!44283 (= (arrayCountValidKeys!0 (_keys!4010 (_2!1127 lt!40373)) #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))) (_size!427 (_2!1127 lt!40373))))))

(declare-fun b!86116 () Bool)

(declare-fun res!44284 () Bool)

(assert (=> b!86116 (=> (not res!44284) (not e!56125))))

(assert (=> b!86116 (= res!44284 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 (_2!1127 lt!40373)) (mask!6366 (_2!1127 lt!40373))))))

(declare-fun b!86117 () Bool)

(assert (=> b!86117 (= e!56125 (arrayNoDuplicates!0 (_keys!4010 (_2!1127 lt!40373)) #b00000000000000000000000000000000 Nil!1550))))

(assert (= (and d!22329 res!44282) b!86115))

(assert (= (and b!86115 res!44283) b!86116))

(assert (= (and b!86116 res!44284) b!86117))

(declare-fun m!90621 () Bool)

(assert (=> d!22329 m!90621))

(declare-fun m!90623 () Bool)

(assert (=> b!86115 m!90623))

(declare-fun m!90625 () Bool)

(assert (=> b!86116 m!90625))

(declare-fun m!90627 () Bool)

(assert (=> b!86117 m!90627))

(assert (=> d!22091 d!22329))

(assert (=> d!22091 d!22111))

(assert (=> b!85610 d!22229))

(assert (=> b!85536 d!22201))

(assert (=> b!85363 d!22229))

(declare-fun d!22331 () Bool)

(declare-fun lt!40801 () Bool)

(assert (=> d!22331 (= lt!40801 (select (content!88 (toList!759 lt!40241)) lt!40171))))

(declare-fun e!56126 () Bool)

(assert (=> d!22331 (= lt!40801 e!56126)))

(declare-fun res!44286 () Bool)

(assert (=> d!22331 (=> (not res!44286) (not e!56126))))

(assert (=> d!22331 (= res!44286 ((_ is Cons!1548) (toList!759 lt!40241)))))

(assert (=> d!22331 (= (contains!764 (toList!759 lt!40241) lt!40171) lt!40801)))

(declare-fun b!86118 () Bool)

(declare-fun e!56127 () Bool)

(assert (=> b!86118 (= e!56126 e!56127)))

(declare-fun res!44285 () Bool)

(assert (=> b!86118 (=> res!44285 e!56127)))

(assert (=> b!86118 (= res!44285 (= (h!2139 (toList!759 lt!40241)) lt!40171))))

(declare-fun b!86119 () Bool)

(assert (=> b!86119 (= e!56127 (contains!764 (t!5277 (toList!759 lt!40241)) lt!40171))))

(assert (= (and d!22331 res!44286) b!86118))

(assert (= (and b!86118 (not res!44285)) b!86119))

(declare-fun m!90629 () Bool)

(assert (=> d!22331 m!90629))

(declare-fun m!90631 () Bool)

(assert (=> d!22331 m!90631))

(declare-fun m!90633 () Bool)

(assert (=> b!86119 m!90633))

(assert (=> b!85329 d!22331))

(declare-fun d!22333 () Bool)

(declare-fun e!56128 () Bool)

(assert (=> d!22333 e!56128))

(declare-fun res!44287 () Bool)

(assert (=> d!22333 (=> (not res!44287) (not e!56128))))

(declare-fun lt!40803 () ListLongMap!1487)

(assert (=> d!22333 (= res!44287 (contains!762 lt!40803 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun lt!40802 () List!1552)

(assert (=> d!22333 (= lt!40803 (ListLongMap!1488 lt!40802))))

(declare-fun lt!40804 () Unit!2533)

(declare-fun lt!40805 () Unit!2533)

(assert (=> d!22333 (= lt!40804 lt!40805)))

(assert (=> d!22333 (= (getValueByKey!139 lt!40802 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (Some!144 (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22333 (= lt!40805 (lemmaContainsTupThenGetReturnValue!58 lt!40802 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22333 (= lt!40802 (insertStrictlySorted!60 (toList!759 e!55773) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22333 (= (+!116 e!55773 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!40803)))

(declare-fun b!86120 () Bool)

(declare-fun res!44288 () Bool)

(assert (=> b!86120 (=> (not res!44288) (not e!56128))))

(assert (=> b!86120 (= res!44288 (= (getValueByKey!139 (toList!759 lt!40803) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (Some!144 (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun b!86121 () Bool)

(assert (=> b!86121 (= e!56128 (contains!764 (toList!759 lt!40803) (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (= (and d!22333 res!44287) b!86120))

(assert (= (and b!86120 res!44288) b!86121))

(declare-fun m!90635 () Bool)

(assert (=> d!22333 m!90635))

(declare-fun m!90637 () Bool)

(assert (=> d!22333 m!90637))

(declare-fun m!90639 () Bool)

(assert (=> d!22333 m!90639))

(declare-fun m!90641 () Bool)

(assert (=> d!22333 m!90641))

(declare-fun m!90643 () Bool)

(assert (=> b!86120 m!90643))

(declare-fun m!90645 () Bool)

(assert (=> b!86121 m!90645))

(assert (=> bm!8099 d!22333))

(declare-fun d!22335 () Bool)

(declare-fun e!56130 () Bool)

(assert (=> d!22335 e!56130))

(declare-fun res!44289 () Bool)

(assert (=> d!22335 (=> res!44289 e!56130)))

(declare-fun lt!40808 () Bool)

(assert (=> d!22335 (= res!44289 (not lt!40808))))

(declare-fun lt!40809 () Bool)

(assert (=> d!22335 (= lt!40808 lt!40809)))

(declare-fun lt!40807 () Unit!2533)

(declare-fun e!56129 () Unit!2533)

(assert (=> d!22335 (= lt!40807 e!56129)))

(declare-fun c!14042 () Bool)

(assert (=> d!22335 (= c!14042 lt!40809)))

(assert (=> d!22335 (= lt!40809 (containsKey!143 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!22335 (= (contains!762 lt!40284 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40808)))

(declare-fun b!86122 () Bool)

(declare-fun lt!40806 () Unit!2533)

(assert (=> b!86122 (= e!56129 lt!40806)))

(assert (=> b!86122 (= lt!40806 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!86122 (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86123 () Bool)

(declare-fun Unit!2565 () Unit!2533)

(assert (=> b!86123 (= e!56129 Unit!2565)))

(declare-fun b!86124 () Bool)

(assert (=> b!86124 (= e!56130 (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!22335 c!14042) b!86122))

(assert (= (and d!22335 (not c!14042)) b!86123))

(assert (= (and d!22335 (not res!44289)) b!86124))

(assert (=> d!22335 m!89623))

(declare-fun m!90647 () Bool)

(assert (=> d!22335 m!90647))

(assert (=> b!86122 m!89623))

(declare-fun m!90649 () Bool)

(assert (=> b!86122 m!90649))

(assert (=> b!86122 m!89623))

(assert (=> b!86122 m!89875))

(assert (=> b!86122 m!89875))

(declare-fun m!90651 () Bool)

(assert (=> b!86122 m!90651))

(assert (=> b!86124 m!89623))

(assert (=> b!86124 m!89875))

(assert (=> b!86124 m!89875))

(assert (=> b!86124 m!90651))

(assert (=> b!85367 d!22335))

(declare-fun d!22337 () Bool)

(declare-fun e!56132 () Bool)

(assert (=> d!22337 e!56132))

(declare-fun res!44290 () Bool)

(assert (=> d!22337 (=> res!44290 e!56132)))

(declare-fun lt!40812 () Bool)

(assert (=> d!22337 (= res!44290 (not lt!40812))))

(declare-fun lt!40813 () Bool)

(assert (=> d!22337 (= lt!40812 lt!40813)))

(declare-fun lt!40811 () Unit!2533)

(declare-fun e!56131 () Unit!2533)

(assert (=> d!22337 (= lt!40811 e!56131)))

(declare-fun c!14043 () Bool)

(assert (=> d!22337 (= c!14043 lt!40813)))

(assert (=> d!22337 (= lt!40813 (containsKey!143 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22337 (= (contains!762 lt!40443 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40812)))

(declare-fun b!86125 () Bool)

(declare-fun lt!40810 () Unit!2533)

(assert (=> b!86125 (= e!56131 lt!40810)))

(assert (=> b!86125 (= lt!40810 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86125 (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86126 () Bool)

(declare-fun Unit!2566 () Unit!2533)

(assert (=> b!86126 (= e!56131 Unit!2566)))

(declare-fun b!86127 () Bool)

(assert (=> b!86127 (= e!56132 (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22337 c!14043) b!86125))

(assert (= (and d!22337 (not c!14043)) b!86126))

(assert (= (and d!22337 (not res!44290)) b!86127))

(declare-fun m!90653 () Bool)

(assert (=> d!22337 m!90653))

(declare-fun m!90655 () Bool)

(assert (=> b!86125 m!90655))

(assert (=> b!86125 m!90005))

(assert (=> b!86125 m!90005))

(declare-fun m!90657 () Bool)

(assert (=> b!86125 m!90657))

(assert (=> b!86127 m!90005))

(assert (=> b!86127 m!90005))

(assert (=> b!86127 m!90657))

(assert (=> bm!8124 d!22337))

(assert (=> d!22113 d!22151))

(declare-fun d!22339 () Bool)

(declare-fun lt!40814 () Bool)

(assert (=> d!22339 (= lt!40814 (select (content!88 (toList!759 lt!40248)) lt!40172))))

(declare-fun e!56133 () Bool)

(assert (=> d!22339 (= lt!40814 e!56133)))

(declare-fun res!44292 () Bool)

(assert (=> d!22339 (=> (not res!44292) (not e!56133))))

(assert (=> d!22339 (= res!44292 ((_ is Cons!1548) (toList!759 lt!40248)))))

(assert (=> d!22339 (= (contains!764 (toList!759 lt!40248) lt!40172) lt!40814)))

(declare-fun b!86128 () Bool)

(declare-fun e!56134 () Bool)

(assert (=> b!86128 (= e!56133 e!56134)))

(declare-fun res!44291 () Bool)

(assert (=> b!86128 (=> res!44291 e!56134)))

(assert (=> b!86128 (= res!44291 (= (h!2139 (toList!759 lt!40248)) lt!40172))))

(declare-fun b!86129 () Bool)

(assert (=> b!86129 (= e!56134 (contains!764 (t!5277 (toList!759 lt!40248)) lt!40172))))

(assert (= (and d!22339 res!44292) b!86128))

(assert (= (and b!86128 (not res!44291)) b!86129))

(declare-fun m!90659 () Bool)

(assert (=> d!22339 m!90659))

(declare-fun m!90661 () Bool)

(assert (=> d!22339 m!90661))

(declare-fun m!90663 () Bool)

(assert (=> b!86129 m!90663))

(assert (=> b!85331 d!22339))

(assert (=> b!85493 d!22165))

(declare-fun d!22341 () Bool)

(assert (=> d!22341 (= (get!1214 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) from!355) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2647 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> b!85616 d!22341))

(declare-fun d!22343 () Bool)

(declare-fun lt!40817 () Bool)

(declare-fun content!89 (List!1553) (InoxSet (_ BitVec 64)))

(assert (=> d!22343 (= lt!40817 (select (content!89 Nil!1550) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun e!56140 () Bool)

(assert (=> d!22343 (= lt!40817 e!56140)))

(declare-fun res!44298 () Bool)

(assert (=> d!22343 (=> (not res!44298) (not e!56140))))

(assert (=> d!22343 (= res!44298 ((_ is Cons!1549) Nil!1550))))

(assert (=> d!22343 (= (contains!765 Nil!1550 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) lt!40817)))

(declare-fun b!86134 () Bool)

(declare-fun e!56139 () Bool)

(assert (=> b!86134 (= e!56140 e!56139)))

(declare-fun res!44297 () Bool)

(assert (=> b!86134 (=> res!44297 e!56139)))

(assert (=> b!86134 (= res!44297 (= (h!2140 Nil!1550) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!86135 () Bool)

(assert (=> b!86135 (= e!56139 (contains!765 (t!5278 Nil!1550) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (= (and d!22343 res!44298) b!86134))

(assert (= (and b!86134 (not res!44297)) b!86135))

(declare-fun m!90665 () Bool)

(assert (=> d!22343 m!90665))

(assert (=> d!22343 m!89417))

(declare-fun m!90667 () Bool)

(assert (=> d!22343 m!90667))

(assert (=> b!86135 m!89417))

(declare-fun m!90669 () Bool)

(assert (=> b!86135 m!90669))

(assert (=> b!85538 d!22343))

(declare-fun d!22345 () Bool)

(declare-fun e!56141 () Bool)

(assert (=> d!22345 e!56141))

(declare-fun res!44299 () Bool)

(assert (=> d!22345 (=> (not res!44299) (not e!56141))))

(declare-fun lt!40819 () ListLongMap!1487)

(assert (=> d!22345 (= res!44299 (contains!762 lt!40819 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun lt!40818 () List!1552)

(assert (=> d!22345 (= lt!40819 (ListLongMap!1488 lt!40818))))

(declare-fun lt!40820 () Unit!2533)

(declare-fun lt!40821 () Unit!2533)

(assert (=> d!22345 (= lt!40820 lt!40821)))

(assert (=> d!22345 (= (getValueByKey!139 lt!40818 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (Some!144 (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22345 (= lt!40821 (lemmaContainsTupThenGetReturnValue!58 lt!40818 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22345 (= lt!40818 (insertStrictlySorted!60 (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128))) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22345 (= (+!116 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128)) (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40819)))

(declare-fun b!86136 () Bool)

(declare-fun res!44300 () Bool)

(assert (=> b!86136 (=> (not res!44300) (not e!56141))))

(assert (=> b!86136 (= res!44300 (= (getValueByKey!139 (toList!759 lt!40819) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (Some!144 (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun b!86137 () Bool)

(assert (=> b!86137 (= e!56141 (contains!764 (toList!759 lt!40819) (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (= (and d!22345 res!44299) b!86136))

(assert (= (and b!86136 res!44300) b!86137))

(declare-fun m!90671 () Bool)

(assert (=> d!22345 m!90671))

(declare-fun m!90673 () Bool)

(assert (=> d!22345 m!90673))

(declare-fun m!90675 () Bool)

(assert (=> d!22345 m!90675))

(declare-fun m!90677 () Bool)

(assert (=> d!22345 m!90677))

(declare-fun m!90679 () Bool)

(assert (=> b!86136 m!90679))

(declare-fun m!90681 () Bool)

(assert (=> b!86137 m!90681))

(assert (=> bm!8123 d!22345))

(assert (=> bm!8101 d!22113))

(declare-fun d!22347 () Bool)

(declare-fun lt!40822 () Bool)

(assert (=> d!22347 (= lt!40822 (select (content!88 (toList!759 lt!40256)) lt!40172))))

(declare-fun e!56142 () Bool)

(assert (=> d!22347 (= lt!40822 e!56142)))

(declare-fun res!44302 () Bool)

(assert (=> d!22347 (=> (not res!44302) (not e!56142))))

(assert (=> d!22347 (= res!44302 ((_ is Cons!1548) (toList!759 lt!40256)))))

(assert (=> d!22347 (= (contains!764 (toList!759 lt!40256) lt!40172) lt!40822)))

(declare-fun b!86138 () Bool)

(declare-fun e!56143 () Bool)

(assert (=> b!86138 (= e!56142 e!56143)))

(declare-fun res!44301 () Bool)

(assert (=> b!86138 (=> res!44301 e!56143)))

(assert (=> b!86138 (= res!44301 (= (h!2139 (toList!759 lt!40256)) lt!40172))))

(declare-fun b!86139 () Bool)

(assert (=> b!86139 (= e!56143 (contains!764 (t!5277 (toList!759 lt!40256)) lt!40172))))

(assert (= (and d!22347 res!44302) b!86138))

(assert (= (and b!86138 (not res!44301)) b!86139))

(declare-fun m!90683 () Bool)

(assert (=> d!22347 m!90683))

(declare-fun m!90685 () Bool)

(assert (=> d!22347 m!90685))

(declare-fun m!90687 () Bool)

(assert (=> b!86139 m!90687))

(assert (=> b!85335 d!22347))

(declare-fun d!22349 () Bool)

(assert (=> d!22349 (= (+!116 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40380 lt!40164 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40825 () Unit!2533)

(declare-fun choose!517 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 V!3027 Int) Unit!2533)

(assert (=> d!22349 (= lt!40825 (choose!517 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40380 (zeroValue!2230 newMap!16) lt!40164 (minValue!2230 newMap!16) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22349 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22349 (= (lemmaChangeZeroKeyThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40380 (zeroValue!2230 newMap!16) lt!40164 (minValue!2230 newMap!16) (defaultEntry!2338 newMap!16)) lt!40825)))

(declare-fun bs!3621 () Bool)

(assert (= bs!3621 d!22349))

(assert (=> bs!3621 m!89885))

(assert (=> bs!3621 m!89683))

(declare-fun m!90689 () Bool)

(assert (=> bs!3621 m!90689))

(assert (=> bs!3621 m!89683))

(declare-fun m!90691 () Bool)

(assert (=> bs!3621 m!90691))

(declare-fun m!90693 () Bool)

(assert (=> bs!3621 m!90693))

(assert (=> b!85496 d!22349))

(declare-fun d!22351 () Bool)

(assert (=> d!22351 (isDefined!93 (getValueByKey!139 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun lt!40828 () Unit!2533)

(declare-fun choose!518 (List!1552 (_ BitVec 64)) Unit!2533)

(assert (=> d!22351 (= lt!40828 (choose!518 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun e!56146 () Bool)

(assert (=> d!22351 e!56146))

(declare-fun res!44305 () Bool)

(assert (=> d!22351 (=> (not res!44305) (not e!56146))))

(assert (=> d!22351 (= res!44305 (isStrictlySorted!293 (toList!759 lt!40177)))))

(assert (=> d!22351 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) lt!40828)))

(declare-fun b!86142 () Bool)

(assert (=> b!86142 (= e!56146 (containsKey!143 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (= (and d!22351 res!44305) b!86142))

(assert (=> d!22351 m!89417))

(assert (=> d!22351 m!89679))

(assert (=> d!22351 m!89679))

(assert (=> d!22351 m!89681))

(assert (=> d!22351 m!89417))

(declare-fun m!90695 () Bool)

(assert (=> d!22351 m!90695))

(declare-fun m!90697 () Bool)

(assert (=> d!22351 m!90697))

(assert (=> b!86142 m!89417))

(assert (=> b!86142 m!89675))

(assert (=> b!85384 d!22351))

(declare-fun d!22353 () Bool)

(declare-fun isEmpty!342 (Option!145) Bool)

(assert (=> d!22353 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))))

(declare-fun bs!3622 () Bool)

(assert (= bs!3622 d!22353))

(assert (=> bs!3622 m!89679))

(declare-fun m!90699 () Bool)

(assert (=> bs!3622 m!90699))

(assert (=> b!85384 d!22353))

(declare-fun b!86143 () Bool)

(declare-fun e!56147 () Option!145)

(assert (=> b!86143 (= e!56147 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40177)))))))

(declare-fun b!86145 () Bool)

(declare-fun e!56148 () Option!145)

(assert (=> b!86145 (= e!56148 (getValueByKey!139 (t!5277 (toList!759 lt!40177)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!86144 () Bool)

(assert (=> b!86144 (= e!56147 e!56148)))

(declare-fun c!14045 () Bool)

(assert (=> b!86144 (= c!14045 (and ((_ is Cons!1548) (toList!759 lt!40177)) (not (= (_1!1126 (h!2139 (toList!759 lt!40177))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))))

(declare-fun d!22355 () Bool)

(declare-fun c!14044 () Bool)

(assert (=> d!22355 (= c!14044 (and ((_ is Cons!1548) (toList!759 lt!40177)) (= (_1!1126 (h!2139 (toList!759 lt!40177))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (=> d!22355 (= (getValueByKey!139 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) e!56147)))

(declare-fun b!86146 () Bool)

(assert (=> b!86146 (= e!56148 None!143)))

(assert (= (and d!22355 c!14044) b!86143))

(assert (= (and d!22355 (not c!14044)) b!86144))

(assert (= (and b!86144 c!14045) b!86145))

(assert (= (and b!86144 (not c!14045)) b!86146))

(assert (=> b!86145 m!89417))

(declare-fun m!90701 () Bool)

(assert (=> b!86145 m!90701))

(assert (=> b!85384 d!22355))

(declare-fun d!22357 () Bool)

(declare-fun lt!40829 () Bool)

(assert (=> d!22357 (= lt!40829 (select (content!88 (toList!759 lt!40261)) lt!40163))))

(declare-fun e!56149 () Bool)

(assert (=> d!22357 (= lt!40829 e!56149)))

(declare-fun res!44307 () Bool)

(assert (=> d!22357 (=> (not res!44307) (not e!56149))))

(assert (=> d!22357 (= res!44307 ((_ is Cons!1548) (toList!759 lt!40261)))))

(assert (=> d!22357 (= (contains!764 (toList!759 lt!40261) lt!40163) lt!40829)))

(declare-fun b!86147 () Bool)

(declare-fun e!56150 () Bool)

(assert (=> b!86147 (= e!56149 e!56150)))

(declare-fun res!44306 () Bool)

(assert (=> b!86147 (=> res!44306 e!56150)))

(assert (=> b!86147 (= res!44306 (= (h!2139 (toList!759 lt!40261)) lt!40163))))

(declare-fun b!86148 () Bool)

(assert (=> b!86148 (= e!56150 (contains!764 (t!5277 (toList!759 lt!40261)) lt!40163))))

(assert (= (and d!22357 res!44307) b!86147))

(assert (= (and b!86147 (not res!44306)) b!86148))

(declare-fun m!90703 () Bool)

(assert (=> d!22357 m!90703))

(declare-fun m!90705 () Bool)

(assert (=> d!22357 m!90705))

(declare-fun m!90707 () Bool)

(assert (=> b!86148 m!90707))

(assert (=> b!85337 d!22357))

(declare-fun d!22359 () Bool)

(declare-fun res!44308 () Bool)

(declare-fun e!56151 () Bool)

(assert (=> d!22359 (=> res!44308 e!56151)))

(assert (=> d!22359 (= res!44308 (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22359 (= (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!56151)))

(declare-fun b!86149 () Bool)

(declare-fun e!56152 () Bool)

(assert (=> b!86149 (= e!56151 e!56152)))

(declare-fun res!44309 () Bool)

(assert (=> b!86149 (=> (not res!44309) (not e!56152))))

(assert (=> b!86149 (= res!44309 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!86150 () Bool)

(assert (=> b!86150 (= e!56152 (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!22359 (not res!44308)) b!86149))

(assert (= (and b!86149 res!44309) b!86150))

(assert (=> d!22359 m!90163))

(assert (=> b!86150 m!89417))

(declare-fun m!90709 () Bool)

(assert (=> b!86150 m!90709))

(assert (=> b!85518 d!22359))

(declare-fun bm!8195 () Bool)

(declare-fun call!8204 () ListLongMap!1487)

(declare-fun call!8201 () ListLongMap!1487)

(assert (=> bm!8195 (= call!8204 call!8201)))

(declare-fun b!86151 () Bool)

(declare-fun e!56162 () ListLongMap!1487)

(declare-fun call!8199 () ListLongMap!1487)

(assert (=> b!86151 (= e!56162 call!8199)))

(declare-fun b!86152 () Bool)

(declare-fun e!56164 () ListLongMap!1487)

(declare-fun call!8202 () ListLongMap!1487)

(assert (=> b!86152 (= e!56164 call!8202)))

(declare-fun b!86153 () Bool)

(declare-fun e!56160 () Bool)

(declare-fun e!56163 () Bool)

(assert (=> b!86153 (= e!56160 e!56163)))

(declare-fun res!44315 () Bool)

(assert (=> b!86153 (=> (not res!44315) (not e!56163))))

(declare-fun lt!40834 () ListLongMap!1487)

(assert (=> b!86153 (= res!44315 (contains!762 lt!40834 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86153 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8196 () Bool)

(assert (=> bm!8196 (= call!8202 call!8204)))

(declare-fun b!86154 () Bool)

(declare-fun e!56159 () Unit!2533)

(declare-fun Unit!2567 () Unit!2533)

(assert (=> b!86154 (= e!56159 Unit!2567)))

(declare-fun b!86155 () Bool)

(declare-fun e!56156 () Bool)

(declare-fun e!56153 () Bool)

(assert (=> b!86155 (= e!56156 e!56153)))

(declare-fun res!44313 () Bool)

(declare-fun call!8203 () Bool)

(assert (=> b!86155 (= res!44313 call!8203)))

(assert (=> b!86155 (=> (not res!44313) (not e!56153))))

(declare-fun b!86157 () Bool)

(declare-fun e!56165 () Bool)

(declare-fun call!8200 () Bool)

(assert (=> b!86157 (= e!56165 (not call!8200))))

(declare-fun c!14050 () Bool)

(declare-fun b!86158 () Bool)

(assert (=> b!86158 (= c!14050 (and (not (= (bvand (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!86158 (= e!56162 e!56164)))

(declare-fun bm!8197 () Bool)

(declare-fun c!14049 () Bool)

(declare-fun call!8198 () ListLongMap!1487)

(declare-fun c!14047 () Bool)

(assert (=> bm!8197 (= call!8198 (+!116 (ite c!14049 call!8201 (ite c!14047 call!8204 call!8202)) (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(declare-fun e!56154 () ListLongMap!1487)

(declare-fun b!86159 () Bool)

(assert (=> b!86159 (= e!56154 (+!116 call!8198 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))))

(declare-fun bm!8198 () Bool)

(assert (=> bm!8198 (= call!8203 (contains!762 lt!40834 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86160 () Bool)

(assert (=> b!86160 (= e!56164 call!8199)))

(declare-fun b!86161 () Bool)

(declare-fun res!44318 () Bool)

(declare-fun e!56157 () Bool)

(assert (=> b!86161 (=> (not res!44318) (not e!56157))))

(assert (=> b!86161 (= res!44318 e!56156)))

(declare-fun c!14051 () Bool)

(assert (=> b!86161 (= c!14051 (not (= (bvand (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86162 () Bool)

(assert (=> b!86162 (= e!56154 e!56162)))

(assert (=> b!86162 (= c!14047 (and (not (= (bvand (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86163 () Bool)

(assert (=> b!86163 (= e!56157 e!56165)))

(declare-fun c!14046 () Bool)

(assert (=> b!86163 (= c!14046 (not (= (bvand (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8199 () Bool)

(assert (=> bm!8199 (= call!8199 call!8198)))

(declare-fun d!22361 () Bool)

(assert (=> d!22361 e!56157))

(declare-fun res!44317 () Bool)

(assert (=> d!22361 (=> (not res!44317) (not e!56157))))

(assert (=> d!22361 (= res!44317 (or (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))))

(declare-fun lt!40848 () ListLongMap!1487)

(assert (=> d!22361 (= lt!40834 lt!40848)))

(declare-fun lt!40830 () Unit!2533)

(assert (=> d!22361 (= lt!40830 e!56159)))

(declare-fun c!14048 () Bool)

(declare-fun e!56161 () Bool)

(assert (=> d!22361 (= c!14048 e!56161)))

(declare-fun res!44311 () Bool)

(assert (=> d!22361 (=> (not res!44311) (not e!56161))))

(assert (=> d!22361 (= res!44311 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22361 (= lt!40848 e!56154)))

(assert (=> d!22361 (= c!14049 (and (not (= (bvand (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22361 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22361 (= (getCurrentListMap!443 (_keys!4010 newMap!16) (ite c!13870 (_values!2321 newMap!16) lt!40379) (mask!6366 newMap!16) (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!40834)))

(declare-fun b!86156 () Bool)

(assert (=> b!86156 (= e!56156 (not call!8203))))

(declare-fun b!86164 () Bool)

(declare-fun lt!40838 () Unit!2533)

(assert (=> b!86164 (= e!56159 lt!40838)))

(declare-fun lt!40847 () ListLongMap!1487)

(assert (=> b!86164 (= lt!40847 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite c!13870 (_values!2321 newMap!16) lt!40379) (mask!6366 newMap!16) (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40831 () (_ BitVec 64))

(assert (=> b!86164 (= lt!40831 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40849 () (_ BitVec 64))

(assert (=> b!86164 (= lt!40849 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40841 () Unit!2533)

(assert (=> b!86164 (= lt!40841 (addStillContains!58 lt!40847 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) lt!40849))))

(assert (=> b!86164 (contains!762 (+!116 lt!40847 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) lt!40849)))

(declare-fun lt!40837 () Unit!2533)

(assert (=> b!86164 (= lt!40837 lt!40841)))

(declare-fun lt!40843 () ListLongMap!1487)

(assert (=> b!86164 (= lt!40843 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite c!13870 (_values!2321 newMap!16) lt!40379) (mask!6366 newMap!16) (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40846 () (_ BitVec 64))

(assert (=> b!86164 (= lt!40846 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40845 () (_ BitVec 64))

(assert (=> b!86164 (= lt!40845 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40839 () Unit!2533)

(assert (=> b!86164 (= lt!40839 (addApplyDifferent!58 lt!40843 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) lt!40845))))

(assert (=> b!86164 (= (apply!82 (+!116 lt!40843 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) lt!40845) (apply!82 lt!40843 lt!40845))))

(declare-fun lt!40850 () Unit!2533)

(assert (=> b!86164 (= lt!40850 lt!40839)))

(declare-fun lt!40836 () ListLongMap!1487)

(assert (=> b!86164 (= lt!40836 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite c!13870 (_values!2321 newMap!16) lt!40379) (mask!6366 newMap!16) (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40842 () (_ BitVec 64))

(assert (=> b!86164 (= lt!40842 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40833 () (_ BitVec 64))

(assert (=> b!86164 (= lt!40833 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40844 () Unit!2533)

(assert (=> b!86164 (= lt!40844 (addApplyDifferent!58 lt!40836 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) lt!40833))))

(assert (=> b!86164 (= (apply!82 (+!116 lt!40836 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) lt!40833) (apply!82 lt!40836 lt!40833))))

(declare-fun lt!40835 () Unit!2533)

(assert (=> b!86164 (= lt!40835 lt!40844)))

(declare-fun lt!40840 () ListLongMap!1487)

(assert (=> b!86164 (= lt!40840 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite c!13870 (_values!2321 newMap!16) lt!40379) (mask!6366 newMap!16) (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40851 () (_ BitVec 64))

(assert (=> b!86164 (= lt!40851 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40832 () (_ BitVec 64))

(assert (=> b!86164 (= lt!40832 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86164 (= lt!40838 (addApplyDifferent!58 lt!40840 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) lt!40832))))

(assert (=> b!86164 (= (apply!82 (+!116 lt!40840 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) lt!40832) (apply!82 lt!40840 lt!40832))))

(declare-fun b!86165 () Bool)

(declare-fun e!56155 () Bool)

(assert (=> b!86165 (= e!56155 (= (apply!82 lt!40834 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))

(declare-fun b!86166 () Bool)

(assert (=> b!86166 (= e!56161 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86167 () Bool)

(assert (=> b!86167 (= e!56163 (= (apply!82 lt!40834 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 (ite c!13870 (_values!2321 newMap!16) lt!40379)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86167 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (ite c!13870 (_values!2321 newMap!16) lt!40379))))))

(assert (=> b!86167 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8200 () Bool)

(assert (=> bm!8200 (= call!8200 (contains!762 lt!40834 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86168 () Bool)

(assert (=> b!86168 (= e!56165 e!56155)))

(declare-fun res!44314 () Bool)

(assert (=> b!86168 (= res!44314 call!8200)))

(assert (=> b!86168 (=> (not res!44314) (not e!56155))))

(declare-fun b!86169 () Bool)

(declare-fun res!44312 () Bool)

(assert (=> b!86169 (=> (not res!44312) (not e!56157))))

(assert (=> b!86169 (= res!44312 e!56160)))

(declare-fun res!44310 () Bool)

(assert (=> b!86169 (=> res!44310 e!56160)))

(declare-fun e!56158 () Bool)

(assert (=> b!86169 (= res!44310 (not e!56158))))

(declare-fun res!44316 () Bool)

(assert (=> b!86169 (=> (not res!44316) (not e!56158))))

(assert (=> b!86169 (= res!44316 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8201 () Bool)

(assert (=> bm!8201 (= call!8201 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite c!13870 (_values!2321 newMap!16) lt!40379) (mask!6366 newMap!16) (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!86170 () Bool)

(assert (=> b!86170 (= e!56158 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86171 () Bool)

(assert (=> b!86171 (= e!56153 (= (apply!82 lt!40834 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))))

(assert (= (and d!22361 c!14049) b!86159))

(assert (= (and d!22361 (not c!14049)) b!86162))

(assert (= (and b!86162 c!14047) b!86151))

(assert (= (and b!86162 (not c!14047)) b!86158))

(assert (= (and b!86158 c!14050) b!86160))

(assert (= (and b!86158 (not c!14050)) b!86152))

(assert (= (or b!86160 b!86152) bm!8196))

(assert (= (or b!86151 bm!8196) bm!8195))

(assert (= (or b!86151 b!86160) bm!8199))

(assert (= (or b!86159 bm!8195) bm!8201))

(assert (= (or b!86159 bm!8199) bm!8197))

(assert (= (and d!22361 res!44311) b!86166))

(assert (= (and d!22361 c!14048) b!86164))

(assert (= (and d!22361 (not c!14048)) b!86154))

(assert (= (and d!22361 res!44317) b!86169))

(assert (= (and b!86169 res!44316) b!86170))

(assert (= (and b!86169 (not res!44310)) b!86153))

(assert (= (and b!86153 res!44315) b!86167))

(assert (= (and b!86169 res!44312) b!86161))

(assert (= (and b!86161 c!14051) b!86155))

(assert (= (and b!86161 (not c!14051)) b!86156))

(assert (= (and b!86155 res!44313) b!86171))

(assert (= (or b!86155 b!86156) bm!8198))

(assert (= (and b!86161 res!44318) b!86163))

(assert (= (and b!86163 c!14046) b!86168))

(assert (= (and b!86163 (not c!14046)) b!86157))

(assert (= (and b!86168 res!44314) b!86165))

(assert (= (or b!86168 b!86157) bm!8200))

(declare-fun b_lambda!3817 () Bool)

(assert (=> (not b_lambda!3817) (not b!86167)))

(assert (=> b!86167 t!5286))

(declare-fun b_and!5197 () Bool)

(assert (= b_and!5193 (and (=> t!5286 result!2931) b_and!5197)))

(assert (=> b!86167 t!5288))

(declare-fun b_and!5199 () Bool)

(assert (= b_and!5195 (and (=> t!5288 result!2933) b_and!5199)))

(declare-fun m!90711 () Bool)

(assert (=> b!86165 m!90711))

(declare-fun m!90713 () Bool)

(assert (=> b!86164 m!90713))

(declare-fun m!90715 () Bool)

(assert (=> b!86164 m!90715))

(declare-fun m!90717 () Bool)

(assert (=> b!86164 m!90717))

(declare-fun m!90719 () Bool)

(assert (=> b!86164 m!90719))

(declare-fun m!90721 () Bool)

(assert (=> b!86164 m!90721))

(declare-fun m!90723 () Bool)

(assert (=> b!86164 m!90723))

(declare-fun m!90725 () Bool)

(assert (=> b!86164 m!90725))

(declare-fun m!90727 () Bool)

(assert (=> b!86164 m!90727))

(declare-fun m!90729 () Bool)

(assert (=> b!86164 m!90729))

(declare-fun m!90731 () Bool)

(assert (=> b!86164 m!90731))

(assert (=> b!86164 m!90727))

(assert (=> b!86164 m!89941))

(declare-fun m!90733 () Bool)

(assert (=> b!86164 m!90733))

(assert (=> b!86164 m!90721))

(declare-fun m!90735 () Bool)

(assert (=> b!86164 m!90735))

(assert (=> b!86164 m!90723))

(declare-fun m!90737 () Bool)

(assert (=> b!86164 m!90737))

(declare-fun m!90739 () Bool)

(assert (=> b!86164 m!90739))

(assert (=> b!86164 m!90713))

(declare-fun m!90741 () Bool)

(assert (=> b!86164 m!90741))

(declare-fun m!90743 () Bool)

(assert (=> b!86164 m!90743))

(declare-fun m!90745 () Bool)

(assert (=> b!86159 m!90745))

(declare-fun m!90747 () Bool)

(assert (=> b!86171 m!90747))

(declare-fun m!90749 () Bool)

(assert (=> bm!8198 m!90749))

(assert (=> b!86170 m!89941))

(assert (=> b!86170 m!89941))

(assert (=> b!86170 m!89961))

(assert (=> b!86167 m!89941))

(assert (=> b!86167 m!89941))

(declare-fun m!90751 () Bool)

(assert (=> b!86167 m!90751))

(declare-fun m!90753 () Bool)

(assert (=> b!86167 m!90753))

(assert (=> b!86167 m!89967))

(declare-fun m!90755 () Bool)

(assert (=> b!86167 m!90755))

(assert (=> b!86167 m!89967))

(assert (=> b!86167 m!90753))

(assert (=> bm!8201 m!90733))

(assert (=> d!22361 m!89885))

(declare-fun m!90757 () Bool)

(assert (=> bm!8197 m!90757))

(declare-fun m!90759 () Bool)

(assert (=> bm!8200 m!90759))

(assert (=> b!86153 m!89941))

(assert (=> b!86153 m!89941))

(declare-fun m!90761 () Bool)

(assert (=> b!86153 m!90761))

(assert (=> b!86166 m!89941))

(assert (=> b!86166 m!89941))

(assert (=> b!86166 m!89961))

(assert (=> bm!8102 d!22361))

(declare-fun d!22363 () Bool)

(declare-fun lt!40852 () Bool)

(assert (=> d!22363 (= lt!40852 (select (content!88 (toList!759 lt!40252)) lt!40171))))

(declare-fun e!56166 () Bool)

(assert (=> d!22363 (= lt!40852 e!56166)))

(declare-fun res!44320 () Bool)

(assert (=> d!22363 (=> (not res!44320) (not e!56166))))

(assert (=> d!22363 (= res!44320 ((_ is Cons!1548) (toList!759 lt!40252)))))

(assert (=> d!22363 (= (contains!764 (toList!759 lt!40252) lt!40171) lt!40852)))

(declare-fun b!86172 () Bool)

(declare-fun e!56167 () Bool)

(assert (=> b!86172 (= e!56166 e!56167)))

(declare-fun res!44319 () Bool)

(assert (=> b!86172 (=> res!44319 e!56167)))

(assert (=> b!86172 (= res!44319 (= (h!2139 (toList!759 lt!40252)) lt!40171))))

(declare-fun b!86173 () Bool)

(assert (=> b!86173 (= e!56167 (contains!764 (t!5277 (toList!759 lt!40252)) lt!40171))))

(assert (= (and d!22363 res!44320) b!86172))

(assert (= (and b!86172 (not res!44319)) b!86173))

(declare-fun m!90763 () Bool)

(assert (=> d!22363 m!90763))

(declare-fun m!90765 () Bool)

(assert (=> d!22363 m!90765))

(declare-fun m!90767 () Bool)

(assert (=> b!86173 m!90767))

(assert (=> b!85333 d!22363))

(declare-fun b!86174 () Bool)

(declare-fun e!56170 () Bool)

(declare-fun call!8205 () Bool)

(assert (=> b!86174 (= e!56170 call!8205)))

(declare-fun b!86175 () Bool)

(declare-fun e!56169 () Bool)

(declare-fun e!56168 () Bool)

(assert (=> b!86175 (= e!56169 e!56168)))

(declare-fun res!44321 () Bool)

(assert (=> b!86175 (=> (not res!44321) (not e!56168))))

(declare-fun e!56171 () Bool)

(assert (=> b!86175 (= res!44321 (not e!56171))))

(declare-fun res!44322 () Bool)

(assert (=> b!86175 (=> (not res!44322) (not e!56171))))

(assert (=> b!86175 (= res!44322 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!22365 () Bool)

(declare-fun res!44323 () Bool)

(assert (=> d!22365 (=> res!44323 e!56169)))

(assert (=> d!22365 (= res!44323 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> d!22365 (= (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)) e!56169)))

(declare-fun b!86176 () Bool)

(assert (=> b!86176 (= e!56170 call!8205)))

(declare-fun b!86177 () Bool)

(assert (=> b!86177 (= e!56171 (contains!765 (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!86178 () Bool)

(assert (=> b!86178 (= e!56168 e!56170)))

(declare-fun c!14052 () Bool)

(assert (=> b!86178 (= c!14052 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!8202 () Bool)

(assert (=> bm!8202 (= call!8205 (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!14052 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550))))))

(assert (= (and d!22365 (not res!44323)) b!86175))

(assert (= (and b!86175 res!44322) b!86177))

(assert (= (and b!86175 res!44321) b!86178))

(assert (= (and b!86178 c!14052) b!86176))

(assert (= (and b!86178 (not c!14052)) b!86174))

(assert (= (or b!86176 b!86174) bm!8202))

(declare-fun m!90769 () Bool)

(assert (=> b!86175 m!90769))

(assert (=> b!86175 m!90769))

(declare-fun m!90771 () Bool)

(assert (=> b!86175 m!90771))

(assert (=> b!86177 m!90769))

(assert (=> b!86177 m!90769))

(declare-fun m!90773 () Bool)

(assert (=> b!86177 m!90773))

(assert (=> b!86178 m!90769))

(assert (=> b!86178 m!90769))

(assert (=> b!86178 m!90771))

(assert (=> bm!8202 m!90769))

(declare-fun m!90775 () Bool)

(assert (=> bm!8202 m!90775))

(assert (=> bm!8106 d!22365))

(declare-fun d!22367 () Bool)

(declare-fun e!56173 () Bool)

(assert (=> d!22367 e!56173))

(declare-fun res!44324 () Bool)

(assert (=> d!22367 (=> res!44324 e!56173)))

(declare-fun lt!40855 () Bool)

(assert (=> d!22367 (= res!44324 (not lt!40855))))

(declare-fun lt!40856 () Bool)

(assert (=> d!22367 (= lt!40855 lt!40856)))

(declare-fun lt!40854 () Unit!2533)

(declare-fun e!56172 () Unit!2533)

(assert (=> d!22367 (= lt!40854 e!56172)))

(declare-fun c!14053 () Bool)

(assert (=> d!22367 (= c!14053 lt!40856)))

(assert (=> d!22367 (= lt!40856 (containsKey!143 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))

(assert (=> d!22367 (= (contains!762 e!55772 (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))) lt!40855)))

(declare-fun b!86179 () Bool)

(declare-fun lt!40853 () Unit!2533)

(assert (=> b!86179 (= e!56172 lt!40853)))

(assert (=> b!86179 (= lt!40853 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))

(assert (=> b!86179 (isDefined!93 (getValueByKey!139 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))

(declare-fun b!86180 () Bool)

(declare-fun Unit!2568 () Unit!2533)

(assert (=> b!86180 (= e!56172 Unit!2568)))

(declare-fun b!86181 () Bool)

(assert (=> b!86181 (= e!56173 (isDefined!93 (getValueByKey!139 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372))))))))

(assert (= (and d!22367 c!14053) b!86179))

(assert (= (and d!22367 (not c!14053)) b!86180))

(assert (= (and d!22367 (not res!44324)) b!86181))

(declare-fun m!90777 () Bool)

(assert (=> d!22367 m!90777))

(declare-fun m!90779 () Bool)

(assert (=> b!86179 m!90779))

(declare-fun m!90781 () Bool)

(assert (=> b!86179 m!90781))

(assert (=> b!86179 m!90781))

(declare-fun m!90783 () Bool)

(assert (=> b!86179 m!90783))

(assert (=> b!86181 m!90781))

(assert (=> b!86181 m!90781))

(assert (=> b!86181 m!90783))

(assert (=> bm!8087 d!22367))

(assert (=> b!85386 d!22353))

(assert (=> b!85386 d!22355))

(assert (=> b!85371 d!22229))

(declare-fun condMapEmpty!3411 () Bool)

(declare-fun mapDefault!3411 () ValueCell!924)

(assert (=> mapNonEmpty!3410 (= condMapEmpty!3411 (= mapRest!3410 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3411)))))

(declare-fun e!56175 () Bool)

(declare-fun mapRes!3411 () Bool)

(assert (=> mapNonEmpty!3410 (= tp!8954 (and e!56175 mapRes!3411))))

(declare-fun b!86182 () Bool)

(declare-fun e!56174 () Bool)

(assert (=> b!86182 (= e!56174 tp_is_empty!2535)))

(declare-fun mapIsEmpty!3411 () Bool)

(assert (=> mapIsEmpty!3411 mapRes!3411))

(declare-fun b!86183 () Bool)

(assert (=> b!86183 (= e!56175 tp_is_empty!2535)))

(declare-fun mapNonEmpty!3411 () Bool)

(declare-fun tp!8955 () Bool)

(assert (=> mapNonEmpty!3411 (= mapRes!3411 (and tp!8955 e!56174))))

(declare-fun mapRest!3411 () (Array (_ BitVec 32) ValueCell!924))

(declare-fun mapValue!3411 () ValueCell!924)

(declare-fun mapKey!3411 () (_ BitVec 32))

(assert (=> mapNonEmpty!3411 (= mapRest!3410 (store mapRest!3411 mapKey!3411 mapValue!3411))))

(assert (= (and mapNonEmpty!3410 condMapEmpty!3411) mapIsEmpty!3411))

(assert (= (and mapNonEmpty!3410 (not condMapEmpty!3411)) mapNonEmpty!3411))

(assert (= (and mapNonEmpty!3411 ((_ is ValueCellFull!924) mapValue!3411)) b!86182))

(assert (= (and mapNonEmpty!3410 ((_ is ValueCellFull!924) mapDefault!3411)) b!86183))

(declare-fun m!90785 () Bool)

(assert (=> mapNonEmpty!3411 m!90785))

(declare-fun condMapEmpty!3412 () Bool)

(declare-fun mapDefault!3412 () ValueCell!924)

(assert (=> mapNonEmpty!3409 (= condMapEmpty!3412 (= mapRest!3409 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3412)))))

(declare-fun e!56177 () Bool)

(declare-fun mapRes!3412 () Bool)

(assert (=> mapNonEmpty!3409 (= tp!8953 (and e!56177 mapRes!3412))))

(declare-fun b!86184 () Bool)

(declare-fun e!56176 () Bool)

(assert (=> b!86184 (= e!56176 tp_is_empty!2535)))

(declare-fun mapIsEmpty!3412 () Bool)

(assert (=> mapIsEmpty!3412 mapRes!3412))

(declare-fun b!86185 () Bool)

(assert (=> b!86185 (= e!56177 tp_is_empty!2535)))

(declare-fun mapNonEmpty!3412 () Bool)

(declare-fun tp!8956 () Bool)

(assert (=> mapNonEmpty!3412 (= mapRes!3412 (and tp!8956 e!56176))))

(declare-fun mapValue!3412 () ValueCell!924)

(declare-fun mapRest!3412 () (Array (_ BitVec 32) ValueCell!924))

(declare-fun mapKey!3412 () (_ BitVec 32))

(assert (=> mapNonEmpty!3412 (= mapRest!3409 (store mapRest!3412 mapKey!3412 mapValue!3412))))

(assert (= (and mapNonEmpty!3409 condMapEmpty!3412) mapIsEmpty!3412))

(assert (= (and mapNonEmpty!3409 (not condMapEmpty!3412)) mapNonEmpty!3412))

(assert (= (and mapNonEmpty!3412 ((_ is ValueCellFull!924) mapValue!3412)) b!86184))

(assert (= (and mapNonEmpty!3409 ((_ is ValueCellFull!924) mapDefault!3412)) b!86185))

(declare-fun m!90787 () Bool)

(assert (=> mapNonEmpty!3412 m!90787))

(declare-fun b_lambda!3819 () Bool)

(assert (= b_lambda!3815 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3819)))

(declare-fun b_lambda!3821 () Bool)

(assert (= b_lambda!3809 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3821)))

(declare-fun b_lambda!3823 () Bool)

(assert (= b_lambda!3813 (or (and b!85245 b_free!2237) (and b!85246 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))))) b_lambda!3823)))

(declare-fun b_lambda!3825 () Bool)

(assert (= b_lambda!3811 (or (and b!85245 b_free!2237) (and b!85246 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))))) b_lambda!3825)))

(declare-fun b_lambda!3827 () Bool)

(assert (= b_lambda!3817 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3827)))

(check-sat (not b!86084) (not d!22137) (not b!86125) (not b!86071) (not d!22311) (not b!86150) (not d!22189) (not d!22325) (not d!22185) (not b!86137) (not b!85686) (not d!22307) (not b!85858) (not bm!8172) (not b!86103) b_and!5197 (not b!85711) (not d!22147) (not d!22283) (not d!22143) (not d!22251) (not b!85805) (not b!85818) (not b!85811) (not d!22155) (not b!86159) (not b!85872) (not d!22207) (not bm!8189) (not b!86178) (not b!85869) (not d!22203) (not d!22357) (not d!22347) (not b!85847) (not bm!8188) (not b!85901) (not b!85933) (not b!85908) (not b!85844) (not b!85966) (not d!22345) (not d!22273) (not b!86086) (not d!22235) (not d!22323) (not b!85768) (not b!85964) (not b!85681) (not d!22361) (not b!85714) (not d!22119) (not b!85836) (not d!22339) (not b!86101) (not bm!8154) (not b!86116) (not b!86148) (not b!85687) (not b!86079) (not b!85706) (not b!85733) (not b!85833) (not b!85837) (not b!85953) (not d!22231) (not bm!8201) (not b!86062) (not b_lambda!3827) (not b!85929) (not bm!8148) (not b!85867) (not b!85822) (not b!85826) (not d!22243) (not b!85801) (not b!86098) (not d!22233) (not b!85817) (not bm!8200) (not b!86117) (not b!85771) (not b!85765) (not b!85963) (not d!22301) (not b!85704) (not d!22255) (not d!22181) (not b!86165) (not b_lambda!3805) (not d!22279) (not b!85961) (not d!22223) (not b!85708) (not b!85760) (not b!85977) (not d!22167) (not b!85939) (not b!85993) (not b!86127) (not b!85859) (not d!22165) (not b!85718) (not b!86173) (not d!22335) (not d!22331) (not b!85954) (not b!86129) (not b!86105) (not b!86164) (not b!85914) (not b!86167) (not b!86139) (not d!22293) (not b!86177) b_and!5199 (not b!85868) (not d!22133) (not b_lambda!3821) (not d!22281) (not bm!8174) (not d!22297) (not b!86004) (not d!22245) (not d!22259) (not b!85934) (not b!85958) (not b!85898) (not b!85800) (not b!85741) (not b!85672) (not b!85727) (not b!85940) (not d!22205) (not b!85941) (not b!85938) (not b!85842) (not b!85972) (not b!86171) (not b!85803) (not b!86009) (not bm!8187) (not d!22253) (not b!85899) (not b!85679) (not d!22169) (not b!85793) (not d!22305) (not b!86114) (not b!85834) (not d!22319) (not b!86055) (not d!22315) (not b!85968) (not d!22219) (not b!85840) (not b!86181) (not b!85713) (not d!22295) (not bm!8149) (not bm!8169) (not bm!8134) (not b!86074) (not b!85799) (not bm!8140) (not d!22187) (not b!85699) (not b!85907) (not b!85936) (not b!86120) (not b!85935) (not b!85851) (not b!86011) (not d!22237) (not d!22275) (not b!86082) (not d!22303) (not d!22363) (not b!85813) (not d!22125) (not b_next!2239) (not d!22337) (not d!22149) (not b!85695) (not b!85745) (not b!86054) (not d!22277) (not bm!8164) (not b!85997) (not d!22225) (not d!22367) (not b!86142) (not b!86122) (not d!22127) (not b!86179) (not b!85689) (not d!22271) (not bm!8152) (not b!86100) (not b!86166) (not d!22291) (not bm!8153) (not d!22177) (not bm!8137) (not b!85839) (not b_next!2237) (not b!86153) (not d!22309) (not d!22241) (not d!22343) (not d!22333) (not d!22175) (not d!22269) (not b!85931) (not d!22257) (not b!86001) (not b!86119) (not b!85991) (not b!85897) (not b!85912) (not b!85670) (not bm!8170) (not d!22285) (not b!85751) (not b!85862) (not bm!8198) (not bm!8146) (not b!85992) (not b!86090) (not b!86115) (not d!22349) (not b!85861) (not bm!8160) (not b!85814) (not b!85999) (not b!85641) (not b!85956) (not b!85740) (not b_lambda!3807) (not b!85716) (not b!85838) (not d!22247) (not b!85919) (not b!85812) (not b_lambda!3795) (not b!85767) (not b!86136) (not b!85998) (not d!22193) (not b_lambda!3803) (not d!22179) (not d!22213) (not mapNonEmpty!3412) (not b!86059) (not b!85830) (not d!22353) (not b!85870) (not b_lambda!3825) (not d!22151) (not b_lambda!3823) (not b!86069) (not bm!8163) (not b!86076) (not bm!8145) (not d!22351) (not b!85804) (not b!85866) (not d!22317) (not bm!8202) (not d!22211) (not b!85913) (not b!85937) (not d!22135) (not b!85819) (not b!85911) (not b!86073) (not b!86052) (not b!86124) (not b!86135) (not d!22261) (not b!85628) tp_is_empty!2535 (not d!22289) (not b!86121) (not b!86081) (not d!22329) (not b!85975) (not d!22209) (not d!22267) (not b!85691) (not b!85863) (not d!22327) (not b!86112) (not b!85738) (not d!22183) (not b_lambda!3819) (not b!86095) (not b!85684) (not b!85739) (not b!86007) (not bm!8173) (not b!86145) (not b!85980) (not b!85994) (not b!86093) (not d!22249) (not b!85943) (not mapNonEmpty!3411) (not b!85855) (not d!22141) (not d!22123) (not b!85648) (not b!85698) (not b!85986) (not b!86175) (not b!85790) (not b!86006) (not b!85630) (not b!85647) (not b!86015) (not bm!8197) (not b!86170) (not bm!8159) (not b!85744) (not d!22173) (not b!85676) (not bm!8185) (not d!22239) (not b!86109) (not b!85816) (not d!22191) (not bm!8192) (not b!85815) (not b!86053) (not b!85722) (not d!22131) (not b!85841))
(check-sat b_and!5197 b_and!5199 (not b_next!2237) (not b_next!2239))
(get-model)

(declare-fun d!22369 () Bool)

(assert (=> d!22369 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40252) (_1!1126 lt!40171))) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40252) (_1!1126 lt!40171)))))))

(declare-fun bs!3623 () Bool)

(assert (= bs!3623 d!22369))

(assert (=> bs!3623 m!89585))

(declare-fun m!90789 () Bool)

(assert (=> bs!3623 m!90789))

(assert (=> b!85958 d!22369))

(assert (=> b!85958 d!22197))

(declare-fun d!22371 () Bool)

(assert (=> d!22371 (= (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86178 d!22371))

(declare-fun d!22373 () Bool)

(assert (=> d!22373 (= (apply!82 lt!40493 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1216 (getValueByKey!139 (toList!759 lt!40493) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3624 () Bool)

(assert (= bs!3624 d!22373))

(declare-fun m!90791 () Bool)

(assert (=> bs!3624 m!90791))

(assert (=> bs!3624 m!90791))

(declare-fun m!90793 () Bool)

(assert (=> bs!3624 m!90793))

(assert (=> b!85745 d!22373))

(declare-fun d!22375 () Bool)

(declare-fun res!44325 () Bool)

(declare-fun e!56178 () Bool)

(assert (=> d!22375 (=> res!44325 e!56178)))

(assert (=> d!22375 (= res!44325 (and ((_ is Cons!1548) (toList!759 call!8098)) (= (_1!1126 (h!2139 (toList!759 call!8098))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (=> d!22375 (= (containsKey!143 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) e!56178)))

(declare-fun b!86186 () Bool)

(declare-fun e!56179 () Bool)

(assert (=> b!86186 (= e!56178 e!56179)))

(declare-fun res!44326 () Bool)

(assert (=> b!86186 (=> (not res!44326) (not e!56179))))

(assert (=> b!86186 (= res!44326 (and (or (not ((_ is Cons!1548) (toList!759 call!8098))) (bvsle (_1!1126 (h!2139 (toList!759 call!8098))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))) ((_ is Cons!1548) (toList!759 call!8098)) (bvslt (_1!1126 (h!2139 (toList!759 call!8098))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(declare-fun b!86187 () Bool)

(assert (=> b!86187 (= e!56179 (containsKey!143 (t!5277 (toList!759 call!8098)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (= (and d!22375 (not res!44325)) b!86186))

(assert (= (and b!86186 res!44326) b!86187))

(assert (=> b!86187 m!89417))

(declare-fun m!90795 () Bool)

(assert (=> b!86187 m!90795))

(assert (=> d!22327 d!22375))

(declare-fun d!22377 () Bool)

(declare-fun lt!40857 () Bool)

(assert (=> d!22377 (= lt!40857 (select (content!88 lt!40289) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun e!56180 () Bool)

(assert (=> d!22377 (= lt!40857 e!56180)))

(declare-fun res!44328 () Bool)

(assert (=> d!22377 (=> (not res!44328) (not e!56180))))

(assert (=> d!22377 (= res!44328 ((_ is Cons!1548) lt!40289))))

(assert (=> d!22377 (= (contains!764 lt!40289 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))) lt!40857)))

(declare-fun b!86188 () Bool)

(declare-fun e!56181 () Bool)

(assert (=> b!86188 (= e!56180 e!56181)))

(declare-fun res!44327 () Bool)

(assert (=> b!86188 (=> res!44327 e!56181)))

(assert (=> b!86188 (= res!44327 (= (h!2139 lt!40289) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!86189 () Bool)

(assert (=> b!86189 (= e!56181 (contains!764 (t!5277 lt!40289) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(assert (= (and d!22377 res!44328) b!86188))

(assert (= (and b!86188 (not res!44327)) b!86189))

(declare-fun m!90797 () Bool)

(assert (=> d!22377 m!90797))

(declare-fun m!90799 () Bool)

(assert (=> d!22377 m!90799))

(declare-fun m!90801 () Bool)

(assert (=> b!86189 m!90801))

(assert (=> b!85648 d!22377))

(declare-fun d!22379 () Bool)

(declare-fun res!44329 () Bool)

(declare-fun e!56182 () Bool)

(assert (=> d!22379 (=> res!44329 e!56182)))

(assert (=> d!22379 (= res!44329 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))))) lt!40280)))))

(assert (=> d!22379 (= (containsKey!143 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280) e!56182)))

(declare-fun b!86190 () Bool)

(declare-fun e!56183 () Bool)

(assert (=> b!86190 (= e!56182 e!56183)))

(declare-fun res!44330 () Bool)

(assert (=> b!86190 (=> (not res!44330) (not e!56183))))

(assert (=> b!86190 (= res!44330 (and (or (not ((_ is Cons!1548) (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))))) (bvsle (_1!1126 (h!2139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))))) lt!40280)) ((_ is Cons!1548) (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)))) (bvslt (_1!1126 (h!2139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))))) lt!40280)))))

(declare-fun b!86191 () Bool)

(assert (=> b!86191 (= e!56183 (containsKey!143 (t!5277 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)))) lt!40280))))

(assert (= (and d!22379 (not res!44329)) b!86190))

(assert (= (and b!86190 res!44330) b!86191))

(declare-fun m!90803 () Bool)

(assert (=> b!86191 m!90803))

(assert (=> d!22179 d!22379))

(declare-fun lt!40858 () Bool)

(declare-fun d!22381 () Bool)

(assert (=> d!22381 (= lt!40858 (select (content!88 (toList!759 lt!40613)) (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun e!56184 () Bool)

(assert (=> d!22381 (= lt!40858 e!56184)))

(declare-fun res!44332 () Bool)

(assert (=> d!22381 (=> (not res!44332) (not e!56184))))

(assert (=> d!22381 (= res!44332 ((_ is Cons!1548) (toList!759 lt!40613)))))

(assert (=> d!22381 (= (contains!764 (toList!759 lt!40613) (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40858)))

(declare-fun b!86192 () Bool)

(declare-fun e!56185 () Bool)

(assert (=> b!86192 (= e!56184 e!56185)))

(declare-fun res!44331 () Bool)

(assert (=> b!86192 (=> res!44331 e!56185)))

(assert (=> b!86192 (= res!44331 (= (h!2139 (toList!759 lt!40613)) (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!86193 () Bool)

(assert (=> b!86193 (= e!56185 (contains!764 (t!5277 (toList!759 lt!40613)) (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22381 res!44332) b!86192))

(assert (= (and b!86192 (not res!44331)) b!86193))

(declare-fun m!90805 () Bool)

(assert (=> d!22381 m!90805))

(declare-fun m!90807 () Bool)

(assert (=> d!22381 m!90807))

(declare-fun m!90809 () Bool)

(assert (=> b!86193 m!90809))

(assert (=> b!85912 d!22381))

(assert (=> d!22147 d!22145))

(declare-fun d!22383 () Bool)

(assert (=> d!22383 (= (getValueByKey!139 lt!40285 (_1!1126 lt!40163)) (Some!144 (_2!1126 lt!40163)))))

(assert (=> d!22383 true))

(declare-fun _$22!418 () Unit!2533)

(assert (=> d!22383 (= (choose!508 lt!40285 (_1!1126 lt!40163) (_2!1126 lt!40163)) _$22!418)))

(declare-fun bs!3625 () Bool)

(assert (= bs!3625 d!22383))

(assert (=> bs!3625 m!89653))

(assert (=> d!22147 d!22383))

(declare-fun d!22385 () Bool)

(declare-fun res!44337 () Bool)

(declare-fun e!56190 () Bool)

(assert (=> d!22385 (=> res!44337 e!56190)))

(assert (=> d!22385 (= res!44337 (or ((_ is Nil!1549) lt!40285) ((_ is Nil!1549) (t!5277 lt!40285))))))

(assert (=> d!22385 (= (isStrictlySorted!293 lt!40285) e!56190)))

(declare-fun b!86198 () Bool)

(declare-fun e!56191 () Bool)

(assert (=> b!86198 (= e!56190 e!56191)))

(declare-fun res!44338 () Bool)

(assert (=> b!86198 (=> (not res!44338) (not e!56191))))

(assert (=> b!86198 (= res!44338 (bvslt (_1!1126 (h!2139 lt!40285)) (_1!1126 (h!2139 (t!5277 lt!40285)))))))

(declare-fun b!86199 () Bool)

(assert (=> b!86199 (= e!56191 (isStrictlySorted!293 (t!5277 lt!40285)))))

(assert (= (and d!22385 (not res!44337)) b!86198))

(assert (= (and b!86198 res!44338) b!86199))

(declare-fun m!90811 () Bool)

(assert (=> b!86199 m!90811))

(assert (=> d!22147 d!22385))

(declare-fun d!22387 () Bool)

(assert (=> d!22387 (= (apply!82 lt!40666 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1216 (getValueByKey!139 (toList!759 lt!40666) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3626 () Bool)

(assert (= bs!3626 d!22387))

(assert (=> bs!3626 m!89941))

(declare-fun m!90813 () Bool)

(assert (=> bs!3626 m!90813))

(assert (=> bs!3626 m!90813))

(declare-fun m!90815 () Bool)

(assert (=> bs!3626 m!90815))

(assert (=> b!85994 d!22387))

(declare-fun d!22389 () Bool)

(declare-fun c!14054 () Bool)

(assert (=> d!22389 (= c!14054 ((_ is ValueCellFull!924) (select (arr!1919 (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!56192 () V!3027)

(assert (=> d!22389 (= (get!1212 (select (arr!1919 (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56192)))

(declare-fun b!86200 () Bool)

(assert (=> b!86200 (= e!56192 (get!1214 (select (arr!1919 (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86201 () Bool)

(assert (=> b!86201 (= e!56192 (get!1215 (select (arr!1919 (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22389 c!14054) b!86200))

(assert (= (and d!22389 (not c!14054)) b!86201))

(assert (=> b!86200 m!90455))

(assert (=> b!86200 m!89967))

(declare-fun m!90817 () Bool)

(assert (=> b!86200 m!90817))

(assert (=> b!86201 m!90455))

(assert (=> b!86201 m!89967))

(declare-fun m!90819 () Bool)

(assert (=> b!86201 m!90819))

(assert (=> b!85994 d!22389))

(declare-fun d!22391 () Bool)

(declare-fun e!56193 () Bool)

(assert (=> d!22391 e!56193))

(declare-fun res!44339 () Bool)

(assert (=> d!22391 (=> (not res!44339) (not e!56193))))

(declare-fun lt!40860 () ListLongMap!1487)

(assert (=> d!22391 (= res!44339 (contains!762 lt!40860 (_1!1126 (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(declare-fun lt!40859 () List!1552)

(assert (=> d!22391 (= lt!40860 (ListLongMap!1488 lt!40859))))

(declare-fun lt!40861 () Unit!2533)

(declare-fun lt!40862 () Unit!2533)

(assert (=> d!22391 (= lt!40861 lt!40862)))

(assert (=> d!22391 (= (getValueByKey!139 lt!40859 (_1!1126 (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))) (Some!144 (_2!1126 (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!22391 (= lt!40862 (lemmaContainsTupThenGetReturnValue!58 lt!40859 (_1!1126 (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (_2!1126 (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!22391 (= lt!40859 (insertStrictlySorted!60 (toList!759 (ite c!13939 call!8149 (ite c!13937 call!8152 call!8150))) (_1!1126 (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (_2!1126 (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!22391 (= (+!116 (ite c!13939 call!8149 (ite c!13937 call!8152 call!8150)) (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) lt!40860)))

(declare-fun b!86202 () Bool)

(declare-fun res!44340 () Bool)

(assert (=> b!86202 (=> (not res!44340) (not e!56193))))

(assert (=> b!86202 (= res!44340 (= (getValueByKey!139 (toList!759 lt!40860) (_1!1126 (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))) (Some!144 (_2!1126 (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))))

(declare-fun b!86203 () Bool)

(assert (=> b!86203 (= e!56193 (contains!764 (toList!759 lt!40860) (ite (or c!13939 c!13937) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (= (and d!22391 res!44339) b!86202))

(assert (= (and b!86202 res!44340) b!86203))

(declare-fun m!90821 () Bool)

(assert (=> d!22391 m!90821))

(declare-fun m!90823 () Bool)

(assert (=> d!22391 m!90823))

(declare-fun m!90825 () Bool)

(assert (=> d!22391 m!90825))

(declare-fun m!90827 () Bool)

(assert (=> d!22391 m!90827))

(declare-fun m!90829 () Bool)

(assert (=> b!86202 m!90829))

(declare-fun m!90831 () Bool)

(assert (=> b!86203 m!90831))

(assert (=> bm!8145 d!22391))

(declare-fun d!22393 () Bool)

(assert (=> d!22393 (= (isEmpty!341 (toList!759 lt!40284)) ((_ is Nil!1549) (toList!759 lt!40284)))))

(assert (=> d!22219 d!22393))

(declare-fun d!22395 () Bool)

(declare-fun res!44341 () Bool)

(declare-fun e!56194 () Bool)

(assert (=> d!22395 (=> res!44341 e!56194)))

(assert (=> d!22395 (= res!44341 (and ((_ is Cons!1548) lt!40251) (= (_1!1126 (h!2139 lt!40251)) (_1!1126 lt!40171))))))

(assert (=> d!22395 (= (containsKey!143 lt!40251 (_1!1126 lt!40171)) e!56194)))

(declare-fun b!86204 () Bool)

(declare-fun e!56195 () Bool)

(assert (=> b!86204 (= e!56194 e!56195)))

(declare-fun res!44342 () Bool)

(assert (=> b!86204 (=> (not res!44342) (not e!56195))))

(assert (=> b!86204 (= res!44342 (and (or (not ((_ is Cons!1548) lt!40251)) (bvsle (_1!1126 (h!2139 lt!40251)) (_1!1126 lt!40171))) ((_ is Cons!1548) lt!40251) (bvslt (_1!1126 (h!2139 lt!40251)) (_1!1126 lt!40171))))))

(declare-fun b!86205 () Bool)

(assert (=> b!86205 (= e!56195 (containsKey!143 (t!5277 lt!40251) (_1!1126 lt!40171)))))

(assert (= (and d!22395 (not res!44341)) b!86204))

(assert (= (and b!86204 res!44342) b!86205))

(declare-fun m!90833 () Bool)

(assert (=> b!86205 m!90833))

(assert (=> b!85963 d!22395))

(declare-fun lt!40863 () Bool)

(declare-fun d!22397 () Bool)

(assert (=> d!22397 (= lt!40863 (select (content!88 (toList!759 lt!40546)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun e!56196 () Bool)

(assert (=> d!22397 (= lt!40863 e!56196)))

(declare-fun res!44344 () Bool)

(assert (=> d!22397 (=> (not res!44344) (not e!56196))))

(assert (=> d!22397 (= res!44344 ((_ is Cons!1548) (toList!759 lt!40546)))))

(assert (=> d!22397 (= (contains!764 (toList!759 lt!40546) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!40863)))

(declare-fun b!86206 () Bool)

(declare-fun e!56197 () Bool)

(assert (=> b!86206 (= e!56196 e!56197)))

(declare-fun res!44343 () Bool)

(assert (=> b!86206 (=> res!44343 e!56197)))

(assert (=> b!86206 (= res!44343 (= (h!2139 (toList!759 lt!40546)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun b!86207 () Bool)

(assert (=> b!86207 (= e!56197 (contains!764 (t!5277 (toList!759 lt!40546)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!22397 res!44344) b!86206))

(assert (= (and b!86206 (not res!44343)) b!86207))

(declare-fun m!90835 () Bool)

(assert (=> d!22397 m!90835))

(declare-fun m!90837 () Bool)

(assert (=> d!22397 m!90837))

(declare-fun m!90839 () Bool)

(assert (=> b!86207 m!90839))

(assert (=> b!85815 d!22397))

(declare-fun b!86208 () Bool)

(declare-fun e!56198 () Option!145)

(assert (=> b!86208 (= e!56198 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40819)))))))

(declare-fun e!56199 () Option!145)

(declare-fun b!86210 () Bool)

(assert (=> b!86210 (= e!56199 (getValueByKey!139 (t!5277 (toList!759 lt!40819)) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86209 () Bool)

(assert (=> b!86209 (= e!56198 e!56199)))

(declare-fun c!14056 () Bool)

(assert (=> b!86209 (= c!14056 (and ((_ is Cons!1548) (toList!759 lt!40819)) (not (= (_1!1126 (h!2139 (toList!759 lt!40819))) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))))

(declare-fun d!22399 () Bool)

(declare-fun c!14055 () Bool)

(assert (=> d!22399 (= c!14055 (and ((_ is Cons!1548) (toList!759 lt!40819)) (= (_1!1126 (h!2139 (toList!759 lt!40819))) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(assert (=> d!22399 (= (getValueByKey!139 (toList!759 lt!40819) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) e!56198)))

(declare-fun b!86211 () Bool)

(assert (=> b!86211 (= e!56199 None!143)))

(assert (= (and d!22399 c!14055) b!86208))

(assert (= (and d!22399 (not c!14055)) b!86209))

(assert (= (and b!86209 c!14056) b!86210))

(assert (= (and b!86209 (not c!14056)) b!86211))

(declare-fun m!90841 () Bool)

(assert (=> b!86210 m!90841))

(assert (=> b!86136 d!22399))

(declare-fun b!86212 () Bool)

(declare-fun e!56200 () Option!145)

(assert (=> b!86212 (= e!56200 (Some!144 (_2!1126 (h!2139 (t!5277 (toList!759 lt!40248))))))))

(declare-fun b!86214 () Bool)

(declare-fun e!56201 () Option!145)

(assert (=> b!86214 (= e!56201 (getValueByKey!139 (t!5277 (t!5277 (toList!759 lt!40248))) (_1!1126 lt!40172)))))

(declare-fun b!86213 () Bool)

(assert (=> b!86213 (= e!56200 e!56201)))

(declare-fun c!14058 () Bool)

(assert (=> b!86213 (= c!14058 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40248))) (not (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40248)))) (_1!1126 lt!40172)))))))

(declare-fun d!22401 () Bool)

(declare-fun c!14057 () Bool)

(assert (=> d!22401 (= c!14057 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40248))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40248)))) (_1!1126 lt!40172))))))

(assert (=> d!22401 (= (getValueByKey!139 (t!5277 (toList!759 lt!40248)) (_1!1126 lt!40172)) e!56200)))

(declare-fun b!86215 () Bool)

(assert (=> b!86215 (= e!56201 None!143)))

(assert (= (and d!22401 c!14057) b!86212))

(assert (= (and d!22401 (not c!14057)) b!86213))

(assert (= (and b!86213 c!14058) b!86214))

(assert (= (and b!86213 (not c!14058)) b!86215))

(declare-fun m!90843 () Bool)

(assert (=> b!86214 m!90843))

(assert (=> b!85847 d!22401))

(declare-fun d!22403 () Bool)

(assert (=> d!22403 (= (inRange!0 (index!3150 lt!40481) (mask!6366 newMap!16)) (and (bvsge (index!3150 lt!40481) #b00000000000000000000000000000000) (bvslt (index!3150 lt!40481) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!85704 d!22403))

(declare-fun d!22405 () Bool)

(assert (=> d!22405 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280))))

(declare-fun lt!40864 () Unit!2533)

(assert (=> d!22405 (= lt!40864 (choose!518 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280))))

(declare-fun e!56202 () Bool)

(assert (=> d!22405 e!56202))

(declare-fun res!44345 () Bool)

(assert (=> d!22405 (=> (not res!44345) (not e!56202))))

(assert (=> d!22405 (= res!44345 (isStrictlySorted!293 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)))))))

(assert (=> d!22405 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280) lt!40864)))

(declare-fun b!86216 () Bool)

(assert (=> b!86216 (= e!56202 (containsKey!143 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280))))

(assert (= (and d!22405 res!44345) b!86216))

(assert (=> d!22405 m!90033))

(assert (=> d!22405 m!90033))

(assert (=> d!22405 m!90035))

(declare-fun m!90845 () Bool)

(assert (=> d!22405 m!90845))

(declare-fun m!90847 () Bool)

(assert (=> d!22405 m!90847))

(assert (=> b!86216 m!90029))

(assert (=> b!85801 d!22405))

(declare-fun d!22407 () Bool)

(assert (=> d!22407 (= (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280)) (not (isEmpty!342 (getValueByKey!139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280))))))

(declare-fun bs!3627 () Bool)

(assert (= bs!3627 d!22407))

(assert (=> bs!3627 m!90033))

(declare-fun m!90849 () Bool)

(assert (=> bs!3627 m!90849))

(assert (=> b!85801 d!22407))

(declare-fun e!56203 () Option!145)

(declare-fun b!86217 () Bool)

(assert (=> b!86217 (= e!56203 (Some!144 (_2!1126 (h!2139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)))))))))

(declare-fun b!86219 () Bool)

(declare-fun e!56204 () Option!145)

(assert (=> b!86219 (= e!56204 (getValueByKey!139 (t!5277 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)))) lt!40280))))

(declare-fun b!86218 () Bool)

(assert (=> b!86218 (= e!56203 e!56204)))

(declare-fun c!14060 () Bool)

(assert (=> b!86218 (= c!14060 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)))) (not (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))))) lt!40280))))))

(declare-fun c!14059 () Bool)

(declare-fun d!22409 () Bool)

(assert (=> d!22409 (= c!14059 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))))) lt!40280)))))

(assert (=> d!22409 (= (getValueByKey!139 (toList!759 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283))) lt!40280) e!56203)))

(declare-fun b!86220 () Bool)

(assert (=> b!86220 (= e!56204 None!143)))

(assert (= (and d!22409 c!14059) b!86217))

(assert (= (and d!22409 (not c!14059)) b!86218))

(assert (= (and b!86218 c!14060) b!86219))

(assert (= (and b!86218 (not c!14060)) b!86220))

(declare-fun m!90851 () Bool)

(assert (=> b!86219 m!90851))

(assert (=> b!85801 d!22409))

(declare-fun d!22411 () Bool)

(assert (=> d!22411 (= (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40441)) (v!2652 (getValueByKey!139 (toList!759 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40441)))))

(assert (=> d!22253 d!22411))

(declare-fun e!56205 () Option!145)

(declare-fun b!86221 () Bool)

(assert (=> b!86221 (= e!56205 (Some!144 (_2!1126 (h!2139 (toList!759 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))))

(declare-fun e!56206 () Option!145)

(declare-fun b!86223 () Bool)

(assert (=> b!86223 (= e!56206 (getValueByKey!139 (t!5277 (toList!759 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) lt!40441))))

(declare-fun b!86222 () Bool)

(assert (=> b!86222 (= e!56205 e!56206)))

(declare-fun c!14062 () Bool)

(assert (=> b!86222 (= c!14062 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (not (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))) lt!40441))))))

(declare-fun c!14061 () Bool)

(declare-fun d!22413 () Bool)

(assert (=> d!22413 (= c!14061 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))) lt!40441)))))

(assert (=> d!22413 (= (getValueByKey!139 (toList!759 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40441) e!56205)))

(declare-fun b!86224 () Bool)

(assert (=> b!86224 (= e!56206 None!143)))

(assert (= (and d!22413 c!14061) b!86221))

(assert (= (and d!22413 (not c!14061)) b!86222))

(assert (= (and b!86222 c!14062) b!86223))

(assert (= (and b!86222 (not c!14062)) b!86224))

(declare-fun m!90853 () Bool)

(assert (=> b!86223 m!90853))

(assert (=> d!22253 d!22413))

(declare-fun d!22415 () Bool)

(assert (not d!22415))

(assert (=> b!86135 d!22415))

(declare-fun d!22417 () Bool)

(declare-fun res!44346 () Bool)

(declare-fun e!56207 () Bool)

(assert (=> d!22417 (=> res!44346 e!56207)))

(assert (=> d!22417 (= res!44346 (or ((_ is Nil!1549) lt!40476) ((_ is Nil!1549) (t!5277 lt!40476))))))

(assert (=> d!22417 (= (isStrictlySorted!293 lt!40476) e!56207)))

(declare-fun b!86225 () Bool)

(declare-fun e!56208 () Bool)

(assert (=> b!86225 (= e!56207 e!56208)))

(declare-fun res!44347 () Bool)

(assert (=> b!86225 (=> (not res!44347) (not e!56208))))

(assert (=> b!86225 (= res!44347 (bvslt (_1!1126 (h!2139 lt!40476)) (_1!1126 (h!2139 (t!5277 lt!40476)))))))

(declare-fun b!86226 () Bool)

(assert (=> b!86226 (= e!56208 (isStrictlySorted!293 (t!5277 lt!40476)))))

(assert (= (and d!22417 (not res!44346)) b!86225))

(assert (= (and b!86225 res!44347) b!86226))

(declare-fun m!90855 () Bool)

(assert (=> b!86226 m!90855))

(assert (=> d!22133 d!22417))

(declare-fun d!22419 () Bool)

(declare-fun res!44348 () Bool)

(declare-fun e!56209 () Bool)

(assert (=> d!22419 (=> res!44348 e!56209)))

(assert (=> d!22419 (= res!44348 (or ((_ is Nil!1549) (toList!759 lt!40169)) ((_ is Nil!1549) (t!5277 (toList!759 lt!40169)))))))

(assert (=> d!22419 (= (isStrictlySorted!293 (toList!759 lt!40169)) e!56209)))

(declare-fun b!86227 () Bool)

(declare-fun e!56210 () Bool)

(assert (=> b!86227 (= e!56209 e!56210)))

(declare-fun res!44349 () Bool)

(assert (=> b!86227 (=> (not res!44349) (not e!56210))))

(assert (=> b!86227 (= res!44349 (bvslt (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 (h!2139 (t!5277 (toList!759 lt!40169))))))))

(declare-fun b!86228 () Bool)

(assert (=> b!86228 (= e!56210 (isStrictlySorted!293 (t!5277 (toList!759 lt!40169))))))

(assert (= (and d!22419 (not res!44348)) b!86227))

(assert (= (and b!86227 res!44349) b!86228))

(declare-fun m!90857 () Bool)

(assert (=> b!86228 m!90857))

(assert (=> d!22133 d!22419))

(declare-fun d!22421 () Bool)

(assert (=> d!22421 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3628 () Bool)

(assert (= bs!3628 d!22421))

(assert (=> bs!3628 m!90549))

(declare-fun m!90859 () Bool)

(assert (=> bs!3628 m!90859))

(assert (=> b!86071 d!22421))

(declare-fun b!86229 () Bool)

(declare-fun e!56211 () Option!145)

(assert (=> b!86229 (= e!56211 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40284)))))))

(declare-fun b!86231 () Bool)

(declare-fun e!56212 () Option!145)

(assert (=> b!86231 (= e!56212 (getValueByKey!139 (t!5277 (toList!759 lt!40284)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86230 () Bool)

(assert (=> b!86230 (= e!56211 e!56212)))

(declare-fun c!14064 () Bool)

(assert (=> b!86230 (= c!14064 (and ((_ is Cons!1548) (toList!759 lt!40284)) (not (= (_1!1126 (h!2139 (toList!759 lt!40284))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!22423 () Bool)

(declare-fun c!14063 () Bool)

(assert (=> d!22423 (= c!14063 (and ((_ is Cons!1548) (toList!759 lt!40284)) (= (_1!1126 (h!2139 (toList!759 lt!40284))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22423 (= (getValueByKey!139 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000) e!56211)))

(declare-fun b!86232 () Bool)

(assert (=> b!86232 (= e!56212 None!143)))

(assert (= (and d!22423 c!14063) b!86229))

(assert (= (and d!22423 (not c!14063)) b!86230))

(assert (= (and b!86230 c!14064) b!86231))

(assert (= (and b!86230 (not c!14064)) b!86232))

(declare-fun m!90861 () Bool)

(assert (=> b!86231 m!90861))

(assert (=> b!86071 d!22423))

(declare-fun d!22425 () Bool)

(declare-fun res!44350 () Bool)

(declare-fun e!56213 () Bool)

(assert (=> d!22425 (=> res!44350 e!56213)))

(assert (=> d!22425 (= res!44350 (and ((_ is Cons!1548) (toList!759 lt!40284)) (= (_1!1126 (h!2139 (toList!759 lt!40284))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22425 (= (containsKey!143 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56213)))

(declare-fun b!86233 () Bool)

(declare-fun e!56214 () Bool)

(assert (=> b!86233 (= e!56213 e!56214)))

(declare-fun res!44351 () Bool)

(assert (=> b!86233 (=> (not res!44351) (not e!56214))))

(assert (=> b!86233 (= res!44351 (and (or (not ((_ is Cons!1548) (toList!759 lt!40284))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40284))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1548) (toList!759 lt!40284)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40284))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!86234 () Bool)

(assert (=> b!86234 (= e!56214 (containsKey!143 (t!5277 (toList!759 lt!40284)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22425 (not res!44350)) b!86233))

(assert (= (and b!86233 res!44351) b!86234))

(assert (=> b!86234 m!89623))

(declare-fun m!90863 () Bool)

(assert (=> b!86234 m!90863))

(assert (=> d!22335 d!22425))

(declare-fun d!22427 () Bool)

(declare-fun lt!40865 () Bool)

(assert (=> d!22427 (= lt!40865 (select (content!88 lt!40260) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun e!56215 () Bool)

(assert (=> d!22427 (= lt!40865 e!56215)))

(declare-fun res!44353 () Bool)

(assert (=> d!22427 (=> (not res!44353) (not e!56215))))

(assert (=> d!22427 (= res!44353 ((_ is Cons!1548) lt!40260))))

(assert (=> d!22427 (= (contains!764 lt!40260 (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))) lt!40865)))

(declare-fun b!86235 () Bool)

(declare-fun e!56216 () Bool)

(assert (=> b!86235 (= e!56215 e!56216)))

(declare-fun res!44352 () Bool)

(assert (=> b!86235 (=> res!44352 e!56216)))

(assert (=> b!86235 (= res!44352 (= (h!2139 lt!40260) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun b!86236 () Bool)

(assert (=> b!86236 (= e!56216 (contains!764 (t!5277 lt!40260) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(assert (= (and d!22427 res!44353) b!86235))

(assert (= (and b!86235 (not res!44352)) b!86236))

(declare-fun m!90865 () Bool)

(assert (=> d!22427 m!90865))

(declare-fun m!90867 () Bool)

(assert (=> d!22427 m!90867))

(declare-fun m!90869 () Bool)

(assert (=> b!86236 m!90869))

(assert (=> b!86101 d!22427))

(declare-fun d!22429 () Bool)

(assert (=> d!22429 (= (apply!82 lt!40493 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1216 (getValueByKey!139 (toList!759 lt!40493) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3629 () Bool)

(assert (= bs!3629 d!22429))

(declare-fun m!90871 () Bool)

(assert (=> bs!3629 m!90871))

(assert (=> bs!3629 m!90871))

(declare-fun m!90873 () Bool)

(assert (=> bs!3629 m!90873))

(assert (=> b!85739 d!22429))

(declare-fun b!86237 () Bool)

(declare-fun e!56217 () Option!145)

(assert (=> b!86237 (= e!56217 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40634)))))))

(declare-fun b!86239 () Bool)

(declare-fun e!56218 () Option!145)

(assert (=> b!86239 (= e!56218 (getValueByKey!139 (t!5277 (toList!759 lt!40634)) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86238 () Bool)

(assert (=> b!86238 (= e!56217 e!56218)))

(declare-fun c!14066 () Bool)

(assert (=> b!86238 (= c!14066 (and ((_ is Cons!1548) (toList!759 lt!40634)) (not (= (_1!1126 (h!2139 (toList!759 lt!40634))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!22431 () Bool)

(declare-fun c!14065 () Bool)

(assert (=> d!22431 (= c!14065 (and ((_ is Cons!1548) (toList!759 lt!40634)) (= (_1!1126 (h!2139 (toList!759 lt!40634))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22431 (= (getValueByKey!139 (toList!759 lt!40634) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56217)))

(declare-fun b!86240 () Bool)

(assert (=> b!86240 (= e!56218 None!143)))

(assert (= (and d!22431 c!14065) b!86237))

(assert (= (and d!22431 (not c!14065)) b!86238))

(assert (= (and b!86238 c!14066) b!86239))

(assert (= (and b!86238 (not c!14066)) b!86240))

(declare-fun m!90875 () Bool)

(assert (=> b!86239 m!90875))

(assert (=> b!85935 d!22431))

(declare-fun d!22433 () Bool)

(declare-fun res!44354 () Bool)

(declare-fun e!56219 () Bool)

(assert (=> d!22433 (=> (not res!44354) (not e!56219))))

(assert (=> d!22433 (= res!44354 (simpleValid!57 (_2!1127 lt!40759)))))

(assert (=> d!22433 (= (valid!327 (_2!1127 lt!40759)) e!56219)))

(declare-fun b!86241 () Bool)

(declare-fun res!44355 () Bool)

(assert (=> b!86241 (=> (not res!44355) (not e!56219))))

(assert (=> b!86241 (= res!44355 (= (arrayCountValidKeys!0 (_keys!4010 (_2!1127 lt!40759)) #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40759)))) (_size!427 (_2!1127 lt!40759))))))

(declare-fun b!86242 () Bool)

(declare-fun res!44356 () Bool)

(assert (=> b!86242 (=> (not res!44356) (not e!56219))))

(assert (=> b!86242 (= res!44356 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 (_2!1127 lt!40759)) (mask!6366 (_2!1127 lt!40759))))))

(declare-fun b!86243 () Bool)

(assert (=> b!86243 (= e!56219 (arrayNoDuplicates!0 (_keys!4010 (_2!1127 lt!40759)) #b00000000000000000000000000000000 Nil!1550))))

(assert (= (and d!22433 res!44354) b!86241))

(assert (= (and b!86241 res!44355) b!86242))

(assert (= (and b!86242 res!44356) b!86243))

(declare-fun m!90877 () Bool)

(assert (=> d!22433 m!90877))

(declare-fun m!90879 () Bool)

(assert (=> b!86241 m!90879))

(declare-fun m!90881 () Bool)

(assert (=> b!86242 m!90881))

(declare-fun m!90883 () Bool)

(assert (=> b!86243 m!90883))

(assert (=> b!86053 d!22433))

(declare-fun d!22435 () Bool)

(assert (=> d!22435 (= (get!1216 (getValueByKey!139 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2652 (getValueByKey!139 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22135 d!22435))

(declare-fun b!86244 () Bool)

(declare-fun e!56220 () Option!145)

(assert (=> b!86244 (= e!56220 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40443)))))))

(declare-fun b!86246 () Bool)

(declare-fun e!56221 () Option!145)

(assert (=> b!86246 (= e!56221 (getValueByKey!139 (t!5277 (toList!759 lt!40443)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86245 () Bool)

(assert (=> b!86245 (= e!56220 e!56221)))

(declare-fun c!14068 () Bool)

(assert (=> b!86245 (= c!14068 (and ((_ is Cons!1548) (toList!759 lt!40443)) (not (= (_1!1126 (h!2139 (toList!759 lt!40443))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!22437 () Bool)

(declare-fun c!14067 () Bool)

(assert (=> d!22437 (= c!14067 (and ((_ is Cons!1548) (toList!759 lt!40443)) (= (_1!1126 (h!2139 (toList!759 lt!40443))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22437 (= (getValueByKey!139 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000) e!56220)))

(declare-fun b!86247 () Bool)

(assert (=> b!86247 (= e!56221 None!143)))

(assert (= (and d!22437 c!14067) b!86244))

(assert (= (and d!22437 (not c!14067)) b!86245))

(assert (= (and b!86245 c!14068) b!86246))

(assert (= (and b!86245 (not c!14068)) b!86247))

(declare-fun m!90885 () Bool)

(assert (=> b!86246 m!90885))

(assert (=> d!22135 d!22437))

(declare-fun b!86248 () Bool)

(declare-fun e!56223 () List!1552)

(declare-fun c!14070 () Bool)

(declare-fun c!14069 () Bool)

(assert (=> b!86248 (= e!56223 (ite c!14069 (t!5277 (t!5277 (toList!759 lt!40169))) (ite c!14070 (Cons!1548 (h!2139 (t!5277 (toList!759 lt!40169))) (t!5277 (t!5277 (toList!759 lt!40169)))) Nil!1549)))))

(declare-fun b!86249 () Bool)

(declare-fun e!56225 () Bool)

(declare-fun lt!40866 () List!1552)

(assert (=> b!86249 (= e!56225 (contains!764 lt!40866 (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun b!86250 () Bool)

(declare-fun e!56224 () List!1552)

(declare-fun e!56222 () List!1552)

(assert (=> b!86250 (= e!56224 e!56222)))

(assert (=> b!86250 (= c!14069 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40169))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40169)))) (_1!1126 lt!40171))))))

(declare-fun b!86251 () Bool)

(declare-fun res!44357 () Bool)

(assert (=> b!86251 (=> (not res!44357) (not e!56225))))

(assert (=> b!86251 (= res!44357 (containsKey!143 lt!40866 (_1!1126 lt!40171)))))

(declare-fun d!22439 () Bool)

(assert (=> d!22439 e!56225))

(declare-fun res!44358 () Bool)

(assert (=> d!22439 (=> (not res!44358) (not e!56225))))

(assert (=> d!22439 (= res!44358 (isStrictlySorted!293 lt!40866))))

(assert (=> d!22439 (= lt!40866 e!56224)))

(declare-fun c!14071 () Bool)

(assert (=> d!22439 (= c!14071 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40169))) (bvslt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40169)))) (_1!1126 lt!40171))))))

(assert (=> d!22439 (isStrictlySorted!293 (t!5277 (toList!759 lt!40169)))))

(assert (=> d!22439 (= (insertStrictlySorted!60 (t!5277 (toList!759 lt!40169)) (_1!1126 lt!40171) (_2!1126 lt!40171)) lt!40866)))

(declare-fun call!8206 () List!1552)

(declare-fun bm!8203 () Bool)

(assert (=> bm!8203 (= call!8206 ($colon$colon!71 e!56223 (ite c!14071 (h!2139 (t!5277 (toList!759 lt!40169))) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171)))))))

(declare-fun c!14072 () Bool)

(assert (=> bm!8203 (= c!14072 c!14071)))

(declare-fun bm!8204 () Bool)

(declare-fun call!8208 () List!1552)

(declare-fun call!8207 () List!1552)

(assert (=> bm!8204 (= call!8208 call!8207)))

(declare-fun b!86252 () Bool)

(assert (=> b!86252 (= e!56224 call!8206)))

(declare-fun b!86253 () Bool)

(declare-fun e!56226 () List!1552)

(assert (=> b!86253 (= e!56226 call!8208)))

(declare-fun b!86254 () Bool)

(assert (=> b!86254 (= e!56222 call!8207)))

(declare-fun b!86255 () Bool)

(assert (=> b!86255 (= e!56223 (insertStrictlySorted!60 (t!5277 (t!5277 (toList!759 lt!40169))) (_1!1126 lt!40171) (_2!1126 lt!40171)))))

(declare-fun b!86256 () Bool)

(assert (=> b!86256 (= e!56226 call!8208)))

(declare-fun b!86257 () Bool)

(assert (=> b!86257 (= c!14070 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40169))) (bvsgt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40169)))) (_1!1126 lt!40171))))))

(assert (=> b!86257 (= e!56222 e!56226)))

(declare-fun bm!8205 () Bool)

(assert (=> bm!8205 (= call!8207 call!8206)))

(assert (= (and d!22439 c!14071) b!86252))

(assert (= (and d!22439 (not c!14071)) b!86250))

(assert (= (and b!86250 c!14069) b!86254))

(assert (= (and b!86250 (not c!14069)) b!86257))

(assert (= (and b!86257 c!14070) b!86256))

(assert (= (and b!86257 (not c!14070)) b!86253))

(assert (= (or b!86256 b!86253) bm!8204))

(assert (= (or b!86254 bm!8204) bm!8205))

(assert (= (or b!86252 bm!8205) bm!8203))

(assert (= (and bm!8203 c!14072) b!86255))

(assert (= (and bm!8203 (not c!14072)) b!86248))

(assert (= (and d!22439 res!44358) b!86251))

(assert (= (and b!86251 res!44357) b!86249))

(declare-fun m!90887 () Bool)

(assert (=> b!86251 m!90887))

(declare-fun m!90889 () Bool)

(assert (=> b!86255 m!90889))

(declare-fun m!90891 () Bool)

(assert (=> d!22439 m!90891))

(assert (=> d!22439 m!90857))

(declare-fun m!90893 () Bool)

(assert (=> b!86249 m!90893))

(declare-fun m!90895 () Bool)

(assert (=> bm!8203 m!90895))

(assert (=> b!85695 d!22439))

(declare-fun d!22441 () Bool)

(assert (=> d!22441 (= (size!2166 newMap!16) (bvadd (_size!427 newMap!16) (bvsdiv (bvadd (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!85954 d!22441))

(declare-fun d!22443 () Bool)

(declare-fun res!44359 () Bool)

(declare-fun e!56227 () Bool)

(assert (=> d!22443 (=> res!44359 e!56227)))

(assert (=> d!22443 (= res!44359 (and ((_ is Cons!1548) (toList!759 lt!40256)) (= (_1!1126 (h!2139 (toList!759 lt!40256))) (_1!1126 lt!40172))))))

(assert (=> d!22443 (= (containsKey!143 (toList!759 lt!40256) (_1!1126 lt!40172)) e!56227)))

(declare-fun b!86258 () Bool)

(declare-fun e!56228 () Bool)

(assert (=> b!86258 (= e!56227 e!56228)))

(declare-fun res!44360 () Bool)

(assert (=> b!86258 (=> (not res!44360) (not e!56228))))

(assert (=> b!86258 (= res!44360 (and (or (not ((_ is Cons!1548) (toList!759 lt!40256))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40256))) (_1!1126 lt!40172))) ((_ is Cons!1548) (toList!759 lt!40256)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40256))) (_1!1126 lt!40172))))))

(declare-fun b!86259 () Bool)

(assert (=> b!86259 (= e!56228 (containsKey!143 (t!5277 (toList!759 lt!40256)) (_1!1126 lt!40172)))))

(assert (= (and d!22443 (not res!44359)) b!86258))

(assert (= (and b!86258 res!44360) b!86259))

(declare-fun m!90897 () Bool)

(assert (=> b!86259 m!90897))

(assert (=> d!22311 d!22443))

(declare-fun d!22445 () Bool)

(assert (=> d!22445 (= (get!1216 (getValueByKey!139 (toList!759 lt!40452) lt!40454)) (v!2652 (getValueByKey!139 (toList!759 lt!40452) lt!40454)))))

(assert (=> d!22237 d!22445))

(declare-fun b!86260 () Bool)

(declare-fun e!56229 () Option!145)

(assert (=> b!86260 (= e!56229 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40452)))))))

(declare-fun b!86262 () Bool)

(declare-fun e!56230 () Option!145)

(assert (=> b!86262 (= e!56230 (getValueByKey!139 (t!5277 (toList!759 lt!40452)) lt!40454))))

(declare-fun b!86261 () Bool)

(assert (=> b!86261 (= e!56229 e!56230)))

(declare-fun c!14074 () Bool)

(assert (=> b!86261 (= c!14074 (and ((_ is Cons!1548) (toList!759 lt!40452)) (not (= (_1!1126 (h!2139 (toList!759 lt!40452))) lt!40454))))))

(declare-fun d!22447 () Bool)

(declare-fun c!14073 () Bool)

(assert (=> d!22447 (= c!14073 (and ((_ is Cons!1548) (toList!759 lt!40452)) (= (_1!1126 (h!2139 (toList!759 lt!40452))) lt!40454)))))

(assert (=> d!22447 (= (getValueByKey!139 (toList!759 lt!40452) lt!40454) e!56229)))

(declare-fun b!86263 () Bool)

(assert (=> b!86263 (= e!56230 None!143)))

(assert (= (and d!22447 c!14073) b!86260))

(assert (= (and d!22447 (not c!14073)) b!86261))

(assert (= (and b!86261 c!14074) b!86262))

(assert (= (and b!86261 (not c!14074)) b!86263))

(declare-fun m!90899 () Bool)

(assert (=> b!86262 m!90899))

(assert (=> d!22237 d!22447))

(declare-fun d!22449 () Bool)

(assert (=> d!22449 (= ($colon$colon!71 e!56109 (ite c!14032 (h!2139 (toList!759 lt!40173)) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172)))) (Cons!1548 (ite c!14032 (h!2139 (toList!759 lt!40173)) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))) e!56109))))

(assert (=> bm!8189 d!22449))

(declare-fun d!22451 () Bool)

(declare-fun e!56232 () Bool)

(assert (=> d!22451 e!56232))

(declare-fun res!44361 () Bool)

(assert (=> d!22451 (=> res!44361 e!56232)))

(declare-fun lt!40869 () Bool)

(assert (=> d!22451 (= res!44361 (not lt!40869))))

(declare-fun lt!40870 () Bool)

(assert (=> d!22451 (= lt!40869 lt!40870)))

(declare-fun lt!40868 () Unit!2533)

(declare-fun e!56231 () Unit!2533)

(assert (=> d!22451 (= lt!40868 e!56231)))

(declare-fun c!14075 () Bool)

(assert (=> d!22451 (= c!14075 lt!40870)))

(assert (=> d!22451 (= lt!40870 (containsKey!143 (toList!759 lt!40819) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22451 (= (contains!762 lt!40819 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) lt!40869)))

(declare-fun b!86264 () Bool)

(declare-fun lt!40867 () Unit!2533)

(assert (=> b!86264 (= e!56231 lt!40867)))

(assert (=> b!86264 (= lt!40867 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40819) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> b!86264 (isDefined!93 (getValueByKey!139 (toList!759 lt!40819) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86265 () Bool)

(declare-fun Unit!2569 () Unit!2533)

(assert (=> b!86265 (= e!56231 Unit!2569)))

(declare-fun b!86266 () Bool)

(assert (=> b!86266 (= e!56232 (isDefined!93 (getValueByKey!139 (toList!759 lt!40819) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(assert (= (and d!22451 c!14075) b!86264))

(assert (= (and d!22451 (not c!14075)) b!86265))

(assert (= (and d!22451 (not res!44361)) b!86266))

(declare-fun m!90901 () Bool)

(assert (=> d!22451 m!90901))

(declare-fun m!90903 () Bool)

(assert (=> b!86264 m!90903))

(assert (=> b!86264 m!90679))

(assert (=> b!86264 m!90679))

(declare-fun m!90905 () Bool)

(assert (=> b!86264 m!90905))

(assert (=> b!86266 m!90679))

(assert (=> b!86266 m!90679))

(assert (=> b!86266 m!90905))

(assert (=> d!22345 d!22451))

(declare-fun b!86267 () Bool)

(declare-fun e!56233 () Option!145)

(assert (=> b!86267 (= e!56233 (Some!144 (_2!1126 (h!2139 lt!40818))))))

(declare-fun e!56234 () Option!145)

(declare-fun b!86269 () Bool)

(assert (=> b!86269 (= e!56234 (getValueByKey!139 (t!5277 lt!40818) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86268 () Bool)

(assert (=> b!86268 (= e!56233 e!56234)))

(declare-fun c!14077 () Bool)

(assert (=> b!86268 (= c!14077 (and ((_ is Cons!1548) lt!40818) (not (= (_1!1126 (h!2139 lt!40818)) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))))

(declare-fun c!14076 () Bool)

(declare-fun d!22453 () Bool)

(assert (=> d!22453 (= c!14076 (and ((_ is Cons!1548) lt!40818) (= (_1!1126 (h!2139 lt!40818)) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(assert (=> d!22453 (= (getValueByKey!139 lt!40818 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) e!56233)))

(declare-fun b!86270 () Bool)

(assert (=> b!86270 (= e!56234 None!143)))

(assert (= (and d!22453 c!14076) b!86267))

(assert (= (and d!22453 (not c!14076)) b!86268))

(assert (= (and b!86268 c!14077) b!86269))

(assert (= (and b!86268 (not c!14077)) b!86270))

(declare-fun m!90907 () Bool)

(assert (=> b!86269 m!90907))

(assert (=> d!22345 d!22453))

(declare-fun d!22455 () Bool)

(assert (=> d!22455 (= (getValueByKey!139 lt!40818 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (Some!144 (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun lt!40871 () Unit!2533)

(assert (=> d!22455 (= lt!40871 (choose!508 lt!40818 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun e!56235 () Bool)

(assert (=> d!22455 e!56235))

(declare-fun res!44362 () Bool)

(assert (=> d!22455 (=> (not res!44362) (not e!56235))))

(assert (=> d!22455 (= res!44362 (isStrictlySorted!293 lt!40818))))

(assert (=> d!22455 (= (lemmaContainsTupThenGetReturnValue!58 lt!40818 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) lt!40871)))

(declare-fun b!86271 () Bool)

(declare-fun res!44363 () Bool)

(assert (=> b!86271 (=> (not res!44363) (not e!56235))))

(assert (=> b!86271 (= res!44363 (containsKey!143 lt!40818 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86272 () Bool)

(assert (=> b!86272 (= e!56235 (contains!764 lt!40818 (tuple2!2233 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(assert (= (and d!22455 res!44362) b!86271))

(assert (= (and b!86271 res!44363) b!86272))

(assert (=> d!22455 m!90673))

(declare-fun m!90909 () Bool)

(assert (=> d!22455 m!90909))

(declare-fun m!90911 () Bool)

(assert (=> d!22455 m!90911))

(declare-fun m!90913 () Bool)

(assert (=> b!86271 m!90913))

(declare-fun m!90915 () Bool)

(assert (=> b!86272 m!90915))

(assert (=> d!22345 d!22455))

(declare-fun e!56237 () List!1552)

(declare-fun c!14078 () Bool)

(declare-fun b!86273 () Bool)

(declare-fun c!14079 () Bool)

(assert (=> b!86273 (= e!56237 (ite c!14078 (t!5277 (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128)))) (ite c!14079 (Cons!1548 (h!2139 (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128)))) (t!5277 (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128))))) Nil!1549)))))

(declare-fun b!86274 () Bool)

(declare-fun lt!40872 () List!1552)

(declare-fun e!56239 () Bool)

(assert (=> b!86274 (= e!56239 (contains!764 lt!40872 (tuple2!2233 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun b!86275 () Bool)

(declare-fun e!56238 () List!1552)

(declare-fun e!56236 () List!1552)

(assert (=> b!86275 (= e!56238 e!56236)))

(assert (=> b!86275 (= c!14078 (and ((_ is Cons!1548) (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128)))) (= (_1!1126 (h!2139 (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128))))) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun b!86276 () Bool)

(declare-fun res!44364 () Bool)

(assert (=> b!86276 (=> (not res!44364) (not e!56239))))

(assert (=> b!86276 (= res!44364 (containsKey!143 lt!40872 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun d!22457 () Bool)

(assert (=> d!22457 e!56239))

(declare-fun res!44365 () Bool)

(assert (=> d!22457 (=> (not res!44365) (not e!56239))))

(assert (=> d!22457 (= res!44365 (isStrictlySorted!293 lt!40872))))

(assert (=> d!22457 (= lt!40872 e!56238)))

(declare-fun c!14080 () Bool)

(assert (=> d!22457 (= c!14080 (and ((_ is Cons!1548) (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128)))) (bvslt (_1!1126 (h!2139 (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128))))) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(assert (=> d!22457 (isStrictlySorted!293 (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128))))))

(assert (=> d!22457 (= (insertStrictlySorted!60 (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128))) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) lt!40872)))

(declare-fun call!8209 () List!1552)

(declare-fun bm!8206 () Bool)

(assert (=> bm!8206 (= call!8209 ($colon$colon!71 e!56237 (ite c!14080 (h!2139 (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128)))) (tuple2!2233 (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))))

(declare-fun c!14081 () Bool)

(assert (=> bm!8206 (= c!14081 c!14080)))

(declare-fun bm!8207 () Bool)

(declare-fun call!8211 () List!1552)

(declare-fun call!8210 () List!1552)

(assert (=> bm!8207 (= call!8211 call!8210)))

(declare-fun b!86277 () Bool)

(assert (=> b!86277 (= e!56238 call!8209)))

(declare-fun b!86278 () Bool)

(declare-fun e!56240 () List!1552)

(assert (=> b!86278 (= e!56240 call!8211)))

(declare-fun b!86279 () Bool)

(assert (=> b!86279 (= e!56236 call!8210)))

(declare-fun b!86280 () Bool)

(assert (=> b!86280 (= e!56237 (insertStrictlySorted!60 (t!5277 (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128)))) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_2!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86281 () Bool)

(assert (=> b!86281 (= e!56240 call!8211)))

(declare-fun b!86282 () Bool)

(assert (=> b!86282 (= c!14079 (and ((_ is Cons!1548) (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128)))) (bvsgt (_1!1126 (h!2139 (toList!759 (ite c!13896 call!8127 (ite c!13894 call!8130 call!8128))))) (_1!1126 (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(assert (=> b!86282 (= e!56236 e!56240)))

(declare-fun bm!8208 () Bool)

(assert (=> bm!8208 (= call!8210 call!8209)))

(assert (= (and d!22457 c!14080) b!86277))

(assert (= (and d!22457 (not c!14080)) b!86275))

(assert (= (and b!86275 c!14078) b!86279))

(assert (= (and b!86275 (not c!14078)) b!86282))

(assert (= (and b!86282 c!14079) b!86281))

(assert (= (and b!86282 (not c!14079)) b!86278))

(assert (= (or b!86281 b!86278) bm!8207))

(assert (= (or b!86279 bm!8207) bm!8208))

(assert (= (or b!86277 bm!8208) bm!8206))

(assert (= (and bm!8206 c!14081) b!86280))

(assert (= (and bm!8206 (not c!14081)) b!86273))

(assert (= (and d!22457 res!44365) b!86276))

(assert (= (and b!86276 res!44364) b!86274))

(declare-fun m!90917 () Bool)

(assert (=> b!86276 m!90917))

(declare-fun m!90919 () Bool)

(assert (=> b!86280 m!90919))

(declare-fun m!90921 () Bool)

(assert (=> d!22457 m!90921))

(declare-fun m!90923 () Bool)

(assert (=> d!22457 m!90923))

(declare-fun m!90925 () Bool)

(assert (=> b!86274 m!90925))

(declare-fun m!90927 () Bool)

(assert (=> bm!8206 m!90927))

(assert (=> d!22345 d!22457))

(assert (=> bm!8159 d!22227))

(declare-fun d!22459 () Bool)

(assert (=> d!22459 (= (validMask!0 (mask!6366 newMap!16)) (and (or (= (mask!6366 newMap!16) #b00000000000000000000000000000111) (= (mask!6366 newMap!16) #b00000000000000000000000000001111) (= (mask!6366 newMap!16) #b00000000000000000000000000011111) (= (mask!6366 newMap!16) #b00000000000000000000000000111111) (= (mask!6366 newMap!16) #b00000000000000000000000001111111) (= (mask!6366 newMap!16) #b00000000000000000000000011111111) (= (mask!6366 newMap!16) #b00000000000000000000000111111111) (= (mask!6366 newMap!16) #b00000000000000000000001111111111) (= (mask!6366 newMap!16) #b00000000000000000000011111111111) (= (mask!6366 newMap!16) #b00000000000000000000111111111111) (= (mask!6366 newMap!16) #b00000000000000000001111111111111) (= (mask!6366 newMap!16) #b00000000000000000011111111111111) (= (mask!6366 newMap!16) #b00000000000000000111111111111111) (= (mask!6366 newMap!16) #b00000000000000001111111111111111) (= (mask!6366 newMap!16) #b00000000000000011111111111111111) (= (mask!6366 newMap!16) #b00000000000000111111111111111111) (= (mask!6366 newMap!16) #b00000000000001111111111111111111) (= (mask!6366 newMap!16) #b00000000000011111111111111111111) (= (mask!6366 newMap!16) #b00000000000111111111111111111111) (= (mask!6366 newMap!16) #b00000000001111111111111111111111) (= (mask!6366 newMap!16) #b00000000011111111111111111111111) (= (mask!6366 newMap!16) #b00000000111111111111111111111111) (= (mask!6366 newMap!16) #b00000001111111111111111111111111) (= (mask!6366 newMap!16) #b00000011111111111111111111111111) (= (mask!6366 newMap!16) #b00000111111111111111111111111111) (= (mask!6366 newMap!16) #b00001111111111111111111111111111) (= (mask!6366 newMap!16) #b00011111111111111111111111111111) (= (mask!6366 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6366 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!22151 d!22459))

(declare-fun d!22461 () Bool)

(declare-fun e!56242 () Bool)

(assert (=> d!22461 e!56242))

(declare-fun res!44366 () Bool)

(assert (=> d!22461 (=> res!44366 e!56242)))

(declare-fun lt!40875 () Bool)

(assert (=> d!22461 (= res!44366 (not lt!40875))))

(declare-fun lt!40876 () Bool)

(assert (=> d!22461 (= lt!40875 lt!40876)))

(declare-fun lt!40874 () Unit!2533)

(declare-fun e!56241 () Unit!2533)

(assert (=> d!22461 (= lt!40874 e!56241)))

(declare-fun c!14082 () Bool)

(assert (=> d!22461 (= c!14082 lt!40876)))

(assert (=> d!22461 (= lt!40876 (containsKey!143 (toList!759 lt!40568) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22461 (= (contains!762 lt!40568 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40875)))

(declare-fun b!86283 () Bool)

(declare-fun lt!40873 () Unit!2533)

(assert (=> b!86283 (= e!56241 lt!40873)))

(assert (=> b!86283 (= lt!40873 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40568) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> b!86283 (isDefined!93 (getValueByKey!139 (toList!759 lt!40568) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86284 () Bool)

(declare-fun Unit!2570 () Unit!2533)

(assert (=> b!86284 (= e!56241 Unit!2570)))

(declare-fun b!86285 () Bool)

(assert (=> b!86285 (= e!56242 (isDefined!93 (getValueByKey!139 (toList!759 lt!40568) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22461 c!14082) b!86283))

(assert (= (and d!22461 (not c!14082)) b!86284))

(assert (= (and d!22461 (not res!44366)) b!86285))

(declare-fun m!90929 () Bool)

(assert (=> d!22461 m!90929))

(declare-fun m!90931 () Bool)

(assert (=> b!86283 m!90931))

(assert (=> b!86283 m!90143))

(assert (=> b!86283 m!90143))

(declare-fun m!90933 () Bool)

(assert (=> b!86283 m!90933))

(assert (=> b!86285 m!90143))

(assert (=> b!86285 m!90143))

(assert (=> b!86285 m!90933))

(assert (=> d!22211 d!22461))

(declare-fun b!86286 () Bool)

(declare-fun e!56243 () Option!145)

(assert (=> b!86286 (= e!56243 (Some!144 (_2!1126 (h!2139 lt!40567))))))

(declare-fun b!86288 () Bool)

(declare-fun e!56244 () Option!145)

(assert (=> b!86288 (= e!56244 (getValueByKey!139 (t!5277 lt!40567) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86287 () Bool)

(assert (=> b!86287 (= e!56243 e!56244)))

(declare-fun c!14084 () Bool)

(assert (=> b!86287 (= c!14084 (and ((_ is Cons!1548) lt!40567) (not (= (_1!1126 (h!2139 lt!40567)) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!22463 () Bool)

(declare-fun c!14083 () Bool)

(assert (=> d!22463 (= c!14083 (and ((_ is Cons!1548) lt!40567) (= (_1!1126 (h!2139 lt!40567)) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22463 (= (getValueByKey!139 lt!40567 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56243)))

(declare-fun b!86289 () Bool)

(assert (=> b!86289 (= e!56244 None!143)))

(assert (= (and d!22463 c!14083) b!86286))

(assert (= (and d!22463 (not c!14083)) b!86287))

(assert (= (and b!86287 c!14084) b!86288))

(assert (= (and b!86287 (not c!14084)) b!86289))

(declare-fun m!90935 () Bool)

(assert (=> b!86288 m!90935))

(assert (=> d!22211 d!22463))

(declare-fun d!22465 () Bool)

(assert (=> d!22465 (= (getValueByKey!139 lt!40567 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!40877 () Unit!2533)

(assert (=> d!22465 (= lt!40877 (choose!508 lt!40567 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun e!56245 () Bool)

(assert (=> d!22465 e!56245))

(declare-fun res!44367 () Bool)

(assert (=> d!22465 (=> (not res!44367) (not e!56245))))

(assert (=> d!22465 (= res!44367 (isStrictlySorted!293 lt!40567))))

(assert (=> d!22465 (= (lemmaContainsTupThenGetReturnValue!58 lt!40567 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40877)))

(declare-fun b!86290 () Bool)

(declare-fun res!44368 () Bool)

(assert (=> b!86290 (=> (not res!44368) (not e!56245))))

(assert (=> b!86290 (= res!44368 (containsKey!143 lt!40567 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86291 () Bool)

(assert (=> b!86291 (= e!56245 (contains!764 lt!40567 (tuple2!2233 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22465 res!44367) b!86290))

(assert (= (and b!86290 res!44368) b!86291))

(assert (=> d!22465 m!90137))

(declare-fun m!90937 () Bool)

(assert (=> d!22465 m!90937))

(declare-fun m!90939 () Bool)

(assert (=> d!22465 m!90939))

(declare-fun m!90941 () Bool)

(assert (=> b!86290 m!90941))

(declare-fun m!90943 () Bool)

(assert (=> b!86291 m!90943))

(assert (=> d!22211 d!22465))

(declare-fun e!56247 () List!1552)

(declare-fun c!14085 () Bool)

(declare-fun c!14086 () Bool)

(declare-fun b!86292 () Bool)

(assert (=> b!86292 (= e!56247 (ite c!14085 (t!5277 (toList!759 call!8124)) (ite c!14086 (Cons!1548 (h!2139 (toList!759 call!8124)) (t!5277 (toList!759 call!8124))) Nil!1549)))))

(declare-fun b!86293 () Bool)

(declare-fun e!56249 () Bool)

(declare-fun lt!40878 () List!1552)

(assert (=> b!86293 (= e!56249 (contains!764 lt!40878 (tuple2!2233 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86294 () Bool)

(declare-fun e!56248 () List!1552)

(declare-fun e!56246 () List!1552)

(assert (=> b!86294 (= e!56248 e!56246)))

(assert (=> b!86294 (= c!14085 (and ((_ is Cons!1548) (toList!759 call!8124)) (= (_1!1126 (h!2139 (toList!759 call!8124))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86295 () Bool)

(declare-fun res!44369 () Bool)

(assert (=> b!86295 (=> (not res!44369) (not e!56249))))

(assert (=> b!86295 (= res!44369 (containsKey!143 lt!40878 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun d!22467 () Bool)

(assert (=> d!22467 e!56249))

(declare-fun res!44370 () Bool)

(assert (=> d!22467 (=> (not res!44370) (not e!56249))))

(assert (=> d!22467 (= res!44370 (isStrictlySorted!293 lt!40878))))

(assert (=> d!22467 (= lt!40878 e!56248)))

(declare-fun c!14087 () Bool)

(assert (=> d!22467 (= c!14087 (and ((_ is Cons!1548) (toList!759 call!8124)) (bvslt (_1!1126 (h!2139 (toList!759 call!8124))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22467 (isStrictlySorted!293 (toList!759 call!8124))))

(assert (=> d!22467 (= (insertStrictlySorted!60 (toList!759 call!8124) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40878)))

(declare-fun call!8212 () List!1552)

(declare-fun bm!8209 () Bool)

(assert (=> bm!8209 (= call!8212 ($colon$colon!71 e!56247 (ite c!14087 (h!2139 (toList!759 call!8124)) (tuple2!2233 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14088 () Bool)

(assert (=> bm!8209 (= c!14088 c!14087)))

(declare-fun bm!8210 () Bool)

(declare-fun call!8214 () List!1552)

(declare-fun call!8213 () List!1552)

(assert (=> bm!8210 (= call!8214 call!8213)))

(declare-fun b!86296 () Bool)

(assert (=> b!86296 (= e!56248 call!8212)))

(declare-fun b!86297 () Bool)

(declare-fun e!56250 () List!1552)

(assert (=> b!86297 (= e!56250 call!8214)))

(declare-fun b!86298 () Bool)

(assert (=> b!86298 (= e!56246 call!8213)))

(declare-fun b!86299 () Bool)

(assert (=> b!86299 (= e!56247 (insertStrictlySorted!60 (t!5277 (toList!759 call!8124)) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86300 () Bool)

(assert (=> b!86300 (= e!56250 call!8214)))

(declare-fun b!86301 () Bool)

(assert (=> b!86301 (= c!14086 (and ((_ is Cons!1548) (toList!759 call!8124)) (bvsgt (_1!1126 (h!2139 (toList!759 call!8124))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> b!86301 (= e!56246 e!56250)))

(declare-fun bm!8211 () Bool)

(assert (=> bm!8211 (= call!8213 call!8212)))

(assert (= (and d!22467 c!14087) b!86296))

(assert (= (and d!22467 (not c!14087)) b!86294))

(assert (= (and b!86294 c!14085) b!86298))

(assert (= (and b!86294 (not c!14085)) b!86301))

(assert (= (and b!86301 c!14086) b!86300))

(assert (= (and b!86301 (not c!14086)) b!86297))

(assert (= (or b!86300 b!86297) bm!8210))

(assert (= (or b!86298 bm!8210) bm!8211))

(assert (= (or b!86296 bm!8211) bm!8209))

(assert (= (and bm!8209 c!14088) b!86299))

(assert (= (and bm!8209 (not c!14088)) b!86292))

(assert (= (and d!22467 res!44370) b!86295))

(assert (= (and b!86295 res!44369) b!86293))

(declare-fun m!90945 () Bool)

(assert (=> b!86295 m!90945))

(declare-fun m!90947 () Bool)

(assert (=> b!86299 m!90947))

(declare-fun m!90949 () Bool)

(assert (=> d!22467 m!90949))

(declare-fun m!90951 () Bool)

(assert (=> d!22467 m!90951))

(declare-fun m!90953 () Bool)

(assert (=> b!86293 m!90953))

(declare-fun m!90955 () Bool)

(assert (=> bm!8209 m!90955))

(assert (=> d!22211 d!22467))

(assert (=> b!86059 d!22231))

(declare-fun d!22469 () Bool)

(declare-fun lt!40879 () Bool)

(assert (=> d!22469 (= lt!40879 (select (content!89 (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!56252 () Bool)

(assert (=> d!22469 (= lt!40879 e!56252)))

(declare-fun res!44372 () Bool)

(assert (=> d!22469 (=> (not res!44372) (not e!56252))))

(assert (=> d!22469 (= res!44372 ((_ is Cons!1549) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)))))

(assert (=> d!22469 (= (contains!765 (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!40879)))

(declare-fun b!86302 () Bool)

(declare-fun e!56251 () Bool)

(assert (=> b!86302 (= e!56252 e!56251)))

(declare-fun res!44371 () Bool)

(assert (=> b!86302 (=> res!44371 e!56251)))

(assert (=> b!86302 (= res!44371 (= (h!2140 (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!86303 () Bool)

(assert (=> b!86303 (= e!56251 (contains!765 (t!5278 (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!22469 res!44372) b!86302))

(assert (= (and b!86302 (not res!44371)) b!86303))

(declare-fun m!90957 () Bool)

(assert (=> d!22469 m!90957))

(assert (=> d!22469 m!90769))

(declare-fun m!90959 () Bool)

(assert (=> d!22469 m!90959))

(assert (=> b!86303 m!90769))

(declare-fun m!90961 () Bool)

(assert (=> b!86303 m!90961))

(assert (=> b!86177 d!22469))

(declare-fun d!22471 () Bool)

(declare-fun res!44373 () Bool)

(declare-fun e!56253 () Bool)

(assert (=> d!22471 (=> res!44373 e!56253)))

(assert (=> d!22471 (= res!44373 (or ((_ is Nil!1549) lt!40488) ((_ is Nil!1549) (t!5277 lt!40488))))))

(assert (=> d!22471 (= (isStrictlySorted!293 lt!40488) e!56253)))

(declare-fun b!86304 () Bool)

(declare-fun e!56254 () Bool)

(assert (=> b!86304 (= e!56253 e!56254)))

(declare-fun res!44374 () Bool)

(assert (=> b!86304 (=> (not res!44374) (not e!56254))))

(assert (=> b!86304 (= res!44374 (bvslt (_1!1126 (h!2139 lt!40488)) (_1!1126 (h!2139 (t!5277 lt!40488)))))))

(declare-fun b!86305 () Bool)

(assert (=> b!86305 (= e!56254 (isStrictlySorted!293 (t!5277 lt!40488)))))

(assert (= (and d!22471 (not res!44373)) b!86304))

(assert (= (and b!86304 res!44374) b!86305))

(declare-fun m!90963 () Bool)

(assert (=> b!86305 m!90963))

(assert (=> d!22149 d!22471))

(declare-fun d!22473 () Bool)

(declare-fun res!44375 () Bool)

(declare-fun e!56255 () Bool)

(assert (=> d!22473 (=> res!44375 e!56255)))

(assert (=> d!22473 (= res!44375 (or ((_ is Nil!1549) (toList!759 lt!40170)) ((_ is Nil!1549) (t!5277 (toList!759 lt!40170)))))))

(assert (=> d!22473 (= (isStrictlySorted!293 (toList!759 lt!40170)) e!56255)))

(declare-fun b!86306 () Bool)

(declare-fun e!56256 () Bool)

(assert (=> b!86306 (= e!56255 e!56256)))

(declare-fun res!44376 () Bool)

(assert (=> b!86306 (=> (not res!44376) (not e!56256))))

(assert (=> b!86306 (= res!44376 (bvslt (_1!1126 (h!2139 (toList!759 lt!40170))) (_1!1126 (h!2139 (t!5277 (toList!759 lt!40170))))))))

(declare-fun b!86307 () Bool)

(assert (=> b!86307 (= e!56256 (isStrictlySorted!293 (t!5277 (toList!759 lt!40170))))))

(assert (= (and d!22473 (not res!44375)) b!86306))

(assert (= (and b!86306 res!44376) b!86307))

(declare-fun m!90965 () Bool)

(assert (=> b!86307 m!90965))

(assert (=> d!22149 d!22473))

(declare-fun b!86308 () Bool)

(declare-fun e!56257 () Option!145)

(assert (=> b!86308 (= e!56257 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40613)))))))

(declare-fun e!56258 () Option!145)

(declare-fun b!86310 () Bool)

(assert (=> b!86310 (= e!56258 (getValueByKey!139 (t!5277 (toList!759 lt!40613)) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86309 () Bool)

(assert (=> b!86309 (= e!56257 e!56258)))

(declare-fun c!14090 () Bool)

(assert (=> b!86309 (= c!14090 (and ((_ is Cons!1548) (toList!759 lt!40613)) (not (= (_1!1126 (h!2139 (toList!759 lt!40613))) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14089 () Bool)

(declare-fun d!22475 () Bool)

(assert (=> d!22475 (= c!14089 (and ((_ is Cons!1548) (toList!759 lt!40613)) (= (_1!1126 (h!2139 (toList!759 lt!40613))) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22475 (= (getValueByKey!139 (toList!759 lt!40613) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56257)))

(declare-fun b!86311 () Bool)

(assert (=> b!86311 (= e!56258 None!143)))

(assert (= (and d!22475 c!14089) b!86308))

(assert (= (and d!22475 (not c!14089)) b!86309))

(assert (= (and b!86309 c!14090) b!86310))

(assert (= (and b!86309 (not c!14090)) b!86311))

(declare-fun m!90967 () Bool)

(assert (=> b!86310 m!90967))

(assert (=> b!85911 d!22475))

(declare-fun d!22477 () Bool)

(assert (=> d!22477 (= (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85744 d!22477))

(assert (=> d!22267 d!22269))

(assert (=> d!22267 d!22275))

(assert (=> d!22267 d!22273))

(assert (=> d!22267 d!22271))

(declare-fun b!86330 () Bool)

(declare-fun lt!40884 () SeekEntryResult!253)

(assert (=> b!86330 (and (bvsge (index!3151 lt!40884) #b00000000000000000000000000000000) (bvslt (index!3151 lt!40884) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun res!44385 () Bool)

(assert (=> b!86330 (= res!44385 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3151 lt!40884)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun e!56273 () Bool)

(assert (=> b!86330 (=> res!44385 e!56273)))

(declare-fun e!56270 () Bool)

(assert (=> b!86330 (= e!56270 e!56273)))

(declare-fun b!86331 () Bool)

(declare-fun e!56269 () SeekEntryResult!253)

(assert (=> b!86331 (= e!56269 (Intermediate!253 true (toIndex!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (mask!6366 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!86332 () Bool)

(declare-fun e!56272 () Bool)

(assert (=> b!86332 (= e!56272 (bvsge (x!12006 lt!40884) #b01111111111111111111111111111110))))

(declare-fun b!86333 () Bool)

(declare-fun e!56271 () SeekEntryResult!253)

(assert (=> b!86333 (= e!56271 (Intermediate!253 false (toIndex!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (mask!6366 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!86334 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!86334 (= e!56271 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (mask!6366 newMap!16)) #b00000000000000000000000000000000 (mask!6366 newMap!16)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!86335 () Bool)

(assert (=> b!86335 (and (bvsge (index!3151 lt!40884) #b00000000000000000000000000000000) (bvslt (index!3151 lt!40884) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun res!44384 () Bool)

(assert (=> b!86335 (= res!44384 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3151 lt!40884)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86335 (=> res!44384 e!56273)))

(declare-fun b!86336 () Bool)

(assert (=> b!86336 (= e!56272 e!56270)))

(declare-fun res!44383 () Bool)

(assert (=> b!86336 (= res!44383 (and ((_ is Intermediate!253) lt!40884) (not (undefined!1065 lt!40884)) (bvslt (x!12006 lt!40884) #b01111111111111111111111111111110) (bvsge (x!12006 lt!40884) #b00000000000000000000000000000000) (bvsge (x!12006 lt!40884) #b00000000000000000000000000000000)))))

(assert (=> b!86336 (=> (not res!44383) (not e!56270))))

(declare-fun d!22479 () Bool)

(assert (=> d!22479 e!56272))

(declare-fun c!14099 () Bool)

(assert (=> d!22479 (= c!14099 (and ((_ is Intermediate!253) lt!40884) (undefined!1065 lt!40884)))))

(assert (=> d!22479 (= lt!40884 e!56269)))

(declare-fun c!14098 () Bool)

(assert (=> d!22479 (= c!14098 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!40885 () (_ BitVec 64))

(assert (=> d!22479 (= lt!40885 (select (arr!1918 (_keys!4010 newMap!16)) (toIndex!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (mask!6366 newMap!16))))))

(assert (=> d!22479 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22479 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (mask!6366 newMap!16)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)) lt!40884)))

(declare-fun b!86337 () Bool)

(assert (=> b!86337 (= e!56269 e!56271)))

(declare-fun c!14097 () Bool)

(assert (=> b!86337 (= c!14097 (or (= lt!40885 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (= (bvadd lt!40885 lt!40885) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86338 () Bool)

(assert (=> b!86338 (and (bvsge (index!3151 lt!40884) #b00000000000000000000000000000000) (bvslt (index!3151 lt!40884) (size!2162 (_keys!4010 newMap!16))))))

(assert (=> b!86338 (= e!56273 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3151 lt!40884)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22479 c!14098) b!86331))

(assert (= (and d!22479 (not c!14098)) b!86337))

(assert (= (and b!86337 c!14097) b!86333))

(assert (= (and b!86337 (not c!14097)) b!86334))

(assert (= (and d!22479 c!14099) b!86332))

(assert (= (and d!22479 (not c!14099)) b!86336))

(assert (= (and b!86336 res!44383) b!86330))

(assert (= (and b!86330 (not res!44385)) b!86335))

(assert (= (and b!86335 (not res!44384)) b!86338))

(assert (=> d!22479 m!89997))

(declare-fun m!90969 () Bool)

(assert (=> d!22479 m!90969))

(assert (=> d!22479 m!89885))

(assert (=> b!86334 m!89997))

(declare-fun m!90971 () Bool)

(assert (=> b!86334 m!90971))

(assert (=> b!86334 m!90971))

(assert (=> b!86334 m!89417))

(declare-fun m!90973 () Bool)

(assert (=> b!86334 m!90973))

(declare-fun m!90975 () Bool)

(assert (=> b!86330 m!90975))

(assert (=> b!86335 m!90975))

(assert (=> b!86338 m!90975))

(assert (=> d!22165 d!22479))

(declare-fun d!22481 () Bool)

(declare-fun lt!40891 () (_ BitVec 32))

(declare-fun lt!40890 () (_ BitVec 32))

(assert (=> d!22481 (= lt!40891 (bvmul (bvxor lt!40890 (bvlshr lt!40890 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!22481 (= lt!40890 ((_ extract 31 0) (bvand (bvxor (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvlshr (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!22481 (and (bvsge (mask!6366 newMap!16) #b00000000000000000000000000000000) (let ((res!44386 (let ((h!2143 ((_ extract 31 0) (bvand (bvxor (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvlshr (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!12108 (bvmul (bvxor h!2143 (bvlshr h!2143 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!12108 (bvlshr x!12108 #b00000000000000000000000000001101)) (mask!6366 newMap!16)))))) (and (bvslt res!44386 (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001)) (bvsge res!44386 #b00000000000000000000000000000000))))))

(assert (=> d!22481 (= (toIndex!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (mask!6366 newMap!16)) (bvand (bvxor lt!40891 (bvlshr lt!40891 #b00000000000000000000000000001101)) (mask!6366 newMap!16)))))

(assert (=> d!22165 d!22481))

(assert (=> d!22165 d!22459))

(declare-fun d!22483 () Bool)

(assert (=> d!22483 (= (get!1216 (getValueByKey!139 (toList!759 lt!40449) lt!40441)) (v!2652 (getValueByKey!139 (toList!759 lt!40449) lt!40441)))))

(assert (=> d!22239 d!22483))

(declare-fun b!86339 () Bool)

(declare-fun e!56274 () Option!145)

(assert (=> b!86339 (= e!56274 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40449)))))))

(declare-fun b!86341 () Bool)

(declare-fun e!56275 () Option!145)

(assert (=> b!86341 (= e!56275 (getValueByKey!139 (t!5277 (toList!759 lt!40449)) lt!40441))))

(declare-fun b!86340 () Bool)

(assert (=> b!86340 (= e!56274 e!56275)))

(declare-fun c!14101 () Bool)

(assert (=> b!86340 (= c!14101 (and ((_ is Cons!1548) (toList!759 lt!40449)) (not (= (_1!1126 (h!2139 (toList!759 lt!40449))) lt!40441))))))

(declare-fun d!22485 () Bool)

(declare-fun c!14100 () Bool)

(assert (=> d!22485 (= c!14100 (and ((_ is Cons!1548) (toList!759 lt!40449)) (= (_1!1126 (h!2139 (toList!759 lt!40449))) lt!40441)))))

(assert (=> d!22485 (= (getValueByKey!139 (toList!759 lt!40449) lt!40441) e!56274)))

(declare-fun b!86342 () Bool)

(assert (=> b!86342 (= e!56275 None!143)))

(assert (= (and d!22485 c!14100) b!86339))

(assert (= (and d!22485 (not c!14100)) b!86340))

(assert (= (and b!86340 c!14101) b!86341))

(assert (= (and b!86340 (not c!14101)) b!86342))

(declare-fun m!90977 () Bool)

(assert (=> b!86341 m!90977))

(assert (=> d!22239 d!22485))

(declare-fun d!22487 () Bool)

(declare-fun lt!40892 () Bool)

(assert (=> d!22487 (= lt!40892 (select (content!88 lt!40240) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun e!56276 () Bool)

(assert (=> d!22487 (= lt!40892 e!56276)))

(declare-fun res!44388 () Bool)

(assert (=> d!22487 (=> (not res!44388) (not e!56276))))

(assert (=> d!22487 (= res!44388 ((_ is Cons!1548) lt!40240))))

(assert (=> d!22487 (= (contains!764 lt!40240 (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))) lt!40892)))

(declare-fun b!86343 () Bool)

(declare-fun e!56277 () Bool)

(assert (=> b!86343 (= e!56276 e!56277)))

(declare-fun res!44387 () Bool)

(assert (=> b!86343 (=> res!44387 e!56277)))

(assert (=> b!86343 (= res!44387 (= (h!2139 lt!40240) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun b!86344 () Bool)

(assert (=> b!86344 (= e!56277 (contains!764 (t!5277 lt!40240) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(assert (= (and d!22487 res!44388) b!86343))

(assert (= (and b!86343 (not res!44387)) b!86344))

(declare-fun m!90979 () Bool)

(assert (=> d!22487 m!90979))

(declare-fun m!90981 () Bool)

(assert (=> d!22487 m!90981))

(declare-fun m!90983 () Bool)

(assert (=> b!86344 m!90983))

(assert (=> b!85687 d!22487))

(declare-fun lt!40893 () Bool)

(declare-fun d!22489 () Bool)

(assert (=> d!22489 (= lt!40893 (select (content!88 (toList!759 lt!40593)) (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun e!56278 () Bool)

(assert (=> d!22489 (= lt!40893 e!56278)))

(declare-fun res!44390 () Bool)

(assert (=> d!22489 (=> (not res!44390) (not e!56278))))

(assert (=> d!22489 (= res!44390 ((_ is Cons!1548) (toList!759 lt!40593)))))

(assert (=> d!22489 (= (contains!764 (toList!759 lt!40593) (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40893)))

(declare-fun b!86345 () Bool)

(declare-fun e!56279 () Bool)

(assert (=> b!86345 (= e!56278 e!56279)))

(declare-fun res!44389 () Bool)

(assert (=> b!86345 (=> res!44389 e!56279)))

(assert (=> b!86345 (= res!44389 (= (h!2139 (toList!759 lt!40593)) (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!86346 () Bool)

(assert (=> b!86346 (= e!56279 (contains!764 (t!5277 (toList!759 lt!40593)) (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22489 res!44390) b!86345))

(assert (= (and b!86345 (not res!44389)) b!86346))

(declare-fun m!90985 () Bool)

(assert (=> d!22489 m!90985))

(declare-fun m!90987 () Bool)

(assert (=> d!22489 m!90987))

(declare-fun m!90989 () Bool)

(assert (=> b!86346 m!90989))

(assert (=> b!85898 d!22489))

(declare-fun b!86347 () Bool)

(declare-fun e!56280 () Option!145)

(assert (=> b!86347 (= e!56280 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40546)))))))

(declare-fun e!56281 () Option!145)

(declare-fun b!86349 () Bool)

(assert (=> b!86349 (= e!56281 (getValueByKey!139 (t!5277 (toList!759 lt!40546)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86348 () Bool)

(assert (=> b!86348 (= e!56280 e!56281)))

(declare-fun c!14103 () Bool)

(assert (=> b!86348 (= c!14103 (and ((_ is Cons!1548) (toList!759 lt!40546)) (not (= (_1!1126 (h!2139 (toList!759 lt!40546))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun c!14102 () Bool)

(declare-fun d!22491 () Bool)

(assert (=> d!22491 (= c!14102 (and ((_ is Cons!1548) (toList!759 lt!40546)) (= (_1!1126 (h!2139 (toList!759 lt!40546))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22491 (= (getValueByKey!139 (toList!759 lt!40546) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) e!56280)))

(declare-fun b!86350 () Bool)

(assert (=> b!86350 (= e!56281 None!143)))

(assert (= (and d!22491 c!14102) b!86347))

(assert (= (and d!22491 (not c!14102)) b!86348))

(assert (= (and b!86348 c!14103) b!86349))

(assert (= (and b!86348 (not c!14103)) b!86350))

(declare-fun m!90991 () Bool)

(assert (=> b!86349 m!90991))

(assert (=> b!85814 d!22491))

(declare-fun d!22493 () Bool)

(declare-fun res!44391 () Bool)

(declare-fun e!56282 () Bool)

(assert (=> d!22493 (=> res!44391 e!56282)))

(assert (=> d!22493 (= res!44391 (and ((_ is Cons!1548) lt!40289) (= (_1!1126 (h!2139 lt!40289)) (_1!1126 lt!40172))))))

(assert (=> d!22493 (= (containsKey!143 lt!40289 (_1!1126 lt!40172)) e!56282)))

(declare-fun b!86351 () Bool)

(declare-fun e!56283 () Bool)

(assert (=> b!86351 (= e!56282 e!56283)))

(declare-fun res!44392 () Bool)

(assert (=> b!86351 (=> (not res!44392) (not e!56283))))

(assert (=> b!86351 (= res!44392 (and (or (not ((_ is Cons!1548) lt!40289)) (bvsle (_1!1126 (h!2139 lt!40289)) (_1!1126 lt!40172))) ((_ is Cons!1548) lt!40289) (bvslt (_1!1126 (h!2139 lt!40289)) (_1!1126 lt!40172))))))

(declare-fun b!86352 () Bool)

(assert (=> b!86352 (= e!56283 (containsKey!143 (t!5277 lt!40289) (_1!1126 lt!40172)))))

(assert (= (and d!22493 (not res!44391)) b!86351))

(assert (= (and b!86351 res!44392) b!86352))

(declare-fun m!90993 () Bool)

(assert (=> b!86352 m!90993))

(assert (=> b!85647 d!22493))

(declare-fun d!22495 () Bool)

(declare-fun e!56285 () Bool)

(assert (=> d!22495 e!56285))

(declare-fun res!44393 () Bool)

(assert (=> d!22495 (=> res!44393 e!56285)))

(declare-fun lt!40896 () Bool)

(assert (=> d!22495 (= res!44393 (not lt!40896))))

(declare-fun lt!40897 () Bool)

(assert (=> d!22495 (= lt!40896 lt!40897)))

(declare-fun lt!40895 () Unit!2533)

(declare-fun e!56284 () Unit!2533)

(assert (=> d!22495 (= lt!40895 e!56284)))

(declare-fun c!14104 () Bool)

(assert (=> d!22495 (= c!14104 lt!40897)))

(assert (=> d!22495 (= lt!40897 (containsKey!143 (toList!759 lt!40445) lt!40442))))

(assert (=> d!22495 (= (contains!762 lt!40445 lt!40442) lt!40896)))

(declare-fun b!86353 () Bool)

(declare-fun lt!40894 () Unit!2533)

(assert (=> b!86353 (= e!56284 lt!40894)))

(assert (=> b!86353 (= lt!40894 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40445) lt!40442))))

(assert (=> b!86353 (isDefined!93 (getValueByKey!139 (toList!759 lt!40445) lt!40442))))

(declare-fun b!86354 () Bool)

(declare-fun Unit!2571 () Unit!2533)

(assert (=> b!86354 (= e!56284 Unit!2571)))

(declare-fun b!86355 () Bool)

(assert (=> b!86355 (= e!56285 (isDefined!93 (getValueByKey!139 (toList!759 lt!40445) lt!40442)))))

(assert (= (and d!22495 c!14104) b!86353))

(assert (= (and d!22495 (not c!14104)) b!86354))

(assert (= (and d!22495 (not res!44393)) b!86355))

(declare-fun m!90995 () Bool)

(assert (=> d!22495 m!90995))

(declare-fun m!90997 () Bool)

(assert (=> b!86353 m!90997))

(assert (=> b!86353 m!90249))

(assert (=> b!86353 m!90249))

(declare-fun m!90999 () Bool)

(assert (=> b!86353 m!90999))

(assert (=> b!86355 m!90249))

(assert (=> b!86355 m!90249))

(assert (=> b!86355 m!90999))

(assert (=> d!22251 d!22495))

(assert (=> d!22251 d!22249))

(assert (=> d!22251 d!22255))

(declare-fun d!22497 () Bool)

(assert (=> d!22497 (= (apply!82 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40442) (apply!82 lt!40445 lt!40442))))

(assert (=> d!22497 true))

(declare-fun _$34!839 () Unit!2533)

(assert (=> d!22497 (= (choose!515 lt!40445 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40442) _$34!839)))

(declare-fun bs!3630 () Bool)

(assert (= bs!3630 d!22497))

(assert (=> bs!3630 m!89777))

(assert (=> bs!3630 m!89777))

(assert (=> bs!3630 m!89779))

(assert (=> bs!3630 m!89769))

(assert (=> d!22251 d!22497))

(assert (=> d!22251 d!22245))

(declare-fun d!22499 () Bool)

(assert (=> d!22499 (contains!762 (getCurrentListMap!443 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))

(assert (=> d!22499 true))

(declare-fun _$16!108 () Unit!2533)

(assert (=> d!22499 (= (choose!511 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3150 lt!40372) (defaultEntry!2338 newMap!16)) _$16!108)))

(declare-fun bs!3631 () Bool)

(assert (= bs!3631 d!22499))

(assert (=> bs!3631 m!90109))

(assert (=> bs!3631 m!89691))

(assert (=> bs!3631 m!90109))

(assert (=> bs!3631 m!89691))

(assert (=> bs!3631 m!90111))

(assert (=> d!22203 d!22499))

(assert (=> d!22203 d!22459))

(declare-fun d!22501 () Bool)

(declare-fun e!56287 () Bool)

(assert (=> d!22501 e!56287))

(declare-fun res!44394 () Bool)

(assert (=> d!22501 (=> res!44394 e!56287)))

(declare-fun lt!40900 () Bool)

(assert (=> d!22501 (= res!44394 (not lt!40900))))

(declare-fun lt!40901 () Bool)

(assert (=> d!22501 (= lt!40900 lt!40901)))

(declare-fun lt!40899 () Unit!2533)

(declare-fun e!56286 () Unit!2533)

(assert (=> d!22501 (= lt!40899 e!56286)))

(declare-fun c!14105 () Bool)

(assert (=> d!22501 (= c!14105 lt!40901)))

(assert (=> d!22501 (= lt!40901 (containsKey!143 (toList!759 lt!40638) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22501 (= (contains!762 lt!40638 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!40900)))

(declare-fun b!86357 () Bool)

(declare-fun lt!40898 () Unit!2533)

(assert (=> b!86357 (= e!56286 lt!40898)))

(assert (=> b!86357 (= lt!40898 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40638) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> b!86357 (isDefined!93 (getValueByKey!139 (toList!759 lt!40638) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86358 () Bool)

(declare-fun Unit!2572 () Unit!2533)

(assert (=> b!86358 (= e!56286 Unit!2572)))

(declare-fun b!86359 () Bool)

(assert (=> b!86359 (= e!56287 (isDefined!93 (getValueByKey!139 (toList!759 lt!40638) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (= (and d!22501 c!14105) b!86357))

(assert (= (and d!22501 (not c!14105)) b!86358))

(assert (= (and d!22501 (not res!44394)) b!86359))

(declare-fun m!91001 () Bool)

(assert (=> d!22501 m!91001))

(declare-fun m!91003 () Bool)

(assert (=> b!86357 m!91003))

(assert (=> b!86357 m!90349))

(assert (=> b!86357 m!90349))

(declare-fun m!91005 () Bool)

(assert (=> b!86357 m!91005))

(assert (=> b!86359 m!90349))

(assert (=> b!86359 m!90349))

(assert (=> b!86359 m!91005))

(assert (=> d!22273 d!22501))

(declare-fun b!86360 () Bool)

(declare-fun e!56288 () Option!145)

(assert (=> b!86360 (= e!56288 (Some!144 (_2!1126 (h!2139 lt!40637))))))

(declare-fun e!56289 () Option!145)

(declare-fun b!86362 () Bool)

(assert (=> b!86362 (= e!56289 (getValueByKey!139 (t!5277 lt!40637) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86361 () Bool)

(assert (=> b!86361 (= e!56288 e!56289)))

(declare-fun c!14107 () Bool)

(assert (=> b!86361 (= c!14107 (and ((_ is Cons!1548) lt!40637) (not (= (_1!1126 (h!2139 lt!40637)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun d!22503 () Bool)

(declare-fun c!14106 () Bool)

(assert (=> d!22503 (= c!14106 (and ((_ is Cons!1548) lt!40637) (= (_1!1126 (h!2139 lt!40637)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22503 (= (getValueByKey!139 lt!40637 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) e!56288)))

(declare-fun b!86363 () Bool)

(assert (=> b!86363 (= e!56289 None!143)))

(assert (= (and d!22503 c!14106) b!86360))

(assert (= (and d!22503 (not c!14106)) b!86361))

(assert (= (and b!86361 c!14107) b!86362))

(assert (= (and b!86361 (not c!14107)) b!86363))

(declare-fun m!91007 () Bool)

(assert (=> b!86362 m!91007))

(assert (=> d!22273 d!22503))

(declare-fun d!22505 () Bool)

(assert (=> d!22505 (= (getValueByKey!139 lt!40637 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!40902 () Unit!2533)

(assert (=> d!22505 (= lt!40902 (choose!508 lt!40637 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun e!56290 () Bool)

(assert (=> d!22505 e!56290))

(declare-fun res!44395 () Bool)

(assert (=> d!22505 (=> (not res!44395) (not e!56290))))

(assert (=> d!22505 (= res!44395 (isStrictlySorted!293 lt!40637))))

(assert (=> d!22505 (= (lemmaContainsTupThenGetReturnValue!58 lt!40637 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!40902)))

(declare-fun b!86364 () Bool)

(declare-fun res!44396 () Bool)

(assert (=> b!86364 (=> (not res!44396) (not e!56290))))

(assert (=> b!86364 (= res!44396 (containsKey!143 lt!40637 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86365 () Bool)

(assert (=> b!86365 (= e!56290 (contains!764 lt!40637 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (= (and d!22505 res!44395) b!86364))

(assert (= (and b!86364 res!44396) b!86365))

(assert (=> d!22505 m!90343))

(declare-fun m!91009 () Bool)

(assert (=> d!22505 m!91009))

(declare-fun m!91011 () Bool)

(assert (=> d!22505 m!91011))

(declare-fun m!91013 () Bool)

(assert (=> b!86364 m!91013))

(declare-fun m!91015 () Bool)

(assert (=> b!86365 m!91015))

(assert (=> d!22273 d!22505))

(declare-fun e!56292 () List!1552)

(declare-fun c!14108 () Bool)

(declare-fun c!14109 () Bool)

(declare-fun b!86366 () Bool)

(assert (=> b!86366 (= e!56292 (ite c!14108 (t!5277 (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (ite c!14109 (Cons!1548 (h!2139 (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (t!5277 (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) Nil!1549)))))

(declare-fun b!86367 () Bool)

(declare-fun lt!40903 () List!1552)

(declare-fun e!56294 () Bool)

(assert (=> b!86367 (= e!56294 (contains!764 lt!40903 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86368 () Bool)

(declare-fun e!56293 () List!1552)

(declare-fun e!56291 () List!1552)

(assert (=> b!86368 (= e!56293 e!56291)))

(assert (=> b!86368 (= c!14108 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86369 () Bool)

(declare-fun res!44397 () Bool)

(assert (=> b!86369 (=> (not res!44397) (not e!56294))))

(assert (=> b!86369 (= res!44397 (containsKey!143 lt!40903 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun d!22507 () Bool)

(assert (=> d!22507 e!56294))

(declare-fun res!44398 () Bool)

(assert (=> d!22507 (=> (not res!44398) (not e!56294))))

(assert (=> d!22507 (= res!44398 (isStrictlySorted!293 lt!40903))))

(assert (=> d!22507 (= lt!40903 e!56293)))

(declare-fun c!14110 () Bool)

(assert (=> d!22507 (= c!14110 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (bvslt (_1!1126 (h!2139 (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22507 (isStrictlySorted!293 (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22507 (= (insertStrictlySorted!60 (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!40903)))

(declare-fun call!8215 () List!1552)

(declare-fun bm!8212 () Bool)

(assert (=> bm!8212 (= call!8215 ($colon$colon!71 e!56292 (ite c!14110 (h!2139 (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun c!14111 () Bool)

(assert (=> bm!8212 (= c!14111 c!14110)))

(declare-fun bm!8213 () Bool)

(declare-fun call!8217 () List!1552)

(declare-fun call!8216 () List!1552)

(assert (=> bm!8213 (= call!8217 call!8216)))

(declare-fun b!86370 () Bool)

(assert (=> b!86370 (= e!56293 call!8215)))

(declare-fun b!86371 () Bool)

(declare-fun e!56295 () List!1552)

(assert (=> b!86371 (= e!56295 call!8217)))

(declare-fun b!86372 () Bool)

(assert (=> b!86372 (= e!56291 call!8216)))

(declare-fun b!86373 () Bool)

(assert (=> b!86373 (= e!56292 (insertStrictlySorted!60 (t!5277 (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86374 () Bool)

(assert (=> b!86374 (= e!56295 call!8217)))

(declare-fun b!86375 () Bool)

(assert (=> b!86375 (= c!14109 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (bvsgt (_1!1126 (h!2139 (toList!759 (+!116 lt!40173 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> b!86375 (= e!56291 e!56295)))

(declare-fun bm!8214 () Bool)

(assert (=> bm!8214 (= call!8216 call!8215)))

(assert (= (and d!22507 c!14110) b!86370))

(assert (= (and d!22507 (not c!14110)) b!86368))

(assert (= (and b!86368 c!14108) b!86372))

(assert (= (and b!86368 (not c!14108)) b!86375))

(assert (= (and b!86375 c!14109) b!86374))

(assert (= (and b!86375 (not c!14109)) b!86371))

(assert (= (or b!86374 b!86371) bm!8213))

(assert (= (or b!86372 bm!8213) bm!8214))

(assert (= (or b!86370 bm!8214) bm!8212))

(assert (= (and bm!8212 c!14111) b!86373))

(assert (= (and bm!8212 (not c!14111)) b!86366))

(assert (= (and d!22507 res!44398) b!86369))

(assert (= (and b!86369 res!44397) b!86367))

(declare-fun m!91017 () Bool)

(assert (=> b!86369 m!91017))

(declare-fun m!91019 () Bool)

(assert (=> b!86373 m!91019))

(declare-fun m!91021 () Bool)

(assert (=> d!22507 m!91021))

(declare-fun m!91023 () Bool)

(assert (=> d!22507 m!91023))

(declare-fun m!91025 () Bool)

(assert (=> b!86367 m!91025))

(declare-fun m!91027 () Bool)

(assert (=> bm!8212 m!91027))

(assert (=> d!22273 d!22507))

(declare-fun b!86376 () Bool)

(declare-fun e!56297 () List!1552)

(declare-fun c!14113 () Bool)

(declare-fun c!14112 () Bool)

(assert (=> b!86376 (= e!56297 (ite c!14112 (t!5277 (t!5277 (toList!759 lt!40170))) (ite c!14113 (Cons!1548 (h!2139 (t!5277 (toList!759 lt!40170))) (t!5277 (t!5277 (toList!759 lt!40170)))) Nil!1549)))))

(declare-fun b!86377 () Bool)

(declare-fun e!56299 () Bool)

(declare-fun lt!40904 () List!1552)

(assert (=> b!86377 (= e!56299 (contains!764 lt!40904 (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun b!86378 () Bool)

(declare-fun e!56298 () List!1552)

(declare-fun e!56296 () List!1552)

(assert (=> b!86378 (= e!56298 e!56296)))

(assert (=> b!86378 (= c!14112 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40170))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40170)))) (_1!1126 lt!40163))))))

(declare-fun b!86379 () Bool)

(declare-fun res!44399 () Bool)

(assert (=> b!86379 (=> (not res!44399) (not e!56299))))

(assert (=> b!86379 (= res!44399 (containsKey!143 lt!40904 (_1!1126 lt!40163)))))

(declare-fun d!22509 () Bool)

(assert (=> d!22509 e!56299))

(declare-fun res!44400 () Bool)

(assert (=> d!22509 (=> (not res!44400) (not e!56299))))

(assert (=> d!22509 (= res!44400 (isStrictlySorted!293 lt!40904))))

(assert (=> d!22509 (= lt!40904 e!56298)))

(declare-fun c!14114 () Bool)

(assert (=> d!22509 (= c!14114 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40170))) (bvslt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40170)))) (_1!1126 lt!40163))))))

(assert (=> d!22509 (isStrictlySorted!293 (t!5277 (toList!759 lt!40170)))))

(assert (=> d!22509 (= (insertStrictlySorted!60 (t!5277 (toList!759 lt!40170)) (_1!1126 lt!40163) (_2!1126 lt!40163)) lt!40904)))

(declare-fun bm!8215 () Bool)

(declare-fun call!8218 () List!1552)

(assert (=> bm!8215 (= call!8218 ($colon$colon!71 e!56297 (ite c!14114 (h!2139 (t!5277 (toList!759 lt!40170))) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163)))))))

(declare-fun c!14115 () Bool)

(assert (=> bm!8215 (= c!14115 c!14114)))

(declare-fun bm!8216 () Bool)

(declare-fun call!8220 () List!1552)

(declare-fun call!8219 () List!1552)

(assert (=> bm!8216 (= call!8220 call!8219)))

(declare-fun b!86380 () Bool)

(assert (=> b!86380 (= e!56298 call!8218)))

(declare-fun b!86381 () Bool)

(declare-fun e!56300 () List!1552)

(assert (=> b!86381 (= e!56300 call!8220)))

(declare-fun b!86382 () Bool)

(assert (=> b!86382 (= e!56296 call!8219)))

(declare-fun b!86383 () Bool)

(assert (=> b!86383 (= e!56297 (insertStrictlySorted!60 (t!5277 (t!5277 (toList!759 lt!40170))) (_1!1126 lt!40163) (_2!1126 lt!40163)))))

(declare-fun b!86384 () Bool)

(assert (=> b!86384 (= e!56300 call!8220)))

(declare-fun b!86385 () Bool)

(assert (=> b!86385 (= c!14113 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40170))) (bvsgt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40170)))) (_1!1126 lt!40163))))))

(assert (=> b!86385 (= e!56296 e!56300)))

(declare-fun bm!8217 () Bool)

(assert (=> bm!8217 (= call!8219 call!8218)))

(assert (= (and d!22509 c!14114) b!86380))

(assert (= (and d!22509 (not c!14114)) b!86378))

(assert (= (and b!86378 c!14112) b!86382))

(assert (= (and b!86378 (not c!14112)) b!86385))

(assert (= (and b!86385 c!14113) b!86384))

(assert (= (and b!86385 (not c!14113)) b!86381))

(assert (= (or b!86384 b!86381) bm!8216))

(assert (= (or b!86382 bm!8216) bm!8217))

(assert (= (or b!86380 bm!8217) bm!8215))

(assert (= (and bm!8215 c!14115) b!86383))

(assert (= (and bm!8215 (not c!14115)) b!86376))

(assert (= (and d!22509 res!44400) b!86379))

(assert (= (and b!86379 res!44399) b!86377))

(declare-fun m!91029 () Bool)

(assert (=> b!86379 m!91029))

(declare-fun m!91031 () Bool)

(assert (=> b!86383 m!91031))

(declare-fun m!91033 () Bool)

(assert (=> d!22509 m!91033))

(assert (=> d!22509 m!90965))

(declare-fun m!91035 () Bool)

(assert (=> b!86377 m!91035))

(declare-fun m!91037 () Bool)

(assert (=> bm!8215 m!91037))

(assert (=> b!85722 d!22509))

(declare-fun b!86387 () Bool)

(declare-fun res!44401 () Bool)

(declare-fun e!56301 () Bool)

(assert (=> b!86387 (=> (not res!44401) (not e!56301))))

(assert (=> b!86387 (= res!44401 (bvsge (size!2166 (v!2648 (underlying!293 thiss!992))) (_size!427 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun b!86388 () Bool)

(declare-fun res!44403 () Bool)

(assert (=> b!86388 (=> (not res!44403) (not e!56301))))

(assert (=> b!86388 (= res!44403 (= (size!2166 (v!2648 (underlying!293 thiss!992))) (bvadd (_size!427 (v!2648 (underlying!293 thiss!992))) (bvsdiv (bvadd (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!86389 () Bool)

(assert (=> b!86389 (= e!56301 (and (bvsge (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!427 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!86386 () Bool)

(declare-fun res!44402 () Bool)

(assert (=> b!86386 (=> (not res!44402) (not e!56301))))

(assert (=> b!86386 (= res!44402 (and (= (size!2163 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000001)) (= (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (size!2163 (_values!2321 (v!2648 (underlying!293 thiss!992))))) (bvsge (_size!427 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!427 (v!2648 (underlying!293 thiss!992))) (bvadd (mask!6366 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!22511 () Bool)

(declare-fun res!44404 () Bool)

(assert (=> d!22511 (=> (not res!44404) (not e!56301))))

(assert (=> d!22511 (= res!44404 (validMask!0 (mask!6366 (v!2648 (underlying!293 thiss!992)))))))

(assert (=> d!22511 (= (simpleValid!57 (v!2648 (underlying!293 thiss!992))) e!56301)))

(assert (= (and d!22511 res!44404) b!86386))

(assert (= (and b!86386 res!44402) b!86387))

(assert (= (and b!86387 res!44401) b!86388))

(assert (= (and b!86388 res!44403) b!86389))

(declare-fun m!91039 () Bool)

(assert (=> b!86387 m!91039))

(assert (=> b!86388 m!91039))

(assert (=> d!22511 m!89445))

(assert (=> d!22209 d!22511))

(assert (=> b!85993 d!22477))

(declare-fun d!22513 () Bool)

(assert (=> d!22513 (= ($colon$colon!71 e!55877 (ite c!13919 (h!2139 (toList!759 (+!116 lt!40169 lt!40171))) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172)))) (Cons!1548 (ite c!13919 (h!2139 (toList!759 (+!116 lt!40169 lt!40171))) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))) e!55877))))

(assert (=> bm!8134 d!22513))

(declare-fun b!86390 () Bool)

(declare-fun e!56302 () Option!145)

(assert (=> b!86390 (= e!56302 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40568)))))))

(declare-fun b!86392 () Bool)

(declare-fun e!56303 () Option!145)

(assert (=> b!86392 (= e!56303 (getValueByKey!139 (t!5277 (toList!759 lt!40568)) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86391 () Bool)

(assert (=> b!86391 (= e!56302 e!56303)))

(declare-fun c!14117 () Bool)

(assert (=> b!86391 (= c!14117 (and ((_ is Cons!1548) (toList!759 lt!40568)) (not (= (_1!1126 (h!2139 (toList!759 lt!40568))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!22515 () Bool)

(declare-fun c!14116 () Bool)

(assert (=> d!22515 (= c!14116 (and ((_ is Cons!1548) (toList!759 lt!40568)) (= (_1!1126 (h!2139 (toList!759 lt!40568))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22515 (= (getValueByKey!139 (toList!759 lt!40568) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56302)))

(declare-fun b!86393 () Bool)

(assert (=> b!86393 (= e!56303 None!143)))

(assert (= (and d!22515 c!14116) b!86390))

(assert (= (and d!22515 (not c!14116)) b!86391))

(assert (= (and b!86391 c!14117) b!86392))

(assert (= (and b!86391 (not c!14117)) b!86393))

(declare-fun m!91041 () Bool)

(assert (=> b!86392 m!91041))

(assert (=> b!85840 d!22515))

(declare-fun d!22517 () Bool)

(assert (=> d!22517 (= (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458)) (not (isEmpty!342 (getValueByKey!139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458))))))

(declare-fun bs!3632 () Bool)

(assert (= bs!3632 d!22517))

(assert (=> bs!3632 m!90229))

(declare-fun m!91043 () Bool)

(assert (=> bs!3632 m!91043))

(assert (=> b!85901 d!22517))

(declare-fun b!86394 () Bool)

(declare-fun e!56304 () Option!145)

(assert (=> b!86394 (= e!56304 (Some!144 (_2!1126 (h!2139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))))

(declare-fun b!86396 () Bool)

(declare-fun e!56305 () Option!145)

(assert (=> b!86396 (= e!56305 (getValueByKey!139 (t!5277 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) lt!40458))))

(declare-fun b!86395 () Bool)

(assert (=> b!86395 (= e!56304 e!56305)))

(declare-fun c!14119 () Bool)

(assert (=> b!86395 (= c!14119 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (not (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) lt!40458))))))

(declare-fun c!14118 () Bool)

(declare-fun d!22519 () Bool)

(assert (=> d!22519 (= c!14118 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) lt!40458)))))

(assert (=> d!22519 (= (getValueByKey!139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458) e!56304)))

(declare-fun b!86397 () Bool)

(assert (=> b!86397 (= e!56305 None!143)))

(assert (= (and d!22519 c!14118) b!86394))

(assert (= (and d!22519 (not c!14118)) b!86395))

(assert (= (and b!86395 c!14119) b!86396))

(assert (= (and b!86395 (not c!14119)) b!86397))

(declare-fun m!91045 () Bool)

(assert (=> b!86396 m!91045))

(assert (=> b!85901 d!22519))

(declare-fun d!22521 () Bool)

(declare-fun res!44405 () Bool)

(declare-fun e!56306 () Bool)

(assert (=> d!22521 (=> res!44405 e!56306)))

(assert (=> d!22521 (= res!44405 (and ((_ is Cons!1548) (toList!759 lt!40248)) (= (_1!1126 (h!2139 (toList!759 lt!40248))) (_1!1126 lt!40172))))))

(assert (=> d!22521 (= (containsKey!143 (toList!759 lt!40248) (_1!1126 lt!40172)) e!56306)))

(declare-fun b!86398 () Bool)

(declare-fun e!56307 () Bool)

(assert (=> b!86398 (= e!56306 e!56307)))

(declare-fun res!44406 () Bool)

(assert (=> b!86398 (=> (not res!44406) (not e!56307))))

(assert (=> b!86398 (= res!44406 (and (or (not ((_ is Cons!1548) (toList!759 lt!40248))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40248))) (_1!1126 lt!40172))) ((_ is Cons!1548) (toList!759 lt!40248)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40248))) (_1!1126 lt!40172))))))

(declare-fun b!86399 () Bool)

(assert (=> b!86399 (= e!56307 (containsKey!143 (t!5277 (toList!759 lt!40248)) (_1!1126 lt!40172)))))

(assert (= (and d!22521 (not res!44405)) b!86398))

(assert (= (and b!86398 res!44406) b!86399))

(declare-fun m!91047 () Bool)

(assert (=> b!86399 m!91047))

(assert (=> d!22297 d!22521))

(declare-fun b!86400 () Bool)

(declare-fun e!56308 () Option!145)

(assert (=> b!86400 (= e!56308 (Some!144 (_2!1126 (h!2139 (t!5277 (toList!759 lt!40252))))))))

(declare-fun b!86402 () Bool)

(declare-fun e!56309 () Option!145)

(assert (=> b!86402 (= e!56309 (getValueByKey!139 (t!5277 (t!5277 (toList!759 lt!40252))) (_1!1126 lt!40171)))))

(declare-fun b!86401 () Bool)

(assert (=> b!86401 (= e!56308 e!56309)))

(declare-fun c!14121 () Bool)

(assert (=> b!86401 (= c!14121 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40252))) (not (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40252)))) (_1!1126 lt!40171)))))))

(declare-fun d!22523 () Bool)

(declare-fun c!14120 () Bool)

(assert (=> d!22523 (= c!14120 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40252))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40252)))) (_1!1126 lt!40171))))))

(assert (=> d!22523 (= (getValueByKey!139 (t!5277 (toList!759 lt!40252)) (_1!1126 lt!40171)) e!56308)))

(declare-fun b!86403 () Bool)

(assert (=> b!86403 (= e!56309 None!143)))

(assert (= (and d!22523 c!14120) b!86400))

(assert (= (and d!22523 (not c!14120)) b!86401))

(assert (= (and b!86401 c!14121) b!86402))

(assert (= (and b!86401 (not c!14121)) b!86403))

(declare-fun m!91049 () Bool)

(assert (=> b!86402 m!91049))

(assert (=> b!85826 d!22523))

(declare-fun d!22525 () Bool)

(assert (=> d!22525 (= (isEmpty!340 lt!40581) (isEmpty!341 (toList!759 lt!40581)))))

(declare-fun bs!3633 () Bool)

(assert (= bs!3633 d!22525))

(declare-fun m!91051 () Bool)

(assert (=> bs!3633 m!91051))

(assert (=> b!85863 d!22525))

(declare-fun d!22527 () Bool)

(assert (=> d!22527 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40261) (_1!1126 lt!40163))) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40261) (_1!1126 lt!40163)))))))

(declare-fun bs!3634 () Bool)

(assert (= bs!3634 d!22527))

(assert (=> bs!3634 m!89619))

(declare-fun m!91053 () Bool)

(assert (=> bs!3634 m!91053))

(assert (=> b!86095 d!22527))

(assert (=> b!86095 d!22221))

(declare-fun d!22529 () Bool)

(declare-fun lt!40905 () Bool)

(assert (=> d!22529 (= lt!40905 (select (content!88 (toList!759 lt!40568)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun e!56310 () Bool)

(assert (=> d!22529 (= lt!40905 e!56310)))

(declare-fun res!44408 () Bool)

(assert (=> d!22529 (=> (not res!44408) (not e!56310))))

(assert (=> d!22529 (= res!44408 ((_ is Cons!1548) (toList!759 lt!40568)))))

(assert (=> d!22529 (= (contains!764 (toList!759 lt!40568) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40905)))

(declare-fun b!86404 () Bool)

(declare-fun e!56311 () Bool)

(assert (=> b!86404 (= e!56310 e!56311)))

(declare-fun res!44407 () Bool)

(assert (=> b!86404 (=> res!44407 e!56311)))

(assert (=> b!86404 (= res!44407 (= (h!2139 (toList!759 lt!40568)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!86405 () Bool)

(assert (=> b!86405 (= e!56311 (contains!764 (t!5277 (toList!759 lt!40568)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22529 res!44408) b!86404))

(assert (= (and b!86404 (not res!44407)) b!86405))

(declare-fun m!91055 () Bool)

(assert (=> d!22529 m!91055))

(declare-fun m!91057 () Bool)

(assert (=> d!22529 m!91057))

(declare-fun m!91059 () Bool)

(assert (=> b!86405 m!91059))

(assert (=> b!85841 d!22529))

(assert (=> d!22283 d!22151))

(declare-fun d!22531 () Bool)

(declare-fun e!56312 () Bool)

(assert (=> d!22531 e!56312))

(declare-fun res!44409 () Bool)

(assert (=> d!22531 (=> (not res!44409) (not e!56312))))

(declare-fun lt!40907 () ListLongMap!1487)

(assert (=> d!22531 (= res!44409 (contains!762 lt!40907 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164))))))

(declare-fun lt!40906 () List!1552)

(assert (=> d!22531 (= lt!40907 (ListLongMap!1488 lt!40906))))

(declare-fun lt!40908 () Unit!2533)

(declare-fun lt!40909 () Unit!2533)

(assert (=> d!22531 (= lt!40908 lt!40909)))

(assert (=> d!22531 (= (getValueByKey!139 lt!40906 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164))))))

(assert (=> d!22531 (= lt!40909 (lemmaContainsTupThenGetReturnValue!58 lt!40906 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164))))))

(assert (=> d!22531 (= lt!40906 (insertStrictlySorted!60 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164))))))

(assert (=> d!22531 (= (+!116 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) lt!40907)))

(declare-fun b!86406 () Bool)

(declare-fun res!44410 () Bool)

(assert (=> b!86406 (=> (not res!44410) (not e!56312))))

(assert (=> b!86406 (= res!44410 (= (getValueByKey!139 (toList!759 lt!40907) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)))))))

(declare-fun b!86407 () Bool)

(assert (=> b!86407 (= e!56312 (contains!764 (toList!759 lt!40907) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)))))

(assert (= (and d!22531 res!44409) b!86406))

(assert (= (and b!86406 res!44410) b!86407))

(declare-fun m!91061 () Bool)

(assert (=> d!22531 m!91061))

(declare-fun m!91063 () Bool)

(assert (=> d!22531 m!91063))

(declare-fun m!91065 () Bool)

(assert (=> d!22531 m!91065))

(declare-fun m!91067 () Bool)

(assert (=> d!22531 m!91067))

(declare-fun m!91069 () Bool)

(assert (=> b!86406 m!91069))

(declare-fun m!91071 () Bool)

(assert (=> b!86407 m!91071))

(assert (=> d!22283 d!22531))

(assert (=> d!22283 d!22459))

(declare-fun bm!8218 () Bool)

(declare-fun call!8227 () ListLongMap!1487)

(declare-fun call!8224 () ListLongMap!1487)

(assert (=> bm!8218 (= call!8227 call!8224)))

(declare-fun b!86408 () Bool)

(declare-fun e!56322 () ListLongMap!1487)

(declare-fun call!8222 () ListLongMap!1487)

(assert (=> b!86408 (= e!56322 call!8222)))

(declare-fun b!86409 () Bool)

(declare-fun e!56324 () ListLongMap!1487)

(declare-fun call!8225 () ListLongMap!1487)

(assert (=> b!86409 (= e!56324 call!8225)))

(declare-fun b!86410 () Bool)

(declare-fun e!56320 () Bool)

(declare-fun e!56323 () Bool)

(assert (=> b!86410 (= e!56320 e!56323)))

(declare-fun res!44416 () Bool)

(assert (=> b!86410 (=> (not res!44416) (not e!56323))))

(declare-fun lt!40914 () ListLongMap!1487)

(assert (=> b!86410 (= res!44416 (contains!762 lt!40914 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86410 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8219 () Bool)

(assert (=> bm!8219 (= call!8225 call!8227)))

(declare-fun b!86411 () Bool)

(declare-fun e!56319 () Unit!2533)

(declare-fun Unit!2573 () Unit!2533)

(assert (=> b!86411 (= e!56319 Unit!2573)))

(declare-fun b!86412 () Bool)

(declare-fun e!56316 () Bool)

(declare-fun e!56313 () Bool)

(assert (=> b!86412 (= e!56316 e!56313)))

(declare-fun res!44414 () Bool)

(declare-fun call!8226 () Bool)

(assert (=> b!86412 (= res!44414 call!8226)))

(assert (=> b!86412 (=> (not res!44414) (not e!56313))))

(declare-fun b!86414 () Bool)

(declare-fun e!56325 () Bool)

(declare-fun call!8223 () Bool)

(assert (=> b!86414 (= e!56325 (not call!8223))))

(declare-fun b!86415 () Bool)

(declare-fun c!14126 () Bool)

(assert (=> b!86415 (= c!14126 (and (not (= (bvand lt!40385 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!40385 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!86415 (= e!56322 e!56324)))

(declare-fun bm!8220 () Bool)

(declare-fun c!14125 () Bool)

(declare-fun c!14123 () Bool)

(declare-fun call!8221 () ListLongMap!1487)

(assert (=> bm!8220 (= call!8221 (+!116 (ite c!14125 call!8224 (ite c!14123 call!8227 call!8225)) (ite (or c!14125 c!14123) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164))))))

(declare-fun b!86416 () Bool)

(declare-fun e!56314 () ListLongMap!1487)

(assert (=> b!86416 (= e!56314 (+!116 call!8221 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)))))

(declare-fun bm!8221 () Bool)

(assert (=> bm!8221 (= call!8226 (contains!762 lt!40914 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86417 () Bool)

(assert (=> b!86417 (= e!56324 call!8222)))

(declare-fun b!86418 () Bool)

(declare-fun res!44419 () Bool)

(declare-fun e!56317 () Bool)

(assert (=> b!86418 (=> (not res!44419) (not e!56317))))

(assert (=> b!86418 (= res!44419 e!56316)))

(declare-fun c!14127 () Bool)

(assert (=> b!86418 (= c!14127 (not (= (bvand lt!40385 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86419 () Bool)

(assert (=> b!86419 (= e!56314 e!56322)))

(assert (=> b!86419 (= c!14123 (and (not (= (bvand lt!40385 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!40385 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86420 () Bool)

(assert (=> b!86420 (= e!56317 e!56325)))

(declare-fun c!14122 () Bool)

(assert (=> b!86420 (= c!14122 (not (= (bvand lt!40385 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8222 () Bool)

(assert (=> bm!8222 (= call!8222 call!8221)))

(declare-fun d!22533 () Bool)

(assert (=> d!22533 e!56317))

(declare-fun res!44418 () Bool)

(assert (=> d!22533 (=> (not res!44418) (not e!56317))))

(assert (=> d!22533 (= res!44418 (or (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))))

(declare-fun lt!40928 () ListLongMap!1487)

(assert (=> d!22533 (= lt!40914 lt!40928)))

(declare-fun lt!40910 () Unit!2533)

(assert (=> d!22533 (= lt!40910 e!56319)))

(declare-fun c!14124 () Bool)

(declare-fun e!56321 () Bool)

(assert (=> d!22533 (= c!14124 e!56321)))

(declare-fun res!44412 () Bool)

(assert (=> d!22533 (=> (not res!44412) (not e!56321))))

(assert (=> d!22533 (= res!44412 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22533 (= lt!40928 e!56314)))

(assert (=> d!22533 (= c!14125 (and (not (= (bvand lt!40385 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!40385 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22533 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22533 (= (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40385 (zeroValue!2230 newMap!16) lt!40164 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!40914)))

(declare-fun b!86413 () Bool)

(assert (=> b!86413 (= e!56316 (not call!8226))))

(declare-fun b!86421 () Bool)

(declare-fun lt!40918 () Unit!2533)

(assert (=> b!86421 (= e!56319 lt!40918)))

(declare-fun lt!40927 () ListLongMap!1487)

(assert (=> b!86421 (= lt!40927 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40385 (zeroValue!2230 newMap!16) lt!40164 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40911 () (_ BitVec 64))

(assert (=> b!86421 (= lt!40911 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40929 () (_ BitVec 64))

(assert (=> b!86421 (= lt!40929 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40921 () Unit!2533)

(assert (=> b!86421 (= lt!40921 (addStillContains!58 lt!40927 lt!40911 (zeroValue!2230 newMap!16) lt!40929))))

(assert (=> b!86421 (contains!762 (+!116 lt!40927 (tuple2!2233 lt!40911 (zeroValue!2230 newMap!16))) lt!40929)))

(declare-fun lt!40917 () Unit!2533)

(assert (=> b!86421 (= lt!40917 lt!40921)))

(declare-fun lt!40923 () ListLongMap!1487)

(assert (=> b!86421 (= lt!40923 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40385 (zeroValue!2230 newMap!16) lt!40164 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40926 () (_ BitVec 64))

(assert (=> b!86421 (= lt!40926 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40925 () (_ BitVec 64))

(assert (=> b!86421 (= lt!40925 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40919 () Unit!2533)

(assert (=> b!86421 (= lt!40919 (addApplyDifferent!58 lt!40923 lt!40926 lt!40164 lt!40925))))

(assert (=> b!86421 (= (apply!82 (+!116 lt!40923 (tuple2!2233 lt!40926 lt!40164)) lt!40925) (apply!82 lt!40923 lt!40925))))

(declare-fun lt!40930 () Unit!2533)

(assert (=> b!86421 (= lt!40930 lt!40919)))

(declare-fun lt!40916 () ListLongMap!1487)

(assert (=> b!86421 (= lt!40916 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40385 (zeroValue!2230 newMap!16) lt!40164 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40922 () (_ BitVec 64))

(assert (=> b!86421 (= lt!40922 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40913 () (_ BitVec 64))

(assert (=> b!86421 (= lt!40913 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40924 () Unit!2533)

(assert (=> b!86421 (= lt!40924 (addApplyDifferent!58 lt!40916 lt!40922 (zeroValue!2230 newMap!16) lt!40913))))

(assert (=> b!86421 (= (apply!82 (+!116 lt!40916 (tuple2!2233 lt!40922 (zeroValue!2230 newMap!16))) lt!40913) (apply!82 lt!40916 lt!40913))))

(declare-fun lt!40915 () Unit!2533)

(assert (=> b!86421 (= lt!40915 lt!40924)))

(declare-fun lt!40920 () ListLongMap!1487)

(assert (=> b!86421 (= lt!40920 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40385 (zeroValue!2230 newMap!16) lt!40164 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40931 () (_ BitVec 64))

(assert (=> b!86421 (= lt!40931 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40912 () (_ BitVec 64))

(assert (=> b!86421 (= lt!40912 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86421 (= lt!40918 (addApplyDifferent!58 lt!40920 lt!40931 lt!40164 lt!40912))))

(assert (=> b!86421 (= (apply!82 (+!116 lt!40920 (tuple2!2233 lt!40931 lt!40164)) lt!40912) (apply!82 lt!40920 lt!40912))))

(declare-fun b!86422 () Bool)

(declare-fun e!56315 () Bool)

(assert (=> b!86422 (= e!56315 (= (apply!82 lt!40914 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40164))))

(declare-fun b!86423 () Bool)

(assert (=> b!86423 (= e!56321 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86424 () Bool)

(assert (=> b!86424 (= e!56323 (= (apply!82 lt!40914 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86424 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_values!2321 newMap!16))))))

(assert (=> b!86424 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8223 () Bool)

(assert (=> bm!8223 (= call!8223 (contains!762 lt!40914 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86425 () Bool)

(assert (=> b!86425 (= e!56325 e!56315)))

(declare-fun res!44415 () Bool)

(assert (=> b!86425 (= res!44415 call!8223)))

(assert (=> b!86425 (=> (not res!44415) (not e!56315))))

(declare-fun b!86426 () Bool)

(declare-fun res!44413 () Bool)

(assert (=> b!86426 (=> (not res!44413) (not e!56317))))

(assert (=> b!86426 (= res!44413 e!56320)))

(declare-fun res!44411 () Bool)

(assert (=> b!86426 (=> res!44411 e!56320)))

(declare-fun e!56318 () Bool)

(assert (=> b!86426 (= res!44411 (not e!56318))))

(declare-fun res!44417 () Bool)

(assert (=> b!86426 (=> (not res!44417) (not e!56318))))

(assert (=> b!86426 (= res!44417 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8224 () Bool)

(assert (=> bm!8224 (= call!8224 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40385 (zeroValue!2230 newMap!16) lt!40164 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!86427 () Bool)

(assert (=> b!86427 (= e!56318 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86428 () Bool)

(assert (=> b!86428 (= e!56313 (= (apply!82 lt!40914 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(assert (= (and d!22533 c!14125) b!86416))

(assert (= (and d!22533 (not c!14125)) b!86419))

(assert (= (and b!86419 c!14123) b!86408))

(assert (= (and b!86419 (not c!14123)) b!86415))

(assert (= (and b!86415 c!14126) b!86417))

(assert (= (and b!86415 (not c!14126)) b!86409))

(assert (= (or b!86417 b!86409) bm!8219))

(assert (= (or b!86408 bm!8219) bm!8218))

(assert (= (or b!86408 b!86417) bm!8222))

(assert (= (or b!86416 bm!8218) bm!8224))

(assert (= (or b!86416 bm!8222) bm!8220))

(assert (= (and d!22533 res!44412) b!86423))

(assert (= (and d!22533 c!14124) b!86421))

(assert (= (and d!22533 (not c!14124)) b!86411))

(assert (= (and d!22533 res!44418) b!86426))

(assert (= (and b!86426 res!44417) b!86427))

(assert (= (and b!86426 (not res!44411)) b!86410))

(assert (= (and b!86410 res!44416) b!86424))

(assert (= (and b!86426 res!44413) b!86418))

(assert (= (and b!86418 c!14127) b!86412))

(assert (= (and b!86418 (not c!14127)) b!86413))

(assert (= (and b!86412 res!44414) b!86428))

(assert (= (or b!86412 b!86413) bm!8221))

(assert (= (and b!86418 res!44419) b!86420))

(assert (= (and b!86420 c!14122) b!86425))

(assert (= (and b!86420 (not c!14122)) b!86414))

(assert (= (and b!86425 res!44415) b!86422))

(assert (= (or b!86425 b!86414) bm!8223))

(declare-fun b_lambda!3829 () Bool)

(assert (=> (not b_lambda!3829) (not b!86424)))

(assert (=> b!86424 t!5286))

(declare-fun b_and!5201 () Bool)

(assert (= b_and!5197 (and (=> t!5286 result!2931) b_and!5201)))

(assert (=> b!86424 t!5288))

(declare-fun b_and!5203 () Bool)

(assert (= b_and!5199 (and (=> t!5288 result!2933) b_and!5203)))

(declare-fun m!91073 () Bool)

(assert (=> b!86422 m!91073))

(declare-fun m!91075 () Bool)

(assert (=> b!86421 m!91075))

(declare-fun m!91077 () Bool)

(assert (=> b!86421 m!91077))

(declare-fun m!91079 () Bool)

(assert (=> b!86421 m!91079))

(declare-fun m!91081 () Bool)

(assert (=> b!86421 m!91081))

(declare-fun m!91083 () Bool)

(assert (=> b!86421 m!91083))

(declare-fun m!91085 () Bool)

(assert (=> b!86421 m!91085))

(declare-fun m!91087 () Bool)

(assert (=> b!86421 m!91087))

(declare-fun m!91089 () Bool)

(assert (=> b!86421 m!91089))

(declare-fun m!91091 () Bool)

(assert (=> b!86421 m!91091))

(declare-fun m!91093 () Bool)

(assert (=> b!86421 m!91093))

(assert (=> b!86421 m!91089))

(assert (=> b!86421 m!89941))

(declare-fun m!91095 () Bool)

(assert (=> b!86421 m!91095))

(assert (=> b!86421 m!91083))

(declare-fun m!91097 () Bool)

(assert (=> b!86421 m!91097))

(assert (=> b!86421 m!91085))

(declare-fun m!91099 () Bool)

(assert (=> b!86421 m!91099))

(declare-fun m!91101 () Bool)

(assert (=> b!86421 m!91101))

(assert (=> b!86421 m!91075))

(declare-fun m!91103 () Bool)

(assert (=> b!86421 m!91103))

(declare-fun m!91105 () Bool)

(assert (=> b!86421 m!91105))

(declare-fun m!91107 () Bool)

(assert (=> b!86416 m!91107))

(declare-fun m!91109 () Bool)

(assert (=> b!86428 m!91109))

(declare-fun m!91111 () Bool)

(assert (=> bm!8221 m!91111))

(assert (=> b!86427 m!89941))

(assert (=> b!86427 m!89941))

(assert (=> b!86427 m!89961))

(assert (=> b!86424 m!89941))

(assert (=> b!86424 m!89941))

(declare-fun m!91113 () Bool)

(assert (=> b!86424 m!91113))

(assert (=> b!86424 m!89965))

(assert (=> b!86424 m!89967))

(assert (=> b!86424 m!89969))

(assert (=> b!86424 m!89967))

(assert (=> b!86424 m!89965))

(assert (=> bm!8224 m!91095))

(assert (=> d!22533 m!89885))

(declare-fun m!91115 () Bool)

(assert (=> bm!8220 m!91115))

(declare-fun m!91117 () Bool)

(assert (=> bm!8223 m!91117))

(assert (=> b!86410 m!89941))

(assert (=> b!86410 m!89941))

(declare-fun m!91119 () Bool)

(assert (=> b!86410 m!91119))

(assert (=> b!86423 m!89941))

(assert (=> b!86423 m!89941))

(assert (=> b!86423 m!89961))

(assert (=> d!22283 d!22533))

(declare-fun d!22535 () Bool)

(assert (=> d!22535 (= (+!116 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40385 (zeroValue!2230 newMap!16) lt!40164 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22535 true))

(declare-fun _$8!76 () Unit!2533)

(assert (=> d!22535 (= (choose!516 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40385 (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) lt!40164 (defaultEntry!2338 newMap!16)) _$8!76)))

(declare-fun bs!3635 () Bool)

(assert (= bs!3635 d!22535))

(assert (=> bs!3635 m!89683))

(assert (=> bs!3635 m!89683))

(assert (=> bs!3635 m!90373))

(assert (=> bs!3635 m!90377))

(assert (=> d!22283 d!22535))

(declare-fun d!22537 () Bool)

(declare-fun res!44420 () Bool)

(declare-fun e!56326 () Bool)

(assert (=> d!22537 (=> res!44420 e!56326)))

(assert (=> d!22537 (= res!44420 (and ((_ is Cons!1548) lt!40260) (= (_1!1126 (h!2139 lt!40260)) (_1!1126 lt!40163))))))

(assert (=> d!22537 (= (containsKey!143 lt!40260 (_1!1126 lt!40163)) e!56326)))

(declare-fun b!86429 () Bool)

(declare-fun e!56327 () Bool)

(assert (=> b!86429 (= e!56326 e!56327)))

(declare-fun res!44421 () Bool)

(assert (=> b!86429 (=> (not res!44421) (not e!56327))))

(assert (=> b!86429 (= res!44421 (and (or (not ((_ is Cons!1548) lt!40260)) (bvsle (_1!1126 (h!2139 lt!40260)) (_1!1126 lt!40163))) ((_ is Cons!1548) lt!40260) (bvslt (_1!1126 (h!2139 lt!40260)) (_1!1126 lt!40163))))))

(declare-fun b!86430 () Bool)

(assert (=> b!86430 (= e!56327 (containsKey!143 (t!5277 lt!40260) (_1!1126 lt!40163)))))

(assert (= (and d!22537 (not res!44420)) b!86429))

(assert (= (and b!86429 res!44421) b!86430))

(declare-fun m!91121 () Bool)

(assert (=> b!86430 m!91121))

(assert (=> b!86100 d!22537))

(declare-fun b!86431 () Bool)

(declare-fun e!56328 () Option!145)

(assert (=> b!86431 (= e!56328 (Some!144 (_2!1126 (h!2139 (t!5277 lt!40247)))))))

(declare-fun b!86433 () Bool)

(declare-fun e!56329 () Option!145)

(assert (=> b!86433 (= e!56329 (getValueByKey!139 (t!5277 (t!5277 lt!40247)) (_1!1126 lt!40172)))))

(declare-fun b!86432 () Bool)

(assert (=> b!86432 (= e!56328 e!56329)))

(declare-fun c!14129 () Bool)

(assert (=> b!86432 (= c!14129 (and ((_ is Cons!1548) (t!5277 lt!40247)) (not (= (_1!1126 (h!2139 (t!5277 lt!40247))) (_1!1126 lt!40172)))))))

(declare-fun d!22539 () Bool)

(declare-fun c!14128 () Bool)

(assert (=> d!22539 (= c!14128 (and ((_ is Cons!1548) (t!5277 lt!40247)) (= (_1!1126 (h!2139 (t!5277 lt!40247))) (_1!1126 lt!40172))))))

(assert (=> d!22539 (= (getValueByKey!139 (t!5277 lt!40247) (_1!1126 lt!40172)) e!56328)))

(declare-fun b!86434 () Bool)

(assert (=> b!86434 (= e!56329 None!143)))

(assert (= (and d!22539 c!14128) b!86431))

(assert (= (and d!22539 (not c!14128)) b!86432))

(assert (= (and b!86432 c!14129) b!86433))

(assert (= (and b!86432 (not c!14129)) b!86434))

(declare-fun m!91123 () Bool)

(assert (=> b!86433 m!91123))

(assert (=> b!86004 d!22539))

(declare-fun d!22541 () Bool)

(declare-fun res!44422 () Bool)

(declare-fun e!56330 () Bool)

(assert (=> d!22541 (=> res!44422 e!56330)))

(assert (=> d!22541 (= res!44422 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40177))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40177)))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (=> d!22541 (= (containsKey!143 (t!5277 (toList!759 lt!40177)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) e!56330)))

(declare-fun b!86435 () Bool)

(declare-fun e!56331 () Bool)

(assert (=> b!86435 (= e!56330 e!56331)))

(declare-fun res!44423 () Bool)

(assert (=> b!86435 (=> (not res!44423) (not e!56331))))

(assert (=> b!86435 (= res!44423 (and (or (not ((_ is Cons!1548) (t!5277 (toList!759 lt!40177)))) (bvsle (_1!1126 (h!2139 (t!5277 (toList!759 lt!40177)))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))) ((_ is Cons!1548) (t!5277 (toList!759 lt!40177))) (bvslt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40177)))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(declare-fun b!86436 () Bool)

(assert (=> b!86436 (= e!56331 (containsKey!143 (t!5277 (t!5277 (toList!759 lt!40177))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (= (and d!22541 (not res!44422)) b!86435))

(assert (= (and b!86435 res!44423) b!86436))

(assert (=> b!86436 m!89417))

(declare-fun m!91125 () Bool)

(assert (=> b!86436 m!91125))

(assert (=> b!85751 d!22541))

(assert (=> b!85953 d!22441))

(declare-fun d!22543 () Bool)

(declare-fun e!56333 () Bool)

(assert (=> d!22543 e!56333))

(declare-fun res!44424 () Bool)

(assert (=> d!22543 (=> res!44424 e!56333)))

(declare-fun lt!40934 () Bool)

(assert (=> d!22543 (= res!44424 (not lt!40934))))

(declare-fun lt!40935 () Bool)

(assert (=> d!22543 (= lt!40934 lt!40935)))

(declare-fun lt!40933 () Unit!2533)

(declare-fun e!56332 () Unit!2533)

(assert (=> d!22543 (= lt!40933 e!56332)))

(declare-fun c!14130 () Bool)

(assert (=> d!22543 (= c!14130 lt!40935)))

(assert (=> d!22543 (= lt!40935 (containsKey!143 (toList!759 lt!40613) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22543 (= (contains!762 lt!40613 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40934)))

(declare-fun b!86437 () Bool)

(declare-fun lt!40932 () Unit!2533)

(assert (=> b!86437 (= e!56332 lt!40932)))

(assert (=> b!86437 (= lt!40932 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40613) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> b!86437 (isDefined!93 (getValueByKey!139 (toList!759 lt!40613) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86438 () Bool)

(declare-fun Unit!2574 () Unit!2533)

(assert (=> b!86438 (= e!56332 Unit!2574)))

(declare-fun b!86439 () Bool)

(assert (=> b!86439 (= e!56333 (isDefined!93 (getValueByKey!139 (toList!759 lt!40613) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22543 c!14130) b!86437))

(assert (= (and d!22543 (not c!14130)) b!86438))

(assert (= (and d!22543 (not res!44424)) b!86439))

(declare-fun m!91127 () Bool)

(assert (=> d!22543 m!91127))

(declare-fun m!91129 () Bool)

(assert (=> b!86437 m!91129))

(assert (=> b!86437 m!90293))

(assert (=> b!86437 m!90293))

(declare-fun m!91131 () Bool)

(assert (=> b!86437 m!91131))

(assert (=> b!86439 m!90293))

(assert (=> b!86439 m!90293))

(assert (=> b!86439 m!91131))

(assert (=> d!22259 d!22543))

(declare-fun b!86440 () Bool)

(declare-fun e!56334 () Option!145)

(assert (=> b!86440 (= e!56334 (Some!144 (_2!1126 (h!2139 lt!40612))))))

(declare-fun b!86442 () Bool)

(declare-fun e!56335 () Option!145)

(assert (=> b!86442 (= e!56335 (getValueByKey!139 (t!5277 lt!40612) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86441 () Bool)

(assert (=> b!86441 (= e!56334 e!56335)))

(declare-fun c!14132 () Bool)

(assert (=> b!86441 (= c!14132 (and ((_ is Cons!1548) lt!40612) (not (= (_1!1126 (h!2139 lt!40612)) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14131 () Bool)

(declare-fun d!22545 () Bool)

(assert (=> d!22545 (= c!14131 (and ((_ is Cons!1548) lt!40612) (= (_1!1126 (h!2139 lt!40612)) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22545 (= (getValueByKey!139 lt!40612 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56334)))

(declare-fun b!86443 () Bool)

(assert (=> b!86443 (= e!56335 None!143)))

(assert (= (and d!22545 c!14131) b!86440))

(assert (= (and d!22545 (not c!14131)) b!86441))

(assert (= (and b!86441 c!14132) b!86442))

(assert (= (and b!86441 (not c!14132)) b!86443))

(declare-fun m!91133 () Bool)

(assert (=> b!86442 m!91133))

(assert (=> d!22259 d!22545))

(declare-fun d!22547 () Bool)

(assert (=> d!22547 (= (getValueByKey!139 lt!40612 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!40936 () Unit!2533)

(assert (=> d!22547 (= lt!40936 (choose!508 lt!40612 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun e!56336 () Bool)

(assert (=> d!22547 e!56336))

(declare-fun res!44425 () Bool)

(assert (=> d!22547 (=> (not res!44425) (not e!56336))))

(assert (=> d!22547 (= res!44425 (isStrictlySorted!293 lt!40612))))

(assert (=> d!22547 (= (lemmaContainsTupThenGetReturnValue!58 lt!40612 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40936)))

(declare-fun b!86444 () Bool)

(declare-fun res!44426 () Bool)

(assert (=> b!86444 (=> (not res!44426) (not e!56336))))

(assert (=> b!86444 (= res!44426 (containsKey!143 lt!40612 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86445 () Bool)

(assert (=> b!86445 (= e!56336 (contains!764 lt!40612 (tuple2!2233 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22547 res!44425) b!86444))

(assert (= (and b!86444 res!44426) b!86445))

(assert (=> d!22547 m!90287))

(declare-fun m!91135 () Bool)

(assert (=> d!22547 m!91135))

(declare-fun m!91137 () Bool)

(assert (=> d!22547 m!91137))

(declare-fun m!91139 () Bool)

(assert (=> b!86444 m!91139))

(declare-fun m!91141 () Bool)

(assert (=> b!86445 m!91141))

(assert (=> d!22259 d!22547))

(declare-fun e!56338 () List!1552)

(declare-fun c!14133 () Bool)

(declare-fun b!86446 () Bool)

(declare-fun c!14134 () Bool)

(assert (=> b!86446 (= e!56338 (ite c!14133 (t!5277 (toList!759 lt!40452)) (ite c!14134 (Cons!1548 (h!2139 (toList!759 lt!40452)) (t!5277 (toList!759 lt!40452))) Nil!1549)))))

(declare-fun e!56340 () Bool)

(declare-fun lt!40937 () List!1552)

(declare-fun b!86447 () Bool)

(assert (=> b!86447 (= e!56340 (contains!764 lt!40937 (tuple2!2233 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86448 () Bool)

(declare-fun e!56339 () List!1552)

(declare-fun e!56337 () List!1552)

(assert (=> b!86448 (= e!56339 e!56337)))

(assert (=> b!86448 (= c!14133 (and ((_ is Cons!1548) (toList!759 lt!40452)) (= (_1!1126 (h!2139 (toList!759 lt!40452))) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86449 () Bool)

(declare-fun res!44427 () Bool)

(assert (=> b!86449 (=> (not res!44427) (not e!56340))))

(assert (=> b!86449 (= res!44427 (containsKey!143 lt!40937 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun d!22549 () Bool)

(assert (=> d!22549 e!56340))

(declare-fun res!44428 () Bool)

(assert (=> d!22549 (=> (not res!44428) (not e!56340))))

(assert (=> d!22549 (= res!44428 (isStrictlySorted!293 lt!40937))))

(assert (=> d!22549 (= lt!40937 e!56339)))

(declare-fun c!14135 () Bool)

(assert (=> d!22549 (= c!14135 (and ((_ is Cons!1548) (toList!759 lt!40452)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40452))) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22549 (isStrictlySorted!293 (toList!759 lt!40452))))

(assert (=> d!22549 (= (insertStrictlySorted!60 (toList!759 lt!40452) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40937)))

(declare-fun call!8228 () List!1552)

(declare-fun bm!8225 () Bool)

(assert (=> bm!8225 (= call!8228 ($colon$colon!71 e!56338 (ite c!14135 (h!2139 (toList!759 lt!40452)) (tuple2!2233 (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14136 () Bool)

(assert (=> bm!8225 (= c!14136 c!14135)))

(declare-fun bm!8226 () Bool)

(declare-fun call!8230 () List!1552)

(declare-fun call!8229 () List!1552)

(assert (=> bm!8226 (= call!8230 call!8229)))

(declare-fun b!86450 () Bool)

(assert (=> b!86450 (= e!56339 call!8228)))

(declare-fun b!86451 () Bool)

(declare-fun e!56341 () List!1552)

(assert (=> b!86451 (= e!56341 call!8230)))

(declare-fun b!86452 () Bool)

(assert (=> b!86452 (= e!56337 call!8229)))

(declare-fun b!86453 () Bool)

(assert (=> b!86453 (= e!56338 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40452)) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86454 () Bool)

(assert (=> b!86454 (= e!56341 call!8230)))

(declare-fun b!86455 () Bool)

(assert (=> b!86455 (= c!14134 (and ((_ is Cons!1548) (toList!759 lt!40452)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40452))) (_1!1126 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> b!86455 (= e!56337 e!56341)))

(declare-fun bm!8227 () Bool)

(assert (=> bm!8227 (= call!8229 call!8228)))

(assert (= (and d!22549 c!14135) b!86450))

(assert (= (and d!22549 (not c!14135)) b!86448))

(assert (= (and b!86448 c!14133) b!86452))

(assert (= (and b!86448 (not c!14133)) b!86455))

(assert (= (and b!86455 c!14134) b!86454))

(assert (= (and b!86455 (not c!14134)) b!86451))

(assert (= (or b!86454 b!86451) bm!8226))

(assert (= (or b!86452 bm!8226) bm!8227))

(assert (= (or b!86450 bm!8227) bm!8225))

(assert (= (and bm!8225 c!14136) b!86453))

(assert (= (and bm!8225 (not c!14136)) b!86446))

(assert (= (and d!22549 res!44428) b!86449))

(assert (= (and b!86449 res!44427) b!86447))

(declare-fun m!91143 () Bool)

(assert (=> b!86449 m!91143))

(declare-fun m!91145 () Bool)

(assert (=> b!86453 m!91145))

(declare-fun m!91147 () Bool)

(assert (=> d!22549 m!91147))

(declare-fun m!91149 () Bool)

(assert (=> d!22549 m!91149))

(declare-fun m!91151 () Bool)

(assert (=> b!86447 m!91151))

(declare-fun m!91153 () Bool)

(assert (=> bm!8225 m!91153))

(assert (=> d!22259 d!22549))

(declare-fun d!22551 () Bool)

(declare-fun e!56342 () Bool)

(assert (=> d!22551 e!56342))

(declare-fun res!44429 () Bool)

(assert (=> d!22551 (=> (not res!44429) (not e!56342))))

(declare-fun lt!40939 () ListLongMap!1487)

(assert (=> d!22551 (= res!44429 (contains!762 lt!40939 (_1!1126 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16)))))))

(declare-fun lt!40938 () List!1552)

(assert (=> d!22551 (= lt!40939 (ListLongMap!1488 lt!40938))))

(declare-fun lt!40940 () Unit!2533)

(declare-fun lt!40941 () Unit!2533)

(assert (=> d!22551 (= lt!40940 lt!40941)))

(assert (=> d!22551 (= (getValueByKey!139 lt!40938 (_1!1126 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22551 (= lt!40941 (lemmaContainsTupThenGetReturnValue!58 lt!40938 (_1!1126 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22551 (= lt!40938 (insertStrictlySorted!60 (toList!759 lt!40506) (_1!1126 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22551 (= (+!116 lt!40506 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16))) lt!40939)))

(declare-fun b!86456 () Bool)

(declare-fun res!44430 () Bool)

(assert (=> b!86456 (=> (not res!44430) (not e!56342))))

(assert (=> b!86456 (= res!44430 (= (getValueByKey!139 (toList!759 lt!40939) (_1!1126 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16))))))))

(declare-fun b!86457 () Bool)

(assert (=> b!86457 (= e!56342 (contains!764 (toList!759 lt!40939) (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16))))))

(assert (= (and d!22551 res!44429) b!86456))

(assert (= (and b!86456 res!44430) b!86457))

(declare-fun m!91155 () Bool)

(assert (=> d!22551 m!91155))

(declare-fun m!91157 () Bool)

(assert (=> d!22551 m!91157))

(declare-fun m!91159 () Bool)

(assert (=> d!22551 m!91159))

(declare-fun m!91161 () Bool)

(assert (=> d!22551 m!91161))

(declare-fun m!91163 () Bool)

(assert (=> b!86456 m!91163))

(declare-fun m!91165 () Bool)

(assert (=> b!86457 m!91165))

(assert (=> b!85738 d!22551))

(declare-fun d!22553 () Bool)

(assert (=> d!22553 (= (apply!82 lt!40499 lt!40491) (get!1216 (getValueByKey!139 (toList!759 lt!40499) lt!40491)))))

(declare-fun bs!3636 () Bool)

(assert (= bs!3636 d!22553))

(declare-fun m!91167 () Bool)

(assert (=> bs!3636 m!91167))

(assert (=> bs!3636 m!91167))

(declare-fun m!91169 () Bool)

(assert (=> bs!3636 m!91169))

(assert (=> b!85738 d!22553))

(declare-fun d!22555 () Bool)

(declare-fun e!56343 () Bool)

(assert (=> d!22555 e!56343))

(declare-fun res!44431 () Bool)

(assert (=> d!22555 (=> (not res!44431) (not e!56343))))

(declare-fun lt!40943 () ListLongMap!1487)

(assert (=> d!22555 (= res!44431 (contains!762 lt!40943 (_1!1126 (tuple2!2233 lt!40510 (minValue!2230 newMap!16)))))))

(declare-fun lt!40942 () List!1552)

(assert (=> d!22555 (= lt!40943 (ListLongMap!1488 lt!40942))))

(declare-fun lt!40944 () Unit!2533)

(declare-fun lt!40945 () Unit!2533)

(assert (=> d!22555 (= lt!40944 lt!40945)))

(assert (=> d!22555 (= (getValueByKey!139 lt!40942 (_1!1126 (tuple2!2233 lt!40510 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40510 (minValue!2230 newMap!16)))))))

(assert (=> d!22555 (= lt!40945 (lemmaContainsTupThenGetReturnValue!58 lt!40942 (_1!1126 (tuple2!2233 lt!40510 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40510 (minValue!2230 newMap!16)))))))

(assert (=> d!22555 (= lt!40942 (insertStrictlySorted!60 (toList!759 lt!40499) (_1!1126 (tuple2!2233 lt!40510 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40510 (minValue!2230 newMap!16)))))))

(assert (=> d!22555 (= (+!116 lt!40499 (tuple2!2233 lt!40510 (minValue!2230 newMap!16))) lt!40943)))

(declare-fun b!86458 () Bool)

(declare-fun res!44432 () Bool)

(assert (=> b!86458 (=> (not res!44432) (not e!56343))))

(assert (=> b!86458 (= res!44432 (= (getValueByKey!139 (toList!759 lt!40943) (_1!1126 (tuple2!2233 lt!40510 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40510 (minValue!2230 newMap!16))))))))

(declare-fun b!86459 () Bool)

(assert (=> b!86459 (= e!56343 (contains!764 (toList!759 lt!40943) (tuple2!2233 lt!40510 (minValue!2230 newMap!16))))))

(assert (= (and d!22555 res!44431) b!86458))

(assert (= (and b!86458 res!44432) b!86459))

(declare-fun m!91171 () Bool)

(assert (=> d!22555 m!91171))

(declare-fun m!91173 () Bool)

(assert (=> d!22555 m!91173))

(declare-fun m!91175 () Bool)

(assert (=> d!22555 m!91175))

(declare-fun m!91177 () Bool)

(assert (=> d!22555 m!91177))

(declare-fun m!91179 () Bool)

(assert (=> b!86458 m!91179))

(declare-fun m!91181 () Bool)

(assert (=> b!86459 m!91181))

(assert (=> b!85738 d!22555))

(declare-fun d!22557 () Bool)

(declare-fun e!56345 () Bool)

(assert (=> d!22557 e!56345))

(declare-fun res!44433 () Bool)

(assert (=> d!22557 (=> res!44433 e!56345)))

(declare-fun lt!40948 () Bool)

(assert (=> d!22557 (= res!44433 (not lt!40948))))

(declare-fun lt!40949 () Bool)

(assert (=> d!22557 (= lt!40948 lt!40949)))

(declare-fun lt!40947 () Unit!2533)

(declare-fun e!56344 () Unit!2533)

(assert (=> d!22557 (= lt!40947 e!56344)))

(declare-fun c!14137 () Bool)

(assert (=> d!22557 (= c!14137 lt!40949)))

(assert (=> d!22557 (= lt!40949 (containsKey!143 (toList!759 (+!116 lt!40506 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16)))) lt!40508))))

(assert (=> d!22557 (= (contains!762 (+!116 lt!40506 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16))) lt!40508) lt!40948)))

(declare-fun b!86460 () Bool)

(declare-fun lt!40946 () Unit!2533)

(assert (=> b!86460 (= e!56344 lt!40946)))

(assert (=> b!86460 (= lt!40946 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (+!116 lt!40506 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16)))) lt!40508))))

(assert (=> b!86460 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40506 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16)))) lt!40508))))

(declare-fun b!86461 () Bool)

(declare-fun Unit!2575 () Unit!2533)

(assert (=> b!86461 (= e!56344 Unit!2575)))

(declare-fun b!86462 () Bool)

(assert (=> b!86462 (= e!56345 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40506 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16)))) lt!40508)))))

(assert (= (and d!22557 c!14137) b!86460))

(assert (= (and d!22557 (not c!14137)) b!86461))

(assert (= (and d!22557 (not res!44433)) b!86462))

(declare-fun m!91183 () Bool)

(assert (=> d!22557 m!91183))

(declare-fun m!91185 () Bool)

(assert (=> b!86460 m!91185))

(declare-fun m!91187 () Bool)

(assert (=> b!86460 m!91187))

(assert (=> b!86460 m!91187))

(declare-fun m!91189 () Bool)

(assert (=> b!86460 m!91189))

(assert (=> b!86462 m!91187))

(assert (=> b!86462 m!91187))

(assert (=> b!86462 m!91189))

(assert (=> b!85738 d!22557))

(declare-fun b!86463 () Bool)

(declare-fun e!56347 () Bool)

(declare-fun e!56348 () Bool)

(assert (=> b!86463 (= e!56347 e!56348)))

(declare-fun c!14141 () Bool)

(assert (=> b!86463 (= c!14141 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!86464 () Bool)

(declare-fun e!56346 () Bool)

(assert (=> b!86464 (= e!56346 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86464 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!86465 () Bool)

(declare-fun lt!40951 () Unit!2533)

(declare-fun lt!40953 () Unit!2533)

(assert (=> b!86465 (= lt!40951 lt!40953)))

(declare-fun lt!40952 () (_ BitVec 64))

(declare-fun lt!40950 () ListLongMap!1487)

(declare-fun lt!40955 () V!3027)

(declare-fun lt!40954 () (_ BitVec 64))

(assert (=> b!86465 (not (contains!762 (+!116 lt!40950 (tuple2!2233 lt!40954 lt!40955)) lt!40952))))

(assert (=> b!86465 (= lt!40953 (addStillNotContains!33 lt!40950 lt!40954 lt!40955 lt!40952))))

(assert (=> b!86465 (= lt!40952 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86465 (= lt!40955 (get!1212 (select (arr!1919 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86465 (= lt!40954 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!8231 () ListLongMap!1487)

(assert (=> b!86465 (= lt!40950 call!8231)))

(declare-fun e!56349 () ListLongMap!1487)

(assert (=> b!86465 (= e!56349 (+!116 call!8231 (tuple2!2233 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (get!1212 (select (arr!1919 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!86466 () Bool)

(declare-fun e!56351 () ListLongMap!1487)

(assert (=> b!86466 (= e!56351 (ListLongMap!1488 Nil!1549))))

(declare-fun b!86468 () Bool)

(declare-fun e!56352 () Bool)

(assert (=> b!86468 (= e!56347 e!56352)))

(assert (=> b!86468 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun res!44437 () Bool)

(declare-fun lt!40956 () ListLongMap!1487)

(assert (=> b!86468 (= res!44437 (contains!762 lt!40956 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86468 (=> (not res!44437) (not e!56352))))

(declare-fun b!86469 () Bool)

(assert (=> b!86469 (= e!56348 (isEmpty!340 lt!40956))))

(declare-fun b!86470 () Bool)

(declare-fun e!56350 () Bool)

(assert (=> b!86470 (= e!56350 e!56347)))

(declare-fun c!14140 () Bool)

(assert (=> b!86470 (= c!14140 e!56346)))

(declare-fun res!44435 () Bool)

(assert (=> b!86470 (=> (not res!44435) (not e!56346))))

(assert (=> b!86470 (= res!44435 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!86471 () Bool)

(assert (=> b!86471 (= e!56349 call!8231)))

(declare-fun b!86472 () Bool)

(assert (=> b!86472 (= e!56351 e!56349)))

(declare-fun c!14138 () Bool)

(assert (=> b!86472 (= c!14138 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86473 () Bool)

(assert (=> b!86473 (= e!56348 (= lt!40956 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16))))))

(declare-fun bm!8228 () Bool)

(assert (=> bm!8228 (= call!8231 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16)))))

(declare-fun b!86474 () Bool)

(assert (=> b!86474 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> b!86474 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_values!2321 newMap!16))))))

(assert (=> b!86474 (= e!56352 (= (apply!82 lt!40956 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!22559 () Bool)

(assert (=> d!22559 e!56350))

(declare-fun res!44434 () Bool)

(assert (=> d!22559 (=> (not res!44434) (not e!56350))))

(assert (=> d!22559 (= res!44434 (not (contains!762 lt!40956 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22559 (= lt!40956 e!56351)))

(declare-fun c!14139 () Bool)

(assert (=> d!22559 (= c!14139 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22559 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22559 (= (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!40956)))

(declare-fun b!86467 () Bool)

(declare-fun res!44436 () Bool)

(assert (=> b!86467 (=> (not res!44436) (not e!56350))))

(assert (=> b!86467 (= res!44436 (not (contains!762 lt!40956 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22559 c!14139) b!86466))

(assert (= (and d!22559 (not c!14139)) b!86472))

(assert (= (and b!86472 c!14138) b!86465))

(assert (= (and b!86472 (not c!14138)) b!86471))

(assert (= (or b!86465 b!86471) bm!8228))

(assert (= (and d!22559 res!44434) b!86467))

(assert (= (and b!86467 res!44436) b!86470))

(assert (= (and b!86470 res!44435) b!86464))

(assert (= (and b!86470 c!14140) b!86468))

(assert (= (and b!86470 (not c!14140)) b!86463))

(assert (= (and b!86468 res!44437) b!86474))

(assert (= (and b!86463 c!14141) b!86473))

(assert (= (and b!86463 (not c!14141)) b!86469))

(declare-fun b_lambda!3831 () Bool)

(assert (=> (not b_lambda!3831) (not b!86465)))

(assert (=> b!86465 t!5286))

(declare-fun b_and!5205 () Bool)

(assert (= b_and!5201 (and (=> t!5286 result!2931) b_and!5205)))

(assert (=> b!86465 t!5288))

(declare-fun b_and!5207 () Bool)

(assert (= b_and!5203 (and (=> t!5288 result!2933) b_and!5207)))

(declare-fun b_lambda!3833 () Bool)

(assert (=> (not b_lambda!3833) (not b!86474)))

(assert (=> b!86474 t!5286))

(declare-fun b_and!5209 () Bool)

(assert (= b_and!5205 (and (=> t!5286 result!2931) b_and!5209)))

(assert (=> b!86474 t!5288))

(declare-fun b_and!5211 () Bool)

(assert (= b_and!5207 (and (=> t!5288 result!2933) b_and!5211)))

(assert (=> b!86472 m!89941))

(assert (=> b!86472 m!89941))

(assert (=> b!86472 m!89961))

(assert (=> b!86464 m!89941))

(assert (=> b!86464 m!89941))

(assert (=> b!86464 m!89961))

(declare-fun m!91191 () Bool)

(assert (=> b!86473 m!91191))

(declare-fun m!91193 () Bool)

(assert (=> d!22559 m!91193))

(assert (=> d!22559 m!89885))

(assert (=> b!86468 m!89941))

(assert (=> b!86468 m!89941))

(declare-fun m!91195 () Bool)

(assert (=> b!86468 m!91195))

(assert (=> bm!8228 m!91191))

(declare-fun m!91197 () Bool)

(assert (=> b!86469 m!91197))

(assert (=> b!86465 m!89965))

(declare-fun m!91199 () Bool)

(assert (=> b!86465 m!91199))

(declare-fun m!91201 () Bool)

(assert (=> b!86465 m!91201))

(declare-fun m!91203 () Bool)

(assert (=> b!86465 m!91203))

(assert (=> b!86465 m!89941))

(assert (=> b!86465 m!89967))

(assert (=> b!86465 m!89965))

(assert (=> b!86465 m!89967))

(assert (=> b!86465 m!89969))

(assert (=> b!86465 m!91199))

(declare-fun m!91205 () Bool)

(assert (=> b!86465 m!91205))

(assert (=> b!86474 m!89941))

(declare-fun m!91207 () Bool)

(assert (=> b!86474 m!91207))

(assert (=> b!86474 m!89965))

(assert (=> b!86474 m!89965))

(assert (=> b!86474 m!89967))

(assert (=> b!86474 m!89969))

(assert (=> b!86474 m!89941))

(assert (=> b!86474 m!89967))

(declare-fun m!91209 () Bool)

(assert (=> b!86467 m!91209))

(assert (=> b!85738 d!22559))

(declare-fun d!22561 () Bool)

(declare-fun e!56353 () Bool)

(assert (=> d!22561 e!56353))

(declare-fun res!44438 () Bool)

(assert (=> d!22561 (=> (not res!44438) (not e!56353))))

(declare-fun lt!40958 () ListLongMap!1487)

(assert (=> d!22561 (= res!44438 (contains!762 lt!40958 (_1!1126 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16)))))))

(declare-fun lt!40957 () List!1552)

(assert (=> d!22561 (= lt!40958 (ListLongMap!1488 lt!40957))))

(declare-fun lt!40959 () Unit!2533)

(declare-fun lt!40960 () Unit!2533)

(assert (=> d!22561 (= lt!40959 lt!40960)))

(assert (=> d!22561 (= (getValueByKey!139 lt!40957 (_1!1126 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22561 (= lt!40960 (lemmaContainsTupThenGetReturnValue!58 lt!40957 (_1!1126 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22561 (= lt!40957 (insertStrictlySorted!60 (toList!759 lt!40495) (_1!1126 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22561 (= (+!116 lt!40495 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16))) lt!40958)))

(declare-fun b!86475 () Bool)

(declare-fun res!44439 () Bool)

(assert (=> b!86475 (=> (not res!44439) (not e!56353))))

(assert (=> b!86475 (= res!44439 (= (getValueByKey!139 (toList!759 lt!40958) (_1!1126 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16))))))))

(declare-fun b!86476 () Bool)

(assert (=> b!86476 (= e!56353 (contains!764 (toList!759 lt!40958) (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16))))))

(assert (= (and d!22561 res!44438) b!86475))

(assert (= (and b!86475 res!44439) b!86476))

(declare-fun m!91211 () Bool)

(assert (=> d!22561 m!91211))

(declare-fun m!91213 () Bool)

(assert (=> d!22561 m!91213))

(declare-fun m!91215 () Bool)

(assert (=> d!22561 m!91215))

(declare-fun m!91217 () Bool)

(assert (=> d!22561 m!91217))

(declare-fun m!91219 () Bool)

(assert (=> b!86475 m!91219))

(declare-fun m!91221 () Bool)

(assert (=> b!86476 m!91221))

(assert (=> b!85738 d!22561))

(declare-fun d!22563 () Bool)

(assert (=> d!22563 (= (apply!82 (+!116 lt!40502 (tuple2!2233 lt!40505 (minValue!2230 newMap!16))) lt!40504) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40502 (tuple2!2233 lt!40505 (minValue!2230 newMap!16)))) lt!40504)))))

(declare-fun bs!3637 () Bool)

(assert (= bs!3637 d!22563))

(declare-fun m!91223 () Bool)

(assert (=> bs!3637 m!91223))

(assert (=> bs!3637 m!91223))

(declare-fun m!91225 () Bool)

(assert (=> bs!3637 m!91225))

(assert (=> b!85738 d!22563))

(declare-fun d!22565 () Bool)

(assert (=> d!22565 (= (apply!82 (+!116 lt!40495 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16))) lt!40492) (apply!82 lt!40495 lt!40492))))

(declare-fun lt!40961 () Unit!2533)

(assert (=> d!22565 (= lt!40961 (choose!515 lt!40495 lt!40501 (zeroValue!2230 newMap!16) lt!40492))))

(declare-fun e!56354 () Bool)

(assert (=> d!22565 e!56354))

(declare-fun res!44440 () Bool)

(assert (=> d!22565 (=> (not res!44440) (not e!56354))))

(assert (=> d!22565 (= res!44440 (contains!762 lt!40495 lt!40492))))

(assert (=> d!22565 (= (addApplyDifferent!58 lt!40495 lt!40501 (zeroValue!2230 newMap!16) lt!40492) lt!40961)))

(declare-fun b!86477 () Bool)

(assert (=> b!86477 (= e!56354 (not (= lt!40492 lt!40501)))))

(assert (= (and d!22565 res!44440) b!86477))

(declare-fun m!91227 () Bool)

(assert (=> d!22565 m!91227))

(assert (=> d!22565 m!89935))

(declare-fun m!91229 () Bool)

(assert (=> d!22565 m!91229))

(assert (=> d!22565 m!89927))

(assert (=> d!22565 m!89935))

(assert (=> d!22565 m!89937))

(assert (=> b!85738 d!22565))

(declare-fun d!22567 () Bool)

(assert (=> d!22567 (contains!762 (+!116 lt!40506 (tuple2!2233 lt!40490 (zeroValue!2230 newMap!16))) lt!40508)))

(declare-fun lt!40962 () Unit!2533)

(assert (=> d!22567 (= lt!40962 (choose!514 lt!40506 lt!40490 (zeroValue!2230 newMap!16) lt!40508))))

(assert (=> d!22567 (contains!762 lt!40506 lt!40508)))

(assert (=> d!22567 (= (addStillContains!58 lt!40506 lt!40490 (zeroValue!2230 newMap!16) lt!40508) lt!40962)))

(declare-fun bs!3638 () Bool)

(assert (= bs!3638 d!22567))

(assert (=> bs!3638 m!89921))

(assert (=> bs!3638 m!89921))

(assert (=> bs!3638 m!89923))

(declare-fun m!91231 () Bool)

(assert (=> bs!3638 m!91231))

(declare-fun m!91233 () Bool)

(assert (=> bs!3638 m!91233))

(assert (=> b!85738 d!22567))

(declare-fun d!22569 () Bool)

(assert (=> d!22569 (= (apply!82 (+!116 lt!40499 (tuple2!2233 lt!40510 (minValue!2230 newMap!16))) lt!40491) (apply!82 lt!40499 lt!40491))))

(declare-fun lt!40963 () Unit!2533)

(assert (=> d!22569 (= lt!40963 (choose!515 lt!40499 lt!40510 (minValue!2230 newMap!16) lt!40491))))

(declare-fun e!56355 () Bool)

(assert (=> d!22569 e!56355))

(declare-fun res!44441 () Bool)

(assert (=> d!22569 (=> (not res!44441) (not e!56355))))

(assert (=> d!22569 (= res!44441 (contains!762 lt!40499 lt!40491))))

(assert (=> d!22569 (= (addApplyDifferent!58 lt!40499 lt!40510 (minValue!2230 newMap!16) lt!40491) lt!40963)))

(declare-fun b!86478 () Bool)

(assert (=> b!86478 (= e!56355 (not (= lt!40491 lt!40510)))))

(assert (= (and d!22569 res!44441) b!86478))

(declare-fun m!91235 () Bool)

(assert (=> d!22569 m!91235))

(assert (=> d!22569 m!89929))

(declare-fun m!91237 () Bool)

(assert (=> d!22569 m!91237))

(assert (=> d!22569 m!89925))

(assert (=> d!22569 m!89929))

(assert (=> d!22569 m!89945))

(assert (=> b!85738 d!22569))

(declare-fun d!22571 () Bool)

(assert (=> d!22571 (= (apply!82 lt!40502 lt!40504) (get!1216 (getValueByKey!139 (toList!759 lt!40502) lt!40504)))))

(declare-fun bs!3639 () Bool)

(assert (= bs!3639 d!22571))

(declare-fun m!91239 () Bool)

(assert (=> bs!3639 m!91239))

(assert (=> bs!3639 m!91239))

(declare-fun m!91241 () Bool)

(assert (=> bs!3639 m!91241))

(assert (=> b!85738 d!22571))

(declare-fun d!22573 () Bool)

(assert (=> d!22573 (= (apply!82 (+!116 lt!40495 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16))) lt!40492) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40495 (tuple2!2233 lt!40501 (zeroValue!2230 newMap!16)))) lt!40492)))))

(declare-fun bs!3640 () Bool)

(assert (= bs!3640 d!22573))

(declare-fun m!91243 () Bool)

(assert (=> bs!3640 m!91243))

(assert (=> bs!3640 m!91243))

(declare-fun m!91245 () Bool)

(assert (=> bs!3640 m!91245))

(assert (=> b!85738 d!22573))

(declare-fun d!22575 () Bool)

(assert (=> d!22575 (= (apply!82 (+!116 lt!40499 (tuple2!2233 lt!40510 (minValue!2230 newMap!16))) lt!40491) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40499 (tuple2!2233 lt!40510 (minValue!2230 newMap!16)))) lt!40491)))))

(declare-fun bs!3641 () Bool)

(assert (= bs!3641 d!22575))

(declare-fun m!91247 () Bool)

(assert (=> bs!3641 m!91247))

(assert (=> bs!3641 m!91247))

(declare-fun m!91249 () Bool)

(assert (=> bs!3641 m!91249))

(assert (=> b!85738 d!22575))

(declare-fun d!22577 () Bool)

(declare-fun e!56356 () Bool)

(assert (=> d!22577 e!56356))

(declare-fun res!44442 () Bool)

(assert (=> d!22577 (=> (not res!44442) (not e!56356))))

(declare-fun lt!40965 () ListLongMap!1487)

(assert (=> d!22577 (= res!44442 (contains!762 lt!40965 (_1!1126 (tuple2!2233 lt!40505 (minValue!2230 newMap!16)))))))

(declare-fun lt!40964 () List!1552)

(assert (=> d!22577 (= lt!40965 (ListLongMap!1488 lt!40964))))

(declare-fun lt!40966 () Unit!2533)

(declare-fun lt!40967 () Unit!2533)

(assert (=> d!22577 (= lt!40966 lt!40967)))

(assert (=> d!22577 (= (getValueByKey!139 lt!40964 (_1!1126 (tuple2!2233 lt!40505 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40505 (minValue!2230 newMap!16)))))))

(assert (=> d!22577 (= lt!40967 (lemmaContainsTupThenGetReturnValue!58 lt!40964 (_1!1126 (tuple2!2233 lt!40505 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40505 (minValue!2230 newMap!16)))))))

(assert (=> d!22577 (= lt!40964 (insertStrictlySorted!60 (toList!759 lt!40502) (_1!1126 (tuple2!2233 lt!40505 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40505 (minValue!2230 newMap!16)))))))

(assert (=> d!22577 (= (+!116 lt!40502 (tuple2!2233 lt!40505 (minValue!2230 newMap!16))) lt!40965)))

(declare-fun b!86479 () Bool)

(declare-fun res!44443 () Bool)

(assert (=> b!86479 (=> (not res!44443) (not e!56356))))

(assert (=> b!86479 (= res!44443 (= (getValueByKey!139 (toList!759 lt!40965) (_1!1126 (tuple2!2233 lt!40505 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40505 (minValue!2230 newMap!16))))))))

(declare-fun b!86480 () Bool)

(assert (=> b!86480 (= e!56356 (contains!764 (toList!759 lt!40965) (tuple2!2233 lt!40505 (minValue!2230 newMap!16))))))

(assert (= (and d!22577 res!44442) b!86479))

(assert (= (and b!86479 res!44443) b!86480))

(declare-fun m!91251 () Bool)

(assert (=> d!22577 m!91251))

(declare-fun m!91253 () Bool)

(assert (=> d!22577 m!91253))

(declare-fun m!91255 () Bool)

(assert (=> d!22577 m!91255))

(declare-fun m!91257 () Bool)

(assert (=> d!22577 m!91257))

(declare-fun m!91259 () Bool)

(assert (=> b!86479 m!91259))

(declare-fun m!91261 () Bool)

(assert (=> b!86480 m!91261))

(assert (=> b!85738 d!22577))

(declare-fun d!22579 () Bool)

(assert (=> d!22579 (= (apply!82 (+!116 lt!40502 (tuple2!2233 lt!40505 (minValue!2230 newMap!16))) lt!40504) (apply!82 lt!40502 lt!40504))))

(declare-fun lt!40968 () Unit!2533)

(assert (=> d!22579 (= lt!40968 (choose!515 lt!40502 lt!40505 (minValue!2230 newMap!16) lt!40504))))

(declare-fun e!56357 () Bool)

(assert (=> d!22579 e!56357))

(declare-fun res!44444 () Bool)

(assert (=> d!22579 (=> (not res!44444) (not e!56357))))

(assert (=> d!22579 (= res!44444 (contains!762 lt!40502 lt!40504))))

(assert (=> d!22579 (= (addApplyDifferent!58 lt!40502 lt!40505 (minValue!2230 newMap!16) lt!40504) lt!40968)))

(declare-fun b!86481 () Bool)

(assert (=> b!86481 (= e!56357 (not (= lt!40504 lt!40505)))))

(assert (= (and d!22579 res!44444) b!86481))

(declare-fun m!91263 () Bool)

(assert (=> d!22579 m!91263))

(assert (=> d!22579 m!89931))

(declare-fun m!91265 () Bool)

(assert (=> d!22579 m!91265))

(assert (=> d!22579 m!89951))

(assert (=> d!22579 m!89931))

(assert (=> d!22579 m!89947))

(assert (=> b!85738 d!22579))

(declare-fun d!22581 () Bool)

(assert (=> d!22581 (= (apply!82 lt!40495 lt!40492) (get!1216 (getValueByKey!139 (toList!759 lt!40495) lt!40492)))))

(declare-fun bs!3642 () Bool)

(assert (= bs!3642 d!22581))

(declare-fun m!91267 () Bool)

(assert (=> bs!3642 m!91267))

(assert (=> bs!3642 m!91267))

(declare-fun m!91269 () Bool)

(assert (=> bs!3642 m!91269))

(assert (=> b!85738 d!22581))

(declare-fun d!22583 () Bool)

(assert (=> d!22583 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3643 () Bool)

(assert (= bs!3643 d!22583))

(assert (=> bs!3643 m!90151))

(declare-fun m!91271 () Bool)

(assert (=> bs!3643 m!91271))

(assert (=> b!85844 d!22583))

(declare-fun b!86482 () Bool)

(declare-fun e!56358 () Option!145)

(assert (=> b!86482 (= e!56358 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40284)))))))

(declare-fun b!86484 () Bool)

(declare-fun e!56359 () Option!145)

(assert (=> b!86484 (= e!56359 (getValueByKey!139 (t!5277 (toList!759 lt!40284)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86483 () Bool)

(assert (=> b!86483 (= e!56358 e!56359)))

(declare-fun c!14143 () Bool)

(assert (=> b!86483 (= c!14143 (and ((_ is Cons!1548) (toList!759 lt!40284)) (not (= (_1!1126 (h!2139 (toList!759 lt!40284))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!22585 () Bool)

(declare-fun c!14142 () Bool)

(assert (=> d!22585 (= c!14142 (and ((_ is Cons!1548) (toList!759 lt!40284)) (= (_1!1126 (h!2139 (toList!759 lt!40284))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22585 (= (getValueByKey!139 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000) e!56358)))

(declare-fun b!86485 () Bool)

(assert (=> b!86485 (= e!56359 None!143)))

(assert (= (and d!22585 c!14142) b!86482))

(assert (= (and d!22585 (not c!14142)) b!86483))

(assert (= (and b!86483 c!14143) b!86484))

(assert (= (and b!86483 (not c!14143)) b!86485))

(declare-fun m!91273 () Bool)

(assert (=> b!86484 m!91273))

(assert (=> b!85844 d!22585))

(declare-fun d!22587 () Bool)

(declare-fun e!56361 () Bool)

(assert (=> d!22587 e!56361))

(declare-fun res!44445 () Bool)

(assert (=> d!22587 (=> res!44445 e!56361)))

(declare-fun lt!40971 () Bool)

(assert (=> d!22587 (= res!44445 (not lt!40971))))

(declare-fun lt!40972 () Bool)

(assert (=> d!22587 (= lt!40971 lt!40972)))

(declare-fun lt!40970 () Unit!2533)

(declare-fun e!56360 () Unit!2533)

(assert (=> d!22587 (= lt!40970 e!56360)))

(declare-fun c!14144 () Bool)

(assert (=> d!22587 (= c!14144 lt!40972)))

(assert (=> d!22587 (= lt!40972 (containsKey!143 (toList!759 lt!40546) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22587 (= (contains!762 lt!40546 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!40971)))

(declare-fun b!86486 () Bool)

(declare-fun lt!40969 () Unit!2533)

(assert (=> b!86486 (= e!56360 lt!40969)))

(assert (=> b!86486 (= lt!40969 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40546) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> b!86486 (isDefined!93 (getValueByKey!139 (toList!759 lt!40546) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86487 () Bool)

(declare-fun Unit!2576 () Unit!2533)

(assert (=> b!86487 (= e!56360 Unit!2576)))

(declare-fun b!86488 () Bool)

(assert (=> b!86488 (= e!56361 (isDefined!93 (getValueByKey!139 (toList!759 lt!40546) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (= (and d!22587 c!14144) b!86486))

(assert (= (and d!22587 (not c!14144)) b!86487))

(assert (= (and d!22587 (not res!44445)) b!86488))

(declare-fun m!91275 () Bool)

(assert (=> d!22587 m!91275))

(declare-fun m!91277 () Bool)

(assert (=> b!86486 m!91277))

(assert (=> b!86486 m!90075))

(assert (=> b!86486 m!90075))

(declare-fun m!91279 () Bool)

(assert (=> b!86486 m!91279))

(assert (=> b!86488 m!90075))

(assert (=> b!86488 m!90075))

(assert (=> b!86488 m!91279))

(assert (=> d!22187 d!22587))

(declare-fun b!86489 () Bool)

(declare-fun e!56362 () Option!145)

(assert (=> b!86489 (= e!56362 (Some!144 (_2!1126 (h!2139 lt!40545))))))

(declare-fun b!86491 () Bool)

(declare-fun e!56363 () Option!145)

(assert (=> b!86491 (= e!56363 (getValueByKey!139 (t!5277 lt!40545) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86490 () Bool)

(assert (=> b!86490 (= e!56362 e!56363)))

(declare-fun c!14146 () Bool)

(assert (=> b!86490 (= c!14146 (and ((_ is Cons!1548) lt!40545) (not (= (_1!1126 (h!2139 lt!40545)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun c!14145 () Bool)

(declare-fun d!22589 () Bool)

(assert (=> d!22589 (= c!14145 (and ((_ is Cons!1548) lt!40545) (= (_1!1126 (h!2139 lt!40545)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22589 (= (getValueByKey!139 lt!40545 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) e!56362)))

(declare-fun b!86492 () Bool)

(assert (=> b!86492 (= e!56363 None!143)))

(assert (= (and d!22589 c!14145) b!86489))

(assert (= (and d!22589 (not c!14145)) b!86490))

(assert (= (and b!86490 c!14146) b!86491))

(assert (= (and b!86490 (not c!14146)) b!86492))

(declare-fun m!91281 () Bool)

(assert (=> b!86491 m!91281))

(assert (=> d!22187 d!22589))

(declare-fun d!22591 () Bool)

(assert (=> d!22591 (= (getValueByKey!139 lt!40545 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!40973 () Unit!2533)

(assert (=> d!22591 (= lt!40973 (choose!508 lt!40545 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun e!56364 () Bool)

(assert (=> d!22591 e!56364))

(declare-fun res!44446 () Bool)

(assert (=> d!22591 (=> (not res!44446) (not e!56364))))

(assert (=> d!22591 (= res!44446 (isStrictlySorted!293 lt!40545))))

(assert (=> d!22591 (= (lemmaContainsTupThenGetReturnValue!58 lt!40545 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!40973)))

(declare-fun b!86493 () Bool)

(declare-fun res!44447 () Bool)

(assert (=> b!86493 (=> (not res!44447) (not e!56364))))

(assert (=> b!86493 (= res!44447 (containsKey!143 lt!40545 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86494 () Bool)

(assert (=> b!86494 (= e!56364 (contains!764 lt!40545 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (= (and d!22591 res!44446) b!86493))

(assert (= (and b!86493 res!44447) b!86494))

(assert (=> d!22591 m!90069))

(declare-fun m!91283 () Bool)

(assert (=> d!22591 m!91283))

(declare-fun m!91285 () Bool)

(assert (=> d!22591 m!91285))

(declare-fun m!91287 () Bool)

(assert (=> b!86493 m!91287))

(declare-fun m!91289 () Bool)

(assert (=> b!86494 m!91289))

(assert (=> d!22187 d!22591))

(declare-fun c!14147 () Bool)

(declare-fun b!86495 () Bool)

(declare-fun c!14148 () Bool)

(declare-fun e!56366 () List!1552)

(assert (=> b!86495 (= e!56366 (ite c!14147 (t!5277 (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (ite c!14148 (Cons!1548 (h!2139 (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (t!5277 (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))) Nil!1549)))))

(declare-fun lt!40974 () List!1552)

(declare-fun b!86496 () Bool)

(declare-fun e!56368 () Bool)

(assert (=> b!86496 (= e!56368 (contains!764 lt!40974 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86497 () Bool)

(declare-fun e!56367 () List!1552)

(declare-fun e!56365 () List!1552)

(assert (=> b!86497 (= e!56367 e!56365)))

(assert (=> b!86497 (= c!14147 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86498 () Bool)

(declare-fun res!44448 () Bool)

(assert (=> b!86498 (=> (not res!44448) (not e!56368))))

(assert (=> b!86498 (= res!44448 (containsKey!143 lt!40974 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun d!22593 () Bool)

(assert (=> d!22593 e!56368))

(declare-fun res!44449 () Bool)

(assert (=> d!22593 (=> (not res!44449) (not e!56368))))

(assert (=> d!22593 (= res!44449 (isStrictlySorted!293 lt!40974))))

(assert (=> d!22593 (= lt!40974 e!56367)))

(declare-fun c!14149 () Bool)

(assert (=> d!22593 (= c!14149 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (bvslt (_1!1126 (h!2139 (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22593 (isStrictlySorted!293 (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22593 (= (insertStrictlySorted!60 (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!40974)))

(declare-fun call!8232 () List!1552)

(declare-fun bm!8229 () Bool)

(assert (=> bm!8229 (= call!8232 ($colon$colon!71 e!56366 (ite c!14149 (h!2139 (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun c!14150 () Bool)

(assert (=> bm!8229 (= c!14150 c!14149)))

(declare-fun bm!8230 () Bool)

(declare-fun call!8234 () List!1552)

(declare-fun call!8233 () List!1552)

(assert (=> bm!8230 (= call!8234 call!8233)))

(declare-fun b!86499 () Bool)

(assert (=> b!86499 (= e!56367 call!8232)))

(declare-fun b!86500 () Bool)

(declare-fun e!56369 () List!1552)

(assert (=> b!86500 (= e!56369 call!8234)))

(declare-fun b!86501 () Bool)

(assert (=> b!86501 (= e!56365 call!8233)))

(declare-fun b!86502 () Bool)

(assert (=> b!86502 (= e!56366 (insertStrictlySorted!60 (t!5277 (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86503 () Bool)

(assert (=> b!86503 (= e!56369 call!8234)))

(declare-fun b!86504 () Bool)

(assert (=> b!86504 (= c!14148 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (bvsgt (_1!1126 (h!2139 (toList!759 (+!116 lt!40169 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> b!86504 (= e!56365 e!56369)))

(declare-fun bm!8231 () Bool)

(assert (=> bm!8231 (= call!8233 call!8232)))

(assert (= (and d!22593 c!14149) b!86499))

(assert (= (and d!22593 (not c!14149)) b!86497))

(assert (= (and b!86497 c!14147) b!86501))

(assert (= (and b!86497 (not c!14147)) b!86504))

(assert (= (and b!86504 c!14148) b!86503))

(assert (= (and b!86504 (not c!14148)) b!86500))

(assert (= (or b!86503 b!86500) bm!8230))

(assert (= (or b!86501 bm!8230) bm!8231))

(assert (= (or b!86499 bm!8231) bm!8229))

(assert (= (and bm!8229 c!14150) b!86502))

(assert (= (and bm!8229 (not c!14150)) b!86495))

(assert (= (and d!22593 res!44449) b!86498))

(assert (= (and b!86498 res!44448) b!86496))

(declare-fun m!91291 () Bool)

(assert (=> b!86498 m!91291))

(declare-fun m!91293 () Bool)

(assert (=> b!86502 m!91293))

(declare-fun m!91295 () Bool)

(assert (=> d!22593 m!91295))

(declare-fun m!91297 () Bool)

(assert (=> d!22593 m!91297))

(declare-fun m!91299 () Bool)

(assert (=> b!86496 m!91299))

(declare-fun m!91301 () Bool)

(assert (=> bm!8229 m!91301))

(assert (=> d!22187 d!22593))

(declare-fun lt!40975 () Bool)

(declare-fun d!22595 () Bool)

(assert (=> d!22595 (= lt!40975 (select (content!88 (toList!759 lt!40638)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun e!56370 () Bool)

(assert (=> d!22595 (= lt!40975 e!56370)))

(declare-fun res!44451 () Bool)

(assert (=> d!22595 (=> (not res!44451) (not e!56370))))

(assert (=> d!22595 (= res!44451 ((_ is Cons!1548) (toList!759 lt!40638)))))

(assert (=> d!22595 (= (contains!764 (toList!759 lt!40638) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!40975)))

(declare-fun b!86505 () Bool)

(declare-fun e!56371 () Bool)

(assert (=> b!86505 (= e!56370 e!56371)))

(declare-fun res!44450 () Bool)

(assert (=> b!86505 (=> res!44450 e!56371)))

(assert (=> b!86505 (= res!44450 (= (h!2139 (toList!759 lt!40638)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun b!86506 () Bool)

(assert (=> b!86506 (= e!56371 (contains!764 (t!5277 (toList!759 lt!40638)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!22595 res!44451) b!86505))

(assert (= (and b!86505 (not res!44450)) b!86506))

(declare-fun m!91303 () Bool)

(assert (=> d!22595 m!91303))

(declare-fun m!91305 () Bool)

(assert (=> d!22595 m!91305))

(declare-fun m!91307 () Bool)

(assert (=> b!86506 m!91307))

(assert (=> b!85938 d!22595))

(declare-fun d!22597 () Bool)

(assert (=> d!22597 (= (isEmpty!342 (getValueByKey!139 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))) (not ((_ is Some!144) (getValueByKey!139 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))))

(assert (=> d!22353 d!22597))

(declare-fun d!22599 () Bool)

(assert (=> d!22599 (= (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40442)) (v!2652 (getValueByKey!139 (toList!759 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40442)))))

(assert (=> d!22255 d!22599))

(declare-fun e!56372 () Option!145)

(declare-fun b!86507 () Bool)

(assert (=> b!86507 (= e!56372 (Some!144 (_2!1126 (h!2139 (toList!759 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))))

(declare-fun b!86509 () Bool)

(declare-fun e!56373 () Option!145)

(assert (=> b!86509 (= e!56373 (getValueByKey!139 (t!5277 (toList!759 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) lt!40442))))

(declare-fun b!86508 () Bool)

(assert (=> b!86508 (= e!56372 e!56373)))

(declare-fun c!14152 () Bool)

(assert (=> b!86508 (= c!14152 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (not (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) lt!40442))))))

(declare-fun c!14151 () Bool)

(declare-fun d!22601 () Bool)

(assert (=> d!22601 (= c!14151 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) lt!40442)))))

(assert (=> d!22601 (= (getValueByKey!139 (toList!759 (+!116 lt!40445 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40442) e!56372)))

(declare-fun b!86510 () Bool)

(assert (=> b!86510 (= e!56373 None!143)))

(assert (= (and d!22601 c!14151) b!86507))

(assert (= (and d!22601 (not c!14151)) b!86508))

(assert (= (and b!86508 c!14152) b!86509))

(assert (= (and b!86508 (not c!14152)) b!86510))

(declare-fun m!91309 () Bool)

(assert (=> b!86509 m!91309))

(assert (=> d!22255 d!22601))

(declare-fun d!22603 () Bool)

(declare-fun res!44452 () Bool)

(declare-fun e!56374 () Bool)

(assert (=> d!22603 (=> res!44452 e!56374)))

(assert (=> d!22603 (= res!44452 (and ((_ is Cons!1548) lt!40790) (= (_1!1126 (h!2139 lt!40790)) (_1!1126 lt!40172))))))

(assert (=> d!22603 (= (containsKey!143 lt!40790 (_1!1126 lt!40172)) e!56374)))

(declare-fun b!86511 () Bool)

(declare-fun e!56375 () Bool)

(assert (=> b!86511 (= e!56374 e!56375)))

(declare-fun res!44453 () Bool)

(assert (=> b!86511 (=> (not res!44453) (not e!56375))))

(assert (=> b!86511 (= res!44453 (and (or (not ((_ is Cons!1548) lt!40790)) (bvsle (_1!1126 (h!2139 lt!40790)) (_1!1126 lt!40172))) ((_ is Cons!1548) lt!40790) (bvslt (_1!1126 (h!2139 lt!40790)) (_1!1126 lt!40172))))))

(declare-fun b!86512 () Bool)

(assert (=> b!86512 (= e!56375 (containsKey!143 (t!5277 lt!40790) (_1!1126 lt!40172)))))

(assert (= (and d!22603 (not res!44452)) b!86511))

(assert (= (and b!86511 res!44453) b!86512))

(declare-fun m!91311 () Bool)

(assert (=> b!86512 m!91311))

(assert (=> b!86086 d!22603))

(declare-fun d!22605 () Bool)

(assert (=> d!22605 (isDefined!93 (getValueByKey!139 (toList!759 lt!40248) (_1!1126 lt!40172)))))

(declare-fun lt!40976 () Unit!2533)

(assert (=> d!22605 (= lt!40976 (choose!518 (toList!759 lt!40248) (_1!1126 lt!40172)))))

(declare-fun e!56376 () Bool)

(assert (=> d!22605 e!56376))

(declare-fun res!44454 () Bool)

(assert (=> d!22605 (=> (not res!44454) (not e!56376))))

(assert (=> d!22605 (= res!44454 (isStrictlySorted!293 (toList!759 lt!40248)))))

(assert (=> d!22605 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40248) (_1!1126 lt!40172)) lt!40976)))

(declare-fun b!86513 () Bool)

(assert (=> b!86513 (= e!56376 (containsKey!143 (toList!759 lt!40248) (_1!1126 lt!40172)))))

(assert (= (and d!22605 res!44454) b!86513))

(assert (=> d!22605 m!89573))

(assert (=> d!22605 m!89573))

(assert (=> d!22605 m!90469))

(declare-fun m!91313 () Bool)

(assert (=> d!22605 m!91313))

(declare-fun m!91315 () Bool)

(assert (=> d!22605 m!91315))

(assert (=> b!86513 m!90465))

(assert (=> b!85999 d!22605))

(declare-fun d!22607 () Bool)

(assert (=> d!22607 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40248) (_1!1126 lt!40172))) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40248) (_1!1126 lt!40172)))))))

(declare-fun bs!3644 () Bool)

(assert (= bs!3644 d!22607))

(assert (=> bs!3644 m!89573))

(declare-fun m!91317 () Bool)

(assert (=> bs!3644 m!91317))

(assert (=> b!85999 d!22607))

(assert (=> b!85999 d!22215))

(declare-fun d!22609 () Bool)

(declare-fun lt!40977 () Bool)

(assert (=> d!22609 (= lt!40977 (select (content!88 lt!40488) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun e!56377 () Bool)

(assert (=> d!22609 (= lt!40977 e!56377)))

(declare-fun res!44456 () Bool)

(assert (=> d!22609 (=> (not res!44456) (not e!56377))))

(assert (=> d!22609 (= res!44456 ((_ is Cons!1548) lt!40488))))

(assert (=> d!22609 (= (contains!764 lt!40488 (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))) lt!40977)))

(declare-fun b!86514 () Bool)

(declare-fun e!56378 () Bool)

(assert (=> b!86514 (= e!56377 e!56378)))

(declare-fun res!44455 () Bool)

(assert (=> b!86514 (=> res!44455 e!56378)))

(assert (=> b!86514 (= res!44455 (= (h!2139 lt!40488) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun b!86515 () Bool)

(assert (=> b!86515 (= e!56378 (contains!764 (t!5277 lt!40488) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(assert (= (and d!22609 res!44456) b!86514))

(assert (= (and b!86514 (not res!44455)) b!86515))

(declare-fun m!91319 () Bool)

(assert (=> d!22609 m!91319))

(declare-fun m!91321 () Bool)

(assert (=> d!22609 m!91321))

(declare-fun m!91323 () Bool)

(assert (=> b!86515 m!91323))

(assert (=> b!85716 d!22609))

(declare-fun d!22611 () Bool)

(declare-fun e!56380 () Bool)

(assert (=> d!22611 e!56380))

(declare-fun res!44457 () Bool)

(assert (=> d!22611 (=> res!44457 e!56380)))

(declare-fun lt!40980 () Bool)

(assert (=> d!22611 (= res!44457 (not lt!40980))))

(declare-fun lt!40981 () Bool)

(assert (=> d!22611 (= lt!40980 lt!40981)))

(declare-fun lt!40979 () Unit!2533)

(declare-fun e!56379 () Unit!2533)

(assert (=> d!22611 (= lt!40979 e!56379)))

(declare-fun c!14153 () Bool)

(assert (=> d!22611 (= c!14153 lt!40981)))

(assert (=> d!22611 (= lt!40981 (containsKey!143 (toList!759 lt!40666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22611 (= (contains!762 lt!40666 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40980)))

(declare-fun b!86516 () Bool)

(declare-fun lt!40978 () Unit!2533)

(assert (=> b!86516 (= e!56379 lt!40978)))

(assert (=> b!86516 (= lt!40978 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86516 (isDefined!93 (getValueByKey!139 (toList!759 lt!40666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86517 () Bool)

(declare-fun Unit!2577 () Unit!2533)

(assert (=> b!86517 (= e!56379 Unit!2577)))

(declare-fun b!86518 () Bool)

(assert (=> b!86518 (= e!56380 (isDefined!93 (getValueByKey!139 (toList!759 lt!40666) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22611 c!14153) b!86516))

(assert (= (and d!22611 (not c!14153)) b!86517))

(assert (= (and d!22611 (not res!44457)) b!86518))

(declare-fun m!91325 () Bool)

(assert (=> d!22611 m!91325))

(declare-fun m!91327 () Bool)

(assert (=> b!86516 m!91327))

(declare-fun m!91329 () Bool)

(assert (=> b!86516 m!91329))

(assert (=> b!86516 m!91329))

(declare-fun m!91331 () Bool)

(assert (=> b!86516 m!91331))

(assert (=> b!86518 m!91329))

(assert (=> b!86518 m!91329))

(assert (=> b!86518 m!91331))

(assert (=> bm!8170 d!22611))

(assert (=> d!22123 d!22121))

(declare-fun d!22613 () Bool)

(assert (=> d!22613 (= (getValueByKey!139 lt!40289 (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172)))))

(assert (=> d!22613 true))

(declare-fun _$22!419 () Unit!2533)

(assert (=> d!22613 (= (choose!508 lt!40289 (_1!1126 lt!40172) (_2!1126 lt!40172)) _$22!419)))

(declare-fun bs!3645 () Bool)

(assert (= bs!3645 d!22613))

(assert (=> bs!3645 m!89665))

(assert (=> d!22123 d!22613))

(declare-fun d!22615 () Bool)

(declare-fun res!44458 () Bool)

(declare-fun e!56381 () Bool)

(assert (=> d!22615 (=> res!44458 e!56381)))

(assert (=> d!22615 (= res!44458 (or ((_ is Nil!1549) lt!40289) ((_ is Nil!1549) (t!5277 lt!40289))))))

(assert (=> d!22615 (= (isStrictlySorted!293 lt!40289) e!56381)))

(declare-fun b!86519 () Bool)

(declare-fun e!56382 () Bool)

(assert (=> b!86519 (= e!56381 e!56382)))

(declare-fun res!44459 () Bool)

(assert (=> b!86519 (=> (not res!44459) (not e!56382))))

(assert (=> b!86519 (= res!44459 (bvslt (_1!1126 (h!2139 lt!40289)) (_1!1126 (h!2139 (t!5277 lt!40289)))))))

(declare-fun b!86520 () Bool)

(assert (=> b!86520 (= e!56382 (isStrictlySorted!293 (t!5277 lt!40289)))))

(assert (= (and d!22615 (not res!44458)) b!86519))

(assert (= (and b!86519 res!44459) b!86520))

(declare-fun m!91333 () Bool)

(assert (=> b!86520 m!91333))

(assert (=> d!22123 d!22615))

(declare-fun d!22617 () Bool)

(declare-fun e!56384 () Bool)

(assert (=> d!22617 e!56384))

(declare-fun res!44460 () Bool)

(assert (=> d!22617 (=> res!44460 e!56384)))

(declare-fun lt!40984 () Bool)

(assert (=> d!22617 (= res!44460 (not lt!40984))))

(declare-fun lt!40985 () Bool)

(assert (=> d!22617 (= lt!40984 lt!40985)))

(declare-fun lt!40983 () Unit!2533)

(declare-fun e!56383 () Unit!2533)

(assert (=> d!22617 (= lt!40983 e!56383)))

(declare-fun c!14154 () Bool)

(assert (=> d!22617 (= c!14154 lt!40985)))

(assert (=> d!22617 (= lt!40985 (containsKey!143 (toList!759 lt!40527) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22617 (= (contains!762 lt!40527 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!40984)))

(declare-fun b!86521 () Bool)

(declare-fun lt!40982 () Unit!2533)

(assert (=> b!86521 (= e!56383 lt!40982)))

(assert (=> b!86521 (= lt!40982 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40527) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!86521 (isDefined!93 (getValueByKey!139 (toList!759 lt!40527) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86522 () Bool)

(declare-fun Unit!2578 () Unit!2533)

(assert (=> b!86522 (= e!56383 Unit!2578)))

(declare-fun b!86523 () Bool)

(assert (=> b!86523 (= e!56384 (isDefined!93 (getValueByKey!139 (toList!759 lt!40527) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!22617 c!14154) b!86521))

(assert (= (and d!22617 (not c!14154)) b!86522))

(assert (= (and d!22617 (not res!44460)) b!86523))

(declare-fun m!91335 () Bool)

(assert (=> d!22617 m!91335))

(declare-fun m!91337 () Bool)

(assert (=> b!86521 m!91337))

(assert (=> b!86521 m!90025))

(assert (=> b!86521 m!90025))

(declare-fun m!91339 () Bool)

(assert (=> b!86521 m!91339))

(assert (=> b!86523 m!90025))

(assert (=> b!86523 m!90025))

(assert (=> b!86523 m!91339))

(assert (=> d!22177 d!22617))

(declare-fun b!86524 () Bool)

(declare-fun e!56385 () Option!145)

(assert (=> b!86524 (= e!56385 (Some!144 (_2!1126 (h!2139 lt!40526))))))

(declare-fun e!56386 () Option!145)

(declare-fun b!86526 () Bool)

(assert (=> b!86526 (= e!56386 (getValueByKey!139 (t!5277 lt!40526) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86525 () Bool)

(assert (=> b!86525 (= e!56385 e!56386)))

(declare-fun c!14156 () Bool)

(assert (=> b!86525 (= c!14156 (and ((_ is Cons!1548) lt!40526) (not (= (_1!1126 (h!2139 lt!40526)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!22619 () Bool)

(declare-fun c!14155 () Bool)

(assert (=> d!22619 (= c!14155 (and ((_ is Cons!1548) lt!40526) (= (_1!1126 (h!2139 lt!40526)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!22619 (= (getValueByKey!139 lt!40526 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!56385)))

(declare-fun b!86527 () Bool)

(assert (=> b!86527 (= e!56386 None!143)))

(assert (= (and d!22619 c!14155) b!86524))

(assert (= (and d!22619 (not c!14155)) b!86525))

(assert (= (and b!86525 c!14156) b!86526))

(assert (= (and b!86525 (not c!14156)) b!86527))

(declare-fun m!91341 () Bool)

(assert (=> b!86526 m!91341))

(assert (=> d!22177 d!22619))

(declare-fun d!22621 () Bool)

(assert (=> d!22621 (= (getValueByKey!139 lt!40526 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!40986 () Unit!2533)

(assert (=> d!22621 (= lt!40986 (choose!508 lt!40526 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!56387 () Bool)

(assert (=> d!22621 e!56387))

(declare-fun res!44461 () Bool)

(assert (=> d!22621 (=> (not res!44461) (not e!56387))))

(assert (=> d!22621 (= res!44461 (isStrictlySorted!293 lt!40526))))

(assert (=> d!22621 (= (lemmaContainsTupThenGetReturnValue!58 lt!40526 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!40986)))

(declare-fun b!86528 () Bool)

(declare-fun res!44462 () Bool)

(assert (=> b!86528 (=> (not res!44462) (not e!56387))))

(assert (=> b!86528 (= res!44462 (containsKey!143 lt!40526 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86529 () Bool)

(assert (=> b!86529 (= e!56387 (contains!764 lt!40526 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!22621 res!44461) b!86528))

(assert (= (and b!86528 res!44462) b!86529))

(assert (=> d!22621 m!90019))

(declare-fun m!91343 () Bool)

(assert (=> d!22621 m!91343))

(declare-fun m!91345 () Bool)

(assert (=> d!22621 m!91345))

(declare-fun m!91347 () Bool)

(assert (=> b!86528 m!91347))

(declare-fun m!91349 () Bool)

(assert (=> b!86529 m!91349))

(assert (=> d!22177 d!22621))

(declare-fun c!14158 () Bool)

(declare-fun b!86530 () Bool)

(declare-fun c!14157 () Bool)

(declare-fun e!56389 () List!1552)

(assert (=> b!86530 (= e!56389 (ite c!14157 (t!5277 (toList!759 call!8034)) (ite c!14158 (Cons!1548 (h!2139 (toList!759 call!8034)) (t!5277 (toList!759 call!8034))) Nil!1549)))))

(declare-fun b!86531 () Bool)

(declare-fun e!56391 () Bool)

(declare-fun lt!40987 () List!1552)

(assert (=> b!86531 (= e!56391 (contains!764 lt!40987 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!86532 () Bool)

(declare-fun e!56390 () List!1552)

(declare-fun e!56388 () List!1552)

(assert (=> b!86532 (= e!56390 e!56388)))

(assert (=> b!86532 (= c!14157 (and ((_ is Cons!1548) (toList!759 call!8034)) (= (_1!1126 (h!2139 (toList!759 call!8034))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!86533 () Bool)

(declare-fun res!44463 () Bool)

(assert (=> b!86533 (=> (not res!44463) (not e!56391))))

(assert (=> b!86533 (= res!44463 (containsKey!143 lt!40987 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!22623 () Bool)

(assert (=> d!22623 e!56391))

(declare-fun res!44464 () Bool)

(assert (=> d!22623 (=> (not res!44464) (not e!56391))))

(assert (=> d!22623 (= res!44464 (isStrictlySorted!293 lt!40987))))

(assert (=> d!22623 (= lt!40987 e!56390)))

(declare-fun c!14159 () Bool)

(assert (=> d!22623 (= c!14159 (and ((_ is Cons!1548) (toList!759 call!8034)) (bvslt (_1!1126 (h!2139 (toList!759 call!8034))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!22623 (isStrictlySorted!293 (toList!759 call!8034))))

(assert (=> d!22623 (= (insertStrictlySorted!60 (toList!759 call!8034) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!40987)))

(declare-fun bm!8232 () Bool)

(declare-fun call!8235 () List!1552)

(assert (=> bm!8232 (= call!8235 ($colon$colon!71 e!56389 (ite c!14159 (h!2139 (toList!759 call!8034)) (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!14160 () Bool)

(assert (=> bm!8232 (= c!14160 c!14159)))

(declare-fun bm!8233 () Bool)

(declare-fun call!8237 () List!1552)

(declare-fun call!8236 () List!1552)

(assert (=> bm!8233 (= call!8237 call!8236)))

(declare-fun b!86534 () Bool)

(assert (=> b!86534 (= e!56390 call!8235)))

(declare-fun b!86535 () Bool)

(declare-fun e!56392 () List!1552)

(assert (=> b!86535 (= e!56392 call!8237)))

(declare-fun b!86536 () Bool)

(assert (=> b!86536 (= e!56388 call!8236)))

(declare-fun b!86537 () Bool)

(assert (=> b!86537 (= e!56389 (insertStrictlySorted!60 (t!5277 (toList!759 call!8034)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86538 () Bool)

(assert (=> b!86538 (= e!56392 call!8237)))

(declare-fun b!86539 () Bool)

(assert (=> b!86539 (= c!14158 (and ((_ is Cons!1548) (toList!759 call!8034)) (bvsgt (_1!1126 (h!2139 (toList!759 call!8034))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!86539 (= e!56388 e!56392)))

(declare-fun bm!8234 () Bool)

(assert (=> bm!8234 (= call!8236 call!8235)))

(assert (= (and d!22623 c!14159) b!86534))

(assert (= (and d!22623 (not c!14159)) b!86532))

(assert (= (and b!86532 c!14157) b!86536))

(assert (= (and b!86532 (not c!14157)) b!86539))

(assert (= (and b!86539 c!14158) b!86538))

(assert (= (and b!86539 (not c!14158)) b!86535))

(assert (= (or b!86538 b!86535) bm!8233))

(assert (= (or b!86536 bm!8233) bm!8234))

(assert (= (or b!86534 bm!8234) bm!8232))

(assert (= (and bm!8232 c!14160) b!86537))

(assert (= (and bm!8232 (not c!14160)) b!86530))

(assert (= (and d!22623 res!44464) b!86533))

(assert (= (and b!86533 res!44463) b!86531))

(declare-fun m!91351 () Bool)

(assert (=> b!86533 m!91351))

(declare-fun m!91353 () Bool)

(assert (=> b!86537 m!91353))

(declare-fun m!91355 () Bool)

(assert (=> d!22623 m!91355))

(declare-fun m!91357 () Bool)

(assert (=> d!22623 m!91357))

(declare-fun m!91359 () Bool)

(assert (=> b!86531 m!91359))

(declare-fun m!91361 () Bool)

(assert (=> bm!8232 m!91361))

(assert (=> d!22177 d!22623))

(assert (=> b!85765 d!22477))

(declare-fun d!22625 () Bool)

(declare-fun c!14163 () Bool)

(assert (=> d!22625 (= c!14163 ((_ is Nil!1549) (toList!759 lt!40286)))))

(declare-fun e!56395 () (InoxSet tuple2!2232))

(assert (=> d!22625 (= (content!88 (toList!759 lt!40286)) e!56395)))

(declare-fun b!86544 () Bool)

(assert (=> b!86544 (= e!56395 ((as const (Array tuple2!2232 Bool)) false))))

(declare-fun b!86545 () Bool)

(assert (=> b!86545 (= e!56395 ((_ map or) (store ((as const (Array tuple2!2232 Bool)) false) (h!2139 (toList!759 lt!40286)) true) (content!88 (t!5277 (toList!759 lt!40286)))))))

(assert (= (and d!22625 c!14163) b!86544))

(assert (= (and d!22625 (not c!14163)) b!86545))

(declare-fun m!91363 () Bool)

(assert (=> b!86545 m!91363))

(declare-fun m!91365 () Bool)

(assert (=> b!86545 m!91365))

(assert (=> d!22309 d!22625))

(declare-fun d!22627 () Bool)

(assert (=> d!22627 (= ($colon$colon!71 e!55901 (ite c!13934 (h!2139 (toList!759 lt!40170)) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163)))) (Cons!1548 (ite c!13934 (h!2139 (toList!759 lt!40170)) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))) e!55901))))

(assert (=> bm!8140 d!22627))

(declare-fun lt!40988 () Bool)

(declare-fun d!22629 () Bool)

(assert (=> d!22629 (= lt!40988 (select (content!88 (toList!759 lt!40542)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun e!56396 () Bool)

(assert (=> d!22629 (= lt!40988 e!56396)))

(declare-fun res!44466 () Bool)

(assert (=> d!22629 (=> (not res!44466) (not e!56396))))

(assert (=> d!22629 (= res!44466 ((_ is Cons!1548) (toList!759 lt!40542)))))

(assert (=> d!22629 (= (contains!764 (toList!759 lt!40542) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!40988)))

(declare-fun b!86546 () Bool)

(declare-fun e!56397 () Bool)

(assert (=> b!86546 (= e!56396 e!56397)))

(declare-fun res!44465 () Bool)

(assert (=> b!86546 (=> res!44465 e!56397)))

(assert (=> b!86546 (= res!44465 (= (h!2139 (toList!759 lt!40542)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun b!86547 () Bool)

(assert (=> b!86547 (= e!56397 (contains!764 (t!5277 (toList!759 lt!40542)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!22629 res!44466) b!86546))

(assert (= (and b!86546 (not res!44465)) b!86547))

(declare-fun m!91367 () Bool)

(assert (=> d!22629 m!91367))

(declare-fun m!91369 () Bool)

(assert (=> d!22629 m!91369))

(declare-fun m!91371 () Bool)

(assert (=> b!86547 m!91371))

(assert (=> b!85813 d!22629))

(declare-fun d!22631 () Bool)

(declare-fun c!14164 () Bool)

(assert (=> d!22631 (= c!14164 ((_ is Nil!1549) (toList!759 lt!40290)))))

(declare-fun e!56398 () (InoxSet tuple2!2232))

(assert (=> d!22631 (= (content!88 (toList!759 lt!40290)) e!56398)))

(declare-fun b!86548 () Bool)

(assert (=> b!86548 (= e!56398 ((as const (Array tuple2!2232 Bool)) false))))

(declare-fun b!86549 () Bool)

(assert (=> b!86549 (= e!56398 ((_ map or) (store ((as const (Array tuple2!2232 Bool)) false) (h!2139 (toList!759 lt!40290)) true) (content!88 (t!5277 (toList!759 lt!40290)))))))

(assert (= (and d!22631 c!14164) b!86548))

(assert (= (and d!22631 (not c!14164)) b!86549))

(declare-fun m!91373 () Bool)

(assert (=> b!86549 m!91373))

(declare-fun m!91375 () Bool)

(assert (=> b!86549 m!91375))

(assert (=> d!22183 d!22631))

(declare-fun d!22633 () Bool)

(assert (=> d!22633 (isDefined!93 (getValueByKey!139 (toList!759 lt!40290) (_1!1126 lt!40172)))))

(declare-fun lt!40989 () Unit!2533)

(assert (=> d!22633 (= lt!40989 (choose!518 (toList!759 lt!40290) (_1!1126 lt!40172)))))

(declare-fun e!56399 () Bool)

(assert (=> d!22633 e!56399))

(declare-fun res!44467 () Bool)

(assert (=> d!22633 (=> (not res!44467) (not e!56399))))

(assert (=> d!22633 (= res!44467 (isStrictlySorted!293 (toList!759 lt!40290)))))

(assert (=> d!22633 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40290) (_1!1126 lt!40172)) lt!40989)))

(declare-fun b!86550 () Bool)

(assert (=> b!86550 (= e!56399 (containsKey!143 (toList!759 lt!40290) (_1!1126 lt!40172)))))

(assert (= (and d!22633 res!44467) b!86550))

(assert (=> d!22633 m!89671))

(assert (=> d!22633 m!89671))

(assert (=> d!22633 m!89819))

(declare-fun m!91377 () Bool)

(assert (=> d!22633 m!91377))

(declare-fun m!91379 () Bool)

(assert (=> d!22633 m!91379))

(assert (=> b!86550 m!89815))

(assert (=> b!85628 d!22633))

(declare-fun d!22635 () Bool)

(assert (=> d!22635 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40290) (_1!1126 lt!40172))) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40290) (_1!1126 lt!40172)))))))

(declare-fun bs!3646 () Bool)

(assert (= bs!3646 d!22635))

(assert (=> bs!3646 m!89671))

(declare-fun m!91381 () Bool)

(assert (=> bs!3646 m!91381))

(assert (=> b!85628 d!22635))

(assert (=> b!85628 d!22163))

(declare-fun d!22637 () Bool)

(declare-fun res!44468 () Bool)

(declare-fun e!56400 () Bool)

(assert (=> d!22637 (=> res!44468 e!56400)))

(assert (=> d!22637 (= res!44468 (or ((_ is Nil!1549) lt!40796) ((_ is Nil!1549) (t!5277 lt!40796))))))

(assert (=> d!22637 (= (isStrictlySorted!293 lt!40796) e!56400)))

(declare-fun b!86551 () Bool)

(declare-fun e!56401 () Bool)

(assert (=> b!86551 (= e!56400 e!56401)))

(declare-fun res!44469 () Bool)

(assert (=> b!86551 (=> (not res!44469) (not e!56401))))

(assert (=> b!86551 (= res!44469 (bvslt (_1!1126 (h!2139 lt!40796)) (_1!1126 (h!2139 (t!5277 lt!40796)))))))

(declare-fun b!86552 () Bool)

(assert (=> b!86552 (= e!56401 (isStrictlySorted!293 (t!5277 lt!40796)))))

(assert (= (and d!22637 (not res!44468)) b!86551))

(assert (= (and b!86551 res!44469) b!86552))

(declare-fun m!91383 () Bool)

(assert (=> b!86552 m!91383))

(assert (=> d!22325 d!22637))

(declare-fun d!22639 () Bool)

(declare-fun res!44470 () Bool)

(declare-fun e!56402 () Bool)

(assert (=> d!22639 (=> res!44470 e!56402)))

(assert (=> d!22639 (= res!44470 (or ((_ is Nil!1549) (toList!759 lt!40173)) ((_ is Nil!1549) (t!5277 (toList!759 lt!40173)))))))

(assert (=> d!22639 (= (isStrictlySorted!293 (toList!759 lt!40173)) e!56402)))

(declare-fun b!86553 () Bool)

(declare-fun e!56403 () Bool)

(assert (=> b!86553 (= e!56402 e!56403)))

(declare-fun res!44471 () Bool)

(assert (=> b!86553 (=> (not res!44471) (not e!56403))))

(assert (=> b!86553 (= res!44471 (bvslt (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 (h!2139 (t!5277 (toList!759 lt!40173))))))))

(declare-fun b!86554 () Bool)

(assert (=> b!86554 (= e!56403 (isStrictlySorted!293 (t!5277 (toList!759 lt!40173))))))

(assert (= (and d!22639 (not res!44470)) b!86553))

(assert (= (and b!86553 res!44471) b!86554))

(declare-fun m!91385 () Bool)

(assert (=> b!86554 m!91385))

(assert (=> d!22325 d!22639))

(declare-fun d!22641 () Bool)

(declare-fun lt!40990 () Bool)

(assert (=> d!22641 (= lt!40990 (select (content!88 lt!40247) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun e!56404 () Bool)

(assert (=> d!22641 (= lt!40990 e!56404)))

(declare-fun res!44473 () Bool)

(assert (=> d!22641 (=> (not res!44473) (not e!56404))))

(assert (=> d!22641 (= res!44473 ((_ is Cons!1548) lt!40247))))

(assert (=> d!22641 (= (contains!764 lt!40247 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))) lt!40990)))

(declare-fun b!86555 () Bool)

(declare-fun e!56405 () Bool)

(assert (=> b!86555 (= e!56404 e!56405)))

(declare-fun res!44472 () Bool)

(assert (=> b!86555 (=> res!44472 e!56405)))

(assert (=> b!86555 (= res!44472 (= (h!2139 lt!40247) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!86556 () Bool)

(assert (=> b!86556 (= e!56405 (contains!764 (t!5277 lt!40247) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(assert (= (and d!22641 res!44473) b!86555))

(assert (= (and b!86555 (not res!44472)) b!86556))

(declare-fun m!91387 () Bool)

(assert (=> d!22641 m!91387))

(declare-fun m!91389 () Bool)

(assert (=> d!22641 m!91389))

(declare-fun m!91391 () Bool)

(assert (=> b!86556 m!91391))

(assert (=> b!86007 d!22641))

(declare-fun d!22643 () Bool)

(declare-fun e!56407 () Bool)

(assert (=> d!22643 e!56407))

(declare-fun res!44474 () Bool)

(assert (=> d!22643 (=> res!44474 e!56407)))

(declare-fun lt!40993 () Bool)

(assert (=> d!22643 (= res!44474 (not lt!40993))))

(declare-fun lt!40994 () Bool)

(assert (=> d!22643 (= lt!40993 lt!40994)))

(declare-fun lt!40992 () Unit!2533)

(declare-fun e!56406 () Unit!2533)

(assert (=> d!22643 (= lt!40992 e!56406)))

(declare-fun c!14165 () Bool)

(assert (=> d!22643 (= c!14165 lt!40994)))

(assert (=> d!22643 (= lt!40994 (containsKey!143 (toList!759 lt!40493) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22643 (= (contains!762 lt!40493 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40993)))

(declare-fun b!86557 () Bool)

(declare-fun lt!40991 () Unit!2533)

(assert (=> b!86557 (= e!56406 lt!40991)))

(assert (=> b!86557 (= lt!40991 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40493) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86557 (isDefined!93 (getValueByKey!139 (toList!759 lt!40493) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86558 () Bool)

(declare-fun Unit!2579 () Unit!2533)

(assert (=> b!86558 (= e!56406 Unit!2579)))

(declare-fun b!86559 () Bool)

(assert (=> b!86559 (= e!56407 (isDefined!93 (getValueByKey!139 (toList!759 lt!40493) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22643 c!14165) b!86557))

(assert (= (and d!22643 (not c!14165)) b!86558))

(assert (= (and d!22643 (not res!44474)) b!86559))

(declare-fun m!91393 () Bool)

(assert (=> d!22643 m!91393))

(declare-fun m!91395 () Bool)

(assert (=> b!86557 m!91395))

(assert (=> b!86557 m!90791))

(assert (=> b!86557 m!90791))

(declare-fun m!91397 () Bool)

(assert (=> b!86557 m!91397))

(assert (=> b!86559 m!90791))

(assert (=> b!86559 m!90791))

(assert (=> b!86559 m!91397))

(assert (=> bm!8146 d!22643))

(declare-fun d!22645 () Bool)

(assert (=> d!22645 (arrayContainsKey!0 (_keys!4010 newMap!16) lt!40627 #b00000000000000000000000000000000)))

(declare-fun lt!40997 () Unit!2533)

(declare-fun choose!13 (array!4028 (_ BitVec 64) (_ BitVec 32)) Unit!2533)

(assert (=> d!22645 (= lt!40997 (choose!13 (_keys!4010 newMap!16) lt!40627 #b00000000000000000000000000000000))))

(assert (=> d!22645 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!22645 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4010 newMap!16) lt!40627 #b00000000000000000000000000000000) lt!40997)))

(declare-fun bs!3647 () Bool)

(assert (= bs!3647 d!22645))

(assert (=> bs!3647 m!90311))

(declare-fun m!91399 () Bool)

(assert (=> bs!3647 m!91399))

(assert (=> b!85929 d!22645))

(declare-fun d!22647 () Bool)

(declare-fun res!44475 () Bool)

(declare-fun e!56408 () Bool)

(assert (=> d!22647 (=> res!44475 e!56408)))

(assert (=> d!22647 (= res!44475 (= (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) lt!40627))))

(assert (=> d!22647 (= (arrayContainsKey!0 (_keys!4010 newMap!16) lt!40627 #b00000000000000000000000000000000) e!56408)))

(declare-fun b!86560 () Bool)

(declare-fun e!56409 () Bool)

(assert (=> b!86560 (= e!56408 e!56409)))

(declare-fun res!44476 () Bool)

(assert (=> b!86560 (=> (not res!44476) (not e!56409))))

(assert (=> b!86560 (= res!44476 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!86561 () Bool)

(assert (=> b!86561 (= e!56409 (arrayContainsKey!0 (_keys!4010 newMap!16) lt!40627 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!22647 (not res!44475)) b!86560))

(assert (= (and b!86560 res!44476) b!86561))

(assert (=> d!22647 m!89941))

(declare-fun m!91401 () Bool)

(assert (=> b!86561 m!91401))

(assert (=> b!85929 d!22647))

(declare-fun b!86562 () Bool)

(declare-fun e!56412 () SeekEntryResult!253)

(declare-fun lt!41000 () SeekEntryResult!253)

(assert (=> b!86562 (= e!56412 (MissingZero!253 (index!3151 lt!41000)))))

(declare-fun b!86563 () Bool)

(declare-fun e!56411 () SeekEntryResult!253)

(assert (=> b!86563 (= e!56411 (Found!253 (index!3151 lt!41000)))))

(declare-fun b!86565 () Bool)

(declare-fun c!14166 () Bool)

(declare-fun lt!40999 () (_ BitVec 64))

(assert (=> b!86565 (= c!14166 (= lt!40999 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86565 (= e!56411 e!56412)))

(declare-fun b!86566 () Bool)

(declare-fun e!56410 () SeekEntryResult!253)

(assert (=> b!86566 (= e!56410 Undefined!253)))

(declare-fun b!86567 () Bool)

(assert (=> b!86567 (= e!56412 (seekKeyOrZeroReturnVacant!0 (x!12006 lt!41000) (index!3151 lt!41000) (index!3151 lt!41000) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!86564 () Bool)

(assert (=> b!86564 (= e!56410 e!56411)))

(assert (=> b!86564 (= lt!40999 (select (arr!1918 (_keys!4010 newMap!16)) (index!3151 lt!41000)))))

(declare-fun c!14167 () Bool)

(assert (=> b!86564 (= c!14167 (= lt!40999 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!22649 () Bool)

(declare-fun lt!40998 () SeekEntryResult!253)

(assert (=> d!22649 (and (or ((_ is Undefined!253) lt!40998) (not ((_ is Found!253) lt!40998)) (and (bvsge (index!3150 lt!40998) #b00000000000000000000000000000000) (bvslt (index!3150 lt!40998) (size!2162 (_keys!4010 newMap!16))))) (or ((_ is Undefined!253) lt!40998) ((_ is Found!253) lt!40998) (not ((_ is MissingZero!253) lt!40998)) (and (bvsge (index!3149 lt!40998) #b00000000000000000000000000000000) (bvslt (index!3149 lt!40998) (size!2162 (_keys!4010 newMap!16))))) (or ((_ is Undefined!253) lt!40998) ((_ is Found!253) lt!40998) ((_ is MissingZero!253) lt!40998) (not ((_ is MissingVacant!253) lt!40998)) (and (bvsge (index!3152 lt!40998) #b00000000000000000000000000000000) (bvslt (index!3152 lt!40998) (size!2162 (_keys!4010 newMap!16))))) (or ((_ is Undefined!253) lt!40998) (ite ((_ is Found!253) lt!40998) (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40998)) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!253) lt!40998) (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3149 lt!40998)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!253) lt!40998) (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3152 lt!40998)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22649 (= lt!40998 e!56410)))

(declare-fun c!14168 () Bool)

(assert (=> d!22649 (= c!14168 (and ((_ is Intermediate!253) lt!41000) (undefined!1065 lt!41000)))))

(assert (=> d!22649 (= lt!41000 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (mask!6366 newMap!16)) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(assert (=> d!22649 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22649 (= (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (_keys!4010 newMap!16) (mask!6366 newMap!16)) lt!40998)))

(assert (= (and d!22649 c!14168) b!86566))

(assert (= (and d!22649 (not c!14168)) b!86564))

(assert (= (and b!86564 c!14167) b!86563))

(assert (= (and b!86564 (not c!14167)) b!86565))

(assert (= (and b!86565 c!14166) b!86562))

(assert (= (and b!86565 (not c!14166)) b!86567))

(assert (=> b!86567 m!89941))

(declare-fun m!91403 () Bool)

(assert (=> b!86567 m!91403))

(declare-fun m!91405 () Bool)

(assert (=> b!86564 m!91405))

(assert (=> d!22649 m!89885))

(declare-fun m!91407 () Bool)

(assert (=> d!22649 m!91407))

(declare-fun m!91409 () Bool)

(assert (=> d!22649 m!91409))

(assert (=> d!22649 m!89941))

(declare-fun m!91411 () Bool)

(assert (=> d!22649 m!91411))

(declare-fun m!91413 () Bool)

(assert (=> d!22649 m!91413))

(assert (=> d!22649 m!89941))

(assert (=> d!22649 m!91409))

(declare-fun m!91415 () Bool)

(assert (=> d!22649 m!91415))

(assert (=> b!85929 d!22649))

(declare-fun e!56414 () List!1552)

(declare-fun c!14169 () Bool)

(declare-fun c!14170 () Bool)

(declare-fun b!86568 () Bool)

(assert (=> b!86568 (= e!56414 (ite c!14169 (t!5277 (t!5277 (toList!759 lt!40173))) (ite c!14170 (Cons!1548 (h!2139 (t!5277 (toList!759 lt!40173))) (t!5277 (t!5277 (toList!759 lt!40173)))) Nil!1549)))))

(declare-fun b!86569 () Bool)

(declare-fun e!56416 () Bool)

(declare-fun lt!41001 () List!1552)

(assert (=> b!86569 (= e!56416 (contains!764 lt!41001 (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun b!86570 () Bool)

(declare-fun e!56415 () List!1552)

(declare-fun e!56413 () List!1552)

(assert (=> b!86570 (= e!56415 e!56413)))

(assert (=> b!86570 (= c!14169 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40173))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40173)))) (_1!1126 lt!40163))))))

(declare-fun b!86571 () Bool)

(declare-fun res!44477 () Bool)

(assert (=> b!86571 (=> (not res!44477) (not e!56416))))

(assert (=> b!86571 (= res!44477 (containsKey!143 lt!41001 (_1!1126 lt!40163)))))

(declare-fun d!22651 () Bool)

(assert (=> d!22651 e!56416))

(declare-fun res!44478 () Bool)

(assert (=> d!22651 (=> (not res!44478) (not e!56416))))

(assert (=> d!22651 (= res!44478 (isStrictlySorted!293 lt!41001))))

(assert (=> d!22651 (= lt!41001 e!56415)))

(declare-fun c!14171 () Bool)

(assert (=> d!22651 (= c!14171 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40173))) (bvslt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40173)))) (_1!1126 lt!40163))))))

(assert (=> d!22651 (isStrictlySorted!293 (t!5277 (toList!759 lt!40173)))))

(assert (=> d!22651 (= (insertStrictlySorted!60 (t!5277 (toList!759 lt!40173)) (_1!1126 lt!40163) (_2!1126 lt!40163)) lt!41001)))

(declare-fun bm!8235 () Bool)

(declare-fun call!8238 () List!1552)

(assert (=> bm!8235 (= call!8238 ($colon$colon!71 e!56414 (ite c!14171 (h!2139 (t!5277 (toList!759 lt!40173))) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163)))))))

(declare-fun c!14172 () Bool)

(assert (=> bm!8235 (= c!14172 c!14171)))

(declare-fun bm!8236 () Bool)

(declare-fun call!8240 () List!1552)

(declare-fun call!8239 () List!1552)

(assert (=> bm!8236 (= call!8240 call!8239)))

(declare-fun b!86572 () Bool)

(assert (=> b!86572 (= e!56415 call!8238)))

(declare-fun b!86573 () Bool)

(declare-fun e!56417 () List!1552)

(assert (=> b!86573 (= e!56417 call!8240)))

(declare-fun b!86574 () Bool)

(assert (=> b!86574 (= e!56413 call!8239)))

(declare-fun b!86575 () Bool)

(assert (=> b!86575 (= e!56414 (insertStrictlySorted!60 (t!5277 (t!5277 (toList!759 lt!40173))) (_1!1126 lt!40163) (_2!1126 lt!40163)))))

(declare-fun b!86576 () Bool)

(assert (=> b!86576 (= e!56417 call!8240)))

(declare-fun b!86577 () Bool)

(assert (=> b!86577 (= c!14170 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40173))) (bvsgt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40173)))) (_1!1126 lt!40163))))))

(assert (=> b!86577 (= e!56413 e!56417)))

(declare-fun bm!8237 () Bool)

(assert (=> bm!8237 (= call!8239 call!8238)))

(assert (= (and d!22651 c!14171) b!86572))

(assert (= (and d!22651 (not c!14171)) b!86570))

(assert (= (and b!86570 c!14169) b!86574))

(assert (= (and b!86570 (not c!14169)) b!86577))

(assert (= (and b!86577 c!14170) b!86576))

(assert (= (and b!86577 (not c!14170)) b!86573))

(assert (= (or b!86576 b!86573) bm!8236))

(assert (= (or b!86574 bm!8236) bm!8237))

(assert (= (or b!86572 bm!8237) bm!8235))

(assert (= (and bm!8235 c!14172) b!86575))

(assert (= (and bm!8235 (not c!14172)) b!86568))

(assert (= (and d!22651 res!44478) b!86571))

(assert (= (and b!86571 res!44477) b!86569))

(declare-fun m!91417 () Bool)

(assert (=> b!86571 m!91417))

(declare-fun m!91419 () Bool)

(assert (=> b!86575 m!91419))

(declare-fun m!91421 () Bool)

(assert (=> d!22651 m!91421))

(assert (=> d!22651 m!91385))

(declare-fun m!91423 () Bool)

(assert (=> b!86569 m!91423))

(declare-fun m!91425 () Bool)

(assert (=> bm!8235 m!91425))

(assert (=> b!86109 d!22651))

(declare-fun b!86578 () Bool)

(declare-fun e!56418 () Bool)

(declare-fun e!56419 () Bool)

(assert (=> b!86578 (= e!56418 e!56419)))

(declare-fun lt!41003 () (_ BitVec 64))

(assert (=> b!86578 (= lt!41003 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000))))

(declare-fun lt!41002 () Unit!2533)

(assert (=> b!86578 (= lt!41002 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4010 (_2!1127 lt!40373)) lt!41003 #b00000000000000000000000000000000))))

(assert (=> b!86578 (arrayContainsKey!0 (_keys!4010 (_2!1127 lt!40373)) lt!41003 #b00000000000000000000000000000000)))

(declare-fun lt!41004 () Unit!2533)

(assert (=> b!86578 (= lt!41004 lt!41002)))

(declare-fun res!44479 () Bool)

(assert (=> b!86578 (= res!44479 (= (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000) (_keys!4010 (_2!1127 lt!40373)) (mask!6366 (_2!1127 lt!40373))) (Found!253 #b00000000000000000000000000000000)))))

(assert (=> b!86578 (=> (not res!44479) (not e!56419))))

(declare-fun d!22653 () Bool)

(declare-fun res!44480 () Bool)

(declare-fun e!56420 () Bool)

(assert (=> d!22653 (=> res!44480 e!56420)))

(assert (=> d!22653 (= res!44480 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))))))

(assert (=> d!22653 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 (_2!1127 lt!40373)) (mask!6366 (_2!1127 lt!40373))) e!56420)))

(declare-fun b!86579 () Bool)

(declare-fun call!8241 () Bool)

(assert (=> b!86579 (= e!56419 call!8241)))

(declare-fun bm!8238 () Bool)

(assert (=> bm!8238 (= call!8241 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4010 (_2!1127 lt!40373)) (mask!6366 (_2!1127 lt!40373))))))

(declare-fun b!86580 () Bool)

(assert (=> b!86580 (= e!56420 e!56418)))

(declare-fun c!14173 () Bool)

(assert (=> b!86580 (= c!14173 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000)))))

(declare-fun b!86581 () Bool)

(assert (=> b!86581 (= e!56418 call!8241)))

(assert (= (and d!22653 (not res!44480)) b!86580))

(assert (= (and b!86580 c!14173) b!86578))

(assert (= (and b!86580 (not c!14173)) b!86581))

(assert (= (and b!86578 res!44479) b!86579))

(assert (= (or b!86579 b!86581) bm!8238))

(declare-fun m!91427 () Bool)

(assert (=> b!86578 m!91427))

(declare-fun m!91429 () Bool)

(assert (=> b!86578 m!91429))

(declare-fun m!91431 () Bool)

(assert (=> b!86578 m!91431))

(assert (=> b!86578 m!91427))

(declare-fun m!91433 () Bool)

(assert (=> b!86578 m!91433))

(declare-fun m!91435 () Bool)

(assert (=> bm!8238 m!91435))

(assert (=> b!86580 m!91427))

(assert (=> b!86580 m!91427))

(declare-fun m!91437 () Bool)

(assert (=> b!86580 m!91437))

(assert (=> b!86116 d!22653))

(declare-fun b!86582 () Bool)

(declare-fun e!56421 () Option!145)

(assert (=> b!86582 (= e!56421 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40527)))))))

(declare-fun e!56422 () Option!145)

(declare-fun b!86584 () Bool)

(assert (=> b!86584 (= e!56422 (getValueByKey!139 (t!5277 (toList!759 lt!40527)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86583 () Bool)

(assert (=> b!86583 (= e!56421 e!56422)))

(declare-fun c!14175 () Bool)

(assert (=> b!86583 (= c!14175 (and ((_ is Cons!1548) (toList!759 lt!40527)) (not (= (_1!1126 (h!2139 (toList!759 lt!40527))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!22655 () Bool)

(declare-fun c!14174 () Bool)

(assert (=> d!22655 (= c!14174 (and ((_ is Cons!1548) (toList!759 lt!40527)) (= (_1!1126 (h!2139 (toList!759 lt!40527))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!22655 (= (getValueByKey!139 (toList!759 lt!40527) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!56421)))

(declare-fun b!86585 () Bool)

(assert (=> b!86585 (= e!56422 None!143)))

(assert (= (and d!22655 c!14174) b!86582))

(assert (= (and d!22655 (not c!14174)) b!86583))

(assert (= (and b!86583 c!14175) b!86584))

(assert (= (and b!86583 (not c!14175)) b!86585))

(declare-fun m!91439 () Bool)

(assert (=> b!86584 m!91439))

(assert (=> b!85799 d!22655))

(declare-fun d!22657 () Bool)

(declare-fun lt!41005 () Bool)

(assert (=> d!22657 (= lt!41005 (select (content!88 (toList!759 lt!40607)) (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun e!56423 () Bool)

(assert (=> d!22657 (= lt!41005 e!56423)))

(declare-fun res!44482 () Bool)

(assert (=> d!22657 (=> (not res!44482) (not e!56423))))

(assert (=> d!22657 (= res!44482 ((_ is Cons!1548) (toList!759 lt!40607)))))

(assert (=> d!22657 (= (contains!764 (toList!759 lt!40607) (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!41005)))

(declare-fun b!86586 () Bool)

(declare-fun e!56424 () Bool)

(assert (=> b!86586 (= e!56423 e!56424)))

(declare-fun res!44481 () Bool)

(assert (=> b!86586 (=> res!44481 e!56424)))

(assert (=> b!86586 (= res!44481 (= (h!2139 (toList!759 lt!40607)) (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!86587 () Bool)

(assert (=> b!86587 (= e!56424 (contains!764 (t!5277 (toList!759 lt!40607)) (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22657 res!44482) b!86586))

(assert (= (and b!86586 (not res!44481)) b!86587))

(declare-fun m!91441 () Bool)

(assert (=> d!22657 m!91441))

(declare-fun m!91443 () Bool)

(assert (=> d!22657 m!91443))

(declare-fun m!91445 () Bool)

(assert (=> b!86587 m!91445))

(assert (=> b!85908 d!22657))

(declare-fun d!22659 () Bool)

(declare-fun lt!41006 () Bool)

(assert (=> d!22659 (= lt!41006 (select (content!88 (t!5277 (toList!759 lt!40290))) lt!40172))))

(declare-fun e!56425 () Bool)

(assert (=> d!22659 (= lt!41006 e!56425)))

(declare-fun res!44484 () Bool)

(assert (=> d!22659 (=> (not res!44484) (not e!56425))))

(assert (=> d!22659 (= res!44484 ((_ is Cons!1548) (t!5277 (toList!759 lt!40290))))))

(assert (=> d!22659 (= (contains!764 (t!5277 (toList!759 lt!40290)) lt!40172) lt!41006)))

(declare-fun b!86588 () Bool)

(declare-fun e!56426 () Bool)

(assert (=> b!86588 (= e!56425 e!56426)))

(declare-fun res!44483 () Bool)

(assert (=> b!86588 (=> res!44483 e!56426)))

(assert (=> b!86588 (= res!44483 (= (h!2139 (t!5277 (toList!759 lt!40290))) lt!40172))))

(declare-fun b!86589 () Bool)

(assert (=> b!86589 (= e!56426 (contains!764 (t!5277 (t!5277 (toList!759 lt!40290))) lt!40172))))

(assert (= (and d!22659 res!44484) b!86588))

(assert (= (and b!86588 (not res!44483)) b!86589))

(assert (=> d!22659 m!91375))

(declare-fun m!91447 () Bool)

(assert (=> d!22659 m!91447))

(declare-fun m!91449 () Bool)

(assert (=> b!86589 m!91449))

(assert (=> b!85811 d!22659))

(declare-fun d!22661 () Bool)

(declare-fun res!44485 () Bool)

(declare-fun e!56427 () Bool)

(assert (=> d!22661 (=> res!44485 e!56427)))

(assert (=> d!22661 (= res!44485 (and ((_ is Cons!1548) lt!40476) (= (_1!1126 (h!2139 lt!40476)) (_1!1126 lt!40171))))))

(assert (=> d!22661 (= (containsKey!143 lt!40476 (_1!1126 lt!40171)) e!56427)))

(declare-fun b!86590 () Bool)

(declare-fun e!56428 () Bool)

(assert (=> b!86590 (= e!56427 e!56428)))

(declare-fun res!44486 () Bool)

(assert (=> b!86590 (=> (not res!44486) (not e!56428))))

(assert (=> b!86590 (= res!44486 (and (or (not ((_ is Cons!1548) lt!40476)) (bvsle (_1!1126 (h!2139 lt!40476)) (_1!1126 lt!40171))) ((_ is Cons!1548) lt!40476) (bvslt (_1!1126 (h!2139 lt!40476)) (_1!1126 lt!40171))))))

(declare-fun b!86591 () Bool)

(assert (=> b!86591 (= e!56428 (containsKey!143 (t!5277 lt!40476) (_1!1126 lt!40171)))))

(assert (= (and d!22661 (not res!44485)) b!86590))

(assert (= (and b!86590 res!44486) b!86591))

(declare-fun m!91451 () Bool)

(assert (=> b!86591 m!91451))

(assert (=> b!85691 d!22661))

(declare-fun d!22663 () Bool)

(declare-fun e!56430 () Bool)

(assert (=> d!22663 e!56430))

(declare-fun res!44487 () Bool)

(assert (=> d!22663 (=> res!44487 e!56430)))

(declare-fun lt!41009 () Bool)

(assert (=> d!22663 (= res!44487 (not lt!41009))))

(declare-fun lt!41010 () Bool)

(assert (=> d!22663 (= lt!41009 lt!41010)))

(declare-fun lt!41008 () Unit!2533)

(declare-fun e!56429 () Unit!2533)

(assert (=> d!22663 (= lt!41008 e!56429)))

(declare-fun c!14176 () Bool)

(assert (=> d!22663 (= c!14176 lt!41010)))

(assert (=> d!22663 (= lt!41010 (containsKey!143 (toList!759 lt!40803) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22663 (= (contains!762 lt!40803 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) lt!41009)))

(declare-fun b!86592 () Bool)

(declare-fun lt!41007 () Unit!2533)

(assert (=> b!86592 (= e!56429 lt!41007)))

(assert (=> b!86592 (= lt!41007 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40803) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> b!86592 (isDefined!93 (getValueByKey!139 (toList!759 lt!40803) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86593 () Bool)

(declare-fun Unit!2580 () Unit!2533)

(assert (=> b!86593 (= e!56429 Unit!2580)))

(declare-fun b!86594 () Bool)

(assert (=> b!86594 (= e!56430 (isDefined!93 (getValueByKey!139 (toList!759 lt!40803) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(assert (= (and d!22663 c!14176) b!86592))

(assert (= (and d!22663 (not c!14176)) b!86593))

(assert (= (and d!22663 (not res!44487)) b!86594))

(declare-fun m!91453 () Bool)

(assert (=> d!22663 m!91453))

(declare-fun m!91455 () Bool)

(assert (=> b!86592 m!91455))

(assert (=> b!86592 m!90643))

(assert (=> b!86592 m!90643))

(declare-fun m!91457 () Bool)

(assert (=> b!86592 m!91457))

(assert (=> b!86594 m!90643))

(assert (=> b!86594 m!90643))

(assert (=> b!86594 m!91457))

(assert (=> d!22333 d!22663))

(declare-fun b!86595 () Bool)

(declare-fun e!56431 () Option!145)

(assert (=> b!86595 (= e!56431 (Some!144 (_2!1126 (h!2139 lt!40802))))))

(declare-fun b!86597 () Bool)

(declare-fun e!56432 () Option!145)

(assert (=> b!86597 (= e!56432 (getValueByKey!139 (t!5277 lt!40802) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86596 () Bool)

(assert (=> b!86596 (= e!56431 e!56432)))

(declare-fun c!14178 () Bool)

(assert (=> b!86596 (= c!14178 (and ((_ is Cons!1548) lt!40802) (not (= (_1!1126 (h!2139 lt!40802)) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))))

(declare-fun d!22665 () Bool)

(declare-fun c!14177 () Bool)

(assert (=> d!22665 (= c!14177 (and ((_ is Cons!1548) lt!40802) (= (_1!1126 (h!2139 lt!40802)) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(assert (=> d!22665 (= (getValueByKey!139 lt!40802 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) e!56431)))

(declare-fun b!86598 () Bool)

(assert (=> b!86598 (= e!56432 None!143)))

(assert (= (and d!22665 c!14177) b!86595))

(assert (= (and d!22665 (not c!14177)) b!86596))

(assert (= (and b!86596 c!14178) b!86597))

(assert (= (and b!86596 (not c!14178)) b!86598))

(declare-fun m!91459 () Bool)

(assert (=> b!86597 m!91459))

(assert (=> d!22333 d!22665))

(declare-fun d!22667 () Bool)

(assert (=> d!22667 (= (getValueByKey!139 lt!40802 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (Some!144 (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun lt!41011 () Unit!2533)

(assert (=> d!22667 (= lt!41011 (choose!508 lt!40802 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun e!56433 () Bool)

(assert (=> d!22667 e!56433))

(declare-fun res!44488 () Bool)

(assert (=> d!22667 (=> (not res!44488) (not e!56433))))

(assert (=> d!22667 (= res!44488 (isStrictlySorted!293 lt!40802))))

(assert (=> d!22667 (= (lemmaContainsTupThenGetReturnValue!58 lt!40802 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) lt!41011)))

(declare-fun b!86599 () Bool)

(declare-fun res!44489 () Bool)

(assert (=> b!86599 (=> (not res!44489) (not e!56433))))

(assert (=> b!86599 (= res!44489 (containsKey!143 lt!40802 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86600 () Bool)

(assert (=> b!86600 (= e!56433 (contains!764 lt!40802 (tuple2!2233 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(assert (= (and d!22667 res!44488) b!86599))

(assert (= (and b!86599 res!44489) b!86600))

(assert (=> d!22667 m!90637))

(declare-fun m!91461 () Bool)

(assert (=> d!22667 m!91461))

(declare-fun m!91463 () Bool)

(assert (=> d!22667 m!91463))

(declare-fun m!91465 () Bool)

(assert (=> b!86599 m!91465))

(declare-fun m!91467 () Bool)

(assert (=> b!86600 m!91467))

(assert (=> d!22333 d!22667))

(declare-fun e!56435 () List!1552)

(declare-fun c!14179 () Bool)

(declare-fun b!86601 () Bool)

(declare-fun c!14180 () Bool)

(assert (=> b!86601 (= e!56435 (ite c!14179 (t!5277 (toList!759 e!55773)) (ite c!14180 (Cons!1548 (h!2139 (toList!759 e!55773)) (t!5277 (toList!759 e!55773))) Nil!1549)))))

(declare-fun e!56437 () Bool)

(declare-fun b!86602 () Bool)

(declare-fun lt!41012 () List!1552)

(assert (=> b!86602 (= e!56437 (contains!764 lt!41012 (tuple2!2233 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun b!86603 () Bool)

(declare-fun e!56436 () List!1552)

(declare-fun e!56434 () List!1552)

(assert (=> b!86603 (= e!56436 e!56434)))

(assert (=> b!86603 (= c!14179 (and ((_ is Cons!1548) (toList!759 e!55773)) (= (_1!1126 (h!2139 (toList!759 e!55773))) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun b!86604 () Bool)

(declare-fun res!44490 () Bool)

(assert (=> b!86604 (=> (not res!44490) (not e!56437))))

(assert (=> b!86604 (= res!44490 (containsKey!143 lt!41012 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun d!22669 () Bool)

(assert (=> d!22669 e!56437))

(declare-fun res!44491 () Bool)

(assert (=> d!22669 (=> (not res!44491) (not e!56437))))

(assert (=> d!22669 (= res!44491 (isStrictlySorted!293 lt!41012))))

(assert (=> d!22669 (= lt!41012 e!56436)))

(declare-fun c!14181 () Bool)

(assert (=> d!22669 (= c!14181 (and ((_ is Cons!1548) (toList!759 e!55773)) (bvslt (_1!1126 (h!2139 (toList!759 e!55773))) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(assert (=> d!22669 (isStrictlySorted!293 (toList!759 e!55773))))

(assert (=> d!22669 (= (insertStrictlySorted!60 (toList!759 e!55773) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) lt!41012)))

(declare-fun call!8242 () List!1552)

(declare-fun bm!8239 () Bool)

(assert (=> bm!8239 (= call!8242 ($colon$colon!71 e!56435 (ite c!14181 (h!2139 (toList!759 e!55773)) (tuple2!2233 (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))))

(declare-fun c!14182 () Bool)

(assert (=> bm!8239 (= c!14182 c!14181)))

(declare-fun bm!8240 () Bool)

(declare-fun call!8244 () List!1552)

(declare-fun call!8243 () List!1552)

(assert (=> bm!8240 (= call!8244 call!8243)))

(declare-fun b!86605 () Bool)

(assert (=> b!86605 (= e!56436 call!8242)))

(declare-fun b!86606 () Bool)

(declare-fun e!56438 () List!1552)

(assert (=> b!86606 (= e!56438 call!8244)))

(declare-fun b!86607 () Bool)

(assert (=> b!86607 (= e!56434 call!8243)))

(declare-fun b!86608 () Bool)

(assert (=> b!86608 (= e!56435 (insertStrictlySorted!60 (t!5277 (toList!759 e!55773)) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_2!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86609 () Bool)

(assert (=> b!86609 (= e!56438 call!8244)))

(declare-fun b!86610 () Bool)

(assert (=> b!86610 (= c!14180 (and ((_ is Cons!1548) (toList!759 e!55773)) (bvsgt (_1!1126 (h!2139 (toList!759 e!55773))) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(assert (=> b!86610 (= e!56434 e!56438)))

(declare-fun bm!8241 () Bool)

(assert (=> bm!8241 (= call!8243 call!8242)))

(assert (= (and d!22669 c!14181) b!86605))

(assert (= (and d!22669 (not c!14181)) b!86603))

(assert (= (and b!86603 c!14179) b!86607))

(assert (= (and b!86603 (not c!14179)) b!86610))

(assert (= (and b!86610 c!14180) b!86609))

(assert (= (and b!86610 (not c!14180)) b!86606))

(assert (= (or b!86609 b!86606) bm!8240))

(assert (= (or b!86607 bm!8240) bm!8241))

(assert (= (or b!86605 bm!8241) bm!8239))

(assert (= (and bm!8239 c!14182) b!86608))

(assert (= (and bm!8239 (not c!14182)) b!86601))

(assert (= (and d!22669 res!44491) b!86604))

(assert (= (and b!86604 res!44490) b!86602))

(declare-fun m!91469 () Bool)

(assert (=> b!86604 m!91469))

(declare-fun m!91471 () Bool)

(assert (=> b!86608 m!91471))

(declare-fun m!91473 () Bool)

(assert (=> d!22669 m!91473))

(declare-fun m!91475 () Bool)

(assert (=> d!22669 m!91475))

(declare-fun m!91477 () Bool)

(assert (=> b!86602 m!91477))

(declare-fun m!91479 () Bool)

(assert (=> bm!8239 m!91479))

(assert (=> d!22333 d!22669))

(declare-fun b!86611 () Bool)

(declare-fun e!56439 () Option!145)

(assert (=> b!86611 (= e!56439 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40630)))))))

(declare-fun b!86613 () Bool)

(declare-fun e!56440 () Option!145)

(assert (=> b!86613 (= e!56440 (getValueByKey!139 (t!5277 (toList!759 lt!40630)) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86612 () Bool)

(assert (=> b!86612 (= e!56439 e!56440)))

(declare-fun c!14184 () Bool)

(assert (=> b!86612 (= c!14184 (and ((_ is Cons!1548) (toList!759 lt!40630)) (not (= (_1!1126 (h!2139 (toList!759 lt!40630))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!22671 () Bool)

(declare-fun c!14183 () Bool)

(assert (=> d!22671 (= c!14183 (and ((_ is Cons!1548) (toList!759 lt!40630)) (= (_1!1126 (h!2139 (toList!759 lt!40630))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22671 (= (getValueByKey!139 (toList!759 lt!40630) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56439)))

(declare-fun b!86614 () Bool)

(assert (=> b!86614 (= e!56440 None!143)))

(assert (= (and d!22671 c!14183) b!86611))

(assert (= (and d!22671 (not c!14183)) b!86612))

(assert (= (and b!86612 c!14184) b!86613))

(assert (= (and b!86612 (not c!14184)) b!86614))

(declare-fun m!91481 () Bool)

(assert (=> b!86613 m!91481))

(assert (=> b!85933 d!22671))

(declare-fun d!22673 () Bool)

(declare-fun res!44492 () Bool)

(declare-fun e!56441 () Bool)

(assert (=> d!22673 (=> res!44492 e!56441)))

(assert (=> d!22673 (= res!44492 (and ((_ is Cons!1548) (toList!759 lt!40443)) (= (_1!1126 (h!2139 (toList!759 lt!40443))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22673 (= (containsKey!143 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000) e!56441)))

(declare-fun b!86615 () Bool)

(declare-fun e!56442 () Bool)

(assert (=> b!86615 (= e!56441 e!56442)))

(declare-fun res!44493 () Bool)

(assert (=> b!86615 (=> (not res!44493) (not e!56442))))

(assert (=> b!86615 (= res!44493 (and (or (not ((_ is Cons!1548) (toList!759 lt!40443))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40443))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1548) (toList!759 lt!40443)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40443))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86616 () Bool)

(assert (=> b!86616 (= e!56442 (containsKey!143 (t!5277 (toList!759 lt!40443)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22673 (not res!44492)) b!86615))

(assert (= (and b!86615 res!44493) b!86616))

(declare-fun m!91483 () Bool)

(assert (=> b!86616 m!91483))

(assert (=> d!22337 d!22673))

(declare-fun d!22675 () Bool)

(declare-fun e!56444 () Bool)

(assert (=> d!22675 e!56444))

(declare-fun res!44494 () Bool)

(assert (=> d!22675 (=> res!44494 e!56444)))

(declare-fun lt!41015 () Bool)

(assert (=> d!22675 (= res!44494 (not lt!41015))))

(declare-fun lt!41016 () Bool)

(assert (=> d!22675 (= lt!41015 lt!41016)))

(declare-fun lt!41014 () Unit!2533)

(declare-fun e!56443 () Unit!2533)

(assert (=> d!22675 (= lt!41014 e!56443)))

(declare-fun c!14185 () Bool)

(assert (=> d!22675 (= c!14185 lt!41016)))

(assert (=> d!22675 (= lt!41016 (containsKey!143 (toList!759 (+!116 lt!40847 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))) lt!40849))))

(assert (=> d!22675 (= (contains!762 (+!116 lt!40847 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) lt!40849) lt!41015)))

(declare-fun b!86617 () Bool)

(declare-fun lt!41013 () Unit!2533)

(assert (=> b!86617 (= e!56443 lt!41013)))

(assert (=> b!86617 (= lt!41013 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (+!116 lt!40847 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))) lt!40849))))

(assert (=> b!86617 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40847 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))) lt!40849))))

(declare-fun b!86618 () Bool)

(declare-fun Unit!2581 () Unit!2533)

(assert (=> b!86618 (= e!56443 Unit!2581)))

(declare-fun b!86619 () Bool)

(assert (=> b!86619 (= e!56444 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40847 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))) lt!40849)))))

(assert (= (and d!22675 c!14185) b!86617))

(assert (= (and d!22675 (not c!14185)) b!86618))

(assert (= (and d!22675 (not res!44494)) b!86619))

(declare-fun m!91485 () Bool)

(assert (=> d!22675 m!91485))

(declare-fun m!91487 () Bool)

(assert (=> b!86617 m!91487))

(declare-fun m!91489 () Bool)

(assert (=> b!86617 m!91489))

(assert (=> b!86617 m!91489))

(declare-fun m!91491 () Bool)

(assert (=> b!86617 m!91491))

(assert (=> b!86619 m!91489))

(assert (=> b!86619 m!91489))

(assert (=> b!86619 m!91491))

(assert (=> b!86164 d!22675))

(declare-fun d!22677 () Bool)

(assert (=> d!22677 (= (apply!82 (+!116 lt!40840 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) lt!40832) (apply!82 lt!40840 lt!40832))))

(declare-fun lt!41017 () Unit!2533)

(assert (=> d!22677 (= lt!41017 (choose!515 lt!40840 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) lt!40832))))

(declare-fun e!56445 () Bool)

(assert (=> d!22677 e!56445))

(declare-fun res!44495 () Bool)

(assert (=> d!22677 (=> (not res!44495) (not e!56445))))

(assert (=> d!22677 (= res!44495 (contains!762 lt!40840 lt!40832))))

(assert (=> d!22677 (= (addApplyDifferent!58 lt!40840 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) lt!40832) lt!41017)))

(declare-fun b!86620 () Bool)

(assert (=> b!86620 (= e!56445 (not (= lt!40832 lt!40851)))))

(assert (= (and d!22677 res!44495) b!86620))

(declare-fun m!91493 () Bool)

(assert (=> d!22677 m!91493))

(assert (=> d!22677 m!90721))

(declare-fun m!91495 () Bool)

(assert (=> d!22677 m!91495))

(assert (=> d!22677 m!90717))

(assert (=> d!22677 m!90721))

(assert (=> d!22677 m!90735))

(assert (=> b!86164 d!22677))

(declare-fun d!22679 () Bool)

(assert (=> d!22679 (= (apply!82 (+!116 lt!40836 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) lt!40833) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40836 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))) lt!40833)))))

(declare-fun bs!3648 () Bool)

(assert (= bs!3648 d!22679))

(declare-fun m!91497 () Bool)

(assert (=> bs!3648 m!91497))

(assert (=> bs!3648 m!91497))

(declare-fun m!91499 () Bool)

(assert (=> bs!3648 m!91499))

(assert (=> b!86164 d!22679))

(declare-fun d!22681 () Bool)

(assert (=> d!22681 (= (apply!82 lt!40843 lt!40845) (get!1216 (getValueByKey!139 (toList!759 lt!40843) lt!40845)))))

(declare-fun bs!3649 () Bool)

(assert (= bs!3649 d!22681))

(declare-fun m!91501 () Bool)

(assert (=> bs!3649 m!91501))

(assert (=> bs!3649 m!91501))

(declare-fun m!91503 () Bool)

(assert (=> bs!3649 m!91503))

(assert (=> b!86164 d!22681))

(declare-fun d!22683 () Bool)

(assert (=> d!22683 (= (apply!82 (+!116 lt!40840 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) lt!40832) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40840 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))) lt!40832)))))

(declare-fun bs!3650 () Bool)

(assert (= bs!3650 d!22683))

(declare-fun m!91505 () Bool)

(assert (=> bs!3650 m!91505))

(assert (=> bs!3650 m!91505))

(declare-fun m!91507 () Bool)

(assert (=> bs!3650 m!91507))

(assert (=> b!86164 d!22683))

(declare-fun d!22685 () Bool)

(assert (=> d!22685 (= (apply!82 (+!116 lt!40843 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) lt!40845) (apply!82 lt!40843 lt!40845))))

(declare-fun lt!41018 () Unit!2533)

(assert (=> d!22685 (= lt!41018 (choose!515 lt!40843 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) lt!40845))))

(declare-fun e!56446 () Bool)

(assert (=> d!22685 e!56446))

(declare-fun res!44496 () Bool)

(assert (=> d!22685 (=> (not res!44496) (not e!56446))))

(assert (=> d!22685 (= res!44496 (contains!762 lt!40843 lt!40845))))

(assert (=> d!22685 (= (addApplyDifferent!58 lt!40843 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) lt!40845) lt!41018)))

(declare-fun b!86621 () Bool)

(assert (=> b!86621 (= e!56446 (not (= lt!40845 lt!40846)))))

(assert (= (and d!22685 res!44496) b!86621))

(declare-fun m!91509 () Bool)

(assert (=> d!22685 m!91509))

(assert (=> d!22685 m!90723))

(declare-fun m!91511 () Bool)

(assert (=> d!22685 m!91511))

(assert (=> d!22685 m!90741))

(assert (=> d!22685 m!90723))

(assert (=> d!22685 m!90737))

(assert (=> b!86164 d!22685))

(declare-fun d!22687 () Bool)

(declare-fun e!56447 () Bool)

(assert (=> d!22687 e!56447))

(declare-fun res!44497 () Bool)

(assert (=> d!22687 (=> (not res!44497) (not e!56447))))

(declare-fun lt!41020 () ListLongMap!1487)

(assert (=> d!22687 (= res!44497 (contains!762 lt!41020 (_1!1126 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))))))

(declare-fun lt!41019 () List!1552)

(assert (=> d!22687 (= lt!41020 (ListLongMap!1488 lt!41019))))

(declare-fun lt!41021 () Unit!2533)

(declare-fun lt!41022 () Unit!2533)

(assert (=> d!22687 (= lt!41021 lt!41022)))

(assert (=> d!22687 (= (getValueByKey!139 lt!41019 (_1!1126 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))) (Some!144 (_2!1126 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))))))

(assert (=> d!22687 (= lt!41022 (lemmaContainsTupThenGetReturnValue!58 lt!41019 (_1!1126 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) (_2!1126 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))))))

(assert (=> d!22687 (= lt!41019 (insertStrictlySorted!60 (toList!759 lt!40847) (_1!1126 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) (_2!1126 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))))))

(assert (=> d!22687 (= (+!116 lt!40847 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) lt!41020)))

(declare-fun b!86622 () Bool)

(declare-fun res!44498 () Bool)

(assert (=> b!86622 (=> (not res!44498) (not e!56447))))

(assert (=> b!86622 (= res!44498 (= (getValueByKey!139 (toList!759 lt!41020) (_1!1126 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))) (Some!144 (_2!1126 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))))))))

(declare-fun b!86623 () Bool)

(assert (=> b!86623 (= e!56447 (contains!764 (toList!759 lt!41020) (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))))))

(assert (= (and d!22687 res!44497) b!86622))

(assert (= (and b!86622 res!44498) b!86623))

(declare-fun m!91513 () Bool)

(assert (=> d!22687 m!91513))

(declare-fun m!91515 () Bool)

(assert (=> d!22687 m!91515))

(declare-fun m!91517 () Bool)

(assert (=> d!22687 m!91517))

(declare-fun m!91519 () Bool)

(assert (=> d!22687 m!91519))

(declare-fun m!91521 () Bool)

(assert (=> b!86622 m!91521))

(declare-fun m!91523 () Bool)

(assert (=> b!86623 m!91523))

(assert (=> b!86164 d!22687))

(declare-fun d!22689 () Bool)

(declare-fun e!56448 () Bool)

(assert (=> d!22689 e!56448))

(declare-fun res!44499 () Bool)

(assert (=> d!22689 (=> (not res!44499) (not e!56448))))

(declare-fun lt!41024 () ListLongMap!1487)

(assert (=> d!22689 (= res!44499 (contains!762 lt!41024 (_1!1126 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(declare-fun lt!41023 () List!1552)

(assert (=> d!22689 (= lt!41024 (ListLongMap!1488 lt!41023))))

(declare-fun lt!41025 () Unit!2533)

(declare-fun lt!41026 () Unit!2533)

(assert (=> d!22689 (= lt!41025 lt!41026)))

(assert (=> d!22689 (= (getValueByKey!139 lt!41023 (_1!1126 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))) (Some!144 (_2!1126 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(assert (=> d!22689 (= lt!41026 (lemmaContainsTupThenGetReturnValue!58 lt!41023 (_1!1126 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) (_2!1126 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(assert (=> d!22689 (= lt!41023 (insertStrictlySorted!60 (toList!759 lt!40843) (_1!1126 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) (_2!1126 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(assert (=> d!22689 (= (+!116 lt!40843 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) lt!41024)))

(declare-fun b!86624 () Bool)

(declare-fun res!44500 () Bool)

(assert (=> b!86624 (=> (not res!44500) (not e!56448))))

(assert (=> b!86624 (= res!44500 (= (getValueByKey!139 (toList!759 lt!41024) (_1!1126 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))) (Some!144 (_2!1126 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))))))

(declare-fun b!86625 () Bool)

(assert (=> b!86625 (= e!56448 (contains!764 (toList!759 lt!41024) (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))))

(assert (= (and d!22689 res!44499) b!86624))

(assert (= (and b!86624 res!44500) b!86625))

(declare-fun m!91525 () Bool)

(assert (=> d!22689 m!91525))

(declare-fun m!91527 () Bool)

(assert (=> d!22689 m!91527))

(declare-fun m!91529 () Bool)

(assert (=> d!22689 m!91529))

(declare-fun m!91531 () Bool)

(assert (=> d!22689 m!91531))

(declare-fun m!91533 () Bool)

(assert (=> b!86624 m!91533))

(declare-fun m!91535 () Bool)

(assert (=> b!86625 m!91535))

(assert (=> b!86164 d!22689))

(declare-fun d!22691 () Bool)

(declare-fun e!56449 () Bool)

(assert (=> d!22691 e!56449))

(declare-fun res!44501 () Bool)

(assert (=> d!22691 (=> (not res!44501) (not e!56449))))

(declare-fun lt!41028 () ListLongMap!1487)

(assert (=> d!22691 (= res!44501 (contains!762 lt!41028 (_1!1126 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(declare-fun lt!41027 () List!1552)

(assert (=> d!22691 (= lt!41028 (ListLongMap!1488 lt!41027))))

(declare-fun lt!41029 () Unit!2533)

(declare-fun lt!41030 () Unit!2533)

(assert (=> d!22691 (= lt!41029 lt!41030)))

(assert (=> d!22691 (= (getValueByKey!139 lt!41027 (_1!1126 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))) (Some!144 (_2!1126 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(assert (=> d!22691 (= lt!41030 (lemmaContainsTupThenGetReturnValue!58 lt!41027 (_1!1126 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) (_2!1126 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(assert (=> d!22691 (= lt!41027 (insertStrictlySorted!60 (toList!759 lt!40840) (_1!1126 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) (_2!1126 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(assert (=> d!22691 (= (+!116 lt!40840 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) lt!41028)))

(declare-fun b!86626 () Bool)

(declare-fun res!44502 () Bool)

(assert (=> b!86626 (=> (not res!44502) (not e!56449))))

(assert (=> b!86626 (= res!44502 (= (getValueByKey!139 (toList!759 lt!41028) (_1!1126 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))) (Some!144 (_2!1126 (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))))))

(declare-fun b!86627 () Bool)

(assert (=> b!86627 (= e!56449 (contains!764 (toList!759 lt!41028) (tuple2!2233 lt!40851 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))))

(assert (= (and d!22691 res!44501) b!86626))

(assert (= (and b!86626 res!44502) b!86627))

(declare-fun m!91537 () Bool)

(assert (=> d!22691 m!91537))

(declare-fun m!91539 () Bool)

(assert (=> d!22691 m!91539))

(declare-fun m!91541 () Bool)

(assert (=> d!22691 m!91541))

(declare-fun m!91543 () Bool)

(assert (=> d!22691 m!91543))

(declare-fun m!91545 () Bool)

(assert (=> b!86626 m!91545))

(declare-fun m!91547 () Bool)

(assert (=> b!86627 m!91547))

(assert (=> b!86164 d!22691))

(declare-fun d!22693 () Bool)

(assert (=> d!22693 (= (apply!82 lt!40840 lt!40832) (get!1216 (getValueByKey!139 (toList!759 lt!40840) lt!40832)))))

(declare-fun bs!3651 () Bool)

(assert (= bs!3651 d!22693))

(declare-fun m!91549 () Bool)

(assert (=> bs!3651 m!91549))

(assert (=> bs!3651 m!91549))

(declare-fun m!91551 () Bool)

(assert (=> bs!3651 m!91551))

(assert (=> b!86164 d!22693))

(declare-fun d!22695 () Bool)

(assert (=> d!22695 (= (apply!82 (+!116 lt!40843 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) lt!40845) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40843 (tuple2!2233 lt!40846 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))) lt!40845)))))

(declare-fun bs!3652 () Bool)

(assert (= bs!3652 d!22695))

(declare-fun m!91553 () Bool)

(assert (=> bs!3652 m!91553))

(assert (=> bs!3652 m!91553))

(declare-fun m!91555 () Bool)

(assert (=> bs!3652 m!91555))

(assert (=> b!86164 d!22695))

(declare-fun b!86628 () Bool)

(declare-fun e!56451 () Bool)

(declare-fun e!56452 () Bool)

(assert (=> b!86628 (= e!56451 e!56452)))

(declare-fun c!14189 () Bool)

(assert (=> b!86628 (= c!14189 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!86629 () Bool)

(declare-fun e!56450 () Bool)

(assert (=> b!86629 (= e!56450 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86629 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!86630 () Bool)

(declare-fun lt!41032 () Unit!2533)

(declare-fun lt!41034 () Unit!2533)

(assert (=> b!86630 (= lt!41032 lt!41034)))

(declare-fun lt!41036 () V!3027)

(declare-fun lt!41035 () (_ BitVec 64))

(declare-fun lt!41031 () ListLongMap!1487)

(declare-fun lt!41033 () (_ BitVec 64))

(assert (=> b!86630 (not (contains!762 (+!116 lt!41031 (tuple2!2233 lt!41035 lt!41036)) lt!41033))))

(assert (=> b!86630 (= lt!41034 (addStillNotContains!33 lt!41031 lt!41035 lt!41036 lt!41033))))

(assert (=> b!86630 (= lt!41033 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86630 (= lt!41036 (get!1212 (select (arr!1919 (ite c!13870 (_values!2321 newMap!16) lt!40379)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86630 (= lt!41035 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!8245 () ListLongMap!1487)

(assert (=> b!86630 (= lt!41031 call!8245)))

(declare-fun e!56453 () ListLongMap!1487)

(assert (=> b!86630 (= e!56453 (+!116 call!8245 (tuple2!2233 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (get!1212 (select (arr!1919 (ite c!13870 (_values!2321 newMap!16) lt!40379)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!86631 () Bool)

(declare-fun e!56455 () ListLongMap!1487)

(assert (=> b!86631 (= e!56455 (ListLongMap!1488 Nil!1549))))

(declare-fun b!86633 () Bool)

(declare-fun e!56456 () Bool)

(assert (=> b!86633 (= e!56451 e!56456)))

(assert (=> b!86633 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun res!44506 () Bool)

(declare-fun lt!41037 () ListLongMap!1487)

(assert (=> b!86633 (= res!44506 (contains!762 lt!41037 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86633 (=> (not res!44506) (not e!56456))))

(declare-fun b!86634 () Bool)

(assert (=> b!86634 (= e!56452 (isEmpty!340 lt!41037))))

(declare-fun b!86635 () Bool)

(declare-fun e!56454 () Bool)

(assert (=> b!86635 (= e!56454 e!56451)))

(declare-fun c!14188 () Bool)

(assert (=> b!86635 (= c!14188 e!56450)))

(declare-fun res!44504 () Bool)

(assert (=> b!86635 (=> (not res!44504) (not e!56450))))

(assert (=> b!86635 (= res!44504 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!86636 () Bool)

(assert (=> b!86636 (= e!56453 call!8245)))

(declare-fun b!86637 () Bool)

(assert (=> b!86637 (= e!56455 e!56453)))

(declare-fun c!14186 () Bool)

(assert (=> b!86637 (= c!14186 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86638 () Bool)

(assert (=> b!86638 (= e!56452 (= lt!41037 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite c!13870 (_values!2321 newMap!16) lt!40379) (mask!6366 newMap!16) (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16))))))

(declare-fun bm!8242 () Bool)

(assert (=> bm!8242 (= call!8245 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite c!13870 (_values!2321 newMap!16) lt!40379) (mask!6366 newMap!16) (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16)))))

(declare-fun b!86639 () Bool)

(assert (=> b!86639 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> b!86639 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (ite c!13870 (_values!2321 newMap!16) lt!40379))))))

(assert (=> b!86639 (= e!56456 (= (apply!82 lt!41037 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 (ite c!13870 (_values!2321 newMap!16) lt!40379)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!22697 () Bool)

(assert (=> d!22697 e!56454))

(declare-fun res!44503 () Bool)

(assert (=> d!22697 (=> (not res!44503) (not e!56454))))

(assert (=> d!22697 (= res!44503 (not (contains!762 lt!41037 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22697 (= lt!41037 e!56455)))

(declare-fun c!14187 () Bool)

(assert (=> d!22697 (= c!14187 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22697 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22697 (= (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite c!13870 (_values!2321 newMap!16) lt!40379) (mask!6366 newMap!16) (ite c!13870 (ite c!13872 lt!40380 lt!40385) (extraKeys!2177 newMap!16)) (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41037)))

(declare-fun b!86632 () Bool)

(declare-fun res!44505 () Bool)

(assert (=> b!86632 (=> (not res!44505) (not e!56454))))

(assert (=> b!86632 (= res!44505 (not (contains!762 lt!41037 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22697 c!14187) b!86631))

(assert (= (and d!22697 (not c!14187)) b!86637))

(assert (= (and b!86637 c!14186) b!86630))

(assert (= (and b!86637 (not c!14186)) b!86636))

(assert (= (or b!86630 b!86636) bm!8242))

(assert (= (and d!22697 res!44503) b!86632))

(assert (= (and b!86632 res!44505) b!86635))

(assert (= (and b!86635 res!44504) b!86629))

(assert (= (and b!86635 c!14188) b!86633))

(assert (= (and b!86635 (not c!14188)) b!86628))

(assert (= (and b!86633 res!44506) b!86639))

(assert (= (and b!86628 c!14189) b!86638))

(assert (= (and b!86628 (not c!14189)) b!86634))

(declare-fun b_lambda!3835 () Bool)

(assert (=> (not b_lambda!3835) (not b!86630)))

(assert (=> b!86630 t!5286))

(declare-fun b_and!5213 () Bool)

(assert (= b_and!5209 (and (=> t!5286 result!2931) b_and!5213)))

(assert (=> b!86630 t!5288))

(declare-fun b_and!5215 () Bool)

(assert (= b_and!5211 (and (=> t!5288 result!2933) b_and!5215)))

(declare-fun b_lambda!3837 () Bool)

(assert (=> (not b_lambda!3837) (not b!86639)))

(assert (=> b!86639 t!5286))

(declare-fun b_and!5217 () Bool)

(assert (= b_and!5213 (and (=> t!5286 result!2931) b_and!5217)))

(assert (=> b!86639 t!5288))

(declare-fun b_and!5219 () Bool)

(assert (= b_and!5215 (and (=> t!5288 result!2933) b_and!5219)))

(assert (=> b!86637 m!89941))

(assert (=> b!86637 m!89941))

(assert (=> b!86637 m!89961))

(assert (=> b!86629 m!89941))

(assert (=> b!86629 m!89941))

(assert (=> b!86629 m!89961))

(declare-fun m!91557 () Bool)

(assert (=> b!86638 m!91557))

(declare-fun m!91559 () Bool)

(assert (=> d!22697 m!91559))

(assert (=> d!22697 m!89885))

(assert (=> b!86633 m!89941))

(assert (=> b!86633 m!89941))

(declare-fun m!91561 () Bool)

(assert (=> b!86633 m!91561))

(assert (=> bm!8242 m!91557))

(declare-fun m!91563 () Bool)

(assert (=> b!86634 m!91563))

(assert (=> b!86630 m!90753))

(declare-fun m!91565 () Bool)

(assert (=> b!86630 m!91565))

(declare-fun m!91567 () Bool)

(assert (=> b!86630 m!91567))

(declare-fun m!91569 () Bool)

(assert (=> b!86630 m!91569))

(assert (=> b!86630 m!89941))

(assert (=> b!86630 m!89967))

(assert (=> b!86630 m!90753))

(assert (=> b!86630 m!89967))

(assert (=> b!86630 m!90755))

(assert (=> b!86630 m!91565))

(declare-fun m!91571 () Bool)

(assert (=> b!86630 m!91571))

(assert (=> b!86639 m!89941))

(declare-fun m!91573 () Bool)

(assert (=> b!86639 m!91573))

(assert (=> b!86639 m!90753))

(assert (=> b!86639 m!90753))

(assert (=> b!86639 m!89967))

(assert (=> b!86639 m!90755))

(assert (=> b!86639 m!89941))

(assert (=> b!86639 m!89967))

(declare-fun m!91575 () Bool)

(assert (=> b!86632 m!91575))

(assert (=> b!86164 d!22697))

(declare-fun d!22699 () Bool)

(declare-fun e!56457 () Bool)

(assert (=> d!22699 e!56457))

(declare-fun res!44507 () Bool)

(assert (=> d!22699 (=> (not res!44507) (not e!56457))))

(declare-fun lt!41039 () ListLongMap!1487)

(assert (=> d!22699 (= res!44507 (contains!762 lt!41039 (_1!1126 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))))))

(declare-fun lt!41038 () List!1552)

(assert (=> d!22699 (= lt!41039 (ListLongMap!1488 lt!41038))))

(declare-fun lt!41040 () Unit!2533)

(declare-fun lt!41041 () Unit!2533)

(assert (=> d!22699 (= lt!41040 lt!41041)))

(assert (=> d!22699 (= (getValueByKey!139 lt!41038 (_1!1126 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))) (Some!144 (_2!1126 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))))))

(assert (=> d!22699 (= lt!41041 (lemmaContainsTupThenGetReturnValue!58 lt!41038 (_1!1126 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) (_2!1126 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))))))

(assert (=> d!22699 (= lt!41038 (insertStrictlySorted!60 (toList!759 lt!40836) (_1!1126 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) (_2!1126 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))))))

(assert (=> d!22699 (= (+!116 lt!40836 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) lt!41039)))

(declare-fun b!86640 () Bool)

(declare-fun res!44508 () Bool)

(assert (=> b!86640 (=> (not res!44508) (not e!56457))))

(assert (=> b!86640 (= res!44508 (= (getValueByKey!139 (toList!759 lt!41039) (_1!1126 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))))) (Some!144 (_2!1126 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))))))))

(declare-fun b!86641 () Bool)

(assert (=> b!86641 (= e!56457 (contains!764 (toList!759 lt!41039) (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))))))

(assert (= (and d!22699 res!44507) b!86640))

(assert (= (and b!86640 res!44508) b!86641))

(declare-fun m!91577 () Bool)

(assert (=> d!22699 m!91577))

(declare-fun m!91579 () Bool)

(assert (=> d!22699 m!91579))

(declare-fun m!91581 () Bool)

(assert (=> d!22699 m!91581))

(declare-fun m!91583 () Bool)

(assert (=> d!22699 m!91583))

(declare-fun m!91585 () Bool)

(assert (=> b!86640 m!91585))

(declare-fun m!91587 () Bool)

(assert (=> b!86641 m!91587))

(assert (=> b!86164 d!22699))

(declare-fun d!22701 () Bool)

(assert (=> d!22701 (contains!762 (+!116 lt!40847 (tuple2!2233 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) lt!40849)))

(declare-fun lt!41042 () Unit!2533)

(assert (=> d!22701 (= lt!41042 (choose!514 lt!40847 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) lt!40849))))

(assert (=> d!22701 (contains!762 lt!40847 lt!40849)))

(assert (=> d!22701 (= (addStillContains!58 lt!40847 lt!40831 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) lt!40849) lt!41042)))

(declare-fun bs!3653 () Bool)

(assert (= bs!3653 d!22701))

(assert (=> bs!3653 m!90713))

(assert (=> bs!3653 m!90713))

(assert (=> bs!3653 m!90715))

(declare-fun m!91589 () Bool)

(assert (=> bs!3653 m!91589))

(declare-fun m!91591 () Bool)

(assert (=> bs!3653 m!91591))

(assert (=> b!86164 d!22701))

(declare-fun d!22703 () Bool)

(assert (=> d!22703 (= (apply!82 lt!40836 lt!40833) (get!1216 (getValueByKey!139 (toList!759 lt!40836) lt!40833)))))

(declare-fun bs!3654 () Bool)

(assert (= bs!3654 d!22703))

(declare-fun m!91593 () Bool)

(assert (=> bs!3654 m!91593))

(assert (=> bs!3654 m!91593))

(declare-fun m!91595 () Bool)

(assert (=> bs!3654 m!91595))

(assert (=> b!86164 d!22703))

(declare-fun d!22705 () Bool)

(assert (=> d!22705 (= (apply!82 (+!116 lt!40836 (tuple2!2233 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)))) lt!40833) (apply!82 lt!40836 lt!40833))))

(declare-fun lt!41043 () Unit!2533)

(assert (=> d!22705 (= lt!41043 (choose!515 lt!40836 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) lt!40833))))

(declare-fun e!56458 () Bool)

(assert (=> d!22705 e!56458))

(declare-fun res!44509 () Bool)

(assert (=> d!22705 (=> (not res!44509) (not e!56458))))

(assert (=> d!22705 (= res!44509 (contains!762 lt!40836 lt!40833))))

(assert (=> d!22705 (= (addApplyDifferent!58 lt!40836 lt!40842 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16)) lt!40833) lt!41043)))

(declare-fun b!86642 () Bool)

(assert (=> b!86642 (= e!56458 (not (= lt!40833 lt!40842)))))

(assert (= (and d!22705 res!44509) b!86642))

(declare-fun m!91597 () Bool)

(assert (=> d!22705 m!91597))

(assert (=> d!22705 m!90727))

(declare-fun m!91599 () Bool)

(assert (=> d!22705 m!91599))

(assert (=> d!22705 m!90719))

(assert (=> d!22705 m!90727))

(assert (=> d!22705 m!90729))

(assert (=> b!86164 d!22705))

(declare-fun d!22707 () Bool)

(declare-fun res!44510 () Bool)

(declare-fun e!56459 () Bool)

(assert (=> d!22707 (=> res!44510 e!56459)))

(assert (=> d!22707 (= res!44510 (and ((_ is Cons!1548) lt!40255) (= (_1!1126 (h!2139 lt!40255)) (_1!1126 lt!40172))))))

(assert (=> d!22707 (= (containsKey!143 lt!40255 (_1!1126 lt!40172)) e!56459)))

(declare-fun b!86643 () Bool)

(declare-fun e!56460 () Bool)

(assert (=> b!86643 (= e!56459 e!56460)))

(declare-fun res!44511 () Bool)

(assert (=> b!86643 (=> (not res!44511) (not e!56460))))

(assert (=> b!86643 (= res!44511 (and (or (not ((_ is Cons!1548) lt!40255)) (bvsle (_1!1126 (h!2139 lt!40255)) (_1!1126 lt!40172))) ((_ is Cons!1548) lt!40255) (bvslt (_1!1126 (h!2139 lt!40255)) (_1!1126 lt!40172))))))

(declare-fun b!86644 () Bool)

(assert (=> b!86644 (= e!56460 (containsKey!143 (t!5277 lt!40255) (_1!1126 lt!40172)))))

(assert (= (and d!22707 (not res!44510)) b!86643))

(assert (= (and b!86643 res!44511) b!86644))

(declare-fun m!91601 () Bool)

(assert (=> b!86644 m!91601))

(assert (=> b!86081 d!22707))

(declare-fun lt!41044 () Bool)

(declare-fun d!22709 () Bool)

(assert (=> d!22709 (= lt!41044 (select (content!88 (toList!759 lt!40527)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!56461 () Bool)

(assert (=> d!22709 (= lt!41044 e!56461)))

(declare-fun res!44513 () Bool)

(assert (=> d!22709 (=> (not res!44513) (not e!56461))))

(assert (=> d!22709 (= res!44513 ((_ is Cons!1548) (toList!759 lt!40527)))))

(assert (=> d!22709 (= (contains!764 (toList!759 lt!40527) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!41044)))

(declare-fun b!86645 () Bool)

(declare-fun e!56462 () Bool)

(assert (=> b!86645 (= e!56461 e!56462)))

(declare-fun res!44512 () Bool)

(assert (=> b!86645 (=> res!44512 e!56462)))

(assert (=> b!86645 (= res!44512 (= (h!2139 (toList!759 lt!40527)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!86646 () Bool)

(assert (=> b!86646 (= e!56462 (contains!764 (t!5277 (toList!759 lt!40527)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!22709 res!44513) b!86645))

(assert (= (and b!86645 (not res!44512)) b!86646))

(declare-fun m!91603 () Bool)

(assert (=> d!22709 m!91603))

(declare-fun m!91605 () Bool)

(assert (=> d!22709 m!91605))

(declare-fun m!91607 () Bool)

(assert (=> b!86646 m!91607))

(assert (=> b!85800 d!22709))

(declare-fun d!22711 () Bool)

(declare-fun res!44514 () Bool)

(declare-fun e!56463 () Bool)

(assert (=> d!22711 (=> res!44514 e!56463)))

(assert (=> d!22711 (= res!44514 (and ((_ is Cons!1548) (toList!759 lt!40443)) (= (_1!1126 (h!2139 (toList!759 lt!40443))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22711 (= (containsKey!143 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000) e!56463)))

(declare-fun b!86647 () Bool)

(declare-fun e!56464 () Bool)

(assert (=> b!86647 (= e!56463 e!56464)))

(declare-fun res!44515 () Bool)

(assert (=> b!86647 (=> (not res!44515) (not e!56464))))

(assert (=> b!86647 (= res!44515 (and (or (not ((_ is Cons!1548) (toList!759 lt!40443))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40443))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1548) (toList!759 lt!40443)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40443))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86648 () Bool)

(assert (=> b!86648 (= e!56464 (containsKey!143 (t!5277 (toList!759 lt!40443)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22711 (not res!44514)) b!86647))

(assert (= (and b!86647 res!44515) b!86648))

(declare-fun m!91609 () Bool)

(assert (=> b!86648 m!91609))

(assert (=> d!22277 d!22711))

(declare-fun d!22713 () Bool)

(declare-fun lt!41045 () Bool)

(assert (=> d!22713 (= lt!41045 (select (content!88 lt!40657) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun e!56465 () Bool)

(assert (=> d!22713 (= lt!41045 e!56465)))

(declare-fun res!44517 () Bool)

(assert (=> d!22713 (=> (not res!44517) (not e!56465))))

(assert (=> d!22713 (= res!44517 ((_ is Cons!1548) lt!40657))))

(assert (=> d!22713 (= (contains!764 lt!40657 (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))) lt!41045)))

(declare-fun b!86649 () Bool)

(declare-fun e!56466 () Bool)

(assert (=> b!86649 (= e!56465 e!56466)))

(declare-fun res!44516 () Bool)

(assert (=> b!86649 (=> res!44516 e!56466)))

(assert (=> b!86649 (= res!44516 (= (h!2139 lt!40657) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun b!86650 () Bool)

(assert (=> b!86650 (= e!56466 (contains!764 (t!5277 lt!40657) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(assert (= (and d!22713 res!44517) b!86649))

(assert (= (and b!86649 (not res!44516)) b!86650))

(declare-fun m!91611 () Bool)

(assert (=> d!22713 m!91611))

(declare-fun m!91613 () Bool)

(assert (=> d!22713 m!91613))

(declare-fun m!91615 () Bool)

(assert (=> b!86650 m!91615))

(assert (=> b!85966 d!22713))

(declare-fun d!22715 () Bool)

(declare-fun res!44518 () Bool)

(declare-fun e!56467 () Bool)

(assert (=> d!22715 (=> res!44518 e!56467)))

(assert (=> d!22715 (= res!44518 (and ((_ is Cons!1548) (toList!759 e!55772)) (= (_1!1126 (h!2139 (toList!759 e!55772))) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372))))))))

(assert (=> d!22715 (= (containsKey!143 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))) e!56467)))

(declare-fun b!86651 () Bool)

(declare-fun e!56468 () Bool)

(assert (=> b!86651 (= e!56467 e!56468)))

(declare-fun res!44519 () Bool)

(assert (=> b!86651 (=> (not res!44519) (not e!56468))))

(assert (=> b!86651 (= res!44519 (and (or (not ((_ is Cons!1548) (toList!759 e!55772))) (bvsle (_1!1126 (h!2139 (toList!759 e!55772))) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372))))) ((_ is Cons!1548) (toList!759 e!55772)) (bvslt (_1!1126 (h!2139 (toList!759 e!55772))) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372))))))))

(declare-fun b!86652 () Bool)

(assert (=> b!86652 (= e!56468 (containsKey!143 (t!5277 (toList!759 e!55772)) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))

(assert (= (and d!22715 (not res!44518)) b!86651))

(assert (= (and b!86651 res!44519) b!86652))

(declare-fun m!91617 () Bool)

(assert (=> b!86652 m!91617))

(assert (=> d!22367 d!22715))

(declare-fun d!22717 () Bool)

(assert (=> d!22717 (= (isDefined!93 (getValueByKey!139 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))) (not (isEmpty!342 (getValueByKey!139 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))))

(declare-fun bs!3655 () Bool)

(assert (= bs!3655 d!22717))

(assert (=> bs!3655 m!90617))

(declare-fun m!91619 () Bool)

(assert (=> bs!3655 m!91619))

(assert (=> b!86114 d!22717))

(declare-fun b!86653 () Bool)

(declare-fun e!56469 () Option!145)

(assert (=> b!86653 (= e!56469 (Some!144 (_2!1126 (h!2139 (toList!759 call!8098)))))))

(declare-fun b!86655 () Bool)

(declare-fun e!56470 () Option!145)

(assert (=> b!86655 (= e!56470 (getValueByKey!139 (t!5277 (toList!759 call!8098)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!86654 () Bool)

(assert (=> b!86654 (= e!56469 e!56470)))

(declare-fun c!14191 () Bool)

(assert (=> b!86654 (= c!14191 (and ((_ is Cons!1548) (toList!759 call!8098)) (not (= (_1!1126 (h!2139 (toList!759 call!8098))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))))

(declare-fun c!14190 () Bool)

(declare-fun d!22719 () Bool)

(assert (=> d!22719 (= c!14190 (and ((_ is Cons!1548) (toList!759 call!8098)) (= (_1!1126 (h!2139 (toList!759 call!8098))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (=> d!22719 (= (getValueByKey!139 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) e!56469)))

(declare-fun b!86656 () Bool)

(assert (=> b!86656 (= e!56470 None!143)))

(assert (= (and d!22719 c!14190) b!86653))

(assert (= (and d!22719 (not c!14190)) b!86654))

(assert (= (and b!86654 c!14191) b!86655))

(assert (= (and b!86654 (not c!14191)) b!86656))

(assert (=> b!86655 m!89417))

(declare-fun m!91621 () Bool)

(assert (=> b!86655 m!91621))

(assert (=> b!86114 d!22719))

(assert (=> b!85803 d!22407))

(assert (=> b!85803 d!22409))

(declare-fun d!22721 () Bool)

(assert (=> d!22721 (= (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40454)) (v!2652 (getValueByKey!139 (toList!759 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40454)))))

(assert (=> d!22247 d!22721))

(declare-fun e!56471 () Option!145)

(declare-fun b!86657 () Bool)

(assert (=> b!86657 (= e!56471 (Some!144 (_2!1126 (h!2139 (toList!759 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))))

(declare-fun e!56472 () Option!145)

(declare-fun b!86659 () Bool)

(assert (=> b!86659 (= e!56472 (getValueByKey!139 (t!5277 (toList!759 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) lt!40454))))

(declare-fun b!86658 () Bool)

(assert (=> b!86658 (= e!56471 e!56472)))

(declare-fun c!14193 () Bool)

(assert (=> b!86658 (= c!14193 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (not (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))) lt!40454))))))

(declare-fun c!14192 () Bool)

(declare-fun d!22723 () Bool)

(assert (=> d!22723 (= c!14192 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))) lt!40454)))))

(assert (=> d!22723 (= (getValueByKey!139 (toList!759 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40454) e!56471)))

(declare-fun b!86660 () Bool)

(assert (=> b!86660 (= e!56472 None!143)))

(assert (= (and d!22723 c!14192) b!86657))

(assert (= (and d!22723 (not c!14192)) b!86658))

(assert (= (and b!86658 c!14193) b!86659))

(assert (= (and b!86658 (not c!14193)) b!86660))

(declare-fun m!91623 () Bool)

(assert (=> b!86659 m!91623))

(assert (=> d!22247 d!22723))

(assert (=> d!22351 d!22353))

(assert (=> d!22351 d!22355))

(declare-fun d!22725 () Bool)

(assert (=> d!22725 (isDefined!93 (getValueByKey!139 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22725 true))

(declare-fun _$12!335 () Unit!2533)

(assert (=> d!22725 (= (choose!518 (toList!759 lt!40177) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) _$12!335)))

(declare-fun bs!3656 () Bool)

(assert (= bs!3656 d!22725))

(assert (=> bs!3656 m!89417))

(assert (=> bs!3656 m!89679))

(assert (=> bs!3656 m!89679))

(assert (=> bs!3656 m!89681))

(assert (=> d!22351 d!22725))

(declare-fun d!22727 () Bool)

(declare-fun res!44520 () Bool)

(declare-fun e!56473 () Bool)

(assert (=> d!22727 (=> res!44520 e!56473)))

(assert (=> d!22727 (= res!44520 (or ((_ is Nil!1549) (toList!759 lt!40177)) ((_ is Nil!1549) (t!5277 (toList!759 lt!40177)))))))

(assert (=> d!22727 (= (isStrictlySorted!293 (toList!759 lt!40177)) e!56473)))

(declare-fun b!86661 () Bool)

(declare-fun e!56474 () Bool)

(assert (=> b!86661 (= e!56473 e!56474)))

(declare-fun res!44521 () Bool)

(assert (=> b!86661 (=> (not res!44521) (not e!56474))))

(assert (=> b!86661 (= res!44521 (bvslt (_1!1126 (h!2139 (toList!759 lt!40177))) (_1!1126 (h!2139 (t!5277 (toList!759 lt!40177))))))))

(declare-fun b!86662 () Bool)

(assert (=> b!86662 (= e!56474 (isStrictlySorted!293 (t!5277 (toList!759 lt!40177))))))

(assert (= (and d!22727 (not res!44520)) b!86661))

(assert (= (and b!86661 res!44521) b!86662))

(declare-fun m!91625 () Bool)

(assert (=> b!86662 m!91625))

(assert (=> d!22351 d!22727))

(declare-fun d!22729 () Bool)

(assert (=> d!22729 (contains!762 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))

(declare-fun lt!41048 () Unit!2533)

(declare-fun choose!519 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) (_ BitVec 32) Int) Unit!2533)

(assert (=> d!22729 (= lt!41048 (choose!519 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22729 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22729 (= (lemmaArrayContainsKeyThenInListMap!19 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41048)))

(declare-fun bs!3657 () Bool)

(assert (= bs!3657 d!22729))

(assert (=> bs!3657 m!89683))

(assert (=> bs!3657 m!89683))

(assert (=> bs!3657 m!89417))

(assert (=> bs!3657 m!89735))

(assert (=> bs!3657 m!89417))

(declare-fun m!91627 () Bool)

(assert (=> bs!3657 m!91627))

(assert (=> bs!3657 m!89885))

(assert (=> b!86055 d!22729))

(assert (=> b!86055 d!22207))

(assert (=> b!86055 d!22151))

(declare-fun d!22731 () Bool)

(declare-fun res!44522 () Bool)

(declare-fun e!56475 () Bool)

(assert (=> d!22731 (=> res!44522 e!56475)))

(assert (=> d!22731 (= res!44522 (or ((_ is Nil!1549) lt!40657) ((_ is Nil!1549) (t!5277 lt!40657))))))

(assert (=> d!22731 (= (isStrictlySorted!293 lt!40657) e!56475)))

(declare-fun b!86663 () Bool)

(declare-fun e!56476 () Bool)

(assert (=> b!86663 (= e!56475 e!56476)))

(declare-fun res!44523 () Bool)

(assert (=> b!86663 (=> (not res!44523) (not e!56476))))

(assert (=> b!86663 (= res!44523 (bvslt (_1!1126 (h!2139 lt!40657)) (_1!1126 (h!2139 (t!5277 lt!40657)))))))

(declare-fun b!86664 () Bool)

(assert (=> b!86664 (= e!56476 (isStrictlySorted!293 (t!5277 lt!40657)))))

(assert (= (and d!22731 (not res!44522)) b!86663))

(assert (= (and b!86663 res!44523) b!86664))

(declare-fun m!91629 () Bool)

(assert (=> b!86664 m!91629))

(assert (=> d!22291 d!22731))

(declare-fun d!22733 () Bool)

(declare-fun res!44524 () Bool)

(declare-fun e!56477 () Bool)

(assert (=> d!22733 (=> res!44524 e!56477)))

(assert (=> d!22733 (= res!44524 (or ((_ is Nil!1549) (toList!759 lt!40176)) ((_ is Nil!1549) (t!5277 (toList!759 lt!40176)))))))

(assert (=> d!22733 (= (isStrictlySorted!293 (toList!759 lt!40176)) e!56477)))

(declare-fun b!86665 () Bool)

(declare-fun e!56478 () Bool)

(assert (=> b!86665 (= e!56477 e!56478)))

(declare-fun res!44525 () Bool)

(assert (=> b!86665 (=> (not res!44525) (not e!56478))))

(assert (=> b!86665 (= res!44525 (bvslt (_1!1126 (h!2139 (toList!759 lt!40176))) (_1!1126 (h!2139 (t!5277 (toList!759 lt!40176))))))))

(declare-fun b!86666 () Bool)

(assert (=> b!86666 (= e!56478 (isStrictlySorted!293 (t!5277 (toList!759 lt!40176))))))

(assert (= (and d!22733 (not res!44524)) b!86665))

(assert (= (and b!86665 res!44525) b!86666))

(declare-fun m!91631 () Bool)

(assert (=> b!86666 m!91631))

(assert (=> d!22291 d!22733))

(declare-fun b!86667 () Bool)

(declare-fun e!56479 () Option!145)

(assert (=> b!86667 (= e!56479 (Some!144 (_2!1126 (h!2139 (t!5277 (toList!759 lt!40290))))))))

(declare-fun b!86669 () Bool)

(declare-fun e!56480 () Option!145)

(assert (=> b!86669 (= e!56480 (getValueByKey!139 (t!5277 (t!5277 (toList!759 lt!40290))) (_1!1126 lt!40172)))))

(declare-fun b!86668 () Bool)

(assert (=> b!86668 (= e!56479 e!56480)))

(declare-fun c!14195 () Bool)

(assert (=> b!86668 (= c!14195 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40290))) (not (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40290)))) (_1!1126 lt!40172)))))))

(declare-fun d!22735 () Bool)

(declare-fun c!14194 () Bool)

(assert (=> d!22735 (= c!14194 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40290))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40290)))) (_1!1126 lt!40172))))))

(assert (=> d!22735 (= (getValueByKey!139 (t!5277 (toList!759 lt!40290)) (_1!1126 lt!40172)) e!56479)))

(declare-fun b!86670 () Bool)

(assert (=> b!86670 (= e!56480 None!143)))

(assert (= (and d!22735 c!14194) b!86667))

(assert (= (and d!22735 (not c!14194)) b!86668))

(assert (= (and b!86668 c!14195) b!86669))

(assert (= (and b!86668 (not c!14195)) b!86670))

(declare-fun m!91633 () Bool)

(assert (=> b!86669 m!91633))

(assert (=> b!85771 d!22735))

(declare-fun d!22737 () Bool)

(declare-fun c!14196 () Bool)

(assert (=> d!22737 (= c!14196 ((_ is Nil!1549) (toList!759 lt!40261)))))

(declare-fun e!56481 () (InoxSet tuple2!2232))

(assert (=> d!22737 (= (content!88 (toList!759 lt!40261)) e!56481)))

(declare-fun b!86671 () Bool)

(assert (=> b!86671 (= e!56481 ((as const (Array tuple2!2232 Bool)) false))))

(declare-fun b!86672 () Bool)

(assert (=> b!86672 (= e!56481 ((_ map or) (store ((as const (Array tuple2!2232 Bool)) false) (h!2139 (toList!759 lt!40261)) true) (content!88 (t!5277 (toList!759 lt!40261)))))))

(assert (= (and d!22737 c!14196) b!86671))

(assert (= (and d!22737 (not c!14196)) b!86672))

(declare-fun m!91635 () Bool)

(assert (=> b!86672 m!91635))

(declare-fun m!91637 () Bool)

(assert (=> b!86672 m!91637))

(assert (=> d!22357 d!22737))

(declare-fun d!22739 () Bool)

(declare-fun res!44526 () Bool)

(declare-fun e!56482 () Bool)

(assert (=> d!22739 (=> res!44526 e!56482)))

(assert (=> d!22739 (= res!44526 (and ((_ is Cons!1548) (toList!759 lt!40443)) (= (_1!1126 (h!2139 (toList!759 lt!40443))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22739 (= (containsKey!143 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56482)))

(declare-fun b!86673 () Bool)

(declare-fun e!56483 () Bool)

(assert (=> b!86673 (= e!56482 e!56483)))

(declare-fun res!44527 () Bool)

(assert (=> b!86673 (=> (not res!44527) (not e!56483))))

(assert (=> b!86673 (= res!44527 (and (or (not ((_ is Cons!1548) (toList!759 lt!40443))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40443))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1548) (toList!759 lt!40443)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40443))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!86674 () Bool)

(assert (=> b!86674 (= e!56483 (containsKey!143 (t!5277 (toList!759 lt!40443)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22739 (not res!44526)) b!86673))

(assert (= (and b!86673 res!44527) b!86674))

(assert (=> b!86674 m!89623))

(declare-fun m!91639 () Bool)

(assert (=> b!86674 m!91639))

(assert (=> d!22293 d!22739))

(assert (=> b!85760 d!22477))

(declare-fun d!22741 () Bool)

(assert (=> d!22741 (= (apply!82 lt!40493 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1216 (getValueByKey!139 (toList!759 lt!40493) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3658 () Bool)

(assert (= bs!3658 d!22741))

(assert (=> bs!3658 m!89941))

(declare-fun m!91641 () Bool)

(assert (=> bs!3658 m!91641))

(assert (=> bs!3658 m!91641))

(declare-fun m!91643 () Bool)

(assert (=> bs!3658 m!91643))

(assert (=> b!85741 d!22741))

(declare-fun d!22743 () Bool)

(declare-fun c!14197 () Bool)

(assert (=> d!22743 (= c!14197 ((_ is ValueCellFull!924) (select (arr!1919 (_values!2321 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!56484 () V!3027)

(assert (=> d!22743 (= (get!1212 (select (arr!1919 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56484)))

(declare-fun b!86675 () Bool)

(assert (=> b!86675 (= e!56484 (get!1214 (select (arr!1919 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86676 () Bool)

(assert (=> b!86676 (= e!56484 (get!1215 (select (arr!1919 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22743 c!14197) b!86675))

(assert (= (and d!22743 (not c!14197)) b!86676))

(assert (=> b!86675 m!89965))

(assert (=> b!86675 m!89967))

(declare-fun m!91645 () Bool)

(assert (=> b!86675 m!91645))

(assert (=> b!86676 m!89965))

(assert (=> b!86676 m!89967))

(declare-fun m!91647 () Bool)

(assert (=> b!86676 m!91647))

(assert (=> b!85741 d!22743))

(declare-fun d!22745 () Bool)

(assert (=> d!22745 (= (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85866 d!22745))

(declare-fun b!86677 () Bool)

(declare-fun e!56485 () Option!145)

(assert (=> b!86677 (= e!56485 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40803)))))))

(declare-fun e!56486 () Option!145)

(declare-fun b!86679 () Bool)

(assert (=> b!86679 (= e!56486 (getValueByKey!139 (t!5277 (toList!759 lt!40803)) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86678 () Bool)

(assert (=> b!86678 (= e!56485 e!56486)))

(declare-fun c!14199 () Bool)

(assert (=> b!86678 (= c!14199 (and ((_ is Cons!1548) (toList!759 lt!40803)) (not (= (_1!1126 (h!2139 (toList!759 lt!40803))) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))))

(declare-fun d!22747 () Bool)

(declare-fun c!14198 () Bool)

(assert (=> d!22747 (= c!14198 (and ((_ is Cons!1548) (toList!759 lt!40803)) (= (_1!1126 (h!2139 (toList!759 lt!40803))) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(assert (=> d!22747 (= (getValueByKey!139 (toList!759 lt!40803) (_1!1126 (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) e!56485)))

(declare-fun b!86680 () Bool)

(assert (=> b!86680 (= e!56486 None!143)))

(assert (= (and d!22747 c!14198) b!86677))

(assert (= (and d!22747 (not c!14198)) b!86678))

(assert (= (and b!86678 c!14199) b!86679))

(assert (= (and b!86678 (not c!14199)) b!86680))

(declare-fun m!91649 () Bool)

(assert (=> b!86679 m!91649))

(assert (=> b!86120 d!22747))

(assert (=> b!86170 d!22477))

(declare-fun d!22749 () Bool)

(declare-fun res!44528 () Bool)

(declare-fun e!56487 () Bool)

(assert (=> d!22749 (=> res!44528 e!56487)))

(assert (=> d!22749 (= res!44528 (and ((_ is Cons!1548) (toList!759 lt!40286)) (= (_1!1126 (h!2139 (toList!759 lt!40286))) (_1!1126 lt!40163))))))

(assert (=> d!22749 (= (containsKey!143 (toList!759 lt!40286) (_1!1126 lt!40163)) e!56487)))

(declare-fun b!86681 () Bool)

(declare-fun e!56488 () Bool)

(assert (=> b!86681 (= e!56487 e!56488)))

(declare-fun res!44529 () Bool)

(assert (=> b!86681 (=> (not res!44529) (not e!56488))))

(assert (=> b!86681 (= res!44529 (and (or (not ((_ is Cons!1548) (toList!759 lt!40286))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40286))) (_1!1126 lt!40163))) ((_ is Cons!1548) (toList!759 lt!40286)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40286))) (_1!1126 lt!40163))))))

(declare-fun b!86682 () Bool)

(assert (=> b!86682 (= e!56488 (containsKey!143 (t!5277 (toList!759 lt!40286)) (_1!1126 lt!40163)))))

(assert (= (and d!22749 (not res!44528)) b!86681))

(assert (= (and b!86681 res!44529) b!86682))

(declare-fun m!91651 () Bool)

(assert (=> b!86682 m!91651))

(assert (=> d!22143 d!22749))

(declare-fun d!22751 () Bool)

(declare-fun lt!41049 () Bool)

(assert (=> d!22751 (= lt!41049 (select (content!88 lt!40796) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun e!56489 () Bool)

(assert (=> d!22751 (= lt!41049 e!56489)))

(declare-fun res!44531 () Bool)

(assert (=> d!22751 (=> (not res!44531) (not e!56489))))

(assert (=> d!22751 (= res!44531 ((_ is Cons!1548) lt!40796))))

(assert (=> d!22751 (= (contains!764 lt!40796 (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))) lt!41049)))

(declare-fun b!86683 () Bool)

(declare-fun e!56490 () Bool)

(assert (=> b!86683 (= e!56489 e!56490)))

(declare-fun res!44530 () Bool)

(assert (=> b!86683 (=> res!44530 e!56490)))

(assert (=> b!86683 (= res!44530 (= (h!2139 lt!40796) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun b!86684 () Bool)

(assert (=> b!86684 (= e!56490 (contains!764 (t!5277 lt!40796) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(assert (= (and d!22751 res!44531) b!86683))

(assert (= (and b!86683 (not res!44530)) b!86684))

(declare-fun m!91653 () Bool)

(assert (=> d!22751 m!91653))

(declare-fun m!91655 () Bool)

(assert (=> d!22751 m!91655))

(declare-fun m!91657 () Bool)

(assert (=> b!86684 m!91657))

(assert (=> b!86103 d!22751))

(declare-fun c!14200 () Bool)

(declare-fun b!86685 () Bool)

(declare-fun c!14201 () Bool)

(declare-fun e!56492 () List!1552)

(assert (=> b!86685 (= e!56492 (ite c!14200 (t!5277 (t!5277 (toList!759 lt!40176))) (ite c!14201 (Cons!1548 (h!2139 (t!5277 (toList!759 lt!40176))) (t!5277 (t!5277 (toList!759 lt!40176)))) Nil!1549)))))

(declare-fun b!86686 () Bool)

(declare-fun e!56494 () Bool)

(declare-fun lt!41050 () List!1552)

(assert (=> b!86686 (= e!56494 (contains!764 lt!41050 (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun b!86687 () Bool)

(declare-fun e!56493 () List!1552)

(declare-fun e!56491 () List!1552)

(assert (=> b!86687 (= e!56493 e!56491)))

(assert (=> b!86687 (= c!14200 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40176))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40176)))) (_1!1126 lt!40171))))))

(declare-fun b!86688 () Bool)

(declare-fun res!44532 () Bool)

(assert (=> b!86688 (=> (not res!44532) (not e!56494))))

(assert (=> b!86688 (= res!44532 (containsKey!143 lt!41050 (_1!1126 lt!40171)))))

(declare-fun d!22753 () Bool)

(assert (=> d!22753 e!56494))

(declare-fun res!44533 () Bool)

(assert (=> d!22753 (=> (not res!44533) (not e!56494))))

(assert (=> d!22753 (= res!44533 (isStrictlySorted!293 lt!41050))))

(assert (=> d!22753 (= lt!41050 e!56493)))

(declare-fun c!14202 () Bool)

(assert (=> d!22753 (= c!14202 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40176))) (bvslt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40176)))) (_1!1126 lt!40171))))))

(assert (=> d!22753 (isStrictlySorted!293 (t!5277 (toList!759 lt!40176)))))

(assert (=> d!22753 (= (insertStrictlySorted!60 (t!5277 (toList!759 lt!40176)) (_1!1126 lt!40171) (_2!1126 lt!40171)) lt!41050)))

(declare-fun call!8246 () List!1552)

(declare-fun bm!8243 () Bool)

(assert (=> bm!8243 (= call!8246 ($colon$colon!71 e!56492 (ite c!14202 (h!2139 (t!5277 (toList!759 lt!40176))) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171)))))))

(declare-fun c!14203 () Bool)

(assert (=> bm!8243 (= c!14203 c!14202)))

(declare-fun bm!8244 () Bool)

(declare-fun call!8248 () List!1552)

(declare-fun call!8247 () List!1552)

(assert (=> bm!8244 (= call!8248 call!8247)))

(declare-fun b!86689 () Bool)

(assert (=> b!86689 (= e!56493 call!8246)))

(declare-fun b!86690 () Bool)

(declare-fun e!56495 () List!1552)

(assert (=> b!86690 (= e!56495 call!8248)))

(declare-fun b!86691 () Bool)

(assert (=> b!86691 (= e!56491 call!8247)))

(declare-fun b!86692 () Bool)

(assert (=> b!86692 (= e!56492 (insertStrictlySorted!60 (t!5277 (t!5277 (toList!759 lt!40176))) (_1!1126 lt!40171) (_2!1126 lt!40171)))))

(declare-fun b!86693 () Bool)

(assert (=> b!86693 (= e!56495 call!8248)))

(declare-fun b!86694 () Bool)

(assert (=> b!86694 (= c!14201 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40176))) (bvsgt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40176)))) (_1!1126 lt!40171))))))

(assert (=> b!86694 (= e!56491 e!56495)))

(declare-fun bm!8245 () Bool)

(assert (=> bm!8245 (= call!8247 call!8246)))

(assert (= (and d!22753 c!14202) b!86689))

(assert (= (and d!22753 (not c!14202)) b!86687))

(assert (= (and b!86687 c!14200) b!86691))

(assert (= (and b!86687 (not c!14200)) b!86694))

(assert (= (and b!86694 c!14201) b!86693))

(assert (= (and b!86694 (not c!14201)) b!86690))

(assert (= (or b!86693 b!86690) bm!8244))

(assert (= (or b!86691 bm!8244) bm!8245))

(assert (= (or b!86689 bm!8245) bm!8243))

(assert (= (and bm!8243 c!14203) b!86692))

(assert (= (and bm!8243 (not c!14203)) b!86685))

(assert (= (and d!22753 res!44533) b!86688))

(assert (= (and b!86688 res!44532) b!86686))

(declare-fun m!91659 () Bool)

(assert (=> b!86688 m!91659))

(declare-fun m!91661 () Bool)

(assert (=> b!86692 m!91661))

(declare-fun m!91663 () Bool)

(assert (=> d!22753 m!91663))

(assert (=> d!22753 m!91631))

(declare-fun m!91665 () Bool)

(assert (=> b!86686 m!91665))

(declare-fun m!91667 () Bool)

(assert (=> bm!8243 m!91667))

(assert (=> b!85972 d!22753))

(assert (=> d!22361 d!22459))

(declare-fun d!22755 () Bool)

(declare-fun e!56497 () Bool)

(assert (=> d!22755 e!56497))

(declare-fun res!44534 () Bool)

(assert (=> d!22755 (=> res!44534 e!56497)))

(declare-fun lt!41053 () Bool)

(assert (=> d!22755 (= res!44534 (not lt!41053))))

(declare-fun lt!41054 () Bool)

(assert (=> d!22755 (= lt!41053 lt!41054)))

(declare-fun lt!41052 () Unit!2533)

(declare-fun e!56496 () Unit!2533)

(assert (=> d!22755 (= lt!41052 e!56496)))

(declare-fun c!14204 () Bool)

(assert (=> d!22755 (= c!14204 lt!41054)))

(assert (=> d!22755 (= lt!41054 (containsKey!143 (toList!759 lt!40607) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22755 (= (contains!762 lt!40607 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41053)))

(declare-fun b!86695 () Bool)

(declare-fun lt!41051 () Unit!2533)

(assert (=> b!86695 (= e!56496 lt!41051)))

(assert (=> b!86695 (= lt!41051 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40607) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> b!86695 (isDefined!93 (getValueByKey!139 (toList!759 lt!40607) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86696 () Bool)

(declare-fun Unit!2582 () Unit!2533)

(assert (=> b!86696 (= e!56496 Unit!2582)))

(declare-fun b!86697 () Bool)

(assert (=> b!86697 (= e!56497 (isDefined!93 (getValueByKey!139 (toList!759 lt!40607) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22755 c!14204) b!86695))

(assert (= (and d!22755 (not c!14204)) b!86696))

(assert (= (and d!22755 (not res!44534)) b!86697))

(declare-fun m!91669 () Bool)

(assert (=> d!22755 m!91669))

(declare-fun m!91671 () Bool)

(assert (=> b!86695 m!91671))

(assert (=> b!86695 m!90265))

(assert (=> b!86695 m!90265))

(declare-fun m!91673 () Bool)

(assert (=> b!86695 m!91673))

(assert (=> b!86697 m!90265))

(assert (=> b!86697 m!90265))

(assert (=> b!86697 m!91673))

(assert (=> d!22249 d!22755))

(declare-fun b!86698 () Bool)

(declare-fun e!56498 () Option!145)

(assert (=> b!86698 (= e!56498 (Some!144 (_2!1126 (h!2139 lt!40606))))))

(declare-fun b!86700 () Bool)

(declare-fun e!56499 () Option!145)

(assert (=> b!86700 (= e!56499 (getValueByKey!139 (t!5277 lt!40606) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86699 () Bool)

(assert (=> b!86699 (= e!56498 e!56499)))

(declare-fun c!14206 () Bool)

(assert (=> b!86699 (= c!14206 (and ((_ is Cons!1548) lt!40606) (not (= (_1!1126 (h!2139 lt!40606)) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!22757 () Bool)

(declare-fun c!14205 () Bool)

(assert (=> d!22757 (= c!14205 (and ((_ is Cons!1548) lt!40606) (= (_1!1126 (h!2139 lt!40606)) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22757 (= (getValueByKey!139 lt!40606 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56498)))

(declare-fun b!86701 () Bool)

(assert (=> b!86701 (= e!56499 None!143)))

(assert (= (and d!22757 c!14205) b!86698))

(assert (= (and d!22757 (not c!14205)) b!86699))

(assert (= (and b!86699 c!14206) b!86700))

(assert (= (and b!86699 (not c!14206)) b!86701))

(declare-fun m!91675 () Bool)

(assert (=> b!86700 m!91675))

(assert (=> d!22249 d!22757))

(declare-fun d!22759 () Bool)

(assert (=> d!22759 (= (getValueByKey!139 lt!40606 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!41055 () Unit!2533)

(assert (=> d!22759 (= lt!41055 (choose!508 lt!40606 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun e!56500 () Bool)

(assert (=> d!22759 e!56500))

(declare-fun res!44535 () Bool)

(assert (=> d!22759 (=> (not res!44535) (not e!56500))))

(assert (=> d!22759 (= res!44535 (isStrictlySorted!293 lt!40606))))

(assert (=> d!22759 (= (lemmaContainsTupThenGetReturnValue!58 lt!40606 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41055)))

(declare-fun b!86702 () Bool)

(declare-fun res!44536 () Bool)

(assert (=> b!86702 (=> (not res!44536) (not e!56500))))

(assert (=> b!86702 (= res!44536 (containsKey!143 lt!40606 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86703 () Bool)

(assert (=> b!86703 (= e!56500 (contains!764 lt!40606 (tuple2!2233 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22759 res!44535) b!86702))

(assert (= (and b!86702 res!44536) b!86703))

(assert (=> d!22759 m!90259))

(declare-fun m!91677 () Bool)

(assert (=> d!22759 m!91677))

(declare-fun m!91679 () Bool)

(assert (=> d!22759 m!91679))

(declare-fun m!91681 () Bool)

(assert (=> b!86702 m!91681))

(declare-fun m!91683 () Bool)

(assert (=> b!86703 m!91683))

(assert (=> d!22249 d!22759))

(declare-fun c!14207 () Bool)

(declare-fun b!86704 () Bool)

(declare-fun c!14208 () Bool)

(declare-fun e!56502 () List!1552)

(assert (=> b!86704 (= e!56502 (ite c!14207 (t!5277 (toList!759 lt!40445)) (ite c!14208 (Cons!1548 (h!2139 (toList!759 lt!40445)) (t!5277 (toList!759 lt!40445))) Nil!1549)))))

(declare-fun lt!41056 () List!1552)

(declare-fun e!56504 () Bool)

(declare-fun b!86705 () Bool)

(assert (=> b!86705 (= e!56504 (contains!764 lt!41056 (tuple2!2233 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86706 () Bool)

(declare-fun e!56503 () List!1552)

(declare-fun e!56501 () List!1552)

(assert (=> b!86706 (= e!56503 e!56501)))

(assert (=> b!86706 (= c!14207 (and ((_ is Cons!1548) (toList!759 lt!40445)) (= (_1!1126 (h!2139 (toList!759 lt!40445))) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86707 () Bool)

(declare-fun res!44537 () Bool)

(assert (=> b!86707 (=> (not res!44537) (not e!56504))))

(assert (=> b!86707 (= res!44537 (containsKey!143 lt!41056 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun d!22761 () Bool)

(assert (=> d!22761 e!56504))

(declare-fun res!44538 () Bool)

(assert (=> d!22761 (=> (not res!44538) (not e!56504))))

(assert (=> d!22761 (= res!44538 (isStrictlySorted!293 lt!41056))))

(assert (=> d!22761 (= lt!41056 e!56503)))

(declare-fun c!14209 () Bool)

(assert (=> d!22761 (= c!14209 (and ((_ is Cons!1548) (toList!759 lt!40445)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40445))) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22761 (isStrictlySorted!293 (toList!759 lt!40445))))

(assert (=> d!22761 (= (insertStrictlySorted!60 (toList!759 lt!40445) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41056)))

(declare-fun bm!8246 () Bool)

(declare-fun call!8249 () List!1552)

(assert (=> bm!8246 (= call!8249 ($colon$colon!71 e!56502 (ite c!14209 (h!2139 (toList!759 lt!40445)) (tuple2!2233 (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14210 () Bool)

(assert (=> bm!8246 (= c!14210 c!14209)))

(declare-fun bm!8247 () Bool)

(declare-fun call!8251 () List!1552)

(declare-fun call!8250 () List!1552)

(assert (=> bm!8247 (= call!8251 call!8250)))

(declare-fun b!86708 () Bool)

(assert (=> b!86708 (= e!56503 call!8249)))

(declare-fun b!86709 () Bool)

(declare-fun e!56505 () List!1552)

(assert (=> b!86709 (= e!56505 call!8251)))

(declare-fun b!86710 () Bool)

(assert (=> b!86710 (= e!56501 call!8250)))

(declare-fun b!86711 () Bool)

(assert (=> b!86711 (= e!56502 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40445)) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86712 () Bool)

(assert (=> b!86712 (= e!56505 call!8251)))

(declare-fun b!86713 () Bool)

(assert (=> b!86713 (= c!14208 (and ((_ is Cons!1548) (toList!759 lt!40445)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40445))) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> b!86713 (= e!56501 e!56505)))

(declare-fun bm!8248 () Bool)

(assert (=> bm!8248 (= call!8250 call!8249)))

(assert (= (and d!22761 c!14209) b!86708))

(assert (= (and d!22761 (not c!14209)) b!86706))

(assert (= (and b!86706 c!14207) b!86710))

(assert (= (and b!86706 (not c!14207)) b!86713))

(assert (= (and b!86713 c!14208) b!86712))

(assert (= (and b!86713 (not c!14208)) b!86709))

(assert (= (or b!86712 b!86709) bm!8247))

(assert (= (or b!86710 bm!8247) bm!8248))

(assert (= (or b!86708 bm!8248) bm!8246))

(assert (= (and bm!8246 c!14210) b!86711))

(assert (= (and bm!8246 (not c!14210)) b!86704))

(assert (= (and d!22761 res!44538) b!86707))

(assert (= (and b!86707 res!44537) b!86705))

(declare-fun m!91685 () Bool)

(assert (=> b!86707 m!91685))

(declare-fun m!91687 () Bool)

(assert (=> b!86711 m!91687))

(declare-fun m!91689 () Bool)

(assert (=> d!22761 m!91689))

(declare-fun m!91691 () Bool)

(assert (=> d!22761 m!91691))

(declare-fun m!91693 () Bool)

(assert (=> b!86705 m!91693))

(declare-fun m!91695 () Bool)

(assert (=> bm!8246 m!91695))

(assert (=> d!22249 d!22761))

(declare-fun d!22763 () Bool)

(assert (=> d!22763 (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!41057 () Unit!2533)

(assert (=> d!22763 (= lt!41057 (choose!518 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!56506 () Bool)

(assert (=> d!22763 e!56506))

(declare-fun res!44539 () Bool)

(assert (=> d!22763 (=> (not res!44539) (not e!56506))))

(assert (=> d!22763 (= res!44539 (isStrictlySorted!293 (toList!759 lt!40284)))))

(assert (=> d!22763 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!41057)))

(declare-fun b!86714 () Bool)

(assert (=> b!86714 (= e!56506 (containsKey!143 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22763 res!44539) b!86714))

(assert (=> d!22763 m!89623))

(assert (=> d!22763 m!89875))

(assert (=> d!22763 m!89875))

(assert (=> d!22763 m!90651))

(assert (=> d!22763 m!89623))

(declare-fun m!91697 () Bool)

(assert (=> d!22763 m!91697))

(declare-fun m!91699 () Bool)

(assert (=> d!22763 m!91699))

(assert (=> b!86714 m!89623))

(assert (=> b!86714 m!90647))

(assert (=> b!86122 d!22763))

(declare-fun d!22765 () Bool)

(assert (=> d!22765 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3659 () Bool)

(assert (= bs!3659 d!22765))

(assert (=> bs!3659 m!89875))

(declare-fun m!91701 () Bool)

(assert (=> bs!3659 m!91701))

(assert (=> b!86122 d!22765))

(declare-fun b!86715 () Bool)

(declare-fun e!56507 () Option!145)

(assert (=> b!86715 (= e!56507 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40284)))))))

(declare-fun b!86717 () Bool)

(declare-fun e!56508 () Option!145)

(assert (=> b!86717 (= e!56508 (getValueByKey!139 (t!5277 (toList!759 lt!40284)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86716 () Bool)

(assert (=> b!86716 (= e!56507 e!56508)))

(declare-fun c!14212 () Bool)

(assert (=> b!86716 (= c!14212 (and ((_ is Cons!1548) (toList!759 lt!40284)) (not (= (_1!1126 (h!2139 (toList!759 lt!40284))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun d!22767 () Bool)

(declare-fun c!14211 () Bool)

(assert (=> d!22767 (= c!14211 (and ((_ is Cons!1548) (toList!759 lt!40284)) (= (_1!1126 (h!2139 (toList!759 lt!40284))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22767 (= (getValueByKey!139 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56507)))

(declare-fun b!86718 () Bool)

(assert (=> b!86718 (= e!56508 None!143)))

(assert (= (and d!22767 c!14211) b!86715))

(assert (= (and d!22767 (not c!14211)) b!86716))

(assert (= (and b!86716 c!14212) b!86717))

(assert (= (and b!86716 (not c!14212)) b!86718))

(assert (=> b!86717 m!89623))

(declare-fun m!91703 () Bool)

(assert (=> b!86717 m!91703))

(assert (=> b!86122 d!22767))

(declare-fun b!86719 () Bool)

(declare-fun e!56509 () Option!145)

(assert (=> b!86719 (= e!56509 (Some!144 (_2!1126 (h!2139 (t!5277 lt!40255)))))))

(declare-fun b!86721 () Bool)

(declare-fun e!56510 () Option!145)

(assert (=> b!86721 (= e!56510 (getValueByKey!139 (t!5277 (t!5277 lt!40255)) (_1!1126 lt!40172)))))

(declare-fun b!86720 () Bool)

(assert (=> b!86720 (= e!56509 e!56510)))

(declare-fun c!14214 () Bool)

(assert (=> b!86720 (= c!14214 (and ((_ is Cons!1548) (t!5277 lt!40255)) (not (= (_1!1126 (h!2139 (t!5277 lt!40255))) (_1!1126 lt!40172)))))))

(declare-fun d!22769 () Bool)

(declare-fun c!14213 () Bool)

(assert (=> d!22769 (= c!14213 (and ((_ is Cons!1548) (t!5277 lt!40255)) (= (_1!1126 (h!2139 (t!5277 lt!40255))) (_1!1126 lt!40172))))))

(assert (=> d!22769 (= (getValueByKey!139 (t!5277 lt!40255) (_1!1126 lt!40172)) e!56509)))

(declare-fun b!86722 () Bool)

(assert (=> b!86722 (= e!56510 None!143)))

(assert (= (and d!22769 c!14213) b!86719))

(assert (= (and d!22769 (not c!14213)) b!86720))

(assert (= (and b!86720 c!14214) b!86721))

(assert (= (and b!86720 (not c!14214)) b!86722))

(declare-fun m!91705 () Bool)

(assert (=> b!86721 m!91705))

(assert (=> b!86079 d!22769))

(assert (=> d!22193 d!22191))

(assert (=> d!22193 d!22185))

(assert (=> d!22193 d!22187))

(assert (=> d!22193 d!22189))

(declare-fun d!22771 () Bool)

(declare-fun lt!41058 () Bool)

(assert (=> d!22771 (= lt!41058 (select (content!88 (t!5277 (toList!759 lt!40261))) lt!40163))))

(declare-fun e!56511 () Bool)

(assert (=> d!22771 (= lt!41058 e!56511)))

(declare-fun res!44541 () Bool)

(assert (=> d!22771 (=> (not res!44541) (not e!56511))))

(assert (=> d!22771 (= res!44541 ((_ is Cons!1548) (t!5277 (toList!759 lt!40261))))))

(assert (=> d!22771 (= (contains!764 (t!5277 (toList!759 lt!40261)) lt!40163) lt!41058)))

(declare-fun b!86723 () Bool)

(declare-fun e!56512 () Bool)

(assert (=> b!86723 (= e!56511 e!56512)))

(declare-fun res!44540 () Bool)

(assert (=> b!86723 (=> res!44540 e!56512)))

(assert (=> b!86723 (= res!44540 (= (h!2139 (t!5277 (toList!759 lt!40261))) lt!40163))))

(declare-fun b!86724 () Bool)

(assert (=> b!86724 (= e!56512 (contains!764 (t!5277 (t!5277 (toList!759 lt!40261))) lt!40163))))

(assert (= (and d!22771 res!44541) b!86723))

(assert (= (and b!86723 (not res!44540)) b!86724))

(assert (=> d!22771 m!91637))

(declare-fun m!91707 () Bool)

(assert (=> d!22771 m!91707))

(declare-fun m!91709 () Bool)

(assert (=> b!86724 m!91709))

(assert (=> b!86148 d!22771))

(declare-fun d!22773 () Bool)

(declare-fun res!44542 () Bool)

(declare-fun e!56513 () Bool)

(assert (=> d!22773 (=> res!44542 e!56513)))

(assert (=> d!22773 (= res!44542 (= (select (arr!1918 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22773 (= (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!56513)))

(declare-fun b!86725 () Bool)

(declare-fun e!56514 () Bool)

(assert (=> b!86725 (= e!56513 e!56514)))

(declare-fun res!44543 () Bool)

(assert (=> b!86725 (=> (not res!44543) (not e!56514))))

(assert (=> b!86725 (= res!44543 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!86726 () Bool)

(assert (=> b!86726 (= e!56514 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!22773 (not res!44542)) b!86725))

(assert (= (and b!86725 res!44543) b!86726))

(declare-fun m!91711 () Bool)

(assert (=> d!22773 m!91711))

(assert (=> b!86726 m!89417))

(declare-fun m!91713 () Bool)

(assert (=> b!86726 m!91713))

(assert (=> b!85872 d!22773))

(declare-fun d!22775 () Bool)

(declare-fun res!44544 () Bool)

(declare-fun e!56515 () Bool)

(assert (=> d!22775 (=> res!44544 e!56515)))

(assert (=> d!22775 (= res!44544 (and ((_ is Cons!1548) lt!40247) (= (_1!1126 (h!2139 lt!40247)) (_1!1126 lt!40172))))))

(assert (=> d!22775 (= (containsKey!143 lt!40247 (_1!1126 lt!40172)) e!56515)))

(declare-fun b!86727 () Bool)

(declare-fun e!56516 () Bool)

(assert (=> b!86727 (= e!56515 e!56516)))

(declare-fun res!44545 () Bool)

(assert (=> b!86727 (=> (not res!44545) (not e!56516))))

(assert (=> b!86727 (= res!44545 (and (or (not ((_ is Cons!1548) lt!40247)) (bvsle (_1!1126 (h!2139 lt!40247)) (_1!1126 lt!40172))) ((_ is Cons!1548) lt!40247) (bvslt (_1!1126 (h!2139 lt!40247)) (_1!1126 lt!40172))))))

(declare-fun b!86728 () Bool)

(assert (=> b!86728 (= e!56516 (containsKey!143 (t!5277 lt!40247) (_1!1126 lt!40172)))))

(assert (= (and d!22775 (not res!44544)) b!86727))

(assert (= (and b!86727 res!44545) b!86728))

(declare-fun m!91715 () Bool)

(assert (=> b!86728 m!91715))

(assert (=> b!86006 d!22775))

(assert (=> bm!8188 d!22165))

(declare-fun b!86729 () Bool)

(declare-fun e!56519 () Bool)

(declare-fun call!8252 () Bool)

(assert (=> b!86729 (= e!56519 call!8252)))

(declare-fun b!86730 () Bool)

(declare-fun e!56518 () Bool)

(declare-fun e!56517 () Bool)

(assert (=> b!86730 (= e!56518 e!56517)))

(declare-fun res!44546 () Bool)

(assert (=> b!86730 (=> (not res!44546) (not e!56517))))

(declare-fun e!56520 () Bool)

(assert (=> b!86730 (= res!44546 (not e!56520))))

(declare-fun res!44547 () Bool)

(assert (=> b!86730 (=> (not res!44547) (not e!56520))))

(assert (=> b!86730 (= res!44547 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!22777 () Bool)

(declare-fun res!44548 () Bool)

(assert (=> d!22777 (=> res!44548 e!56518)))

(assert (=> d!22777 (= res!44548 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> d!22777 (= (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!14052 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550))) e!56518)))

(declare-fun b!86731 () Bool)

(assert (=> b!86731 (= e!56519 call!8252)))

(declare-fun b!86732 () Bool)

(assert (=> b!86732 (= e!56520 (contains!765 (ite c!14052 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!86733 () Bool)

(assert (=> b!86733 (= e!56517 e!56519)))

(declare-fun c!14215 () Bool)

(assert (=> b!86733 (= c!14215 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!8249 () Bool)

(assert (=> bm!8249 (= call!8252 (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!14215 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!14052 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550))) (ite c!14052 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)) (ite c!13880 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) Nil!1550) Nil!1550)))))))

(assert (= (and d!22777 (not res!44548)) b!86730))

(assert (= (and b!86730 res!44547) b!86732))

(assert (= (and b!86730 res!44546) b!86733))

(assert (= (and b!86733 c!14215) b!86731))

(assert (= (and b!86733 (not c!14215)) b!86729))

(assert (= (or b!86731 b!86729) bm!8249))

(declare-fun m!91717 () Bool)

(assert (=> b!86730 m!91717))

(assert (=> b!86730 m!91717))

(declare-fun m!91719 () Bool)

(assert (=> b!86730 m!91719))

(assert (=> b!86732 m!91717))

(assert (=> b!86732 m!91717))

(declare-fun m!91721 () Bool)

(assert (=> b!86732 m!91721))

(assert (=> b!86733 m!91717))

(assert (=> b!86733 m!91717))

(assert (=> b!86733 m!91719))

(assert (=> bm!8249 m!91717))

(declare-fun m!91723 () Bool)

(assert (=> bm!8249 m!91723))

(assert (=> bm!8202 d!22777))

(declare-fun d!22779 () Bool)

(assert (=> d!22779 (isDefined!93 (getValueByKey!139 (toList!759 lt!40256) (_1!1126 lt!40172)))))

(declare-fun lt!41059 () Unit!2533)

(assert (=> d!22779 (= lt!41059 (choose!518 (toList!759 lt!40256) (_1!1126 lt!40172)))))

(declare-fun e!56521 () Bool)

(assert (=> d!22779 e!56521))

(declare-fun res!44549 () Bool)

(assert (=> d!22779 (=> (not res!44549) (not e!56521))))

(assert (=> d!22779 (= res!44549 (isStrictlySorted!293 (toList!759 lt!40256)))))

(assert (=> d!22779 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40256) (_1!1126 lt!40172)) lt!41059)))

(declare-fun b!86734 () Bool)

(assert (=> b!86734 (= e!56521 (containsKey!143 (toList!759 lt!40256) (_1!1126 lt!40172)))))

(assert (= (and d!22779 res!44549) b!86734))

(assert (=> d!22779 m!89597))

(assert (=> d!22779 m!89597))

(assert (=> d!22779 m!90563))

(declare-fun m!91725 () Bool)

(assert (=> d!22779 m!91725))

(declare-fun m!91727 () Bool)

(assert (=> d!22779 m!91727))

(assert (=> b!86734 m!90559))

(assert (=> b!86074 d!22779))

(declare-fun d!22781 () Bool)

(assert (=> d!22781 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40256) (_1!1126 lt!40172))) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40256) (_1!1126 lt!40172)))))))

(declare-fun bs!3660 () Bool)

(assert (= bs!3660 d!22781))

(assert (=> bs!3660 m!89597))

(declare-fun m!91729 () Bool)

(assert (=> bs!3660 m!91729))

(assert (=> b!86074 d!22781))

(assert (=> b!86074 d!22217))

(declare-fun d!22783 () Bool)

(assert (=> d!22783 (= (inRange!0 (ite c!13983 (index!3149 lt!40591) (index!3152 lt!40591)) (mask!6366 newMap!16)) (and (bvsge (ite c!13983 (index!3149 lt!40591) (index!3152 lt!40591)) #b00000000000000000000000000000000) (bvslt (ite c!13983 (index!3149 lt!40591) (index!3152 lt!40591)) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8160 d!22783))

(declare-fun b!86735 () Bool)

(declare-fun e!56522 () Option!145)

(assert (=> b!86735 (= e!56522 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40542)))))))

(declare-fun b!86737 () Bool)

(declare-fun e!56523 () Option!145)

(assert (=> b!86737 (= e!56523 (getValueByKey!139 (t!5277 (toList!759 lt!40542)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86736 () Bool)

(assert (=> b!86736 (= e!56522 e!56523)))

(declare-fun c!14217 () Bool)

(assert (=> b!86736 (= c!14217 (and ((_ is Cons!1548) (toList!759 lt!40542)) (not (= (_1!1126 (h!2139 (toList!759 lt!40542))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun c!14216 () Bool)

(declare-fun d!22785 () Bool)

(assert (=> d!22785 (= c!14216 (and ((_ is Cons!1548) (toList!759 lt!40542)) (= (_1!1126 (h!2139 (toList!759 lt!40542))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22785 (= (getValueByKey!139 (toList!759 lt!40542) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) e!56522)))

(declare-fun b!86738 () Bool)

(assert (=> b!86738 (= e!56523 None!143)))

(assert (= (and d!22785 c!14216) b!86735))

(assert (= (and d!22785 (not c!14216)) b!86736))

(assert (= (and b!86736 c!14217) b!86737))

(assert (= (and b!86736 (not c!14217)) b!86738))

(declare-fun m!91731 () Bool)

(assert (=> b!86737 m!91731))

(assert (=> b!85812 d!22785))

(declare-fun d!22787 () Bool)

(declare-fun lt!41060 () Bool)

(assert (=> d!22787 (= lt!41060 (select (content!88 lt!40251) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun e!56524 () Bool)

(assert (=> d!22787 (= lt!41060 e!56524)))

(declare-fun res!44551 () Bool)

(assert (=> d!22787 (=> (not res!44551) (not e!56524))))

(assert (=> d!22787 (= res!44551 ((_ is Cons!1548) lt!40251))))

(assert (=> d!22787 (= (contains!764 lt!40251 (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))) lt!41060)))

(declare-fun b!86739 () Bool)

(declare-fun e!56525 () Bool)

(assert (=> b!86739 (= e!56524 e!56525)))

(declare-fun res!44550 () Bool)

(assert (=> b!86739 (=> res!44550 e!56525)))

(assert (=> b!86739 (= res!44550 (= (h!2139 lt!40251) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun b!86740 () Bool)

(assert (=> b!86740 (= e!56525 (contains!764 (t!5277 lt!40251) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(assert (= (and d!22787 res!44551) b!86739))

(assert (= (and b!86739 (not res!44550)) b!86740))

(declare-fun m!91733 () Bool)

(assert (=> d!22787 m!91733))

(declare-fun m!91735 () Bool)

(assert (=> d!22787 m!91735))

(declare-fun m!91737 () Bool)

(assert (=> b!86740 m!91737))

(assert (=> b!85964 d!22787))

(declare-fun b!86741 () Bool)

(declare-fun e!56527 () (_ BitVec 32))

(declare-fun e!56526 () (_ BitVec 32))

(assert (=> b!86741 (= e!56527 e!56526)))

(declare-fun c!14219 () Bool)

(assert (=> b!86741 (= c!14219 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000)))))

(declare-fun bm!8250 () Bool)

(declare-fun call!8253 () (_ BitVec 32))

(assert (=> bm!8250 (= call!8253 (arrayCountValidKeys!0 (_keys!4010 (_2!1127 lt!40373)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (_2!1127 lt!40373)))))))

(declare-fun b!86742 () Bool)

(assert (=> b!86742 (= e!56526 (bvadd #b00000000000000000000000000000001 call!8253))))

(declare-fun b!86743 () Bool)

(assert (=> b!86743 (= e!56527 #b00000000000000000000000000000000)))

(declare-fun b!86744 () Bool)

(assert (=> b!86744 (= e!56526 call!8253)))

(declare-fun d!22789 () Bool)

(declare-fun lt!41061 () (_ BitVec 32))

(assert (=> d!22789 (and (bvsge lt!41061 #b00000000000000000000000000000000) (bvsle lt!41061 (bvsub (size!2162 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000)))))

(assert (=> d!22789 (= lt!41061 e!56527)))

(declare-fun c!14218 () Bool)

(assert (=> d!22789 (= c!14218 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))))))

(assert (=> d!22789 (and (bvsle #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2162 (_keys!4010 (_2!1127 lt!40373))) (size!2162 (_keys!4010 (_2!1127 lt!40373)))))))

(assert (=> d!22789 (= (arrayCountValidKeys!0 (_keys!4010 (_2!1127 lt!40373)) #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))) lt!41061)))

(assert (= (and d!22789 c!14218) b!86743))

(assert (= (and d!22789 (not c!14218)) b!86741))

(assert (= (and b!86741 c!14219) b!86742))

(assert (= (and b!86741 (not c!14219)) b!86744))

(assert (= (or b!86742 b!86744) bm!8250))

(assert (=> b!86741 m!91427))

(assert (=> b!86741 m!91427))

(assert (=> b!86741 m!91437))

(declare-fun m!91739 () Bool)

(assert (=> bm!8250 m!91739))

(assert (=> b!86115 d!22789))

(declare-fun lt!41062 () Bool)

(declare-fun d!22791 () Bool)

(assert (=> d!22791 (= lt!41062 (select (content!88 (toList!759 lt!40819)) (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun e!56528 () Bool)

(assert (=> d!22791 (= lt!41062 e!56528)))

(declare-fun res!44553 () Bool)

(assert (=> d!22791 (=> (not res!44553) (not e!56528))))

(assert (=> d!22791 (= res!44553 ((_ is Cons!1548) (toList!759 lt!40819)))))

(assert (=> d!22791 (= (contains!764 (toList!759 lt!40819) (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41062)))

(declare-fun b!86745 () Bool)

(declare-fun e!56529 () Bool)

(assert (=> b!86745 (= e!56528 e!56529)))

(declare-fun res!44552 () Bool)

(assert (=> b!86745 (=> res!44552 e!56529)))

(assert (=> b!86745 (= res!44552 (= (h!2139 (toList!759 lt!40819)) (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86746 () Bool)

(assert (=> b!86746 (= e!56529 (contains!764 (t!5277 (toList!759 lt!40819)) (ite (or c!13896 c!13894) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (= (and d!22791 res!44553) b!86745))

(assert (= (and b!86745 (not res!44552)) b!86746))

(declare-fun m!91741 () Bool)

(assert (=> d!22791 m!91741))

(declare-fun m!91743 () Bool)

(assert (=> d!22791 m!91743))

(declare-fun m!91745 () Bool)

(assert (=> b!86746 m!91745))

(assert (=> b!86137 d!22791))

(declare-fun d!22793 () Bool)

(declare-fun e!56530 () Bool)

(assert (=> d!22793 e!56530))

(declare-fun res!44554 () Bool)

(assert (=> d!22793 (=> (not res!44554) (not e!56530))))

(declare-fun lt!41064 () ListLongMap!1487)

(assert (=> d!22793 (= res!44554 (contains!762 lt!41064 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun lt!41063 () List!1552)

(assert (=> d!22793 (= lt!41064 (ListLongMap!1488 lt!41063))))

(declare-fun lt!41065 () Unit!2533)

(declare-fun lt!41066 () Unit!2533)

(assert (=> d!22793 (= lt!41065 lt!41066)))

(assert (=> d!22793 (= (getValueByKey!139 lt!41063 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!22793 (= lt!41066 (lemmaContainsTupThenGetReturnValue!58 lt!41063 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!22793 (= lt!41063 (insertStrictlySorted!60 (toList!759 call!8146) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!22793 (= (+!116 call!8146 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) lt!41064)))

(declare-fun b!86747 () Bool)

(declare-fun res!44555 () Bool)

(assert (=> b!86747 (=> (not res!44555) (not e!56530))))

(assert (=> b!86747 (= res!44555 (= (getValueByKey!139 (toList!759 lt!41064) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(declare-fun b!86748 () Bool)

(assert (=> b!86748 (= e!56530 (contains!764 (toList!759 lt!41064) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(assert (= (and d!22793 res!44554) b!86747))

(assert (= (and b!86747 res!44555) b!86748))

(declare-fun m!91747 () Bool)

(assert (=> d!22793 m!91747))

(declare-fun m!91749 () Bool)

(assert (=> d!22793 m!91749))

(declare-fun m!91751 () Bool)

(assert (=> d!22793 m!91751))

(declare-fun m!91753 () Bool)

(assert (=> d!22793 m!91753))

(declare-fun m!91755 () Bool)

(assert (=> b!86747 m!91755))

(declare-fun m!91757 () Bool)

(assert (=> b!86748 m!91757))

(assert (=> b!85733 d!22793))

(declare-fun d!22795 () Bool)

(declare-fun e!56532 () Bool)

(assert (=> d!22795 e!56532))

(declare-fun res!44556 () Bool)

(assert (=> d!22795 (=> res!44556 e!56532)))

(declare-fun lt!41069 () Bool)

(assert (=> d!22795 (= res!44556 (not lt!41069))))

(declare-fun lt!41070 () Bool)

(assert (=> d!22795 (= lt!41069 lt!41070)))

(declare-fun lt!41068 () Unit!2533)

(declare-fun e!56531 () Unit!2533)

(assert (=> d!22795 (= lt!41068 e!56531)))

(declare-fun c!14220 () Bool)

(assert (=> d!22795 (= c!14220 lt!41070)))

(assert (=> d!22795 (= lt!41070 (containsKey!143 (toList!759 lt!40634) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22795 (= (contains!762 lt!40634 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41069)))

(declare-fun b!86749 () Bool)

(declare-fun lt!41067 () Unit!2533)

(assert (=> b!86749 (= e!56531 lt!41067)))

(assert (=> b!86749 (= lt!41067 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40634) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> b!86749 (isDefined!93 (getValueByKey!139 (toList!759 lt!40634) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86750 () Bool)

(declare-fun Unit!2583 () Unit!2533)

(assert (=> b!86750 (= e!56531 Unit!2583)))

(declare-fun b!86751 () Bool)

(assert (=> b!86751 (= e!56532 (isDefined!93 (getValueByKey!139 (toList!759 lt!40634) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22795 c!14220) b!86749))

(assert (= (and d!22795 (not c!14220)) b!86750))

(assert (= (and d!22795 (not res!44556)) b!86751))

(declare-fun m!91759 () Bool)

(assert (=> d!22795 m!91759))

(declare-fun m!91761 () Bool)

(assert (=> b!86749 m!91761))

(assert (=> b!86749 m!90337))

(assert (=> b!86749 m!90337))

(declare-fun m!91763 () Bool)

(assert (=> b!86749 m!91763))

(assert (=> b!86751 m!90337))

(assert (=> b!86751 m!90337))

(assert (=> b!86751 m!91763))

(assert (=> d!22271 d!22795))

(declare-fun b!86752 () Bool)

(declare-fun e!56533 () Option!145)

(assert (=> b!86752 (= e!56533 (Some!144 (_2!1126 (h!2139 lt!40633))))))

(declare-fun b!86754 () Bool)

(declare-fun e!56534 () Option!145)

(assert (=> b!86754 (= e!56534 (getValueByKey!139 (t!5277 lt!40633) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86753 () Bool)

(assert (=> b!86753 (= e!56533 e!56534)))

(declare-fun c!14222 () Bool)

(assert (=> b!86753 (= c!14222 (and ((_ is Cons!1548) lt!40633) (not (= (_1!1126 (h!2139 lt!40633)) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!22797 () Bool)

(declare-fun c!14221 () Bool)

(assert (=> d!22797 (= c!14221 (and ((_ is Cons!1548) lt!40633) (= (_1!1126 (h!2139 lt!40633)) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22797 (= (getValueByKey!139 lt!40633 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56533)))

(declare-fun b!86755 () Bool)

(assert (=> b!86755 (= e!56534 None!143)))

(assert (= (and d!22797 c!14221) b!86752))

(assert (= (and d!22797 (not c!14221)) b!86753))

(assert (= (and b!86753 c!14222) b!86754))

(assert (= (and b!86753 (not c!14222)) b!86755))

(declare-fun m!91765 () Bool)

(assert (=> b!86754 m!91765))

(assert (=> d!22271 d!22797))

(declare-fun d!22799 () Bool)

(assert (=> d!22799 (= (getValueByKey!139 lt!40633 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!41071 () Unit!2533)

(assert (=> d!22799 (= lt!41071 (choose!508 lt!40633 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun e!56535 () Bool)

(assert (=> d!22799 e!56535))

(declare-fun res!44557 () Bool)

(assert (=> d!22799 (=> (not res!44557) (not e!56535))))

(assert (=> d!22799 (= res!44557 (isStrictlySorted!293 lt!40633))))

(assert (=> d!22799 (= (lemmaContainsTupThenGetReturnValue!58 lt!40633 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41071)))

(declare-fun b!86756 () Bool)

(declare-fun res!44558 () Bool)

(assert (=> b!86756 (=> (not res!44558) (not e!56535))))

(assert (=> b!86756 (= res!44558 (containsKey!143 lt!40633 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86757 () Bool)

(assert (=> b!86757 (= e!56535 (contains!764 lt!40633 (tuple2!2233 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22799 res!44557) b!86756))

(assert (= (and b!86756 res!44558) b!86757))

(assert (=> d!22799 m!90331))

(declare-fun m!91767 () Bool)

(assert (=> d!22799 m!91767))

(declare-fun m!91769 () Bool)

(assert (=> d!22799 m!91769))

(declare-fun m!91771 () Bool)

(assert (=> b!86756 m!91771))

(declare-fun m!91773 () Bool)

(assert (=> b!86757 m!91773))

(assert (=> d!22271 d!22799))

(declare-fun b!86758 () Bool)

(declare-fun e!56537 () List!1552)

(declare-fun c!14224 () Bool)

(declare-fun c!14223 () Bool)

(assert (=> b!86758 (= e!56537 (ite c!14223 (t!5277 (toList!759 lt!40173)) (ite c!14224 (Cons!1548 (h!2139 (toList!759 lt!40173)) (t!5277 (toList!759 lt!40173))) Nil!1549)))))

(declare-fun b!86759 () Bool)

(declare-fun e!56539 () Bool)

(declare-fun lt!41072 () List!1552)

(assert (=> b!86759 (= e!56539 (contains!764 lt!41072 (tuple2!2233 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86760 () Bool)

(declare-fun e!56538 () List!1552)

(declare-fun e!56536 () List!1552)

(assert (=> b!86760 (= e!56538 e!56536)))

(assert (=> b!86760 (= c!14223 (and ((_ is Cons!1548) (toList!759 lt!40173)) (= (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!86761 () Bool)

(declare-fun res!44559 () Bool)

(assert (=> b!86761 (=> (not res!44559) (not e!56539))))

(assert (=> b!86761 (= res!44559 (containsKey!143 lt!41072 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun d!22801 () Bool)

(assert (=> d!22801 e!56539))

(declare-fun res!44560 () Bool)

(assert (=> d!22801 (=> (not res!44560) (not e!56539))))

(assert (=> d!22801 (= res!44560 (isStrictlySorted!293 lt!41072))))

(assert (=> d!22801 (= lt!41072 e!56538)))

(declare-fun c!14225 () Bool)

(assert (=> d!22801 (= c!14225 (and ((_ is Cons!1548) (toList!759 lt!40173)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22801 (isStrictlySorted!293 (toList!759 lt!40173))))

(assert (=> d!22801 (= (insertStrictlySorted!60 (toList!759 lt!40173) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41072)))

(declare-fun call!8254 () List!1552)

(declare-fun bm!8251 () Bool)

(assert (=> bm!8251 (= call!8254 ($colon$colon!71 e!56537 (ite c!14225 (h!2139 (toList!759 lt!40173)) (tuple2!2233 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14226 () Bool)

(assert (=> bm!8251 (= c!14226 c!14225)))

(declare-fun bm!8252 () Bool)

(declare-fun call!8256 () List!1552)

(declare-fun call!8255 () List!1552)

(assert (=> bm!8252 (= call!8256 call!8255)))

(declare-fun b!86762 () Bool)

(assert (=> b!86762 (= e!56538 call!8254)))

(declare-fun b!86763 () Bool)

(declare-fun e!56540 () List!1552)

(assert (=> b!86763 (= e!56540 call!8256)))

(declare-fun b!86764 () Bool)

(assert (=> b!86764 (= e!56536 call!8255)))

(declare-fun b!86765 () Bool)

(assert (=> b!86765 (= e!56537 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40173)) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86766 () Bool)

(assert (=> b!86766 (= e!56540 call!8256)))

(declare-fun b!86767 () Bool)

(assert (=> b!86767 (= c!14224 (and ((_ is Cons!1548) (toList!759 lt!40173)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> b!86767 (= e!56536 e!56540)))

(declare-fun bm!8253 () Bool)

(assert (=> bm!8253 (= call!8255 call!8254)))

(assert (= (and d!22801 c!14225) b!86762))

(assert (= (and d!22801 (not c!14225)) b!86760))

(assert (= (and b!86760 c!14223) b!86764))

(assert (= (and b!86760 (not c!14223)) b!86767))

(assert (= (and b!86767 c!14224) b!86766))

(assert (= (and b!86767 (not c!14224)) b!86763))

(assert (= (or b!86766 b!86763) bm!8252))

(assert (= (or b!86764 bm!8252) bm!8253))

(assert (= (or b!86762 bm!8253) bm!8251))

(assert (= (and bm!8251 c!14226) b!86765))

(assert (= (and bm!8251 (not c!14226)) b!86758))

(assert (= (and d!22801 res!44560) b!86761))

(assert (= (and b!86761 res!44559) b!86759))

(declare-fun m!91775 () Bool)

(assert (=> b!86761 m!91775))

(declare-fun m!91777 () Bool)

(assert (=> b!86765 m!91777))

(declare-fun m!91779 () Bool)

(assert (=> d!22801 m!91779))

(assert (=> d!22801 m!90581))

(declare-fun m!91781 () Bool)

(assert (=> b!86759 m!91781))

(declare-fun m!91783 () Bool)

(assert (=> bm!8251 m!91783))

(assert (=> d!22271 d!22801))

(assert (=> d!22167 d!22105))

(declare-fun b!86768 () Bool)

(declare-fun e!56541 () Option!145)

(assert (=> b!86768 (= e!56541 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40607)))))))

(declare-fun b!86770 () Bool)

(declare-fun e!56542 () Option!145)

(assert (=> b!86770 (= e!56542 (getValueByKey!139 (t!5277 (toList!759 lt!40607)) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!86769 () Bool)

(assert (=> b!86769 (= e!56541 e!56542)))

(declare-fun c!14228 () Bool)

(assert (=> b!86769 (= c!14228 (and ((_ is Cons!1548) (toList!759 lt!40607)) (not (= (_1!1126 (h!2139 (toList!759 lt!40607))) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14227 () Bool)

(declare-fun d!22803 () Bool)

(assert (=> d!22803 (= c!14227 (and ((_ is Cons!1548) (toList!759 lt!40607)) (= (_1!1126 (h!2139 (toList!759 lt!40607))) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22803 (= (getValueByKey!139 (toList!759 lt!40607) (_1!1126 (tuple2!2233 lt!40451 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56541)))

(declare-fun b!86771 () Bool)

(assert (=> b!86771 (= e!56542 None!143)))

(assert (= (and d!22803 c!14227) b!86768))

(assert (= (and d!22803 (not c!14227)) b!86769))

(assert (= (and b!86769 c!14228) b!86770))

(assert (= (and b!86769 (not c!14228)) b!86771))

(declare-fun m!91785 () Bool)

(assert (=> b!86770 m!91785))

(assert (=> b!85907 d!22803))

(declare-fun d!22805 () Bool)

(declare-fun e!56544 () Bool)

(assert (=> d!22805 e!56544))

(declare-fun res!44561 () Bool)

(assert (=> d!22805 (=> res!44561 e!56544)))

(declare-fun lt!41075 () Bool)

(assert (=> d!22805 (= res!44561 (not lt!41075))))

(declare-fun lt!41076 () Bool)

(assert (=> d!22805 (= lt!41075 lt!41076)))

(declare-fun lt!41074 () Unit!2533)

(declare-fun e!56543 () Unit!2533)

(assert (=> d!22805 (= lt!41074 e!56543)))

(declare-fun c!14229 () Bool)

(assert (=> d!22805 (= c!14229 lt!41076)))

(assert (=> d!22805 (= lt!41076 (containsKey!143 (toList!759 lt!40666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22805 (= (contains!762 lt!40666 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41075)))

(declare-fun b!86772 () Bool)

(declare-fun lt!41073 () Unit!2533)

(assert (=> b!86772 (= e!56543 lt!41073)))

(assert (=> b!86772 (= lt!41073 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86772 (isDefined!93 (getValueByKey!139 (toList!759 lt!40666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86773 () Bool)

(declare-fun Unit!2584 () Unit!2533)

(assert (=> b!86773 (= e!56543 Unit!2584)))

(declare-fun b!86774 () Bool)

(assert (=> b!86774 (= e!56544 (isDefined!93 (getValueByKey!139 (toList!759 lt!40666) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22805 c!14229) b!86772))

(assert (= (and d!22805 (not c!14229)) b!86773))

(assert (= (and d!22805 (not res!44561)) b!86774))

(declare-fun m!91787 () Bool)

(assert (=> d!22805 m!91787))

(declare-fun m!91789 () Bool)

(assert (=> b!86772 m!91789))

(declare-fun m!91791 () Bool)

(assert (=> b!86772 m!91791))

(assert (=> b!86772 m!91791))

(declare-fun m!91793 () Bool)

(assert (=> b!86772 m!91793))

(assert (=> b!86774 m!91791))

(assert (=> b!86774 m!91791))

(assert (=> b!86774 m!91793))

(assert (=> bm!8172 d!22805))

(declare-fun d!22807 () Bool)

(declare-fun lt!41077 () Bool)

(assert (=> d!22807 (= lt!41077 (select (content!88 lt!40476) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun e!56545 () Bool)

(assert (=> d!22807 (= lt!41077 e!56545)))

(declare-fun res!44563 () Bool)

(assert (=> d!22807 (=> (not res!44563) (not e!56545))))

(assert (=> d!22807 (= res!44563 ((_ is Cons!1548) lt!40476))))

(assert (=> d!22807 (= (contains!764 lt!40476 (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))) lt!41077)))

(declare-fun b!86775 () Bool)

(declare-fun e!56546 () Bool)

(assert (=> b!86775 (= e!56545 e!56546)))

(declare-fun res!44562 () Bool)

(assert (=> b!86775 (=> res!44562 e!56546)))

(assert (=> b!86775 (= res!44562 (= (h!2139 lt!40476) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(declare-fun b!86776 () Bool)

(assert (=> b!86776 (= e!56546 (contains!764 (t!5277 lt!40476) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))))))

(assert (= (and d!22807 res!44563) b!86775))

(assert (= (and b!86775 (not res!44562)) b!86776))

(declare-fun m!91795 () Bool)

(assert (=> d!22807 m!91795))

(declare-fun m!91797 () Bool)

(assert (=> d!22807 m!91797))

(declare-fun m!91799 () Bool)

(assert (=> b!86776 m!91799))

(assert (=> b!85689 d!22807))

(declare-fun d!22809 () Bool)

(assert (=> d!22809 (= (content!89 Nil!1550) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!22343 d!22809))

(declare-fun d!22811 () Bool)

(assert (=> d!22811 (isDefined!93 (getValueByKey!139 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun lt!41078 () Unit!2533)

(assert (=> d!22811 (= lt!41078 (choose!518 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun e!56547 () Bool)

(assert (=> d!22811 e!56547))

(declare-fun res!44564 () Bool)

(assert (=> d!22811 (=> (not res!44564) (not e!56547))))

(assert (=> d!22811 (= res!44564 (isStrictlySorted!293 (toList!759 call!8098)))))

(assert (=> d!22811 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) lt!41078)))

(declare-fun b!86777 () Bool)

(assert (=> b!86777 (= e!56547 (containsKey!143 (toList!759 call!8098) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (= (and d!22811 res!44564) b!86777))

(assert (=> d!22811 m!89417))

(assert (=> d!22811 m!90617))

(assert (=> d!22811 m!90617))

(assert (=> d!22811 m!90619))

(assert (=> d!22811 m!89417))

(declare-fun m!91801 () Bool)

(assert (=> d!22811 m!91801))

(declare-fun m!91803 () Bool)

(assert (=> d!22811 m!91803))

(assert (=> b!86777 m!89417))

(assert (=> b!86777 m!90613))

(assert (=> b!86112 d!22811))

(assert (=> b!86112 d!22717))

(assert (=> b!86112 d!22719))

(declare-fun d!22813 () Bool)

(declare-fun lt!41079 () Bool)

(assert (=> d!22813 (= lt!41079 (select (content!88 (t!5277 (toList!759 lt!40286))) lt!40163))))

(declare-fun e!56548 () Bool)

(assert (=> d!22813 (= lt!41079 e!56548)))

(declare-fun res!44566 () Bool)

(assert (=> d!22813 (=> (not res!44566) (not e!56548))))

(assert (=> d!22813 (= res!44566 ((_ is Cons!1548) (t!5277 (toList!759 lt!40286))))))

(assert (=> d!22813 (= (contains!764 (t!5277 (toList!759 lt!40286)) lt!40163) lt!41079)))

(declare-fun b!86778 () Bool)

(declare-fun e!56549 () Bool)

(assert (=> b!86778 (= e!56548 e!56549)))

(declare-fun res!44565 () Bool)

(assert (=> b!86778 (=> res!44565 e!56549)))

(assert (=> b!86778 (= res!44565 (= (h!2139 (t!5277 (toList!759 lt!40286))) lt!40163))))

(declare-fun b!86779 () Bool)

(assert (=> b!86779 (= e!56549 (contains!764 (t!5277 (t!5277 (toList!759 lt!40286))) lt!40163))))

(assert (= (and d!22813 res!44566) b!86778))

(assert (= (and b!86778 (not res!44565)) b!86779))

(assert (=> d!22813 m!91365))

(declare-fun m!91805 () Bool)

(assert (=> d!22813 m!91805))

(declare-fun m!91807 () Bool)

(assert (=> b!86779 m!91807))

(assert (=> b!86073 d!22813))

(assert (=> b!86142 d!22153))

(declare-fun d!22815 () Bool)

(declare-fun e!56552 () Bool)

(assert (=> d!22815 e!56552))

(declare-fun res!44569 () Bool)

(assert (=> d!22815 (=> (not res!44569) (not e!56552))))

(assert (=> d!22815 (= res!44569 (and (bvsge (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000000) (bvslt (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (size!2162 (_keys!4010 newMap!16))) (bvslt (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (size!2163 (_values!2321 newMap!16)))))))

(declare-fun lt!41082 () Unit!2533)

(declare-fun choose!520 (array!4028 array!4030 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) (_ BitVec 64) V!3027 Int) Unit!2533)

(assert (=> d!22815 (= lt!41082 (choose!520 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22815 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22815 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!19 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 (defaultEntry!2338 newMap!16)) lt!41082)))

(declare-fun b!86782 () Bool)

(assert (=> b!86782 (= e!56552 (= (+!116 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (getCurrentListMap!443 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))))

(assert (= (and d!22815 res!44569) b!86782))

(assert (=> d!22815 m!89417))

(declare-fun m!91809 () Bool)

(assert (=> d!22815 m!91809))

(assert (=> d!22815 m!89885))

(assert (=> b!86782 m!90527))

(assert (=> b!86782 m!90533))

(assert (=> b!86782 m!89683))

(assert (=> b!86782 m!89683))

(assert (=> b!86782 m!90115))

(assert (=> b!86782 m!90531))

(assert (=> d!22305 d!22815))

(declare-fun d!22817 () Bool)

(assert (=> d!22817 (= (arrayCountValidKeys!0 lt!40779 (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (bvadd (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!41085 () Unit!2533)

(declare-fun choose!2 (array!4028 (_ BitVec 32)) Unit!2533)

(assert (=> d!22817 (= lt!41085 (choose!2 lt!40779 (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372))))))

(declare-fun e!56555 () Bool)

(assert (=> d!22817 e!56555))

(declare-fun res!44574 () Bool)

(assert (=> d!22817 (=> (not res!44574) (not e!56555))))

(assert (=> d!22817 (= res!44574 (and (bvsge (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000000) (bvslt (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (size!2162 lt!40779))))))

(assert (=> d!22817 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!40779 (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372))) lt!41085)))

(declare-fun b!86787 () Bool)

(declare-fun res!44575 () Bool)

(assert (=> b!86787 (=> (not res!44575) (not e!56555))))

(assert (=> b!86787 (= res!44575 (validKeyInArray!0 (select (arr!1918 lt!40779) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)))))))

(declare-fun b!86788 () Bool)

(assert (=> b!86788 (= e!56555 (bvslt (size!2162 lt!40779) #b01111111111111111111111111111111))))

(assert (= (and d!22817 res!44574) b!86787))

(assert (= (and b!86787 res!44575) b!86788))

(assert (=> d!22817 m!90523))

(declare-fun m!91811 () Bool)

(assert (=> d!22817 m!91811))

(declare-fun m!91813 () Bool)

(assert (=> b!86787 m!91813))

(assert (=> b!86787 m!91813))

(declare-fun m!91815 () Bool)

(assert (=> b!86787 m!91815))

(assert (=> d!22305 d!22817))

(declare-fun b!86800 () Bool)

(declare-fun e!56560 () Bool)

(assert (=> b!86800 (= e!56560 (= (arrayCountValidKeys!0 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!86799 () Bool)

(declare-fun e!56561 () Bool)

(assert (=> b!86799 (= e!56561 (bvslt (size!2162 (_keys!4010 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!86798 () Bool)

(declare-fun res!44586 () Bool)

(assert (=> b!86798 (=> (not res!44586) (not e!56561))))

(assert (=> b!86798 (= res!44586 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun d!22819 () Bool)

(assert (=> d!22819 e!56560))

(declare-fun res!44584 () Bool)

(assert (=> d!22819 (=> (not res!44584) (not e!56560))))

(assert (=> d!22819 (= res!44584 (and (bvsge (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000000) (bvslt (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (size!2162 (_keys!4010 newMap!16)))))))

(declare-fun lt!41088 () Unit!2533)

(declare-fun choose!1 (array!4028 (_ BitVec 32) (_ BitVec 64)) Unit!2533)

(assert (=> d!22819 (= lt!41088 (choose!1 (_keys!4010 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22819 e!56561))

(declare-fun res!44587 () Bool)

(assert (=> d!22819 (=> (not res!44587) (not e!56561))))

(assert (=> d!22819 (= res!44587 (and (bvsge (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000000) (bvslt (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (size!2162 (_keys!4010 newMap!16)))))))

(assert (=> d!22819 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4010 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) lt!41088)))

(declare-fun b!86797 () Bool)

(declare-fun res!44585 () Bool)

(assert (=> b!86797 (=> (not res!44585) (not e!56561))))

(assert (=> b!86797 (= res!44585 (not (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372))))))))

(assert (= (and d!22819 res!44587) b!86797))

(assert (= (and b!86797 res!44585) b!86798))

(assert (= (and b!86798 res!44586) b!86799))

(assert (= (and d!22819 res!44584) b!86800))

(assert (=> b!86800 m!90531))

(assert (=> b!86800 m!90513))

(assert (=> b!86800 m!89755))

(assert (=> b!86798 m!89417))

(assert (=> b!86798 m!89747))

(assert (=> d!22819 m!89417))

(declare-fun m!91817 () Bool)

(assert (=> d!22819 m!91817))

(declare-fun m!91819 () Bool)

(assert (=> b!86797 m!91819))

(assert (=> b!86797 m!91819))

(declare-fun m!91821 () Bool)

(assert (=> b!86797 m!91821))

(assert (=> d!22305 d!22819))

(declare-fun bm!8254 () Bool)

(declare-fun call!8263 () ListLongMap!1487)

(declare-fun call!8260 () ListLongMap!1487)

(assert (=> bm!8254 (= call!8263 call!8260)))

(declare-fun b!86801 () Bool)

(declare-fun e!56571 () ListLongMap!1487)

(declare-fun call!8258 () ListLongMap!1487)

(assert (=> b!86801 (= e!56571 call!8258)))

(declare-fun b!86802 () Bool)

(declare-fun e!56573 () ListLongMap!1487)

(declare-fun call!8261 () ListLongMap!1487)

(assert (=> b!86802 (= e!56573 call!8261)))

(declare-fun b!86803 () Bool)

(declare-fun e!56569 () Bool)

(declare-fun e!56572 () Bool)

(assert (=> b!86803 (= e!56569 e!56572)))

(declare-fun res!44593 () Bool)

(assert (=> b!86803 (=> (not res!44593) (not e!56572))))

(declare-fun lt!41093 () ListLongMap!1487)

(assert (=> b!86803 (= res!44593 (contains!762 lt!41093 (select (arr!1918 lt!40768) #b00000000000000000000000000000000)))))

(assert (=> b!86803 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 lt!40768)))))

(declare-fun bm!8255 () Bool)

(assert (=> bm!8255 (= call!8261 call!8263)))

(declare-fun b!86804 () Bool)

(declare-fun e!56568 () Unit!2533)

(declare-fun Unit!2585 () Unit!2533)

(assert (=> b!86804 (= e!56568 Unit!2585)))

(declare-fun b!86805 () Bool)

(declare-fun e!56565 () Bool)

(declare-fun e!56562 () Bool)

(assert (=> b!86805 (= e!56565 e!56562)))

(declare-fun res!44591 () Bool)

(declare-fun call!8262 () Bool)

(assert (=> b!86805 (= res!44591 call!8262)))

(assert (=> b!86805 (=> (not res!44591) (not e!56562))))

(declare-fun b!86807 () Bool)

(declare-fun e!56574 () Bool)

(declare-fun call!8259 () Bool)

(assert (=> b!86807 (= e!56574 (not call!8259))))

(declare-fun b!86808 () Bool)

(declare-fun c!14234 () Bool)

(assert (=> b!86808 (= c!14234 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!86808 (= e!56571 e!56573)))

(declare-fun c!14231 () Bool)

(declare-fun bm!8256 () Bool)

(declare-fun call!8257 () ListLongMap!1487)

(declare-fun c!14233 () Bool)

(assert (=> bm!8256 (= call!8257 (+!116 (ite c!14233 call!8260 (ite c!14231 call!8263 call!8261)) (ite (or c!14233 c!14231) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!86809 () Bool)

(declare-fun e!56563 () ListLongMap!1487)

(assert (=> b!86809 (= e!56563 (+!116 call!8257 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun bm!8257 () Bool)

(assert (=> bm!8257 (= call!8262 (contains!762 lt!41093 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86810 () Bool)

(assert (=> b!86810 (= e!56573 call!8258)))

(declare-fun b!86811 () Bool)

(declare-fun res!44596 () Bool)

(declare-fun e!56566 () Bool)

(assert (=> b!86811 (=> (not res!44596) (not e!56566))))

(assert (=> b!86811 (= res!44596 e!56565)))

(declare-fun c!14235 () Bool)

(assert (=> b!86811 (= c!14235 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86812 () Bool)

(assert (=> b!86812 (= e!56563 e!56571)))

(assert (=> b!86812 (= c!14231 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86813 () Bool)

(assert (=> b!86813 (= e!56566 e!56574)))

(declare-fun c!14230 () Bool)

(assert (=> b!86813 (= c!14230 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8258 () Bool)

(assert (=> bm!8258 (= call!8258 call!8257)))

(declare-fun d!22821 () Bool)

(assert (=> d!22821 e!56566))

(declare-fun res!44595 () Bool)

(assert (=> d!22821 (=> (not res!44595) (not e!56566))))

(assert (=> d!22821 (= res!44595 (or (bvsge #b00000000000000000000000000000000 (size!2162 lt!40768)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 lt!40768)))))))

(declare-fun lt!41107 () ListLongMap!1487)

(assert (=> d!22821 (= lt!41093 lt!41107)))

(declare-fun lt!41089 () Unit!2533)

(assert (=> d!22821 (= lt!41089 e!56568)))

(declare-fun c!14232 () Bool)

(declare-fun e!56570 () Bool)

(assert (=> d!22821 (= c!14232 e!56570)))

(declare-fun res!44589 () Bool)

(assert (=> d!22821 (=> (not res!44589) (not e!56570))))

(assert (=> d!22821 (= res!44589 (bvslt #b00000000000000000000000000000000 (size!2162 lt!40768)))))

(assert (=> d!22821 (= lt!41107 e!56563)))

(assert (=> d!22821 (= c!14233 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22821 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22821 (= (getCurrentListMap!443 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41093)))

(declare-fun b!86806 () Bool)

(assert (=> b!86806 (= e!56565 (not call!8262))))

(declare-fun b!86814 () Bool)

(declare-fun lt!41097 () Unit!2533)

(assert (=> b!86814 (= e!56568 lt!41097)))

(declare-fun lt!41106 () ListLongMap!1487)

(assert (=> b!86814 (= lt!41106 (getCurrentListMapNoExtraKeys!80 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41090 () (_ BitVec 64))

(assert (=> b!86814 (= lt!41090 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41108 () (_ BitVec 64))

(assert (=> b!86814 (= lt!41108 (select (arr!1918 lt!40768) #b00000000000000000000000000000000))))

(declare-fun lt!41100 () Unit!2533)

(assert (=> b!86814 (= lt!41100 (addStillContains!58 lt!41106 lt!41090 (zeroValue!2230 newMap!16) lt!41108))))

(assert (=> b!86814 (contains!762 (+!116 lt!41106 (tuple2!2233 lt!41090 (zeroValue!2230 newMap!16))) lt!41108)))

(declare-fun lt!41096 () Unit!2533)

(assert (=> b!86814 (= lt!41096 lt!41100)))

(declare-fun lt!41102 () ListLongMap!1487)

(assert (=> b!86814 (= lt!41102 (getCurrentListMapNoExtraKeys!80 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41105 () (_ BitVec 64))

(assert (=> b!86814 (= lt!41105 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41104 () (_ BitVec 64))

(assert (=> b!86814 (= lt!41104 (select (arr!1918 lt!40768) #b00000000000000000000000000000000))))

(declare-fun lt!41098 () Unit!2533)

(assert (=> b!86814 (= lt!41098 (addApplyDifferent!58 lt!41102 lt!41105 (minValue!2230 newMap!16) lt!41104))))

(assert (=> b!86814 (= (apply!82 (+!116 lt!41102 (tuple2!2233 lt!41105 (minValue!2230 newMap!16))) lt!41104) (apply!82 lt!41102 lt!41104))))

(declare-fun lt!41109 () Unit!2533)

(assert (=> b!86814 (= lt!41109 lt!41098)))

(declare-fun lt!41095 () ListLongMap!1487)

(assert (=> b!86814 (= lt!41095 (getCurrentListMapNoExtraKeys!80 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41101 () (_ BitVec 64))

(assert (=> b!86814 (= lt!41101 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41092 () (_ BitVec 64))

(assert (=> b!86814 (= lt!41092 (select (arr!1918 lt!40768) #b00000000000000000000000000000000))))

(declare-fun lt!41103 () Unit!2533)

(assert (=> b!86814 (= lt!41103 (addApplyDifferent!58 lt!41095 lt!41101 (zeroValue!2230 newMap!16) lt!41092))))

(assert (=> b!86814 (= (apply!82 (+!116 lt!41095 (tuple2!2233 lt!41101 (zeroValue!2230 newMap!16))) lt!41092) (apply!82 lt!41095 lt!41092))))

(declare-fun lt!41094 () Unit!2533)

(assert (=> b!86814 (= lt!41094 lt!41103)))

(declare-fun lt!41099 () ListLongMap!1487)

(assert (=> b!86814 (= lt!41099 (getCurrentListMapNoExtraKeys!80 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41110 () (_ BitVec 64))

(assert (=> b!86814 (= lt!41110 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41091 () (_ BitVec 64))

(assert (=> b!86814 (= lt!41091 (select (arr!1918 lt!40768) #b00000000000000000000000000000000))))

(assert (=> b!86814 (= lt!41097 (addApplyDifferent!58 lt!41099 lt!41110 (minValue!2230 newMap!16) lt!41091))))

(assert (=> b!86814 (= (apply!82 (+!116 lt!41099 (tuple2!2233 lt!41110 (minValue!2230 newMap!16))) lt!41091) (apply!82 lt!41099 lt!41091))))

(declare-fun b!86815 () Bool)

(declare-fun e!56564 () Bool)

(assert (=> b!86815 (= e!56564 (= (apply!82 lt!41093 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!86816 () Bool)

(assert (=> b!86816 (= e!56570 (validKeyInArray!0 (select (arr!1918 lt!40768) #b00000000000000000000000000000000)))))

(declare-fun b!86817 () Bool)

(assert (=> b!86817 (= e!56572 (= (apply!82 lt!41093 (select (arr!1918 lt!40768) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 lt!40766) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86817 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 lt!40766)))))

(assert (=> b!86817 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 lt!40768)))))

(declare-fun bm!8259 () Bool)

(assert (=> bm!8259 (= call!8259 (contains!762 lt!41093 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86818 () Bool)

(assert (=> b!86818 (= e!56574 e!56564)))

(declare-fun res!44592 () Bool)

(assert (=> b!86818 (= res!44592 call!8259)))

(assert (=> b!86818 (=> (not res!44592) (not e!56564))))

(declare-fun b!86819 () Bool)

(declare-fun res!44590 () Bool)

(assert (=> b!86819 (=> (not res!44590) (not e!56566))))

(assert (=> b!86819 (= res!44590 e!56569)))

(declare-fun res!44588 () Bool)

(assert (=> b!86819 (=> res!44588 e!56569)))

(declare-fun e!56567 () Bool)

(assert (=> b!86819 (= res!44588 (not e!56567))))

(declare-fun res!44594 () Bool)

(assert (=> b!86819 (=> (not res!44594) (not e!56567))))

(assert (=> b!86819 (= res!44594 (bvslt #b00000000000000000000000000000000 (size!2162 lt!40768)))))

(declare-fun bm!8260 () Bool)

(assert (=> bm!8260 (= call!8260 (getCurrentListMapNoExtraKeys!80 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!86820 () Bool)

(assert (=> b!86820 (= e!56567 (validKeyInArray!0 (select (arr!1918 lt!40768) #b00000000000000000000000000000000)))))

(declare-fun b!86821 () Bool)

(assert (=> b!86821 (= e!56562 (= (apply!82 lt!41093 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(assert (= (and d!22821 c!14233) b!86809))

(assert (= (and d!22821 (not c!14233)) b!86812))

(assert (= (and b!86812 c!14231) b!86801))

(assert (= (and b!86812 (not c!14231)) b!86808))

(assert (= (and b!86808 c!14234) b!86810))

(assert (= (and b!86808 (not c!14234)) b!86802))

(assert (= (or b!86810 b!86802) bm!8255))

(assert (= (or b!86801 bm!8255) bm!8254))

(assert (= (or b!86801 b!86810) bm!8258))

(assert (= (or b!86809 bm!8254) bm!8260))

(assert (= (or b!86809 bm!8258) bm!8256))

(assert (= (and d!22821 res!44589) b!86816))

(assert (= (and d!22821 c!14232) b!86814))

(assert (= (and d!22821 (not c!14232)) b!86804))

(assert (= (and d!22821 res!44595) b!86819))

(assert (= (and b!86819 res!44594) b!86820))

(assert (= (and b!86819 (not res!44588)) b!86803))

(assert (= (and b!86803 res!44593) b!86817))

(assert (= (and b!86819 res!44590) b!86811))

(assert (= (and b!86811 c!14235) b!86805))

(assert (= (and b!86811 (not c!14235)) b!86806))

(assert (= (and b!86805 res!44591) b!86821))

(assert (= (or b!86805 b!86806) bm!8257))

(assert (= (and b!86811 res!44596) b!86813))

(assert (= (and b!86813 c!14230) b!86818))

(assert (= (and b!86813 (not c!14230)) b!86807))

(assert (= (and b!86818 res!44592) b!86815))

(assert (= (or b!86818 b!86807) bm!8259))

(declare-fun b_lambda!3839 () Bool)

(assert (=> (not b_lambda!3839) (not b!86817)))

(assert (=> b!86817 t!5286))

(declare-fun b_and!5221 () Bool)

(assert (= b_and!5217 (and (=> t!5286 result!2931) b_and!5221)))

(assert (=> b!86817 t!5288))

(declare-fun b_and!5223 () Bool)

(assert (= b_and!5219 (and (=> t!5288 result!2933) b_and!5223)))

(declare-fun m!91823 () Bool)

(assert (=> b!86815 m!91823))

(declare-fun m!91825 () Bool)

(assert (=> b!86814 m!91825))

(declare-fun m!91827 () Bool)

(assert (=> b!86814 m!91827))

(declare-fun m!91829 () Bool)

(assert (=> b!86814 m!91829))

(declare-fun m!91831 () Bool)

(assert (=> b!86814 m!91831))

(declare-fun m!91833 () Bool)

(assert (=> b!86814 m!91833))

(declare-fun m!91835 () Bool)

(assert (=> b!86814 m!91835))

(declare-fun m!91837 () Bool)

(assert (=> b!86814 m!91837))

(declare-fun m!91839 () Bool)

(assert (=> b!86814 m!91839))

(declare-fun m!91841 () Bool)

(assert (=> b!86814 m!91841))

(declare-fun m!91843 () Bool)

(assert (=> b!86814 m!91843))

(assert (=> b!86814 m!91839))

(declare-fun m!91845 () Bool)

(assert (=> b!86814 m!91845))

(declare-fun m!91847 () Bool)

(assert (=> b!86814 m!91847))

(assert (=> b!86814 m!91833))

(declare-fun m!91849 () Bool)

(assert (=> b!86814 m!91849))

(assert (=> b!86814 m!91835))

(declare-fun m!91851 () Bool)

(assert (=> b!86814 m!91851))

(declare-fun m!91853 () Bool)

(assert (=> b!86814 m!91853))

(assert (=> b!86814 m!91825))

(declare-fun m!91855 () Bool)

(assert (=> b!86814 m!91855))

(declare-fun m!91857 () Bool)

(assert (=> b!86814 m!91857))

(declare-fun m!91859 () Bool)

(assert (=> b!86809 m!91859))

(declare-fun m!91861 () Bool)

(assert (=> b!86821 m!91861))

(declare-fun m!91863 () Bool)

(assert (=> bm!8257 m!91863))

(assert (=> b!86820 m!91845))

(assert (=> b!86820 m!91845))

(declare-fun m!91865 () Bool)

(assert (=> b!86820 m!91865))

(assert (=> b!86817 m!91845))

(assert (=> b!86817 m!91845))

(declare-fun m!91867 () Bool)

(assert (=> b!86817 m!91867))

(declare-fun m!91869 () Bool)

(assert (=> b!86817 m!91869))

(assert (=> b!86817 m!89967))

(declare-fun m!91871 () Bool)

(assert (=> b!86817 m!91871))

(assert (=> b!86817 m!89967))

(assert (=> b!86817 m!91869))

(assert (=> bm!8260 m!91847))

(assert (=> d!22821 m!89885))

(declare-fun m!91873 () Bool)

(assert (=> bm!8256 m!91873))

(declare-fun m!91875 () Bool)

(assert (=> bm!8259 m!91875))

(assert (=> b!86803 m!91845))

(assert (=> b!86803 m!91845))

(declare-fun m!91877 () Bool)

(assert (=> b!86803 m!91877))

(assert (=> b!86816 m!91845))

(assert (=> b!86816 m!91845))

(assert (=> b!86816 m!91865))

(assert (=> d!22305 d!22821))

(declare-fun b!86822 () Bool)

(declare-fun e!56576 () (_ BitVec 32))

(declare-fun e!56575 () (_ BitVec 32))

(assert (=> b!86822 (= e!56576 e!56575)))

(declare-fun c!14237 () Bool)

(assert (=> b!86822 (= c!14237 (validKeyInArray!0 (select (arr!1918 lt!40779) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)))))))

(declare-fun call!8264 () (_ BitVec 32))

(declare-fun bm!8261 () Bool)

(assert (=> bm!8261 (= call!8264 (arrayCountValidKeys!0 lt!40779 (bvadd (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000001) (bvadd (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000001)))))

(declare-fun b!86823 () Bool)

(assert (=> b!86823 (= e!56575 (bvadd #b00000000000000000000000000000001 call!8264))))

(declare-fun b!86824 () Bool)

(assert (=> b!86824 (= e!56576 #b00000000000000000000000000000000)))

(declare-fun b!86825 () Bool)

(assert (=> b!86825 (= e!56575 call!8264)))

(declare-fun d!22823 () Bool)

(declare-fun lt!41111 () (_ BitVec 32))

(assert (=> d!22823 (and (bvsge lt!41111 #b00000000000000000000000000000000) (bvsle lt!41111 (bvsub (size!2162 lt!40779) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)))))))

(assert (=> d!22823 (= lt!41111 e!56576)))

(declare-fun c!14236 () Bool)

(assert (=> d!22823 (= c!14236 (bvsge (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (bvadd (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000001)))))

(assert (=> d!22823 (and (bvsle (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (bvadd (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000001)) (bvsge (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000001) (size!2162 lt!40779)))))

(assert (=> d!22823 (= (arrayCountValidKeys!0 lt!40779 (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (bvadd (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000001)) lt!41111)))

(assert (= (and d!22823 c!14236) b!86824))

(assert (= (and d!22823 (not c!14236)) b!86822))

(assert (= (and b!86822 c!14237) b!86823))

(assert (= (and b!86822 (not c!14237)) b!86825))

(assert (= (or b!86823 b!86825) bm!8261))

(assert (=> b!86822 m!91813))

(assert (=> b!86822 m!91813))

(assert (=> b!86822 m!91815))

(declare-fun m!91879 () Bool)

(assert (=> bm!8261 m!91879))

(assert (=> d!22305 d!22823))

(declare-fun d!22825 () Bool)

(declare-fun e!56579 () Bool)

(assert (=> d!22825 e!56579))

(declare-fun res!44599 () Bool)

(assert (=> d!22825 (=> (not res!44599) (not e!56579))))

(assert (=> d!22825 (= res!44599 (and (bvsge (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000000) (bvslt (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (size!2162 (_keys!4010 newMap!16)))))))

(declare-fun lt!41114 () Unit!2533)

(declare-fun choose!102 ((_ BitVec 64) array!4028 (_ BitVec 32) (_ BitVec 32)) Unit!2533)

(assert (=> d!22825 (= lt!41114 (choose!102 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (mask!6366 newMap!16)))))

(assert (=> d!22825 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22825 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (mask!6366 newMap!16)) lt!41114)))

(declare-fun b!86828 () Bool)

(assert (=> b!86828 (= e!56579 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (mask!6366 newMap!16)))))

(assert (= (and d!22825 res!44599) b!86828))

(assert (=> d!22825 m!89417))

(declare-fun m!91881 () Bool)

(assert (=> d!22825 m!91881))

(assert (=> d!22825 m!89885))

(assert (=> b!86828 m!90531))

(assert (=> b!86828 m!90529))

(assert (=> d!22305 d!22825))

(assert (=> d!22305 d!22207))

(assert (=> d!22305 d!22111))

(declare-fun d!22827 () Bool)

(declare-fun e!56582 () Bool)

(assert (=> d!22827 e!56582))

(declare-fun res!44602 () Bool)

(assert (=> d!22827 (=> (not res!44602) (not e!56582))))

(assert (=> d!22827 (= res!44602 (and (bvsge (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000000) (bvslt (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (size!2162 (_keys!4010 newMap!16)))))))

(declare-fun lt!41117 () Unit!2533)

(declare-fun choose!41 (array!4028 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1553) Unit!2533)

(assert (=> d!22827 (= lt!41117 (choose!41 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) lt!40760 lt!40773))))

(assert (=> d!22827 (bvslt (size!2162 (_keys!4010 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!22827 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) lt!40760 lt!40773) lt!41117)))

(declare-fun b!86831 () Bool)

(assert (=> b!86831 (= e!56582 (arrayNoDuplicates!0 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) lt!40760 lt!40773))))

(assert (= (and d!22827 res!44602) b!86831))

(assert (=> d!22827 m!89417))

(declare-fun m!91883 () Bool)

(assert (=> d!22827 m!91883))

(assert (=> b!86831 m!90531))

(assert (=> b!86831 m!90521))

(assert (=> d!22305 d!22827))

(declare-fun b!86832 () Bool)

(declare-fun e!56585 () Bool)

(declare-fun call!8265 () Bool)

(assert (=> b!86832 (= e!56585 call!8265)))

(declare-fun b!86833 () Bool)

(declare-fun e!56584 () Bool)

(declare-fun e!56583 () Bool)

(assert (=> b!86833 (= e!56584 e!56583)))

(declare-fun res!44603 () Bool)

(assert (=> b!86833 (=> (not res!44603) (not e!56583))))

(declare-fun e!56586 () Bool)

(assert (=> b!86833 (= res!44603 (not e!56586))))

(declare-fun res!44604 () Bool)

(assert (=> b!86833 (=> (not res!44604) (not e!56586))))

(assert (=> b!86833 (= res!44604 (validKeyInArray!0 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) lt!40760)))))

(declare-fun d!22829 () Bool)

(declare-fun res!44605 () Bool)

(assert (=> d!22829 (=> res!44605 e!56584)))

(assert (=> d!22829 (= res!44605 (bvsge lt!40760 (size!2162 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))))))

(assert (=> d!22829 (= (arrayNoDuplicates!0 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) lt!40760 lt!40773) e!56584)))

(declare-fun b!86834 () Bool)

(assert (=> b!86834 (= e!56585 call!8265)))

(declare-fun b!86835 () Bool)

(assert (=> b!86835 (= e!56586 (contains!765 lt!40773 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) lt!40760)))))

(declare-fun b!86836 () Bool)

(assert (=> b!86836 (= e!56583 e!56585)))

(declare-fun c!14238 () Bool)

(assert (=> b!86836 (= c!14238 (validKeyInArray!0 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) lt!40760)))))

(declare-fun bm!8262 () Bool)

(assert (=> bm!8262 (= call!8265 (arrayNoDuplicates!0 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (bvadd lt!40760 #b00000000000000000000000000000001) (ite c!14238 (Cons!1549 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) lt!40760) lt!40773) lt!40773)))))

(assert (= (and d!22829 (not res!44605)) b!86833))

(assert (= (and b!86833 res!44604) b!86835))

(assert (= (and b!86833 res!44603) b!86836))

(assert (= (and b!86836 c!14238) b!86834))

(assert (= (and b!86836 (not c!14238)) b!86832))

(assert (= (or b!86834 b!86832) bm!8262))

(declare-fun m!91885 () Bool)

(assert (=> b!86833 m!91885))

(assert (=> b!86833 m!91885))

(declare-fun m!91887 () Bool)

(assert (=> b!86833 m!91887))

(assert (=> b!86835 m!91885))

(assert (=> b!86835 m!91885))

(declare-fun m!91889 () Bool)

(assert (=> b!86835 m!91889))

(assert (=> b!86836 m!91885))

(assert (=> b!86836 m!91885))

(assert (=> b!86836 m!91887))

(assert (=> bm!8262 m!91885))

(declare-fun m!91891 () Bool)

(assert (=> bm!8262 m!91891))

(assert (=> d!22305 d!22829))

(assert (=> d!22305 d!22227))

(declare-fun b!86837 () Bool)

(declare-fun e!56587 () Bool)

(declare-fun e!56588 () Bool)

(assert (=> b!86837 (= e!56587 e!56588)))

(declare-fun lt!41119 () (_ BitVec 64))

(assert (=> b!86837 (= lt!41119 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41118 () Unit!2533)

(assert (=> b!86837 (= lt!41118 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) lt!41119 #b00000000000000000000000000000000))))

(assert (=> b!86837 (arrayContainsKey!0 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) lt!41119 #b00000000000000000000000000000000)))

(declare-fun lt!41120 () Unit!2533)

(assert (=> b!86837 (= lt!41120 lt!41118)))

(declare-fun res!44606 () Bool)

(assert (=> b!86837 (= res!44606 (= (seekEntryOrOpen!0 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000) (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (mask!6366 newMap!16)) (Found!253 #b00000000000000000000000000000000)))))

(assert (=> b!86837 (=> (not res!44606) (not e!56588))))

(declare-fun d!22831 () Bool)

(declare-fun res!44607 () Bool)

(declare-fun e!56589 () Bool)

(assert (=> d!22831 (=> res!44607 e!56589)))

(assert (=> d!22831 (= res!44607 (bvsge #b00000000000000000000000000000000 (size!2162 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))))))

(assert (=> d!22831 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (mask!6366 newMap!16)) e!56589)))

(declare-fun b!86838 () Bool)

(declare-fun call!8266 () Bool)

(assert (=> b!86838 (= e!56588 call!8266)))

(declare-fun bm!8263 () Bool)

(assert (=> bm!8263 (= call!8266 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (mask!6366 newMap!16)))))

(declare-fun b!86839 () Bool)

(assert (=> b!86839 (= e!56589 e!56587)))

(declare-fun c!14239 () Bool)

(assert (=> b!86839 (= c!14239 (validKeyInArray!0 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!86840 () Bool)

(assert (=> b!86840 (= e!56587 call!8266)))

(assert (= (and d!22831 (not res!44607)) b!86839))

(assert (= (and b!86839 c!14239) b!86837))

(assert (= (and b!86839 (not c!14239)) b!86840))

(assert (= (and b!86837 res!44606) b!86838))

(assert (= (or b!86838 b!86840) bm!8263))

(declare-fun m!91893 () Bool)

(assert (=> b!86837 m!91893))

(declare-fun m!91895 () Bool)

(assert (=> b!86837 m!91895))

(declare-fun m!91897 () Bool)

(assert (=> b!86837 m!91897))

(assert (=> b!86837 m!91893))

(declare-fun m!91899 () Bool)

(assert (=> b!86837 m!91899))

(declare-fun m!91901 () Bool)

(assert (=> bm!8263 m!91901))

(assert (=> b!86839 m!91893))

(assert (=> b!86839 m!91893))

(declare-fun m!91903 () Bool)

(assert (=> b!86839 m!91903))

(assert (=> d!22305 d!22831))

(declare-fun d!22833 () Bool)

(declare-fun res!44608 () Bool)

(declare-fun e!56590 () Bool)

(assert (=> d!22833 (=> res!44608 e!56590)))

(assert (=> d!22833 (= res!44608 (= (select (arr!1918 lt!40752) #b00000000000000000000000000000000) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22833 (= (arrayContainsKey!0 lt!40752 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000) e!56590)))

(declare-fun b!86841 () Bool)

(declare-fun e!56591 () Bool)

(assert (=> b!86841 (= e!56590 e!56591)))

(declare-fun res!44609 () Bool)

(assert (=> b!86841 (=> (not res!44609) (not e!56591))))

(assert (=> b!86841 (= res!44609 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 lt!40752)))))

(declare-fun b!86842 () Bool)

(assert (=> b!86842 (= e!56591 (arrayContainsKey!0 lt!40752 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!22833 (not res!44608)) b!86841))

(assert (= (and b!86841 res!44609) b!86842))

(declare-fun m!91905 () Bool)

(assert (=> d!22833 m!91905))

(assert (=> b!86842 m!89417))

(declare-fun m!91907 () Bool)

(assert (=> b!86842 m!91907))

(assert (=> d!22305 d!22833))

(declare-fun d!22835 () Bool)

(declare-fun e!56592 () Bool)

(assert (=> d!22835 e!56592))

(declare-fun res!44610 () Bool)

(assert (=> d!22835 (=> (not res!44610) (not e!56592))))

(declare-fun lt!41122 () ListLongMap!1487)

(assert (=> d!22835 (= res!44610 (contains!762 lt!41122 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!41121 () List!1552)

(assert (=> d!22835 (= lt!41122 (ListLongMap!1488 lt!41121))))

(declare-fun lt!41123 () Unit!2533)

(declare-fun lt!41124 () Unit!2533)

(assert (=> d!22835 (= lt!41123 lt!41124)))

(assert (=> d!22835 (= (getValueByKey!139 lt!41121 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22835 (= lt!41124 (lemmaContainsTupThenGetReturnValue!58 lt!41121 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22835 (= lt!41121 (insertStrictlySorted!60 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22835 (= (+!116 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!41122)))

(declare-fun b!86843 () Bool)

(declare-fun res!44611 () Bool)

(assert (=> b!86843 (=> (not res!44611) (not e!56592))))

(assert (=> b!86843 (= res!44611 (= (getValueByKey!139 (toList!759 lt!41122) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86844 () Bool)

(assert (=> b!86844 (= e!56592 (contains!764 (toList!759 lt!41122) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!22835 res!44610) b!86843))

(assert (= (and b!86843 res!44611) b!86844))

(declare-fun m!91909 () Bool)

(assert (=> d!22835 m!91909))

(declare-fun m!91911 () Bool)

(assert (=> d!22835 m!91911))

(declare-fun m!91913 () Bool)

(assert (=> d!22835 m!91913))

(declare-fun m!91915 () Bool)

(assert (=> d!22835 m!91915))

(declare-fun m!91917 () Bool)

(assert (=> b!86843 m!91917))

(declare-fun m!91919 () Bool)

(assert (=> b!86844 m!91919))

(assert (=> d!22305 d!22835))

(declare-fun bm!8264 () Bool)

(declare-fun call!8273 () ListLongMap!1487)

(declare-fun call!8270 () ListLongMap!1487)

(assert (=> bm!8264 (= call!8273 call!8270)))

(declare-fun b!86845 () Bool)

(declare-fun e!56602 () ListLongMap!1487)

(declare-fun call!8268 () ListLongMap!1487)

(assert (=> b!86845 (= e!56602 call!8268)))

(declare-fun b!86846 () Bool)

(declare-fun e!56604 () ListLongMap!1487)

(declare-fun call!8271 () ListLongMap!1487)

(assert (=> b!86846 (= e!56604 call!8271)))

(declare-fun b!86847 () Bool)

(declare-fun e!56600 () Bool)

(declare-fun e!56603 () Bool)

(assert (=> b!86847 (= e!56600 e!56603)))

(declare-fun res!44617 () Bool)

(assert (=> b!86847 (=> (not res!44617) (not e!56603))))

(declare-fun lt!41129 () ListLongMap!1487)

(assert (=> b!86847 (= res!44617 (contains!762 lt!41129 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!86847 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))))))

(declare-fun bm!8265 () Bool)

(assert (=> bm!8265 (= call!8271 call!8273)))

(declare-fun b!86848 () Bool)

(declare-fun e!56599 () Unit!2533)

(declare-fun Unit!2586 () Unit!2533)

(assert (=> b!86848 (= e!56599 Unit!2586)))

(declare-fun b!86849 () Bool)

(declare-fun e!56596 () Bool)

(declare-fun e!56593 () Bool)

(assert (=> b!86849 (= e!56596 e!56593)))

(declare-fun res!44615 () Bool)

(declare-fun call!8272 () Bool)

(assert (=> b!86849 (= res!44615 call!8272)))

(assert (=> b!86849 (=> (not res!44615) (not e!56593))))

(declare-fun b!86851 () Bool)

(declare-fun e!56605 () Bool)

(declare-fun call!8269 () Bool)

(assert (=> b!86851 (= e!56605 (not call!8269))))

(declare-fun b!86852 () Bool)

(declare-fun c!14244 () Bool)

(assert (=> b!86852 (= c!14244 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!86852 (= e!56602 e!56604)))

(declare-fun bm!8266 () Bool)

(declare-fun c!14243 () Bool)

(declare-fun c!14241 () Bool)

(declare-fun call!8267 () ListLongMap!1487)

(assert (=> bm!8266 (= call!8267 (+!116 (ite c!14243 call!8270 (ite c!14241 call!8273 call!8271)) (ite (or c!14243 c!14241) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!86853 () Bool)

(declare-fun e!56594 () ListLongMap!1487)

(assert (=> b!86853 (= e!56594 (+!116 call!8267 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun bm!8267 () Bool)

(assert (=> bm!8267 (= call!8272 (contains!762 lt!41129 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86854 () Bool)

(assert (=> b!86854 (= e!56604 call!8268)))

(declare-fun b!86855 () Bool)

(declare-fun res!44620 () Bool)

(declare-fun e!56597 () Bool)

(assert (=> b!86855 (=> (not res!44620) (not e!56597))))

(assert (=> b!86855 (= res!44620 e!56596)))

(declare-fun c!14245 () Bool)

(assert (=> b!86855 (= c!14245 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86856 () Bool)

(assert (=> b!86856 (= e!56594 e!56602)))

(assert (=> b!86856 (= c!14241 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86857 () Bool)

(assert (=> b!86857 (= e!56597 e!56605)))

(declare-fun c!14240 () Bool)

(assert (=> b!86857 (= c!14240 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8268 () Bool)

(assert (=> bm!8268 (= call!8268 call!8267)))

(declare-fun d!22837 () Bool)

(assert (=> d!22837 e!56597))

(declare-fun res!44619 () Bool)

(assert (=> d!22837 (=> (not res!44619) (not e!56597))))

(assert (=> d!22837 (= res!44619 (or (bvsge #b00000000000000000000000000000000 (size!2162 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))))))))

(declare-fun lt!41143 () ListLongMap!1487)

(assert (=> d!22837 (= lt!41129 lt!41143)))

(declare-fun lt!41125 () Unit!2533)

(assert (=> d!22837 (= lt!41125 e!56599)))

(declare-fun c!14242 () Bool)

(declare-fun e!56601 () Bool)

(assert (=> d!22837 (= c!14242 e!56601)))

(declare-fun res!44613 () Bool)

(assert (=> d!22837 (=> (not res!44613) (not e!56601))))

(assert (=> d!22837 (= res!44613 (bvslt #b00000000000000000000000000000000 (size!2162 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))))))

(assert (=> d!22837 (= lt!41143 e!56594)))

(assert (=> d!22837 (= c!14243 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22837 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22837 (= (getCurrentListMap!443 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41129)))

(declare-fun b!86850 () Bool)

(assert (=> b!86850 (= e!56596 (not call!8272))))

(declare-fun b!86858 () Bool)

(declare-fun lt!41133 () Unit!2533)

(assert (=> b!86858 (= e!56599 lt!41133)))

(declare-fun lt!41142 () ListLongMap!1487)

(assert (=> b!86858 (= lt!41142 (getCurrentListMapNoExtraKeys!80 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41126 () (_ BitVec 64))

(assert (=> b!86858 (= lt!41126 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41144 () (_ BitVec 64))

(assert (=> b!86858 (= lt!41144 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41136 () Unit!2533)

(assert (=> b!86858 (= lt!41136 (addStillContains!58 lt!41142 lt!41126 (zeroValue!2230 newMap!16) lt!41144))))

(assert (=> b!86858 (contains!762 (+!116 lt!41142 (tuple2!2233 lt!41126 (zeroValue!2230 newMap!16))) lt!41144)))

(declare-fun lt!41132 () Unit!2533)

(assert (=> b!86858 (= lt!41132 lt!41136)))

(declare-fun lt!41138 () ListLongMap!1487)

(assert (=> b!86858 (= lt!41138 (getCurrentListMapNoExtraKeys!80 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41141 () (_ BitVec 64))

(assert (=> b!86858 (= lt!41141 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41140 () (_ BitVec 64))

(assert (=> b!86858 (= lt!41140 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41134 () Unit!2533)

(assert (=> b!86858 (= lt!41134 (addApplyDifferent!58 lt!41138 lt!41141 (minValue!2230 newMap!16) lt!41140))))

(assert (=> b!86858 (= (apply!82 (+!116 lt!41138 (tuple2!2233 lt!41141 (minValue!2230 newMap!16))) lt!41140) (apply!82 lt!41138 lt!41140))))

(declare-fun lt!41145 () Unit!2533)

(assert (=> b!86858 (= lt!41145 lt!41134)))

(declare-fun lt!41131 () ListLongMap!1487)

(assert (=> b!86858 (= lt!41131 (getCurrentListMapNoExtraKeys!80 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41137 () (_ BitVec 64))

(assert (=> b!86858 (= lt!41137 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41128 () (_ BitVec 64))

(assert (=> b!86858 (= lt!41128 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41139 () Unit!2533)

(assert (=> b!86858 (= lt!41139 (addApplyDifferent!58 lt!41131 lt!41137 (zeroValue!2230 newMap!16) lt!41128))))

(assert (=> b!86858 (= (apply!82 (+!116 lt!41131 (tuple2!2233 lt!41137 (zeroValue!2230 newMap!16))) lt!41128) (apply!82 lt!41131 lt!41128))))

(declare-fun lt!41130 () Unit!2533)

(assert (=> b!86858 (= lt!41130 lt!41139)))

(declare-fun lt!41135 () ListLongMap!1487)

(assert (=> b!86858 (= lt!41135 (getCurrentListMapNoExtraKeys!80 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41146 () (_ BitVec 64))

(assert (=> b!86858 (= lt!41146 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41127 () (_ BitVec 64))

(assert (=> b!86858 (= lt!41127 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!86858 (= lt!41133 (addApplyDifferent!58 lt!41135 lt!41146 (minValue!2230 newMap!16) lt!41127))))

(assert (=> b!86858 (= (apply!82 (+!116 lt!41135 (tuple2!2233 lt!41146 (minValue!2230 newMap!16))) lt!41127) (apply!82 lt!41135 lt!41127))))

(declare-fun b!86859 () Bool)

(declare-fun e!56595 () Bool)

(assert (=> b!86859 (= e!56595 (= (apply!82 lt!41129 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!86860 () Bool)

(assert (=> b!86860 (= e!56601 (validKeyInArray!0 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!86861 () Bool)

(assert (=> b!86861 (= e!56603 (= (apply!82 lt!41129 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86861 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))))))

(assert (=> b!86861 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))))))

(declare-fun bm!8269 () Bool)

(assert (=> bm!8269 (= call!8269 (contains!762 lt!41129 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86862 () Bool)

(assert (=> b!86862 (= e!56605 e!56595)))

(declare-fun res!44616 () Bool)

(assert (=> b!86862 (= res!44616 call!8269)))

(assert (=> b!86862 (=> (not res!44616) (not e!56595))))

(declare-fun b!86863 () Bool)

(declare-fun res!44614 () Bool)

(assert (=> b!86863 (=> (not res!44614) (not e!56597))))

(assert (=> b!86863 (= res!44614 e!56600)))

(declare-fun res!44612 () Bool)

(assert (=> b!86863 (=> res!44612 e!56600)))

(declare-fun e!56598 () Bool)

(assert (=> b!86863 (= res!44612 (not e!56598))))

(declare-fun res!44618 () Bool)

(assert (=> b!86863 (=> (not res!44618) (not e!56598))))

(assert (=> b!86863 (= res!44618 (bvslt #b00000000000000000000000000000000 (size!2162 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))))))

(declare-fun bm!8270 () Bool)

(assert (=> bm!8270 (= call!8270 (getCurrentListMapNoExtraKeys!80 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!86864 () Bool)

(assert (=> b!86864 (= e!56598 (validKeyInArray!0 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!86865 () Bool)

(assert (=> b!86865 (= e!56593 (= (apply!82 lt!41129 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(assert (= (and d!22837 c!14243) b!86853))

(assert (= (and d!22837 (not c!14243)) b!86856))

(assert (= (and b!86856 c!14241) b!86845))

(assert (= (and b!86856 (not c!14241)) b!86852))

(assert (= (and b!86852 c!14244) b!86854))

(assert (= (and b!86852 (not c!14244)) b!86846))

(assert (= (or b!86854 b!86846) bm!8265))

(assert (= (or b!86845 bm!8265) bm!8264))

(assert (= (or b!86845 b!86854) bm!8268))

(assert (= (or b!86853 bm!8264) bm!8270))

(assert (= (or b!86853 bm!8268) bm!8266))

(assert (= (and d!22837 res!44613) b!86860))

(assert (= (and d!22837 c!14242) b!86858))

(assert (= (and d!22837 (not c!14242)) b!86848))

(assert (= (and d!22837 res!44619) b!86863))

(assert (= (and b!86863 res!44618) b!86864))

(assert (= (and b!86863 (not res!44612)) b!86847))

(assert (= (and b!86847 res!44617) b!86861))

(assert (= (and b!86863 res!44614) b!86855))

(assert (= (and b!86855 c!14245) b!86849))

(assert (= (and b!86855 (not c!14245)) b!86850))

(assert (= (and b!86849 res!44615) b!86865))

(assert (= (or b!86849 b!86850) bm!8267))

(assert (= (and b!86855 res!44620) b!86857))

(assert (= (and b!86857 c!14240) b!86862))

(assert (= (and b!86857 (not c!14240)) b!86851))

(assert (= (and b!86862 res!44616) b!86859))

(assert (= (or b!86862 b!86851) bm!8269))

(declare-fun b_lambda!3841 () Bool)

(assert (=> (not b_lambda!3841) (not b!86861)))

(assert (=> b!86861 t!5286))

(declare-fun b_and!5225 () Bool)

(assert (= b_and!5221 (and (=> t!5286 result!2931) b_and!5225)))

(assert (=> b!86861 t!5288))

(declare-fun b_and!5227 () Bool)

(assert (= b_and!5223 (and (=> t!5288 result!2933) b_and!5227)))

(declare-fun m!91921 () Bool)

(assert (=> b!86859 m!91921))

(declare-fun m!91923 () Bool)

(assert (=> b!86858 m!91923))

(declare-fun m!91925 () Bool)

(assert (=> b!86858 m!91925))

(declare-fun m!91927 () Bool)

(assert (=> b!86858 m!91927))

(declare-fun m!91929 () Bool)

(assert (=> b!86858 m!91929))

(declare-fun m!91931 () Bool)

(assert (=> b!86858 m!91931))

(declare-fun m!91933 () Bool)

(assert (=> b!86858 m!91933))

(declare-fun m!91935 () Bool)

(assert (=> b!86858 m!91935))

(declare-fun m!91937 () Bool)

(assert (=> b!86858 m!91937))

(declare-fun m!91939 () Bool)

(assert (=> b!86858 m!91939))

(declare-fun m!91941 () Bool)

(assert (=> b!86858 m!91941))

(assert (=> b!86858 m!91937))

(assert (=> b!86858 m!91893))

(declare-fun m!91943 () Bool)

(assert (=> b!86858 m!91943))

(assert (=> b!86858 m!91931))

(declare-fun m!91945 () Bool)

(assert (=> b!86858 m!91945))

(assert (=> b!86858 m!91933))

(declare-fun m!91947 () Bool)

(assert (=> b!86858 m!91947))

(declare-fun m!91949 () Bool)

(assert (=> b!86858 m!91949))

(assert (=> b!86858 m!91923))

(declare-fun m!91951 () Bool)

(assert (=> b!86858 m!91951))

(declare-fun m!91953 () Bool)

(assert (=> b!86858 m!91953))

(declare-fun m!91955 () Bool)

(assert (=> b!86853 m!91955))

(declare-fun m!91957 () Bool)

(assert (=> b!86865 m!91957))

(declare-fun m!91959 () Bool)

(assert (=> bm!8267 m!91959))

(assert (=> b!86864 m!91893))

(assert (=> b!86864 m!91893))

(assert (=> b!86864 m!91903))

(assert (=> b!86861 m!91893))

(assert (=> b!86861 m!91893))

(declare-fun m!91961 () Bool)

(assert (=> b!86861 m!91961))

(declare-fun m!91963 () Bool)

(assert (=> b!86861 m!91963))

(assert (=> b!86861 m!89967))

(declare-fun m!91965 () Bool)

(assert (=> b!86861 m!91965))

(assert (=> b!86861 m!89967))

(assert (=> b!86861 m!91963))

(assert (=> bm!8270 m!91943))

(assert (=> d!22837 m!89885))

(declare-fun m!91967 () Bool)

(assert (=> bm!8266 m!91967))

(declare-fun m!91969 () Bool)

(assert (=> bm!8269 m!91969))

(assert (=> b!86847 m!91893))

(assert (=> b!86847 m!91893))

(declare-fun m!91971 () Bool)

(assert (=> b!86847 m!91971))

(assert (=> b!86860 m!91893))

(assert (=> b!86860 m!91893))

(assert (=> b!86860 m!91903))

(assert (=> d!22305 d!22837))

(declare-fun d!22839 () Bool)

(declare-fun e!56607 () Bool)

(assert (=> d!22839 e!56607))

(declare-fun res!44621 () Bool)

(assert (=> d!22839 (=> res!44621 e!56607)))

(declare-fun lt!41149 () Bool)

(assert (=> d!22839 (= res!44621 (not lt!41149))))

(declare-fun lt!41150 () Bool)

(assert (=> d!22839 (= lt!41149 lt!41150)))

(declare-fun lt!41148 () Unit!2533)

(declare-fun e!56606 () Unit!2533)

(assert (=> d!22839 (= lt!41148 e!56606)))

(declare-fun c!14246 () Bool)

(assert (=> d!22839 (= c!14246 lt!41150)))

(assert (=> d!22839 (= lt!41150 (containsKey!143 (toList!759 (getCurrentListMap!443 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)))))))

(assert (=> d!22839 (= (contains!762 (getCurrentListMap!443 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)))) lt!41149)))

(declare-fun b!86866 () Bool)

(declare-fun lt!41147 () Unit!2533)

(assert (=> b!86866 (= e!56606 lt!41147)))

(assert (=> b!86866 (= lt!41147 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (getCurrentListMap!443 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)))))))

(assert (=> b!86866 (isDefined!93 (getValueByKey!139 (toList!759 (getCurrentListMap!443 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)))))))

(declare-fun b!86867 () Bool)

(declare-fun Unit!2587 () Unit!2533)

(assert (=> b!86867 (= e!56606 Unit!2587)))

(declare-fun b!86868 () Bool)

(assert (=> b!86868 (= e!56607 (isDefined!93 (getValueByKey!139 (toList!759 (getCurrentListMap!443 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372))))))))

(assert (= (and d!22839 c!14246) b!86866))

(assert (= (and d!22839 (not c!14246)) b!86867))

(assert (= (and d!22839 (not res!44621)) b!86868))

(assert (=> d!22839 m!90503))

(declare-fun m!91973 () Bool)

(assert (=> d!22839 m!91973))

(assert (=> b!86866 m!90503))

(declare-fun m!91975 () Bool)

(assert (=> b!86866 m!91975))

(assert (=> b!86866 m!90503))

(declare-fun m!91977 () Bool)

(assert (=> b!86866 m!91977))

(assert (=> b!86866 m!91977))

(declare-fun m!91979 () Bool)

(assert (=> b!86866 m!91979))

(assert (=> b!86868 m!90503))

(assert (=> b!86868 m!91977))

(assert (=> b!86868 m!91977))

(assert (=> b!86868 m!91979))

(assert (=> d!22305 d!22839))

(declare-fun d!22841 () Bool)

(assert (=> d!22841 (arrayContainsKey!0 lt!40752 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!41151 () Unit!2533)

(assert (=> d!22841 (= lt!41151 (choose!13 lt!40752 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372))))))

(assert (=> d!22841 (bvsge (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000000)))

(assert (=> d!22841 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!40752 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372))) lt!41151)))

(declare-fun bs!3661 () Bool)

(assert (= bs!3661 d!22841))

(assert (=> bs!3661 m!89417))

(assert (=> bs!3661 m!90511))

(assert (=> bs!3661 m!89417))

(declare-fun m!91981 () Bool)

(assert (=> bs!3661 m!91981))

(assert (=> d!22305 d!22841))

(assert (=> d!22305 d!22151))

(declare-fun d!22843 () Bool)

(declare-fun e!56608 () Bool)

(assert (=> d!22843 e!56608))

(declare-fun res!44622 () Bool)

(assert (=> d!22843 (=> (not res!44622) (not e!56608))))

(assert (=> d!22843 (= res!44622 (and (bvsge (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) #b00000000000000000000000000000000) (bvslt (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (size!2162 lt!40768))))))

(declare-fun lt!41152 () Unit!2533)

(assert (=> d!22843 (= lt!41152 (choose!511 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22843 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22843 (= (lemmaValidKeyInArrayIsInListMap!89 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (defaultEntry!2338 newMap!16)) lt!41152)))

(declare-fun b!86869 () Bool)

(assert (=> b!86869 (= e!56608 (contains!762 (getCurrentListMap!443 lt!40768 lt!40766 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1918 lt!40768) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)))))))

(assert (= (and d!22843 res!44622) b!86869))

(declare-fun m!91983 () Bool)

(assert (=> d!22843 m!91983))

(assert (=> d!22843 m!89885))

(assert (=> b!86869 m!90501))

(declare-fun m!91985 () Bool)

(assert (=> b!86869 m!91985))

(assert (=> b!86869 m!90501))

(assert (=> b!86869 m!91985))

(declare-fun m!91987 () Bool)

(assert (=> b!86869 m!91987))

(assert (=> d!22305 d!22843))

(declare-fun b!86870 () Bool)

(declare-fun e!56610 () (_ BitVec 32))

(declare-fun e!56609 () (_ BitVec 32))

(assert (=> b!86870 (= e!56610 e!56609)))

(declare-fun c!14248 () Bool)

(assert (=> b!86870 (= c!14248 (validKeyInArray!0 (select (arr!1918 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!8271 () Bool)

(declare-fun call!8274 () (_ BitVec 32))

(assert (=> bm!8271 (= call!8274 (arrayCountValidKeys!0 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!86871 () Bool)

(assert (=> b!86871 (= e!56609 (bvadd #b00000000000000000000000000000001 call!8274))))

(declare-fun b!86872 () Bool)

(assert (=> b!86872 (= e!56610 #b00000000000000000000000000000000)))

(declare-fun b!86873 () Bool)

(assert (=> b!86873 (= e!56609 call!8274)))

(declare-fun lt!41153 () (_ BitVec 32))

(declare-fun d!22845 () Bool)

(assert (=> d!22845 (and (bvsge lt!41153 #b00000000000000000000000000000000) (bvsle lt!41153 (bvsub (size!2162 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!22845 (= lt!41153 e!56610)))

(declare-fun c!14247 () Bool)

(assert (=> d!22845 (= c!14247 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22845 (and (bvsle #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2162 (_keys!4010 newMap!16)) (size!2162 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))))))))

(assert (=> d!22845 (= (arrayCountValidKeys!0 (array!4029 (store (arr!1918 (_keys!4010 newMap!16)) (ite c!13871 (index!3152 lt!40372) (index!3149 lt!40372)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (size!2162 (_keys!4010 newMap!16))) #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) lt!41153)))

(assert (= (and d!22845 c!14247) b!86872))

(assert (= (and d!22845 (not c!14247)) b!86870))

(assert (= (and b!86870 c!14248) b!86871))

(assert (= (and b!86870 (not c!14248)) b!86873))

(assert (= (or b!86871 b!86873) bm!8271))

(assert (=> b!86870 m!91893))

(assert (=> b!86870 m!91893))

(assert (=> b!86870 m!91903))

(declare-fun m!91989 () Bool)

(assert (=> bm!8271 m!91989))

(assert (=> d!22305 d!22845))

(assert (=> d!22305 d!22157))

(declare-fun b!86874 () Bool)

(declare-fun e!56611 () Option!145)

(assert (=> b!86874 (= e!56611 (Some!144 (_2!1126 (h!2139 (t!5277 (toList!759 lt!40286))))))))

(declare-fun b!86876 () Bool)

(declare-fun e!56612 () Option!145)

(assert (=> b!86876 (= e!56612 (getValueByKey!139 (t!5277 (t!5277 (toList!759 lt!40286))) (_1!1126 lt!40163)))))

(declare-fun b!86875 () Bool)

(assert (=> b!86875 (= e!56611 e!56612)))

(declare-fun c!14250 () Bool)

(assert (=> b!86875 (= c!14250 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40286))) (not (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40286)))) (_1!1126 lt!40163)))))))

(declare-fun d!22847 () Bool)

(declare-fun c!14249 () Bool)

(assert (=> d!22847 (= c!14249 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40286))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40286)))) (_1!1126 lt!40163))))))

(assert (=> d!22847 (= (getValueByKey!139 (t!5277 (toList!759 lt!40286)) (_1!1126 lt!40163)) e!56611)))

(declare-fun b!86877 () Bool)

(assert (=> b!86877 (= e!56612 None!143)))

(assert (= (and d!22847 c!14249) b!86874))

(assert (= (and d!22847 (not c!14249)) b!86875))

(assert (= (and b!86875 c!14250) b!86876))

(assert (= (and b!86875 (not c!14250)) b!86877))

(declare-fun m!91991 () Bool)

(assert (=> b!86876 m!91991))

(assert (=> b!85793 d!22847))

(declare-fun b!86890 () Bool)

(declare-fun e!56619 () SeekEntryResult!253)

(declare-fun e!56621 () SeekEntryResult!253)

(assert (=> b!86890 (= e!56619 e!56621)))

(declare-fun c!14257 () Bool)

(declare-fun lt!41159 () (_ BitVec 64))

(assert (=> b!86890 (= c!14257 (= lt!41159 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun e!56620 () SeekEntryResult!253)

(declare-fun b!86891 () Bool)

(assert (=> b!86891 (= e!56620 (seekKeyOrZeroReturnVacant!0 (bvadd (x!12006 lt!40522) #b00000000000000000000000000000001) (nextIndex!0 (index!3151 lt!40522) (x!12006 lt!40522) (mask!6366 newMap!16)) (index!3151 lt!40522) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun lt!41158 () SeekEntryResult!253)

(declare-fun d!22849 () Bool)

(assert (=> d!22849 (and (or ((_ is Undefined!253) lt!41158) (not ((_ is Found!253) lt!41158)) (and (bvsge (index!3150 lt!41158) #b00000000000000000000000000000000) (bvslt (index!3150 lt!41158) (size!2162 (_keys!4010 newMap!16))))) (or ((_ is Undefined!253) lt!41158) ((_ is Found!253) lt!41158) (not ((_ is MissingVacant!253) lt!41158)) (not (= (index!3152 lt!41158) (index!3151 lt!40522))) (and (bvsge (index!3152 lt!41158) #b00000000000000000000000000000000) (bvslt (index!3152 lt!41158) (size!2162 (_keys!4010 newMap!16))))) (or ((_ is Undefined!253) lt!41158) (ite ((_ is Found!253) lt!41158) (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!41158)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) (and ((_ is MissingVacant!253) lt!41158) (= (index!3152 lt!41158) (index!3151 lt!40522)) (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3152 lt!41158)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!22849 (= lt!41158 e!56619)))

(declare-fun c!14258 () Bool)

(assert (=> d!22849 (= c!14258 (bvsge (x!12006 lt!40522) #b01111111111111111111111111111110))))

(assert (=> d!22849 (= lt!41159 (select (arr!1918 (_keys!4010 newMap!16)) (index!3151 lt!40522)))))

(assert (=> d!22849 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22849 (= (seekKeyOrZeroReturnVacant!0 (x!12006 lt!40522) (index!3151 lt!40522) (index!3151 lt!40522) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)) lt!41158)))

(declare-fun b!86892 () Bool)

(assert (=> b!86892 (= e!56619 Undefined!253)))

(declare-fun b!86893 () Bool)

(assert (=> b!86893 (= e!56620 (MissingVacant!253 (index!3151 lt!40522)))))

(declare-fun b!86894 () Bool)

(assert (=> b!86894 (= e!56621 (Found!253 (index!3151 lt!40522)))))

(declare-fun b!86895 () Bool)

(declare-fun c!14259 () Bool)

(assert (=> b!86895 (= c!14259 (= lt!41159 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86895 (= e!56621 e!56620)))

(assert (= (and d!22849 c!14258) b!86892))

(assert (= (and d!22849 (not c!14258)) b!86890))

(assert (= (and b!86890 c!14257) b!86894))

(assert (= (and b!86890 (not c!14257)) b!86895))

(assert (= (and b!86895 c!14259) b!86893))

(assert (= (and b!86895 (not c!14259)) b!86891))

(declare-fun m!91993 () Bool)

(assert (=> b!86891 m!91993))

(assert (=> b!86891 m!91993))

(assert (=> b!86891 m!89417))

(declare-fun m!91995 () Bool)

(assert (=> b!86891 m!91995))

(declare-fun m!91997 () Bool)

(assert (=> d!22849 m!91997))

(declare-fun m!91999 () Bool)

(assert (=> d!22849 m!91999))

(assert (=> d!22849 m!89993))

(assert (=> d!22849 m!89885))

(assert (=> b!85790 d!22849))

(declare-fun d!22851 () Bool)

(declare-fun lt!41160 () Bool)

(assert (=> d!22851 (= lt!41160 (select (content!88 (toList!759 lt!40634)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun e!56622 () Bool)

(assert (=> d!22851 (= lt!41160 e!56622)))

(declare-fun res!44624 () Bool)

(assert (=> d!22851 (=> (not res!44624) (not e!56622))))

(assert (=> d!22851 (= res!44624 ((_ is Cons!1548) (toList!759 lt!40634)))))

(assert (=> d!22851 (= (contains!764 (toList!759 lt!40634) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!41160)))

(declare-fun b!86896 () Bool)

(declare-fun e!56623 () Bool)

(assert (=> b!86896 (= e!56622 e!56623)))

(declare-fun res!44623 () Bool)

(assert (=> b!86896 (=> res!44623 e!56623)))

(assert (=> b!86896 (= res!44623 (= (h!2139 (toList!759 lt!40634)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!86897 () Bool)

(assert (=> b!86897 (= e!56623 (contains!764 (t!5277 (toList!759 lt!40634)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22851 res!44624) b!86896))

(assert (= (and b!86896 (not res!44623)) b!86897))

(declare-fun m!92001 () Bool)

(assert (=> d!22851 m!92001))

(declare-fun m!92003 () Bool)

(assert (=> d!22851 m!92003))

(declare-fun m!92005 () Bool)

(assert (=> b!86897 m!92005))

(assert (=> b!85936 d!22851))

(assert (=> b!85740 d!22477))

(declare-fun d!22853 () Bool)

(declare-fun res!44625 () Bool)

(declare-fun e!56624 () Bool)

(assert (=> d!22853 (=> res!44625 e!56624)))

(assert (=> d!22853 (= res!44625 (and ((_ is Cons!1548) (toList!759 lt!40290)) (= (_1!1126 (h!2139 (toList!759 lt!40290))) (_1!1126 lt!40172))))))

(assert (=> d!22853 (= (containsKey!143 (toList!759 lt!40290) (_1!1126 lt!40172)) e!56624)))

(declare-fun b!86898 () Bool)

(declare-fun e!56625 () Bool)

(assert (=> b!86898 (= e!56624 e!56625)))

(declare-fun res!44626 () Bool)

(assert (=> b!86898 (=> (not res!44626) (not e!56625))))

(assert (=> b!86898 (= res!44626 (and (or (not ((_ is Cons!1548) (toList!759 lt!40290))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40290))) (_1!1126 lt!40172))) ((_ is Cons!1548) (toList!759 lt!40290)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40290))) (_1!1126 lt!40172))))))

(declare-fun b!86899 () Bool)

(assert (=> b!86899 (= e!56625 (containsKey!143 (t!5277 (toList!759 lt!40290)) (_1!1126 lt!40172)))))

(assert (= (and d!22853 (not res!44625)) b!86898))

(assert (= (and b!86898 res!44626) b!86899))

(declare-fun m!92007 () Bool)

(assert (=> b!86899 m!92007))

(assert (=> d!22119 d!22853))

(declare-fun d!22855 () Bool)

(declare-fun res!44627 () Bool)

(declare-fun e!56626 () Bool)

(assert (=> d!22855 (=> res!44627 e!56626)))

(assert (=> d!22855 (= res!44627 (or ((_ is Nil!1549) lt!40470) ((_ is Nil!1549) (t!5277 lt!40470))))))

(assert (=> d!22855 (= (isStrictlySorted!293 lt!40470) e!56626)))

(declare-fun b!86900 () Bool)

(declare-fun e!56627 () Bool)

(assert (=> b!86900 (= e!56626 e!56627)))

(declare-fun res!44628 () Bool)

(assert (=> b!86900 (=> (not res!44628) (not e!56627))))

(assert (=> b!86900 (= res!44628 (bvslt (_1!1126 (h!2139 lt!40470)) (_1!1126 (h!2139 (t!5277 lt!40470)))))))

(declare-fun b!86901 () Bool)

(assert (=> b!86901 (= e!56627 (isStrictlySorted!293 (t!5277 lt!40470)))))

(assert (= (and d!22855 (not res!44627)) b!86900))

(assert (= (and b!86900 res!44628) b!86901))

(declare-fun m!92009 () Bool)

(assert (=> b!86901 m!92009))

(assert (=> d!22125 d!22855))

(declare-fun d!22857 () Bool)

(declare-fun res!44629 () Bool)

(declare-fun e!56628 () Bool)

(assert (=> d!22857 (=> res!44629 e!56628)))

(assert (=> d!22857 (= res!44629 (or ((_ is Nil!1549) (toList!759 (+!116 lt!40169 lt!40171))) ((_ is Nil!1549) (t!5277 (toList!759 (+!116 lt!40169 lt!40171))))))))

(assert (=> d!22857 (= (isStrictlySorted!293 (toList!759 (+!116 lt!40169 lt!40171))) e!56628)))

(declare-fun b!86902 () Bool)

(declare-fun e!56629 () Bool)

(assert (=> b!86902 (= e!56628 e!56629)))

(declare-fun res!44630 () Bool)

(assert (=> b!86902 (=> (not res!44630) (not e!56629))))

(assert (=> b!86902 (= res!44630 (bvslt (_1!1126 (h!2139 (toList!759 (+!116 lt!40169 lt!40171)))) (_1!1126 (h!2139 (t!5277 (toList!759 (+!116 lt!40169 lt!40171)))))))))

(declare-fun b!86903 () Bool)

(assert (=> b!86903 (= e!56629 (isStrictlySorted!293 (t!5277 (toList!759 (+!116 lt!40169 lt!40171)))))))

(assert (= (and d!22857 (not res!44629)) b!86902))

(assert (= (and b!86902 res!44630) b!86903))

(declare-fun m!92011 () Bool)

(assert (=> b!86903 m!92011))

(assert (=> d!22125 d!22857))

(declare-fun d!22859 () Bool)

(declare-fun e!56631 () Bool)

(assert (=> d!22859 e!56631))

(declare-fun res!44631 () Bool)

(assert (=> d!22859 (=> res!44631 e!56631)))

(declare-fun lt!41163 () Bool)

(assert (=> d!22859 (= res!44631 (not lt!41163))))

(declare-fun lt!41164 () Bool)

(assert (=> d!22859 (= lt!41163 lt!41164)))

(declare-fun lt!41162 () Unit!2533)

(declare-fun e!56630 () Unit!2533)

(assert (=> d!22859 (= lt!41162 e!56630)))

(declare-fun c!14260 () Bool)

(assert (=> d!22859 (= c!14260 lt!41164)))

(assert (=> d!22859 (= lt!41164 (containsKey!143 (toList!759 (map!1195 (_2!1127 lt!40759))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!22859 (= (contains!762 (map!1195 (_2!1127 lt!40759)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) lt!41163)))

(declare-fun b!86904 () Bool)

(declare-fun lt!41161 () Unit!2533)

(assert (=> b!86904 (= e!56630 lt!41161)))

(assert (=> b!86904 (= lt!41161 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (map!1195 (_2!1127 lt!40759))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> b!86904 (isDefined!93 (getValueByKey!139 (toList!759 (map!1195 (_2!1127 lt!40759))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!86905 () Bool)

(declare-fun Unit!2588 () Unit!2533)

(assert (=> b!86905 (= e!56630 Unit!2588)))

(declare-fun b!86906 () Bool)

(assert (=> b!86906 (= e!56631 (isDefined!93 (getValueByKey!139 (toList!759 (map!1195 (_2!1127 lt!40759))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (= (and d!22859 c!14260) b!86904))

(assert (= (and d!22859 (not c!14260)) b!86905))

(assert (= (and d!22859 (not res!44631)) b!86906))

(assert (=> d!22859 m!89417))

(declare-fun m!92013 () Bool)

(assert (=> d!22859 m!92013))

(assert (=> b!86904 m!89417))

(declare-fun m!92015 () Bool)

(assert (=> b!86904 m!92015))

(assert (=> b!86904 m!89417))

(declare-fun m!92017 () Bool)

(assert (=> b!86904 m!92017))

(assert (=> b!86904 m!92017))

(declare-fun m!92019 () Bool)

(assert (=> b!86904 m!92019))

(assert (=> b!86906 m!89417))

(assert (=> b!86906 m!92017))

(assert (=> b!86906 m!92017))

(assert (=> b!86906 m!92019))

(assert (=> b!86054 d!22859))

(declare-fun d!22861 () Bool)

(assert (=> d!22861 (= (map!1195 (_2!1127 lt!40759)) (getCurrentListMap!443 (_keys!4010 (_2!1127 lt!40759)) (_values!2321 (_2!1127 lt!40759)) (mask!6366 (_2!1127 lt!40759)) (extraKeys!2177 (_2!1127 lt!40759)) (zeroValue!2230 (_2!1127 lt!40759)) (minValue!2230 (_2!1127 lt!40759)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1127 lt!40759))))))

(declare-fun bs!3662 () Bool)

(assert (= bs!3662 d!22861))

(declare-fun m!92021 () Bool)

(assert (=> bs!3662 m!92021))

(assert (=> b!86054 d!22861))

(declare-fun d!22863 () Bool)

(declare-fun e!56633 () Bool)

(assert (=> d!22863 e!56633))

(declare-fun res!44632 () Bool)

(assert (=> d!22863 (=> res!44632 e!56633)))

(declare-fun lt!41167 () Bool)

(assert (=> d!22863 (= res!44632 (not lt!41167))))

(declare-fun lt!41168 () Bool)

(assert (=> d!22863 (= lt!41167 lt!41168)))

(declare-fun lt!41166 () Unit!2533)

(declare-fun e!56632 () Unit!2533)

(assert (=> d!22863 (= lt!41166 e!56632)))

(declare-fun c!14261 () Bool)

(assert (=> d!22863 (= c!14261 lt!41168)))

(assert (=> d!22863 (= lt!41168 (containsKey!143 (toList!759 lt!40542) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22863 (= (contains!762 lt!40542 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!41167)))

(declare-fun b!86907 () Bool)

(declare-fun lt!41165 () Unit!2533)

(assert (=> b!86907 (= e!56632 lt!41165)))

(assert (=> b!86907 (= lt!41165 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40542) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> b!86907 (isDefined!93 (getValueByKey!139 (toList!759 lt!40542) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86908 () Bool)

(declare-fun Unit!2589 () Unit!2533)

(assert (=> b!86908 (= e!56632 Unit!2589)))

(declare-fun b!86909 () Bool)

(assert (=> b!86909 (= e!56633 (isDefined!93 (getValueByKey!139 (toList!759 lt!40542) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (= (and d!22863 c!14261) b!86907))

(assert (= (and d!22863 (not c!14261)) b!86908))

(assert (= (and d!22863 (not res!44632)) b!86909))

(declare-fun m!92023 () Bool)

(assert (=> d!22863 m!92023))

(declare-fun m!92025 () Bool)

(assert (=> b!86907 m!92025))

(assert (=> b!86907 m!90063))

(assert (=> b!86907 m!90063))

(declare-fun m!92027 () Bool)

(assert (=> b!86907 m!92027))

(assert (=> b!86909 m!90063))

(assert (=> b!86909 m!90063))

(assert (=> b!86909 m!92027))

(assert (=> d!22185 d!22863))

(declare-fun b!86910 () Bool)

(declare-fun e!56634 () Option!145)

(assert (=> b!86910 (= e!56634 (Some!144 (_2!1126 (h!2139 lt!40541))))))

(declare-fun b!86912 () Bool)

(declare-fun e!56635 () Option!145)

(assert (=> b!86912 (= e!56635 (getValueByKey!139 (t!5277 lt!40541) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86911 () Bool)

(assert (=> b!86911 (= e!56634 e!56635)))

(declare-fun c!14263 () Bool)

(assert (=> b!86911 (= c!14263 (and ((_ is Cons!1548) lt!40541) (not (= (_1!1126 (h!2139 lt!40541)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun c!14262 () Bool)

(declare-fun d!22865 () Bool)

(assert (=> d!22865 (= c!14262 (and ((_ is Cons!1548) lt!40541) (= (_1!1126 (h!2139 lt!40541)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22865 (= (getValueByKey!139 lt!40541 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) e!56634)))

(declare-fun b!86913 () Bool)

(assert (=> b!86913 (= e!56635 None!143)))

(assert (= (and d!22865 c!14262) b!86910))

(assert (= (and d!22865 (not c!14262)) b!86911))

(assert (= (and b!86911 c!14263) b!86912))

(assert (= (and b!86911 (not c!14263)) b!86913))

(declare-fun m!92029 () Bool)

(assert (=> b!86912 m!92029))

(assert (=> d!22185 d!22865))

(declare-fun d!22867 () Bool)

(assert (=> d!22867 (= (getValueByKey!139 lt!40541 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!41169 () Unit!2533)

(assert (=> d!22867 (= lt!41169 (choose!508 lt!40541 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun e!56636 () Bool)

(assert (=> d!22867 e!56636))

(declare-fun res!44633 () Bool)

(assert (=> d!22867 (=> (not res!44633) (not e!56636))))

(assert (=> d!22867 (= res!44633 (isStrictlySorted!293 lt!40541))))

(assert (=> d!22867 (= (lemmaContainsTupThenGetReturnValue!58 lt!40541 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!41169)))

(declare-fun b!86914 () Bool)

(declare-fun res!44634 () Bool)

(assert (=> b!86914 (=> (not res!44634) (not e!56636))))

(assert (=> b!86914 (= res!44634 (containsKey!143 lt!40541 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86915 () Bool)

(assert (=> b!86915 (= e!56636 (contains!764 lt!40541 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (= (and d!22867 res!44633) b!86914))

(assert (= (and b!86914 res!44634) b!86915))

(assert (=> d!22867 m!90057))

(declare-fun m!92031 () Bool)

(assert (=> d!22867 m!92031))

(declare-fun m!92033 () Bool)

(assert (=> d!22867 m!92033))

(declare-fun m!92035 () Bool)

(assert (=> b!86914 m!92035))

(declare-fun m!92037 () Bool)

(assert (=> b!86915 m!92037))

(assert (=> d!22185 d!22867))

(declare-fun b!86916 () Bool)

(declare-fun c!14264 () Bool)

(declare-fun c!14265 () Bool)

(declare-fun e!56638 () List!1552)

(assert (=> b!86916 (= e!56638 (ite c!14264 (t!5277 (toList!759 lt!40169)) (ite c!14265 (Cons!1548 (h!2139 (toList!759 lt!40169)) (t!5277 (toList!759 lt!40169))) Nil!1549)))))

(declare-fun lt!41170 () List!1552)

(declare-fun e!56640 () Bool)

(declare-fun b!86917 () Bool)

(assert (=> b!86917 (= e!56640 (contains!764 lt!41170 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86918 () Bool)

(declare-fun e!56639 () List!1552)

(declare-fun e!56637 () List!1552)

(assert (=> b!86918 (= e!56639 e!56637)))

(assert (=> b!86918 (= c!14264 (and ((_ is Cons!1548) (toList!759 lt!40169)) (= (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!86919 () Bool)

(declare-fun res!44635 () Bool)

(assert (=> b!86919 (=> (not res!44635) (not e!56640))))

(assert (=> b!86919 (= res!44635 (containsKey!143 lt!41170 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun d!22869 () Bool)

(assert (=> d!22869 e!56640))

(declare-fun res!44636 () Bool)

(assert (=> d!22869 (=> (not res!44636) (not e!56640))))

(assert (=> d!22869 (= res!44636 (isStrictlySorted!293 lt!41170))))

(assert (=> d!22869 (= lt!41170 e!56639)))

(declare-fun c!14266 () Bool)

(assert (=> d!22869 (= c!14266 (and ((_ is Cons!1548) (toList!759 lt!40169)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22869 (isStrictlySorted!293 (toList!759 lt!40169))))

(assert (=> d!22869 (= (insertStrictlySorted!60 (toList!759 lt!40169) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!41170)))

(declare-fun call!8275 () List!1552)

(declare-fun bm!8272 () Bool)

(assert (=> bm!8272 (= call!8275 ($colon$colon!71 e!56638 (ite c!14266 (h!2139 (toList!759 lt!40169)) (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun c!14267 () Bool)

(assert (=> bm!8272 (= c!14267 c!14266)))

(declare-fun bm!8273 () Bool)

(declare-fun call!8277 () List!1552)

(declare-fun call!8276 () List!1552)

(assert (=> bm!8273 (= call!8277 call!8276)))

(declare-fun b!86920 () Bool)

(assert (=> b!86920 (= e!56639 call!8275)))

(declare-fun b!86921 () Bool)

(declare-fun e!56641 () List!1552)

(assert (=> b!86921 (= e!56641 call!8277)))

(declare-fun b!86922 () Bool)

(assert (=> b!86922 (= e!56637 call!8276)))

(declare-fun b!86923 () Bool)

(assert (=> b!86923 (= e!56638 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40169)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!86924 () Bool)

(assert (=> b!86924 (= e!56641 call!8277)))

(declare-fun b!86925 () Bool)

(assert (=> b!86925 (= c!14265 (and ((_ is Cons!1548) (toList!759 lt!40169)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> b!86925 (= e!56637 e!56641)))

(declare-fun bm!8274 () Bool)

(assert (=> bm!8274 (= call!8276 call!8275)))

(assert (= (and d!22869 c!14266) b!86920))

(assert (= (and d!22869 (not c!14266)) b!86918))

(assert (= (and b!86918 c!14264) b!86922))

(assert (= (and b!86918 (not c!14264)) b!86925))

(assert (= (and b!86925 c!14265) b!86924))

(assert (= (and b!86925 (not c!14265)) b!86921))

(assert (= (or b!86924 b!86921) bm!8273))

(assert (= (or b!86922 bm!8273) bm!8274))

(assert (= (or b!86920 bm!8274) bm!8272))

(assert (= (and bm!8272 c!14267) b!86923))

(assert (= (and bm!8272 (not c!14267)) b!86916))

(assert (= (and d!22869 res!44636) b!86919))

(assert (= (and b!86919 res!44635) b!86917))

(declare-fun m!92039 () Bool)

(assert (=> b!86919 m!92039))

(declare-fun m!92041 () Bool)

(assert (=> b!86923 m!92041))

(declare-fun m!92043 () Bool)

(assert (=> d!22869 m!92043))

(assert (=> d!22869 m!89865))

(declare-fun m!92045 () Bool)

(assert (=> b!86917 m!92045))

(declare-fun m!92047 () Bool)

(assert (=> bm!8272 m!92047))

(assert (=> d!22185 d!22869))

(assert (=> bm!8201 d!22697))

(assert (=> d!22131 d!22129))

(declare-fun d!22871 () Bool)

(assert (=> d!22871 (= (getValueByKey!139 lt!40240 (_1!1126 lt!40171)) (Some!144 (_2!1126 lt!40171)))))

(assert (=> d!22871 true))

(declare-fun _$22!420 () Unit!2533)

(assert (=> d!22871 (= (choose!508 lt!40240 (_1!1126 lt!40171) (_2!1126 lt!40171)) _$22!420)))

(declare-fun bs!3663 () Bool)

(assert (= bs!3663 d!22871))

(assert (=> bs!3663 m!89545))

(assert (=> d!22131 d!22871))

(declare-fun d!22873 () Bool)

(declare-fun res!44637 () Bool)

(declare-fun e!56642 () Bool)

(assert (=> d!22873 (=> res!44637 e!56642)))

(assert (=> d!22873 (= res!44637 (or ((_ is Nil!1549) lt!40240) ((_ is Nil!1549) (t!5277 lt!40240))))))

(assert (=> d!22873 (= (isStrictlySorted!293 lt!40240) e!56642)))

(declare-fun b!86926 () Bool)

(declare-fun e!56643 () Bool)

(assert (=> b!86926 (= e!56642 e!56643)))

(declare-fun res!44638 () Bool)

(assert (=> b!86926 (=> (not res!44638) (not e!56643))))

(assert (=> b!86926 (= res!44638 (bvslt (_1!1126 (h!2139 lt!40240)) (_1!1126 (h!2139 (t!5277 lt!40240)))))))

(declare-fun b!86927 () Bool)

(assert (=> b!86927 (= e!56643 (isStrictlySorted!293 (t!5277 lt!40240)))))

(assert (= (and d!22873 (not res!44637)) b!86926))

(assert (= (and b!86926 res!44638) b!86927))

(declare-fun m!92049 () Bool)

(assert (=> b!86927 m!92049))

(assert (=> d!22131 d!22873))

(declare-fun d!22875 () Bool)

(declare-fun res!44639 () Bool)

(declare-fun e!56644 () Bool)

(assert (=> d!22875 (=> res!44639 e!56644)))

(assert (=> d!22875 (= res!44639 (and ((_ is Cons!1548) lt!40488) (= (_1!1126 (h!2139 lt!40488)) (_1!1126 lt!40163))))))

(assert (=> d!22875 (= (containsKey!143 lt!40488 (_1!1126 lt!40163)) e!56644)))

(declare-fun b!86928 () Bool)

(declare-fun e!56645 () Bool)

(assert (=> b!86928 (= e!56644 e!56645)))

(declare-fun res!44640 () Bool)

(assert (=> b!86928 (=> (not res!44640) (not e!56645))))

(assert (=> b!86928 (= res!44640 (and (or (not ((_ is Cons!1548) lt!40488)) (bvsle (_1!1126 (h!2139 lt!40488)) (_1!1126 lt!40163))) ((_ is Cons!1548) lt!40488) (bvslt (_1!1126 (h!2139 lt!40488)) (_1!1126 lt!40163))))))

(declare-fun b!86929 () Bool)

(assert (=> b!86929 (= e!56645 (containsKey!143 (t!5277 lt!40488) (_1!1126 lt!40163)))))

(assert (= (and d!22875 (not res!44639)) b!86928))

(assert (= (and b!86928 res!44640) b!86929))

(declare-fun m!92051 () Bool)

(assert (=> b!86929 m!92051))

(assert (=> b!85718 d!22875))

(assert (=> b!86001 d!22607))

(assert (=> b!86001 d!22215))

(declare-fun d!22877 () Bool)

(declare-fun e!56647 () Bool)

(assert (=> d!22877 e!56647))

(declare-fun res!44641 () Bool)

(assert (=> d!22877 (=> res!44641 e!56647)))

(declare-fun lt!41173 () Bool)

(assert (=> d!22877 (= res!44641 (not lt!41173))))

(declare-fun lt!41174 () Bool)

(assert (=> d!22877 (= lt!41173 lt!41174)))

(declare-fun lt!41172 () Unit!2533)

(declare-fun e!56646 () Unit!2533)

(assert (=> d!22877 (= lt!41172 e!56646)))

(declare-fun c!14268 () Bool)

(assert (=> d!22877 (= c!14268 lt!41174)))

(assert (=> d!22877 (= lt!41174 (containsKey!143 (toList!759 lt!40493) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22877 (= (contains!762 lt!40493 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) lt!41173)))

(declare-fun b!86930 () Bool)

(declare-fun lt!41171 () Unit!2533)

(assert (=> b!86930 (= e!56646 lt!41171)))

(assert (=> b!86930 (= lt!41171 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40493) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86930 (isDefined!93 (getValueByKey!139 (toList!759 lt!40493) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86931 () Bool)

(declare-fun Unit!2590 () Unit!2533)

(assert (=> b!86931 (= e!56646 Unit!2590)))

(declare-fun b!86932 () Bool)

(assert (=> b!86932 (= e!56647 (isDefined!93 (getValueByKey!139 (toList!759 lt!40493) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!22877 c!14268) b!86930))

(assert (= (and d!22877 (not c!14268)) b!86931))

(assert (= (and d!22877 (not res!44641)) b!86932))

(assert (=> d!22877 m!89941))

(declare-fun m!92053 () Bool)

(assert (=> d!22877 m!92053))

(assert (=> b!86930 m!89941))

(declare-fun m!92055 () Bool)

(assert (=> b!86930 m!92055))

(assert (=> b!86930 m!89941))

(assert (=> b!86930 m!91641))

(assert (=> b!86930 m!91641))

(declare-fun m!92057 () Bool)

(assert (=> b!86930 m!92057))

(assert (=> b!86932 m!89941))

(assert (=> b!86932 m!91641))

(assert (=> b!86932 m!91641))

(assert (=> b!86932 m!92057))

(assert (=> b!85727 d!22877))

(declare-fun b!86934 () Bool)

(declare-fun res!44642 () Bool)

(declare-fun e!56648 () Bool)

(assert (=> b!86934 (=> (not res!44642) (not e!56648))))

(assert (=> b!86934 (= res!44642 (bvsge (size!2166 (_2!1127 lt!40373)) (_size!427 (_2!1127 lt!40373))))))

(declare-fun b!86935 () Bool)

(declare-fun res!44644 () Bool)

(assert (=> b!86935 (=> (not res!44644) (not e!56648))))

(assert (=> b!86935 (= res!44644 (= (size!2166 (_2!1127 lt!40373)) (bvadd (_size!427 (_2!1127 lt!40373)) (bvsdiv (bvadd (extraKeys!2177 (_2!1127 lt!40373)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!86936 () Bool)

(assert (=> b!86936 (= e!56648 (and (bvsge (extraKeys!2177 (_2!1127 lt!40373)) #b00000000000000000000000000000000) (bvsle (extraKeys!2177 (_2!1127 lt!40373)) #b00000000000000000000000000000011) (bvsge (_vacant!427 (_2!1127 lt!40373)) #b00000000000000000000000000000000)))))

(declare-fun b!86933 () Bool)

(declare-fun res!44643 () Bool)

(assert (=> b!86933 (=> (not res!44643) (not e!56648))))

(assert (=> b!86933 (= res!44643 (and (= (size!2163 (_values!2321 (_2!1127 lt!40373))) (bvadd (mask!6366 (_2!1127 lt!40373)) #b00000000000000000000000000000001)) (= (size!2162 (_keys!4010 (_2!1127 lt!40373))) (size!2163 (_values!2321 (_2!1127 lt!40373)))) (bvsge (_size!427 (_2!1127 lt!40373)) #b00000000000000000000000000000000) (bvsle (_size!427 (_2!1127 lt!40373)) (bvadd (mask!6366 (_2!1127 lt!40373)) #b00000000000000000000000000000001))))))

(declare-fun d!22879 () Bool)

(declare-fun res!44645 () Bool)

(assert (=> d!22879 (=> (not res!44645) (not e!56648))))

(assert (=> d!22879 (= res!44645 (validMask!0 (mask!6366 (_2!1127 lt!40373))))))

(assert (=> d!22879 (= (simpleValid!57 (_2!1127 lt!40373)) e!56648)))

(assert (= (and d!22879 res!44645) b!86933))

(assert (= (and b!86933 res!44643) b!86934))

(assert (= (and b!86934 res!44642) b!86935))

(assert (= (and b!86935 res!44644) b!86936))

(declare-fun m!92059 () Bool)

(assert (=> b!86934 m!92059))

(assert (=> b!86935 m!92059))

(declare-fun m!92061 () Bool)

(assert (=> d!22879 m!92061))

(assert (=> d!22329 d!22879))

(declare-fun d!22881 () Bool)

(declare-fun lt!41175 () Bool)

(assert (=> d!22881 (= lt!41175 (select (content!89 Nil!1550) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!56650 () Bool)

(assert (=> d!22881 (= lt!41175 e!56650)))

(declare-fun res!44647 () Bool)

(assert (=> d!22881 (=> (not res!44647) (not e!56650))))

(assert (=> d!22881 (= res!44647 ((_ is Cons!1549) Nil!1550))))

(assert (=> d!22881 (= (contains!765 Nil!1550 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) lt!41175)))

(declare-fun b!86937 () Bool)

(declare-fun e!56649 () Bool)

(assert (=> b!86937 (= e!56650 e!56649)))

(declare-fun res!44646 () Bool)

(assert (=> b!86937 (=> res!44646 e!56649)))

(assert (=> b!86937 (= res!44646 (= (h!2140 Nil!1550) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86938 () Bool)

(assert (=> b!86938 (= e!56649 (contains!765 (t!5278 Nil!1550) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!22881 res!44647) b!86937))

(assert (= (and b!86937 (not res!44646)) b!86938))

(assert (=> d!22881 m!90665))

(assert (=> d!22881 m!89941))

(declare-fun m!92063 () Bool)

(assert (=> d!22881 m!92063))

(assert (=> b!86938 m!89941))

(declare-fun m!92065 () Bool)

(assert (=> b!86938 m!92065))

(assert (=> b!85767 d!22881))

(declare-fun b!86939 () Bool)

(declare-fun e!56651 () Option!145)

(assert (=> b!86939 (= e!56651 (Some!144 (_2!1126 (h!2139 (t!5277 (toList!759 lt!40241))))))))

(declare-fun b!86941 () Bool)

(declare-fun e!56652 () Option!145)

(assert (=> b!86941 (= e!56652 (getValueByKey!139 (t!5277 (t!5277 (toList!759 lt!40241))) (_1!1126 lt!40171)))))

(declare-fun b!86940 () Bool)

(assert (=> b!86940 (= e!56651 e!56652)))

(declare-fun c!14270 () Bool)

(assert (=> b!86940 (= c!14270 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40241))) (not (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40241)))) (_1!1126 lt!40171)))))))

(declare-fun d!22883 () Bool)

(declare-fun c!14269 () Bool)

(assert (=> d!22883 (= c!14269 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40241))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40241)))) (_1!1126 lt!40171))))))

(assert (=> d!22883 (= (getValueByKey!139 (t!5277 (toList!759 lt!40241)) (_1!1126 lt!40171)) e!56651)))

(declare-fun b!86942 () Bool)

(assert (=> b!86942 (= e!56652 None!143)))

(assert (= (and d!22883 c!14269) b!86939))

(assert (= (and d!22883 (not c!14269)) b!86940))

(assert (= (and b!86940 c!14270) b!86941))

(assert (= (and b!86940 (not c!14270)) b!86942))

(declare-fun m!92067 () Bool)

(assert (=> b!86941 m!92067))

(assert (=> b!85822 d!22883))

(declare-fun d!22885 () Bool)

(declare-fun res!44648 () Bool)

(declare-fun e!56653 () Bool)

(assert (=> d!22885 (=> res!44648 e!56653)))

(assert (=> d!22885 (= res!44648 (and ((_ is Cons!1548) lt!40796) (= (_1!1126 (h!2139 lt!40796)) (_1!1126 lt!40163))))))

(assert (=> d!22885 (= (containsKey!143 lt!40796 (_1!1126 lt!40163)) e!56653)))

(declare-fun b!86943 () Bool)

(declare-fun e!56654 () Bool)

(assert (=> b!86943 (= e!56653 e!56654)))

(declare-fun res!44649 () Bool)

(assert (=> b!86943 (=> (not res!44649) (not e!56654))))

(assert (=> b!86943 (= res!44649 (and (or (not ((_ is Cons!1548) lt!40796)) (bvsle (_1!1126 (h!2139 lt!40796)) (_1!1126 lt!40163))) ((_ is Cons!1548) lt!40796) (bvslt (_1!1126 (h!2139 lt!40796)) (_1!1126 lt!40163))))))

(declare-fun b!86944 () Bool)

(assert (=> b!86944 (= e!56654 (containsKey!143 (t!5277 lt!40796) (_1!1126 lt!40163)))))

(assert (= (and d!22885 (not res!44648)) b!86943))

(assert (= (and b!86943 res!44649) b!86944))

(declare-fun m!92069 () Bool)

(assert (=> b!86944 m!92069))

(assert (=> b!86105 d!22885))

(declare-fun d!22887 () Bool)

(declare-fun e!56655 () Bool)

(assert (=> d!22887 e!56655))

(declare-fun res!44650 () Bool)

(assert (=> d!22887 (=> (not res!44650) (not e!56655))))

(declare-fun lt!41177 () ListLongMap!1487)

(assert (=> d!22887 (= res!44650 (contains!762 lt!41177 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(declare-fun lt!41176 () List!1552)

(assert (=> d!22887 (= lt!41177 (ListLongMap!1488 lt!41176))))

(declare-fun lt!41178 () Unit!2533)

(declare-fun lt!41179 () Unit!2533)

(assert (=> d!22887 (= lt!41178 lt!41179)))

(assert (=> d!22887 (= (getValueByKey!139 lt!41176 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(assert (=> d!22887 (= lt!41179 (lemmaContainsTupThenGetReturnValue!58 lt!41176 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(assert (=> d!22887 (= lt!41176 (insertStrictlySorted!60 (toList!759 call!8198) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(assert (=> d!22887 (= (+!116 call!8198 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))) lt!41177)))

(declare-fun b!86945 () Bool)

(declare-fun res!44651 () Bool)

(assert (=> b!86945 (=> (not res!44651) (not e!56655))))

(assert (=> b!86945 (= res!44651 (= (getValueByKey!139 (toList!759 lt!41177) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))))))

(declare-fun b!86946 () Bool)

(assert (=> b!86946 (= e!56655 (contains!764 (toList!759 lt!41177) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))))

(assert (= (and d!22887 res!44650) b!86945))

(assert (= (and b!86945 res!44651) b!86946))

(declare-fun m!92071 () Bool)

(assert (=> d!22887 m!92071))

(declare-fun m!92073 () Bool)

(assert (=> d!22887 m!92073))

(declare-fun m!92075 () Bool)

(assert (=> d!22887 m!92075))

(declare-fun m!92077 () Bool)

(assert (=> d!22887 m!92077))

(declare-fun m!92079 () Bool)

(assert (=> b!86945 m!92079))

(declare-fun m!92081 () Bool)

(assert (=> b!86946 m!92081))

(assert (=> b!86159 d!22887))

(assert (=> b!85630 d!22635))

(assert (=> b!85630 d!22163))

(declare-fun d!22889 () Bool)

(declare-fun e!56657 () Bool)

(assert (=> d!22889 e!56657))

(declare-fun res!44652 () Bool)

(assert (=> d!22889 (=> res!44652 e!56657)))

(declare-fun lt!41182 () Bool)

(assert (=> d!22889 (= res!44652 (not lt!41182))))

(declare-fun lt!41183 () Bool)

(assert (=> d!22889 (= lt!41182 lt!41183)))

(declare-fun lt!41181 () Unit!2533)

(declare-fun e!56656 () Unit!2533)

(assert (=> d!22889 (= lt!41181 e!56656)))

(declare-fun c!14271 () Bool)

(assert (=> d!22889 (= c!14271 lt!41183)))

(assert (=> d!22889 (= lt!41183 (containsKey!143 (toList!759 lt!40535) (_1!1126 (tuple2!2233 lt!40282 lt!40283))))))

(assert (=> d!22889 (= (contains!762 lt!40535 (_1!1126 (tuple2!2233 lt!40282 lt!40283))) lt!41182)))

(declare-fun b!86947 () Bool)

(declare-fun lt!41180 () Unit!2533)

(assert (=> b!86947 (= e!56656 lt!41180)))

(assert (=> b!86947 (= lt!41180 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40535) (_1!1126 (tuple2!2233 lt!40282 lt!40283))))))

(assert (=> b!86947 (isDefined!93 (getValueByKey!139 (toList!759 lt!40535) (_1!1126 (tuple2!2233 lt!40282 lt!40283))))))

(declare-fun b!86948 () Bool)

(declare-fun Unit!2591 () Unit!2533)

(assert (=> b!86948 (= e!56656 Unit!2591)))

(declare-fun b!86949 () Bool)

(assert (=> b!86949 (= e!56657 (isDefined!93 (getValueByKey!139 (toList!759 lt!40535) (_1!1126 (tuple2!2233 lt!40282 lt!40283)))))))

(assert (= (and d!22889 c!14271) b!86947))

(assert (= (and d!22889 (not c!14271)) b!86948))

(assert (= (and d!22889 (not res!44652)) b!86949))

(declare-fun m!92083 () Bool)

(assert (=> d!22889 m!92083))

(declare-fun m!92085 () Bool)

(assert (=> b!86947 m!92085))

(assert (=> b!86947 m!90045))

(assert (=> b!86947 m!90045))

(declare-fun m!92087 () Bool)

(assert (=> b!86947 m!92087))

(assert (=> b!86949 m!90045))

(assert (=> b!86949 m!90045))

(assert (=> b!86949 m!92087))

(assert (=> d!22181 d!22889))

(declare-fun b!86950 () Bool)

(declare-fun e!56658 () Option!145)

(assert (=> b!86950 (= e!56658 (Some!144 (_2!1126 (h!2139 lt!40534))))))

(declare-fun e!56659 () Option!145)

(declare-fun b!86952 () Bool)

(assert (=> b!86952 (= e!56659 (getValueByKey!139 (t!5277 lt!40534) (_1!1126 (tuple2!2233 lt!40282 lt!40283))))))

(declare-fun b!86951 () Bool)

(assert (=> b!86951 (= e!56658 e!56659)))

(declare-fun c!14273 () Bool)

(assert (=> b!86951 (= c!14273 (and ((_ is Cons!1548) lt!40534) (not (= (_1!1126 (h!2139 lt!40534)) (_1!1126 (tuple2!2233 lt!40282 lt!40283))))))))

(declare-fun d!22891 () Bool)

(declare-fun c!14272 () Bool)

(assert (=> d!22891 (= c!14272 (and ((_ is Cons!1548) lt!40534) (= (_1!1126 (h!2139 lt!40534)) (_1!1126 (tuple2!2233 lt!40282 lt!40283)))))))

(assert (=> d!22891 (= (getValueByKey!139 lt!40534 (_1!1126 (tuple2!2233 lt!40282 lt!40283))) e!56658)))

(declare-fun b!86953 () Bool)

(assert (=> b!86953 (= e!56659 None!143)))

(assert (= (and d!22891 c!14272) b!86950))

(assert (= (and d!22891 (not c!14272)) b!86951))

(assert (= (and b!86951 c!14273) b!86952))

(assert (= (and b!86951 (not c!14273)) b!86953))

(declare-fun m!92089 () Bool)

(assert (=> b!86952 m!92089))

(assert (=> d!22181 d!22891))

(declare-fun d!22893 () Bool)

(assert (=> d!22893 (= (getValueByKey!139 lt!40534 (_1!1126 (tuple2!2233 lt!40282 lt!40283))) (Some!144 (_2!1126 (tuple2!2233 lt!40282 lt!40283))))))

(declare-fun lt!41184 () Unit!2533)

(assert (=> d!22893 (= lt!41184 (choose!508 lt!40534 (_1!1126 (tuple2!2233 lt!40282 lt!40283)) (_2!1126 (tuple2!2233 lt!40282 lt!40283))))))

(declare-fun e!56660 () Bool)

(assert (=> d!22893 e!56660))

(declare-fun res!44653 () Bool)

(assert (=> d!22893 (=> (not res!44653) (not e!56660))))

(assert (=> d!22893 (= res!44653 (isStrictlySorted!293 lt!40534))))

(assert (=> d!22893 (= (lemmaContainsTupThenGetReturnValue!58 lt!40534 (_1!1126 (tuple2!2233 lt!40282 lt!40283)) (_2!1126 (tuple2!2233 lt!40282 lt!40283))) lt!41184)))

(declare-fun b!86954 () Bool)

(declare-fun res!44654 () Bool)

(assert (=> b!86954 (=> (not res!44654) (not e!56660))))

(assert (=> b!86954 (= res!44654 (containsKey!143 lt!40534 (_1!1126 (tuple2!2233 lt!40282 lt!40283))))))

(declare-fun b!86955 () Bool)

(assert (=> b!86955 (= e!56660 (contains!764 lt!40534 (tuple2!2233 (_1!1126 (tuple2!2233 lt!40282 lt!40283)) (_2!1126 (tuple2!2233 lt!40282 lt!40283)))))))

(assert (= (and d!22893 res!44653) b!86954))

(assert (= (and b!86954 res!44654) b!86955))

(assert (=> d!22893 m!90039))

(declare-fun m!92091 () Bool)

(assert (=> d!22893 m!92091))

(declare-fun m!92093 () Bool)

(assert (=> d!22893 m!92093))

(declare-fun m!92095 () Bool)

(assert (=> b!86954 m!92095))

(declare-fun m!92097 () Bool)

(assert (=> b!86955 m!92097))

(assert (=> d!22181 d!22893))

(declare-fun c!14274 () Bool)

(declare-fun b!86956 () Bool)

(declare-fun c!14275 () Bool)

(declare-fun e!56662 () List!1552)

(assert (=> b!86956 (= e!56662 (ite c!14274 (t!5277 (toList!759 lt!40278)) (ite c!14275 (Cons!1548 (h!2139 (toList!759 lt!40278)) (t!5277 (toList!759 lt!40278))) Nil!1549)))))

(declare-fun e!56664 () Bool)

(declare-fun b!86957 () Bool)

(declare-fun lt!41185 () List!1552)

(assert (=> b!86957 (= e!56664 (contains!764 lt!41185 (tuple2!2233 (_1!1126 (tuple2!2233 lt!40282 lt!40283)) (_2!1126 (tuple2!2233 lt!40282 lt!40283)))))))

(declare-fun b!86958 () Bool)

(declare-fun e!56663 () List!1552)

(declare-fun e!56661 () List!1552)

(assert (=> b!86958 (= e!56663 e!56661)))

(assert (=> b!86958 (= c!14274 (and ((_ is Cons!1548) (toList!759 lt!40278)) (= (_1!1126 (h!2139 (toList!759 lt!40278))) (_1!1126 (tuple2!2233 lt!40282 lt!40283)))))))

(declare-fun b!86959 () Bool)

(declare-fun res!44655 () Bool)

(assert (=> b!86959 (=> (not res!44655) (not e!56664))))

(assert (=> b!86959 (= res!44655 (containsKey!143 lt!41185 (_1!1126 (tuple2!2233 lt!40282 lt!40283))))))

(declare-fun d!22895 () Bool)

(assert (=> d!22895 e!56664))

(declare-fun res!44656 () Bool)

(assert (=> d!22895 (=> (not res!44656) (not e!56664))))

(assert (=> d!22895 (= res!44656 (isStrictlySorted!293 lt!41185))))

(assert (=> d!22895 (= lt!41185 e!56663)))

(declare-fun c!14276 () Bool)

(assert (=> d!22895 (= c!14276 (and ((_ is Cons!1548) (toList!759 lt!40278)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40278))) (_1!1126 (tuple2!2233 lt!40282 lt!40283)))))))

(assert (=> d!22895 (isStrictlySorted!293 (toList!759 lt!40278))))

(assert (=> d!22895 (= (insertStrictlySorted!60 (toList!759 lt!40278) (_1!1126 (tuple2!2233 lt!40282 lt!40283)) (_2!1126 (tuple2!2233 lt!40282 lt!40283))) lt!41185)))

(declare-fun bm!8275 () Bool)

(declare-fun call!8278 () List!1552)

(assert (=> bm!8275 (= call!8278 ($colon$colon!71 e!56662 (ite c!14276 (h!2139 (toList!759 lt!40278)) (tuple2!2233 (_1!1126 (tuple2!2233 lt!40282 lt!40283)) (_2!1126 (tuple2!2233 lt!40282 lt!40283))))))))

(declare-fun c!14277 () Bool)

(assert (=> bm!8275 (= c!14277 c!14276)))

(declare-fun bm!8276 () Bool)

(declare-fun call!8280 () List!1552)

(declare-fun call!8279 () List!1552)

(assert (=> bm!8276 (= call!8280 call!8279)))

(declare-fun b!86960 () Bool)

(assert (=> b!86960 (= e!56663 call!8278)))

(declare-fun b!86961 () Bool)

(declare-fun e!56665 () List!1552)

(assert (=> b!86961 (= e!56665 call!8280)))

(declare-fun b!86962 () Bool)

(assert (=> b!86962 (= e!56661 call!8279)))

(declare-fun b!86963 () Bool)

(assert (=> b!86963 (= e!56662 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40278)) (_1!1126 (tuple2!2233 lt!40282 lt!40283)) (_2!1126 (tuple2!2233 lt!40282 lt!40283))))))

(declare-fun b!86964 () Bool)

(assert (=> b!86964 (= e!56665 call!8280)))

(declare-fun b!86965 () Bool)

(assert (=> b!86965 (= c!14275 (and ((_ is Cons!1548) (toList!759 lt!40278)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40278))) (_1!1126 (tuple2!2233 lt!40282 lt!40283)))))))

(assert (=> b!86965 (= e!56661 e!56665)))

(declare-fun bm!8277 () Bool)

(assert (=> bm!8277 (= call!8279 call!8278)))

(assert (= (and d!22895 c!14276) b!86960))

(assert (= (and d!22895 (not c!14276)) b!86958))

(assert (= (and b!86958 c!14274) b!86962))

(assert (= (and b!86958 (not c!14274)) b!86965))

(assert (= (and b!86965 c!14275) b!86964))

(assert (= (and b!86965 (not c!14275)) b!86961))

(assert (= (or b!86964 b!86961) bm!8276))

(assert (= (or b!86962 bm!8276) bm!8277))

(assert (= (or b!86960 bm!8277) bm!8275))

(assert (= (and bm!8275 c!14277) b!86963))

(assert (= (and bm!8275 (not c!14277)) b!86956))

(assert (= (and d!22895 res!44656) b!86959))

(assert (= (and b!86959 res!44655) b!86957))

(declare-fun m!92099 () Bool)

(assert (=> b!86959 m!92099))

(declare-fun m!92101 () Bool)

(assert (=> b!86963 m!92101))

(declare-fun m!92103 () Bool)

(assert (=> d!22895 m!92103))

(declare-fun m!92105 () Bool)

(assert (=> d!22895 m!92105))

(declare-fun m!92107 () Bool)

(assert (=> b!86957 m!92107))

(declare-fun m!92109 () Bool)

(assert (=> bm!8275 m!92109))

(assert (=> d!22181 d!22895))

(declare-fun d!22897 () Bool)

(declare-fun lt!41186 () Bool)

(assert (=> d!22897 (= lt!41186 (select (content!88 lt!40470) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun e!56666 () Bool)

(assert (=> d!22897 (= lt!41186 e!56666)))

(declare-fun res!44658 () Bool)

(assert (=> d!22897 (=> (not res!44658) (not e!56666))))

(assert (=> d!22897 (= res!44658 ((_ is Cons!1548) lt!40470))))

(assert (=> d!22897 (= (contains!764 lt!40470 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))) lt!41186)))

(declare-fun b!86966 () Bool)

(declare-fun e!56667 () Bool)

(assert (=> b!86966 (= e!56666 e!56667)))

(declare-fun res!44657 () Bool)

(assert (=> b!86966 (=> res!44657 e!56667)))

(assert (=> b!86966 (= res!44657 (= (h!2139 lt!40470) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!86967 () Bool)

(assert (=> b!86967 (= e!56667 (contains!764 (t!5277 lt!40470) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(assert (= (and d!22897 res!44658) b!86966))

(assert (= (and b!86966 (not res!44657)) b!86967))

(declare-fun m!92111 () Bool)

(assert (=> d!22897 m!92111))

(declare-fun m!92113 () Bool)

(assert (=> d!22897 m!92113))

(declare-fun m!92115 () Bool)

(assert (=> b!86967 m!92115))

(assert (=> b!85670 d!22897))

(declare-fun d!22899 () Bool)

(declare-fun lt!41187 () Bool)

(assert (=> d!22899 (= lt!41187 (select (content!88 (toList!759 lt!40554)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun e!56668 () Bool)

(assert (=> d!22899 (= lt!41187 e!56668)))

(declare-fun res!44660 () Bool)

(assert (=> d!22899 (=> (not res!44660) (not e!56668))))

(assert (=> d!22899 (= res!44660 ((_ is Cons!1548) (toList!759 lt!40554)))))

(assert (=> d!22899 (= (contains!764 (toList!759 lt!40554) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!41187)))

(declare-fun b!86968 () Bool)

(declare-fun e!56669 () Bool)

(assert (=> b!86968 (= e!56668 e!56669)))

(declare-fun res!44659 () Bool)

(assert (=> b!86968 (=> res!44659 e!56669)))

(assert (=> b!86968 (= res!44659 (= (h!2139 (toList!759 lt!40554)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!86969 () Bool)

(assert (=> b!86969 (= e!56669 (contains!764 (t!5277 (toList!759 lt!40554)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!22899 res!44660) b!86968))

(assert (= (and b!86968 (not res!44659)) b!86969))

(declare-fun m!92117 () Bool)

(assert (=> d!22899 m!92117))

(declare-fun m!92119 () Bool)

(assert (=> d!22899 m!92119))

(declare-fun m!92121 () Bool)

(assert (=> b!86969 m!92121))

(assert (=> b!85819 d!22899))

(declare-fun b!86970 () Bool)

(declare-fun e!56670 () Bool)

(declare-fun e!56671 () Bool)

(assert (=> b!86970 (= e!56670 e!56671)))

(declare-fun lt!41189 () (_ BitVec 64))

(assert (=> b!86970 (= lt!41189 (select (arr!1918 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!41188 () Unit!2533)

(assert (=> b!86970 (= lt!41188 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4010 newMap!16) lt!41189 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!86970 (arrayContainsKey!0 (_keys!4010 newMap!16) lt!41189 #b00000000000000000000000000000000)))

(declare-fun lt!41190 () Unit!2533)

(assert (=> b!86970 (= lt!41190 lt!41188)))

(declare-fun res!44661 () Bool)

(assert (=> b!86970 (= res!44661 (= (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4010 newMap!16) (mask!6366 newMap!16)) (Found!253 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!86970 (=> (not res!44661) (not e!56671))))

(declare-fun d!22901 () Bool)

(declare-fun res!44662 () Bool)

(declare-fun e!56672 () Bool)

(assert (=> d!22901 (=> res!44662 e!56672)))

(assert (=> d!22901 (= res!44662 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22901 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4010 newMap!16) (mask!6366 newMap!16)) e!56672)))

(declare-fun b!86971 () Bool)

(declare-fun call!8281 () Bool)

(assert (=> b!86971 (= e!56671 call!8281)))

(declare-fun bm!8278 () Bool)

(assert (=> bm!8278 (= call!8281 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!86972 () Bool)

(assert (=> b!86972 (= e!56672 e!56670)))

(declare-fun c!14278 () Bool)

(assert (=> b!86972 (= c!14278 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!86973 () Bool)

(assert (=> b!86973 (= e!56670 call!8281)))

(assert (= (and d!22901 (not res!44662)) b!86972))

(assert (= (and b!86972 c!14278) b!86970))

(assert (= (and b!86972 (not c!14278)) b!86973))

(assert (= (and b!86970 res!44661) b!86971))

(assert (= (or b!86971 b!86973) bm!8278))

(assert (=> b!86970 m!91711))

(declare-fun m!92123 () Bool)

(assert (=> b!86970 m!92123))

(declare-fun m!92125 () Bool)

(assert (=> b!86970 m!92125))

(assert (=> b!86970 m!91711))

(declare-fun m!92127 () Bool)

(assert (=> b!86970 m!92127))

(declare-fun m!92129 () Bool)

(assert (=> bm!8278 m!92129))

(assert (=> b!86972 m!91711))

(assert (=> b!86972 m!91711))

(declare-fun m!92131 () Bool)

(assert (=> b!86972 m!92131))

(assert (=> bm!8163 d!22901))

(declare-fun d!22903 () Bool)

(declare-fun res!44663 () Bool)

(declare-fun e!56673 () Bool)

(assert (=> d!22903 (=> res!44663 e!56673)))

(assert (=> d!22903 (= res!44663 (and ((_ is Cons!1548) (toList!759 lt!40241)) (= (_1!1126 (h!2139 (toList!759 lt!40241))) (_1!1126 lt!40171))))))

(assert (=> d!22903 (= (containsKey!143 (toList!759 lt!40241) (_1!1126 lt!40171)) e!56673)))

(declare-fun b!86974 () Bool)

(declare-fun e!56674 () Bool)

(assert (=> b!86974 (= e!56673 e!56674)))

(declare-fun res!44664 () Bool)

(assert (=> b!86974 (=> (not res!44664) (not e!56674))))

(assert (=> b!86974 (= res!44664 (and (or (not ((_ is Cons!1548) (toList!759 lt!40241))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40241))) (_1!1126 lt!40171))) ((_ is Cons!1548) (toList!759 lt!40241)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40241))) (_1!1126 lt!40171))))))

(declare-fun b!86975 () Bool)

(assert (=> b!86975 (= e!56674 (containsKey!143 (t!5277 (toList!759 lt!40241)) (_1!1126 lt!40171)))))

(assert (= (and d!22903 (not res!44663)) b!86974))

(assert (= (and b!86974 res!44664) b!86975))

(declare-fun m!92133 () Bool)

(assert (=> b!86975 m!92133))

(assert (=> d!22127 d!22903))

(declare-fun d!22905 () Bool)

(declare-fun e!56676 () Bool)

(assert (=> d!22905 e!56676))

(declare-fun res!44665 () Bool)

(assert (=> d!22905 (=> res!44665 e!56676)))

(declare-fun lt!41193 () Bool)

(assert (=> d!22905 (= res!44665 (not lt!41193))))

(declare-fun lt!41194 () Bool)

(assert (=> d!22905 (= lt!41193 lt!41194)))

(declare-fun lt!41192 () Unit!2533)

(declare-fun e!56675 () Unit!2533)

(assert (=> d!22905 (= lt!41192 e!56675)))

(declare-fun c!14279 () Bool)

(assert (=> d!22905 (= c!14279 lt!41194)))

(assert (=> d!22905 (= lt!41194 (containsKey!143 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372))))))

(assert (=> d!22905 (= (contains!762 (getCurrentListMap!443 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372))) lt!41193)))

(declare-fun b!86976 () Bool)

(declare-fun lt!41191 () Unit!2533)

(assert (=> b!86976 (= e!56675 lt!41191)))

(assert (=> b!86976 (= lt!41191 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372))))))

(assert (=> b!86976 (isDefined!93 (getValueByKey!139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372))))))

(declare-fun b!86977 () Bool)

(declare-fun Unit!2592 () Unit!2533)

(assert (=> b!86977 (= e!56675 Unit!2592)))

(declare-fun b!86978 () Bool)

(assert (=> b!86978 (= e!56676 (isDefined!93 (getValueByKey!139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))

(assert (= (and d!22905 c!14279) b!86976))

(assert (= (and d!22905 (not c!14279)) b!86977))

(assert (= (and d!22905 (not res!44665)) b!86978))

(assert (=> d!22905 m!89691))

(declare-fun m!92135 () Bool)

(assert (=> d!22905 m!92135))

(assert (=> b!86976 m!89691))

(declare-fun m!92137 () Bool)

(assert (=> b!86976 m!92137))

(assert (=> b!86976 m!89691))

(declare-fun m!92139 () Bool)

(assert (=> b!86976 m!92139))

(assert (=> b!86976 m!92139))

(declare-fun m!92141 () Bool)

(assert (=> b!86976 m!92141))

(assert (=> b!86978 m!89691))

(assert (=> b!86978 m!92139))

(assert (=> b!86978 m!92139))

(assert (=> b!86978 m!92141))

(assert (=> b!85830 d!22905))

(declare-fun bm!8279 () Bool)

(declare-fun call!8288 () ListLongMap!1487)

(declare-fun call!8285 () ListLongMap!1487)

(assert (=> bm!8279 (= call!8288 call!8285)))

(declare-fun b!86979 () Bool)

(declare-fun e!56686 () ListLongMap!1487)

(declare-fun call!8283 () ListLongMap!1487)

(assert (=> b!86979 (= e!56686 call!8283)))

(declare-fun b!86980 () Bool)

(declare-fun e!56688 () ListLongMap!1487)

(declare-fun call!8286 () ListLongMap!1487)

(assert (=> b!86980 (= e!56688 call!8286)))

(declare-fun b!86981 () Bool)

(declare-fun e!56684 () Bool)

(declare-fun e!56687 () Bool)

(assert (=> b!86981 (= e!56684 e!56687)))

(declare-fun res!44671 () Bool)

(assert (=> b!86981 (=> (not res!44671) (not e!56687))))

(declare-fun lt!41199 () ListLongMap!1487)

(assert (=> b!86981 (= res!44671 (contains!762 lt!41199 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86981 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8280 () Bool)

(assert (=> bm!8280 (= call!8286 call!8288)))

(declare-fun b!86982 () Bool)

(declare-fun e!56683 () Unit!2533)

(declare-fun Unit!2593 () Unit!2533)

(assert (=> b!86982 (= e!56683 Unit!2593)))

(declare-fun b!86983 () Bool)

(declare-fun e!56680 () Bool)

(declare-fun e!56677 () Bool)

(assert (=> b!86983 (= e!56680 e!56677)))

(declare-fun res!44669 () Bool)

(declare-fun call!8287 () Bool)

(assert (=> b!86983 (= res!44669 call!8287)))

(assert (=> b!86983 (=> (not res!44669) (not e!56677))))

(declare-fun b!86985 () Bool)

(declare-fun e!56689 () Bool)

(declare-fun call!8284 () Bool)

(assert (=> b!86985 (= e!56689 (not call!8284))))

(declare-fun b!86986 () Bool)

(declare-fun c!14284 () Bool)

(assert (=> b!86986 (= c!14284 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!86986 (= e!56686 e!56688)))

(declare-fun bm!8281 () Bool)

(declare-fun call!8282 () ListLongMap!1487)

(declare-fun c!14281 () Bool)

(declare-fun c!14283 () Bool)

(assert (=> bm!8281 (= call!8282 (+!116 (ite c!14283 call!8285 (ite c!14281 call!8288 call!8286)) (ite (or c!14283 c!14281) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!86987 () Bool)

(declare-fun e!56678 () ListLongMap!1487)

(assert (=> b!86987 (= e!56678 (+!116 call!8282 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun bm!8282 () Bool)

(assert (=> bm!8282 (= call!8287 (contains!762 lt!41199 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86988 () Bool)

(assert (=> b!86988 (= e!56688 call!8283)))

(declare-fun b!86989 () Bool)

(declare-fun res!44674 () Bool)

(declare-fun e!56681 () Bool)

(assert (=> b!86989 (=> (not res!44674) (not e!56681))))

(assert (=> b!86989 (= res!44674 e!56680)))

(declare-fun c!14285 () Bool)

(assert (=> b!86989 (= c!14285 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86990 () Bool)

(assert (=> b!86990 (= e!56678 e!56686)))

(assert (=> b!86990 (= c!14281 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86991 () Bool)

(assert (=> b!86991 (= e!56681 e!56689)))

(declare-fun c!14280 () Bool)

(assert (=> b!86991 (= c!14280 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8283 () Bool)

(assert (=> bm!8283 (= call!8283 call!8282)))

(declare-fun d!22907 () Bool)

(assert (=> d!22907 e!56681))

(declare-fun res!44673 () Bool)

(assert (=> d!22907 (=> (not res!44673) (not e!56681))))

(assert (=> d!22907 (= res!44673 (or (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))))

(declare-fun lt!41213 () ListLongMap!1487)

(assert (=> d!22907 (= lt!41199 lt!41213)))

(declare-fun lt!41195 () Unit!2533)

(assert (=> d!22907 (= lt!41195 e!56683)))

(declare-fun c!14282 () Bool)

(declare-fun e!56685 () Bool)

(assert (=> d!22907 (= c!14282 e!56685)))

(declare-fun res!44667 () Bool)

(assert (=> d!22907 (=> (not res!44667) (not e!56685))))

(assert (=> d!22907 (= res!44667 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22907 (= lt!41213 e!56678)))

(assert (=> d!22907 (= c!14283 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22907 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22907 (= (getCurrentListMap!443 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41199)))

(declare-fun b!86984 () Bool)

(assert (=> b!86984 (= e!56680 (not call!8287))))

(declare-fun b!86992 () Bool)

(declare-fun lt!41203 () Unit!2533)

(assert (=> b!86992 (= e!56683 lt!41203)))

(declare-fun lt!41212 () ListLongMap!1487)

(assert (=> b!86992 (= lt!41212 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41196 () (_ BitVec 64))

(assert (=> b!86992 (= lt!41196 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41214 () (_ BitVec 64))

(assert (=> b!86992 (= lt!41214 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41206 () Unit!2533)

(assert (=> b!86992 (= lt!41206 (addStillContains!58 lt!41212 lt!41196 (zeroValue!2230 newMap!16) lt!41214))))

(assert (=> b!86992 (contains!762 (+!116 lt!41212 (tuple2!2233 lt!41196 (zeroValue!2230 newMap!16))) lt!41214)))

(declare-fun lt!41202 () Unit!2533)

(assert (=> b!86992 (= lt!41202 lt!41206)))

(declare-fun lt!41208 () ListLongMap!1487)

(assert (=> b!86992 (= lt!41208 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41211 () (_ BitVec 64))

(assert (=> b!86992 (= lt!41211 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41210 () (_ BitVec 64))

(assert (=> b!86992 (= lt!41210 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41204 () Unit!2533)

(assert (=> b!86992 (= lt!41204 (addApplyDifferent!58 lt!41208 lt!41211 (minValue!2230 newMap!16) lt!41210))))

(assert (=> b!86992 (= (apply!82 (+!116 lt!41208 (tuple2!2233 lt!41211 (minValue!2230 newMap!16))) lt!41210) (apply!82 lt!41208 lt!41210))))

(declare-fun lt!41215 () Unit!2533)

(assert (=> b!86992 (= lt!41215 lt!41204)))

(declare-fun lt!41201 () ListLongMap!1487)

(assert (=> b!86992 (= lt!41201 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41207 () (_ BitVec 64))

(assert (=> b!86992 (= lt!41207 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41198 () (_ BitVec 64))

(assert (=> b!86992 (= lt!41198 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41209 () Unit!2533)

(assert (=> b!86992 (= lt!41209 (addApplyDifferent!58 lt!41201 lt!41207 (zeroValue!2230 newMap!16) lt!41198))))

(assert (=> b!86992 (= (apply!82 (+!116 lt!41201 (tuple2!2233 lt!41207 (zeroValue!2230 newMap!16))) lt!41198) (apply!82 lt!41201 lt!41198))))

(declare-fun lt!41200 () Unit!2533)

(assert (=> b!86992 (= lt!41200 lt!41209)))

(declare-fun lt!41205 () ListLongMap!1487)

(assert (=> b!86992 (= lt!41205 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41216 () (_ BitVec 64))

(assert (=> b!86992 (= lt!41216 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41197 () (_ BitVec 64))

(assert (=> b!86992 (= lt!41197 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86992 (= lt!41203 (addApplyDifferent!58 lt!41205 lt!41216 (minValue!2230 newMap!16) lt!41197))))

(assert (=> b!86992 (= (apply!82 (+!116 lt!41205 (tuple2!2233 lt!41216 (minValue!2230 newMap!16))) lt!41197) (apply!82 lt!41205 lt!41197))))

(declare-fun b!86993 () Bool)

(declare-fun e!56679 () Bool)

(assert (=> b!86993 (= e!56679 (= (apply!82 lt!41199 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!86994 () Bool)

(assert (=> b!86994 (= e!56685 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86995 () Bool)

(assert (=> b!86995 (= e!56687 (= (apply!82 lt!41199 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 lt!40379) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86995 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 lt!40379)))))

(assert (=> b!86995 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8284 () Bool)

(assert (=> bm!8284 (= call!8284 (contains!762 lt!41199 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86996 () Bool)

(assert (=> b!86996 (= e!56689 e!56679)))

(declare-fun res!44670 () Bool)

(assert (=> b!86996 (= res!44670 call!8284)))

(assert (=> b!86996 (=> (not res!44670) (not e!56679))))

(declare-fun b!86997 () Bool)

(declare-fun res!44668 () Bool)

(assert (=> b!86997 (=> (not res!44668) (not e!56681))))

(assert (=> b!86997 (= res!44668 e!56684)))

(declare-fun res!44666 () Bool)

(assert (=> b!86997 (=> res!44666 e!56684)))

(declare-fun e!56682 () Bool)

(assert (=> b!86997 (= res!44666 (not e!56682))))

(declare-fun res!44672 () Bool)

(assert (=> b!86997 (=> (not res!44672) (not e!56682))))

(assert (=> b!86997 (= res!44672 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8285 () Bool)

(assert (=> bm!8285 (= call!8285 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) lt!40379 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!86998 () Bool)

(assert (=> b!86998 (= e!56682 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86999 () Bool)

(assert (=> b!86999 (= e!56677 (= (apply!82 lt!41199 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(assert (= (and d!22907 c!14283) b!86987))

(assert (= (and d!22907 (not c!14283)) b!86990))

(assert (= (and b!86990 c!14281) b!86979))

(assert (= (and b!86990 (not c!14281)) b!86986))

(assert (= (and b!86986 c!14284) b!86988))

(assert (= (and b!86986 (not c!14284)) b!86980))

(assert (= (or b!86988 b!86980) bm!8280))

(assert (= (or b!86979 bm!8280) bm!8279))

(assert (= (or b!86979 b!86988) bm!8283))

(assert (= (or b!86987 bm!8279) bm!8285))

(assert (= (or b!86987 bm!8283) bm!8281))

(assert (= (and d!22907 res!44667) b!86994))

(assert (= (and d!22907 c!14282) b!86992))

(assert (= (and d!22907 (not c!14282)) b!86982))

(assert (= (and d!22907 res!44673) b!86997))

(assert (= (and b!86997 res!44672) b!86998))

(assert (= (and b!86997 (not res!44666)) b!86981))

(assert (= (and b!86981 res!44671) b!86995))

(assert (= (and b!86997 res!44668) b!86989))

(assert (= (and b!86989 c!14285) b!86983))

(assert (= (and b!86989 (not c!14285)) b!86984))

(assert (= (and b!86983 res!44669) b!86999))

(assert (= (or b!86983 b!86984) bm!8282))

(assert (= (and b!86989 res!44674) b!86991))

(assert (= (and b!86991 c!14280) b!86996))

(assert (= (and b!86991 (not c!14280)) b!86985))

(assert (= (and b!86996 res!44670) b!86993))

(assert (= (or b!86996 b!86985) bm!8284))

(declare-fun b_lambda!3843 () Bool)

(assert (=> (not b_lambda!3843) (not b!86995)))

(assert (=> b!86995 t!5286))

(declare-fun b_and!5229 () Bool)

(assert (= b_and!5225 (and (=> t!5286 result!2931) b_and!5229)))

(assert (=> b!86995 t!5288))

(declare-fun b_and!5231 () Bool)

(assert (= b_and!5227 (and (=> t!5288 result!2933) b_and!5231)))

(declare-fun m!92143 () Bool)

(assert (=> b!86993 m!92143))

(declare-fun m!92145 () Bool)

(assert (=> b!86992 m!92145))

(declare-fun m!92147 () Bool)

(assert (=> b!86992 m!92147))

(declare-fun m!92149 () Bool)

(assert (=> b!86992 m!92149))

(declare-fun m!92151 () Bool)

(assert (=> b!86992 m!92151))

(declare-fun m!92153 () Bool)

(assert (=> b!86992 m!92153))

(declare-fun m!92155 () Bool)

(assert (=> b!86992 m!92155))

(declare-fun m!92157 () Bool)

(assert (=> b!86992 m!92157))

(declare-fun m!92159 () Bool)

(assert (=> b!86992 m!92159))

(declare-fun m!92161 () Bool)

(assert (=> b!86992 m!92161))

(declare-fun m!92163 () Bool)

(assert (=> b!86992 m!92163))

(assert (=> b!86992 m!92159))

(assert (=> b!86992 m!89941))

(declare-fun m!92165 () Bool)

(assert (=> b!86992 m!92165))

(assert (=> b!86992 m!92153))

(declare-fun m!92167 () Bool)

(assert (=> b!86992 m!92167))

(assert (=> b!86992 m!92155))

(declare-fun m!92169 () Bool)

(assert (=> b!86992 m!92169))

(declare-fun m!92171 () Bool)

(assert (=> b!86992 m!92171))

(assert (=> b!86992 m!92145))

(declare-fun m!92173 () Bool)

(assert (=> b!86992 m!92173))

(declare-fun m!92175 () Bool)

(assert (=> b!86992 m!92175))

(declare-fun m!92177 () Bool)

(assert (=> b!86987 m!92177))

(declare-fun m!92179 () Bool)

(assert (=> b!86999 m!92179))

(declare-fun m!92181 () Bool)

(assert (=> bm!8282 m!92181))

(assert (=> b!86998 m!89941))

(assert (=> b!86998 m!89941))

(assert (=> b!86998 m!89961))

(assert (=> b!86995 m!89941))

(assert (=> b!86995 m!89941))

(declare-fun m!92183 () Bool)

(assert (=> b!86995 m!92183))

(declare-fun m!92185 () Bool)

(assert (=> b!86995 m!92185))

(assert (=> b!86995 m!89967))

(declare-fun m!92187 () Bool)

(assert (=> b!86995 m!92187))

(assert (=> b!86995 m!89967))

(assert (=> b!86995 m!92185))

(assert (=> bm!8285 m!92165))

(assert (=> d!22907 m!89885))

(declare-fun m!92189 () Bool)

(assert (=> bm!8281 m!92189))

(declare-fun m!92191 () Bool)

(assert (=> bm!8284 m!92191))

(assert (=> b!86981 m!89941))

(assert (=> b!86981 m!89941))

(declare-fun m!92193 () Bool)

(assert (=> b!86981 m!92193))

(assert (=> b!86994 m!89941))

(assert (=> b!86994 m!89941))

(assert (=> b!86994 m!89961))

(assert (=> b!85830 d!22907))

(declare-fun d!22909 () Bool)

(assert (=> d!22909 (= (get!1216 (getValueByKey!139 (toList!759 lt!40445) lt!40442)) (v!2652 (getValueByKey!139 (toList!759 lt!40445) lt!40442)))))

(assert (=> d!22245 d!22909))

(declare-fun b!87000 () Bool)

(declare-fun e!56690 () Option!145)

(assert (=> b!87000 (= e!56690 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40445)))))))

(declare-fun b!87002 () Bool)

(declare-fun e!56691 () Option!145)

(assert (=> b!87002 (= e!56691 (getValueByKey!139 (t!5277 (toList!759 lt!40445)) lt!40442))))

(declare-fun b!87001 () Bool)

(assert (=> b!87001 (= e!56690 e!56691)))

(declare-fun c!14287 () Bool)

(assert (=> b!87001 (= c!14287 (and ((_ is Cons!1548) (toList!759 lt!40445)) (not (= (_1!1126 (h!2139 (toList!759 lt!40445))) lt!40442))))))

(declare-fun d!22911 () Bool)

(declare-fun c!14286 () Bool)

(assert (=> d!22911 (= c!14286 (and ((_ is Cons!1548) (toList!759 lt!40445)) (= (_1!1126 (h!2139 (toList!759 lt!40445))) lt!40442)))))

(assert (=> d!22911 (= (getValueByKey!139 (toList!759 lt!40445) lt!40442) e!56690)))

(declare-fun b!87003 () Bool)

(assert (=> b!87003 (= e!56691 None!143)))

(assert (= (and d!22911 c!14286) b!87000))

(assert (= (and d!22911 (not c!14286)) b!87001))

(assert (= (and b!87001 c!14287) b!87002))

(assert (= (and b!87001 (not c!14287)) b!87003))

(declare-fun m!92195 () Bool)

(assert (=> b!87002 m!92195))

(assert (=> d!22245 d!22911))

(declare-fun d!22913 () Bool)

(declare-fun lt!41217 () Bool)

(assert (=> d!22913 (= lt!41217 (select (content!88 lt!40689) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun e!56692 () Bool)

(assert (=> d!22913 (= lt!41217 e!56692)))

(declare-fun res!44676 () Bool)

(assert (=> d!22913 (=> (not res!44676) (not e!56692))))

(assert (=> d!22913 (= res!44676 ((_ is Cons!1548) lt!40689))))

(assert (=> d!22913 (= (contains!764 lt!40689 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))) lt!41217)))

(declare-fun b!87004 () Bool)

(declare-fun e!56693 () Bool)

(assert (=> b!87004 (= e!56692 e!56693)))

(declare-fun res!44675 () Bool)

(assert (=> b!87004 (=> res!44675 e!56693)))

(assert (=> b!87004 (= res!44675 (= (h!2139 lt!40689) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!87005 () Bool)

(assert (=> b!87005 (= e!56693 (contains!764 (t!5277 lt!40689) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(assert (= (and d!22913 res!44676) b!87004))

(assert (= (and b!87004 (not res!44675)) b!87005))

(declare-fun m!92197 () Bool)

(assert (=> d!22913 m!92197))

(declare-fun m!92199 () Bool)

(assert (=> d!22913 m!92199))

(declare-fun m!92201 () Bool)

(assert (=> b!87005 m!92201))

(assert (=> b!86009 d!22913))

(declare-fun d!22915 () Bool)

(declare-fun e!56695 () Bool)

(assert (=> d!22915 e!56695))

(declare-fun res!44677 () Bool)

(assert (=> d!22915 (=> res!44677 e!56695)))

(declare-fun lt!41220 () Bool)

(assert (=> d!22915 (= res!44677 (not lt!41220))))

(declare-fun lt!41221 () Bool)

(assert (=> d!22915 (= lt!41220 lt!41221)))

(declare-fun lt!41219 () Unit!2533)

(declare-fun e!56694 () Unit!2533)

(assert (=> d!22915 (= lt!41219 e!56694)))

(declare-fun c!14288 () Bool)

(assert (=> d!22915 (= c!14288 lt!41221)))

(assert (=> d!22915 (= lt!41221 (containsKey!143 (toList!759 (+!116 lt!40575 (tuple2!2233 lt!40579 lt!40580))) lt!40577))))

(assert (=> d!22915 (= (contains!762 (+!116 lt!40575 (tuple2!2233 lt!40579 lt!40580)) lt!40577) lt!41220)))

(declare-fun b!87006 () Bool)

(declare-fun lt!41218 () Unit!2533)

(assert (=> b!87006 (= e!56694 lt!41218)))

(assert (=> b!87006 (= lt!41218 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (+!116 lt!40575 (tuple2!2233 lt!40579 lt!40580))) lt!40577))))

(assert (=> b!87006 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40575 (tuple2!2233 lt!40579 lt!40580))) lt!40577))))

(declare-fun b!87007 () Bool)

(declare-fun Unit!2594 () Unit!2533)

(assert (=> b!87007 (= e!56694 Unit!2594)))

(declare-fun b!87008 () Bool)

(assert (=> b!87008 (= e!56695 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40575 (tuple2!2233 lt!40579 lt!40580))) lt!40577)))))

(assert (= (and d!22915 c!14288) b!87006))

(assert (= (and d!22915 (not c!14288)) b!87007))

(assert (= (and d!22915 (not res!44677)) b!87008))

(declare-fun m!92203 () Bool)

(assert (=> d!22915 m!92203))

(declare-fun m!92205 () Bool)

(assert (=> b!87006 m!92205))

(declare-fun m!92207 () Bool)

(assert (=> b!87006 m!92207))

(assert (=> b!87006 m!92207))

(declare-fun m!92209 () Bool)

(assert (=> b!87006 m!92209))

(assert (=> b!87008 m!92207))

(assert (=> b!87008 m!92207))

(assert (=> b!87008 m!92209))

(assert (=> b!85859 d!22915))

(declare-fun d!22917 () Bool)

(declare-fun e!56696 () Bool)

(assert (=> d!22917 e!56696))

(declare-fun res!44678 () Bool)

(assert (=> d!22917 (=> (not res!44678) (not e!56696))))

(declare-fun lt!41223 () ListLongMap!1487)

(assert (=> d!22917 (= res!44678 (contains!762 lt!41223 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!41222 () List!1552)

(assert (=> d!22917 (= lt!41223 (ListLongMap!1488 lt!41222))))

(declare-fun lt!41224 () Unit!2533)

(declare-fun lt!41225 () Unit!2533)

(assert (=> d!22917 (= lt!41224 lt!41225)))

(assert (=> d!22917 (= (getValueByKey!139 lt!41222 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22917 (= lt!41225 (lemmaContainsTupThenGetReturnValue!58 lt!41222 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22917 (= lt!41222 (insertStrictlySorted!60 (toList!759 call!8157) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22917 (= (+!116 call!8157 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!41223)))

(declare-fun b!87009 () Bool)

(declare-fun res!44679 () Bool)

(assert (=> b!87009 (=> (not res!44679) (not e!56696))))

(assert (=> b!87009 (= res!44679 (= (getValueByKey!139 (toList!759 lt!41223) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!87010 () Bool)

(assert (=> b!87010 (= e!56696 (contains!764 (toList!759 lt!41223) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!22917 res!44678) b!87009))

(assert (= (and b!87009 res!44679) b!87010))

(declare-fun m!92211 () Bool)

(assert (=> d!22917 m!92211))

(declare-fun m!92213 () Bool)

(assert (=> d!22917 m!92213))

(declare-fun m!92215 () Bool)

(assert (=> d!22917 m!92215))

(declare-fun m!92217 () Bool)

(assert (=> d!22917 m!92217))

(declare-fun m!92219 () Bool)

(assert (=> b!87009 m!92219))

(declare-fun m!92221 () Bool)

(assert (=> b!87010 m!92221))

(assert (=> b!85859 d!22917))

(declare-fun d!22919 () Bool)

(assert (=> d!22919 (not (contains!762 (+!116 lt!40575 (tuple2!2233 lt!40579 lt!40580)) lt!40577))))

(declare-fun lt!41226 () Unit!2533)

(assert (=> d!22919 (= lt!41226 (choose!510 lt!40575 lt!40579 lt!40580 lt!40577))))

(declare-fun e!56697 () Bool)

(assert (=> d!22919 e!56697))

(declare-fun res!44680 () Bool)

(assert (=> d!22919 (=> (not res!44680) (not e!56697))))

(assert (=> d!22919 (= res!44680 (not (contains!762 lt!40575 lt!40577)))))

(assert (=> d!22919 (= (addStillNotContains!33 lt!40575 lt!40579 lt!40580 lt!40577) lt!41226)))

(declare-fun b!87011 () Bool)

(assert (=> b!87011 (= e!56697 (not (= lt!40579 lt!40577)))))

(assert (= (and d!22919 res!44680) b!87011))

(assert (=> d!22919 m!90177))

(assert (=> d!22919 m!90177))

(assert (=> d!22919 m!90185))

(declare-fun m!92223 () Bool)

(assert (=> d!22919 m!92223))

(declare-fun m!92225 () Bool)

(assert (=> d!22919 m!92225))

(assert (=> b!85859 d!22919))

(declare-fun d!22921 () Bool)

(declare-fun c!14289 () Bool)

(assert (=> d!22921 (= c!14289 ((_ is ValueCellFull!924) (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!56698 () V!3027)

(assert (=> d!22921 (= (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56698)))

(declare-fun b!87012 () Bool)

(assert (=> b!87012 (= e!56698 (get!1214 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!87013 () Bool)

(assert (=> b!87013 (= e!56698 (get!1215 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22921 c!14289) b!87012))

(assert (= (and d!22921 (not c!14289)) b!87013))

(assert (=> b!87012 m!90175))

(assert (=> b!87012 m!89427))

(declare-fun m!92227 () Bool)

(assert (=> b!87012 m!92227))

(assert (=> b!87013 m!90175))

(assert (=> b!87013 m!89427))

(declare-fun m!92229 () Bool)

(assert (=> b!87013 m!92229))

(assert (=> b!85859 d!22921))

(declare-fun d!22923 () Bool)

(declare-fun e!56699 () Bool)

(assert (=> d!22923 e!56699))

(declare-fun res!44681 () Bool)

(assert (=> d!22923 (=> (not res!44681) (not e!56699))))

(declare-fun lt!41228 () ListLongMap!1487)

(assert (=> d!22923 (= res!44681 (contains!762 lt!41228 (_1!1126 (tuple2!2233 lt!40579 lt!40580))))))

(declare-fun lt!41227 () List!1552)

(assert (=> d!22923 (= lt!41228 (ListLongMap!1488 lt!41227))))

(declare-fun lt!41229 () Unit!2533)

(declare-fun lt!41230 () Unit!2533)

(assert (=> d!22923 (= lt!41229 lt!41230)))

(assert (=> d!22923 (= (getValueByKey!139 lt!41227 (_1!1126 (tuple2!2233 lt!40579 lt!40580))) (Some!144 (_2!1126 (tuple2!2233 lt!40579 lt!40580))))))

(assert (=> d!22923 (= lt!41230 (lemmaContainsTupThenGetReturnValue!58 lt!41227 (_1!1126 (tuple2!2233 lt!40579 lt!40580)) (_2!1126 (tuple2!2233 lt!40579 lt!40580))))))

(assert (=> d!22923 (= lt!41227 (insertStrictlySorted!60 (toList!759 lt!40575) (_1!1126 (tuple2!2233 lt!40579 lt!40580)) (_2!1126 (tuple2!2233 lt!40579 lt!40580))))))

(assert (=> d!22923 (= (+!116 lt!40575 (tuple2!2233 lt!40579 lt!40580)) lt!41228)))

(declare-fun b!87014 () Bool)

(declare-fun res!44682 () Bool)

(assert (=> b!87014 (=> (not res!44682) (not e!56699))))

(assert (=> b!87014 (= res!44682 (= (getValueByKey!139 (toList!759 lt!41228) (_1!1126 (tuple2!2233 lt!40579 lt!40580))) (Some!144 (_2!1126 (tuple2!2233 lt!40579 lt!40580)))))))

(declare-fun b!87015 () Bool)

(assert (=> b!87015 (= e!56699 (contains!764 (toList!759 lt!41228) (tuple2!2233 lt!40579 lt!40580)))))

(assert (= (and d!22923 res!44681) b!87014))

(assert (= (and b!87014 res!44682) b!87015))

(declare-fun m!92231 () Bool)

(assert (=> d!22923 m!92231))

(declare-fun m!92233 () Bool)

(assert (=> d!22923 m!92233))

(declare-fun m!92235 () Bool)

(assert (=> d!22923 m!92235))

(declare-fun m!92237 () Bool)

(assert (=> d!22923 m!92237))

(declare-fun m!92239 () Bool)

(assert (=> b!87014 m!92239))

(declare-fun m!92241 () Bool)

(assert (=> b!87015 m!92241))

(assert (=> b!85859 d!22923))

(declare-fun d!22925 () Bool)

(declare-fun lt!41231 () Bool)

(assert (=> d!22925 (= lt!41231 (select (content!88 (toList!759 lt!40535)) (tuple2!2233 lt!40282 lt!40283)))))

(declare-fun e!56700 () Bool)

(assert (=> d!22925 (= lt!41231 e!56700)))

(declare-fun res!44684 () Bool)

(assert (=> d!22925 (=> (not res!44684) (not e!56700))))

(assert (=> d!22925 (= res!44684 ((_ is Cons!1548) (toList!759 lt!40535)))))

(assert (=> d!22925 (= (contains!764 (toList!759 lt!40535) (tuple2!2233 lt!40282 lt!40283)) lt!41231)))

(declare-fun b!87016 () Bool)

(declare-fun e!56701 () Bool)

(assert (=> b!87016 (= e!56700 e!56701)))

(declare-fun res!44683 () Bool)

(assert (=> b!87016 (=> res!44683 e!56701)))

(assert (=> b!87016 (= res!44683 (= (h!2139 (toList!759 lt!40535)) (tuple2!2233 lt!40282 lt!40283)))))

(declare-fun b!87017 () Bool)

(assert (=> b!87017 (= e!56701 (contains!764 (t!5277 (toList!759 lt!40535)) (tuple2!2233 lt!40282 lt!40283)))))

(assert (= (and d!22925 res!44684) b!87016))

(assert (= (and b!87016 (not res!44683)) b!87017))

(declare-fun m!92243 () Bool)

(assert (=> d!22925 m!92243))

(declare-fun m!92245 () Bool)

(assert (=> d!22925 m!92245))

(declare-fun m!92247 () Bool)

(assert (=> b!87017 m!92247))

(assert (=> b!85805 d!22925))

(declare-fun d!22927 () Bool)

(declare-fun res!44685 () Bool)

(declare-fun e!56702 () Bool)

(assert (=> d!22927 (=> res!44685 e!56702)))

(assert (=> d!22927 (= res!44685 (and ((_ is Cons!1548) lt!40285) (= (_1!1126 (h!2139 lt!40285)) (_1!1126 lt!40163))))))

(assert (=> d!22927 (= (containsKey!143 lt!40285 (_1!1126 lt!40163)) e!56702)))

(declare-fun b!87018 () Bool)

(declare-fun e!56703 () Bool)

(assert (=> b!87018 (= e!56702 e!56703)))

(declare-fun res!44686 () Bool)

(assert (=> b!87018 (=> (not res!44686) (not e!56703))))

(assert (=> b!87018 (= res!44686 (and (or (not ((_ is Cons!1548) lt!40285)) (bvsle (_1!1126 (h!2139 lt!40285)) (_1!1126 lt!40163))) ((_ is Cons!1548) lt!40285) (bvslt (_1!1126 (h!2139 lt!40285)) (_1!1126 lt!40163))))))

(declare-fun b!87019 () Bool)

(assert (=> b!87019 (= e!56703 (containsKey!143 (t!5277 lt!40285) (_1!1126 lt!40163)))))

(assert (= (and d!22927 (not res!44685)) b!87018))

(assert (= (and b!87018 res!44686) b!87019))

(declare-fun m!92249 () Bool)

(assert (=> b!87019 m!92249))

(assert (=> b!85713 d!22927))

(declare-fun b!87020 () Bool)

(declare-fun e!56704 () Bool)

(declare-fun e!56705 () Bool)

(assert (=> b!87020 (= e!56704 e!56705)))

(declare-fun lt!41233 () (_ BitVec 64))

(assert (=> b!87020 (= lt!41233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!41232 () Unit!2533)

(assert (=> b!87020 (= lt!41232 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) lt!41233 #b00000000000000000000000000000000))))

(assert (=> b!87020 (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) lt!41233 #b00000000000000000000000000000000)))

(declare-fun lt!41234 () Unit!2533)

(assert (=> b!87020 (= lt!41234 lt!41232)))

(declare-fun res!44687 () Bool)

(assert (=> b!87020 (= res!44687 (= (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b00000000000000000000000000000000) (_keys!4010 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992)))) (Found!253 #b00000000000000000000000000000000)))))

(assert (=> b!87020 (=> (not res!44687) (not e!56705))))

(declare-fun d!22929 () Bool)

(declare-fun res!44688 () Bool)

(declare-fun e!56706 () Bool)

(assert (=> d!22929 (=> res!44688 e!56706)))

(assert (=> d!22929 (= res!44688 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> d!22929 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992)))) e!56706)))

(declare-fun b!87021 () Bool)

(declare-fun call!8289 () Bool)

(assert (=> b!87021 (= e!56705 call!8289)))

(declare-fun bm!8286 () Bool)

(assert (=> bm!8286 (= call!8289 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4010 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun b!87022 () Bool)

(assert (=> b!87022 (= e!56706 e!56704)))

(declare-fun c!14290 () Bool)

(assert (=> b!87022 (= c!14290 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!87023 () Bool)

(assert (=> b!87023 (= e!56704 call!8289)))

(assert (= (and d!22929 (not res!44688)) b!87022))

(assert (= (and b!87022 c!14290) b!87020))

(assert (= (and b!87022 (not c!14290)) b!87023))

(assert (= (and b!87020 res!44687) b!87021))

(assert (= (or b!87021 b!87023) bm!8286))

(declare-fun m!92251 () Bool)

(assert (=> b!87020 m!92251))

(declare-fun m!92253 () Bool)

(assert (=> b!87020 m!92253))

(declare-fun m!92255 () Bool)

(assert (=> b!87020 m!92255))

(assert (=> b!87020 m!92251))

(declare-fun m!92257 () Bool)

(assert (=> b!87020 m!92257))

(declare-fun m!92259 () Bool)

(assert (=> bm!8286 m!92259))

(assert (=> b!87022 m!92251))

(assert (=> b!87022 m!92251))

(declare-fun m!92261 () Bool)

(assert (=> b!87022 m!92261))

(assert (=> b!85838 d!22929))

(assert (=> b!85931 d!22477))

(assert (=> b!86166 d!22477))

(assert (=> b!85997 d!22477))

(declare-fun b!87024 () Bool)

(declare-fun e!56707 () Option!145)

(assert (=> b!87024 (= e!56707 (Some!144 (_2!1126 (h!2139 (t!5277 lt!40240)))))))

(declare-fun b!87026 () Bool)

(declare-fun e!56708 () Option!145)

(assert (=> b!87026 (= e!56708 (getValueByKey!139 (t!5277 (t!5277 lt!40240)) (_1!1126 lt!40171)))))

(declare-fun b!87025 () Bool)

(assert (=> b!87025 (= e!56707 e!56708)))

(declare-fun c!14292 () Bool)

(assert (=> b!87025 (= c!14292 (and ((_ is Cons!1548) (t!5277 lt!40240)) (not (= (_1!1126 (h!2139 (t!5277 lt!40240))) (_1!1126 lt!40171)))))))

(declare-fun d!22931 () Bool)

(declare-fun c!14291 () Bool)

(assert (=> d!22931 (= c!14291 (and ((_ is Cons!1548) (t!5277 lt!40240)) (= (_1!1126 (h!2139 (t!5277 lt!40240))) (_1!1126 lt!40171))))))

(assert (=> d!22931 (= (getValueByKey!139 (t!5277 lt!40240) (_1!1126 lt!40171)) e!56707)))

(declare-fun b!87027 () Bool)

(assert (=> b!87027 (= e!56708 None!143)))

(assert (= (and d!22931 c!14291) b!87024))

(assert (= (and d!22931 (not c!14291)) b!87025))

(assert (= (and b!87025 c!14292) b!87026))

(assert (= (and b!87025 (not c!14292)) b!87027))

(declare-fun m!92263 () Bool)

(assert (=> b!87026 m!92263))

(assert (=> b!85684 d!22931))

(assert (=> d!22295 d!22459))

(declare-fun d!22933 () Bool)

(assert (=> d!22933 (= (get!1214 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2647 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85698 d!22933))

(declare-fun d!22935 () Bool)

(declare-fun e!56709 () Bool)

(assert (=> d!22935 e!56709))

(declare-fun res!44689 () Bool)

(assert (=> d!22935 (=> (not res!44689) (not e!56709))))

(declare-fun lt!41236 () ListLongMap!1487)

(assert (=> d!22935 (= res!44689 (contains!762 lt!41236 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164))))))

(declare-fun lt!41235 () List!1552)

(assert (=> d!22935 (= lt!41236 (ListLongMap!1488 lt!41235))))

(declare-fun lt!41237 () Unit!2533)

(declare-fun lt!41238 () Unit!2533)

(assert (=> d!22935 (= lt!41237 lt!41238)))

(assert (=> d!22935 (= (getValueByKey!139 lt!41235 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164))) (Some!144 (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164))))))

(assert (=> d!22935 (= lt!41238 (lemmaContainsTupThenGetReturnValue!58 lt!41235 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164))))))

(assert (=> d!22935 (= lt!41235 (insertStrictlySorted!60 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164))))))

(assert (=> d!22935 (= (+!116 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164)) lt!41236)))

(declare-fun b!87028 () Bool)

(declare-fun res!44690 () Bool)

(assert (=> b!87028 (=> (not res!44690) (not e!56709))))

(assert (=> b!87028 (= res!44690 (= (getValueByKey!139 (toList!759 lt!41236) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164))) (Some!144 (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164)))))))

(declare-fun b!87029 () Bool)

(assert (=> b!87029 (= e!56709 (contains!764 (toList!759 lt!41236) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164)))))

(assert (= (and d!22935 res!44689) b!87028))

(assert (= (and b!87028 res!44690) b!87029))

(declare-fun m!92265 () Bool)

(assert (=> d!22935 m!92265))

(declare-fun m!92267 () Bool)

(assert (=> d!22935 m!92267))

(declare-fun m!92269 () Bool)

(assert (=> d!22935 m!92269))

(declare-fun m!92271 () Bool)

(assert (=> d!22935 m!92271))

(declare-fun m!92273 () Bool)

(assert (=> b!87028 m!92273))

(declare-fun m!92275 () Bool)

(assert (=> b!87029 m!92275))

(assert (=> d!22349 d!22935))

(declare-fun d!22937 () Bool)

(assert (=> d!22937 (= (+!116 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40380 lt!40164 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22937 true))

(declare-fun _$7!74 () Unit!2533)

(assert (=> d!22937 (= (choose!517 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40380 (zeroValue!2230 newMap!16) lt!40164 (minValue!2230 newMap!16) (defaultEntry!2338 newMap!16)) _$7!74)))

(declare-fun bs!3664 () Bool)

(assert (= bs!3664 d!22937))

(assert (=> bs!3664 m!89683))

(assert (=> bs!3664 m!89683))

(assert (=> bs!3664 m!90691))

(assert (=> bs!3664 m!90689))

(assert (=> d!22349 d!22937))

(assert (=> d!22349 d!22151))

(assert (=> d!22349 d!22459))

(declare-fun bm!8287 () Bool)

(declare-fun call!8296 () ListLongMap!1487)

(declare-fun call!8293 () ListLongMap!1487)

(assert (=> bm!8287 (= call!8296 call!8293)))

(declare-fun b!87030 () Bool)

(declare-fun e!56719 () ListLongMap!1487)

(declare-fun call!8291 () ListLongMap!1487)

(assert (=> b!87030 (= e!56719 call!8291)))

(declare-fun b!87031 () Bool)

(declare-fun e!56721 () ListLongMap!1487)

(declare-fun call!8294 () ListLongMap!1487)

(assert (=> b!87031 (= e!56721 call!8294)))

(declare-fun b!87032 () Bool)

(declare-fun e!56717 () Bool)

(declare-fun e!56720 () Bool)

(assert (=> b!87032 (= e!56717 e!56720)))

(declare-fun res!44696 () Bool)

(assert (=> b!87032 (=> (not res!44696) (not e!56720))))

(declare-fun lt!41243 () ListLongMap!1487)

(assert (=> b!87032 (= res!44696 (contains!762 lt!41243 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87032 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8288 () Bool)

(assert (=> bm!8288 (= call!8294 call!8296)))

(declare-fun b!87033 () Bool)

(declare-fun e!56716 () Unit!2533)

(declare-fun Unit!2595 () Unit!2533)

(assert (=> b!87033 (= e!56716 Unit!2595)))

(declare-fun b!87034 () Bool)

(declare-fun e!56713 () Bool)

(declare-fun e!56710 () Bool)

(assert (=> b!87034 (= e!56713 e!56710)))

(declare-fun res!44694 () Bool)

(declare-fun call!8295 () Bool)

(assert (=> b!87034 (= res!44694 call!8295)))

(assert (=> b!87034 (=> (not res!44694) (not e!56710))))

(declare-fun b!87036 () Bool)

(declare-fun e!56722 () Bool)

(declare-fun call!8292 () Bool)

(assert (=> b!87036 (= e!56722 (not call!8292))))

(declare-fun b!87037 () Bool)

(declare-fun c!14297 () Bool)

(assert (=> b!87037 (= c!14297 (and (not (= (bvand lt!40380 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!40380 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!87037 (= e!56719 e!56721)))

(declare-fun c!14294 () Bool)

(declare-fun c!14296 () Bool)

(declare-fun bm!8289 () Bool)

(declare-fun call!8290 () ListLongMap!1487)

(assert (=> bm!8289 (= call!8290 (+!116 (ite c!14296 call!8293 (ite c!14294 call!8296 call!8294)) (ite (or c!14296 c!14294) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!87038 () Bool)

(declare-fun e!56711 () ListLongMap!1487)

(assert (=> b!87038 (= e!56711 (+!116 call!8290 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun bm!8290 () Bool)

(assert (=> bm!8290 (= call!8295 (contains!762 lt!41243 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87039 () Bool)

(assert (=> b!87039 (= e!56721 call!8291)))

(declare-fun b!87040 () Bool)

(declare-fun res!44699 () Bool)

(declare-fun e!56714 () Bool)

(assert (=> b!87040 (=> (not res!44699) (not e!56714))))

(assert (=> b!87040 (= res!44699 e!56713)))

(declare-fun c!14298 () Bool)

(assert (=> b!87040 (= c!14298 (not (= (bvand lt!40380 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!87041 () Bool)

(assert (=> b!87041 (= e!56711 e!56719)))

(assert (=> b!87041 (= c!14294 (and (not (= (bvand lt!40380 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!40380 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87042 () Bool)

(assert (=> b!87042 (= e!56714 e!56722)))

(declare-fun c!14293 () Bool)

(assert (=> b!87042 (= c!14293 (not (= (bvand lt!40380 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8291 () Bool)

(assert (=> bm!8291 (= call!8291 call!8290)))

(declare-fun d!22939 () Bool)

(assert (=> d!22939 e!56714))

(declare-fun res!44698 () Bool)

(assert (=> d!22939 (=> (not res!44698) (not e!56714))))

(assert (=> d!22939 (= res!44698 (or (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))))

(declare-fun lt!41257 () ListLongMap!1487)

(assert (=> d!22939 (= lt!41243 lt!41257)))

(declare-fun lt!41239 () Unit!2533)

(assert (=> d!22939 (= lt!41239 e!56716)))

(declare-fun c!14295 () Bool)

(declare-fun e!56718 () Bool)

(assert (=> d!22939 (= c!14295 e!56718)))

(declare-fun res!44692 () Bool)

(assert (=> d!22939 (=> (not res!44692) (not e!56718))))

(assert (=> d!22939 (= res!44692 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!22939 (= lt!41257 e!56711)))

(assert (=> d!22939 (= c!14296 (and (not (= (bvand lt!40380 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!40380 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22939 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22939 (= (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40380 lt!40164 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41243)))

(declare-fun b!87035 () Bool)

(assert (=> b!87035 (= e!56713 (not call!8295))))

(declare-fun b!87043 () Bool)

(declare-fun lt!41247 () Unit!2533)

(assert (=> b!87043 (= e!56716 lt!41247)))

(declare-fun lt!41256 () ListLongMap!1487)

(assert (=> b!87043 (= lt!41256 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40380 lt!40164 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41240 () (_ BitVec 64))

(assert (=> b!87043 (= lt!41240 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41258 () (_ BitVec 64))

(assert (=> b!87043 (= lt!41258 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41250 () Unit!2533)

(assert (=> b!87043 (= lt!41250 (addStillContains!58 lt!41256 lt!41240 lt!40164 lt!41258))))

(assert (=> b!87043 (contains!762 (+!116 lt!41256 (tuple2!2233 lt!41240 lt!40164)) lt!41258)))

(declare-fun lt!41246 () Unit!2533)

(assert (=> b!87043 (= lt!41246 lt!41250)))

(declare-fun lt!41252 () ListLongMap!1487)

(assert (=> b!87043 (= lt!41252 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40380 lt!40164 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41255 () (_ BitVec 64))

(assert (=> b!87043 (= lt!41255 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41254 () (_ BitVec 64))

(assert (=> b!87043 (= lt!41254 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41248 () Unit!2533)

(assert (=> b!87043 (= lt!41248 (addApplyDifferent!58 lt!41252 lt!41255 (minValue!2230 newMap!16) lt!41254))))

(assert (=> b!87043 (= (apply!82 (+!116 lt!41252 (tuple2!2233 lt!41255 (minValue!2230 newMap!16))) lt!41254) (apply!82 lt!41252 lt!41254))))

(declare-fun lt!41259 () Unit!2533)

(assert (=> b!87043 (= lt!41259 lt!41248)))

(declare-fun lt!41245 () ListLongMap!1487)

(assert (=> b!87043 (= lt!41245 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40380 lt!40164 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41251 () (_ BitVec 64))

(assert (=> b!87043 (= lt!41251 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41242 () (_ BitVec 64))

(assert (=> b!87043 (= lt!41242 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41253 () Unit!2533)

(assert (=> b!87043 (= lt!41253 (addApplyDifferent!58 lt!41245 lt!41251 lt!40164 lt!41242))))

(assert (=> b!87043 (= (apply!82 (+!116 lt!41245 (tuple2!2233 lt!41251 lt!40164)) lt!41242) (apply!82 lt!41245 lt!41242))))

(declare-fun lt!41244 () Unit!2533)

(assert (=> b!87043 (= lt!41244 lt!41253)))

(declare-fun lt!41249 () ListLongMap!1487)

(assert (=> b!87043 (= lt!41249 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40380 lt!40164 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41260 () (_ BitVec 64))

(assert (=> b!87043 (= lt!41260 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41241 () (_ BitVec 64))

(assert (=> b!87043 (= lt!41241 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!87043 (= lt!41247 (addApplyDifferent!58 lt!41249 lt!41260 (minValue!2230 newMap!16) lt!41241))))

(assert (=> b!87043 (= (apply!82 (+!116 lt!41249 (tuple2!2233 lt!41260 (minValue!2230 newMap!16))) lt!41241) (apply!82 lt!41249 lt!41241))))

(declare-fun b!87044 () Bool)

(declare-fun e!56712 () Bool)

(assert (=> b!87044 (= e!56712 (= (apply!82 lt!41243 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!87045 () Bool)

(assert (=> b!87045 (= e!56718 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87046 () Bool)

(assert (=> b!87046 (= e!56720 (= (apply!82 lt!41243 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87046 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_values!2321 newMap!16))))))

(assert (=> b!87046 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8292 () Bool)

(assert (=> bm!8292 (= call!8292 (contains!762 lt!41243 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87047 () Bool)

(assert (=> b!87047 (= e!56722 e!56712)))

(declare-fun res!44695 () Bool)

(assert (=> b!87047 (= res!44695 call!8292)))

(assert (=> b!87047 (=> (not res!44695) (not e!56712))))

(declare-fun b!87048 () Bool)

(declare-fun res!44693 () Bool)

(assert (=> b!87048 (=> (not res!44693) (not e!56714))))

(assert (=> b!87048 (= res!44693 e!56717)))

(declare-fun res!44691 () Bool)

(assert (=> b!87048 (=> res!44691 e!56717)))

(declare-fun e!56715 () Bool)

(assert (=> b!87048 (= res!44691 (not e!56715))))

(declare-fun res!44697 () Bool)

(assert (=> b!87048 (=> (not res!44697) (not e!56715))))

(assert (=> b!87048 (= res!44697 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8293 () Bool)

(assert (=> bm!8293 (= call!8293 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40380 lt!40164 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!87049 () Bool)

(assert (=> b!87049 (= e!56715 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87050 () Bool)

(assert (=> b!87050 (= e!56710 (= (apply!82 lt!41243 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40164))))

(assert (= (and d!22939 c!14296) b!87038))

(assert (= (and d!22939 (not c!14296)) b!87041))

(assert (= (and b!87041 c!14294) b!87030))

(assert (= (and b!87041 (not c!14294)) b!87037))

(assert (= (and b!87037 c!14297) b!87039))

(assert (= (and b!87037 (not c!14297)) b!87031))

(assert (= (or b!87039 b!87031) bm!8288))

(assert (= (or b!87030 bm!8288) bm!8287))

(assert (= (or b!87030 b!87039) bm!8291))

(assert (= (or b!87038 bm!8287) bm!8293))

(assert (= (or b!87038 bm!8291) bm!8289))

(assert (= (and d!22939 res!44692) b!87045))

(assert (= (and d!22939 c!14295) b!87043))

(assert (= (and d!22939 (not c!14295)) b!87033))

(assert (= (and d!22939 res!44698) b!87048))

(assert (= (and b!87048 res!44697) b!87049))

(assert (= (and b!87048 (not res!44691)) b!87032))

(assert (= (and b!87032 res!44696) b!87046))

(assert (= (and b!87048 res!44693) b!87040))

(assert (= (and b!87040 c!14298) b!87034))

(assert (= (and b!87040 (not c!14298)) b!87035))

(assert (= (and b!87034 res!44694) b!87050))

(assert (= (or b!87034 b!87035) bm!8290))

(assert (= (and b!87040 res!44699) b!87042))

(assert (= (and b!87042 c!14293) b!87047))

(assert (= (and b!87042 (not c!14293)) b!87036))

(assert (= (and b!87047 res!44695) b!87044))

(assert (= (or b!87047 b!87036) bm!8292))

(declare-fun b_lambda!3845 () Bool)

(assert (=> (not b_lambda!3845) (not b!87046)))

(assert (=> b!87046 t!5286))

(declare-fun b_and!5233 () Bool)

(assert (= b_and!5229 (and (=> t!5286 result!2931) b_and!5233)))

(assert (=> b!87046 t!5288))

(declare-fun b_and!5235 () Bool)

(assert (= b_and!5231 (and (=> t!5288 result!2933) b_and!5235)))

(declare-fun m!92277 () Bool)

(assert (=> b!87044 m!92277))

(declare-fun m!92279 () Bool)

(assert (=> b!87043 m!92279))

(declare-fun m!92281 () Bool)

(assert (=> b!87043 m!92281))

(declare-fun m!92283 () Bool)

(assert (=> b!87043 m!92283))

(declare-fun m!92285 () Bool)

(assert (=> b!87043 m!92285))

(declare-fun m!92287 () Bool)

(assert (=> b!87043 m!92287))

(declare-fun m!92289 () Bool)

(assert (=> b!87043 m!92289))

(declare-fun m!92291 () Bool)

(assert (=> b!87043 m!92291))

(declare-fun m!92293 () Bool)

(assert (=> b!87043 m!92293))

(declare-fun m!92295 () Bool)

(assert (=> b!87043 m!92295))

(declare-fun m!92297 () Bool)

(assert (=> b!87043 m!92297))

(assert (=> b!87043 m!92293))

(assert (=> b!87043 m!89941))

(declare-fun m!92299 () Bool)

(assert (=> b!87043 m!92299))

(assert (=> b!87043 m!92287))

(declare-fun m!92301 () Bool)

(assert (=> b!87043 m!92301))

(assert (=> b!87043 m!92289))

(declare-fun m!92303 () Bool)

(assert (=> b!87043 m!92303))

(declare-fun m!92305 () Bool)

(assert (=> b!87043 m!92305))

(assert (=> b!87043 m!92279))

(declare-fun m!92307 () Bool)

(assert (=> b!87043 m!92307))

(declare-fun m!92309 () Bool)

(assert (=> b!87043 m!92309))

(declare-fun m!92311 () Bool)

(assert (=> b!87038 m!92311))

(declare-fun m!92313 () Bool)

(assert (=> b!87050 m!92313))

(declare-fun m!92315 () Bool)

(assert (=> bm!8290 m!92315))

(assert (=> b!87049 m!89941))

(assert (=> b!87049 m!89941))

(assert (=> b!87049 m!89961))

(assert (=> b!87046 m!89941))

(assert (=> b!87046 m!89941))

(declare-fun m!92317 () Bool)

(assert (=> b!87046 m!92317))

(assert (=> b!87046 m!89965))

(assert (=> b!87046 m!89967))

(assert (=> b!87046 m!89969))

(assert (=> b!87046 m!89967))

(assert (=> b!87046 m!89965))

(assert (=> bm!8293 m!92299))

(assert (=> d!22939 m!89885))

(declare-fun m!92319 () Bool)

(assert (=> bm!8289 m!92319))

(declare-fun m!92321 () Bool)

(assert (=> bm!8292 m!92321))

(assert (=> b!87032 m!89941))

(assert (=> b!87032 m!89941))

(declare-fun m!92323 () Bool)

(assert (=> b!87032 m!92323))

(assert (=> b!87045 m!89941))

(assert (=> b!87045 m!89941))

(assert (=> b!87045 m!89961))

(assert (=> d!22349 d!22939))

(declare-fun d!22941 () Bool)

(declare-fun c!14299 () Bool)

(assert (=> d!22941 (= c!14299 ((_ is Nil!1549) (toList!759 lt!40252)))))

(declare-fun e!56723 () (InoxSet tuple2!2232))

(assert (=> d!22941 (= (content!88 (toList!759 lt!40252)) e!56723)))

(declare-fun b!87051 () Bool)

(assert (=> b!87051 (= e!56723 ((as const (Array tuple2!2232 Bool)) false))))

(declare-fun b!87052 () Bool)

(assert (=> b!87052 (= e!56723 ((_ map or) (store ((as const (Array tuple2!2232 Bool)) false) (h!2139 (toList!759 lt!40252)) true) (content!88 (t!5277 (toList!759 lt!40252)))))))

(assert (= (and d!22941 c!14299) b!87051))

(assert (= (and d!22941 (not c!14299)) b!87052))

(declare-fun m!92325 () Bool)

(assert (=> b!87052 m!92325))

(declare-fun m!92327 () Bool)

(assert (=> b!87052 m!92327))

(assert (=> d!22363 d!22941))

(declare-fun d!22943 () Bool)

(declare-fun res!44700 () Bool)

(declare-fun e!56724 () Bool)

(assert (=> d!22943 (=> res!44700 e!56724)))

(assert (=> d!22943 (= res!44700 (and ((_ is Cons!1548) lt!40657) (= (_1!1126 (h!2139 lt!40657)) (_1!1126 lt!40171))))))

(assert (=> d!22943 (= (containsKey!143 lt!40657 (_1!1126 lt!40171)) e!56724)))

(declare-fun b!87053 () Bool)

(declare-fun e!56725 () Bool)

(assert (=> b!87053 (= e!56724 e!56725)))

(declare-fun res!44701 () Bool)

(assert (=> b!87053 (=> (not res!44701) (not e!56725))))

(assert (=> b!87053 (= res!44701 (and (or (not ((_ is Cons!1548) lt!40657)) (bvsle (_1!1126 (h!2139 lt!40657)) (_1!1126 lt!40171))) ((_ is Cons!1548) lt!40657) (bvslt (_1!1126 (h!2139 lt!40657)) (_1!1126 lt!40171))))))

(declare-fun b!87054 () Bool)

(assert (=> b!87054 (= e!56725 (containsKey!143 (t!5277 lt!40657) (_1!1126 lt!40171)))))

(assert (= (and d!22943 (not res!44700)) b!87053))

(assert (= (and b!87053 res!44701) b!87054))

(declare-fun m!92329 () Bool)

(assert (=> b!87054 m!92329))

(assert (=> b!85968 d!22943))

(declare-fun b!87055 () Bool)

(declare-fun e!56726 () Option!145)

(assert (=> b!87055 (= e!56726 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40642)))))))

(declare-fun e!56727 () Option!145)

(declare-fun b!87057 () Bool)

(assert (=> b!87057 (= e!56727 (getValueByKey!139 (t!5277 (toList!759 lt!40642)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87056 () Bool)

(assert (=> b!87056 (= e!56726 e!56727)))

(declare-fun c!14301 () Bool)

(assert (=> b!87056 (= c!14301 (and ((_ is Cons!1548) (toList!759 lt!40642)) (not (= (_1!1126 (h!2139 (toList!759 lt!40642))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun c!14300 () Bool)

(declare-fun d!22945 () Bool)

(assert (=> d!22945 (= c!14300 (and ((_ is Cons!1548) (toList!759 lt!40642)) (= (_1!1126 (h!2139 (toList!759 lt!40642))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!22945 (= (getValueByKey!139 (toList!759 lt!40642) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) e!56726)))

(declare-fun b!87058 () Bool)

(assert (=> b!87058 (= e!56727 None!143)))

(assert (= (and d!22945 c!14300) b!87055))

(assert (= (and d!22945 (not c!14300)) b!87056))

(assert (= (and b!87056 c!14301) b!87057))

(assert (= (and b!87056 (not c!14301)) b!87058))

(declare-fun m!92331 () Bool)

(assert (=> b!87057 m!92331))

(assert (=> b!85939 d!22945))

(declare-fun d!22947 () Bool)

(declare-fun e!56729 () Bool)

(assert (=> d!22947 e!56729))

(declare-fun res!44702 () Bool)

(assert (=> d!22947 (=> res!44702 e!56729)))

(declare-fun lt!41263 () Bool)

(assert (=> d!22947 (= res!44702 (not lt!41263))))

(declare-fun lt!41264 () Bool)

(assert (=> d!22947 (= lt!41263 lt!41264)))

(declare-fun lt!41262 () Unit!2533)

(declare-fun e!56728 () Unit!2533)

(assert (=> d!22947 (= lt!41262 e!56728)))

(declare-fun c!14302 () Bool)

(assert (=> d!22947 (= c!14302 lt!41264)))

(assert (=> d!22947 (= lt!41264 (containsKey!143 (toList!759 lt!40834) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22947 (= (contains!762 lt!40834 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) lt!41263)))

(declare-fun b!87059 () Bool)

(declare-fun lt!41261 () Unit!2533)

(assert (=> b!87059 (= e!56728 lt!41261)))

(assert (=> b!87059 (= lt!41261 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40834) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87059 (isDefined!93 (getValueByKey!139 (toList!759 lt!40834) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87060 () Bool)

(declare-fun Unit!2596 () Unit!2533)

(assert (=> b!87060 (= e!56728 Unit!2596)))

(declare-fun b!87061 () Bool)

(assert (=> b!87061 (= e!56729 (isDefined!93 (getValueByKey!139 (toList!759 lt!40834) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!22947 c!14302) b!87059))

(assert (= (and d!22947 (not c!14302)) b!87060))

(assert (= (and d!22947 (not res!44702)) b!87061))

(assert (=> d!22947 m!89941))

(declare-fun m!92333 () Bool)

(assert (=> d!22947 m!92333))

(assert (=> b!87059 m!89941))

(declare-fun m!92335 () Bool)

(assert (=> b!87059 m!92335))

(assert (=> b!87059 m!89941))

(declare-fun m!92337 () Bool)

(assert (=> b!87059 m!92337))

(assert (=> b!87059 m!92337))

(declare-fun m!92339 () Bool)

(assert (=> b!87059 m!92339))

(assert (=> b!87061 m!89941))

(assert (=> b!87061 m!92337))

(assert (=> b!87061 m!92337))

(assert (=> b!87061 m!92339))

(assert (=> b!86153 d!22947))

(declare-fun b!87062 () Bool)

(declare-fun e!56731 () Bool)

(declare-fun e!56732 () Bool)

(assert (=> b!87062 (= e!56731 e!56732)))

(declare-fun c!14306 () Bool)

(assert (=> b!87062 (= c!14306 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!87063 () Bool)

(declare-fun e!56730 () Bool)

(assert (=> b!87063 (= e!56730 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!87063 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!87064 () Bool)

(declare-fun lt!41266 () Unit!2533)

(declare-fun lt!41268 () Unit!2533)

(assert (=> b!87064 (= lt!41266 lt!41268)))

(declare-fun lt!41270 () V!3027)

(declare-fun lt!41265 () ListLongMap!1487)

(declare-fun lt!41267 () (_ BitVec 64))

(declare-fun lt!41269 () (_ BitVec 64))

(assert (=> b!87064 (not (contains!762 (+!116 lt!41265 (tuple2!2233 lt!41269 lt!41270)) lt!41267))))

(assert (=> b!87064 (= lt!41268 (addStillNotContains!33 lt!41265 lt!41269 lt!41270 lt!41267))))

(assert (=> b!87064 (= lt!41267 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!87064 (= lt!41270 (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!87064 (= lt!41269 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!8297 () ListLongMap!1487)

(assert (=> b!87064 (= lt!41265 call!8297)))

(declare-fun e!56733 () ListLongMap!1487)

(assert (=> b!87064 (= e!56733 (+!116 call!8297 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!87065 () Bool)

(declare-fun e!56735 () ListLongMap!1487)

(assert (=> b!87065 (= e!56735 (ListLongMap!1488 Nil!1549))))

(declare-fun b!87067 () Bool)

(declare-fun e!56736 () Bool)

(assert (=> b!87067 (= e!56731 e!56736)))

(assert (=> b!87067 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun res!44706 () Bool)

(declare-fun lt!41271 () ListLongMap!1487)

(assert (=> b!87067 (= res!44706 (contains!762 lt!41271 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!87067 (=> (not res!44706) (not e!56736))))

(declare-fun b!87068 () Bool)

(assert (=> b!87068 (= e!56732 (isEmpty!340 lt!41271))))

(declare-fun b!87069 () Bool)

(declare-fun e!56734 () Bool)

(assert (=> b!87069 (= e!56734 e!56731)))

(declare-fun c!14305 () Bool)

(assert (=> b!87069 (= c!14305 e!56730)))

(declare-fun res!44704 () Bool)

(assert (=> b!87069 (=> (not res!44704) (not e!56730))))

(assert (=> b!87069 (= res!44704 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!87070 () Bool)

(assert (=> b!87070 (= e!56733 call!8297)))

(declare-fun b!87071 () Bool)

(assert (=> b!87071 (= e!56735 e!56733)))

(declare-fun c!14303 () Bool)

(assert (=> b!87071 (= c!14303 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!87072 () Bool)

(assert (=> b!87072 (= e!56732 (= lt!41271 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun bm!8294 () Bool)

(assert (=> bm!8294 (= call!8297 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))))))

(declare-fun b!87073 () Bool)

(assert (=> b!87073 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> b!87073 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2163 (_values!2321 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> b!87073 (= e!56736 (= (apply!82 lt!41271 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1212 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!22949 () Bool)

(assert (=> d!22949 e!56734))

(declare-fun res!44703 () Bool)

(assert (=> d!22949 (=> (not res!44703) (not e!56734))))

(assert (=> d!22949 (= res!44703 (not (contains!762 lt!41271 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22949 (= lt!41271 e!56735)))

(declare-fun c!14304 () Bool)

(assert (=> d!22949 (= c!14304 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> d!22949 (validMask!0 (mask!6366 (v!2648 (underlying!293 thiss!992))))))

(assert (=> d!22949 (= (getCurrentListMapNoExtraKeys!80 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (_values!2321 (v!2648 (underlying!293 thiss!992))) (mask!6366 (v!2648 (underlying!293 thiss!992))) (extraKeys!2177 (v!2648 (underlying!293 thiss!992))) (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) (minValue!2230 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992)))) lt!41271)))

(declare-fun b!87066 () Bool)

(declare-fun res!44705 () Bool)

(assert (=> b!87066 (=> (not res!44705) (not e!56734))))

(assert (=> b!87066 (= res!44705 (not (contains!762 lt!41271 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22949 c!14304) b!87065))

(assert (= (and d!22949 (not c!14304)) b!87071))

(assert (= (and b!87071 c!14303) b!87064))

(assert (= (and b!87071 (not c!14303)) b!87070))

(assert (= (or b!87064 b!87070) bm!8294))

(assert (= (and d!22949 res!44703) b!87066))

(assert (= (and b!87066 res!44705) b!87069))

(assert (= (and b!87069 res!44704) b!87063))

(assert (= (and b!87069 c!14305) b!87067))

(assert (= (and b!87069 (not c!14305)) b!87062))

(assert (= (and b!87067 res!44706) b!87073))

(assert (= (and b!87062 c!14306) b!87072))

(assert (= (and b!87062 (not c!14306)) b!87068))

(declare-fun b_lambda!3847 () Bool)

(assert (=> (not b_lambda!3847) (not b!87064)))

(assert (=> b!87064 t!5274))

(declare-fun b_and!5237 () Bool)

(assert (= b_and!5233 (and (=> t!5274 result!2917) b_and!5237)))

(assert (=> b!87064 t!5276))

(declare-fun b_and!5239 () Bool)

(assert (= b_and!5235 (and (=> t!5276 result!2921) b_and!5239)))

(declare-fun b_lambda!3849 () Bool)

(assert (=> (not b_lambda!3849) (not b!87073)))

(assert (=> b!87073 t!5274))

(declare-fun b_and!5241 () Bool)

(assert (= b_and!5237 (and (=> t!5274 result!2917) b_and!5241)))

(assert (=> b!87073 t!5276))

(declare-fun b_and!5243 () Bool)

(assert (= b_and!5239 (and (=> t!5276 result!2921) b_and!5243)))

(declare-fun m!92341 () Bool)

(assert (=> b!87071 m!92341))

(assert (=> b!87071 m!92341))

(declare-fun m!92343 () Bool)

(assert (=> b!87071 m!92343))

(assert (=> b!87063 m!92341))

(assert (=> b!87063 m!92341))

(assert (=> b!87063 m!92343))

(declare-fun m!92345 () Bool)

(assert (=> b!87072 m!92345))

(declare-fun m!92347 () Bool)

(assert (=> d!22949 m!92347))

(assert (=> d!22949 m!89445))

(assert (=> b!87067 m!92341))

(assert (=> b!87067 m!92341))

(declare-fun m!92349 () Bool)

(assert (=> b!87067 m!92349))

(assert (=> bm!8294 m!92345))

(declare-fun m!92351 () Bool)

(assert (=> b!87068 m!92351))

(declare-fun m!92353 () Bool)

(assert (=> b!87064 m!92353))

(declare-fun m!92355 () Bool)

(assert (=> b!87064 m!92355))

(declare-fun m!92357 () Bool)

(assert (=> b!87064 m!92357))

(declare-fun m!92359 () Bool)

(assert (=> b!87064 m!92359))

(assert (=> b!87064 m!92341))

(assert (=> b!87064 m!89427))

(assert (=> b!87064 m!92353))

(assert (=> b!87064 m!89427))

(declare-fun m!92361 () Bool)

(assert (=> b!87064 m!92361))

(assert (=> b!87064 m!92355))

(declare-fun m!92363 () Bool)

(assert (=> b!87064 m!92363))

(assert (=> b!87073 m!92341))

(declare-fun m!92365 () Bool)

(assert (=> b!87073 m!92365))

(assert (=> b!87073 m!92353))

(assert (=> b!87073 m!92353))

(assert (=> b!87073 m!89427))

(assert (=> b!87073 m!92361))

(assert (=> b!87073 m!92341))

(assert (=> b!87073 m!89427))

(declare-fun m!92367 () Bool)

(assert (=> b!87066 m!92367))

(assert (=> bm!8154 d!22949))

(declare-fun d!22951 () Bool)

(assert (=> d!22951 (= (get!1216 (getValueByKey!139 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2652 (getValueByKey!139 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22169 d!22951))

(declare-fun b!87074 () Bool)

(declare-fun e!56737 () Option!145)

(assert (=> b!87074 (= e!56737 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40443)))))))

(declare-fun b!87076 () Bool)

(declare-fun e!56738 () Option!145)

(assert (=> b!87076 (= e!56738 (getValueByKey!139 (t!5277 (toList!759 lt!40443)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87075 () Bool)

(assert (=> b!87075 (= e!56737 e!56738)))

(declare-fun c!14308 () Bool)

(assert (=> b!87075 (= c!14308 (and ((_ is Cons!1548) (toList!759 lt!40443)) (not (= (_1!1126 (h!2139 (toList!759 lt!40443))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!22953 () Bool)

(declare-fun c!14307 () Bool)

(assert (=> d!22953 (= c!14307 (and ((_ is Cons!1548) (toList!759 lt!40443)) (= (_1!1126 (h!2139 (toList!759 lt!40443))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22953 (= (getValueByKey!139 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000) e!56737)))

(declare-fun b!87077 () Bool)

(assert (=> b!87077 (= e!56738 None!143)))

(assert (= (and d!22953 c!14307) b!87074))

(assert (= (and d!22953 (not c!14307)) b!87075))

(assert (= (and b!87075 c!14308) b!87076))

(assert (= (and b!87075 (not c!14308)) b!87077))

(declare-fun m!92369 () Bool)

(assert (=> b!87076 m!92369))

(assert (=> d!22169 d!22953))

(declare-fun d!22955 () Bool)

(declare-fun c!14309 () Bool)

(assert (=> d!22955 (= c!14309 ((_ is Nil!1549) (toList!759 lt!40241)))))

(declare-fun e!56739 () (InoxSet tuple2!2232))

(assert (=> d!22955 (= (content!88 (toList!759 lt!40241)) e!56739)))

(declare-fun b!87078 () Bool)

(assert (=> b!87078 (= e!56739 ((as const (Array tuple2!2232 Bool)) false))))

(declare-fun b!87079 () Bool)

(assert (=> b!87079 (= e!56739 ((_ map or) (store ((as const (Array tuple2!2232 Bool)) false) (h!2139 (toList!759 lt!40241)) true) (content!88 (t!5277 (toList!759 lt!40241)))))))

(assert (= (and d!22955 c!14309) b!87078))

(assert (= (and d!22955 (not c!14309)) b!87079))

(declare-fun m!92371 () Bool)

(assert (=> b!87079 m!92371))

(declare-fun m!92373 () Bool)

(assert (=> b!87079 m!92373))

(assert (=> d!22331 d!22955))

(assert (=> d!22301 d!22299))

(declare-fun d!22957 () Bool)

(assert (=> d!22957 (= (getValueByKey!139 lt!40247 (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172)))))

(assert (=> d!22957 true))

(declare-fun _$22!421 () Unit!2533)

(assert (=> d!22957 (= (choose!508 lt!40247 (_1!1126 lt!40172) (_2!1126 lt!40172)) _$22!421)))

(declare-fun bs!3665 () Bool)

(assert (= bs!3665 d!22957))

(assert (=> bs!3665 m!89567))

(assert (=> d!22301 d!22957))

(declare-fun d!22959 () Bool)

(declare-fun res!44707 () Bool)

(declare-fun e!56740 () Bool)

(assert (=> d!22959 (=> res!44707 e!56740)))

(assert (=> d!22959 (= res!44707 (or ((_ is Nil!1549) lt!40247) ((_ is Nil!1549) (t!5277 lt!40247))))))

(assert (=> d!22959 (= (isStrictlySorted!293 lt!40247) e!56740)))

(declare-fun b!87080 () Bool)

(declare-fun e!56741 () Bool)

(assert (=> b!87080 (= e!56740 e!56741)))

(declare-fun res!44708 () Bool)

(assert (=> b!87080 (=> (not res!44708) (not e!56741))))

(assert (=> b!87080 (= res!44708 (bvslt (_1!1126 (h!2139 lt!40247)) (_1!1126 (h!2139 (t!5277 lt!40247)))))))

(declare-fun b!87081 () Bool)

(assert (=> b!87081 (= e!56741 (isStrictlySorted!293 (t!5277 lt!40247)))))

(assert (= (and d!22959 (not res!44707)) b!87080))

(assert (= (and b!87080 res!44708) b!87081))

(declare-fun m!92375 () Bool)

(assert (=> b!87081 m!92375))

(assert (=> d!22301 d!22959))

(declare-fun d!22961 () Bool)

(declare-fun res!44709 () Bool)

(declare-fun e!56742 () Bool)

(assert (=> d!22961 (=> res!44709 e!56742)))

(assert (=> d!22961 (= res!44709 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) lt!40458)))))

(assert (=> d!22961 (= (containsKey!143 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458) e!56742)))

(declare-fun b!87082 () Bool)

(declare-fun e!56743 () Bool)

(assert (=> b!87082 (= e!56742 e!56743)))

(declare-fun res!44710 () Bool)

(assert (=> b!87082 (=> (not res!44710) (not e!56743))))

(assert (=> b!87082 (= res!44710 (and (or (not ((_ is Cons!1548) (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) (bvsle (_1!1126 (h!2139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) lt!40458)) ((_ is Cons!1548) (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) (bvslt (_1!1126 (h!2139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))) lt!40458)))))

(declare-fun b!87083 () Bool)

(assert (=> b!87083 (= e!56743 (containsKey!143 (t!5277 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))) lt!40458))))

(assert (= (and d!22961 (not res!44709)) b!87082))

(assert (= (and b!87082 res!44710) b!87083))

(declare-fun m!92377 () Bool)

(assert (=> b!87083 m!92377))

(assert (=> d!22235 d!22961))

(declare-fun d!22963 () Bool)

(assert (=> d!22963 (isDefined!93 (getValueByKey!139 (toList!759 lt!40241) (_1!1126 lt!40171)))))

(declare-fun lt!41272 () Unit!2533)

(assert (=> d!22963 (= lt!41272 (choose!518 (toList!759 lt!40241) (_1!1126 lt!40171)))))

(declare-fun e!56744 () Bool)

(assert (=> d!22963 e!56744))

(declare-fun res!44711 () Bool)

(assert (=> d!22963 (=> (not res!44711) (not e!56744))))

(assert (=> d!22963 (= res!44711 (isStrictlySorted!293 (toList!759 lt!40241)))))

(assert (=> d!22963 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40241) (_1!1126 lt!40171)) lt!41272)))

(declare-fun b!87084 () Bool)

(assert (=> b!87084 (= e!56744 (containsKey!143 (toList!759 lt!40241) (_1!1126 lt!40171)))))

(assert (= (and d!22963 res!44711) b!87084))

(assert (=> d!22963 m!89551))

(assert (=> d!22963 m!89551))

(assert (=> d!22963 m!89847))

(declare-fun m!92379 () Bool)

(assert (=> d!22963 m!92379))

(declare-fun m!92381 () Bool)

(assert (=> d!22963 m!92381))

(assert (=> b!87084 m!89843))

(assert (=> b!85679 d!22963))

(declare-fun d!22965 () Bool)

(assert (=> d!22965 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40241) (_1!1126 lt!40171))) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40241) (_1!1126 lt!40171)))))))

(declare-fun bs!3666 () Bool)

(assert (= bs!3666 d!22965))

(assert (=> bs!3666 m!89551))

(declare-fun m!92383 () Bool)

(assert (=> bs!3666 m!92383))

(assert (=> b!85679 d!22965))

(assert (=> b!85679 d!22195))

(assert (=> b!85919 d!22105))

(declare-fun d!22967 () Bool)

(assert (=> d!22967 (isDefined!93 (getValueByKey!139 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))

(declare-fun lt!41273 () Unit!2533)

(assert (=> d!22967 (= lt!41273 (choose!518 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))

(declare-fun e!56745 () Bool)

(assert (=> d!22967 e!56745))

(declare-fun res!44712 () Bool)

(assert (=> d!22967 (=> (not res!44712) (not e!56745))))

(assert (=> d!22967 (= res!44712 (isStrictlySorted!293 (toList!759 e!55772)))))

(assert (=> d!22967 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))) lt!41273)))

(declare-fun b!87085 () Bool)

(assert (=> b!87085 (= e!56745 (containsKey!143 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))

(assert (= (and d!22967 res!44712) b!87085))

(assert (=> d!22967 m!90781))

(assert (=> d!22967 m!90781))

(assert (=> d!22967 m!90783))

(declare-fun m!92385 () Bool)

(assert (=> d!22967 m!92385))

(declare-fun m!92387 () Bool)

(assert (=> d!22967 m!92387))

(assert (=> b!87085 m!90777))

(assert (=> b!86179 d!22967))

(declare-fun d!22969 () Bool)

(assert (=> d!22969 (= (isDefined!93 (getValueByKey!139 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372))))) (not (isEmpty!342 (getValueByKey!139 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))))

(declare-fun bs!3667 () Bool)

(assert (= bs!3667 d!22969))

(assert (=> bs!3667 m!90781))

(declare-fun m!92389 () Bool)

(assert (=> bs!3667 m!92389))

(assert (=> b!86179 d!22969))

(declare-fun b!87086 () Bool)

(declare-fun e!56746 () Option!145)

(assert (=> b!87086 (= e!56746 (Some!144 (_2!1126 (h!2139 (toList!759 e!55772)))))))

(declare-fun b!87088 () Bool)

(declare-fun e!56747 () Option!145)

(assert (=> b!87088 (= e!56747 (getValueByKey!139 (t!5277 (toList!759 e!55772)) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))

(declare-fun b!87087 () Bool)

(assert (=> b!87087 (= e!56746 e!56747)))

(declare-fun c!14311 () Bool)

(assert (=> b!87087 (= c!14311 (and ((_ is Cons!1548) (toList!759 e!55772)) (not (= (_1!1126 (h!2139 (toList!759 e!55772))) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))))))))

(declare-fun c!14310 () Bool)

(declare-fun d!22971 () Bool)

(assert (=> d!22971 (= c!14310 (and ((_ is Cons!1548) (toList!759 e!55772)) (= (_1!1126 (h!2139 (toList!759 e!55772))) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372))))))))

(assert (=> d!22971 (= (getValueByKey!139 (toList!759 e!55772) (ite c!13868 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!40372)))) e!56746)))

(declare-fun b!87089 () Bool)

(assert (=> b!87089 (= e!56747 None!143)))

(assert (= (and d!22971 c!14310) b!87086))

(assert (= (and d!22971 (not c!14310)) b!87087))

(assert (= (and b!87087 c!14311) b!87088))

(assert (= (and b!87087 (not c!14311)) b!87089))

(declare-fun m!92391 () Bool)

(assert (=> b!87088 m!92391))

(assert (=> b!86179 d!22971))

(declare-fun b!87090 () Bool)

(declare-fun e!56748 () Option!145)

(assert (=> b!87090 (= e!56748 (Some!144 (_2!1126 (h!2139 (t!5277 lt!40285)))))))

(declare-fun b!87092 () Bool)

(declare-fun e!56749 () Option!145)

(assert (=> b!87092 (= e!56749 (getValueByKey!139 (t!5277 (t!5277 lt!40285)) (_1!1126 lt!40163)))))

(declare-fun b!87091 () Bool)

(assert (=> b!87091 (= e!56748 e!56749)))

(declare-fun c!14313 () Bool)

(assert (=> b!87091 (= c!14313 (and ((_ is Cons!1548) (t!5277 lt!40285)) (not (= (_1!1126 (h!2139 (t!5277 lt!40285))) (_1!1126 lt!40163)))))))

(declare-fun d!22973 () Bool)

(declare-fun c!14312 () Bool)

(assert (=> d!22973 (= c!14312 (and ((_ is Cons!1548) (t!5277 lt!40285)) (= (_1!1126 (h!2139 (t!5277 lt!40285))) (_1!1126 lt!40163))))))

(assert (=> d!22973 (= (getValueByKey!139 (t!5277 lt!40285) (_1!1126 lt!40163)) e!56748)))

(declare-fun b!87093 () Bool)

(assert (=> b!87093 (= e!56749 None!143)))

(assert (= (and d!22973 c!14312) b!87090))

(assert (= (and d!22973 (not c!14312)) b!87091))

(assert (= (and b!87091 c!14313) b!87092))

(assert (= (and b!87091 (not c!14313)) b!87093))

(declare-fun m!92393 () Bool)

(assert (=> b!87092 m!92393))

(assert (=> b!85711 d!22973))

(declare-fun d!22975 () Bool)

(declare-fun e!56751 () Bool)

(assert (=> d!22975 e!56751))

(declare-fun res!44713 () Bool)

(assert (=> d!22975 (=> res!44713 e!56751)))

(declare-fun lt!41276 () Bool)

(assert (=> d!22975 (= res!44713 (not lt!41276))))

(declare-fun lt!41277 () Bool)

(assert (=> d!22975 (= lt!41276 lt!41277)))

(declare-fun lt!41275 () Unit!2533)

(declare-fun e!56750 () Unit!2533)

(assert (=> d!22975 (= lt!41275 e!56750)))

(declare-fun c!14314 () Bool)

(assert (=> d!22975 (= c!14314 lt!41277)))

(assert (=> d!22975 (= lt!41277 (containsKey!143 (toList!759 lt!40554) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22975 (= (contains!762 lt!40554 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41276)))

(declare-fun b!87094 () Bool)

(declare-fun lt!41274 () Unit!2533)

(assert (=> b!87094 (= e!56750 lt!41274)))

(assert (=> b!87094 (= lt!41274 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40554) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> b!87094 (isDefined!93 (getValueByKey!139 (toList!759 lt!40554) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87095 () Bool)

(declare-fun Unit!2597 () Unit!2533)

(assert (=> b!87095 (= e!56750 Unit!2597)))

(declare-fun b!87096 () Bool)

(assert (=> b!87096 (= e!56751 (isDefined!93 (getValueByKey!139 (toList!759 lt!40554) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22975 c!14314) b!87094))

(assert (= (and d!22975 (not c!14314)) b!87095))

(assert (= (and d!22975 (not res!44713)) b!87096))

(declare-fun m!92395 () Bool)

(assert (=> d!22975 m!92395))

(declare-fun m!92397 () Bool)

(assert (=> b!87094 m!92397))

(assert (=> b!87094 m!90099))

(assert (=> b!87094 m!90099))

(declare-fun m!92399 () Bool)

(assert (=> b!87094 m!92399))

(assert (=> b!87096 m!90099))

(assert (=> b!87096 m!90099))

(assert (=> b!87096 m!92399))

(assert (=> d!22191 d!22975))

(declare-fun b!87097 () Bool)

(declare-fun e!56752 () Option!145)

(assert (=> b!87097 (= e!56752 (Some!144 (_2!1126 (h!2139 lt!40553))))))

(declare-fun b!87099 () Bool)

(declare-fun e!56753 () Option!145)

(assert (=> b!87099 (= e!56753 (getValueByKey!139 (t!5277 lt!40553) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87098 () Bool)

(assert (=> b!87098 (= e!56752 e!56753)))

(declare-fun c!14316 () Bool)

(assert (=> b!87098 (= c!14316 (and ((_ is Cons!1548) lt!40553) (not (= (_1!1126 (h!2139 lt!40553)) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!22977 () Bool)

(declare-fun c!14315 () Bool)

(assert (=> d!22977 (= c!14315 (and ((_ is Cons!1548) lt!40553) (= (_1!1126 (h!2139 lt!40553)) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22977 (= (getValueByKey!139 lt!40553 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56752)))

(declare-fun b!87100 () Bool)

(assert (=> b!87100 (= e!56753 None!143)))

(assert (= (and d!22977 c!14315) b!87097))

(assert (= (and d!22977 (not c!14315)) b!87098))

(assert (= (and b!87098 c!14316) b!87099))

(assert (= (and b!87098 (not c!14316)) b!87100))

(declare-fun m!92401 () Bool)

(assert (=> b!87099 m!92401))

(assert (=> d!22191 d!22977))

(declare-fun d!22979 () Bool)

(assert (=> d!22979 (= (getValueByKey!139 lt!40553 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!41278 () Unit!2533)

(assert (=> d!22979 (= lt!41278 (choose!508 lt!40553 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun e!56754 () Bool)

(assert (=> d!22979 e!56754))

(declare-fun res!44714 () Bool)

(assert (=> d!22979 (=> (not res!44714) (not e!56754))))

(assert (=> d!22979 (= res!44714 (isStrictlySorted!293 lt!40553))))

(assert (=> d!22979 (= (lemmaContainsTupThenGetReturnValue!58 lt!40553 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41278)))

(declare-fun b!87101 () Bool)

(declare-fun res!44715 () Bool)

(assert (=> b!87101 (=> (not res!44715) (not e!56754))))

(assert (=> b!87101 (= res!44715 (containsKey!143 lt!40553 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87102 () Bool)

(assert (=> b!87102 (= e!56754 (contains!764 lt!40553 (tuple2!2233 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22979 res!44714) b!87101))

(assert (= (and b!87101 res!44715) b!87102))

(assert (=> d!22979 m!90093))

(declare-fun m!92403 () Bool)

(assert (=> d!22979 m!92403))

(declare-fun m!92405 () Bool)

(assert (=> d!22979 m!92405))

(declare-fun m!92407 () Bool)

(assert (=> b!87101 m!92407))

(declare-fun m!92409 () Bool)

(assert (=> b!87102 m!92409))

(assert (=> d!22191 d!22979))

(declare-fun b!87103 () Bool)

(declare-fun e!56756 () List!1552)

(declare-fun c!14318 () Bool)

(declare-fun c!14317 () Bool)

(assert (=> b!87103 (= e!56756 (ite c!14317 (t!5277 (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (ite c!14318 (Cons!1548 (h!2139 (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (t!5277 (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))) Nil!1549)))))

(declare-fun b!87104 () Bool)

(declare-fun e!56758 () Bool)

(declare-fun lt!41279 () List!1552)

(assert (=> b!87104 (= e!56758 (contains!764 lt!41279 (tuple2!2233 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!87105 () Bool)

(declare-fun e!56757 () List!1552)

(declare-fun e!56755 () List!1552)

(assert (=> b!87105 (= e!56757 e!56755)))

(assert (=> b!87105 (= c!14317 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!87106 () Bool)

(declare-fun res!44716 () Bool)

(assert (=> b!87106 (=> (not res!44716) (not e!56758))))

(assert (=> b!87106 (= res!44716 (containsKey!143 lt!41279 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun d!22981 () Bool)

(assert (=> d!22981 e!56758))

(declare-fun res!44717 () Bool)

(assert (=> d!22981 (=> (not res!44717) (not e!56758))))

(assert (=> d!22981 (= res!44717 (isStrictlySorted!293 lt!41279))))

(assert (=> d!22981 (= lt!41279 e!56757)))

(declare-fun c!14319 () Bool)

(assert (=> d!22981 (= c!14319 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (bvslt (_1!1126 (h!2139 (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22981 (isStrictlySorted!293 (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22981 (= (insertStrictlySorted!60 (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41279)))

(declare-fun bm!8295 () Bool)

(declare-fun call!8298 () List!1552)

(assert (=> bm!8295 (= call!8298 ($colon$colon!71 e!56756 (ite c!14319 (h!2139 (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (tuple2!2233 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14320 () Bool)

(assert (=> bm!8295 (= c!14320 c!14319)))

(declare-fun bm!8296 () Bool)

(declare-fun call!8300 () List!1552)

(declare-fun call!8299 () List!1552)

(assert (=> bm!8296 (= call!8300 call!8299)))

(declare-fun b!87107 () Bool)

(assert (=> b!87107 (= e!56757 call!8298)))

(declare-fun b!87108 () Bool)

(declare-fun e!56759 () List!1552)

(assert (=> b!87108 (= e!56759 call!8300)))

(declare-fun b!87109 () Bool)

(assert (=> b!87109 (= e!56755 call!8299)))

(declare-fun b!87110 () Bool)

(assert (=> b!87110 (= e!56756 (insertStrictlySorted!60 (t!5277 (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87111 () Bool)

(assert (=> b!87111 (= e!56759 call!8300)))

(declare-fun b!87112 () Bool)

(assert (=> b!87112 (= c!14318 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (bvsgt (_1!1126 (h!2139 (toList!759 (+!116 lt!40169 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> b!87112 (= e!56755 e!56759)))

(declare-fun bm!8297 () Bool)

(assert (=> bm!8297 (= call!8299 call!8298)))

(assert (= (and d!22981 c!14319) b!87107))

(assert (= (and d!22981 (not c!14319)) b!87105))

(assert (= (and b!87105 c!14317) b!87109))

(assert (= (and b!87105 (not c!14317)) b!87112))

(assert (= (and b!87112 c!14318) b!87111))

(assert (= (and b!87112 (not c!14318)) b!87108))

(assert (= (or b!87111 b!87108) bm!8296))

(assert (= (or b!87109 bm!8296) bm!8297))

(assert (= (or b!87107 bm!8297) bm!8295))

(assert (= (and bm!8295 c!14320) b!87110))

(assert (= (and bm!8295 (not c!14320)) b!87103))

(assert (= (and d!22981 res!44717) b!87106))

(assert (= (and b!87106 res!44716) b!87104))

(declare-fun m!92411 () Bool)

(assert (=> b!87106 m!92411))

(declare-fun m!92413 () Bool)

(assert (=> b!87110 m!92413))

(declare-fun m!92415 () Bool)

(assert (=> d!22981 m!92415))

(declare-fun m!92417 () Bool)

(assert (=> d!22981 m!92417))

(declare-fun m!92419 () Bool)

(assert (=> b!87104 m!92419))

(declare-fun m!92421 () Bool)

(assert (=> bm!8295 m!92421))

(assert (=> d!22191 d!22981))

(declare-fun b!87113 () Bool)

(declare-fun e!56760 () Option!145)

(assert (=> b!87113 (= e!56760 (Some!144 (_2!1126 (h!2139 (t!5277 (toList!759 lt!40256))))))))

(declare-fun b!87115 () Bool)

(declare-fun e!56761 () Option!145)

(assert (=> b!87115 (= e!56761 (getValueByKey!139 (t!5277 (t!5277 (toList!759 lt!40256))) (_1!1126 lt!40172)))))

(declare-fun b!87114 () Bool)

(assert (=> b!87114 (= e!56760 e!56761)))

(declare-fun c!14322 () Bool)

(assert (=> b!87114 (= c!14322 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40256))) (not (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40256)))) (_1!1126 lt!40172)))))))

(declare-fun d!22983 () Bool)

(declare-fun c!14321 () Bool)

(assert (=> d!22983 (= c!14321 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40256))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40256)))) (_1!1126 lt!40172))))))

(assert (=> d!22983 (= (getValueByKey!139 (t!5277 (toList!759 lt!40256)) (_1!1126 lt!40172)) e!56760)))

(declare-fun b!87116 () Bool)

(assert (=> b!87116 (= e!56761 None!143)))

(assert (= (and d!22983 c!14321) b!87113))

(assert (= (and d!22983 (not c!14321)) b!87114))

(assert (= (and b!87114 c!14322) b!87115))

(assert (= (and b!87114 (not c!14322)) b!87116))

(declare-fun m!92423 () Bool)

(assert (=> b!87115 m!92423))

(assert (=> b!85851 d!22983))

(declare-fun d!22985 () Bool)

(declare-fun lt!41280 () Bool)

(assert (=> d!22985 (= lt!41280 (select (content!88 (t!5277 (toList!759 lt!40252))) lt!40171))))

(declare-fun e!56762 () Bool)

(assert (=> d!22985 (= lt!41280 e!56762)))

(declare-fun res!44719 () Bool)

(assert (=> d!22985 (=> (not res!44719) (not e!56762))))

(assert (=> d!22985 (= res!44719 ((_ is Cons!1548) (t!5277 (toList!759 lt!40252))))))

(assert (=> d!22985 (= (contains!764 (t!5277 (toList!759 lt!40252)) lt!40171) lt!41280)))

(declare-fun b!87117 () Bool)

(declare-fun e!56763 () Bool)

(assert (=> b!87117 (= e!56762 e!56763)))

(declare-fun res!44718 () Bool)

(assert (=> b!87117 (=> res!44718 e!56763)))

(assert (=> b!87117 (= res!44718 (= (h!2139 (t!5277 (toList!759 lt!40252))) lt!40171))))

(declare-fun b!87118 () Bool)

(assert (=> b!87118 (= e!56763 (contains!764 (t!5277 (t!5277 (toList!759 lt!40252))) lt!40171))))

(assert (= (and d!22985 res!44719) b!87117))

(assert (= (and b!87117 (not res!44718)) b!87118))

(assert (=> d!22985 m!92327))

(declare-fun m!92425 () Bool)

(assert (=> d!22985 m!92425))

(declare-fun m!92427 () Bool)

(assert (=> b!87118 m!92427))

(assert (=> b!86173 d!22985))

(assert (=> d!22289 d!22287))

(declare-fun d!22987 () Bool)

(assert (=> d!22987 (= (getValueByKey!139 lt!40251 (_1!1126 lt!40171)) (Some!144 (_2!1126 lt!40171)))))

(assert (=> d!22987 true))

(declare-fun _$22!422 () Unit!2533)

(assert (=> d!22987 (= (choose!508 lt!40251 (_1!1126 lt!40171) (_2!1126 lt!40171)) _$22!422)))

(declare-fun bs!3668 () Bool)

(assert (= bs!3668 d!22987))

(assert (=> bs!3668 m!89579))

(assert (=> d!22289 d!22987))

(declare-fun d!22989 () Bool)

(declare-fun res!44720 () Bool)

(declare-fun e!56764 () Bool)

(assert (=> d!22989 (=> res!44720 e!56764)))

(assert (=> d!22989 (= res!44720 (or ((_ is Nil!1549) lt!40251) ((_ is Nil!1549) (t!5277 lt!40251))))))

(assert (=> d!22989 (= (isStrictlySorted!293 lt!40251) e!56764)))

(declare-fun b!87119 () Bool)

(declare-fun e!56765 () Bool)

(assert (=> b!87119 (= e!56764 e!56765)))

(declare-fun res!44721 () Bool)

(assert (=> b!87119 (=> (not res!44721) (not e!56765))))

(assert (=> b!87119 (= res!44721 (bvslt (_1!1126 (h!2139 lt!40251)) (_1!1126 (h!2139 (t!5277 lt!40251)))))))

(declare-fun b!87120 () Bool)

(assert (=> b!87120 (= e!56765 (isStrictlySorted!293 (t!5277 lt!40251)))))

(assert (= (and d!22989 (not res!44720)) b!87119))

(assert (= (and b!87119 res!44721) b!87120))

(declare-fun m!92429 () Bool)

(assert (=> b!87120 m!92429))

(assert (=> d!22289 d!22989))

(declare-fun d!22991 () Bool)

(declare-fun lt!41281 () Bool)

(assert (=> d!22991 (= lt!41281 (select (content!88 (t!5277 (toList!759 lt!40241))) lt!40171))))

(declare-fun e!56766 () Bool)

(assert (=> d!22991 (= lt!41281 e!56766)))

(declare-fun res!44723 () Bool)

(assert (=> d!22991 (=> (not res!44723) (not e!56766))))

(assert (=> d!22991 (= res!44723 ((_ is Cons!1548) (t!5277 (toList!759 lt!40241))))))

(assert (=> d!22991 (= (contains!764 (t!5277 (toList!759 lt!40241)) lt!40171) lt!41281)))

(declare-fun b!87121 () Bool)

(declare-fun e!56767 () Bool)

(assert (=> b!87121 (= e!56766 e!56767)))

(declare-fun res!44722 () Bool)

(assert (=> b!87121 (=> res!44722 e!56767)))

(assert (=> b!87121 (= res!44722 (= (h!2139 (t!5277 (toList!759 lt!40241))) lt!40171))))

(declare-fun b!87122 () Bool)

(assert (=> b!87122 (= e!56767 (contains!764 (t!5277 (t!5277 (toList!759 lt!40241))) lt!40171))))

(assert (= (and d!22991 res!44723) b!87121))

(assert (= (and b!87121 (not res!44722)) b!87122))

(assert (=> d!22991 m!92373))

(declare-fun m!92431 () Bool)

(assert (=> d!22991 m!92431))

(declare-fun m!92433 () Bool)

(assert (=> b!87122 m!92433))

(assert (=> b!86119 d!22991))

(declare-fun d!22993 () Bool)

(declare-fun e!56769 () Bool)

(assert (=> d!22993 e!56769))

(declare-fun res!44724 () Bool)

(assert (=> d!22993 (=> res!44724 e!56769)))

(declare-fun lt!41284 () Bool)

(assert (=> d!22993 (= res!44724 (not lt!41284))))

(declare-fun lt!41285 () Bool)

(assert (=> d!22993 (= lt!41284 lt!41285)))

(declare-fun lt!41283 () Unit!2533)

(declare-fun e!56768 () Unit!2533)

(assert (=> d!22993 (= lt!41283 e!56768)))

(declare-fun c!14323 () Bool)

(assert (=> d!22993 (= c!14323 lt!41285)))

(assert (=> d!22993 (= lt!41285 (containsKey!143 (toList!759 lt!40630) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!22993 (= (contains!762 lt!40630 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41284)))

(declare-fun b!87123 () Bool)

(declare-fun lt!41282 () Unit!2533)

(assert (=> b!87123 (= e!56768 lt!41282)))

(assert (=> b!87123 (= lt!41282 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40630) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> b!87123 (isDefined!93 (getValueByKey!139 (toList!759 lt!40630) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87124 () Bool)

(declare-fun Unit!2598 () Unit!2533)

(assert (=> b!87124 (= e!56768 Unit!2598)))

(declare-fun b!87125 () Bool)

(assert (=> b!87125 (= e!56769 (isDefined!93 (getValueByKey!139 (toList!759 lt!40630) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22993 c!14323) b!87123))

(assert (= (and d!22993 (not c!14323)) b!87124))

(assert (= (and d!22993 (not res!44724)) b!87125))

(declare-fun m!92435 () Bool)

(assert (=> d!22993 m!92435))

(declare-fun m!92437 () Bool)

(assert (=> b!87123 m!92437))

(assert (=> b!87123 m!90325))

(assert (=> b!87123 m!90325))

(declare-fun m!92439 () Bool)

(assert (=> b!87123 m!92439))

(assert (=> b!87125 m!90325))

(assert (=> b!87125 m!90325))

(assert (=> b!87125 m!92439))

(assert (=> d!22269 d!22993))

(declare-fun b!87126 () Bool)

(declare-fun e!56770 () Option!145)

(assert (=> b!87126 (= e!56770 (Some!144 (_2!1126 (h!2139 lt!40629))))))

(declare-fun b!87128 () Bool)

(declare-fun e!56771 () Option!145)

(assert (=> b!87128 (= e!56771 (getValueByKey!139 (t!5277 lt!40629) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87127 () Bool)

(assert (=> b!87127 (= e!56770 e!56771)))

(declare-fun c!14325 () Bool)

(assert (=> b!87127 (= c!14325 (and ((_ is Cons!1548) lt!40629) (not (= (_1!1126 (h!2139 lt!40629)) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!22995 () Bool)

(declare-fun c!14324 () Bool)

(assert (=> d!22995 (= c!14324 (and ((_ is Cons!1548) lt!40629) (= (_1!1126 (h!2139 lt!40629)) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22995 (= (getValueByKey!139 lt!40629 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56770)))

(declare-fun b!87129 () Bool)

(assert (=> b!87129 (= e!56771 None!143)))

(assert (= (and d!22995 c!14324) b!87126))

(assert (= (and d!22995 (not c!14324)) b!87127))

(assert (= (and b!87127 c!14325) b!87128))

(assert (= (and b!87127 (not c!14325)) b!87129))

(declare-fun m!92441 () Bool)

(assert (=> b!87128 m!92441))

(assert (=> d!22269 d!22995))

(declare-fun d!22997 () Bool)

(assert (=> d!22997 (= (getValueByKey!139 lt!40629 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!41286 () Unit!2533)

(assert (=> d!22997 (= lt!41286 (choose!508 lt!40629 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun e!56772 () Bool)

(assert (=> d!22997 e!56772))

(declare-fun res!44725 () Bool)

(assert (=> d!22997 (=> (not res!44725) (not e!56772))))

(assert (=> d!22997 (= res!44725 (isStrictlySorted!293 lt!40629))))

(assert (=> d!22997 (= (lemmaContainsTupThenGetReturnValue!58 lt!40629 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41286)))

(declare-fun b!87130 () Bool)

(declare-fun res!44726 () Bool)

(assert (=> b!87130 (=> (not res!44726) (not e!56772))))

(assert (=> b!87130 (= res!44726 (containsKey!143 lt!40629 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87131 () Bool)

(assert (=> b!87131 (= e!56772 (contains!764 lt!40629 (tuple2!2233 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!22997 res!44725) b!87130))

(assert (= (and b!87130 res!44726) b!87131))

(assert (=> d!22997 m!90319))

(declare-fun m!92443 () Bool)

(assert (=> d!22997 m!92443))

(declare-fun m!92445 () Bool)

(assert (=> d!22997 m!92445))

(declare-fun m!92447 () Bool)

(assert (=> b!87130 m!92447))

(declare-fun m!92449 () Bool)

(assert (=> b!87131 m!92449))

(assert (=> d!22269 d!22997))

(declare-fun c!14326 () Bool)

(declare-fun b!87132 () Bool)

(declare-fun c!14327 () Bool)

(declare-fun e!56774 () List!1552)

(assert (=> b!87132 (= e!56774 (ite c!14326 (t!5277 (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (ite c!14327 (Cons!1548 (h!2139 (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (t!5277 (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))) Nil!1549)))))

(declare-fun b!87133 () Bool)

(declare-fun e!56776 () Bool)

(declare-fun lt!41287 () List!1552)

(assert (=> b!87133 (= e!56776 (contains!764 lt!41287 (tuple2!2233 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!87134 () Bool)

(declare-fun e!56775 () List!1552)

(declare-fun e!56773 () List!1552)

(assert (=> b!87134 (= e!56775 e!56773)))

(assert (=> b!87134 (= c!14326 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (= (_1!1126 (h!2139 (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!87135 () Bool)

(declare-fun res!44727 () Bool)

(assert (=> b!87135 (=> (not res!44727) (not e!56776))))

(assert (=> b!87135 (= res!44727 (containsKey!143 lt!41287 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun d!22999 () Bool)

(assert (=> d!22999 e!56776))

(declare-fun res!44728 () Bool)

(assert (=> d!22999 (=> (not res!44728) (not e!56776))))

(assert (=> d!22999 (= res!44728 (isStrictlySorted!293 lt!41287))))

(assert (=> d!22999 (= lt!41287 e!56775)))

(declare-fun c!14328 () Bool)

(assert (=> d!22999 (= c!14328 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (bvslt (_1!1126 (h!2139 (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!22999 (isStrictlySorted!293 (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!22999 (= (insertStrictlySorted!60 (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41287)))

(declare-fun bm!8298 () Bool)

(declare-fun call!8301 () List!1552)

(assert (=> bm!8298 (= call!8301 ($colon$colon!71 e!56774 (ite c!14328 (h!2139 (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (tuple2!2233 (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14329 () Bool)

(assert (=> bm!8298 (= c!14329 c!14328)))

(declare-fun bm!8299 () Bool)

(declare-fun call!8303 () List!1552)

(declare-fun call!8302 () List!1552)

(assert (=> bm!8299 (= call!8303 call!8302)))

(declare-fun b!87136 () Bool)

(assert (=> b!87136 (= e!56775 call!8301)))

(declare-fun b!87137 () Bool)

(declare-fun e!56777 () List!1552)

(assert (=> b!87137 (= e!56777 call!8303)))

(declare-fun b!87138 () Bool)

(assert (=> b!87138 (= e!56773 call!8302)))

(declare-fun b!87139 () Bool)

(assert (=> b!87139 (= e!56774 (insertStrictlySorted!60 (t!5277 (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87140 () Bool)

(assert (=> b!87140 (= e!56777 call!8303)))

(declare-fun b!87141 () Bool)

(assert (=> b!87141 (= c!14327 (and ((_ is Cons!1548) (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))) (bvsgt (_1!1126 (h!2139 (toList!759 (+!116 lt!40173 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))) (_1!1126 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> b!87141 (= e!56773 e!56777)))

(declare-fun bm!8300 () Bool)

(assert (=> bm!8300 (= call!8302 call!8301)))

(assert (= (and d!22999 c!14328) b!87136))

(assert (= (and d!22999 (not c!14328)) b!87134))

(assert (= (and b!87134 c!14326) b!87138))

(assert (= (and b!87134 (not c!14326)) b!87141))

(assert (= (and b!87141 c!14327) b!87140))

(assert (= (and b!87141 (not c!14327)) b!87137))

(assert (= (or b!87140 b!87137) bm!8299))

(assert (= (or b!87138 bm!8299) bm!8300))

(assert (= (or b!87136 bm!8300) bm!8298))

(assert (= (and bm!8298 c!14329) b!87139))

(assert (= (and bm!8298 (not c!14329)) b!87132))

(assert (= (and d!22999 res!44728) b!87135))

(assert (= (and b!87135 res!44727) b!87133))

(declare-fun m!92451 () Bool)

(assert (=> b!87135 m!92451))

(declare-fun m!92453 () Bool)

(assert (=> b!87139 m!92453))

(declare-fun m!92455 () Bool)

(assert (=> d!22999 m!92455))

(declare-fun m!92457 () Bool)

(assert (=> d!22999 m!92457))

(declare-fun m!92459 () Bool)

(assert (=> b!87133 m!92459))

(declare-fun m!92461 () Bool)

(assert (=> bm!8298 m!92461))

(assert (=> d!22269 d!22999))

(declare-fun d!23001 () Bool)

(declare-fun e!56779 () Bool)

(assert (=> d!23001 e!56779))

(declare-fun res!44729 () Bool)

(assert (=> d!23001 (=> res!44729 e!56779)))

(declare-fun lt!41290 () Bool)

(assert (=> d!23001 (= res!44729 (not lt!41290))))

(declare-fun lt!41291 () Bool)

(assert (=> d!23001 (= lt!41290 lt!41291)))

(declare-fun lt!41289 () Unit!2533)

(declare-fun e!56778 () Unit!2533)

(assert (=> d!23001 (= lt!41289 e!56778)))

(declare-fun c!14330 () Bool)

(assert (=> d!23001 (= c!14330 lt!41291)))

(assert (=> d!23001 (= lt!41291 (containsKey!143 (toList!759 lt!40581) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23001 (= (contains!762 lt!40581 #b0000000000000000000000000000000000000000000000000000000000000000) lt!41290)))

(declare-fun b!87142 () Bool)

(declare-fun lt!41288 () Unit!2533)

(assert (=> b!87142 (= e!56778 lt!41288)))

(assert (=> b!87142 (= lt!41288 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40581) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87142 (isDefined!93 (getValueByKey!139 (toList!759 lt!40581) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87143 () Bool)

(declare-fun Unit!2599 () Unit!2533)

(assert (=> b!87143 (= e!56778 Unit!2599)))

(declare-fun b!87144 () Bool)

(assert (=> b!87144 (= e!56779 (isDefined!93 (getValueByKey!139 (toList!759 lt!40581) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23001 c!14330) b!87142))

(assert (= (and d!23001 (not c!14330)) b!87143))

(assert (= (and d!23001 (not res!44729)) b!87144))

(declare-fun m!92463 () Bool)

(assert (=> d!23001 m!92463))

(declare-fun m!92465 () Bool)

(assert (=> b!87142 m!92465))

(declare-fun m!92467 () Bool)

(assert (=> b!87142 m!92467))

(assert (=> b!87142 m!92467))

(declare-fun m!92469 () Bool)

(assert (=> b!87142 m!92469))

(assert (=> b!87144 m!92467))

(assert (=> b!87144 m!92467))

(assert (=> b!87144 m!92469))

(assert (=> d!22223 d!23001))

(assert (=> d!22223 d!22079))

(assert (=> b!86124 d!22765))

(assert (=> b!86124 d!22767))

(declare-fun d!23003 () Bool)

(declare-fun e!56780 () Bool)

(assert (=> d!23003 e!56780))

(declare-fun res!44730 () Bool)

(assert (=> d!23003 (=> (not res!44730) (not e!56780))))

(declare-fun lt!41293 () ListLongMap!1487)

(assert (=> d!23003 (= res!44730 (contains!762 lt!41293 (_1!1126 (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))))))

(declare-fun lt!41292 () List!1552)

(assert (=> d!23003 (= lt!41293 (ListLongMap!1488 lt!41292))))

(declare-fun lt!41294 () Unit!2533)

(declare-fun lt!41295 () Unit!2533)

(assert (=> d!23003 (= lt!41294 lt!41295)))

(assert (=> d!23003 (= (getValueByKey!139 lt!41292 (_1!1126 (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))) (Some!144 (_2!1126 (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))))))

(assert (=> d!23003 (= lt!41295 (lemmaContainsTupThenGetReturnValue!58 lt!41292 (_1!1126 (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))) (_2!1126 (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))))))

(assert (=> d!23003 (= lt!41292 (insertStrictlySorted!60 (toList!759 (ite c!14049 call!8201 (ite c!14047 call!8204 call!8202))) (_1!1126 (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))) (_2!1126 (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))))))

(assert (=> d!23003 (= (+!116 (ite c!14049 call!8201 (ite c!14047 call!8204 call!8202)) (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))) lt!41293)))

(declare-fun b!87145 () Bool)

(declare-fun res!44731 () Bool)

(assert (=> b!87145 (=> (not res!44731) (not e!56780))))

(assert (=> b!87145 (= res!44731 (= (getValueByKey!139 (toList!759 lt!41293) (_1!1126 (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16)))))) (Some!144 (_2!1126 (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))))

(declare-fun b!87146 () Bool)

(assert (=> b!87146 (= e!56780 (contains!764 (toList!759 lt!41293) (ite (or c!14049 c!14047) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13870 c!13872) lt!40164 (zeroValue!2230 newMap!16))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13870 (ite c!13872 (minValue!2230 newMap!16) lt!40164) (minValue!2230 newMap!16))))))))

(assert (= (and d!23003 res!44730) b!87145))

(assert (= (and b!87145 res!44731) b!87146))

(declare-fun m!92471 () Bool)

(assert (=> d!23003 m!92471))

(declare-fun m!92473 () Bool)

(assert (=> d!23003 m!92473))

(declare-fun m!92475 () Bool)

(assert (=> d!23003 m!92475))

(declare-fun m!92477 () Bool)

(assert (=> d!23003 m!92477))

(declare-fun m!92479 () Bool)

(assert (=> b!87145 m!92479))

(declare-fun m!92481 () Bool)

(assert (=> b!87146 m!92481))

(assert (=> bm!8197 d!23003))

(assert (=> b!86062 d!22861))

(declare-fun d!23005 () Bool)

(declare-fun e!56781 () Bool)

(assert (=> d!23005 e!56781))

(declare-fun res!44732 () Bool)

(assert (=> d!23005 (=> (not res!44732) (not e!56781))))

(declare-fun lt!41297 () ListLongMap!1487)

(assert (=> d!23005 (= res!44732 (contains!762 lt!41297 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!41296 () List!1552)

(assert (=> d!23005 (= lt!41297 (ListLongMap!1488 lt!41296))))

(declare-fun lt!41298 () Unit!2533)

(declare-fun lt!41299 () Unit!2533)

(assert (=> d!23005 (= lt!41298 lt!41299)))

(assert (=> d!23005 (= (getValueByKey!139 lt!41296 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!23005 (= lt!41299 (lemmaContainsTupThenGetReturnValue!58 lt!41296 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!23005 (= lt!41296 (insertStrictlySorted!60 (toList!759 (map!1195 newMap!16)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!23005 (= (+!116 (map!1195 newMap!16) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!41297)))

(declare-fun b!87147 () Bool)

(declare-fun res!44733 () Bool)

(assert (=> b!87147 (=> (not res!44733) (not e!56781))))

(assert (=> b!87147 (= res!44733 (= (getValueByKey!139 (toList!759 lt!41297) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!87148 () Bool)

(assert (=> b!87148 (= e!56781 (contains!764 (toList!759 lt!41297) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!23005 res!44732) b!87147))

(assert (= (and b!87147 res!44733) b!87148))

(declare-fun m!92483 () Bool)

(assert (=> d!23005 m!92483))

(declare-fun m!92485 () Bool)

(assert (=> d!23005 m!92485))

(declare-fun m!92487 () Bool)

(assert (=> d!23005 m!92487))

(declare-fun m!92489 () Bool)

(assert (=> d!23005 m!92489))

(declare-fun m!92491 () Bool)

(assert (=> b!87147 m!92491))

(declare-fun m!92493 () Bool)

(assert (=> b!87148 m!92493))

(assert (=> b!86062 d!23005))

(assert (=> b!86062 d!22113))

(declare-fun d!23007 () Bool)

(assert (=> d!23007 (= (get!1216 (getValueByKey!139 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2652 (getValueByKey!139 (toList!759 lt!40284) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22137 d!23007))

(assert (=> d!22137 d!22767))

(declare-fun d!23009 () Bool)

(assert (=> d!23009 (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!41300 () Unit!2533)

(assert (=> d!23009 (= lt!41300 (choose!518 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!56782 () Bool)

(assert (=> d!23009 e!56782))

(declare-fun res!44734 () Bool)

(assert (=> d!23009 (=> (not res!44734) (not e!56782))))

(assert (=> d!23009 (= res!44734 (isStrictlySorted!293 (toList!759 lt!40443)))))

(assert (=> d!23009 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!41300)))

(declare-fun b!87149 () Bool)

(assert (=> b!87149 (= e!56782 (containsKey!143 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!23009 res!44734) b!87149))

(assert (=> d!23009 m!89623))

(assert (=> d!23009 m!89979))

(assert (=> d!23009 m!89979))

(assert (=> d!23009 m!90411))

(assert (=> d!23009 m!89623))

(declare-fun m!92495 () Bool)

(assert (=> d!23009 m!92495))

(declare-fun m!92497 () Bool)

(assert (=> d!23009 m!92497))

(assert (=> b!87149 m!89623))

(assert (=> b!87149 m!90407))

(assert (=> b!85975 d!23009))

(declare-fun d!23011 () Bool)

(assert (=> d!23011 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3669 () Bool)

(assert (= bs!3669 d!23011))

(assert (=> bs!3669 m!89979))

(declare-fun m!92499 () Bool)

(assert (=> bs!3669 m!92499))

(assert (=> b!85975 d!23011))

(declare-fun b!87150 () Bool)

(declare-fun e!56783 () Option!145)

(assert (=> b!87150 (= e!56783 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40443)))))))

(declare-fun b!87152 () Bool)

(declare-fun e!56784 () Option!145)

(assert (=> b!87152 (= e!56784 (getValueByKey!139 (t!5277 (toList!759 lt!40443)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!87151 () Bool)

(assert (=> b!87151 (= e!56783 e!56784)))

(declare-fun c!14332 () Bool)

(assert (=> b!87151 (= c!14332 (and ((_ is Cons!1548) (toList!759 lt!40443)) (not (= (_1!1126 (h!2139 (toList!759 lt!40443))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun c!14331 () Bool)

(declare-fun d!23013 () Bool)

(assert (=> d!23013 (= c!14331 (and ((_ is Cons!1548) (toList!759 lt!40443)) (= (_1!1126 (h!2139 (toList!759 lt!40443))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!23013 (= (getValueByKey!139 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56783)))

(declare-fun b!87153 () Bool)

(assert (=> b!87153 (= e!56784 None!143)))

(assert (= (and d!23013 c!14331) b!87150))

(assert (= (and d!23013 (not c!14331)) b!87151))

(assert (= (and b!87151 c!14332) b!87152))

(assert (= (and b!87151 (not c!14332)) b!87153))

(assert (=> b!87152 m!89623))

(declare-fun m!92501 () Bool)

(assert (=> b!87152 m!92501))

(assert (=> b!85975 d!23013))

(declare-fun d!23015 () Bool)

(assert (=> d!23015 (isDefined!93 (getValueByKey!139 (toList!759 lt!40286) (_1!1126 lt!40163)))))

(declare-fun lt!41301 () Unit!2533)

(assert (=> d!23015 (= lt!41301 (choose!518 (toList!759 lt!40286) (_1!1126 lt!40163)))))

(declare-fun e!56785 () Bool)

(assert (=> d!23015 e!56785))

(declare-fun res!44735 () Bool)

(assert (=> d!23015 (=> (not res!44735) (not e!56785))))

(assert (=> d!23015 (= res!44735 (isStrictlySorted!293 (toList!759 lt!40286)))))

(assert (=> d!23015 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40286) (_1!1126 lt!40163)) lt!41301)))

(declare-fun b!87154 () Bool)

(assert (=> b!87154 (= e!56785 (containsKey!143 (toList!759 lt!40286) (_1!1126 lt!40163)))))

(assert (= (and d!23015 res!44735) b!87154))

(assert (=> d!23015 m!89659))

(assert (=> d!23015 m!89659))

(assert (=> d!23015 m!89895))

(declare-fun m!92503 () Bool)

(assert (=> d!23015 m!92503))

(declare-fun m!92505 () Bool)

(assert (=> d!23015 m!92505))

(assert (=> b!87154 m!89891))

(assert (=> b!85706 d!23015))

(declare-fun d!23017 () Bool)

(assert (=> d!23017 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40286) (_1!1126 lt!40163))) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40286) (_1!1126 lt!40163)))))))

(declare-fun bs!3670 () Bool)

(assert (= bs!3670 d!23017))

(assert (=> bs!3670 m!89659))

(declare-fun m!92507 () Bool)

(assert (=> bs!3670 m!92507))

(assert (=> b!85706 d!23017))

(assert (=> b!85706 d!22171))

(assert (=> b!86076 d!22781))

(assert (=> b!86076 d!22217))

(declare-fun d!23019 () Bool)

(declare-fun res!44736 () Bool)

(declare-fun e!56786 () Bool)

(assert (=> d!23019 (=> res!44736 e!56786)))

(assert (=> d!23019 (= res!44736 (and ((_ is Cons!1548) (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (= (_1!1126 (h!2139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (=> d!23019 (= (containsKey!143 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) e!56786)))

(declare-fun b!87155 () Bool)

(declare-fun e!56787 () Bool)

(assert (=> b!87155 (= e!56786 e!56787)))

(declare-fun res!44737 () Bool)

(assert (=> b!87155 (=> (not res!44737) (not e!56787))))

(assert (=> b!87155 (= res!44737 (and (or (not ((_ is Cons!1548) (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (bvsle (_1!1126 (h!2139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))) ((_ is Cons!1548) (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (bvslt (_1!1126 (h!2139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(declare-fun b!87156 () Bool)

(assert (=> b!87156 (= e!56787 (containsKey!143 (t!5277 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (= (and d!23019 (not res!44736)) b!87155))

(assert (= (and b!87155 res!44737) b!87156))

(assert (=> b!87156 m!89417))

(declare-fun m!92509 () Bool)

(assert (=> b!87156 m!92509))

(assert (=> d!22207 d!23019))

(declare-fun b!87157 () Bool)

(declare-fun e!56790 () Bool)

(declare-fun call!8304 () Bool)

(assert (=> b!87157 (= e!56790 call!8304)))

(declare-fun b!87158 () Bool)

(declare-fun e!56789 () Bool)

(declare-fun e!56788 () Bool)

(assert (=> b!87158 (= e!56789 e!56788)))

(declare-fun res!44738 () Bool)

(assert (=> b!87158 (=> (not res!44738) (not e!56788))))

(declare-fun e!56791 () Bool)

(assert (=> b!87158 (= res!44738 (not e!56791))))

(declare-fun res!44739 () Bool)

(assert (=> b!87158 (=> (not res!44739) (not e!56791))))

(assert (=> b!87158 (= res!44739 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000)))))

(declare-fun d!23021 () Bool)

(declare-fun res!44740 () Bool)

(assert (=> d!23021 (=> res!44740 e!56789)))

(assert (=> d!23021 (= res!44740 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))))))

(assert (=> d!23021 (= (arrayNoDuplicates!0 (_keys!4010 (_2!1127 lt!40373)) #b00000000000000000000000000000000 Nil!1550) e!56789)))

(declare-fun b!87159 () Bool)

(assert (=> b!87159 (= e!56790 call!8304)))

(declare-fun b!87160 () Bool)

(assert (=> b!87160 (= e!56791 (contains!765 Nil!1550 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000)))))

(declare-fun b!87161 () Bool)

(assert (=> b!87161 (= e!56788 e!56790)))

(declare-fun c!14333 () Bool)

(assert (=> b!87161 (= c!14333 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000)))))

(declare-fun bm!8301 () Bool)

(assert (=> bm!8301 (= call!8304 (arrayNoDuplicates!0 (_keys!4010 (_2!1127 lt!40373)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14333 (Cons!1549 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000) Nil!1550) Nil!1550)))))

(assert (= (and d!23021 (not res!44740)) b!87158))

(assert (= (and b!87158 res!44739) b!87160))

(assert (= (and b!87158 res!44738) b!87161))

(assert (= (and b!87161 c!14333) b!87159))

(assert (= (and b!87161 (not c!14333)) b!87157))

(assert (= (or b!87159 b!87157) bm!8301))

(assert (=> b!87158 m!91427))

(assert (=> b!87158 m!91427))

(assert (=> b!87158 m!91437))

(assert (=> b!87160 m!91427))

(assert (=> b!87160 m!91427))

(declare-fun m!92511 () Bool)

(assert (=> b!87160 m!92511))

(assert (=> b!87161 m!91427))

(assert (=> b!87161 m!91427))

(assert (=> b!87161 m!91437))

(assert (=> bm!8301 m!91427))

(declare-fun m!92513 () Bool)

(assert (=> bm!8301 m!92513))

(assert (=> b!86117 d!23021))

(assert (=> b!85858 d!22745))

(declare-fun b!87162 () Bool)

(declare-fun e!56792 () Option!145)

(assert (=> b!87162 (= e!56792 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40554)))))))

(declare-fun b!87164 () Bool)

(declare-fun e!56793 () Option!145)

(assert (=> b!87164 (= e!56793 (getValueByKey!139 (t!5277 (toList!759 lt!40554)) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87163 () Bool)

(assert (=> b!87163 (= e!56792 e!56793)))

(declare-fun c!14335 () Bool)

(assert (=> b!87163 (= c!14335 (and ((_ is Cons!1548) (toList!759 lt!40554)) (not (= (_1!1126 (h!2139 (toList!759 lt!40554))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!23023 () Bool)

(declare-fun c!14334 () Bool)

(assert (=> d!23023 (= c!14334 (and ((_ is Cons!1548) (toList!759 lt!40554)) (= (_1!1126 (h!2139 (toList!759 lt!40554))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!23023 (= (getValueByKey!139 (toList!759 lt!40554) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56792)))

(declare-fun b!87165 () Bool)

(assert (=> b!87165 (= e!56793 None!143)))

(assert (= (and d!23023 c!14334) b!87162))

(assert (= (and d!23023 (not c!14334)) b!87163))

(assert (= (and b!87163 c!14335) b!87164))

(assert (= (and b!87163 (not c!14335)) b!87165))

(declare-fun m!92515 () Bool)

(assert (=> b!87164 m!92515))

(assert (=> b!85818 d!23023))

(assert (=> d!22323 d!22321))

(declare-fun d!23025 () Bool)

(assert (=> d!23025 (= (getValueByKey!139 lt!40260 (_1!1126 lt!40163)) (Some!144 (_2!1126 lt!40163)))))

(assert (=> d!23025 true))

(declare-fun _$22!423 () Unit!2533)

(assert (=> d!23025 (= (choose!508 lt!40260 (_1!1126 lt!40163) (_2!1126 lt!40163)) _$22!423)))

(declare-fun bs!3671 () Bool)

(assert (= bs!3671 d!23025))

(assert (=> bs!3671 m!89613))

(assert (=> d!22323 d!23025))

(declare-fun d!23027 () Bool)

(declare-fun res!44741 () Bool)

(declare-fun e!56794 () Bool)

(assert (=> d!23027 (=> res!44741 e!56794)))

(assert (=> d!23027 (= res!44741 (or ((_ is Nil!1549) lt!40260) ((_ is Nil!1549) (t!5277 lt!40260))))))

(assert (=> d!23027 (= (isStrictlySorted!293 lt!40260) e!56794)))

(declare-fun b!87166 () Bool)

(declare-fun e!56795 () Bool)

(assert (=> b!87166 (= e!56794 e!56795)))

(declare-fun res!44742 () Bool)

(assert (=> b!87166 (=> (not res!44742) (not e!56795))))

(assert (=> b!87166 (= res!44742 (bvslt (_1!1126 (h!2139 lt!40260)) (_1!1126 (h!2139 (t!5277 lt!40260)))))))

(declare-fun b!87167 () Bool)

(assert (=> b!87167 (= e!56795 (isStrictlySorted!293 (t!5277 lt!40260)))))

(assert (= (and d!23027 (not res!44741)) b!87166))

(assert (= (and b!87166 res!44742) b!87167))

(declare-fun m!92517 () Bool)

(assert (=> b!87167 m!92517))

(assert (=> d!22323 d!23027))

(declare-fun d!23029 () Bool)

(declare-fun lt!41302 () Bool)

(assert (=> d!23029 (= lt!41302 (select (content!88 lt!40255) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun e!56796 () Bool)

(assert (=> d!23029 (= lt!41302 e!56796)))

(declare-fun res!44744 () Bool)

(assert (=> d!23029 (=> (not res!44744) (not e!56796))))

(assert (=> d!23029 (= res!44744 ((_ is Cons!1548) lt!40255))))

(assert (=> d!23029 (= (contains!764 lt!40255 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))) lt!41302)))

(declare-fun b!87168 () Bool)

(declare-fun e!56797 () Bool)

(assert (=> b!87168 (= e!56796 e!56797)))

(declare-fun res!44743 () Bool)

(assert (=> b!87168 (=> res!44743 e!56797)))

(assert (=> b!87168 (= res!44743 (= (h!2139 lt!40255) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!87169 () Bool)

(assert (=> b!87169 (= e!56797 (contains!764 (t!5277 lt!40255) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(assert (= (and d!23029 res!44744) b!87168))

(assert (= (and b!87168 (not res!44743)) b!87169))

(declare-fun m!92519 () Bool)

(assert (=> d!23029 m!92519))

(declare-fun m!92521 () Bool)

(assert (=> d!23029 m!92521))

(declare-fun m!92523 () Bool)

(assert (=> b!87169 m!92523))

(assert (=> b!86082 d!23029))

(declare-fun b!87170 () Bool)

(declare-fun e!56799 () Bool)

(declare-fun e!56800 () Bool)

(assert (=> b!87170 (= e!56799 e!56800)))

(declare-fun c!14339 () Bool)

(assert (=> b!87170 (= c!14339 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!87171 () Bool)

(declare-fun e!56798 () Bool)

(assert (=> b!87171 (= e!56798 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87171 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!87172 () Bool)

(declare-fun lt!41304 () Unit!2533)

(declare-fun lt!41306 () Unit!2533)

(assert (=> b!87172 (= lt!41304 lt!41306)))

(declare-fun lt!41305 () (_ BitVec 64))

(declare-fun lt!41308 () V!3027)

(declare-fun lt!41303 () ListLongMap!1487)

(declare-fun lt!41307 () (_ BitVec 64))

(assert (=> b!87172 (not (contains!762 (+!116 lt!41303 (tuple2!2233 lt!41307 lt!41308)) lt!41305))))

(assert (=> b!87172 (= lt!41306 (addStillNotContains!33 lt!41303 lt!41307 lt!41308 lt!41305))))

(assert (=> b!87172 (= lt!41305 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!87172 (= lt!41308 (get!1212 (select (arr!1919 (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!87172 (= lt!41307 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!8305 () ListLongMap!1487)

(assert (=> b!87172 (= lt!41303 call!8305)))

(declare-fun e!56801 () ListLongMap!1487)

(assert (=> b!87172 (= e!56801 (+!116 call!8305 (tuple2!2233 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (get!1212 (select (arr!1919 (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!87173 () Bool)

(declare-fun e!56803 () ListLongMap!1487)

(assert (=> b!87173 (= e!56803 (ListLongMap!1488 Nil!1549))))

(declare-fun b!87175 () Bool)

(declare-fun e!56804 () Bool)

(assert (=> b!87175 (= e!56799 e!56804)))

(assert (=> b!87175 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun res!44748 () Bool)

(declare-fun lt!41309 () ListLongMap!1487)

(assert (=> b!87175 (= res!44748 (contains!762 lt!41309 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87175 (=> (not res!44748) (not e!56804))))

(declare-fun b!87176 () Bool)

(assert (=> b!87176 (= e!56800 (isEmpty!340 lt!41309))))

(declare-fun b!87177 () Bool)

(declare-fun e!56802 () Bool)

(assert (=> b!87177 (= e!56802 e!56799)))

(declare-fun c!14338 () Bool)

(assert (=> b!87177 (= c!14338 e!56798)))

(declare-fun res!44746 () Bool)

(assert (=> b!87177 (=> (not res!44746) (not e!56798))))

(assert (=> b!87177 (= res!44746 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!87178 () Bool)

(assert (=> b!87178 (= e!56801 call!8305)))

(declare-fun b!87179 () Bool)

(assert (=> b!87179 (= e!56803 e!56801)))

(declare-fun c!14336 () Bool)

(assert (=> b!87179 (= c!14336 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87180 () Bool)

(assert (=> b!87180 (= e!56800 (= lt!41309 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16))))))

(declare-fun bm!8302 () Bool)

(assert (=> bm!8302 (= call!8305 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16)))))

(declare-fun b!87181 () Bool)

(assert (=> b!87181 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> b!87181 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))))))))

(assert (=> b!87181 (= e!56804 (= (apply!82 lt!41309 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!23031 () Bool)

(assert (=> d!23031 e!56802))

(declare-fun res!44745 () Bool)

(assert (=> d!23031 (=> (not res!44745) (not e!56802))))

(assert (=> d!23031 (= res!44745 (not (contains!762 lt!41309 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!23031 (= lt!41309 e!56803)))

(declare-fun c!14337 () Bool)

(assert (=> d!23031 (= c!14337 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!23031 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!23031 (= (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (ite (or c!13870 c!13868) (_values!2321 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41309)))

(declare-fun b!87174 () Bool)

(declare-fun res!44747 () Bool)

(assert (=> b!87174 (=> (not res!44747) (not e!56802))))

(assert (=> b!87174 (= res!44747 (not (contains!762 lt!41309 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23031 c!14337) b!87173))

(assert (= (and d!23031 (not c!14337)) b!87179))

(assert (= (and b!87179 c!14336) b!87172))

(assert (= (and b!87179 (not c!14336)) b!87178))

(assert (= (or b!87172 b!87178) bm!8302))

(assert (= (and d!23031 res!44745) b!87174))

(assert (= (and b!87174 res!44747) b!87177))

(assert (= (and b!87177 res!44746) b!87171))

(assert (= (and b!87177 c!14338) b!87175))

(assert (= (and b!87177 (not c!14338)) b!87170))

(assert (= (and b!87175 res!44748) b!87181))

(assert (= (and b!87170 c!14339) b!87180))

(assert (= (and b!87170 (not c!14339)) b!87176))

(declare-fun b_lambda!3851 () Bool)

(assert (=> (not b_lambda!3851) (not b!87172)))

(assert (=> b!87172 t!5286))

(declare-fun b_and!5245 () Bool)

(assert (= b_and!5241 (and (=> t!5286 result!2931) b_and!5245)))

(assert (=> b!87172 t!5288))

(declare-fun b_and!5247 () Bool)

(assert (= b_and!5243 (and (=> t!5288 result!2933) b_and!5247)))

(declare-fun b_lambda!3853 () Bool)

(assert (=> (not b_lambda!3853) (not b!87181)))

(assert (=> b!87181 t!5286))

(declare-fun b_and!5249 () Bool)

(assert (= b_and!5245 (and (=> t!5286 result!2931) b_and!5249)))

(assert (=> b!87181 t!5288))

(declare-fun b_and!5251 () Bool)

(assert (= b_and!5247 (and (=> t!5288 result!2933) b_and!5251)))

(assert (=> b!87179 m!89941))

(assert (=> b!87179 m!89941))

(assert (=> b!87179 m!89961))

(assert (=> b!87171 m!89941))

(assert (=> b!87171 m!89941))

(assert (=> b!87171 m!89961))

(declare-fun m!92525 () Bool)

(assert (=> b!87180 m!92525))

(declare-fun m!92527 () Bool)

(assert (=> d!23031 m!92527))

(assert (=> d!23031 m!89885))

(assert (=> b!87175 m!89941))

(assert (=> b!87175 m!89941))

(declare-fun m!92529 () Bool)

(assert (=> b!87175 m!92529))

(assert (=> bm!8302 m!92525))

(declare-fun m!92531 () Bool)

(assert (=> b!87176 m!92531))

(assert (=> b!87172 m!90455))

(declare-fun m!92533 () Bool)

(assert (=> b!87172 m!92533))

(declare-fun m!92535 () Bool)

(assert (=> b!87172 m!92535))

(declare-fun m!92537 () Bool)

(assert (=> b!87172 m!92537))

(assert (=> b!87172 m!89941))

(assert (=> b!87172 m!89967))

(assert (=> b!87172 m!90455))

(assert (=> b!87172 m!89967))

(assert (=> b!87172 m!90457))

(assert (=> b!87172 m!92533))

(declare-fun m!92539 () Bool)

(assert (=> b!87172 m!92539))

(assert (=> b!87181 m!89941))

(declare-fun m!92541 () Bool)

(assert (=> b!87181 m!92541))

(assert (=> b!87181 m!90455))

(assert (=> b!87181 m!90455))

(assert (=> b!87181 m!89967))

(assert (=> b!87181 m!90457))

(assert (=> b!87181 m!89941))

(assert (=> b!87181 m!89967))

(declare-fun m!92543 () Bool)

(assert (=> b!87174 m!92543))

(assert (=> bm!8173 d!23031))

(declare-fun d!23033 () Bool)

(assert (=> d!23033 (= (apply!82 lt!40834 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1216 (getValueByKey!139 (toList!759 lt!40834) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3672 () Bool)

(assert (= bs!3672 d!23033))

(declare-fun m!92545 () Bool)

(assert (=> bs!3672 m!92545))

(assert (=> bs!3672 m!92545))

(declare-fun m!92547 () Bool)

(assert (=> bs!3672 m!92547))

(assert (=> b!86165 d!23033))

(declare-fun b!87182 () Bool)

(declare-fun e!56806 () (_ BitVec 32))

(declare-fun e!56805 () (_ BitVec 32))

(assert (=> b!87182 (= e!56806 e!56805)))

(declare-fun c!14341 () Bool)

(assert (=> b!87182 (= c!14341 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!8303 () Bool)

(declare-fun call!8306 () (_ BitVec 32))

(assert (=> bm!8303 (= call!8306 (arrayCountValidKeys!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!87183 () Bool)

(assert (=> b!87183 (= e!56805 (bvadd #b00000000000000000000000000000001 call!8306))))

(declare-fun b!87184 () Bool)

(assert (=> b!87184 (= e!56806 #b00000000000000000000000000000000)))

(declare-fun b!87185 () Bool)

(assert (=> b!87185 (= e!56805 call!8306)))

(declare-fun d!23035 () Bool)

(declare-fun lt!41310 () (_ BitVec 32))

(assert (=> d!23035 (and (bvsge lt!41310 #b00000000000000000000000000000000) (bvsle lt!41310 (bvsub (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!23035 (= lt!41310 e!56806)))

(declare-fun c!14340 () Bool)

(assert (=> d!23035 (= c!14340 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> d!23035 (and (bvsle #b00000000000000000000000000000000 (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> d!23035 (= (arrayCountValidKeys!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000 (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))) lt!41310)))

(assert (= (and d!23035 c!14340) b!87184))

(assert (= (and d!23035 (not c!14340)) b!87182))

(assert (= (and b!87182 c!14341) b!87183))

(assert (= (and b!87182 (not c!14341)) b!87185))

(assert (= (or b!87183 b!87185) bm!8303))

(assert (=> b!87182 m!92251))

(assert (=> b!87182 m!92251))

(assert (=> b!87182 m!92261))

(declare-fun m!92549 () Bool)

(assert (=> bm!8303 m!92549))

(assert (=> b!85837 d!23035))

(declare-fun b!87186 () Bool)

(declare-fun e!56807 () Option!145)

(assert (=> b!87186 (= e!56807 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40535)))))))

(declare-fun e!56808 () Option!145)

(declare-fun b!87188 () Bool)

(assert (=> b!87188 (= e!56808 (getValueByKey!139 (t!5277 (toList!759 lt!40535)) (_1!1126 (tuple2!2233 lt!40282 lt!40283))))))

(declare-fun b!87187 () Bool)

(assert (=> b!87187 (= e!56807 e!56808)))

(declare-fun c!14343 () Bool)

(assert (=> b!87187 (= c!14343 (and ((_ is Cons!1548) (toList!759 lt!40535)) (not (= (_1!1126 (h!2139 (toList!759 lt!40535))) (_1!1126 (tuple2!2233 lt!40282 lt!40283))))))))

(declare-fun c!14342 () Bool)

(declare-fun d!23037 () Bool)

(assert (=> d!23037 (= c!14342 (and ((_ is Cons!1548) (toList!759 lt!40535)) (= (_1!1126 (h!2139 (toList!759 lt!40535))) (_1!1126 (tuple2!2233 lt!40282 lt!40283)))))))

(assert (=> d!23037 (= (getValueByKey!139 (toList!759 lt!40535) (_1!1126 (tuple2!2233 lt!40282 lt!40283))) e!56807)))

(declare-fun b!87189 () Bool)

(assert (=> b!87189 (= e!56808 None!143)))

(assert (= (and d!23037 c!14342) b!87186))

(assert (= (and d!23037 (not c!14342)) b!87187))

(assert (= (and b!87187 c!14343) b!87188))

(assert (= (and b!87187 (not c!14343)) b!87189))

(declare-fun m!92551 () Bool)

(assert (=> b!87188 m!92551))

(assert (=> b!85804 d!23037))

(declare-fun b!87190 () Bool)

(declare-fun c!14344 () Bool)

(declare-fun e!56810 () List!1552)

(declare-fun c!14345 () Bool)

(assert (=> b!87190 (= e!56810 (ite c!14344 (t!5277 (t!5277 (toList!759 (+!116 lt!40169 lt!40171)))) (ite c!14345 (Cons!1548 (h!2139 (t!5277 (toList!759 (+!116 lt!40169 lt!40171)))) (t!5277 (t!5277 (toList!759 (+!116 lt!40169 lt!40171))))) Nil!1549)))))

(declare-fun b!87191 () Bool)

(declare-fun e!56812 () Bool)

(declare-fun lt!41311 () List!1552)

(assert (=> b!87191 (= e!56812 (contains!764 lt!41311 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!87192 () Bool)

(declare-fun e!56811 () List!1552)

(declare-fun e!56809 () List!1552)

(assert (=> b!87192 (= e!56811 e!56809)))

(assert (=> b!87192 (= c!14344 (and ((_ is Cons!1548) (t!5277 (toList!759 (+!116 lt!40169 lt!40171)))) (= (_1!1126 (h!2139 (t!5277 (toList!759 (+!116 lt!40169 lt!40171))))) (_1!1126 lt!40172))))))

(declare-fun b!87193 () Bool)

(declare-fun res!44749 () Bool)

(assert (=> b!87193 (=> (not res!44749) (not e!56812))))

(assert (=> b!87193 (= res!44749 (containsKey!143 lt!41311 (_1!1126 lt!40172)))))

(declare-fun d!23039 () Bool)

(assert (=> d!23039 e!56812))

(declare-fun res!44750 () Bool)

(assert (=> d!23039 (=> (not res!44750) (not e!56812))))

(assert (=> d!23039 (= res!44750 (isStrictlySorted!293 lt!41311))))

(assert (=> d!23039 (= lt!41311 e!56811)))

(declare-fun c!14346 () Bool)

(assert (=> d!23039 (= c!14346 (and ((_ is Cons!1548) (t!5277 (toList!759 (+!116 lt!40169 lt!40171)))) (bvslt (_1!1126 (h!2139 (t!5277 (toList!759 (+!116 lt!40169 lt!40171))))) (_1!1126 lt!40172))))))

(assert (=> d!23039 (isStrictlySorted!293 (t!5277 (toList!759 (+!116 lt!40169 lt!40171))))))

(assert (=> d!23039 (= (insertStrictlySorted!60 (t!5277 (toList!759 (+!116 lt!40169 lt!40171))) (_1!1126 lt!40172) (_2!1126 lt!40172)) lt!41311)))

(declare-fun bm!8304 () Bool)

(declare-fun call!8307 () List!1552)

(assert (=> bm!8304 (= call!8307 ($colon$colon!71 e!56810 (ite c!14346 (h!2139 (t!5277 (toList!759 (+!116 lt!40169 lt!40171)))) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172)))))))

(declare-fun c!14347 () Bool)

(assert (=> bm!8304 (= c!14347 c!14346)))

(declare-fun bm!8305 () Bool)

(declare-fun call!8309 () List!1552)

(declare-fun call!8308 () List!1552)

(assert (=> bm!8305 (= call!8309 call!8308)))

(declare-fun b!87194 () Bool)

(assert (=> b!87194 (= e!56811 call!8307)))

(declare-fun b!87195 () Bool)

(declare-fun e!56813 () List!1552)

(assert (=> b!87195 (= e!56813 call!8309)))

(declare-fun b!87196 () Bool)

(assert (=> b!87196 (= e!56809 call!8308)))

(declare-fun b!87197 () Bool)

(assert (=> b!87197 (= e!56810 (insertStrictlySorted!60 (t!5277 (t!5277 (toList!759 (+!116 lt!40169 lt!40171)))) (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(declare-fun b!87198 () Bool)

(assert (=> b!87198 (= e!56813 call!8309)))

(declare-fun b!87199 () Bool)

(assert (=> b!87199 (= c!14345 (and ((_ is Cons!1548) (t!5277 (toList!759 (+!116 lt!40169 lt!40171)))) (bvsgt (_1!1126 (h!2139 (t!5277 (toList!759 (+!116 lt!40169 lt!40171))))) (_1!1126 lt!40172))))))

(assert (=> b!87199 (= e!56809 e!56813)))

(declare-fun bm!8306 () Bool)

(assert (=> bm!8306 (= call!8308 call!8307)))

(assert (= (and d!23039 c!14346) b!87194))

(assert (= (and d!23039 (not c!14346)) b!87192))

(assert (= (and b!87192 c!14344) b!87196))

(assert (= (and b!87192 (not c!14344)) b!87199))

(assert (= (and b!87199 c!14345) b!87198))

(assert (= (and b!87199 (not c!14345)) b!87195))

(assert (= (or b!87198 b!87195) bm!8305))

(assert (= (or b!87196 bm!8305) bm!8306))

(assert (= (or b!87194 bm!8306) bm!8304))

(assert (= (and bm!8304 c!14347) b!87197))

(assert (= (and bm!8304 (not c!14347)) b!87190))

(assert (= (and d!23039 res!44750) b!87193))

(assert (= (and b!87193 res!44749) b!87191))

(declare-fun m!92553 () Bool)

(assert (=> b!87193 m!92553))

(declare-fun m!92555 () Bool)

(assert (=> b!87197 m!92555))

(declare-fun m!92557 () Bool)

(assert (=> d!23039 m!92557))

(assert (=> d!23039 m!92011))

(declare-fun m!92559 () Bool)

(assert (=> b!87191 m!92559))

(declare-fun m!92561 () Bool)

(assert (=> bm!8304 m!92561))

(assert (=> b!85676 d!23039))

(declare-fun d!23041 () Bool)

(declare-fun res!44751 () Bool)

(declare-fun e!56814 () Bool)

(assert (=> d!23041 (=> res!44751 e!56814)))

(assert (=> d!23041 (= res!44751 (or ((_ is Nil!1549) lt!40689) ((_ is Nil!1549) (t!5277 lt!40689))))))

(assert (=> d!23041 (= (isStrictlySorted!293 lt!40689) e!56814)))

(declare-fun b!87200 () Bool)

(declare-fun e!56815 () Bool)

(assert (=> b!87200 (= e!56814 e!56815)))

(declare-fun res!44752 () Bool)

(assert (=> b!87200 (=> (not res!44752) (not e!56815))))

(assert (=> b!87200 (= res!44752 (bvslt (_1!1126 (h!2139 lt!40689)) (_1!1126 (h!2139 (t!5277 lt!40689)))))))

(declare-fun b!87201 () Bool)

(assert (=> b!87201 (= e!56815 (isStrictlySorted!293 (t!5277 lt!40689)))))

(assert (= (and d!23041 (not res!44751)) b!87200))

(assert (= (and b!87200 res!44752) b!87201))

(declare-fun m!92563 () Bool)

(assert (=> b!87201 m!92563))

(assert (=> d!22303 d!23041))

(assert (=> d!22303 d!22419))

(declare-fun d!23043 () Bool)

(assert (=> d!23043 (isDefined!93 (getValueByKey!139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun lt!41312 () Unit!2533)

(assert (=> d!23043 (= lt!41312 (choose!518 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun e!56816 () Bool)

(assert (=> d!23043 e!56816))

(declare-fun res!44753 () Bool)

(assert (=> d!23043 (=> (not res!44753) (not e!56816))))

(assert (=> d!23043 (= res!44753 (isStrictlySorted!293 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))))

(assert (=> d!23043 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) lt!41312)))

(declare-fun b!87202 () Bool)

(assert (=> b!87202 (= e!56816 (containsKey!143 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (= (and d!23043 res!44753) b!87202))

(assert (=> d!23043 m!89417))

(assert (=> d!23043 m!90123))

(assert (=> d!23043 m!90123))

(assert (=> d!23043 m!90125))

(assert (=> d!23043 m!89417))

(declare-fun m!92565 () Bool)

(assert (=> d!23043 m!92565))

(declare-fun m!92567 () Bool)

(assert (=> d!23043 m!92567))

(assert (=> b!87202 m!89417))

(assert (=> b!87202 m!90119))

(assert (=> b!85834 d!23043))

(declare-fun d!23045 () Bool)

(assert (=> d!23045 (= (isDefined!93 (getValueByKey!139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))) (not (isEmpty!342 (getValueByKey!139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))))

(declare-fun bs!3673 () Bool)

(assert (= bs!3673 d!23045))

(assert (=> bs!3673 m!90123))

(declare-fun m!92569 () Bool)

(assert (=> bs!3673 m!92569))

(assert (=> b!85834 d!23045))

(declare-fun b!87203 () Bool)

(declare-fun e!56817 () Option!145)

(assert (=> b!87203 (= e!56817 (Some!144 (_2!1126 (h!2139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))))))

(declare-fun e!56818 () Option!145)

(declare-fun b!87205 () Bool)

(assert (=> b!87205 (= e!56818 (getValueByKey!139 (t!5277 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!87204 () Bool)

(assert (=> b!87204 (= e!56817 e!56818)))

(declare-fun c!14349 () Bool)

(assert (=> b!87204 (= c!14349 (and ((_ is Cons!1548) (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (not (= (_1!1126 (h!2139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))))

(declare-fun c!14348 () Bool)

(declare-fun d!23047 () Bool)

(assert (=> d!23047 (= c!14348 (and ((_ is Cons!1548) (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (= (_1!1126 (h!2139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (=> d!23047 (= (getValueByKey!139 (toList!759 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) e!56817)))

(declare-fun b!87206 () Bool)

(assert (=> b!87206 (= e!56818 None!143)))

(assert (= (and d!23047 c!14348) b!87203))

(assert (= (and d!23047 (not c!14348)) b!87204))

(assert (= (and b!87204 c!14349) b!87205))

(assert (= (and b!87204 (not c!14349)) b!87206))

(assert (=> b!87205 m!89417))

(declare-fun m!92571 () Bool)

(assert (=> b!87205 m!92571))

(assert (=> b!85834 d!23047))

(declare-fun d!23049 () Bool)

(declare-fun lt!41313 () Bool)

(assert (=> d!23049 (= lt!41313 (select (content!88 (toList!759 lt!40630)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun e!56819 () Bool)

(assert (=> d!23049 (= lt!41313 e!56819)))

(declare-fun res!44755 () Bool)

(assert (=> d!23049 (=> (not res!44755) (not e!56819))))

(assert (=> d!23049 (= res!44755 ((_ is Cons!1548) (toList!759 lt!40630)))))

(assert (=> d!23049 (= (contains!764 (toList!759 lt!40630) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!41313)))

(declare-fun b!87207 () Bool)

(declare-fun e!56820 () Bool)

(assert (=> b!87207 (= e!56819 e!56820)))

(declare-fun res!44754 () Bool)

(assert (=> b!87207 (=> res!44754 e!56820)))

(assert (=> b!87207 (= res!44754 (= (h!2139 (toList!759 lt!40630)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!87208 () Bool)

(assert (=> b!87208 (= e!56820 (contains!764 (t!5277 (toList!759 lt!40630)) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!23049 res!44755) b!87207))

(assert (= (and b!87207 (not res!44754)) b!87208))

(declare-fun m!92573 () Bool)

(assert (=> d!23049 m!92573))

(declare-fun m!92575 () Bool)

(assert (=> d!23049 m!92575))

(declare-fun m!92577 () Bool)

(assert (=> b!87208 m!92577))

(assert (=> b!85934 d!23049))

(declare-fun d!23051 () Bool)

(declare-fun lt!41314 () Bool)

(assert (=> d!23051 (= lt!41314 (select (content!88 (t!5277 (toList!759 lt!40248))) lt!40172))))

(declare-fun e!56821 () Bool)

(assert (=> d!23051 (= lt!41314 e!56821)))

(declare-fun res!44757 () Bool)

(assert (=> d!23051 (=> (not res!44757) (not e!56821))))

(assert (=> d!23051 (= res!44757 ((_ is Cons!1548) (t!5277 (toList!759 lt!40248))))))

(assert (=> d!23051 (= (contains!764 (t!5277 (toList!759 lt!40248)) lt!40172) lt!41314)))

(declare-fun b!87209 () Bool)

(declare-fun e!56822 () Bool)

(assert (=> b!87209 (= e!56821 e!56822)))

(declare-fun res!44756 () Bool)

(assert (=> b!87209 (=> res!44756 e!56822)))

(assert (=> b!87209 (= res!44756 (= (h!2139 (t!5277 (toList!759 lt!40248))) lt!40172))))

(declare-fun b!87210 () Bool)

(assert (=> b!87210 (= e!56822 (contains!764 (t!5277 (t!5277 (toList!759 lt!40248))) lt!40172))))

(assert (= (and d!23051 res!44757) b!87209))

(assert (= (and b!87209 (not res!44756)) b!87210))

(declare-fun m!92579 () Bool)

(assert (=> d!23051 m!92579))

(declare-fun m!92581 () Bool)

(assert (=> d!23051 m!92581))

(declare-fun m!92583 () Bool)

(assert (=> b!87210 m!92583))

(assert (=> b!86129 d!23051))

(declare-fun d!23053 () Bool)

(assert (=> d!23053 (= ($colon$colon!71 e!55887 (ite c!13926 (h!2139 (toList!759 lt!40169)) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171)))) (Cons!1548 (ite c!13926 (h!2139 (toList!759 lt!40169)) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))) e!55887))))

(assert (=> bm!8137 d!23053))

(declare-fun d!23055 () Bool)

(declare-fun e!56824 () Bool)

(assert (=> d!23055 e!56824))

(declare-fun res!44758 () Bool)

(assert (=> d!23055 (=> res!44758 e!56824)))

(declare-fun lt!41317 () Bool)

(assert (=> d!23055 (= res!44758 (not lt!41317))))

(declare-fun lt!41318 () Bool)

(assert (=> d!23055 (= lt!41317 lt!41318)))

(declare-fun lt!41316 () Unit!2533)

(declare-fun e!56823 () Unit!2533)

(assert (=> d!23055 (= lt!41316 e!56823)))

(declare-fun c!14350 () Bool)

(assert (=> d!23055 (= c!14350 lt!41318)))

(assert (=> d!23055 (= lt!41318 (containsKey!143 (toList!759 lt!40493) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23055 (= (contains!762 lt!40493 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41317)))

(declare-fun b!87211 () Bool)

(declare-fun lt!41315 () Unit!2533)

(assert (=> b!87211 (= e!56823 lt!41315)))

(assert (=> b!87211 (= lt!41315 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40493) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87211 (isDefined!93 (getValueByKey!139 (toList!759 lt!40493) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87212 () Bool)

(declare-fun Unit!2600 () Unit!2533)

(assert (=> b!87212 (= e!56823 Unit!2600)))

(declare-fun b!87213 () Bool)

(assert (=> b!87213 (= e!56824 (isDefined!93 (getValueByKey!139 (toList!759 lt!40493) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23055 c!14350) b!87211))

(assert (= (and d!23055 (not c!14350)) b!87212))

(assert (= (and d!23055 (not res!44758)) b!87213))

(declare-fun m!92585 () Bool)

(assert (=> d!23055 m!92585))

(declare-fun m!92587 () Bool)

(assert (=> b!87211 m!92587))

(assert (=> b!87211 m!90871))

(assert (=> b!87211 m!90871))

(declare-fun m!92589 () Bool)

(assert (=> b!87211 m!92589))

(assert (=> b!87213 m!90871))

(assert (=> b!87213 m!90871))

(assert (=> b!87213 m!92589))

(assert (=> bm!8148 d!23055))

(declare-fun d!23057 () Bool)

(assert (=> d!23057 (= (+!116 (getCurrentListMap!443 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (getCurrentListMap!443 (_keys!4010 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(assert (=> d!23057 true))

(declare-fun _$5!92 () Unit!2533)

(assert (=> d!23057 (= (choose!512 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3150 lt!40372) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164 (defaultEntry!2338 newMap!16)) _$5!92)))

(declare-fun bs!3674 () Bool)

(assert (= bs!3674 d!23057))

(assert (=> bs!3674 m!89683))

(assert (=> bs!3674 m!89683))

(assert (=> bs!3674 m!90115))

(assert (=> bs!3674 m!89717))

(assert (=> bs!3674 m!90117))

(assert (=> d!22205 d!23057))

(assert (=> d!22205 d!22459))

(declare-fun e!56826 () List!1552)

(declare-fun b!87214 () Bool)

(declare-fun c!14351 () Bool)

(declare-fun c!14352 () Bool)

(assert (=> b!87214 (= e!56826 (ite c!14351 (t!5277 (t!5277 (toList!759 lt!40169))) (ite c!14352 (Cons!1548 (h!2139 (t!5277 (toList!759 lt!40169))) (t!5277 (t!5277 (toList!759 lt!40169)))) Nil!1549)))))

(declare-fun b!87215 () Bool)

(declare-fun e!56828 () Bool)

(declare-fun lt!41319 () List!1552)

(assert (=> b!87215 (= e!56828 (contains!764 lt!41319 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!87216 () Bool)

(declare-fun e!56827 () List!1552)

(declare-fun e!56825 () List!1552)

(assert (=> b!87216 (= e!56827 e!56825)))

(assert (=> b!87216 (= c!14351 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40169))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40169)))) (_1!1126 lt!40172))))))

(declare-fun b!87217 () Bool)

(declare-fun res!44759 () Bool)

(assert (=> b!87217 (=> (not res!44759) (not e!56828))))

(assert (=> b!87217 (= res!44759 (containsKey!143 lt!41319 (_1!1126 lt!40172)))))

(declare-fun d!23059 () Bool)

(assert (=> d!23059 e!56828))

(declare-fun res!44760 () Bool)

(assert (=> d!23059 (=> (not res!44760) (not e!56828))))

(assert (=> d!23059 (= res!44760 (isStrictlySorted!293 lt!41319))))

(assert (=> d!23059 (= lt!41319 e!56827)))

(declare-fun c!14353 () Bool)

(assert (=> d!23059 (= c!14353 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40169))) (bvslt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40169)))) (_1!1126 lt!40172))))))

(assert (=> d!23059 (isStrictlySorted!293 (t!5277 (toList!759 lt!40169)))))

(assert (=> d!23059 (= (insertStrictlySorted!60 (t!5277 (toList!759 lt!40169)) (_1!1126 lt!40172) (_2!1126 lt!40172)) lt!41319)))

(declare-fun call!8310 () List!1552)

(declare-fun bm!8307 () Bool)

(assert (=> bm!8307 (= call!8310 ($colon$colon!71 e!56826 (ite c!14353 (h!2139 (t!5277 (toList!759 lt!40169))) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172)))))))

(declare-fun c!14354 () Bool)

(assert (=> bm!8307 (= c!14354 c!14353)))

(declare-fun bm!8308 () Bool)

(declare-fun call!8312 () List!1552)

(declare-fun call!8311 () List!1552)

(assert (=> bm!8308 (= call!8312 call!8311)))

(declare-fun b!87218 () Bool)

(assert (=> b!87218 (= e!56827 call!8310)))

(declare-fun b!87219 () Bool)

(declare-fun e!56829 () List!1552)

(assert (=> b!87219 (= e!56829 call!8312)))

(declare-fun b!87220 () Bool)

(assert (=> b!87220 (= e!56825 call!8311)))

(declare-fun b!87221 () Bool)

(assert (=> b!87221 (= e!56826 (insertStrictlySorted!60 (t!5277 (t!5277 (toList!759 lt!40169))) (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(declare-fun b!87222 () Bool)

(assert (=> b!87222 (= e!56829 call!8312)))

(declare-fun b!87223 () Bool)

(assert (=> b!87223 (= c!14352 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40169))) (bvsgt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40169)))) (_1!1126 lt!40172))))))

(assert (=> b!87223 (= e!56825 e!56829)))

(declare-fun bm!8309 () Bool)

(assert (=> bm!8309 (= call!8311 call!8310)))

(assert (= (and d!23059 c!14353) b!87218))

(assert (= (and d!23059 (not c!14353)) b!87216))

(assert (= (and b!87216 c!14351) b!87220))

(assert (= (and b!87216 (not c!14351)) b!87223))

(assert (= (and b!87223 c!14352) b!87222))

(assert (= (and b!87223 (not c!14352)) b!87219))

(assert (= (or b!87222 b!87219) bm!8308))

(assert (= (or b!87220 bm!8308) bm!8309))

(assert (= (or b!87218 bm!8309) bm!8307))

(assert (= (and bm!8307 c!14354) b!87221))

(assert (= (and bm!8307 (not c!14354)) b!87214))

(assert (= (and d!23059 res!44760) b!87217))

(assert (= (and b!87217 res!44759) b!87215))

(declare-fun m!92591 () Bool)

(assert (=> b!87217 m!92591))

(declare-fun m!92593 () Bool)

(assert (=> b!87221 m!92593))

(declare-fun m!92595 () Bool)

(assert (=> d!23059 m!92595))

(assert (=> d!23059 m!90857))

(declare-fun m!92597 () Bool)

(assert (=> b!87215 m!92597))

(declare-fun m!92599 () Bool)

(assert (=> bm!8307 m!92599))

(assert (=> b!86015 d!23059))

(assert (=> b!85867 d!22949))

(declare-fun d!23061 () Bool)

(assert (=> d!23061 (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41320 () Unit!2533)

(assert (=> d!23061 (= lt!41320 (choose!518 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56830 () Bool)

(assert (=> d!23061 e!56830))

(declare-fun res!44761 () Bool)

(assert (=> d!23061 (=> (not res!44761) (not e!56830))))

(assert (=> d!23061 (= res!44761 (isStrictlySorted!293 (toList!759 lt!40443)))))

(assert (=> d!23061 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000) lt!41320)))

(declare-fun b!87224 () Bool)

(assert (=> b!87224 (= e!56830 (containsKey!143 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23061 res!44761) b!87224))

(assert (=> d!23061 m!89871))

(assert (=> d!23061 m!89871))

(assert (=> d!23061 m!90369))

(declare-fun m!92601 () Bool)

(assert (=> d!23061 m!92601))

(assert (=> d!23061 m!92497))

(assert (=> b!87224 m!90365))

(assert (=> b!85941 d!23061))

(declare-fun d!23063 () Bool)

(assert (=> d!23063 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40443) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3675 () Bool)

(assert (= bs!3675 d!23063))

(assert (=> bs!3675 m!89871))

(declare-fun m!92603 () Bool)

(assert (=> bs!3675 m!92603))

(assert (=> b!85941 d!23063))

(assert (=> b!85941 d!22437))

(declare-fun d!23065 () Bool)

(assert (=> d!23065 (= (apply!82 lt!40834 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1216 (getValueByKey!139 (toList!759 lt!40834) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3676 () Bool)

(assert (= bs!3676 d!23065))

(declare-fun m!92605 () Bool)

(assert (=> bs!3676 m!92605))

(assert (=> bs!3676 m!92605))

(declare-fun m!92607 () Bool)

(assert (=> bs!3676 m!92607))

(assert (=> b!86171 d!23065))

(assert (=> d!22175 d!22179))

(assert (=> d!22175 d!22181))

(declare-fun d!23067 () Bool)

(assert (=> d!23067 (not (contains!762 (+!116 lt!40278 (tuple2!2233 lt!40282 lt!40283)) lt!40280))))

(assert (=> d!23067 true))

(declare-fun _$36!313 () Unit!2533)

(assert (=> d!23067 (= (choose!510 lt!40278 lt!40282 lt!40283 lt!40280) _$36!313)))

(declare-fun bs!3677 () Bool)

(assert (= bs!3677 d!23067))

(assert (=> bs!3677 m!89637))

(assert (=> bs!3677 m!89637))

(assert (=> bs!3677 m!89645))

(assert (=> d!22175 d!23067))

(declare-fun d!23069 () Bool)

(declare-fun e!56832 () Bool)

(assert (=> d!23069 e!56832))

(declare-fun res!44762 () Bool)

(assert (=> d!23069 (=> res!44762 e!56832)))

(declare-fun lt!41323 () Bool)

(assert (=> d!23069 (= res!44762 (not lt!41323))))

(declare-fun lt!41324 () Bool)

(assert (=> d!23069 (= lt!41323 lt!41324)))

(declare-fun lt!41322 () Unit!2533)

(declare-fun e!56831 () Unit!2533)

(assert (=> d!23069 (= lt!41322 e!56831)))

(declare-fun c!14355 () Bool)

(assert (=> d!23069 (= c!14355 lt!41324)))

(assert (=> d!23069 (= lt!41324 (containsKey!143 (toList!759 lt!40278) lt!40280))))

(assert (=> d!23069 (= (contains!762 lt!40278 lt!40280) lt!41323)))

(declare-fun b!87226 () Bool)

(declare-fun lt!41321 () Unit!2533)

(assert (=> b!87226 (= e!56831 lt!41321)))

(assert (=> b!87226 (= lt!41321 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40278) lt!40280))))

(assert (=> b!87226 (isDefined!93 (getValueByKey!139 (toList!759 lt!40278) lt!40280))))

(declare-fun b!87227 () Bool)

(declare-fun Unit!2601 () Unit!2533)

(assert (=> b!87227 (= e!56831 Unit!2601)))

(declare-fun b!87228 () Bool)

(assert (=> b!87228 (= e!56832 (isDefined!93 (getValueByKey!139 (toList!759 lt!40278) lt!40280)))))

(assert (= (and d!23069 c!14355) b!87226))

(assert (= (and d!23069 (not c!14355)) b!87227))

(assert (= (and d!23069 (not res!44762)) b!87228))

(declare-fun m!92609 () Bool)

(assert (=> d!23069 m!92609))

(declare-fun m!92611 () Bool)

(assert (=> b!87226 m!92611))

(declare-fun m!92613 () Bool)

(assert (=> b!87226 m!92613))

(assert (=> b!87226 m!92613))

(declare-fun m!92615 () Bool)

(assert (=> b!87226 m!92615))

(assert (=> b!87228 m!92613))

(assert (=> b!87228 m!92613))

(assert (=> b!87228 m!92615))

(assert (=> d!22175 d!23069))

(assert (=> d!22141 d!22165))

(declare-fun d!23071 () Bool)

(declare-fun e!56835 () Bool)

(assert (=> d!23071 e!56835))

(declare-fun res!44767 () Bool)

(assert (=> d!23071 (=> (not res!44767) (not e!56835))))

(declare-fun lt!41327 () SeekEntryResult!253)

(assert (=> d!23071 (= res!44767 ((_ is Found!253) lt!41327))))

(assert (=> d!23071 (= lt!41327 (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(assert (=> d!23071 true))

(declare-fun _$33!72 () Unit!2533)

(assert (=> d!23071 (= (choose!509 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)) _$33!72)))

(declare-fun b!87233 () Bool)

(declare-fun res!44768 () Bool)

(assert (=> b!87233 (=> (not res!44768) (not e!56835))))

(assert (=> b!87233 (= res!44768 (inRange!0 (index!3150 lt!41327) (mask!6366 newMap!16)))))

(declare-fun b!87234 () Bool)

(assert (=> b!87234 (= e!56835 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3150 lt!41327)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (= (and d!23071 res!44767) b!87233))

(assert (= (and b!87233 res!44768) b!87234))

(assert (=> d!23071 m!89417))

(assert (=> d!23071 m!89697))

(declare-fun m!92617 () Bool)

(assert (=> b!87233 m!92617))

(declare-fun m!92619 () Bool)

(assert (=> b!87234 m!92619))

(assert (=> d!22141 d!23071))

(assert (=> d!22141 d!22459))

(declare-fun b!87235 () Bool)

(declare-fun e!56837 () (_ BitVec 32))

(declare-fun e!56836 () (_ BitVec 32))

(assert (=> b!87235 (= e!56837 e!56836)))

(declare-fun c!14357 () Bool)

(assert (=> b!87235 (= c!14357 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!8310 () Bool)

(declare-fun call!8313 () (_ BitVec 32))

(assert (=> bm!8310 (= call!8313 (arrayCountValidKeys!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2162 (_keys!4010 newMap!16))))))

(declare-fun b!87236 () Bool)

(assert (=> b!87236 (= e!56836 (bvadd #b00000000000000000000000000000001 call!8313))))

(declare-fun b!87237 () Bool)

(assert (=> b!87237 (= e!56837 #b00000000000000000000000000000000)))

(declare-fun b!87238 () Bool)

(assert (=> b!87238 (= e!56836 call!8313)))

(declare-fun d!23073 () Bool)

(declare-fun lt!41328 () (_ BitVec 32))

(assert (=> d!23073 (and (bvsge lt!41328 #b00000000000000000000000000000000) (bvsle lt!41328 (bvsub (size!2162 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!23073 (= lt!41328 e!56837)))

(declare-fun c!14356 () Bool)

(assert (=> d!23073 (= c!14356 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!23073 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 (_keys!4010 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2162 (_keys!4010 newMap!16)) (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!23073 (= (arrayCountValidKeys!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 (_keys!4010 newMap!16))) lt!41328)))

(assert (= (and d!23073 c!14356) b!87237))

(assert (= (and d!23073 (not c!14356)) b!87235))

(assert (= (and b!87235 c!14357) b!87236))

(assert (= (and b!87235 (not c!14357)) b!87238))

(assert (= (or b!87236 b!87238) bm!8310))

(assert (=> b!87235 m!91711))

(assert (=> b!87235 m!91711))

(assert (=> b!87235 m!92131))

(declare-fun m!92621 () Bool)

(assert (=> bm!8310 m!92621))

(assert (=> bm!8152 d!23073))

(declare-fun d!23075 () Bool)

(declare-fun lt!41329 () Bool)

(assert (=> d!23075 (= lt!41329 (select (content!88 (toList!759 lt!40803)) (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun e!56838 () Bool)

(assert (=> d!23075 (= lt!41329 e!56838)))

(declare-fun res!44770 () Bool)

(assert (=> d!23075 (=> (not res!44770) (not e!56838))))

(assert (=> d!23075 (= res!44770 ((_ is Cons!1548) (toList!759 lt!40803)))))

(assert (=> d!23075 (= (contains!764 (toList!759 lt!40803) (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!41329)))

(declare-fun b!87239 () Bool)

(declare-fun e!56839 () Bool)

(assert (=> b!87239 (= e!56838 e!56839)))

(declare-fun res!44769 () Bool)

(assert (=> b!87239 (=> res!44769 e!56839)))

(assert (=> b!87239 (= res!44769 (= (h!2139 (toList!759 lt!40803)) (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87240 () Bool)

(assert (=> b!87240 (= e!56839 (contains!764 (t!5277 (toList!759 lt!40803)) (ite c!13870 (ite c!13872 (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40164) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40164)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (= (and d!23075 res!44770) b!87239))

(assert (= (and b!87239 (not res!44769)) b!87240))

(declare-fun m!92623 () Bool)

(assert (=> d!23075 m!92623))

(declare-fun m!92625 () Bool)

(assert (=> d!23075 m!92625))

(declare-fun m!92627 () Bool)

(assert (=> b!87240 m!92627))

(assert (=> b!86121 d!23075))

(declare-fun d!23077 () Bool)

(assert (=> d!23077 (= (get!1216 (getValueByKey!139 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2652 (getValueByKey!139 (toList!759 lt!40443) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22155 d!23077))

(assert (=> d!22155 d!23013))

(assert (=> b!85833 d!22835))

(assert (=> b!85833 d!22151))

(declare-fun bm!8311 () Bool)

(declare-fun call!8320 () ListLongMap!1487)

(declare-fun call!8317 () ListLongMap!1487)

(assert (=> bm!8311 (= call!8320 call!8317)))

(declare-fun b!87241 () Bool)

(declare-fun e!56849 () ListLongMap!1487)

(declare-fun call!8315 () ListLongMap!1487)

(assert (=> b!87241 (= e!56849 call!8315)))

(declare-fun b!87242 () Bool)

(declare-fun e!56851 () ListLongMap!1487)

(declare-fun call!8318 () ListLongMap!1487)

(assert (=> b!87242 (= e!56851 call!8318)))

(declare-fun b!87243 () Bool)

(declare-fun e!56847 () Bool)

(declare-fun e!56850 () Bool)

(assert (=> b!87243 (= e!56847 e!56850)))

(declare-fun res!44776 () Bool)

(assert (=> b!87243 (=> (not res!44776) (not e!56850))))

(declare-fun lt!41334 () ListLongMap!1487)

(assert (=> b!87243 (= res!44776 (contains!762 lt!41334 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87243 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8312 () Bool)

(assert (=> bm!8312 (= call!8318 call!8320)))

(declare-fun b!87244 () Bool)

(declare-fun e!56846 () Unit!2533)

(declare-fun Unit!2602 () Unit!2533)

(assert (=> b!87244 (= e!56846 Unit!2602)))

(declare-fun b!87245 () Bool)

(declare-fun e!56843 () Bool)

(declare-fun e!56840 () Bool)

(assert (=> b!87245 (= e!56843 e!56840)))

(declare-fun res!44774 () Bool)

(declare-fun call!8319 () Bool)

(assert (=> b!87245 (= res!44774 call!8319)))

(assert (=> b!87245 (=> (not res!44774) (not e!56840))))

(declare-fun b!87247 () Bool)

(declare-fun e!56852 () Bool)

(declare-fun call!8316 () Bool)

(assert (=> b!87247 (= e!56852 (not call!8316))))

(declare-fun b!87248 () Bool)

(declare-fun c!14362 () Bool)

(assert (=> b!87248 (= c!14362 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!87248 (= e!56849 e!56851)))

(declare-fun c!14359 () Bool)

(declare-fun c!14361 () Bool)

(declare-fun bm!8313 () Bool)

(declare-fun call!8314 () ListLongMap!1487)

(assert (=> bm!8313 (= call!8314 (+!116 (ite c!14361 call!8317 (ite c!14359 call!8320 call!8318)) (ite (or c!14361 c!14359) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!87249 () Bool)

(declare-fun e!56841 () ListLongMap!1487)

(assert (=> b!87249 (= e!56841 (+!116 call!8314 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun bm!8314 () Bool)

(assert (=> bm!8314 (= call!8319 (contains!762 lt!41334 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87250 () Bool)

(assert (=> b!87250 (= e!56851 call!8315)))

(declare-fun b!87251 () Bool)

(declare-fun res!44779 () Bool)

(declare-fun e!56844 () Bool)

(assert (=> b!87251 (=> (not res!44779) (not e!56844))))

(assert (=> b!87251 (= res!44779 e!56843)))

(declare-fun c!14363 () Bool)

(assert (=> b!87251 (= c!14363 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!87252 () Bool)

(assert (=> b!87252 (= e!56841 e!56849)))

(assert (=> b!87252 (= c!14359 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87253 () Bool)

(assert (=> b!87253 (= e!56844 e!56852)))

(declare-fun c!14358 () Bool)

(assert (=> b!87253 (= c!14358 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8315 () Bool)

(assert (=> bm!8315 (= call!8315 call!8314)))

(declare-fun d!23079 () Bool)

(assert (=> d!23079 e!56844))

(declare-fun res!44778 () Bool)

(assert (=> d!23079 (=> (not res!44778) (not e!56844))))

(assert (=> d!23079 (= res!44778 (or (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))))

(declare-fun lt!41348 () ListLongMap!1487)

(assert (=> d!23079 (= lt!41334 lt!41348)))

(declare-fun lt!41330 () Unit!2533)

(assert (=> d!23079 (= lt!41330 e!56846)))

(declare-fun c!14360 () Bool)

(declare-fun e!56848 () Bool)

(assert (=> d!23079 (= c!14360 e!56848)))

(declare-fun res!44772 () Bool)

(assert (=> d!23079 (=> (not res!44772) (not e!56848))))

(assert (=> d!23079 (= res!44772 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!23079 (= lt!41348 e!56841)))

(assert (=> d!23079 (= c!14361 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23079 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!23079 (= (getCurrentListMap!443 (_keys!4010 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41334)))

(declare-fun b!87246 () Bool)

(assert (=> b!87246 (= e!56843 (not call!8319))))

(declare-fun b!87254 () Bool)

(declare-fun lt!41338 () Unit!2533)

(assert (=> b!87254 (= e!56846 lt!41338)))

(declare-fun lt!41347 () ListLongMap!1487)

(assert (=> b!87254 (= lt!41347 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41331 () (_ BitVec 64))

(assert (=> b!87254 (= lt!41331 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41349 () (_ BitVec 64))

(assert (=> b!87254 (= lt!41349 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41341 () Unit!2533)

(assert (=> b!87254 (= lt!41341 (addStillContains!58 lt!41347 lt!41331 (zeroValue!2230 newMap!16) lt!41349))))

(assert (=> b!87254 (contains!762 (+!116 lt!41347 (tuple2!2233 lt!41331 (zeroValue!2230 newMap!16))) lt!41349)))

(declare-fun lt!41337 () Unit!2533)

(assert (=> b!87254 (= lt!41337 lt!41341)))

(declare-fun lt!41343 () ListLongMap!1487)

(assert (=> b!87254 (= lt!41343 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41346 () (_ BitVec 64))

(assert (=> b!87254 (= lt!41346 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41345 () (_ BitVec 64))

(assert (=> b!87254 (= lt!41345 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41339 () Unit!2533)

(assert (=> b!87254 (= lt!41339 (addApplyDifferent!58 lt!41343 lt!41346 (minValue!2230 newMap!16) lt!41345))))

(assert (=> b!87254 (= (apply!82 (+!116 lt!41343 (tuple2!2233 lt!41346 (minValue!2230 newMap!16))) lt!41345) (apply!82 lt!41343 lt!41345))))

(declare-fun lt!41350 () Unit!2533)

(assert (=> b!87254 (= lt!41350 lt!41339)))

(declare-fun lt!41336 () ListLongMap!1487)

(assert (=> b!87254 (= lt!41336 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41342 () (_ BitVec 64))

(assert (=> b!87254 (= lt!41342 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41333 () (_ BitVec 64))

(assert (=> b!87254 (= lt!41333 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41344 () Unit!2533)

(assert (=> b!87254 (= lt!41344 (addApplyDifferent!58 lt!41336 lt!41342 (zeroValue!2230 newMap!16) lt!41333))))

(assert (=> b!87254 (= (apply!82 (+!116 lt!41336 (tuple2!2233 lt!41342 (zeroValue!2230 newMap!16))) lt!41333) (apply!82 lt!41336 lt!41333))))

(declare-fun lt!41335 () Unit!2533)

(assert (=> b!87254 (= lt!41335 lt!41344)))

(declare-fun lt!41340 () ListLongMap!1487)

(assert (=> b!87254 (= lt!41340 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41351 () (_ BitVec 64))

(assert (=> b!87254 (= lt!41351 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41332 () (_ BitVec 64))

(assert (=> b!87254 (= lt!41332 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!87254 (= lt!41338 (addApplyDifferent!58 lt!41340 lt!41351 (minValue!2230 newMap!16) lt!41332))))

(assert (=> b!87254 (= (apply!82 (+!116 lt!41340 (tuple2!2233 lt!41351 (minValue!2230 newMap!16))) lt!41332) (apply!82 lt!41340 lt!41332))))

(declare-fun b!87255 () Bool)

(declare-fun e!56842 () Bool)

(assert (=> b!87255 (= e!56842 (= (apply!82 lt!41334 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!87256 () Bool)

(assert (=> b!87256 (= e!56848 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87257 () Bool)

(assert (=> b!87257 (= e!56850 (= (apply!82 lt!41334 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87257 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))))))))

(assert (=> b!87257 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8316 () Bool)

(assert (=> bm!8316 (= call!8316 (contains!762 lt!41334 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87258 () Bool)

(assert (=> b!87258 (= e!56852 e!56842)))

(declare-fun res!44775 () Bool)

(assert (=> b!87258 (= res!44775 call!8316)))

(assert (=> b!87258 (=> (not res!44775) (not e!56842))))

(declare-fun b!87259 () Bool)

(declare-fun res!44773 () Bool)

(assert (=> b!87259 (=> (not res!44773) (not e!56844))))

(assert (=> b!87259 (= res!44773 e!56847)))

(declare-fun res!44771 () Bool)

(assert (=> b!87259 (=> res!44771 e!56847)))

(declare-fun e!56845 () Bool)

(assert (=> b!87259 (= res!44771 (not e!56845))))

(declare-fun res!44777 () Bool)

(assert (=> b!87259 (=> (not res!44777) (not e!56845))))

(assert (=> b!87259 (= res!44777 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 newMap!16))))))

(declare-fun bm!8317 () Bool)

(assert (=> bm!8317 (= call!8317 (getCurrentListMapNoExtraKeys!80 (_keys!4010 newMap!16) (array!4031 (store (arr!1919 (_values!2321 newMap!16)) (index!3150 lt!40372) (ValueCellFull!924 lt!40164)) (size!2163 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!87260 () Bool)

(assert (=> b!87260 (= e!56845 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87261 () Bool)

(assert (=> b!87261 (= e!56840 (= (apply!82 lt!41334 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(assert (= (and d!23079 c!14361) b!87249))

(assert (= (and d!23079 (not c!14361)) b!87252))

(assert (= (and b!87252 c!14359) b!87241))

(assert (= (and b!87252 (not c!14359)) b!87248))

(assert (= (and b!87248 c!14362) b!87250))

(assert (= (and b!87248 (not c!14362)) b!87242))

(assert (= (or b!87250 b!87242) bm!8312))

(assert (= (or b!87241 bm!8312) bm!8311))

(assert (= (or b!87241 b!87250) bm!8315))

(assert (= (or b!87249 bm!8311) bm!8317))

(assert (= (or b!87249 bm!8315) bm!8313))

(assert (= (and d!23079 res!44772) b!87256))

(assert (= (and d!23079 c!14360) b!87254))

(assert (= (and d!23079 (not c!14360)) b!87244))

(assert (= (and d!23079 res!44778) b!87259))

(assert (= (and b!87259 res!44777) b!87260))

(assert (= (and b!87259 (not res!44771)) b!87243))

(assert (= (and b!87243 res!44776) b!87257))

(assert (= (and b!87259 res!44773) b!87251))

(assert (= (and b!87251 c!14363) b!87245))

(assert (= (and b!87251 (not c!14363)) b!87246))

(assert (= (and b!87245 res!44774) b!87261))

(assert (= (or b!87245 b!87246) bm!8314))

(assert (= (and b!87251 res!44779) b!87253))

(assert (= (and b!87253 c!14358) b!87258))

(assert (= (and b!87253 (not c!14358)) b!87247))

(assert (= (and b!87258 res!44775) b!87255))

(assert (= (or b!87258 b!87247) bm!8316))

(declare-fun b_lambda!3855 () Bool)

(assert (=> (not b_lambda!3855) (not b!87257)))

(assert (=> b!87257 t!5286))

(declare-fun b_and!5253 () Bool)

(assert (= b_and!5249 (and (=> t!5286 result!2931) b_and!5253)))

(assert (=> b!87257 t!5288))

(declare-fun b_and!5255 () Bool)

(assert (= b_and!5251 (and (=> t!5288 result!2933) b_and!5255)))

(declare-fun m!92629 () Bool)

(assert (=> b!87255 m!92629))

(declare-fun m!92631 () Bool)

(assert (=> b!87254 m!92631))

(declare-fun m!92633 () Bool)

(assert (=> b!87254 m!92633))

(declare-fun m!92635 () Bool)

(assert (=> b!87254 m!92635))

(declare-fun m!92637 () Bool)

(assert (=> b!87254 m!92637))

(declare-fun m!92639 () Bool)

(assert (=> b!87254 m!92639))

(declare-fun m!92641 () Bool)

(assert (=> b!87254 m!92641))

(declare-fun m!92643 () Bool)

(assert (=> b!87254 m!92643))

(declare-fun m!92645 () Bool)

(assert (=> b!87254 m!92645))

(declare-fun m!92647 () Bool)

(assert (=> b!87254 m!92647))

(declare-fun m!92649 () Bool)

(assert (=> b!87254 m!92649))

(assert (=> b!87254 m!92645))

(assert (=> b!87254 m!89941))

(declare-fun m!92651 () Bool)

(assert (=> b!87254 m!92651))

(assert (=> b!87254 m!92639))

(declare-fun m!92653 () Bool)

(assert (=> b!87254 m!92653))

(assert (=> b!87254 m!92641))

(declare-fun m!92655 () Bool)

(assert (=> b!87254 m!92655))

(declare-fun m!92657 () Bool)

(assert (=> b!87254 m!92657))

(assert (=> b!87254 m!92631))

(declare-fun m!92659 () Bool)

(assert (=> b!87254 m!92659))

(declare-fun m!92661 () Bool)

(assert (=> b!87254 m!92661))

(declare-fun m!92663 () Bool)

(assert (=> b!87249 m!92663))

(declare-fun m!92665 () Bool)

(assert (=> b!87261 m!92665))

(declare-fun m!92667 () Bool)

(assert (=> bm!8314 m!92667))

(assert (=> b!87260 m!89941))

(assert (=> b!87260 m!89941))

(assert (=> b!87260 m!89961))

(assert (=> b!87257 m!89941))

(assert (=> b!87257 m!89941))

(declare-fun m!92669 () Bool)

(assert (=> b!87257 m!92669))

(declare-fun m!92671 () Bool)

(assert (=> b!87257 m!92671))

(assert (=> b!87257 m!89967))

(declare-fun m!92673 () Bool)

(assert (=> b!87257 m!92673))

(assert (=> b!87257 m!89967))

(assert (=> b!87257 m!92671))

(assert (=> bm!8317 m!92651))

(assert (=> d!23079 m!89885))

(declare-fun m!92675 () Bool)

(assert (=> bm!8313 m!92675))

(declare-fun m!92677 () Bool)

(assert (=> bm!8316 m!92677))

(assert (=> b!87243 m!89941))

(assert (=> b!87243 m!89941))

(declare-fun m!92679 () Bool)

(assert (=> b!87243 m!92679))

(assert (=> b!87256 m!89941))

(assert (=> b!87256 m!89941))

(assert (=> b!87256 m!89961))

(assert (=> b!85833 d!23079))

(declare-fun d!23081 () Bool)

(assert (=> d!23081 (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41352 () Unit!2533)

(assert (=> d!23081 (= lt!41352 (choose!518 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56853 () Bool)

(assert (=> d!23081 e!56853))

(declare-fun res!44780 () Bool)

(assert (=> d!23081 (=> (not res!44780) (not e!56853))))

(assert (=> d!23081 (= res!44780 (isStrictlySorted!293 (toList!759 lt!40443)))))

(assert (=> d!23081 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000) lt!41352)))

(declare-fun b!87262 () Bool)

(assert (=> b!87262 (= e!56853 (containsKey!143 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23081 res!44780) b!87262))

(assert (=> d!23081 m!90005))

(assert (=> d!23081 m!90005))

(assert (=> d!23081 m!90657))

(declare-fun m!92681 () Bool)

(assert (=> d!23081 m!92681))

(assert (=> d!23081 m!92497))

(assert (=> b!87262 m!90653))

(assert (=> b!86125 d!23081))

(declare-fun d!23083 () Bool)

(assert (=> d!23083 (= (isDefined!93 (getValueByKey!139 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!342 (getValueByKey!139 (toList!759 lt!40443) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3678 () Bool)

(assert (= bs!3678 d!23083))

(assert (=> bs!3678 m!90005))

(declare-fun m!92683 () Bool)

(assert (=> bs!3678 m!92683))

(assert (=> b!86125 d!23083))

(assert (=> b!86125 d!22953))

(declare-fun d!23085 () Bool)

(declare-fun c!14364 () Bool)

(assert (=> d!23085 (= c!14364 ((_ is Nil!1549) (toList!759 lt!40256)))))

(declare-fun e!56854 () (InoxSet tuple2!2232))

(assert (=> d!23085 (= (content!88 (toList!759 lt!40256)) e!56854)))

(declare-fun b!87263 () Bool)

(assert (=> b!87263 (= e!56854 ((as const (Array tuple2!2232 Bool)) false))))

(declare-fun b!87264 () Bool)

(assert (=> b!87264 (= e!56854 ((_ map or) (store ((as const (Array tuple2!2232 Bool)) false) (h!2139 (toList!759 lt!40256)) true) (content!88 (t!5277 (toList!759 lt!40256)))))))

(assert (= (and d!23085 c!14364) b!87263))

(assert (= (and d!23085 (not c!14364)) b!87264))

(declare-fun m!92685 () Bool)

(assert (=> b!87264 m!92685))

(declare-fun m!92687 () Bool)

(assert (=> b!87264 m!92687))

(assert (=> d!22347 d!23085))

(assert (=> b!85681 d!22965))

(assert (=> b!85681 d!22195))

(declare-fun d!23087 () Bool)

(assert (=> d!23087 (isDefined!93 (getValueByKey!139 (toList!759 lt!40252) (_1!1126 lt!40171)))))

(declare-fun lt!41353 () Unit!2533)

(assert (=> d!23087 (= lt!41353 (choose!518 (toList!759 lt!40252) (_1!1126 lt!40171)))))

(declare-fun e!56855 () Bool)

(assert (=> d!23087 e!56855))

(declare-fun res!44781 () Bool)

(assert (=> d!23087 (=> (not res!44781) (not e!56855))))

(assert (=> d!23087 (= res!44781 (isStrictlySorted!293 (toList!759 lt!40252)))))

(assert (=> d!23087 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40252) (_1!1126 lt!40171)) lt!41353)))

(declare-fun b!87265 () Bool)

(assert (=> b!87265 (= e!56855 (containsKey!143 (toList!759 lt!40252) (_1!1126 lt!40171)))))

(assert (= (and d!23087 res!44781) b!87265))

(assert (=> d!23087 m!89585))

(assert (=> d!23087 m!89585))

(assert (=> d!23087 m!90383))

(declare-fun m!92689 () Bool)

(assert (=> d!23087 m!92689))

(declare-fun m!92691 () Bool)

(assert (=> d!23087 m!92691))

(assert (=> b!87265 m!90379))

(assert (=> b!85956 d!23087))

(assert (=> b!85956 d!22369))

(assert (=> b!85956 d!22197))

(declare-fun b!87266 () Bool)

(declare-fun e!56858 () Bool)

(declare-fun call!8321 () Bool)

(assert (=> b!87266 (= e!56858 call!8321)))

(declare-fun b!87267 () Bool)

(declare-fun e!56857 () Bool)

(declare-fun e!56856 () Bool)

(assert (=> b!87267 (= e!56857 e!56856)))

(declare-fun res!44782 () Bool)

(assert (=> b!87267 (=> (not res!44782) (not e!56856))))

(declare-fun e!56859 () Bool)

(assert (=> b!87267 (= res!44782 (not e!56859))))

(declare-fun res!44783 () Bool)

(assert (=> b!87267 (=> (not res!44783) (not e!56859))))

(assert (=> b!87267 (= res!44783 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!23089 () Bool)

(declare-fun res!44784 () Bool)

(assert (=> d!23089 (=> res!44784 e!56857)))

(assert (=> d!23089 (= res!44784 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2162 (_keys!4010 newMap!16))))))

(assert (=> d!23089 (= (arrayNoDuplicates!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13948 (Cons!1549 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) Nil!1550) Nil!1550)) e!56857)))

(declare-fun b!87268 () Bool)

(assert (=> b!87268 (= e!56858 call!8321)))

(declare-fun b!87269 () Bool)

(assert (=> b!87269 (= e!56859 (contains!765 (ite c!13948 (Cons!1549 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) Nil!1550) Nil!1550) (select (arr!1918 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!87270 () Bool)

(assert (=> b!87270 (= e!56856 e!56858)))

(declare-fun c!14365 () Bool)

(assert (=> b!87270 (= c!14365 (validKeyInArray!0 (select (arr!1918 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!8318 () Bool)

(assert (=> bm!8318 (= call!8321 (arrayNoDuplicates!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!14365 (Cons!1549 (select (arr!1918 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!13948 (Cons!1549 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) Nil!1550) Nil!1550)) (ite c!13948 (Cons!1549 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) Nil!1550) Nil!1550))))))

(assert (= (and d!23089 (not res!44784)) b!87267))

(assert (= (and b!87267 res!44783) b!87269))

(assert (= (and b!87267 res!44782) b!87270))

(assert (= (and b!87270 c!14365) b!87268))

(assert (= (and b!87270 (not c!14365)) b!87266))

(assert (= (or b!87268 b!87266) bm!8318))

(assert (=> b!87267 m!91711))

(assert (=> b!87267 m!91711))

(assert (=> b!87267 m!92131))

(assert (=> b!87269 m!91711))

(assert (=> b!87269 m!91711))

(declare-fun m!92693 () Bool)

(assert (=> b!87269 m!92693))

(assert (=> b!87270 m!91711))

(assert (=> b!87270 m!91711))

(assert (=> b!87270 m!92131))

(assert (=> bm!8318 m!91711))

(declare-fun m!92695 () Bool)

(assert (=> bm!8318 m!92695))

(assert (=> bm!8153 d!23089))

(declare-fun b!87271 () Bool)

(declare-fun e!56860 () Option!145)

(assert (=> b!87271 (= e!56860 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40593)))))))

(declare-fun b!87273 () Bool)

(declare-fun e!56861 () Option!145)

(assert (=> b!87273 (= e!56861 (getValueByKey!139 (t!5277 (toList!759 lt!40593)) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87272 () Bool)

(assert (=> b!87272 (= e!56860 e!56861)))

(declare-fun c!14367 () Bool)

(assert (=> b!87272 (= c!14367 (and ((_ is Cons!1548) (toList!759 lt!40593)) (not (= (_1!1126 (h!2139 (toList!759 lt!40593))) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!23091 () Bool)

(declare-fun c!14366 () Bool)

(assert (=> d!23091 (= c!14366 (and ((_ is Cons!1548) (toList!759 lt!40593)) (= (_1!1126 (h!2139 (toList!759 lt!40593))) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!23091 (= (getValueByKey!139 (toList!759 lt!40593) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56860)))

(declare-fun b!87274 () Bool)

(assert (=> b!87274 (= e!56861 None!143)))

(assert (= (and d!23091 c!14366) b!87271))

(assert (= (and d!23091 (not c!14366)) b!87272))

(assert (= (and b!87272 c!14367) b!87273))

(assert (= (and b!87272 (not c!14367)) b!87274))

(declare-fun m!92697 () Bool)

(assert (=> b!87273 m!92697))

(assert (=> b!85897 d!23091))

(declare-fun lt!41354 () Bool)

(declare-fun d!23093 () Bool)

(assert (=> d!23093 (= lt!41354 (select (content!88 (toList!759 lt!40617)) (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun e!56862 () Bool)

(assert (=> d!23093 (= lt!41354 e!56862)))

(declare-fun res!44786 () Bool)

(assert (=> d!23093 (=> (not res!44786) (not e!56862))))

(assert (=> d!23093 (= res!44786 ((_ is Cons!1548) (toList!759 lt!40617)))))

(assert (=> d!23093 (= (contains!764 (toList!759 lt!40617) (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!41354)))

(declare-fun b!87275 () Bool)

(declare-fun e!56863 () Bool)

(assert (=> b!87275 (= e!56862 e!56863)))

(declare-fun res!44785 () Bool)

(assert (=> b!87275 (=> res!44785 e!56863)))

(assert (=> b!87275 (= res!44785 (= (h!2139 (toList!759 lt!40617)) (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!87276 () Bool)

(assert (=> b!87276 (= e!56863 (contains!764 (t!5277 (toList!759 lt!40617)) (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!23093 res!44786) b!87275))

(assert (= (and b!87275 (not res!44785)) b!87276))

(declare-fun m!92699 () Bool)

(assert (=> d!23093 m!92699))

(declare-fun m!92701 () Bool)

(assert (=> d!23093 m!92701))

(declare-fun m!92703 () Bool)

(assert (=> b!87276 m!92703))

(assert (=> b!85914 d!23093))

(declare-fun d!23095 () Bool)

(declare-fun res!44787 () Bool)

(declare-fun e!56864 () Bool)

(assert (=> d!23095 (=> res!44787 e!56864)))

(assert (=> d!23095 (= res!44787 (and ((_ is Cons!1548) (toList!759 lt!40284)) (= (_1!1126 (h!2139 (toList!759 lt!40284))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!23095 (= (containsKey!143 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000) e!56864)))

(declare-fun b!87277 () Bool)

(declare-fun e!56865 () Bool)

(assert (=> b!87277 (= e!56864 e!56865)))

(declare-fun res!44788 () Bool)

(assert (=> b!87277 (=> (not res!44788) (not e!56865))))

(assert (=> b!87277 (= res!44788 (and (or (not ((_ is Cons!1548) (toList!759 lt!40284))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40284))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1548) (toList!759 lt!40284)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40284))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!87278 () Bool)

(assert (=> b!87278 (= e!56865 (containsKey!143 (t!5277 (toList!759 lt!40284)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23095 (not res!44787)) b!87277))

(assert (= (and b!87277 res!44788) b!87278))

(declare-fun m!92705 () Bool)

(assert (=> b!87278 m!92705))

(assert (=> d!22307 d!23095))

(declare-fun d!23097 () Bool)

(declare-fun res!44789 () Bool)

(declare-fun e!56866 () Bool)

(assert (=> d!23097 (=> res!44789 e!56866)))

(assert (=> d!23097 (= res!44789 (and ((_ is Cons!1548) lt!40240) (= (_1!1126 (h!2139 lt!40240)) (_1!1126 lt!40171))))))

(assert (=> d!23097 (= (containsKey!143 lt!40240 (_1!1126 lt!40171)) e!56866)))

(declare-fun b!87279 () Bool)

(declare-fun e!56867 () Bool)

(assert (=> b!87279 (= e!56866 e!56867)))

(declare-fun res!44790 () Bool)

(assert (=> b!87279 (=> (not res!44790) (not e!56867))))

(assert (=> b!87279 (= res!44790 (and (or (not ((_ is Cons!1548) lt!40240)) (bvsle (_1!1126 (h!2139 lt!40240)) (_1!1126 lt!40171))) ((_ is Cons!1548) lt!40240) (bvslt (_1!1126 (h!2139 lt!40240)) (_1!1126 lt!40171))))))

(declare-fun b!87280 () Bool)

(assert (=> b!87280 (= e!56867 (containsKey!143 (t!5277 lt!40240) (_1!1126 lt!40171)))))

(assert (= (and d!23097 (not res!44789)) b!87279))

(assert (= (and b!87279 res!44790) b!87280))

(declare-fun m!92707 () Bool)

(assert (=> b!87280 m!92707))

(assert (=> b!85686 d!23097))

(declare-fun b!87281 () Bool)

(declare-fun e!56868 () Option!145)

(assert (=> b!87281 (= e!56868 (Some!144 (_2!1126 (h!2139 (t!5277 lt!40260)))))))

(declare-fun b!87283 () Bool)

(declare-fun e!56869 () Option!145)

(assert (=> b!87283 (= e!56869 (getValueByKey!139 (t!5277 (t!5277 lt!40260)) (_1!1126 lt!40163)))))

(declare-fun b!87282 () Bool)

(assert (=> b!87282 (= e!56868 e!56869)))

(declare-fun c!14369 () Bool)

(assert (=> b!87282 (= c!14369 (and ((_ is Cons!1548) (t!5277 lt!40260)) (not (= (_1!1126 (h!2139 (t!5277 lt!40260))) (_1!1126 lt!40163)))))))

(declare-fun d!23099 () Bool)

(declare-fun c!14368 () Bool)

(assert (=> d!23099 (= c!14368 (and ((_ is Cons!1548) (t!5277 lt!40260)) (= (_1!1126 (h!2139 (t!5277 lt!40260))) (_1!1126 lt!40163))))))

(assert (=> d!23099 (= (getValueByKey!139 (t!5277 lt!40260) (_1!1126 lt!40163)) e!56868)))

(declare-fun b!87284 () Bool)

(assert (=> b!87284 (= e!56869 None!143)))

(assert (= (and d!23099 c!14368) b!87281))

(assert (= (and d!23099 (not c!14368)) b!87282))

(assert (= (and b!87282 c!14369) b!87283))

(assert (= (and b!87282 (not c!14369)) b!87284))

(declare-fun m!92709 () Bool)

(assert (=> b!87283 m!92709))

(assert (=> b!86098 d!23099))

(assert (=> d!22315 d!22313))

(declare-fun d!23101 () Bool)

(assert (=> d!23101 (= (getValueByKey!139 lt!40255 (_1!1126 lt!40172)) (Some!144 (_2!1126 lt!40172)))))

(assert (=> d!23101 true))

(declare-fun _$22!424 () Unit!2533)

(assert (=> d!23101 (= (choose!508 lt!40255 (_1!1126 lt!40172) (_2!1126 lt!40172)) _$22!424)))

(declare-fun bs!3679 () Bool)

(assert (= bs!3679 d!23101))

(assert (=> bs!3679 m!89591))

(assert (=> d!22315 d!23101))

(declare-fun d!23103 () Bool)

(declare-fun res!44791 () Bool)

(declare-fun e!56870 () Bool)

(assert (=> d!23103 (=> res!44791 e!56870)))

(assert (=> d!23103 (= res!44791 (or ((_ is Nil!1549) lt!40255) ((_ is Nil!1549) (t!5277 lt!40255))))))

(assert (=> d!23103 (= (isStrictlySorted!293 lt!40255) e!56870)))

(declare-fun b!87285 () Bool)

(declare-fun e!56871 () Bool)

(assert (=> b!87285 (= e!56870 e!56871)))

(declare-fun res!44792 () Bool)

(assert (=> b!87285 (=> (not res!44792) (not e!56871))))

(assert (=> b!87285 (= res!44792 (bvslt (_1!1126 (h!2139 lt!40255)) (_1!1126 (h!2139 (t!5277 lt!40255)))))))

(declare-fun b!87286 () Bool)

(assert (=> b!87286 (= e!56871 (isStrictlySorted!293 (t!5277 lt!40255)))))

(assert (= (and d!23103 (not res!44791)) b!87285))

(assert (= (and b!87285 res!44792) b!87286))

(declare-fun m!92711 () Bool)

(assert (=> b!87286 m!92711))

(assert (=> d!22315 d!23103))

(declare-fun d!23105 () Bool)

(assert (=> d!23105 (= (apply!82 lt!40666 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1216 (getValueByKey!139 (toList!759 lt!40666) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3680 () Bool)

(assert (= bs!3680 d!23105))

(assert (=> bs!3680 m!91791))

(assert (=> bs!3680 m!91791))

(declare-fun m!92713 () Bool)

(assert (=> bs!3680 m!92713))

(assert (=> b!85992 d!23105))

(declare-fun d!23107 () Bool)

(declare-fun lt!41355 () Bool)

(assert (=> d!23107 (= lt!41355 (select (content!88 (toList!759 lt!40550)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun e!56872 () Bool)

(assert (=> d!23107 (= lt!41355 e!56872)))

(declare-fun res!44794 () Bool)

(assert (=> d!23107 (=> (not res!44794) (not e!56872))))

(assert (=> d!23107 (= res!44794 ((_ is Cons!1548) (toList!759 lt!40550)))))

(assert (=> d!23107 (= (contains!764 (toList!759 lt!40550) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!41355)))

(declare-fun b!87287 () Bool)

(declare-fun e!56873 () Bool)

(assert (=> b!87287 (= e!56872 e!56873)))

(declare-fun res!44793 () Bool)

(assert (=> b!87287 (=> res!44793 e!56873)))

(assert (=> b!87287 (= res!44793 (= (h!2139 (toList!759 lt!40550)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!87288 () Bool)

(assert (=> b!87288 (= e!56873 (contains!764 (t!5277 (toList!759 lt!40550)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))

(assert (= (and d!23107 res!44794) b!87287))

(assert (= (and b!87287 (not res!44793)) b!87288))

(declare-fun m!92715 () Bool)

(assert (=> d!23107 m!92715))

(declare-fun m!92717 () Bool)

(assert (=> d!23107 m!92717))

(declare-fun m!92719 () Bool)

(assert (=> b!87288 m!92719))

(assert (=> b!85817 d!23107))

(declare-fun d!23109 () Bool)

(assert (=> d!23109 (= (apply!82 (+!116 lt!40452 (tuple2!2233 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40454) (apply!82 lt!40452 lt!40454))))

(assert (=> d!23109 true))

(declare-fun _$34!840 () Unit!2533)

(assert (=> d!23109 (= (choose!515 lt!40452 lt!40455 (minValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40454) _$34!840)))

(declare-fun bs!3681 () Bool)

(assert (= bs!3681 d!23109))

(assert (=> bs!3681 m!89773))

(assert (=> bs!3681 m!89773))

(assert (=> bs!3681 m!89785))

(assert (=> bs!3681 m!89789))

(assert (=> d!22257 d!23109))

(declare-fun d!23111 () Bool)

(declare-fun e!56875 () Bool)

(assert (=> d!23111 e!56875))

(declare-fun res!44795 () Bool)

(assert (=> d!23111 (=> res!44795 e!56875)))

(declare-fun lt!41358 () Bool)

(assert (=> d!23111 (= res!44795 (not lt!41358))))

(declare-fun lt!41359 () Bool)

(assert (=> d!23111 (= lt!41358 lt!41359)))

(declare-fun lt!41357 () Unit!2533)

(declare-fun e!56874 () Unit!2533)

(assert (=> d!23111 (= lt!41357 e!56874)))

(declare-fun c!14370 () Bool)

(assert (=> d!23111 (= c!14370 lt!41359)))

(assert (=> d!23111 (= lt!41359 (containsKey!143 (toList!759 lt!40452) lt!40454))))

(assert (=> d!23111 (= (contains!762 lt!40452 lt!40454) lt!41358)))

(declare-fun b!87289 () Bool)

(declare-fun lt!41356 () Unit!2533)

(assert (=> b!87289 (= e!56874 lt!41356)))

(assert (=> b!87289 (= lt!41356 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40452) lt!40454))))

(assert (=> b!87289 (isDefined!93 (getValueByKey!139 (toList!759 lt!40452) lt!40454))))

(declare-fun b!87290 () Bool)

(declare-fun Unit!2603 () Unit!2533)

(assert (=> b!87290 (= e!56874 Unit!2603)))

(declare-fun b!87291 () Bool)

(assert (=> b!87291 (= e!56875 (isDefined!93 (getValueByKey!139 (toList!759 lt!40452) lt!40454)))))

(assert (= (and d!23111 c!14370) b!87289))

(assert (= (and d!23111 (not c!14370)) b!87290))

(assert (= (and d!23111 (not res!44795)) b!87291))

(declare-fun m!92721 () Bool)

(assert (=> d!23111 m!92721))

(declare-fun m!92723 () Bool)

(assert (=> b!87289 m!92723))

(assert (=> b!87289 m!90233))

(assert (=> b!87289 m!90233))

(declare-fun m!92725 () Bool)

(assert (=> b!87289 m!92725))

(assert (=> b!87291 m!90233))

(assert (=> b!87291 m!90233))

(assert (=> b!87291 m!92725))

(assert (=> d!22257 d!23111))

(assert (=> d!22257 d!22237))

(assert (=> d!22257 d!22259))

(assert (=> d!22257 d!22247))

(declare-fun d!23113 () Bool)

(declare-fun lt!41360 () Bool)

(assert (=> d!23113 (= lt!41360 (select (content!88 (toList!759 lt!40583)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun e!56876 () Bool)

(assert (=> d!23113 (= lt!41360 e!56876)))

(declare-fun res!44797 () Bool)

(assert (=> d!23113 (=> (not res!44797) (not e!56876))))

(assert (=> d!23113 (= res!44797 ((_ is Cons!1548) (toList!759 lt!40583)))))

(assert (=> d!23113 (= (contains!764 (toList!759 lt!40583) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!41360)))

(declare-fun b!87292 () Bool)

(declare-fun e!56877 () Bool)

(assert (=> b!87292 (= e!56876 e!56877)))

(declare-fun res!44796 () Bool)

(assert (=> b!87292 (=> res!44796 e!56877)))

(assert (=> b!87292 (= res!44796 (= (h!2139 (toList!759 lt!40583)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun b!87293 () Bool)

(assert (=> b!87293 (= e!56877 (contains!764 (t!5277 (toList!759 lt!40583)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!23113 res!44797) b!87292))

(assert (= (and b!87292 (not res!44796)) b!87293))

(declare-fun m!92727 () Bool)

(assert (=> d!23113 m!92727))

(declare-fun m!92729 () Bool)

(assert (=> d!23113 m!92729))

(declare-fun m!92731 () Bool)

(assert (=> b!87293 m!92731))

(assert (=> b!85870 d!23113))

(declare-fun d!23115 () Bool)

(assert (=> d!23115 (isDefined!93 (getValueByKey!139 (toList!759 lt!40261) (_1!1126 lt!40163)))))

(declare-fun lt!41361 () Unit!2533)

(assert (=> d!23115 (= lt!41361 (choose!518 (toList!759 lt!40261) (_1!1126 lt!40163)))))

(declare-fun e!56878 () Bool)

(assert (=> d!23115 e!56878))

(declare-fun res!44798 () Bool)

(assert (=> d!23115 (=> (not res!44798) (not e!56878))))

(assert (=> d!23115 (= res!44798 (isStrictlySorted!293 (toList!759 lt!40261)))))

(assert (=> d!23115 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40261) (_1!1126 lt!40163)) lt!41361)))

(declare-fun b!87294 () Bool)

(assert (=> b!87294 (= e!56878 (containsKey!143 (toList!759 lt!40261) (_1!1126 lt!40163)))))

(assert (= (and d!23115 res!44798) b!87294))

(assert (=> d!23115 m!89619))

(assert (=> d!23115 m!89619))

(assert (=> d!23115 m!90591))

(declare-fun m!92733 () Bool)

(assert (=> d!23115 m!92733))

(declare-fun m!92735 () Bool)

(assert (=> d!23115 m!92735))

(assert (=> b!87294 m!90587))

(assert (=> b!86093 d!23115))

(assert (=> b!86093 d!22527))

(assert (=> b!86093 d!22221))

(declare-fun d!23117 () Bool)

(declare-fun res!44799 () Bool)

(declare-fun e!56879 () Bool)

(assert (=> d!23117 (=> res!44799 e!56879)))

(assert (=> d!23117 (= res!44799 (and ((_ is Cons!1548) lt!40470) (= (_1!1126 (h!2139 lt!40470)) (_1!1126 lt!40172))))))

(assert (=> d!23117 (= (containsKey!143 lt!40470 (_1!1126 lt!40172)) e!56879)))

(declare-fun b!87295 () Bool)

(declare-fun e!56880 () Bool)

(assert (=> b!87295 (= e!56879 e!56880)))

(declare-fun res!44800 () Bool)

(assert (=> b!87295 (=> (not res!44800) (not e!56880))))

(assert (=> b!87295 (= res!44800 (and (or (not ((_ is Cons!1548) lt!40470)) (bvsle (_1!1126 (h!2139 lt!40470)) (_1!1126 lt!40172))) ((_ is Cons!1548) lt!40470) (bvslt (_1!1126 (h!2139 lt!40470)) (_1!1126 lt!40172))))))

(declare-fun b!87296 () Bool)

(assert (=> b!87296 (= e!56880 (containsKey!143 (t!5277 lt!40470) (_1!1126 lt!40172)))))

(assert (= (and d!23117 (not res!44799)) b!87295))

(assert (= (and b!87295 res!44800) b!87296))

(declare-fun m!92737 () Bool)

(assert (=> b!87296 m!92737))

(assert (=> b!85672 d!23117))

(declare-fun d!23119 () Bool)

(declare-fun e!56882 () Bool)

(assert (=> d!23119 e!56882))

(declare-fun res!44801 () Bool)

(assert (=> d!23119 (=> res!44801 e!56882)))

(declare-fun lt!41364 () Bool)

(assert (=> d!23119 (= res!44801 (not lt!41364))))

(declare-fun lt!41365 () Bool)

(assert (=> d!23119 (= lt!41364 lt!41365)))

(declare-fun lt!41363 () Unit!2533)

(declare-fun e!56881 () Unit!2533)

(assert (=> d!23119 (= lt!41363 e!56881)))

(declare-fun c!14371 () Bool)

(assert (=> d!23119 (= c!14371 lt!41365)))

(assert (=> d!23119 (= lt!41365 (containsKey!143 (toList!759 lt!40581) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!23119 (= (contains!762 lt!40581 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!41364)))

(declare-fun b!87297 () Bool)

(declare-fun lt!41362 () Unit!2533)

(assert (=> b!87297 (= e!56881 lt!41362)))

(assert (=> b!87297 (= lt!41362 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40581) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!87297 (isDefined!93 (getValueByKey!139 (toList!759 lt!40581) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!87298 () Bool)

(declare-fun Unit!2604 () Unit!2533)

(assert (=> b!87298 (= e!56881 Unit!2604)))

(declare-fun b!87299 () Bool)

(assert (=> b!87299 (= e!56882 (isDefined!93 (getValueByKey!139 (toList!759 lt!40581) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!23119 c!14371) b!87297))

(assert (= (and d!23119 (not c!14371)) b!87298))

(assert (= (and d!23119 (not res!44801)) b!87299))

(assert (=> d!23119 m!90163))

(declare-fun m!92739 () Bool)

(assert (=> d!23119 m!92739))

(assert (=> b!87297 m!90163))

(declare-fun m!92741 () Bool)

(assert (=> b!87297 m!92741))

(assert (=> b!87297 m!90163))

(declare-fun m!92743 () Bool)

(assert (=> b!87297 m!92743))

(assert (=> b!87297 m!92743))

(declare-fun m!92745 () Bool)

(assert (=> b!87297 m!92745))

(assert (=> b!87299 m!90163))

(assert (=> b!87299 m!92743))

(assert (=> b!87299 m!92743))

(assert (=> b!87299 m!92745))

(assert (=> b!85862 d!23119))

(declare-fun d!23121 () Bool)

(assert (=> d!23121 (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41366 () Unit!2533)

(assert (=> d!23121 (= lt!41366 (choose!518 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56883 () Bool)

(assert (=> d!23121 e!56883))

(declare-fun res!44802 () Bool)

(assert (=> d!23121 (=> (not res!44802) (not e!56883))))

(assert (=> d!23121 (= res!44802 (isStrictlySorted!293 (toList!759 lt!40284)))))

(assert (=> d!23121 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000) lt!41366)))

(declare-fun b!87300 () Bool)

(assert (=> b!87300 (= e!56883 (containsKey!143 (toList!759 lt!40284) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23121 res!44802) b!87300))

(assert (=> d!23121 m!90549))

(assert (=> d!23121 m!90549))

(assert (=> d!23121 m!90551))

(declare-fun m!92747 () Bool)

(assert (=> d!23121 m!92747))

(assert (=> d!23121 m!91699))

(assert (=> b!87300 m!90545))

(assert (=> b!86069 d!23121))

(assert (=> b!86069 d!22421))

(assert (=> b!86069 d!22423))

(declare-fun d!23123 () Bool)

(declare-fun e!56885 () Bool)

(assert (=> d!23123 e!56885))

(declare-fun res!44803 () Bool)

(assert (=> d!23123 (=> res!44803 e!56885)))

(declare-fun lt!41369 () Bool)

(assert (=> d!23123 (= res!44803 (not lt!41369))))

(declare-fun lt!41370 () Bool)

(assert (=> d!23123 (= lt!41369 lt!41370)))

(declare-fun lt!41368 () Unit!2533)

(declare-fun e!56884 () Unit!2533)

(assert (=> d!23123 (= lt!41368 e!56884)))

(declare-fun c!14372 () Bool)

(assert (=> d!23123 (= c!14372 lt!41370)))

(assert (=> d!23123 (= lt!41370 (containsKey!143 (toList!759 lt!40666) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!23123 (= (contains!762 lt!40666 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) lt!41369)))

(declare-fun b!87301 () Bool)

(declare-fun lt!41367 () Unit!2533)

(assert (=> b!87301 (= e!56884 lt!41367)))

(assert (=> b!87301 (= lt!41367 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40666) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87301 (isDefined!93 (getValueByKey!139 (toList!759 lt!40666) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87302 () Bool)

(declare-fun Unit!2605 () Unit!2533)

(assert (=> b!87302 (= e!56884 Unit!2605)))

(declare-fun b!87303 () Bool)

(assert (=> b!87303 (= e!56885 (isDefined!93 (getValueByKey!139 (toList!759 lt!40666) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!23123 c!14372) b!87301))

(assert (= (and d!23123 (not c!14372)) b!87302))

(assert (= (and d!23123 (not res!44803)) b!87303))

(assert (=> d!23123 m!89941))

(declare-fun m!92749 () Bool)

(assert (=> d!23123 m!92749))

(assert (=> b!87301 m!89941))

(declare-fun m!92751 () Bool)

(assert (=> b!87301 m!92751))

(assert (=> b!87301 m!89941))

(assert (=> b!87301 m!90813))

(assert (=> b!87301 m!90813))

(declare-fun m!92753 () Bool)

(assert (=> b!87301 m!92753))

(assert (=> b!87303 m!89941))

(assert (=> b!87303 m!90813))

(assert (=> b!87303 m!90813))

(assert (=> b!87303 m!92753))

(assert (=> b!85980 d!23123))

(assert (=> d!22231 d!22165))

(declare-fun b!87320 () Bool)

(declare-fun res!44813 () Bool)

(declare-fun e!56894 () Bool)

(assert (=> b!87320 (=> (not res!44813) (not e!56894))))

(declare-fun lt!41373 () SeekEntryResult!253)

(assert (=> b!87320 (= res!44813 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3152 lt!41373)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87321 () Bool)

(declare-fun res!44814 () Bool)

(assert (=> b!87321 (= res!44814 (= (select (arr!1918 (_keys!4010 newMap!16)) (index!3149 lt!41373)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56895 () Bool)

(assert (=> b!87321 (=> (not res!44814) (not e!56895))))

(declare-fun b!87322 () Bool)

(declare-fun res!44812 () Bool)

(assert (=> b!87322 (=> (not res!44812) (not e!56894))))

(declare-fun call!8326 () Bool)

(assert (=> b!87322 (= res!44812 call!8326)))

(declare-fun e!56897 () Bool)

(assert (=> b!87322 (= e!56897 e!56894)))

(declare-fun b!87323 () Bool)

(declare-fun call!8327 () Bool)

(assert (=> b!87323 (= e!56895 (not call!8327))))

(declare-fun bm!8324 () Bool)

(assert (=> bm!8324 (= call!8327 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!87324 () Bool)

(assert (=> b!87324 (= e!56897 ((_ is Undefined!253) lt!41373))))

(declare-fun b!87325 () Bool)

(assert (=> b!87325 (= e!56894 (not call!8327))))

(declare-fun d!23125 () Bool)

(declare-fun e!56896 () Bool)

(assert (=> d!23125 e!56896))

(declare-fun c!14377 () Bool)

(assert (=> d!23125 (= c!14377 ((_ is MissingZero!253) lt!41373))))

(assert (=> d!23125 (= lt!41373 (seekEntryOrOpen!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(assert (=> d!23125 true))

(declare-fun _$34!843 () Unit!2533)

(assert (=> d!23125 (= (choose!513 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)) _$34!843)))

(declare-fun bm!8323 () Bool)

(assert (=> bm!8323 (= call!8326 (inRange!0 (ite c!14377 (index!3149 lt!41373) (index!3152 lt!41373)) (mask!6366 newMap!16)))))

(declare-fun b!87326 () Bool)

(assert (=> b!87326 (= e!56896 e!56895)))

(declare-fun res!44815 () Bool)

(assert (=> b!87326 (= res!44815 call!8326)))

(assert (=> b!87326 (=> (not res!44815) (not e!56895))))

(declare-fun b!87327 () Bool)

(assert (=> b!87327 (= e!56896 e!56897)))

(declare-fun c!14378 () Bool)

(assert (=> b!87327 (= c!14378 ((_ is MissingVacant!253) lt!41373))))

(assert (= (and d!23125 c!14377) b!87326))

(assert (= (and d!23125 (not c!14377)) b!87327))

(assert (= (and b!87326 res!44815) b!87321))

(assert (= (and b!87321 res!44814) b!87323))

(assert (= (and b!87327 c!14378) b!87322))

(assert (= (and b!87327 (not c!14378)) b!87324))

(assert (= (and b!87322 res!44812) b!87320))

(assert (= (and b!87320 res!44813) b!87325))

(assert (= (or b!87326 b!87322) bm!8323))

(assert (= (or b!87323 b!87325) bm!8324))

(assert (=> d!23125 m!89417))

(assert (=> d!23125 m!89697))

(declare-fun m!92755 () Bool)

(assert (=> b!87320 m!92755))

(declare-fun m!92757 () Bool)

(assert (=> bm!8323 m!92757))

(assert (=> bm!8324 m!89417))

(assert (=> bm!8324 m!89695))

(declare-fun m!92759 () Bool)

(assert (=> b!87321 m!92759))

(assert (=> d!22231 d!23125))

(assert (=> d!22231 d!22459))

(declare-fun d!23127 () Bool)

(assert (=> d!23127 (= (inRange!0 (ite c!14025 (index!3150 lt!40767) (ite c!14022 (index!3149 lt!40778) (index!3152 lt!40778))) (mask!6366 newMap!16)) (and (bvsge (ite c!14025 (index!3150 lt!40767) (ite c!14022 (index!3149 lt!40778) (index!3152 lt!40778))) #b00000000000000000000000000000000) (bvslt (ite c!14025 (index!3150 lt!40767) (ite c!14022 (index!3149 lt!40778) (index!3152 lt!40778))) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8185 d!23127))

(declare-fun d!23129 () Bool)

(assert (=> d!23129 (= ($colon$colon!71 e!56071 (ite c!14012 (h!2139 (toList!759 lt!40169)) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172)))) (Cons!1548 (ite c!14012 (h!2139 (toList!759 lt!40169)) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))) e!56071))))

(assert (=> bm!8174 d!23129))

(declare-fun bm!8325 () Bool)

(declare-fun call!8334 () ListLongMap!1487)

(declare-fun call!8331 () ListLongMap!1487)

(assert (=> bm!8325 (= call!8334 call!8331)))

(declare-fun b!87328 () Bool)

(declare-fun e!56907 () ListLongMap!1487)

(declare-fun call!8329 () ListLongMap!1487)

(assert (=> b!87328 (= e!56907 call!8329)))

(declare-fun b!87329 () Bool)

(declare-fun e!56909 () ListLongMap!1487)

(declare-fun call!8332 () ListLongMap!1487)

(assert (=> b!87329 (= e!56909 call!8332)))

(declare-fun b!87330 () Bool)

(declare-fun e!56905 () Bool)

(declare-fun e!56908 () Bool)

(assert (=> b!87330 (= e!56905 e!56908)))

(declare-fun res!44821 () Bool)

(assert (=> b!87330 (=> (not res!44821) (not e!56908))))

(declare-fun lt!41378 () ListLongMap!1487)

(assert (=> b!87330 (= res!44821 (contains!762 lt!41378 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000)))))

(assert (=> b!87330 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))))))

(declare-fun bm!8326 () Bool)

(assert (=> bm!8326 (= call!8332 call!8334)))

(declare-fun b!87331 () Bool)

(declare-fun e!56904 () Unit!2533)

(declare-fun Unit!2606 () Unit!2533)

(assert (=> b!87331 (= e!56904 Unit!2606)))

(declare-fun b!87332 () Bool)

(declare-fun e!56901 () Bool)

(declare-fun e!56898 () Bool)

(assert (=> b!87332 (= e!56901 e!56898)))

(declare-fun res!44819 () Bool)

(declare-fun call!8333 () Bool)

(assert (=> b!87332 (= res!44819 call!8333)))

(assert (=> b!87332 (=> (not res!44819) (not e!56898))))

(declare-fun b!87334 () Bool)

(declare-fun e!56910 () Bool)

(declare-fun call!8330 () Bool)

(assert (=> b!87334 (= e!56910 (not call!8330))))

(declare-fun b!87335 () Bool)

(declare-fun c!14383 () Bool)

(assert (=> b!87335 (= c!14383 (and (not (= (bvand (extraKeys!2177 (_2!1127 lt!40373)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 (_2!1127 lt!40373)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!87335 (= e!56907 e!56909)))

(declare-fun bm!8327 () Bool)

(declare-fun call!8328 () ListLongMap!1487)

(declare-fun c!14380 () Bool)

(declare-fun c!14382 () Bool)

(assert (=> bm!8327 (= call!8328 (+!116 (ite c!14382 call!8331 (ite c!14380 call!8334 call!8332)) (ite (or c!14382 c!14380) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (_2!1127 lt!40373))) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (_2!1127 lt!40373))))))))

(declare-fun b!87336 () Bool)

(declare-fun e!56899 () ListLongMap!1487)

(assert (=> b!87336 (= e!56899 (+!116 call!8328 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (_2!1127 lt!40373)))))))

(declare-fun bm!8328 () Bool)

(assert (=> bm!8328 (= call!8333 (contains!762 lt!41378 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87337 () Bool)

(assert (=> b!87337 (= e!56909 call!8329)))

(declare-fun b!87338 () Bool)

(declare-fun res!44824 () Bool)

(declare-fun e!56902 () Bool)

(assert (=> b!87338 (=> (not res!44824) (not e!56902))))

(assert (=> b!87338 (= res!44824 e!56901)))

(declare-fun c!14384 () Bool)

(assert (=> b!87338 (= c!14384 (not (= (bvand (extraKeys!2177 (_2!1127 lt!40373)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!87339 () Bool)

(assert (=> b!87339 (= e!56899 e!56907)))

(assert (=> b!87339 (= c!14380 (and (not (= (bvand (extraKeys!2177 (_2!1127 lt!40373)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 (_2!1127 lt!40373)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87340 () Bool)

(assert (=> b!87340 (= e!56902 e!56910)))

(declare-fun c!14379 () Bool)

(assert (=> b!87340 (= c!14379 (not (= (bvand (extraKeys!2177 (_2!1127 lt!40373)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8329 () Bool)

(assert (=> bm!8329 (= call!8329 call!8328)))

(declare-fun d!23131 () Bool)

(assert (=> d!23131 e!56902))

(declare-fun res!44823 () Bool)

(assert (=> d!23131 (=> (not res!44823) (not e!56902))))

(assert (=> d!23131 (= res!44823 (or (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))))))))

(declare-fun lt!41392 () ListLongMap!1487)

(assert (=> d!23131 (= lt!41378 lt!41392)))

(declare-fun lt!41374 () Unit!2533)

(assert (=> d!23131 (= lt!41374 e!56904)))

(declare-fun c!14381 () Bool)

(declare-fun e!56906 () Bool)

(assert (=> d!23131 (= c!14381 e!56906)))

(declare-fun res!44817 () Bool)

(assert (=> d!23131 (=> (not res!44817) (not e!56906))))

(assert (=> d!23131 (= res!44817 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))))))

(assert (=> d!23131 (= lt!41392 e!56899)))

(assert (=> d!23131 (= c!14382 (and (not (= (bvand (extraKeys!2177 (_2!1127 lt!40373)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 (_2!1127 lt!40373)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23131 (validMask!0 (mask!6366 (_2!1127 lt!40373)))))

(assert (=> d!23131 (= (getCurrentListMap!443 (_keys!4010 (_2!1127 lt!40373)) (_values!2321 (_2!1127 lt!40373)) (mask!6366 (_2!1127 lt!40373)) (extraKeys!2177 (_2!1127 lt!40373)) (zeroValue!2230 (_2!1127 lt!40373)) (minValue!2230 (_2!1127 lt!40373)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1127 lt!40373))) lt!41378)))

(declare-fun b!87333 () Bool)

(assert (=> b!87333 (= e!56901 (not call!8333))))

(declare-fun b!87341 () Bool)

(declare-fun lt!41382 () Unit!2533)

(assert (=> b!87341 (= e!56904 lt!41382)))

(declare-fun lt!41391 () ListLongMap!1487)

(assert (=> b!87341 (= lt!41391 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (_2!1127 lt!40373)) (_values!2321 (_2!1127 lt!40373)) (mask!6366 (_2!1127 lt!40373)) (extraKeys!2177 (_2!1127 lt!40373)) (zeroValue!2230 (_2!1127 lt!40373)) (minValue!2230 (_2!1127 lt!40373)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1127 lt!40373))))))

(declare-fun lt!41375 () (_ BitVec 64))

(assert (=> b!87341 (= lt!41375 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41393 () (_ BitVec 64))

(assert (=> b!87341 (= lt!41393 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000))))

(declare-fun lt!41385 () Unit!2533)

(assert (=> b!87341 (= lt!41385 (addStillContains!58 lt!41391 lt!41375 (zeroValue!2230 (_2!1127 lt!40373)) lt!41393))))

(assert (=> b!87341 (contains!762 (+!116 lt!41391 (tuple2!2233 lt!41375 (zeroValue!2230 (_2!1127 lt!40373)))) lt!41393)))

(declare-fun lt!41381 () Unit!2533)

(assert (=> b!87341 (= lt!41381 lt!41385)))

(declare-fun lt!41387 () ListLongMap!1487)

(assert (=> b!87341 (= lt!41387 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (_2!1127 lt!40373)) (_values!2321 (_2!1127 lt!40373)) (mask!6366 (_2!1127 lt!40373)) (extraKeys!2177 (_2!1127 lt!40373)) (zeroValue!2230 (_2!1127 lt!40373)) (minValue!2230 (_2!1127 lt!40373)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1127 lt!40373))))))

(declare-fun lt!41390 () (_ BitVec 64))

(assert (=> b!87341 (= lt!41390 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41389 () (_ BitVec 64))

(assert (=> b!87341 (= lt!41389 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000))))

(declare-fun lt!41383 () Unit!2533)

(assert (=> b!87341 (= lt!41383 (addApplyDifferent!58 lt!41387 lt!41390 (minValue!2230 (_2!1127 lt!40373)) lt!41389))))

(assert (=> b!87341 (= (apply!82 (+!116 lt!41387 (tuple2!2233 lt!41390 (minValue!2230 (_2!1127 lt!40373)))) lt!41389) (apply!82 lt!41387 lt!41389))))

(declare-fun lt!41394 () Unit!2533)

(assert (=> b!87341 (= lt!41394 lt!41383)))

(declare-fun lt!41380 () ListLongMap!1487)

(assert (=> b!87341 (= lt!41380 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (_2!1127 lt!40373)) (_values!2321 (_2!1127 lt!40373)) (mask!6366 (_2!1127 lt!40373)) (extraKeys!2177 (_2!1127 lt!40373)) (zeroValue!2230 (_2!1127 lt!40373)) (minValue!2230 (_2!1127 lt!40373)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1127 lt!40373))))))

(declare-fun lt!41386 () (_ BitVec 64))

(assert (=> b!87341 (= lt!41386 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41377 () (_ BitVec 64))

(assert (=> b!87341 (= lt!41377 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000))))

(declare-fun lt!41388 () Unit!2533)

(assert (=> b!87341 (= lt!41388 (addApplyDifferent!58 lt!41380 lt!41386 (zeroValue!2230 (_2!1127 lt!40373)) lt!41377))))

(assert (=> b!87341 (= (apply!82 (+!116 lt!41380 (tuple2!2233 lt!41386 (zeroValue!2230 (_2!1127 lt!40373)))) lt!41377) (apply!82 lt!41380 lt!41377))))

(declare-fun lt!41379 () Unit!2533)

(assert (=> b!87341 (= lt!41379 lt!41388)))

(declare-fun lt!41384 () ListLongMap!1487)

(assert (=> b!87341 (= lt!41384 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (_2!1127 lt!40373)) (_values!2321 (_2!1127 lt!40373)) (mask!6366 (_2!1127 lt!40373)) (extraKeys!2177 (_2!1127 lt!40373)) (zeroValue!2230 (_2!1127 lt!40373)) (minValue!2230 (_2!1127 lt!40373)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1127 lt!40373))))))

(declare-fun lt!41395 () (_ BitVec 64))

(assert (=> b!87341 (= lt!41395 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41376 () (_ BitVec 64))

(assert (=> b!87341 (= lt!41376 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000))))

(assert (=> b!87341 (= lt!41382 (addApplyDifferent!58 lt!41384 lt!41395 (minValue!2230 (_2!1127 lt!40373)) lt!41376))))

(assert (=> b!87341 (= (apply!82 (+!116 lt!41384 (tuple2!2233 lt!41395 (minValue!2230 (_2!1127 lt!40373)))) lt!41376) (apply!82 lt!41384 lt!41376))))

(declare-fun b!87342 () Bool)

(declare-fun e!56900 () Bool)

(assert (=> b!87342 (= e!56900 (= (apply!82 lt!41378 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 (_2!1127 lt!40373))))))

(declare-fun b!87343 () Bool)

(assert (=> b!87343 (= e!56906 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000)))))

(declare-fun b!87344 () Bool)

(assert (=> b!87344 (= e!56908 (= (apply!82 lt!41378 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000)) (get!1212 (select (arr!1919 (_values!2321 (_2!1127 lt!40373))) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 (_2!1127 lt!40373)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87344 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_values!2321 (_2!1127 lt!40373)))))))

(assert (=> b!87344 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))))))

(declare-fun bm!8330 () Bool)

(assert (=> bm!8330 (= call!8330 (contains!762 lt!41378 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87345 () Bool)

(assert (=> b!87345 (= e!56910 e!56900)))

(declare-fun res!44820 () Bool)

(assert (=> b!87345 (= res!44820 call!8330)))

(assert (=> b!87345 (=> (not res!44820) (not e!56900))))

(declare-fun b!87346 () Bool)

(declare-fun res!44818 () Bool)

(assert (=> b!87346 (=> (not res!44818) (not e!56902))))

(assert (=> b!87346 (= res!44818 e!56905)))

(declare-fun res!44816 () Bool)

(assert (=> b!87346 (=> res!44816 e!56905)))

(declare-fun e!56903 () Bool)

(assert (=> b!87346 (= res!44816 (not e!56903))))

(declare-fun res!44822 () Bool)

(assert (=> b!87346 (=> (not res!44822) (not e!56903))))

(assert (=> b!87346 (= res!44822 (bvslt #b00000000000000000000000000000000 (size!2162 (_keys!4010 (_2!1127 lt!40373)))))))

(declare-fun bm!8331 () Bool)

(assert (=> bm!8331 (= call!8331 (getCurrentListMapNoExtraKeys!80 (_keys!4010 (_2!1127 lt!40373)) (_values!2321 (_2!1127 lt!40373)) (mask!6366 (_2!1127 lt!40373)) (extraKeys!2177 (_2!1127 lt!40373)) (zeroValue!2230 (_2!1127 lt!40373)) (minValue!2230 (_2!1127 lt!40373)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1127 lt!40373))))))

(declare-fun b!87347 () Bool)

(assert (=> b!87347 (= e!56903 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (_2!1127 lt!40373))) #b00000000000000000000000000000000)))))

(declare-fun b!87348 () Bool)

(assert (=> b!87348 (= e!56898 (= (apply!82 lt!41378 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 (_2!1127 lt!40373))))))

(assert (= (and d!23131 c!14382) b!87336))

(assert (= (and d!23131 (not c!14382)) b!87339))

(assert (= (and b!87339 c!14380) b!87328))

(assert (= (and b!87339 (not c!14380)) b!87335))

(assert (= (and b!87335 c!14383) b!87337))

(assert (= (and b!87335 (not c!14383)) b!87329))

(assert (= (or b!87337 b!87329) bm!8326))

(assert (= (or b!87328 bm!8326) bm!8325))

(assert (= (or b!87328 b!87337) bm!8329))

(assert (= (or b!87336 bm!8325) bm!8331))

(assert (= (or b!87336 bm!8329) bm!8327))

(assert (= (and d!23131 res!44817) b!87343))

(assert (= (and d!23131 c!14381) b!87341))

(assert (= (and d!23131 (not c!14381)) b!87331))

(assert (= (and d!23131 res!44823) b!87346))

(assert (= (and b!87346 res!44822) b!87347))

(assert (= (and b!87346 (not res!44816)) b!87330))

(assert (= (and b!87330 res!44821) b!87344))

(assert (= (and b!87346 res!44818) b!87338))

(assert (= (and b!87338 c!14384) b!87332))

(assert (= (and b!87338 (not c!14384)) b!87333))

(assert (= (and b!87332 res!44819) b!87348))

(assert (= (or b!87332 b!87333) bm!8328))

(assert (= (and b!87338 res!44824) b!87340))

(assert (= (and b!87340 c!14379) b!87345))

(assert (= (and b!87340 (not c!14379)) b!87334))

(assert (= (and b!87345 res!44820) b!87342))

(assert (= (or b!87345 b!87334) bm!8330))

(declare-fun b_lambda!3857 () Bool)

(assert (=> (not b_lambda!3857) (not b!87344)))

(declare-fun t!5291 () Bool)

(declare-fun tb!1705 () Bool)

(assert (=> (and b!85245 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 (_2!1127 lt!40373))) t!5291) tb!1705))

(declare-fun result!2935 () Bool)

(assert (=> tb!1705 (= result!2935 tp_is_empty!2535)))

(assert (=> b!87344 t!5291))

(declare-fun b_and!5257 () Bool)

(assert (= b_and!5253 (and (=> t!5291 result!2935) b_and!5257)))

(declare-fun tb!1707 () Bool)

(declare-fun t!5293 () Bool)

(assert (=> (and b!85246 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (_2!1127 lt!40373))) t!5293) tb!1707))

(declare-fun result!2937 () Bool)

(assert (= result!2937 result!2935))

(assert (=> b!87344 t!5293))

(declare-fun b_and!5259 () Bool)

(assert (= b_and!5255 (and (=> t!5293 result!2937) b_and!5259)))

(declare-fun m!92761 () Bool)

(assert (=> b!87342 m!92761))

(declare-fun m!92763 () Bool)

(assert (=> b!87341 m!92763))

(declare-fun m!92765 () Bool)

(assert (=> b!87341 m!92765))

(declare-fun m!92767 () Bool)

(assert (=> b!87341 m!92767))

(declare-fun m!92769 () Bool)

(assert (=> b!87341 m!92769))

(declare-fun m!92771 () Bool)

(assert (=> b!87341 m!92771))

(declare-fun m!92773 () Bool)

(assert (=> b!87341 m!92773))

(declare-fun m!92775 () Bool)

(assert (=> b!87341 m!92775))

(declare-fun m!92777 () Bool)

(assert (=> b!87341 m!92777))

(declare-fun m!92779 () Bool)

(assert (=> b!87341 m!92779))

(declare-fun m!92781 () Bool)

(assert (=> b!87341 m!92781))

(assert (=> b!87341 m!92777))

(assert (=> b!87341 m!91427))

(declare-fun m!92783 () Bool)

(assert (=> b!87341 m!92783))

(assert (=> b!87341 m!92771))

(declare-fun m!92785 () Bool)

(assert (=> b!87341 m!92785))

(assert (=> b!87341 m!92773))

(declare-fun m!92787 () Bool)

(assert (=> b!87341 m!92787))

(declare-fun m!92789 () Bool)

(assert (=> b!87341 m!92789))

(assert (=> b!87341 m!92763))

(declare-fun m!92791 () Bool)

(assert (=> b!87341 m!92791))

(declare-fun m!92793 () Bool)

(assert (=> b!87341 m!92793))

(declare-fun m!92795 () Bool)

(assert (=> b!87336 m!92795))

(declare-fun m!92797 () Bool)

(assert (=> b!87348 m!92797))

(declare-fun m!92799 () Bool)

(assert (=> bm!8328 m!92799))

(assert (=> b!87347 m!91427))

(assert (=> b!87347 m!91427))

(assert (=> b!87347 m!91437))

(assert (=> b!87344 m!91427))

(assert (=> b!87344 m!91427))

(declare-fun m!92801 () Bool)

(assert (=> b!87344 m!92801))

(declare-fun m!92803 () Bool)

(assert (=> b!87344 m!92803))

(declare-fun m!92805 () Bool)

(assert (=> b!87344 m!92805))

(declare-fun m!92807 () Bool)

(assert (=> b!87344 m!92807))

(assert (=> b!87344 m!92805))

(assert (=> b!87344 m!92803))

(assert (=> bm!8331 m!92783))

(assert (=> d!23131 m!92061))

(declare-fun m!92809 () Bool)

(assert (=> bm!8327 m!92809))

(declare-fun m!92811 () Bool)

(assert (=> bm!8330 m!92811))

(assert (=> b!87330 m!91427))

(assert (=> b!87330 m!91427))

(declare-fun m!92813 () Bool)

(assert (=> b!87330 m!92813))

(assert (=> b!87343 m!91427))

(assert (=> b!87343 m!91427))

(assert (=> b!87343 m!91437))

(assert (=> d!22173 d!23131))

(declare-fun b!87349 () Bool)

(declare-fun e!56911 () Option!145)

(assert (=> b!87349 (= e!56911 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40638)))))))

(declare-fun e!56912 () Option!145)

(declare-fun b!87351 () Bool)

(assert (=> b!87351 (= e!56912 (getValueByKey!139 (t!5277 (toList!759 lt!40638)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87350 () Bool)

(assert (=> b!87350 (= e!56911 e!56912)))

(declare-fun c!14386 () Bool)

(assert (=> b!87350 (= c!14386 (and ((_ is Cons!1548) (toList!759 lt!40638)) (not (= (_1!1126 (h!2139 (toList!759 lt!40638))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun d!23133 () Bool)

(declare-fun c!14385 () Bool)

(assert (=> d!23133 (= c!14385 (and ((_ is Cons!1548) (toList!759 lt!40638)) (= (_1!1126 (h!2139 (toList!759 lt!40638))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!23133 (= (getValueByKey!139 (toList!759 lt!40638) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) e!56911)))

(declare-fun b!87352 () Bool)

(assert (=> b!87352 (= e!56912 None!143)))

(assert (= (and d!23133 c!14385) b!87349))

(assert (= (and d!23133 (not c!14385)) b!87350))

(assert (= (and b!87350 c!14386) b!87351))

(assert (= (and b!87350 (not c!14386)) b!87352))

(declare-fun m!92815 () Bool)

(assert (=> b!87351 m!92815))

(assert (=> b!85937 d!23133))

(declare-fun d!23135 () Bool)

(declare-fun e!56914 () Bool)

(assert (=> d!23135 e!56914))

(declare-fun res!44825 () Bool)

(assert (=> d!23135 (=> res!44825 e!56914)))

(declare-fun lt!41398 () Bool)

(assert (=> d!23135 (= res!44825 (not lt!41398))))

(declare-fun lt!41399 () Bool)

(assert (=> d!23135 (= lt!41398 lt!41399)))

(declare-fun lt!41397 () Unit!2533)

(declare-fun e!56913 () Unit!2533)

(assert (=> d!23135 (= lt!41397 e!56913)))

(declare-fun c!14387 () Bool)

(assert (=> d!23135 (= c!14387 lt!41399)))

(assert (=> d!23135 (= lt!41399 (containsKey!143 (toList!759 lt!40834) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23135 (= (contains!762 lt!40834 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41398)))

(declare-fun b!87353 () Bool)

(declare-fun lt!41396 () Unit!2533)

(assert (=> b!87353 (= e!56913 lt!41396)))

(assert (=> b!87353 (= lt!41396 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40834) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87353 (isDefined!93 (getValueByKey!139 (toList!759 lt!40834) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87354 () Bool)

(declare-fun Unit!2607 () Unit!2533)

(assert (=> b!87354 (= e!56913 Unit!2607)))

(declare-fun b!87355 () Bool)

(assert (=> b!87355 (= e!56914 (isDefined!93 (getValueByKey!139 (toList!759 lt!40834) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23135 c!14387) b!87353))

(assert (= (and d!23135 (not c!14387)) b!87354))

(assert (= (and d!23135 (not res!44825)) b!87355))

(declare-fun m!92817 () Bool)

(assert (=> d!23135 m!92817))

(declare-fun m!92819 () Bool)

(assert (=> b!87353 m!92819))

(assert (=> b!87353 m!92545))

(assert (=> b!87353 m!92545))

(declare-fun m!92821 () Bool)

(assert (=> b!87353 m!92821))

(assert (=> b!87355 m!92545))

(assert (=> b!87355 m!92545))

(assert (=> b!87355 m!92821))

(assert (=> bm!8200 d!23135))

(declare-fun b!87356 () Bool)

(declare-fun e!56915 () Option!145)

(assert (=> b!87356 (= e!56915 (Some!144 (_2!1126 (h!2139 (t!5277 lt!40251)))))))

(declare-fun b!87358 () Bool)

(declare-fun e!56916 () Option!145)

(assert (=> b!87358 (= e!56916 (getValueByKey!139 (t!5277 (t!5277 lt!40251)) (_1!1126 lt!40171)))))

(declare-fun b!87357 () Bool)

(assert (=> b!87357 (= e!56915 e!56916)))

(declare-fun c!14389 () Bool)

(assert (=> b!87357 (= c!14389 (and ((_ is Cons!1548) (t!5277 lt!40251)) (not (= (_1!1126 (h!2139 (t!5277 lt!40251))) (_1!1126 lt!40171)))))))

(declare-fun d!23137 () Bool)

(declare-fun c!14388 () Bool)

(assert (=> d!23137 (= c!14388 (and ((_ is Cons!1548) (t!5277 lt!40251)) (= (_1!1126 (h!2139 (t!5277 lt!40251))) (_1!1126 lt!40171))))))

(assert (=> d!23137 (= (getValueByKey!139 (t!5277 lt!40251) (_1!1126 lt!40171)) e!56915)))

(declare-fun b!87359 () Bool)

(assert (=> b!87359 (= e!56916 None!143)))

(assert (= (and d!23137 c!14388) b!87356))

(assert (= (and d!23137 (not c!14388)) b!87357))

(assert (= (and b!87357 c!14389) b!87358))

(assert (= (and b!87357 (not c!14389)) b!87359))

(declare-fun m!92823 () Bool)

(assert (=> b!87358 m!92823))

(assert (=> b!85961 d!23137))

(declare-fun d!23139 () Bool)

(declare-fun e!56918 () Bool)

(assert (=> d!23139 e!56918))

(declare-fun res!44826 () Bool)

(assert (=> d!23139 (=> res!44826 e!56918)))

(declare-fun lt!41402 () Bool)

(assert (=> d!23139 (= res!44826 (not lt!41402))))

(declare-fun lt!41403 () Bool)

(assert (=> d!23139 (= lt!41402 lt!41403)))

(declare-fun lt!41401 () Unit!2533)

(declare-fun e!56917 () Unit!2533)

(assert (=> d!23139 (= lt!41401 e!56917)))

(declare-fun c!14390 () Bool)

(assert (=> d!23139 (= c!14390 lt!41403)))

(assert (=> d!23139 (= lt!41403 (containsKey!143 (toList!759 lt!40593) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!23139 (= (contains!762 lt!40593 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41402)))

(declare-fun b!87360 () Bool)

(declare-fun lt!41400 () Unit!2533)

(assert (=> b!87360 (= e!56917 lt!41400)))

(assert (=> b!87360 (= lt!41400 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40593) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> b!87360 (isDefined!93 (getValueByKey!139 (toList!759 lt!40593) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87361 () Bool)

(declare-fun Unit!2608 () Unit!2533)

(assert (=> b!87361 (= e!56917 Unit!2608)))

(declare-fun b!87362 () Bool)

(assert (=> b!87362 (= e!56918 (isDefined!93 (getValueByKey!139 (toList!759 lt!40593) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!23139 c!14390) b!87360))

(assert (= (and d!23139 (not c!14390)) b!87361))

(assert (= (and d!23139 (not res!44826)) b!87362))

(declare-fun m!92825 () Bool)

(assert (=> d!23139 m!92825))

(declare-fun m!92827 () Bool)

(assert (=> b!87360 m!92827))

(assert (=> b!87360 m!90221))

(assert (=> b!87360 m!90221))

(declare-fun m!92829 () Bool)

(assert (=> b!87360 m!92829))

(assert (=> b!87362 m!90221))

(assert (=> b!87362 m!90221))

(assert (=> b!87362 m!92829))

(assert (=> d!22233 d!23139))

(declare-fun b!87363 () Bool)

(declare-fun e!56919 () Option!145)

(assert (=> b!87363 (= e!56919 (Some!144 (_2!1126 (h!2139 lt!40592))))))

(declare-fun b!87365 () Bool)

(declare-fun e!56920 () Option!145)

(assert (=> b!87365 (= e!56920 (getValueByKey!139 (t!5277 lt!40592) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87364 () Bool)

(assert (=> b!87364 (= e!56919 e!56920)))

(declare-fun c!14392 () Bool)

(assert (=> b!87364 (= c!14392 (and ((_ is Cons!1548) lt!40592) (not (= (_1!1126 (h!2139 lt!40592)) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14391 () Bool)

(declare-fun d!23141 () Bool)

(assert (=> d!23141 (= c!14391 (and ((_ is Cons!1548) lt!40592) (= (_1!1126 (h!2139 lt!40592)) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!23141 (= (getValueByKey!139 lt!40592 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56919)))

(declare-fun b!87366 () Bool)

(assert (=> b!87366 (= e!56920 None!143)))

(assert (= (and d!23141 c!14391) b!87363))

(assert (= (and d!23141 (not c!14391)) b!87364))

(assert (= (and b!87364 c!14392) b!87365))

(assert (= (and b!87364 (not c!14392)) b!87366))

(declare-fun m!92831 () Bool)

(assert (=> b!87365 m!92831))

(assert (=> d!22233 d!23141))

(declare-fun d!23143 () Bool)

(assert (=> d!23143 (= (getValueByKey!139 lt!40592 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!41404 () Unit!2533)

(assert (=> d!23143 (= lt!41404 (choose!508 lt!40592 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun e!56921 () Bool)

(assert (=> d!23143 e!56921))

(declare-fun res!44827 () Bool)

(assert (=> d!23143 (=> (not res!44827) (not e!56921))))

(assert (=> d!23143 (= res!44827 (isStrictlySorted!293 lt!40592))))

(assert (=> d!23143 (= (lemmaContainsTupThenGetReturnValue!58 lt!40592 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41404)))

(declare-fun b!87367 () Bool)

(declare-fun res!44828 () Bool)

(assert (=> b!87367 (=> (not res!44828) (not e!56921))))

(assert (=> b!87367 (= res!44828 (containsKey!143 lt!40592 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87368 () Bool)

(assert (=> b!87368 (= e!56921 (contains!764 lt!40592 (tuple2!2233 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!23143 res!44827) b!87367))

(assert (= (and b!87367 res!44828) b!87368))

(assert (=> d!23143 m!90215))

(declare-fun m!92833 () Bool)

(assert (=> d!23143 m!92833))

(declare-fun m!92835 () Bool)

(assert (=> d!23143 m!92835))

(declare-fun m!92837 () Bool)

(assert (=> b!87367 m!92837))

(declare-fun m!92839 () Bool)

(assert (=> b!87368 m!92839))

(assert (=> d!22233 d!23143))

(declare-fun e!56923 () List!1552)

(declare-fun b!87369 () Bool)

(declare-fun c!14394 () Bool)

(declare-fun c!14393 () Bool)

(assert (=> b!87369 (= e!56923 (ite c!14393 (t!5277 (toList!759 lt!40456)) (ite c!14394 (Cons!1548 (h!2139 (toList!759 lt!40456)) (t!5277 (toList!759 lt!40456))) Nil!1549)))))

(declare-fun b!87370 () Bool)

(declare-fun e!56925 () Bool)

(declare-fun lt!41405 () List!1552)

(assert (=> b!87370 (= e!56925 (contains!764 lt!41405 (tuple2!2233 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!87371 () Bool)

(declare-fun e!56924 () List!1552)

(declare-fun e!56922 () List!1552)

(assert (=> b!87371 (= e!56924 e!56922)))

(assert (=> b!87371 (= c!14393 (and ((_ is Cons!1548) (toList!759 lt!40456)) (= (_1!1126 (h!2139 (toList!759 lt!40456))) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!87372 () Bool)

(declare-fun res!44829 () Bool)

(assert (=> b!87372 (=> (not res!44829) (not e!56925))))

(assert (=> b!87372 (= res!44829 (containsKey!143 lt!41405 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun d!23145 () Bool)

(assert (=> d!23145 e!56925))

(declare-fun res!44830 () Bool)

(assert (=> d!23145 (=> (not res!44830) (not e!56925))))

(assert (=> d!23145 (= res!44830 (isStrictlySorted!293 lt!41405))))

(assert (=> d!23145 (= lt!41405 e!56924)))

(declare-fun c!14395 () Bool)

(assert (=> d!23145 (= c!14395 (and ((_ is Cons!1548) (toList!759 lt!40456)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40456))) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!23145 (isStrictlySorted!293 (toList!759 lt!40456))))

(assert (=> d!23145 (= (insertStrictlySorted!60 (toList!759 lt!40456) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41405)))

(declare-fun bm!8332 () Bool)

(declare-fun call!8335 () List!1552)

(assert (=> bm!8332 (= call!8335 ($colon$colon!71 e!56923 (ite c!14395 (h!2139 (toList!759 lt!40456)) (tuple2!2233 (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14396 () Bool)

(assert (=> bm!8332 (= c!14396 c!14395)))

(declare-fun bm!8333 () Bool)

(declare-fun call!8337 () List!1552)

(declare-fun call!8336 () List!1552)

(assert (=> bm!8333 (= call!8337 call!8336)))

(declare-fun b!87373 () Bool)

(assert (=> b!87373 (= e!56924 call!8335)))

(declare-fun b!87374 () Bool)

(declare-fun e!56926 () List!1552)

(assert (=> b!87374 (= e!56926 call!8337)))

(declare-fun b!87375 () Bool)

(assert (=> b!87375 (= e!56922 call!8336)))

(declare-fun b!87376 () Bool)

(assert (=> b!87376 (= e!56923 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40456)) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87377 () Bool)

(assert (=> b!87377 (= e!56926 call!8337)))

(declare-fun b!87378 () Bool)

(assert (=> b!87378 (= c!14394 (and ((_ is Cons!1548) (toList!759 lt!40456)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40456))) (_1!1126 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> b!87378 (= e!56922 e!56926)))

(declare-fun bm!8334 () Bool)

(assert (=> bm!8334 (= call!8336 call!8335)))

(assert (= (and d!23145 c!14395) b!87373))

(assert (= (and d!23145 (not c!14395)) b!87371))

(assert (= (and b!87371 c!14393) b!87375))

(assert (= (and b!87371 (not c!14393)) b!87378))

(assert (= (and b!87378 c!14394) b!87377))

(assert (= (and b!87378 (not c!14394)) b!87374))

(assert (= (or b!87377 b!87374) bm!8333))

(assert (= (or b!87375 bm!8333) bm!8334))

(assert (= (or b!87373 bm!8334) bm!8332))

(assert (= (and bm!8332 c!14396) b!87376))

(assert (= (and bm!8332 (not c!14396)) b!87369))

(assert (= (and d!23145 res!44830) b!87372))

(assert (= (and b!87372 res!44829) b!87370))

(declare-fun m!92841 () Bool)

(assert (=> b!87372 m!92841))

(declare-fun m!92843 () Bool)

(assert (=> b!87376 m!92843))

(declare-fun m!92845 () Bool)

(assert (=> d!23145 m!92845))

(declare-fun m!92847 () Bool)

(assert (=> d!23145 m!92847))

(declare-fun m!92849 () Bool)

(assert (=> b!87370 m!92849))

(declare-fun m!92851 () Bool)

(assert (=> bm!8332 m!92851))

(assert (=> d!22233 d!23145))

(declare-fun d!23147 () Bool)

(declare-fun res!44831 () Bool)

(declare-fun e!56927 () Bool)

(assert (=> d!23147 (=> res!44831 e!56927)))

(assert (=> d!23147 (= res!44831 (= (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(assert (=> d!23147 (= (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!56927)))

(declare-fun b!87379 () Bool)

(declare-fun e!56928 () Bool)

(assert (=> b!87379 (= e!56927 e!56928)))

(declare-fun res!44832 () Bool)

(assert (=> b!87379 (=> (not res!44832) (not e!56928))))

(assert (=> b!87379 (= res!44832 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(declare-fun b!87380 () Bool)

(assert (=> b!87380 (= e!56928 (arrayContainsKey!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!23147 (not res!44831)) b!87379))

(assert (= (and b!87379 res!44832) b!87380))

(assert (=> d!23147 m!92341))

(assert (=> b!87380 m!89417))

(declare-fun m!92853 () Bool)

(assert (=> b!87380 m!92853))

(assert (=> b!86150 d!23147))

(assert (=> bm!8149 d!22559))

(declare-fun b!87381 () Bool)

(declare-fun e!56929 () Option!145)

(assert (=> b!87381 (= e!56929 (Some!144 (_2!1126 (h!2139 (t!5277 (toList!759 lt!40261))))))))

(declare-fun b!87383 () Bool)

(declare-fun e!56930 () Option!145)

(assert (=> b!87383 (= e!56930 (getValueByKey!139 (t!5277 (t!5277 (toList!759 lt!40261))) (_1!1126 lt!40163)))))

(declare-fun b!87382 () Bool)

(assert (=> b!87382 (= e!56929 e!56930)))

(declare-fun c!14398 () Bool)

(assert (=> b!87382 (= c!14398 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40261))) (not (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40261)))) (_1!1126 lt!40163)))))))

(declare-fun d!23149 () Bool)

(declare-fun c!14397 () Bool)

(assert (=> d!23149 (= c!14397 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40261))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40261)))) (_1!1126 lt!40163))))))

(assert (=> d!23149 (= (getValueByKey!139 (t!5277 (toList!759 lt!40261)) (_1!1126 lt!40163)) e!56929)))

(declare-fun b!87384 () Bool)

(assert (=> b!87384 (= e!56930 None!143)))

(assert (= (and d!23149 c!14397) b!87381))

(assert (= (and d!23149 (not c!14397)) b!87382))

(assert (= (and b!87382 c!14398) b!87383))

(assert (= (and b!87382 (not c!14398)) b!87384))

(declare-fun m!92855 () Bool)

(assert (=> b!87383 m!92855))

(assert (=> b!85855 d!23149))

(declare-fun d!23151 () Bool)

(declare-fun e!56931 () Bool)

(assert (=> d!23151 e!56931))

(declare-fun res!44833 () Bool)

(assert (=> d!23151 (=> (not res!44833) (not e!56931))))

(declare-fun lt!41407 () ListLongMap!1487)

(assert (=> d!23151 (= res!44833 (contains!762 lt!41407 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun lt!41406 () List!1552)

(assert (=> d!23151 (= lt!41407 (ListLongMap!1488 lt!41406))))

(declare-fun lt!41408 () Unit!2533)

(declare-fun lt!41409 () Unit!2533)

(assert (=> d!23151 (= lt!41408 lt!41409)))

(assert (=> d!23151 (= (getValueByKey!139 lt!41406 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!23151 (= lt!41409 (lemmaContainsTupThenGetReturnValue!58 lt!41406 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!23151 (= lt!41406 (insertStrictlySorted!60 (toList!759 call!8170) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!23151 (= (+!116 call!8170 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) lt!41407)))

(declare-fun b!87385 () Bool)

(declare-fun res!44834 () Bool)

(assert (=> b!87385 (=> (not res!44834) (not e!56931))))

(assert (=> b!87385 (= res!44834 (= (getValueByKey!139 (toList!759 lt!41407) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(declare-fun b!87386 () Bool)

(assert (=> b!87386 (= e!56931 (contains!764 (toList!759 lt!41407) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(assert (= (and d!23151 res!44833) b!87385))

(assert (= (and b!87385 res!44834) b!87386))

(declare-fun m!92857 () Bool)

(assert (=> d!23151 m!92857))

(declare-fun m!92859 () Bool)

(assert (=> d!23151 m!92859))

(declare-fun m!92861 () Bool)

(assert (=> d!23151 m!92861))

(declare-fun m!92863 () Bool)

(assert (=> d!23151 m!92863))

(declare-fun m!92865 () Bool)

(assert (=> b!87385 m!92865))

(declare-fun m!92867 () Bool)

(assert (=> b!87386 m!92867))

(assert (=> b!85986 d!23151))

(assert (=> bm!8187 d!22227))

(assert (=> b!86127 d!23083))

(assert (=> b!86127 d!22953))

(declare-fun d!23153 () Bool)

(declare-fun res!44835 () Bool)

(declare-fun e!56932 () Bool)

(assert (=> d!23153 (=> res!44835 e!56932)))

(assert (=> d!23153 (= res!44835 (or ((_ is Nil!1549) lt!40790) ((_ is Nil!1549) (t!5277 lt!40790))))))

(assert (=> d!23153 (= (isStrictlySorted!293 lt!40790) e!56932)))

(declare-fun b!87387 () Bool)

(declare-fun e!56933 () Bool)

(assert (=> b!87387 (= e!56932 e!56933)))

(declare-fun res!44836 () Bool)

(assert (=> b!87387 (=> (not res!44836) (not e!56933))))

(assert (=> b!87387 (= res!44836 (bvslt (_1!1126 (h!2139 lt!40790)) (_1!1126 (h!2139 (t!5277 lt!40790)))))))

(declare-fun b!87388 () Bool)

(assert (=> b!87388 (= e!56933 (isStrictlySorted!293 (t!5277 lt!40790)))))

(assert (= (and d!23153 (not res!44835)) b!87387))

(assert (= (and b!87387 res!44836) b!87388))

(declare-fun m!92869 () Bool)

(assert (=> b!87388 m!92869))

(assert (=> d!22317 d!23153))

(assert (=> d!22317 d!22639))

(assert (=> d!22281 d!22109))

(assert (=> b!85943 d!23063))

(assert (=> b!85943 d!22437))

(declare-fun b!87389 () Bool)

(declare-fun e!56934 () Option!145)

(assert (=> b!87389 (= e!56934 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40617)))))))

(declare-fun e!56935 () Option!145)

(declare-fun b!87391 () Bool)

(assert (=> b!87391 (= e!56935 (getValueByKey!139 (t!5277 (toList!759 lt!40617)) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87390 () Bool)

(assert (=> b!87390 (= e!56934 e!56935)))

(declare-fun c!14400 () Bool)

(assert (=> b!87390 (= c!14400 (and ((_ is Cons!1548) (toList!759 lt!40617)) (not (= (_1!1126 (h!2139 (toList!759 lt!40617))) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!23155 () Bool)

(declare-fun c!14399 () Bool)

(assert (=> d!23155 (= c!14399 (and ((_ is Cons!1548) (toList!759 lt!40617)) (= (_1!1126 (h!2139 (toList!759 lt!40617))) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!23155 (= (getValueByKey!139 (toList!759 lt!40617) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56934)))

(declare-fun b!87392 () Bool)

(assert (=> b!87392 (= e!56935 None!143)))

(assert (= (and d!23155 c!14399) b!87389))

(assert (= (and d!23155 (not c!14399)) b!87390))

(assert (= (and b!87390 c!14400) b!87391))

(assert (= (and b!87390 (not c!14400)) b!87392))

(declare-fun m!92871 () Bool)

(assert (=> b!87391 m!92871))

(assert (=> b!85913 d!23155))

(assert (=> b!86181 d!22969))

(assert (=> b!86181 d!22971))

(declare-fun b!87393 () Bool)

(declare-fun e!56936 () Option!145)

(assert (=> b!87393 (= e!56936 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40583)))))))

(declare-fun b!87395 () Bool)

(declare-fun e!56937 () Option!145)

(assert (=> b!87395 (= e!56937 (getValueByKey!139 (t!5277 (toList!759 lt!40583)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87394 () Bool)

(assert (=> b!87394 (= e!56936 e!56937)))

(declare-fun c!14402 () Bool)

(assert (=> b!87394 (= c!14402 (and ((_ is Cons!1548) (toList!759 lt!40583)) (not (= (_1!1126 (h!2139 (toList!759 lt!40583))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun d!23157 () Bool)

(declare-fun c!14401 () Bool)

(assert (=> d!23157 (= c!14401 (and ((_ is Cons!1548) (toList!759 lt!40583)) (= (_1!1126 (h!2139 (toList!759 lt!40583))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!23157 (= (getValueByKey!139 (toList!759 lt!40583) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) e!56936)))

(declare-fun b!87396 () Bool)

(assert (=> b!87396 (= e!56937 None!143)))

(assert (= (and d!23157 c!14401) b!87393))

(assert (= (and d!23157 (not c!14401)) b!87394))

(assert (= (and b!87394 c!14402) b!87395))

(assert (= (and b!87394 (not c!14402)) b!87396))

(declare-fun m!92873 () Bool)

(assert (=> b!87395 m!92873))

(assert (=> b!85869 d!23157))

(declare-fun d!23159 () Bool)

(assert (=> d!23159 (= ($colon$colon!71 e!56119 (ite c!14039 (h!2139 (toList!759 lt!40173)) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163)))) (Cons!1548 (ite c!14039 (h!2139 (toList!759 lt!40173)) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))) e!56119))))

(assert (=> bm!8192 d!23159))

(declare-fun d!23161 () Bool)

(declare-fun e!56939 () Bool)

(assert (=> d!23161 e!56939))

(declare-fun res!44837 () Bool)

(assert (=> d!23161 (=> res!44837 e!56939)))

(declare-fun lt!41412 () Bool)

(assert (=> d!23161 (= res!44837 (not lt!41412))))

(declare-fun lt!41413 () Bool)

(assert (=> d!23161 (= lt!41412 lt!41413)))

(declare-fun lt!41411 () Unit!2533)

(declare-fun e!56938 () Unit!2533)

(assert (=> d!23161 (= lt!41411 e!56938)))

(declare-fun c!14403 () Bool)

(assert (=> d!23161 (= c!14403 lt!41413)))

(assert (=> d!23161 (= lt!41413 (containsKey!143 (toList!759 lt!40834) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23161 (= (contains!762 lt!40834 #b0000000000000000000000000000000000000000000000000000000000000000) lt!41412)))

(declare-fun b!87397 () Bool)

(declare-fun lt!41410 () Unit!2533)

(assert (=> b!87397 (= e!56938 lt!41410)))

(assert (=> b!87397 (= lt!41410 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40834) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87397 (isDefined!93 (getValueByKey!139 (toList!759 lt!40834) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87398 () Bool)

(declare-fun Unit!2609 () Unit!2533)

(assert (=> b!87398 (= e!56938 Unit!2609)))

(declare-fun b!87399 () Bool)

(assert (=> b!87399 (= e!56939 (isDefined!93 (getValueByKey!139 (toList!759 lt!40834) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23161 c!14403) b!87397))

(assert (= (and d!23161 (not c!14403)) b!87398))

(assert (= (and d!23161 (not res!44837)) b!87399))

(declare-fun m!92875 () Bool)

(assert (=> d!23161 m!92875))

(declare-fun m!92877 () Bool)

(assert (=> b!87397 m!92877))

(assert (=> b!87397 m!92605))

(assert (=> b!87397 m!92605))

(declare-fun m!92879 () Bool)

(assert (=> b!87397 m!92879))

(assert (=> b!87399 m!92605))

(assert (=> b!87399 m!92605))

(assert (=> b!87399 m!92879))

(assert (=> bm!8198 d!23161))

(declare-fun d!23163 () Bool)

(declare-fun e!56940 () Bool)

(assert (=> d!23163 e!56940))

(declare-fun res!44838 () Bool)

(assert (=> d!23163 (=> (not res!44838) (not e!56940))))

(declare-fun lt!41415 () ListLongMap!1487)

(assert (=> d!23163 (= res!44838 (contains!762 lt!41415 (_1!1126 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16)))))))

(declare-fun lt!41414 () List!1552)

(assert (=> d!23163 (= lt!41415 (ListLongMap!1488 lt!41414))))

(declare-fun lt!41416 () Unit!2533)

(declare-fun lt!41417 () Unit!2533)

(assert (=> d!23163 (= lt!41416 lt!41417)))

(assert (=> d!23163 (= (getValueByKey!139 lt!41414 (_1!1126 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16)))))))

(assert (=> d!23163 (= lt!41417 (lemmaContainsTupThenGetReturnValue!58 lt!41414 (_1!1126 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16)))))))

(assert (=> d!23163 (= lt!41414 (insertStrictlySorted!60 (toList!759 lt!40679) (_1!1126 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16)))))))

(assert (=> d!23163 (= (+!116 lt!40679 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16))) lt!41415)))

(declare-fun b!87400 () Bool)

(declare-fun res!44839 () Bool)

(assert (=> b!87400 (=> (not res!44839) (not e!56940))))

(assert (=> b!87400 (= res!44839 (= (getValueByKey!139 (toList!759 lt!41415) (_1!1126 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16))))))))

(declare-fun b!87401 () Bool)

(assert (=> b!87401 (= e!56940 (contains!764 (toList!759 lt!41415) (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16))))))

(assert (= (and d!23163 res!44838) b!87400))

(assert (= (and b!87400 res!44839) b!87401))

(declare-fun m!92881 () Bool)

(assert (=> d!23163 m!92881))

(declare-fun m!92883 () Bool)

(assert (=> d!23163 m!92883))

(declare-fun m!92885 () Bool)

(assert (=> d!23163 m!92885))

(declare-fun m!92887 () Bool)

(assert (=> d!23163 m!92887))

(declare-fun m!92889 () Bool)

(assert (=> b!87400 m!92889))

(declare-fun m!92891 () Bool)

(assert (=> b!87401 m!92891))

(assert (=> b!85991 d!23163))

(declare-fun d!23165 () Bool)

(assert (=> d!23165 (contains!762 (+!116 lt!40679 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16))) lt!40681)))

(declare-fun lt!41418 () Unit!2533)

(assert (=> d!23165 (= lt!41418 (choose!514 lt!40679 lt!40663 (zeroValue!2230 newMap!16) lt!40681))))

(assert (=> d!23165 (contains!762 lt!40679 lt!40681)))

(assert (=> d!23165 (= (addStillContains!58 lt!40679 lt!40663 (zeroValue!2230 newMap!16) lt!40681) lt!41418)))

(declare-fun bs!3682 () Bool)

(assert (= bs!3682 d!23165))

(assert (=> bs!3682 m!90415))

(assert (=> bs!3682 m!90415))

(assert (=> bs!3682 m!90417))

(declare-fun m!92893 () Bool)

(assert (=> bs!3682 m!92893))

(declare-fun m!92895 () Bool)

(assert (=> bs!3682 m!92895))

(assert (=> b!85991 d!23165))

(declare-fun d!23167 () Bool)

(assert (=> d!23167 (= (apply!82 (+!116 lt!40672 (tuple2!2233 lt!40683 (minValue!2230 newMap!16))) lt!40664) (apply!82 lt!40672 lt!40664))))

(declare-fun lt!41419 () Unit!2533)

(assert (=> d!23167 (= lt!41419 (choose!515 lt!40672 lt!40683 (minValue!2230 newMap!16) lt!40664))))

(declare-fun e!56941 () Bool)

(assert (=> d!23167 e!56941))

(declare-fun res!44840 () Bool)

(assert (=> d!23167 (=> (not res!44840) (not e!56941))))

(assert (=> d!23167 (= res!44840 (contains!762 lt!40672 lt!40664))))

(assert (=> d!23167 (= (addApplyDifferent!58 lt!40672 lt!40683 (minValue!2230 newMap!16) lt!40664) lt!41419)))

(declare-fun b!87402 () Bool)

(assert (=> b!87402 (= e!56941 (not (= lt!40664 lt!40683)))))

(assert (= (and d!23167 res!44840) b!87402))

(declare-fun m!92897 () Bool)

(assert (=> d!23167 m!92897))

(assert (=> d!23167 m!90423))

(declare-fun m!92899 () Bool)

(assert (=> d!23167 m!92899))

(assert (=> d!23167 m!90419))

(assert (=> d!23167 m!90423))

(assert (=> d!23167 m!90437))

(assert (=> b!85991 d!23167))

(declare-fun d!23169 () Bool)

(assert (=> d!23169 (= (apply!82 lt!40672 lt!40664) (get!1216 (getValueByKey!139 (toList!759 lt!40672) lt!40664)))))

(declare-fun bs!3683 () Bool)

(assert (= bs!3683 d!23169))

(declare-fun m!92901 () Bool)

(assert (=> bs!3683 m!92901))

(assert (=> bs!3683 m!92901))

(declare-fun m!92903 () Bool)

(assert (=> bs!3683 m!92903))

(assert (=> b!85991 d!23169))

(assert (=> b!85991 d!23031))

(declare-fun d!23171 () Bool)

(declare-fun e!56942 () Bool)

(assert (=> d!23171 e!56942))

(declare-fun res!44841 () Bool)

(assert (=> d!23171 (=> (not res!44841) (not e!56942))))

(declare-fun lt!41421 () ListLongMap!1487)

(assert (=> d!23171 (= res!44841 (contains!762 lt!41421 (_1!1126 (tuple2!2233 lt!40678 (minValue!2230 newMap!16)))))))

(declare-fun lt!41420 () List!1552)

(assert (=> d!23171 (= lt!41421 (ListLongMap!1488 lt!41420))))

(declare-fun lt!41422 () Unit!2533)

(declare-fun lt!41423 () Unit!2533)

(assert (=> d!23171 (= lt!41422 lt!41423)))

(assert (=> d!23171 (= (getValueByKey!139 lt!41420 (_1!1126 (tuple2!2233 lt!40678 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40678 (minValue!2230 newMap!16)))))))

(assert (=> d!23171 (= lt!41423 (lemmaContainsTupThenGetReturnValue!58 lt!41420 (_1!1126 (tuple2!2233 lt!40678 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40678 (minValue!2230 newMap!16)))))))

(assert (=> d!23171 (= lt!41420 (insertStrictlySorted!60 (toList!759 lt!40675) (_1!1126 (tuple2!2233 lt!40678 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40678 (minValue!2230 newMap!16)))))))

(assert (=> d!23171 (= (+!116 lt!40675 (tuple2!2233 lt!40678 (minValue!2230 newMap!16))) lt!41421)))

(declare-fun b!87403 () Bool)

(declare-fun res!44842 () Bool)

(assert (=> b!87403 (=> (not res!44842) (not e!56942))))

(assert (=> b!87403 (= res!44842 (= (getValueByKey!139 (toList!759 lt!41421) (_1!1126 (tuple2!2233 lt!40678 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40678 (minValue!2230 newMap!16))))))))

(declare-fun b!87404 () Bool)

(assert (=> b!87404 (= e!56942 (contains!764 (toList!759 lt!41421) (tuple2!2233 lt!40678 (minValue!2230 newMap!16))))))

(assert (= (and d!23171 res!44841) b!87403))

(assert (= (and b!87403 res!44842) b!87404))

(declare-fun m!92905 () Bool)

(assert (=> d!23171 m!92905))

(declare-fun m!92907 () Bool)

(assert (=> d!23171 m!92907))

(declare-fun m!92909 () Bool)

(assert (=> d!23171 m!92909))

(declare-fun m!92911 () Bool)

(assert (=> d!23171 m!92911))

(declare-fun m!92913 () Bool)

(assert (=> b!87403 m!92913))

(declare-fun m!92915 () Bool)

(assert (=> b!87404 m!92915))

(assert (=> b!85991 d!23171))

(declare-fun d!23173 () Bool)

(assert (=> d!23173 (= (apply!82 (+!116 lt!40675 (tuple2!2233 lt!40678 (minValue!2230 newMap!16))) lt!40677) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40675 (tuple2!2233 lt!40678 (minValue!2230 newMap!16)))) lt!40677)))))

(declare-fun bs!3684 () Bool)

(assert (= bs!3684 d!23173))

(declare-fun m!92917 () Bool)

(assert (=> bs!3684 m!92917))

(assert (=> bs!3684 m!92917))

(declare-fun m!92919 () Bool)

(assert (=> bs!3684 m!92919))

(assert (=> b!85991 d!23173))

(declare-fun d!23175 () Bool)

(declare-fun e!56943 () Bool)

(assert (=> d!23175 e!56943))

(declare-fun res!44843 () Bool)

(assert (=> d!23175 (=> (not res!44843) (not e!56943))))

(declare-fun lt!41425 () ListLongMap!1487)

(assert (=> d!23175 (= res!44843 (contains!762 lt!41425 (_1!1126 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16)))))))

(declare-fun lt!41424 () List!1552)

(assert (=> d!23175 (= lt!41425 (ListLongMap!1488 lt!41424))))

(declare-fun lt!41426 () Unit!2533)

(declare-fun lt!41427 () Unit!2533)

(assert (=> d!23175 (= lt!41426 lt!41427)))

(assert (=> d!23175 (= (getValueByKey!139 lt!41424 (_1!1126 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16)))))))

(assert (=> d!23175 (= lt!41427 (lemmaContainsTupThenGetReturnValue!58 lt!41424 (_1!1126 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16)))))))

(assert (=> d!23175 (= lt!41424 (insertStrictlySorted!60 (toList!759 lt!40668) (_1!1126 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16)))))))

(assert (=> d!23175 (= (+!116 lt!40668 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16))) lt!41425)))

(declare-fun b!87405 () Bool)

(declare-fun res!44844 () Bool)

(assert (=> b!87405 (=> (not res!44844) (not e!56943))))

(assert (=> b!87405 (= res!44844 (= (getValueByKey!139 (toList!759 lt!41425) (_1!1126 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16))))))))

(declare-fun b!87406 () Bool)

(assert (=> b!87406 (= e!56943 (contains!764 (toList!759 lt!41425) (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16))))))

(assert (= (and d!23175 res!44843) b!87405))

(assert (= (and b!87405 res!44844) b!87406))

(declare-fun m!92921 () Bool)

(assert (=> d!23175 m!92921))

(declare-fun m!92923 () Bool)

(assert (=> d!23175 m!92923))

(declare-fun m!92925 () Bool)

(assert (=> d!23175 m!92925))

(declare-fun m!92927 () Bool)

(assert (=> d!23175 m!92927))

(declare-fun m!92929 () Bool)

(assert (=> b!87405 m!92929))

(declare-fun m!92931 () Bool)

(assert (=> b!87406 m!92931))

(assert (=> b!85991 d!23175))

(declare-fun d!23177 () Bool)

(assert (=> d!23177 (= (apply!82 lt!40675 lt!40677) (get!1216 (getValueByKey!139 (toList!759 lt!40675) lt!40677)))))

(declare-fun bs!3685 () Bool)

(assert (= bs!3685 d!23177))

(declare-fun m!92933 () Bool)

(assert (=> bs!3685 m!92933))

(assert (=> bs!3685 m!92933))

(declare-fun m!92935 () Bool)

(assert (=> bs!3685 m!92935))

(assert (=> b!85991 d!23177))

(declare-fun d!23179 () Bool)

(assert (=> d!23179 (= (apply!82 (+!116 lt!40672 (tuple2!2233 lt!40683 (minValue!2230 newMap!16))) lt!40664) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40672 (tuple2!2233 lt!40683 (minValue!2230 newMap!16)))) lt!40664)))))

(declare-fun bs!3686 () Bool)

(assert (= bs!3686 d!23179))

(declare-fun m!92937 () Bool)

(assert (=> bs!3686 m!92937))

(assert (=> bs!3686 m!92937))

(declare-fun m!92939 () Bool)

(assert (=> bs!3686 m!92939))

(assert (=> b!85991 d!23179))

(declare-fun d!23181 () Bool)

(assert (=> d!23181 (= (apply!82 lt!40668 lt!40665) (get!1216 (getValueByKey!139 (toList!759 lt!40668) lt!40665)))))

(declare-fun bs!3687 () Bool)

(assert (= bs!3687 d!23181))

(declare-fun m!92941 () Bool)

(assert (=> bs!3687 m!92941))

(assert (=> bs!3687 m!92941))

(declare-fun m!92943 () Bool)

(assert (=> bs!3687 m!92943))

(assert (=> b!85991 d!23181))

(declare-fun d!23183 () Bool)

(declare-fun e!56945 () Bool)

(assert (=> d!23183 e!56945))

(declare-fun res!44845 () Bool)

(assert (=> d!23183 (=> res!44845 e!56945)))

(declare-fun lt!41430 () Bool)

(assert (=> d!23183 (= res!44845 (not lt!41430))))

(declare-fun lt!41431 () Bool)

(assert (=> d!23183 (= lt!41430 lt!41431)))

(declare-fun lt!41429 () Unit!2533)

(declare-fun e!56944 () Unit!2533)

(assert (=> d!23183 (= lt!41429 e!56944)))

(declare-fun c!14404 () Bool)

(assert (=> d!23183 (= c!14404 lt!41431)))

(assert (=> d!23183 (= lt!41431 (containsKey!143 (toList!759 (+!116 lt!40679 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16)))) lt!40681))))

(assert (=> d!23183 (= (contains!762 (+!116 lt!40679 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16))) lt!40681) lt!41430)))

(declare-fun b!87407 () Bool)

(declare-fun lt!41428 () Unit!2533)

(assert (=> b!87407 (= e!56944 lt!41428)))

(assert (=> b!87407 (= lt!41428 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (+!116 lt!40679 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16)))) lt!40681))))

(assert (=> b!87407 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40679 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16)))) lt!40681))))

(declare-fun b!87408 () Bool)

(declare-fun Unit!2610 () Unit!2533)

(assert (=> b!87408 (= e!56944 Unit!2610)))

(declare-fun b!87409 () Bool)

(assert (=> b!87409 (= e!56945 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40679 (tuple2!2233 lt!40663 (zeroValue!2230 newMap!16)))) lt!40681)))))

(assert (= (and d!23183 c!14404) b!87407))

(assert (= (and d!23183 (not c!14404)) b!87408))

(assert (= (and d!23183 (not res!44845)) b!87409))

(declare-fun m!92945 () Bool)

(assert (=> d!23183 m!92945))

(declare-fun m!92947 () Bool)

(assert (=> b!87407 m!92947))

(declare-fun m!92949 () Bool)

(assert (=> b!87407 m!92949))

(assert (=> b!87407 m!92949))

(declare-fun m!92951 () Bool)

(assert (=> b!87407 m!92951))

(assert (=> b!87409 m!92949))

(assert (=> b!87409 m!92949))

(assert (=> b!87409 m!92951))

(assert (=> b!85991 d!23183))

(declare-fun d!23185 () Bool)

(assert (=> d!23185 (= (apply!82 (+!116 lt!40675 (tuple2!2233 lt!40678 (minValue!2230 newMap!16))) lt!40677) (apply!82 lt!40675 lt!40677))))

(declare-fun lt!41432 () Unit!2533)

(assert (=> d!23185 (= lt!41432 (choose!515 lt!40675 lt!40678 (minValue!2230 newMap!16) lt!40677))))

(declare-fun e!56946 () Bool)

(assert (=> d!23185 e!56946))

(declare-fun res!44846 () Bool)

(assert (=> d!23185 (=> (not res!44846) (not e!56946))))

(assert (=> d!23185 (= res!44846 (contains!762 lt!40675 lt!40677))))

(assert (=> d!23185 (= (addApplyDifferent!58 lt!40675 lt!40678 (minValue!2230 newMap!16) lt!40677) lt!41432)))

(declare-fun b!87410 () Bool)

(assert (=> b!87410 (= e!56946 (not (= lt!40677 lt!40678)))))

(assert (= (and d!23185 res!44846) b!87410))

(declare-fun m!92953 () Bool)

(assert (=> d!23185 m!92953))

(assert (=> d!23185 m!90425))

(declare-fun m!92955 () Bool)

(assert (=> d!23185 m!92955))

(assert (=> d!23185 m!90443))

(assert (=> d!23185 m!90425))

(assert (=> d!23185 m!90439))

(assert (=> b!85991 d!23185))

(declare-fun d!23187 () Bool)

(assert (=> d!23187 (= (apply!82 (+!116 lt!40668 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16))) lt!40665) (apply!82 lt!40668 lt!40665))))

(declare-fun lt!41433 () Unit!2533)

(assert (=> d!23187 (= lt!41433 (choose!515 lt!40668 lt!40674 (zeroValue!2230 newMap!16) lt!40665))))

(declare-fun e!56947 () Bool)

(assert (=> d!23187 e!56947))

(declare-fun res!44847 () Bool)

(assert (=> d!23187 (=> (not res!44847) (not e!56947))))

(assert (=> d!23187 (= res!44847 (contains!762 lt!40668 lt!40665))))

(assert (=> d!23187 (= (addApplyDifferent!58 lt!40668 lt!40674 (zeroValue!2230 newMap!16) lt!40665) lt!41433)))

(declare-fun b!87411 () Bool)

(assert (=> b!87411 (= e!56947 (not (= lt!40665 lt!40674)))))

(assert (= (and d!23187 res!44847) b!87411))

(declare-fun m!92957 () Bool)

(assert (=> d!23187 m!92957))

(assert (=> d!23187 m!90429))

(declare-fun m!92959 () Bool)

(assert (=> d!23187 m!92959))

(assert (=> d!23187 m!90421))

(assert (=> d!23187 m!90429))

(assert (=> d!23187 m!90431))

(assert (=> b!85991 d!23187))

(declare-fun d!23189 () Bool)

(declare-fun e!56948 () Bool)

(assert (=> d!23189 e!56948))

(declare-fun res!44848 () Bool)

(assert (=> d!23189 (=> (not res!44848) (not e!56948))))

(declare-fun lt!41435 () ListLongMap!1487)

(assert (=> d!23189 (= res!44848 (contains!762 lt!41435 (_1!1126 (tuple2!2233 lt!40683 (minValue!2230 newMap!16)))))))

(declare-fun lt!41434 () List!1552)

(assert (=> d!23189 (= lt!41435 (ListLongMap!1488 lt!41434))))

(declare-fun lt!41436 () Unit!2533)

(declare-fun lt!41437 () Unit!2533)

(assert (=> d!23189 (= lt!41436 lt!41437)))

(assert (=> d!23189 (= (getValueByKey!139 lt!41434 (_1!1126 (tuple2!2233 lt!40683 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40683 (minValue!2230 newMap!16)))))))

(assert (=> d!23189 (= lt!41437 (lemmaContainsTupThenGetReturnValue!58 lt!41434 (_1!1126 (tuple2!2233 lt!40683 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40683 (minValue!2230 newMap!16)))))))

(assert (=> d!23189 (= lt!41434 (insertStrictlySorted!60 (toList!759 lt!40672) (_1!1126 (tuple2!2233 lt!40683 (minValue!2230 newMap!16))) (_2!1126 (tuple2!2233 lt!40683 (minValue!2230 newMap!16)))))))

(assert (=> d!23189 (= (+!116 lt!40672 (tuple2!2233 lt!40683 (minValue!2230 newMap!16))) lt!41435)))

(declare-fun b!87412 () Bool)

(declare-fun res!44849 () Bool)

(assert (=> b!87412 (=> (not res!44849) (not e!56948))))

(assert (=> b!87412 (= res!44849 (= (getValueByKey!139 (toList!759 lt!41435) (_1!1126 (tuple2!2233 lt!40683 (minValue!2230 newMap!16)))) (Some!144 (_2!1126 (tuple2!2233 lt!40683 (minValue!2230 newMap!16))))))))

(declare-fun b!87413 () Bool)

(assert (=> b!87413 (= e!56948 (contains!764 (toList!759 lt!41435) (tuple2!2233 lt!40683 (minValue!2230 newMap!16))))))

(assert (= (and d!23189 res!44848) b!87412))

(assert (= (and b!87412 res!44849) b!87413))

(declare-fun m!92961 () Bool)

(assert (=> d!23189 m!92961))

(declare-fun m!92963 () Bool)

(assert (=> d!23189 m!92963))

(declare-fun m!92965 () Bool)

(assert (=> d!23189 m!92965))

(declare-fun m!92967 () Bool)

(assert (=> d!23189 m!92967))

(declare-fun m!92969 () Bool)

(assert (=> b!87412 m!92969))

(declare-fun m!92971 () Bool)

(assert (=> b!87413 m!92971))

(assert (=> b!85991 d!23189))

(declare-fun d!23191 () Bool)

(assert (=> d!23191 (= (apply!82 (+!116 lt!40668 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16))) lt!40665) (get!1216 (getValueByKey!139 (toList!759 (+!116 lt!40668 (tuple2!2233 lt!40674 (zeroValue!2230 newMap!16)))) lt!40665)))))

(declare-fun bs!3688 () Bool)

(assert (= bs!3688 d!23191))

(declare-fun m!92973 () Bool)

(assert (=> bs!3688 m!92973))

(assert (=> bs!3688 m!92973))

(declare-fun m!92975 () Bool)

(assert (=> bs!3688 m!92975))

(assert (=> b!85991 d!23191))

(declare-fun d!23193 () Bool)

(declare-fun res!44850 () Bool)

(declare-fun e!56949 () Bool)

(assert (=> d!23193 (=> res!44850 e!56949)))

(assert (=> d!23193 (= res!44850 (and ((_ is Cons!1548) (toList!759 lt!40284)) (= (_1!1126 (h!2139 (toList!759 lt!40284))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!23193 (= (containsKey!143 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000) e!56949)))

(declare-fun b!87414 () Bool)

(declare-fun e!56950 () Bool)

(assert (=> b!87414 (= e!56949 e!56950)))

(declare-fun res!44851 () Bool)

(assert (=> b!87414 (=> (not res!44851) (not e!56950))))

(assert (=> b!87414 (= res!44851 (and (or (not ((_ is Cons!1548) (toList!759 lt!40284))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40284))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1548) (toList!759 lt!40284)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40284))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!87415 () Bool)

(assert (=> b!87415 (= e!56950 (containsKey!143 (t!5277 (toList!759 lt!40284)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23193 (not res!44850)) b!87414))

(assert (= (and b!87414 res!44851) b!87415))

(declare-fun m!92977 () Bool)

(assert (=> b!87415 m!92977))

(assert (=> d!22213 d!23193))

(assert (=> b!85768 d!22477))

(declare-fun e!56952 () List!1552)

(declare-fun c!14405 () Bool)

(declare-fun b!87416 () Bool)

(declare-fun c!14406 () Bool)

(assert (=> b!87416 (= e!56952 (ite c!14405 (t!5277 (t!5277 (toList!759 lt!40173))) (ite c!14406 (Cons!1548 (h!2139 (t!5277 (toList!759 lt!40173))) (t!5277 (t!5277 (toList!759 lt!40173)))) Nil!1549)))))

(declare-fun b!87417 () Bool)

(declare-fun e!56954 () Bool)

(declare-fun lt!41438 () List!1552)

(assert (=> b!87417 (= e!56954 (contains!764 lt!41438 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!87418 () Bool)

(declare-fun e!56953 () List!1552)

(declare-fun e!56951 () List!1552)

(assert (=> b!87418 (= e!56953 e!56951)))

(assert (=> b!87418 (= c!14405 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40173))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40173)))) (_1!1126 lt!40172))))))

(declare-fun b!87419 () Bool)

(declare-fun res!44852 () Bool)

(assert (=> b!87419 (=> (not res!44852) (not e!56954))))

(assert (=> b!87419 (= res!44852 (containsKey!143 lt!41438 (_1!1126 lt!40172)))))

(declare-fun d!23195 () Bool)

(assert (=> d!23195 e!56954))

(declare-fun res!44853 () Bool)

(assert (=> d!23195 (=> (not res!44853) (not e!56954))))

(assert (=> d!23195 (= res!44853 (isStrictlySorted!293 lt!41438))))

(assert (=> d!23195 (= lt!41438 e!56953)))

(declare-fun c!14407 () Bool)

(assert (=> d!23195 (= c!14407 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40173))) (bvslt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40173)))) (_1!1126 lt!40172))))))

(assert (=> d!23195 (isStrictlySorted!293 (t!5277 (toList!759 lt!40173)))))

(assert (=> d!23195 (= (insertStrictlySorted!60 (t!5277 (toList!759 lt!40173)) (_1!1126 lt!40172) (_2!1126 lt!40172)) lt!41438)))

(declare-fun call!8338 () List!1552)

(declare-fun bm!8335 () Bool)

(assert (=> bm!8335 (= call!8338 ($colon$colon!71 e!56952 (ite c!14407 (h!2139 (t!5277 (toList!759 lt!40173))) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172)))))))

(declare-fun c!14408 () Bool)

(assert (=> bm!8335 (= c!14408 c!14407)))

(declare-fun bm!8336 () Bool)

(declare-fun call!8340 () List!1552)

(declare-fun call!8339 () List!1552)

(assert (=> bm!8336 (= call!8340 call!8339)))

(declare-fun b!87420 () Bool)

(assert (=> b!87420 (= e!56953 call!8338)))

(declare-fun b!87421 () Bool)

(declare-fun e!56955 () List!1552)

(assert (=> b!87421 (= e!56955 call!8340)))

(declare-fun b!87422 () Bool)

(assert (=> b!87422 (= e!56951 call!8339)))

(declare-fun b!87423 () Bool)

(assert (=> b!87423 (= e!56952 (insertStrictlySorted!60 (t!5277 (t!5277 (toList!759 lt!40173))) (_1!1126 lt!40172) (_2!1126 lt!40172)))))

(declare-fun b!87424 () Bool)

(assert (=> b!87424 (= e!56955 call!8340)))

(declare-fun b!87425 () Bool)

(assert (=> b!87425 (= c!14406 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40173))) (bvsgt (_1!1126 (h!2139 (t!5277 (toList!759 lt!40173)))) (_1!1126 lt!40172))))))

(assert (=> b!87425 (= e!56951 e!56955)))

(declare-fun bm!8337 () Bool)

(assert (=> bm!8337 (= call!8339 call!8338)))

(assert (= (and d!23195 c!14407) b!87420))

(assert (= (and d!23195 (not c!14407)) b!87418))

(assert (= (and b!87418 c!14405) b!87422))

(assert (= (and b!87418 (not c!14405)) b!87425))

(assert (= (and b!87425 c!14406) b!87424))

(assert (= (and b!87425 (not c!14406)) b!87421))

(assert (= (or b!87424 b!87421) bm!8336))

(assert (= (or b!87422 bm!8336) bm!8337))

(assert (= (or b!87420 bm!8337) bm!8335))

(assert (= (and bm!8335 c!14408) b!87423))

(assert (= (and bm!8335 (not c!14408)) b!87416))

(assert (= (and d!23195 res!44853) b!87419))

(assert (= (and b!87419 res!44852) b!87417))

(declare-fun m!92979 () Bool)

(assert (=> b!87419 m!92979))

(declare-fun m!92981 () Bool)

(assert (=> b!87423 m!92981))

(declare-fun m!92983 () Bool)

(assert (=> d!23195 m!92983))

(assert (=> d!23195 m!91385))

(declare-fun m!92985 () Bool)

(assert (=> b!87417 m!92985))

(declare-fun m!92987 () Bool)

(assert (=> bm!8335 m!92987))

(assert (=> b!86090 d!23195))

(declare-fun d!23197 () Bool)

(assert (=> d!23197 (isDefined!93 (getValueByKey!139 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458))))

(declare-fun lt!41439 () Unit!2533)

(assert (=> d!23197 (= lt!41439 (choose!518 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458))))

(declare-fun e!56956 () Bool)

(assert (=> d!23197 e!56956))

(declare-fun res!44854 () Bool)

(assert (=> d!23197 (=> (not res!44854) (not e!56956))))

(assert (=> d!23197 (= res!44854 (isStrictlySorted!293 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!23197 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458) lt!41439)))

(declare-fun b!87426 () Bool)

(assert (=> b!87426 (= e!56956 (containsKey!143 (toList!759 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!40458))))

(assert (= (and d!23197 res!44854) b!87426))

(assert (=> d!23197 m!90229))

(assert (=> d!23197 m!90229))

(assert (=> d!23197 m!90231))

(declare-fun m!92989 () Bool)

(assert (=> d!23197 m!92989))

(declare-fun m!92991 () Bool)

(assert (=> d!23197 m!92991))

(assert (=> b!87426 m!90225))

(assert (=> b!85899 d!23197))

(assert (=> b!85899 d!22517))

(assert (=> b!85899 d!22519))

(declare-fun b!87427 () Bool)

(declare-fun e!56957 () Option!145)

(assert (=> b!87427 (= e!56957 (Some!144 (_2!1126 (h!2139 (toList!759 lt!40550)))))))

(declare-fun b!87429 () Bool)

(declare-fun e!56958 () Option!145)

(assert (=> b!87429 (= e!56958 (getValueByKey!139 (t!5277 (toList!759 lt!40550)) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87428 () Bool)

(assert (=> b!87428 (= e!56957 e!56958)))

(declare-fun c!14410 () Bool)

(assert (=> b!87428 (= c!14410 (and ((_ is Cons!1548) (toList!759 lt!40550)) (not (= (_1!1126 (h!2139 (toList!759 lt!40550))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!23199 () Bool)

(declare-fun c!14409 () Bool)

(assert (=> d!23199 (= c!14409 (and ((_ is Cons!1548) (toList!759 lt!40550)) (= (_1!1126 (h!2139 (toList!759 lt!40550))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!23199 (= (getValueByKey!139 (toList!759 lt!40550) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56957)))

(declare-fun b!87430 () Bool)

(assert (=> b!87430 (= e!56958 None!143)))

(assert (= (and d!23199 c!14409) b!87427))

(assert (= (and d!23199 (not c!14409)) b!87428))

(assert (= (and b!87428 c!14410) b!87429))

(assert (= (and b!87428 (not c!14410)) b!87430))

(declare-fun m!92993 () Bool)

(assert (=> b!87429 m!92993))

(assert (=> b!85816 d!23199))

(assert (=> b!85977 d!23011))

(assert (=> b!85977 d!23013))

(declare-fun d!23201 () Bool)

(declare-fun lt!41440 () Bool)

(assert (=> d!23201 (= lt!41440 (select (content!88 (t!5277 (toList!759 lt!40256))) lt!40172))))

(declare-fun e!56959 () Bool)

(assert (=> d!23201 (= lt!41440 e!56959)))

(declare-fun res!44856 () Bool)

(assert (=> d!23201 (=> (not res!44856) (not e!56959))))

(assert (=> d!23201 (= res!44856 ((_ is Cons!1548) (t!5277 (toList!759 lt!40256))))))

(assert (=> d!23201 (= (contains!764 (t!5277 (toList!759 lt!40256)) lt!40172) lt!41440)))

(declare-fun b!87431 () Bool)

(declare-fun e!56960 () Bool)

(assert (=> b!87431 (= e!56959 e!56960)))

(declare-fun res!44855 () Bool)

(assert (=> b!87431 (=> res!44855 e!56960)))

(assert (=> b!87431 (= res!44855 (= (h!2139 (t!5277 (toList!759 lt!40256))) lt!40172))))

(declare-fun b!87432 () Bool)

(assert (=> b!87432 (= e!56960 (contains!764 (t!5277 (t!5277 (toList!759 lt!40256))) lt!40172))))

(assert (= (and d!23201 res!44856) b!87431))

(assert (= (and b!87431 (not res!44855)) b!87432))

(assert (=> d!23201 m!92687))

(declare-fun m!92995 () Bool)

(assert (=> d!23201 m!92995))

(declare-fun m!92997 () Bool)

(assert (=> b!87432 m!92997))

(assert (=> b!86139 d!23201))

(assert (=> d!22243 d!22253))

(declare-fun d!23203 () Bool)

(assert (=> d!23203 (= (apply!82 (+!116 lt!40449 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40441) (apply!82 lt!40449 lt!40441))))

(assert (=> d!23203 true))

(declare-fun _$34!844 () Unit!2533)

(assert (=> d!23203 (= (choose!515 lt!40449 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40441) _$34!844)))

(declare-fun bs!3689 () Bool)

(assert (= bs!3689 d!23203))

(assert (=> bs!3689 m!89771))

(assert (=> bs!3689 m!89771))

(assert (=> bs!3689 m!89783))

(assert (=> bs!3689 m!89767))

(assert (=> d!22243 d!23203))

(assert (=> d!22243 d!22239))

(declare-fun d!23205 () Bool)

(declare-fun e!56962 () Bool)

(assert (=> d!23205 e!56962))

(declare-fun res!44857 () Bool)

(assert (=> d!23205 (=> res!44857 e!56962)))

(declare-fun lt!41443 () Bool)

(assert (=> d!23205 (= res!44857 (not lt!41443))))

(declare-fun lt!41444 () Bool)

(assert (=> d!23205 (= lt!41443 lt!41444)))

(declare-fun lt!41442 () Unit!2533)

(declare-fun e!56961 () Unit!2533)

(assert (=> d!23205 (= lt!41442 e!56961)))

(declare-fun c!14411 () Bool)

(assert (=> d!23205 (= c!14411 lt!41444)))

(assert (=> d!23205 (= lt!41444 (containsKey!143 (toList!759 lt!40449) lt!40441))))

(assert (=> d!23205 (= (contains!762 lt!40449 lt!40441) lt!41443)))

(declare-fun b!87433 () Bool)

(declare-fun lt!41441 () Unit!2533)

(assert (=> b!87433 (= e!56961 lt!41441)))

(assert (=> b!87433 (= lt!41441 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40449) lt!40441))))

(assert (=> b!87433 (isDefined!93 (getValueByKey!139 (toList!759 lt!40449) lt!40441))))

(declare-fun b!87434 () Bool)

(declare-fun Unit!2611 () Unit!2533)

(assert (=> b!87434 (= e!56961 Unit!2611)))

(declare-fun b!87435 () Bool)

(assert (=> b!87435 (= e!56962 (isDefined!93 (getValueByKey!139 (toList!759 lt!40449) lt!40441)))))

(assert (= (and d!23205 c!14411) b!87433))

(assert (= (and d!23205 (not c!14411)) b!87434))

(assert (= (and d!23205 (not res!44857)) b!87435))

(declare-fun m!92999 () Bool)

(assert (=> d!23205 m!92999))

(declare-fun m!93001 () Bool)

(assert (=> b!87433 m!93001))

(assert (=> b!87433 m!90237))

(assert (=> b!87433 m!90237))

(declare-fun m!93003 () Bool)

(assert (=> b!87433 m!93003))

(assert (=> b!87435 m!90237))

(assert (=> b!87435 m!90237))

(assert (=> b!87435 m!93003))

(assert (=> d!22243 d!23205))

(assert (=> d!22243 d!22261))

(declare-fun d!23207 () Bool)

(declare-fun e!56964 () Bool)

(assert (=> d!23207 e!56964))

(declare-fun res!44858 () Bool)

(assert (=> d!23207 (=> res!44858 e!56964)))

(declare-fun lt!41447 () Bool)

(assert (=> d!23207 (= res!44858 (not lt!41447))))

(declare-fun lt!41448 () Bool)

(assert (=> d!23207 (= lt!41447 lt!41448)))

(declare-fun lt!41446 () Unit!2533)

(declare-fun e!56963 () Unit!2533)

(assert (=> d!23207 (= lt!41446 e!56963)))

(declare-fun c!14412 () Bool)

(assert (=> d!23207 (= c!14412 lt!41448)))

(assert (=> d!23207 (= lt!41448 (containsKey!143 (toList!759 lt!40642) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!23207 (= (contains!762 lt!40642 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!41447)))

(declare-fun b!87436 () Bool)

(declare-fun lt!41445 () Unit!2533)

(assert (=> b!87436 (= e!56963 lt!41445)))

(assert (=> b!87436 (= lt!41445 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40642) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> b!87436 (isDefined!93 (getValueByKey!139 (toList!759 lt!40642) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87437 () Bool)

(declare-fun Unit!2612 () Unit!2533)

(assert (=> b!87437 (= e!56963 Unit!2612)))

(declare-fun b!87438 () Bool)

(assert (=> b!87438 (= e!56964 (isDefined!93 (getValueByKey!139 (toList!759 lt!40642) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (= (and d!23207 c!14412) b!87436))

(assert (= (and d!23207 (not c!14412)) b!87437))

(assert (= (and d!23207 (not res!44858)) b!87438))

(declare-fun m!93005 () Bool)

(assert (=> d!23207 m!93005))

(declare-fun m!93007 () Bool)

(assert (=> b!87436 m!93007))

(assert (=> b!87436 m!90361))

(assert (=> b!87436 m!90361))

(declare-fun m!93009 () Bool)

(assert (=> b!87436 m!93009))

(assert (=> b!87438 m!90361))

(assert (=> b!87438 m!90361))

(assert (=> b!87438 m!93009))

(assert (=> d!22275 d!23207))

(declare-fun b!87439 () Bool)

(declare-fun e!56965 () Option!145)

(assert (=> b!87439 (= e!56965 (Some!144 (_2!1126 (h!2139 lt!40641))))))

(declare-fun e!56966 () Option!145)

(declare-fun b!87441 () Bool)

(assert (=> b!87441 (= e!56966 (getValueByKey!139 (t!5277 lt!40641) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87440 () Bool)

(assert (=> b!87440 (= e!56965 e!56966)))

(declare-fun c!14414 () Bool)

(assert (=> b!87440 (= c!14414 (and ((_ is Cons!1548) lt!40641) (not (= (_1!1126 (h!2139 lt!40641)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun c!14413 () Bool)

(declare-fun d!23209 () Bool)

(assert (=> d!23209 (= c!14413 (and ((_ is Cons!1548) lt!40641) (= (_1!1126 (h!2139 lt!40641)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!23209 (= (getValueByKey!139 lt!40641 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) e!56965)))

(declare-fun b!87442 () Bool)

(assert (=> b!87442 (= e!56966 None!143)))

(assert (= (and d!23209 c!14413) b!87439))

(assert (= (and d!23209 (not c!14413)) b!87440))

(assert (= (and b!87440 c!14414) b!87441))

(assert (= (and b!87440 (not c!14414)) b!87442))

(declare-fun m!93011 () Bool)

(assert (=> b!87441 m!93011))

(assert (=> d!22275 d!23209))

(declare-fun d!23211 () Bool)

(assert (=> d!23211 (= (getValueByKey!139 lt!40641 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!41449 () Unit!2533)

(assert (=> d!23211 (= lt!41449 (choose!508 lt!40641 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun e!56967 () Bool)

(assert (=> d!23211 e!56967))

(declare-fun res!44859 () Bool)

(assert (=> d!23211 (=> (not res!44859) (not e!56967))))

(assert (=> d!23211 (= res!44859 (isStrictlySorted!293 lt!40641))))

(assert (=> d!23211 (= (lemmaContainsTupThenGetReturnValue!58 lt!40641 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!41449)))

(declare-fun b!87443 () Bool)

(declare-fun res!44860 () Bool)

(assert (=> b!87443 (=> (not res!44860) (not e!56967))))

(assert (=> b!87443 (= res!44860 (containsKey!143 lt!40641 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87444 () Bool)

(assert (=> b!87444 (= e!56967 (contains!764 lt!40641 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (= (and d!23211 res!44859) b!87443))

(assert (= (and b!87443 res!44860) b!87444))

(assert (=> d!23211 m!90355))

(declare-fun m!93013 () Bool)

(assert (=> d!23211 m!93013))

(declare-fun m!93015 () Bool)

(assert (=> d!23211 m!93015))

(declare-fun m!93017 () Bool)

(assert (=> b!87443 m!93017))

(declare-fun m!93019 () Bool)

(assert (=> b!87444 m!93019))

(assert (=> d!22275 d!23211))

(declare-fun e!56969 () List!1552)

(declare-fun c!14416 () Bool)

(declare-fun b!87445 () Bool)

(declare-fun c!14415 () Bool)

(assert (=> b!87445 (= e!56969 (ite c!14415 (t!5277 (toList!759 lt!40173)) (ite c!14416 (Cons!1548 (h!2139 (toList!759 lt!40173)) (t!5277 (toList!759 lt!40173))) Nil!1549)))))

(declare-fun lt!41450 () List!1552)

(declare-fun b!87446 () Bool)

(declare-fun e!56971 () Bool)

(assert (=> b!87446 (= e!56971 (contains!764 lt!41450 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!87447 () Bool)

(declare-fun e!56970 () List!1552)

(declare-fun e!56968 () List!1552)

(assert (=> b!87447 (= e!56970 e!56968)))

(assert (=> b!87447 (= c!14415 (and ((_ is Cons!1548) (toList!759 lt!40173)) (= (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!87448 () Bool)

(declare-fun res!44861 () Bool)

(assert (=> b!87448 (=> (not res!44861) (not e!56971))))

(assert (=> b!87448 (= res!44861 (containsKey!143 lt!41450 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun d!23213 () Bool)

(assert (=> d!23213 e!56971))

(declare-fun res!44862 () Bool)

(assert (=> d!23213 (=> (not res!44862) (not e!56971))))

(assert (=> d!23213 (= res!44862 (isStrictlySorted!293 lt!41450))))

(assert (=> d!23213 (= lt!41450 e!56970)))

(declare-fun c!14417 () Bool)

(assert (=> d!23213 (= c!14417 (and ((_ is Cons!1548) (toList!759 lt!40173)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!23213 (isStrictlySorted!293 (toList!759 lt!40173))))

(assert (=> d!23213 (= (insertStrictlySorted!60 (toList!759 lt!40173) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!41450)))

(declare-fun call!8341 () List!1552)

(declare-fun bm!8338 () Bool)

(assert (=> bm!8338 (= call!8341 ($colon$colon!71 e!56969 (ite c!14417 (h!2139 (toList!759 lt!40173)) (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun c!14418 () Bool)

(assert (=> bm!8338 (= c!14418 c!14417)))

(declare-fun bm!8339 () Bool)

(declare-fun call!8343 () List!1552)

(declare-fun call!8342 () List!1552)

(assert (=> bm!8339 (= call!8343 call!8342)))

(declare-fun b!87449 () Bool)

(assert (=> b!87449 (= e!56970 call!8341)))

(declare-fun b!87450 () Bool)

(declare-fun e!56972 () List!1552)

(assert (=> b!87450 (= e!56972 call!8343)))

(declare-fun b!87451 () Bool)

(assert (=> b!87451 (= e!56968 call!8342)))

(declare-fun b!87452 () Bool)

(assert (=> b!87452 (= e!56969 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40173)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87453 () Bool)

(assert (=> b!87453 (= e!56972 call!8343)))

(declare-fun b!87454 () Bool)

(assert (=> b!87454 (= c!14416 (and ((_ is Cons!1548) (toList!759 lt!40173)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40173))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> b!87454 (= e!56968 e!56972)))

(declare-fun bm!8340 () Bool)

(assert (=> bm!8340 (= call!8342 call!8341)))

(assert (= (and d!23213 c!14417) b!87449))

(assert (= (and d!23213 (not c!14417)) b!87447))

(assert (= (and b!87447 c!14415) b!87451))

(assert (= (and b!87447 (not c!14415)) b!87454))

(assert (= (and b!87454 c!14416) b!87453))

(assert (= (and b!87454 (not c!14416)) b!87450))

(assert (= (or b!87453 b!87450) bm!8339))

(assert (= (or b!87451 bm!8339) bm!8340))

(assert (= (or b!87449 bm!8340) bm!8338))

(assert (= (and bm!8338 c!14418) b!87452))

(assert (= (and bm!8338 (not c!14418)) b!87445))

(assert (= (and d!23213 res!44862) b!87448))

(assert (= (and b!87448 res!44861) b!87446))

(declare-fun m!93021 () Bool)

(assert (=> b!87448 m!93021))

(declare-fun m!93023 () Bool)

(assert (=> b!87452 m!93023))

(declare-fun m!93025 () Bool)

(assert (=> d!23213 m!93025))

(assert (=> d!23213 m!90581))

(declare-fun m!93027 () Bool)

(assert (=> b!87446 m!93027))

(declare-fun m!93029 () Bool)

(assert (=> bm!8338 m!93029))

(assert (=> d!22275 d!23213))

(declare-fun d!23215 () Bool)

(declare-fun c!14419 () Bool)

(assert (=> d!23215 (= c!14419 ((_ is Nil!1549) (toList!759 lt!40248)))))

(declare-fun e!56973 () (InoxSet tuple2!2232))

(assert (=> d!23215 (= (content!88 (toList!759 lt!40248)) e!56973)))

(declare-fun b!87455 () Bool)

(assert (=> b!87455 (= e!56973 ((as const (Array tuple2!2232 Bool)) false))))

(declare-fun b!87456 () Bool)

(assert (=> b!87456 (= e!56973 ((_ map or) (store ((as const (Array tuple2!2232 Bool)) false) (h!2139 (toList!759 lt!40248)) true) (content!88 (t!5277 (toList!759 lt!40248)))))))

(assert (= (and d!23215 c!14419) b!87455))

(assert (= (and d!23215 (not c!14419)) b!87456))

(declare-fun m!93031 () Bool)

(assert (=> b!87456 m!93031))

(assert (=> b!87456 m!92579))

(assert (=> d!22339 d!23215))

(assert (=> d!22279 d!22459))

(assert (=> b!85708 d!23017))

(assert (=> b!85708 d!22171))

(declare-fun d!23217 () Bool)

(declare-fun res!44863 () Bool)

(declare-fun e!56974 () Bool)

(assert (=> d!23217 (=> res!44863 e!56974)))

(assert (=> d!23217 (= res!44863 (and ((_ is Cons!1548) lt!40689) (= (_1!1126 (h!2139 lt!40689)) (_1!1126 lt!40172))))))

(assert (=> d!23217 (= (containsKey!143 lt!40689 (_1!1126 lt!40172)) e!56974)))

(declare-fun b!87457 () Bool)

(declare-fun e!56975 () Bool)

(assert (=> b!87457 (= e!56974 e!56975)))

(declare-fun res!44864 () Bool)

(assert (=> b!87457 (=> (not res!44864) (not e!56975))))

(assert (=> b!87457 (= res!44864 (and (or (not ((_ is Cons!1548) lt!40689)) (bvsle (_1!1126 (h!2139 lt!40689)) (_1!1126 lt!40172))) ((_ is Cons!1548) lt!40689) (bvslt (_1!1126 (h!2139 lt!40689)) (_1!1126 lt!40172))))))

(declare-fun b!87458 () Bool)

(assert (=> b!87458 (= e!56975 (containsKey!143 (t!5277 lt!40689) (_1!1126 lt!40172)))))

(assert (= (and d!23217 (not res!44863)) b!87457))

(assert (= (and b!87457 res!44864) b!87458))

(declare-fun m!93033 () Bool)

(assert (=> b!87458 m!93033))

(assert (=> b!86011 d!23217))

(declare-fun d!23219 () Bool)

(assert (=> d!23219 (isDefined!93 (getValueByKey!139 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41451 () Unit!2533)

(assert (=> d!23219 (= lt!41451 (choose!518 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56976 () Bool)

(assert (=> d!23219 e!56976))

(declare-fun res!44865 () Bool)

(assert (=> d!23219 (=> (not res!44865) (not e!56976))))

(assert (=> d!23219 (= res!44865 (isStrictlySorted!293 (toList!759 lt!40284)))))

(assert (=> d!23219 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000) lt!41451)))

(declare-fun b!87459 () Bool)

(assert (=> b!87459 (= e!56976 (containsKey!143 (toList!759 lt!40284) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23219 res!44865) b!87459))

(assert (=> d!23219 m!90151))

(assert (=> d!23219 m!90151))

(assert (=> d!23219 m!90153))

(declare-fun m!93035 () Bool)

(assert (=> d!23219 m!93035))

(assert (=> d!23219 m!91699))

(assert (=> b!87459 m!90147))

(assert (=> b!85842 d!23219))

(assert (=> b!85842 d!22583))

(assert (=> b!85842 d!22585))

(declare-fun b!87460 () Bool)

(declare-fun e!56977 () Option!145)

(assert (=> b!87460 (= e!56977 (Some!144 (_2!1126 (h!2139 (t!5277 (toList!759 lt!40177))))))))

(declare-fun e!56978 () Option!145)

(declare-fun b!87462 () Bool)

(assert (=> b!87462 (= e!56978 (getValueByKey!139 (t!5277 (t!5277 (toList!759 lt!40177))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))

(declare-fun b!87461 () Bool)

(assert (=> b!87461 (= e!56977 e!56978)))

(declare-fun c!14421 () Bool)

(assert (=> b!87461 (= c!14421 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40177))) (not (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40177)))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)))))))

(declare-fun c!14420 () Bool)

(declare-fun d!23221 () Bool)

(assert (=> d!23221 (= c!14420 (and ((_ is Cons!1548) (t!5277 (toList!759 lt!40177))) (= (_1!1126 (h!2139 (t!5277 (toList!759 lt!40177)))) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355))))))

(assert (=> d!23221 (= (getValueByKey!139 (t!5277 (toList!759 lt!40177)) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355)) e!56977)))

(declare-fun b!87463 () Bool)

(assert (=> b!87463 (= e!56978 None!143)))

(assert (= (and d!23221 c!14420) b!87460))

(assert (= (and d!23221 (not c!14420)) b!87461))

(assert (= (and b!87461 c!14421) b!87462))

(assert (= (and b!87461 (not c!14421)) b!87463))

(assert (=> b!87462 m!89417))

(declare-fun m!93037 () Bool)

(assert (=> b!87462 m!93037))

(assert (=> b!86145 d!23221))

(declare-fun d!23223 () Bool)

(declare-fun res!44866 () Bool)

(declare-fun e!56979 () Bool)

(assert (=> d!23223 (=> res!44866 e!56979)))

(assert (=> d!23223 (= res!44866 (and ((_ is Cons!1548) (toList!759 lt!40252)) (= (_1!1126 (h!2139 (toList!759 lt!40252))) (_1!1126 lt!40171))))))

(assert (=> d!23223 (= (containsKey!143 (toList!759 lt!40252) (_1!1126 lt!40171)) e!56979)))

(declare-fun b!87464 () Bool)

(declare-fun e!56980 () Bool)

(assert (=> b!87464 (= e!56979 e!56980)))

(declare-fun res!44867 () Bool)

(assert (=> b!87464 (=> (not res!44867) (not e!56980))))

(assert (=> b!87464 (= res!44867 (and (or (not ((_ is Cons!1548) (toList!759 lt!40252))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40252))) (_1!1126 lt!40171))) ((_ is Cons!1548) (toList!759 lt!40252)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40252))) (_1!1126 lt!40171))))))

(declare-fun b!87465 () Bool)

(assert (=> b!87465 (= e!56980 (containsKey!143 (t!5277 (toList!759 lt!40252)) (_1!1126 lt!40171)))))

(assert (= (and d!23223 (not res!44866)) b!87464))

(assert (= (and b!87464 res!44867) b!87465))

(declare-fun m!93039 () Bool)

(assert (=> b!87465 m!93039))

(assert (=> d!22285 d!23223))

(declare-fun b!87466 () Bool)

(declare-fun e!56983 () Bool)

(declare-fun call!8344 () Bool)

(assert (=> b!87466 (= e!56983 call!8344)))

(declare-fun b!87467 () Bool)

(declare-fun e!56982 () Bool)

(declare-fun e!56981 () Bool)

(assert (=> b!87467 (= e!56982 e!56981)))

(declare-fun res!44868 () Bool)

(assert (=> b!87467 (=> (not res!44868) (not e!56981))))

(declare-fun e!56984 () Bool)

(assert (=> b!87467 (= res!44868 (not e!56984))))

(declare-fun res!44869 () Bool)

(assert (=> b!87467 (=> (not res!44869) (not e!56984))))

(assert (=> b!87467 (= res!44869 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!23225 () Bool)

(declare-fun res!44870 () Bool)

(assert (=> d!23225 (=> res!44870 e!56982)))

(assert (=> d!23225 (= res!44870 (bvsge #b00000000000000000000000000000000 (size!2162 (_keys!4010 (v!2648 (underlying!293 thiss!992))))))))

(assert (=> d!23225 (= (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) #b00000000000000000000000000000000 Nil!1550) e!56982)))

(declare-fun b!87468 () Bool)

(assert (=> b!87468 (= e!56983 call!8344)))

(declare-fun b!87469 () Bool)

(assert (=> b!87469 (= e!56984 (contains!765 Nil!1550 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!87470 () Bool)

(assert (=> b!87470 (= e!56981 e!56983)))

(declare-fun c!14422 () Bool)

(assert (=> b!87470 (= c!14422 (validKeyInArray!0 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!8341 () Bool)

(assert (=> bm!8341 (= call!8344 (arrayNoDuplicates!0 (_keys!4010 (v!2648 (underlying!293 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14422 (Cons!1549 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) #b00000000000000000000000000000000) Nil!1550) Nil!1550)))))

(assert (= (and d!23225 (not res!44870)) b!87467))

(assert (= (and b!87467 res!44869) b!87469))

(assert (= (and b!87467 res!44868) b!87470))

(assert (= (and b!87470 c!14422) b!87468))

(assert (= (and b!87470 (not c!14422)) b!87466))

(assert (= (or b!87468 b!87466) bm!8341))

(assert (=> b!87467 m!92251))

(assert (=> b!87467 m!92251))

(assert (=> b!87467 m!92261))

(assert (=> b!87469 m!92251))

(assert (=> b!87469 m!92251))

(declare-fun m!93041 () Bool)

(assert (=> b!87469 m!93041))

(assert (=> b!87470 m!92251))

(assert (=> b!87470 m!92251))

(assert (=> b!87470 m!92261))

(assert (=> bm!8341 m!92251))

(declare-fun m!93043 () Bool)

(assert (=> bm!8341 m!93043))

(assert (=> b!85839 d!23225))

(declare-fun d!23227 () Bool)

(declare-fun e!56986 () Bool)

(assert (=> d!23227 e!56986))

(declare-fun res!44871 () Bool)

(assert (=> d!23227 (=> res!44871 e!56986)))

(declare-fun lt!41454 () Bool)

(assert (=> d!23227 (= res!44871 (not lt!41454))))

(declare-fun lt!41455 () Bool)

(assert (=> d!23227 (= lt!41454 lt!41455)))

(declare-fun lt!41453 () Unit!2533)

(declare-fun e!56985 () Unit!2533)

(assert (=> d!23227 (= lt!41453 e!56985)))

(declare-fun c!14423 () Bool)

(assert (=> d!23227 (= c!14423 lt!41455)))

(assert (=> d!23227 (= lt!41455 (containsKey!143 (toList!759 lt!40581) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23227 (= (contains!762 lt!40581 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41454)))

(declare-fun b!87471 () Bool)

(declare-fun lt!41452 () Unit!2533)

(assert (=> b!87471 (= e!56985 lt!41452)))

(assert (=> b!87471 (= lt!41452 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40581) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87471 (isDefined!93 (getValueByKey!139 (toList!759 lt!40581) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87472 () Bool)

(declare-fun Unit!2613 () Unit!2533)

(assert (=> b!87472 (= e!56985 Unit!2613)))

(declare-fun b!87473 () Bool)

(assert (=> b!87473 (= e!56986 (isDefined!93 (getValueByKey!139 (toList!759 lt!40581) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23227 c!14423) b!87471))

(assert (= (and d!23227 (not c!14423)) b!87472))

(assert (= (and d!23227 (not res!44871)) b!87473))

(declare-fun m!93045 () Bool)

(assert (=> d!23227 m!93045))

(declare-fun m!93047 () Bool)

(assert (=> b!87471 m!93047))

(declare-fun m!93049 () Bool)

(assert (=> b!87471 m!93049))

(assert (=> b!87471 m!93049))

(declare-fun m!93051 () Bool)

(assert (=> b!87471 m!93051))

(assert (=> b!87473 m!93049))

(assert (=> b!87473 m!93049))

(assert (=> b!87473 m!93051))

(assert (=> b!85861 d!23227))

(assert (=> d!22241 d!22235))

(assert (=> d!22241 d!22233))

(declare-fun d!23229 () Bool)

(assert (=> d!23229 (contains!762 (+!116 lt!40456 (tuple2!2233 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))))) lt!40458)))

(assert (=> d!23229 true))

(declare-fun _$35!330 () Unit!2533)

(assert (=> d!23229 (= (choose!514 lt!40456 lt!40440 (zeroValue!2230 (v!2648 (underlying!293 thiss!992))) lt!40458) _$35!330)))

(declare-fun bs!3690 () Bool)

(assert (= bs!3690 d!23229))

(assert (=> bs!3690 m!89763))

(assert (=> bs!3690 m!89763))

(assert (=> bs!3690 m!89765))

(assert (=> d!22241 d!23229))

(declare-fun d!23231 () Bool)

(declare-fun e!56988 () Bool)

(assert (=> d!23231 e!56988))

(declare-fun res!44872 () Bool)

(assert (=> d!23231 (=> res!44872 e!56988)))

(declare-fun lt!41458 () Bool)

(assert (=> d!23231 (= res!44872 (not lt!41458))))

(declare-fun lt!41459 () Bool)

(assert (=> d!23231 (= lt!41458 lt!41459)))

(declare-fun lt!41457 () Unit!2533)

(declare-fun e!56987 () Unit!2533)

(assert (=> d!23231 (= lt!41457 e!56987)))

(declare-fun c!14424 () Bool)

(assert (=> d!23231 (= c!14424 lt!41459)))

(assert (=> d!23231 (= lt!41459 (containsKey!143 (toList!759 lt!40456) lt!40458))))

(assert (=> d!23231 (= (contains!762 lt!40456 lt!40458) lt!41458)))

(declare-fun b!87475 () Bool)

(declare-fun lt!41456 () Unit!2533)

(assert (=> b!87475 (= e!56987 lt!41456)))

(assert (=> b!87475 (= lt!41456 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40456) lt!40458))))

(assert (=> b!87475 (isDefined!93 (getValueByKey!139 (toList!759 lt!40456) lt!40458))))

(declare-fun b!87476 () Bool)

(declare-fun Unit!2614 () Unit!2533)

(assert (=> b!87476 (= e!56987 Unit!2614)))

(declare-fun b!87477 () Bool)

(assert (=> b!87477 (= e!56988 (isDefined!93 (getValueByKey!139 (toList!759 lt!40456) lt!40458)))))

(assert (= (and d!23231 c!14424) b!87475))

(assert (= (and d!23231 (not c!14424)) b!87476))

(assert (= (and d!23231 (not res!44872)) b!87477))

(declare-fun m!93053 () Bool)

(assert (=> d!23231 m!93053))

(declare-fun m!93055 () Bool)

(assert (=> b!87475 m!93055))

(declare-fun m!93057 () Bool)

(assert (=> b!87475 m!93057))

(assert (=> b!87475 m!93057))

(declare-fun m!93059 () Bool)

(assert (=> b!87475 m!93059))

(assert (=> b!87477 m!93057))

(assert (=> b!87477 m!93057))

(assert (=> b!87477 m!93059))

(assert (=> d!22241 d!23231))

(assert (=> b!86052 d!22141))

(declare-fun d!23233 () Bool)

(assert (=> d!23233 (= (get!1215 (select (arr!1919 (_values!2321 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!352 (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85699 d!23233))

(declare-fun d!23235 () Bool)

(assert (=> d!23235 (= (apply!82 lt!40666 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1216 (getValueByKey!139 (toList!759 lt!40666) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3691 () Bool)

(assert (= bs!3691 d!23235))

(assert (=> bs!3691 m!91329))

(assert (=> bs!3691 m!91329))

(declare-fun m!93061 () Bool)

(assert (=> bs!3691 m!93061))

(assert (=> b!85998 d!23235))

(declare-fun d!23237 () Bool)

(assert (=> d!23237 (= (apply!82 lt!40834 (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1216 (getValueByKey!139 (toList!759 lt!40834) (select (arr!1918 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3692 () Bool)

(assert (= bs!3692 d!23237))

(assert (=> bs!3692 m!89941))

(assert (=> bs!3692 m!92337))

(assert (=> bs!3692 m!92337))

(declare-fun m!93063 () Bool)

(assert (=> bs!3692 m!93063))

(assert (=> b!86167 d!23237))

(declare-fun d!23239 () Bool)

(declare-fun c!14425 () Bool)

(assert (=> d!23239 (= c!14425 ((_ is ValueCellFull!924) (select (arr!1919 (ite c!13870 (_values!2321 newMap!16) lt!40379)) #b00000000000000000000000000000000)))))

(declare-fun e!56989 () V!3027)

(assert (=> d!23239 (= (get!1212 (select (arr!1919 (ite c!13870 (_values!2321 newMap!16) lt!40379)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56989)))

(declare-fun b!87478 () Bool)

(assert (=> b!87478 (= e!56989 (get!1214 (select (arr!1919 (ite c!13870 (_values!2321 newMap!16) lt!40379)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!87479 () Bool)

(assert (=> b!87479 (= e!56989 (get!1215 (select (arr!1919 (ite c!13870 (_values!2321 newMap!16) lt!40379)) #b00000000000000000000000000000000) (dynLambda!352 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23239 c!14425) b!87478))

(assert (= (and d!23239 (not c!14425)) b!87479))

(assert (=> b!87478 m!90753))

(assert (=> b!87478 m!89967))

(declare-fun m!93065 () Bool)

(assert (=> b!87478 m!93065))

(assert (=> b!87479 m!90753))

(assert (=> b!87479 m!89967))

(declare-fun m!93067 () Bool)

(assert (=> b!87479 m!93067))

(assert (=> b!86167 d!23239))

(declare-fun d!23241 () Bool)

(assert (=> d!23241 (= ($colon$colon!71 e!56046 (ite c!13998 (h!2139 (toList!759 lt!40176)) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171)))) (Cons!1548 (ite c!13998 (h!2139 (toList!759 lt!40176)) (tuple2!2233 (_1!1126 lt!40171) (_2!1126 lt!40171))) e!56046))))

(assert (=> bm!8164 d!23241))

(declare-fun d!23243 () Bool)

(declare-fun lt!41460 () Bool)

(assert (=> d!23243 (= lt!41460 (select (content!88 lt!40285) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun e!56990 () Bool)

(assert (=> d!23243 (= lt!41460 e!56990)))

(declare-fun res!44874 () Bool)

(assert (=> d!23243 (=> (not res!44874) (not e!56990))))

(assert (=> d!23243 (= res!44874 ((_ is Cons!1548) lt!40285))))

(assert (=> d!23243 (= (contains!764 lt!40285 (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))) lt!41460)))

(declare-fun b!87480 () Bool)

(declare-fun e!56991 () Bool)

(assert (=> b!87480 (= e!56990 e!56991)))

(declare-fun res!44873 () Bool)

(assert (=> b!87480 (=> res!44873 e!56991)))

(assert (=> b!87480 (= res!44873 (= (h!2139 lt!40285) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(declare-fun b!87481 () Bool)

(assert (=> b!87481 (= e!56991 (contains!764 (t!5277 lt!40285) (tuple2!2233 (_1!1126 lt!40163) (_2!1126 lt!40163))))))

(assert (= (and d!23243 res!44874) b!87480))

(assert (= (and b!87480 (not res!44873)) b!87481))

(declare-fun m!93069 () Bool)

(assert (=> d!23243 m!93069))

(declare-fun m!93071 () Bool)

(assert (=> d!23243 m!93071))

(declare-fun m!93073 () Bool)

(assert (=> b!87481 m!93073))

(assert (=> b!85714 d!23243))

(declare-fun d!23245 () Bool)

(declare-fun e!56993 () Bool)

(assert (=> d!23245 e!56993))

(declare-fun res!44875 () Bool)

(assert (=> d!23245 (=> res!44875 e!56993)))

(declare-fun lt!41463 () Bool)

(assert (=> d!23245 (= res!44875 (not lt!41463))))

(declare-fun lt!41464 () Bool)

(assert (=> d!23245 (= lt!41463 lt!41464)))

(declare-fun lt!41462 () Unit!2533)

(declare-fun e!56992 () Unit!2533)

(assert (=> d!23245 (= lt!41462 e!56992)))

(declare-fun c!14426 () Bool)

(assert (=> d!23245 (= c!14426 lt!41464)))

(assert (=> d!23245 (= lt!41464 (containsKey!143 (toList!759 lt!40617) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!23245 (= (contains!762 lt!40617 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41463)))

(declare-fun b!87482 () Bool)

(declare-fun lt!41461 () Unit!2533)

(assert (=> b!87482 (= e!56992 lt!41461)))

(assert (=> b!87482 (= lt!41461 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40617) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> b!87482 (isDefined!93 (getValueByKey!139 (toList!759 lt!40617) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87483 () Bool)

(declare-fun Unit!2615 () Unit!2533)

(assert (=> b!87483 (= e!56992 Unit!2615)))

(declare-fun b!87484 () Bool)

(assert (=> b!87484 (= e!56993 (isDefined!93 (getValueByKey!139 (toList!759 lt!40617) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!23245 c!14426) b!87482))

(assert (= (and d!23245 (not c!14426)) b!87483))

(assert (= (and d!23245 (not res!44875)) b!87484))

(declare-fun m!93075 () Bool)

(assert (=> d!23245 m!93075))

(declare-fun m!93077 () Bool)

(assert (=> b!87482 m!93077))

(assert (=> b!87482 m!90305))

(assert (=> b!87482 m!90305))

(declare-fun m!93079 () Bool)

(assert (=> b!87482 m!93079))

(assert (=> b!87484 m!90305))

(assert (=> b!87484 m!90305))

(assert (=> b!87484 m!93079))

(assert (=> d!22261 d!23245))

(declare-fun b!87485 () Bool)

(declare-fun e!56994 () Option!145)

(assert (=> b!87485 (= e!56994 (Some!144 (_2!1126 (h!2139 lt!40616))))))

(declare-fun b!87487 () Bool)

(declare-fun e!56995 () Option!145)

(assert (=> b!87487 (= e!56995 (getValueByKey!139 (t!5277 lt!40616) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87486 () Bool)

(assert (=> b!87486 (= e!56994 e!56995)))

(declare-fun c!14428 () Bool)

(assert (=> b!87486 (= c!14428 (and ((_ is Cons!1548) lt!40616) (not (= (_1!1126 (h!2139 lt!40616)) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14427 () Bool)

(declare-fun d!23247 () Bool)

(assert (=> d!23247 (= c!14427 (and ((_ is Cons!1548) lt!40616) (= (_1!1126 (h!2139 lt!40616)) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!23247 (= (getValueByKey!139 lt!40616 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!56994)))

(declare-fun b!87488 () Bool)

(assert (=> b!87488 (= e!56995 None!143)))

(assert (= (and d!23247 c!14427) b!87485))

(assert (= (and d!23247 (not c!14427)) b!87486))

(assert (= (and b!87486 c!14428) b!87487))

(assert (= (and b!87486 (not c!14428)) b!87488))

(declare-fun m!93081 () Bool)

(assert (=> b!87487 m!93081))

(assert (=> d!22261 d!23247))

(declare-fun d!23249 () Bool)

(assert (=> d!23249 (= (getValueByKey!139 lt!40616 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!41465 () Unit!2533)

(assert (=> d!23249 (= lt!41465 (choose!508 lt!40616 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun e!56996 () Bool)

(assert (=> d!23249 e!56996))

(declare-fun res!44876 () Bool)

(assert (=> d!23249 (=> (not res!44876) (not e!56996))))

(assert (=> d!23249 (= res!44876 (isStrictlySorted!293 lt!40616))))

(assert (=> d!23249 (= (lemmaContainsTupThenGetReturnValue!58 lt!40616 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41465)))

(declare-fun b!87489 () Bool)

(declare-fun res!44877 () Bool)

(assert (=> b!87489 (=> (not res!44877) (not e!56996))))

(assert (=> b!87489 (= res!44877 (containsKey!143 lt!40616 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87490 () Bool)

(assert (=> b!87490 (= e!56996 (contains!764 lt!40616 (tuple2!2233 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!23249 res!44876) b!87489))

(assert (= (and b!87489 res!44877) b!87490))

(assert (=> d!23249 m!90299))

(declare-fun m!93083 () Bool)

(assert (=> d!23249 m!93083))

(declare-fun m!93085 () Bool)

(assert (=> d!23249 m!93085))

(declare-fun m!93087 () Bool)

(assert (=> b!87489 m!93087))

(declare-fun m!93089 () Bool)

(assert (=> b!87490 m!93089))

(assert (=> d!22261 d!23249))

(declare-fun c!14429 () Bool)

(declare-fun e!56998 () List!1552)

(declare-fun c!14430 () Bool)

(declare-fun b!87491 () Bool)

(assert (=> b!87491 (= e!56998 (ite c!14429 (t!5277 (toList!759 lt!40449)) (ite c!14430 (Cons!1548 (h!2139 (toList!759 lt!40449)) (t!5277 (toList!759 lt!40449))) Nil!1549)))))

(declare-fun b!87492 () Bool)

(declare-fun e!57000 () Bool)

(declare-fun lt!41466 () List!1552)

(assert (=> b!87492 (= e!57000 (contains!764 lt!41466 (tuple2!2233 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!87493 () Bool)

(declare-fun e!56999 () List!1552)

(declare-fun e!56997 () List!1552)

(assert (=> b!87493 (= e!56999 e!56997)))

(assert (=> b!87493 (= c!14429 (and ((_ is Cons!1548) (toList!759 lt!40449)) (= (_1!1126 (h!2139 (toList!759 lt!40449))) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!87494 () Bool)

(declare-fun res!44878 () Bool)

(assert (=> b!87494 (=> (not res!44878) (not e!57000))))

(assert (=> b!87494 (= res!44878 (containsKey!143 lt!41466 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun d!23251 () Bool)

(assert (=> d!23251 e!57000))

(declare-fun res!44879 () Bool)

(assert (=> d!23251 (=> (not res!44879) (not e!57000))))

(assert (=> d!23251 (= res!44879 (isStrictlySorted!293 lt!41466))))

(assert (=> d!23251 (= lt!41466 e!56999)))

(declare-fun c!14431 () Bool)

(assert (=> d!23251 (= c!14431 (and ((_ is Cons!1548) (toList!759 lt!40449)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40449))) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!23251 (isStrictlySorted!293 (toList!759 lt!40449))))

(assert (=> d!23251 (= (insertStrictlySorted!60 (toList!759 lt!40449) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41466)))

(declare-fun bm!8342 () Bool)

(declare-fun call!8345 () List!1552)

(assert (=> bm!8342 (= call!8345 ($colon$colon!71 e!56998 (ite c!14431 (h!2139 (toList!759 lt!40449)) (tuple2!2233 (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14432 () Bool)

(assert (=> bm!8342 (= c!14432 c!14431)))

(declare-fun bm!8343 () Bool)

(declare-fun call!8347 () List!1552)

(declare-fun call!8346 () List!1552)

(assert (=> bm!8343 (= call!8347 call!8346)))

(declare-fun b!87495 () Bool)

(assert (=> b!87495 (= e!56999 call!8345)))

(declare-fun b!87496 () Bool)

(declare-fun e!57001 () List!1552)

(assert (=> b!87496 (= e!57001 call!8347)))

(declare-fun b!87497 () Bool)

(assert (=> b!87497 (= e!56997 call!8346)))

(declare-fun b!87498 () Bool)

(assert (=> b!87498 (= e!56998 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40449)) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87499 () Bool)

(assert (=> b!87499 (= e!57001 call!8347)))

(declare-fun b!87500 () Bool)

(assert (=> b!87500 (= c!14430 (and ((_ is Cons!1548) (toList!759 lt!40449)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40449))) (_1!1126 (tuple2!2233 lt!40460 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> b!87500 (= e!56997 e!57001)))

(declare-fun bm!8344 () Bool)

(assert (=> bm!8344 (= call!8346 call!8345)))

(assert (= (and d!23251 c!14431) b!87495))

(assert (= (and d!23251 (not c!14431)) b!87493))

(assert (= (and b!87493 c!14429) b!87497))

(assert (= (and b!87493 (not c!14429)) b!87500))

(assert (= (and b!87500 c!14430) b!87499))

(assert (= (and b!87500 (not c!14430)) b!87496))

(assert (= (or b!87499 b!87496) bm!8343))

(assert (= (or b!87497 bm!8343) bm!8344))

(assert (= (or b!87495 bm!8344) bm!8342))

(assert (= (and bm!8342 c!14432) b!87498))

(assert (= (and bm!8342 (not c!14432)) b!87491))

(assert (= (and d!23251 res!44879) b!87494))

(assert (= (and b!87494 res!44878) b!87492))

(declare-fun m!93091 () Bool)

(assert (=> b!87494 m!93091))

(declare-fun m!93093 () Bool)

(assert (=> b!87498 m!93093))

(declare-fun m!93095 () Bool)

(assert (=> d!23251 m!93095))

(declare-fun m!93097 () Bool)

(assert (=> d!23251 m!93097))

(declare-fun m!93099 () Bool)

(assert (=> b!87492 m!93099))

(declare-fun m!93101 () Bool)

(assert (=> bm!8342 m!93101))

(assert (=> d!22261 d!23251))

(assert (=> b!85836 d!23045))

(assert (=> b!85836 d!23047))

(declare-fun lt!41467 () Bool)

(declare-fun d!23253 () Bool)

(assert (=> d!23253 (= lt!41467 (select (content!88 (toList!759 lt!40642)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun e!57002 () Bool)

(assert (=> d!23253 (= lt!41467 e!57002)))

(declare-fun res!44881 () Bool)

(assert (=> d!23253 (=> (not res!44881) (not e!57002))))

(assert (=> d!23253 (= res!44881 ((_ is Cons!1548) (toList!759 lt!40642)))))

(assert (=> d!23253 (= (contains!764 (toList!759 lt!40642) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) lt!41467)))

(declare-fun b!87501 () Bool)

(declare-fun e!57003 () Bool)

(assert (=> b!87501 (= e!57002 e!57003)))

(declare-fun res!44880 () Bool)

(assert (=> b!87501 (=> res!44880 e!57003)))

(assert (=> b!87501 (= res!44880 (= (h!2139 (toList!759 lt!40642)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(declare-fun b!87502 () Bool)

(assert (=> b!87502 (= e!57003 (contains!764 (t!5277 (toList!759 lt!40642)) (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))

(assert (= (and d!23253 res!44881) b!87501))

(assert (= (and b!87501 (not res!44880)) b!87502))

(declare-fun m!93103 () Bool)

(assert (=> d!23253 m!93103))

(declare-fun m!93105 () Bool)

(assert (=> d!23253 m!93105))

(declare-fun m!93107 () Bool)

(assert (=> b!87502 m!93107))

(assert (=> b!85940 d!23253))

(declare-fun d!23255 () Bool)

(declare-fun e!57005 () Bool)

(assert (=> d!23255 e!57005))

(declare-fun res!44882 () Bool)

(assert (=> d!23255 (=> res!44882 e!57005)))

(declare-fun lt!41470 () Bool)

(assert (=> d!23255 (= res!44882 (not lt!41470))))

(declare-fun lt!41471 () Bool)

(assert (=> d!23255 (= lt!41470 lt!41471)))

(declare-fun lt!41469 () Unit!2533)

(declare-fun e!57004 () Unit!2533)

(assert (=> d!23255 (= lt!41469 e!57004)))

(declare-fun c!14433 () Bool)

(assert (=> d!23255 (= c!14433 lt!41471)))

(assert (=> d!23255 (= lt!41471 (containsKey!143 (toList!759 lt!40583) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> d!23255 (= (contains!762 lt!40583 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!41470)))

(declare-fun b!87503 () Bool)

(declare-fun lt!41468 () Unit!2533)

(assert (=> b!87503 (= e!57004 lt!41468)))

(assert (=> b!87503 (= lt!41468 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40583) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(assert (=> b!87503 (isDefined!93 (getValueByKey!139 (toList!759 lt!40583) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87504 () Bool)

(declare-fun Unit!2616 () Unit!2533)

(assert (=> b!87504 (= e!57004 Unit!2616)))

(declare-fun b!87505 () Bool)

(assert (=> b!87505 (= e!57005 (isDefined!93 (getValueByKey!139 (toList!759 lt!40583) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (= (and d!23255 c!14433) b!87503))

(assert (= (and d!23255 (not c!14433)) b!87504))

(assert (= (and d!23255 (not res!44882)) b!87505))

(declare-fun m!93109 () Bool)

(assert (=> d!23255 m!93109))

(declare-fun m!93111 () Bool)

(assert (=> b!87503 m!93111))

(assert (=> b!87503 m!90199))

(assert (=> b!87503 m!90199))

(declare-fun m!93113 () Bool)

(assert (=> b!87503 m!93113))

(assert (=> b!87505 m!90199))

(assert (=> b!87505 m!90199))

(assert (=> b!87505 m!93113))

(assert (=> d!22225 d!23255))

(declare-fun b!87506 () Bool)

(declare-fun e!57006 () Option!145)

(assert (=> b!87506 (= e!57006 (Some!144 (_2!1126 (h!2139 lt!40582))))))

(declare-fun e!57007 () Option!145)

(declare-fun b!87508 () Bool)

(assert (=> b!87508 (= e!57007 (getValueByKey!139 (t!5277 lt!40582) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87507 () Bool)

(assert (=> b!87507 (= e!57006 e!57007)))

(declare-fun c!14435 () Bool)

(assert (=> b!87507 (= c!14435 (and ((_ is Cons!1548) lt!40582) (not (= (_1!1126 (h!2139 lt!40582)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun d!23257 () Bool)

(declare-fun c!14434 () Bool)

(assert (=> d!23257 (= c!14434 (and ((_ is Cons!1548) lt!40582) (= (_1!1126 (h!2139 lt!40582)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!23257 (= (getValueByKey!139 lt!40582 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) e!57006)))

(declare-fun b!87509 () Bool)

(assert (=> b!87509 (= e!57007 None!143)))

(assert (= (and d!23257 c!14434) b!87506))

(assert (= (and d!23257 (not c!14434)) b!87507))

(assert (= (and b!87507 c!14435) b!87508))

(assert (= (and b!87507 (not c!14435)) b!87509))

(declare-fun m!93115 () Bool)

(assert (=> b!87508 m!93115))

(assert (=> d!22225 d!23257))

(declare-fun d!23259 () Bool)

(assert (=> d!23259 (= (getValueByKey!139 lt!40582 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) (Some!144 (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun lt!41472 () Unit!2533)

(assert (=> d!23259 (= lt!41472 (choose!508 lt!40582 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun e!57008 () Bool)

(assert (=> d!23259 e!57008))

(declare-fun res!44883 () Bool)

(assert (=> d!23259 (=> (not res!44883) (not e!57008))))

(assert (=> d!23259 (= res!44883 (isStrictlySorted!293 lt!40582))))

(assert (=> d!23259 (= (lemmaContainsTupThenGetReturnValue!58 lt!40582 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!41472)))

(declare-fun b!87510 () Bool)

(declare-fun res!44884 () Bool)

(assert (=> b!87510 (=> (not res!44884) (not e!57008))))

(assert (=> b!87510 (= res!44884 (containsKey!143 lt!40582 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87511 () Bool)

(assert (=> b!87511 (= e!57008 (contains!764 lt!40582 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (= (and d!23259 res!44883) b!87510))

(assert (= (and b!87510 res!44884) b!87511))

(assert (=> d!23259 m!90193))

(declare-fun m!93117 () Bool)

(assert (=> d!23259 m!93117))

(declare-fun m!93119 () Bool)

(assert (=> d!23259 m!93119))

(declare-fun m!93121 () Bool)

(assert (=> b!87510 m!93121))

(declare-fun m!93123 () Bool)

(assert (=> b!87511 m!93123))

(assert (=> d!22225 d!23259))

(declare-fun b!87512 () Bool)

(declare-fun c!14437 () Bool)

(declare-fun c!14436 () Bool)

(declare-fun e!57010 () List!1552)

(assert (=> b!87512 (= e!57010 (ite c!14436 (t!5277 (toList!759 call!8085)) (ite c!14437 (Cons!1548 (h!2139 (toList!759 call!8085)) (t!5277 (toList!759 call!8085))) Nil!1549)))))

(declare-fun e!57012 () Bool)

(declare-fun lt!41473 () List!1552)

(declare-fun b!87513 () Bool)

(assert (=> b!87513 (= e!57012 (contains!764 lt!41473 (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!87514 () Bool)

(declare-fun e!57011 () List!1552)

(declare-fun e!57009 () List!1552)

(assert (=> b!87514 (= e!57011 e!57009)))

(assert (=> b!87514 (= c!14436 (and ((_ is Cons!1548) (toList!759 call!8085)) (= (_1!1126 (h!2139 (toList!759 call!8085))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(declare-fun b!87515 () Bool)

(declare-fun res!44885 () Bool)

(assert (=> b!87515 (=> (not res!44885) (not e!57012))))

(assert (=> b!87515 (= res!44885 (containsKey!143 lt!41473 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun d!23261 () Bool)

(assert (=> d!23261 e!57012))

(declare-fun res!44886 () Bool)

(assert (=> d!23261 (=> (not res!44886) (not e!57012))))

(assert (=> d!23261 (= res!44886 (isStrictlySorted!293 lt!41473))))

(assert (=> d!23261 (= lt!41473 e!57011)))

(declare-fun c!14438 () Bool)

(assert (=> d!23261 (= c!14438 (and ((_ is Cons!1548) (toList!759 call!8085)) (bvslt (_1!1126 (h!2139 (toList!759 call!8085))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> d!23261 (isStrictlySorted!293 (toList!759 call!8085))))

(assert (=> d!23261 (= (insertStrictlySorted!60 (toList!759 call!8085) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))) lt!41473)))

(declare-fun call!8348 () List!1552)

(declare-fun bm!8345 () Bool)

(assert (=> bm!8345 (= call!8348 ($colon$colon!71 e!57010 (ite c!14438 (h!2139 (toList!759 call!8085)) (tuple2!2233 (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))))

(declare-fun c!14439 () Bool)

(assert (=> bm!8345 (= c!14439 c!14438)))

(declare-fun bm!8346 () Bool)

(declare-fun call!8350 () List!1552)

(declare-fun call!8349 () List!1552)

(assert (=> bm!8346 (= call!8350 call!8349)))

(declare-fun b!87516 () Bool)

(assert (=> b!87516 (= e!57011 call!8348)))

(declare-fun b!87517 () Bool)

(declare-fun e!57013 () List!1552)

(assert (=> b!87517 (= e!57013 call!8350)))

(declare-fun b!87518 () Bool)

(assert (=> b!87518 (= e!57009 call!8349)))

(declare-fun b!87519 () Bool)

(assert (=> b!87519 (= e!57010 (insertStrictlySorted!60 (t!5277 (toList!759 call!8085)) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)) (_2!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164))))))

(declare-fun b!87520 () Bool)

(assert (=> b!87520 (= e!57013 call!8350)))

(declare-fun b!87521 () Bool)

(assert (=> b!87521 (= c!14437 (and ((_ is Cons!1548) (toList!759 call!8085)) (bvsgt (_1!1126 (h!2139 (toList!759 call!8085))) (_1!1126 (tuple2!2233 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) from!355) lt!40164)))))))

(assert (=> b!87521 (= e!57009 e!57013)))

(declare-fun bm!8347 () Bool)

(assert (=> bm!8347 (= call!8349 call!8348)))

(assert (= (and d!23261 c!14438) b!87516))

(assert (= (and d!23261 (not c!14438)) b!87514))

(assert (= (and b!87514 c!14436) b!87518))

(assert (= (and b!87514 (not c!14436)) b!87521))

(assert (= (and b!87521 c!14437) b!87520))

(assert (= (and b!87521 (not c!14437)) b!87517))

(assert (= (or b!87520 b!87517) bm!8346))

(assert (= (or b!87518 bm!8346) bm!8347))

(assert (= (or b!87516 bm!8347) bm!8345))

(assert (= (and bm!8345 c!14439) b!87519))

(assert (= (and bm!8345 (not c!14439)) b!87512))

(assert (= (and d!23261 res!44886) b!87515))

(assert (= (and b!87515 res!44885) b!87513))

(declare-fun m!93125 () Bool)

(assert (=> b!87515 m!93125))

(declare-fun m!93127 () Bool)

(assert (=> b!87519 m!93127))

(declare-fun m!93129 () Bool)

(assert (=> d!23261 m!93129))

(declare-fun m!93131 () Bool)

(assert (=> d!23261 m!93131))

(declare-fun m!93133 () Bool)

(assert (=> b!87513 m!93133))

(declare-fun m!93135 () Bool)

(assert (=> bm!8345 m!93135))

(assert (=> d!22225 d!23261))

(declare-fun d!23263 () Bool)

(declare-fun e!57014 () Bool)

(assert (=> d!23263 e!57014))

(declare-fun res!44887 () Bool)

(assert (=> d!23263 (=> (not res!44887) (not e!57014))))

(declare-fun lt!41475 () ListLongMap!1487)

(assert (=> d!23263 (= res!44887 (contains!762 lt!41475 (_1!1126 (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(declare-fun lt!41474 () List!1552)

(assert (=> d!23263 (= lt!41475 (ListLongMap!1488 lt!41474))))

(declare-fun lt!41476 () Unit!2533)

(declare-fun lt!41477 () Unit!2533)

(assert (=> d!23263 (= lt!41476 lt!41477)))

(assert (=> d!23263 (= (getValueByKey!139 lt!41474 (_1!1126 (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))) (Some!144 (_2!1126 (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!23263 (= lt!41477 (lemmaContainsTupThenGetReturnValue!58 lt!41474 (_1!1126 (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (_2!1126 (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!23263 (= lt!41474 (insertStrictlySorted!60 (toList!759 (ite c!14004 call!8173 (ite c!14002 call!8176 call!8174))) (_1!1126 (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (_2!1126 (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!23263 (= (+!116 (ite c!14004 call!8173 (ite c!14002 call!8176 call!8174)) (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) lt!41475)))

(declare-fun b!87522 () Bool)

(declare-fun res!44888 () Bool)

(assert (=> b!87522 (=> (not res!44888) (not e!57014))))

(assert (=> b!87522 (= res!44888 (= (getValueByKey!139 (toList!759 lt!41475) (_1!1126 (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))) (Some!144 (_2!1126 (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))))

(declare-fun b!87523 () Bool)

(assert (=> b!87523 (= e!57014 (contains!764 (toList!759 lt!41475) (ite (or c!14004 c!14002) (tuple2!2233 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (= (and d!23263 res!44887) b!87522))

(assert (= (and b!87522 res!44888) b!87523))

(declare-fun m!93137 () Bool)

(assert (=> d!23263 m!93137))

(declare-fun m!93139 () Bool)

(assert (=> d!23263 m!93139))

(declare-fun m!93141 () Bool)

(assert (=> d!23263 m!93141))

(declare-fun m!93143 () Bool)

(assert (=> d!23263 m!93143))

(declare-fun m!93145 () Bool)

(assert (=> b!87522 m!93145))

(declare-fun m!93147 () Bool)

(assert (=> b!87523 m!93147))

(assert (=> bm!8169 d!23263))

(declare-fun d!23265 () Bool)

(declare-fun lt!41478 () Bool)

(assert (=> d!23265 (= lt!41478 (select (content!88 lt!40790) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun e!57015 () Bool)

(assert (=> d!23265 (= lt!41478 e!57015)))

(declare-fun res!44890 () Bool)

(assert (=> d!23265 (=> (not res!44890) (not e!57015))))

(assert (=> d!23265 (= res!44890 ((_ is Cons!1548) lt!40790))))

(assert (=> d!23265 (= (contains!764 lt!40790 (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))) lt!41478)))

(declare-fun b!87524 () Bool)

(declare-fun e!57016 () Bool)

(assert (=> b!87524 (= e!57015 e!57016)))

(declare-fun res!44889 () Bool)

(assert (=> b!87524 (=> res!44889 e!57016)))

(assert (=> b!87524 (= res!44889 (= (h!2139 lt!40790) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(declare-fun b!87525 () Bool)

(assert (=> b!87525 (= e!57016 (contains!764 (t!5277 lt!40790) (tuple2!2233 (_1!1126 lt!40172) (_2!1126 lt!40172))))))

(assert (= (and d!23265 res!44890) b!87524))

(assert (= (and b!87524 (not res!44889)) b!87525))

(declare-fun m!93149 () Bool)

(assert (=> d!23265 m!93149))

(declare-fun m!93151 () Bool)

(assert (=> d!23265 m!93151))

(declare-fun m!93153 () Bool)

(assert (=> b!87525 m!93153))

(assert (=> b!86084 d!23265))

(declare-fun d!23267 () Bool)

(declare-fun e!57018 () Bool)

(assert (=> d!23267 e!57018))

(declare-fun res!44891 () Bool)

(assert (=> d!23267 (=> res!44891 e!57018)))

(declare-fun lt!41481 () Bool)

(assert (=> d!23267 (= res!44891 (not lt!41481))))

(declare-fun lt!41482 () Bool)

(assert (=> d!23267 (= lt!41481 lt!41482)))

(declare-fun lt!41480 () Unit!2533)

(declare-fun e!57017 () Unit!2533)

(assert (=> d!23267 (= lt!41480 e!57017)))

(declare-fun c!14440 () Bool)

(assert (=> d!23267 (= c!14440 lt!41482)))

(assert (=> d!23267 (= lt!41482 (containsKey!143 (toList!759 lt!40550) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> d!23267 (= (contains!762 lt!40550 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41481)))

(declare-fun b!87526 () Bool)

(declare-fun lt!41479 () Unit!2533)

(assert (=> b!87526 (= e!57017 lt!41479)))

(assert (=> b!87526 (= lt!41479 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!759 lt!40550) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(assert (=> b!87526 (isDefined!93 (getValueByKey!139 (toList!759 lt!40550) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87527 () Bool)

(declare-fun Unit!2617 () Unit!2533)

(assert (=> b!87527 (= e!57017 Unit!2617)))

(declare-fun b!87528 () Bool)

(assert (=> b!87528 (= e!57018 (isDefined!93 (getValueByKey!139 (toList!759 lt!40550) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!23267 c!14440) b!87526))

(assert (= (and d!23267 (not c!14440)) b!87527))

(assert (= (and d!23267 (not res!44891)) b!87528))

(declare-fun m!93155 () Bool)

(assert (=> d!23267 m!93155))

(declare-fun m!93157 () Bool)

(assert (=> b!87526 m!93157))

(assert (=> b!87526 m!90087))

(assert (=> b!87526 m!90087))

(declare-fun m!93159 () Bool)

(assert (=> b!87526 m!93159))

(assert (=> b!87528 m!90087))

(assert (=> b!87528 m!90087))

(assert (=> b!87528 m!93159))

(assert (=> d!22189 d!23267))

(declare-fun b!87529 () Bool)

(declare-fun e!57019 () Option!145)

(assert (=> b!87529 (= e!57019 (Some!144 (_2!1126 (h!2139 lt!40549))))))

(declare-fun b!87531 () Bool)

(declare-fun e!57020 () Option!145)

(assert (=> b!87531 (= e!57020 (getValueByKey!139 (t!5277 lt!40549) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87530 () Bool)

(assert (=> b!87530 (= e!57019 e!57020)))

(declare-fun c!14442 () Bool)

(assert (=> b!87530 (= c!14442 (and ((_ is Cons!1548) lt!40549) (not (= (_1!1126 (h!2139 lt!40549)) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun d!23269 () Bool)

(declare-fun c!14441 () Bool)

(assert (=> d!23269 (= c!14441 (and ((_ is Cons!1548) lt!40549) (= (_1!1126 (h!2139 lt!40549)) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!23269 (= (getValueByKey!139 lt!40549 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) e!57019)))

(declare-fun b!87532 () Bool)

(assert (=> b!87532 (= e!57020 None!143)))

(assert (= (and d!23269 c!14441) b!87529))

(assert (= (and d!23269 (not c!14441)) b!87530))

(assert (= (and b!87530 c!14442) b!87531))

(assert (= (and b!87530 (not c!14442)) b!87532))

(declare-fun m!93161 () Bool)

(assert (=> b!87531 m!93161))

(assert (=> d!22189 d!23269))

(declare-fun d!23271 () Bool)

(assert (=> d!23271 (= (getValueByKey!139 lt!40549 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) (Some!144 (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun lt!41483 () Unit!2533)

(assert (=> d!23271 (= lt!41483 (choose!508 lt!40549 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun e!57021 () Bool)

(assert (=> d!23271 e!57021))

(declare-fun res!44892 () Bool)

(assert (=> d!23271 (=> (not res!44892) (not e!57021))))

(assert (=> d!23271 (= res!44892 (isStrictlySorted!293 lt!40549))))

(assert (=> d!23271 (= (lemmaContainsTupThenGetReturnValue!58 lt!40549 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41483)))

(declare-fun b!87533 () Bool)

(declare-fun res!44893 () Bool)

(assert (=> b!87533 (=> (not res!44893) (not e!57021))))

(assert (=> b!87533 (= res!44893 (containsKey!143 lt!40549 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87534 () Bool)

(assert (=> b!87534 (= e!57021 (contains!764 lt!40549 (tuple2!2233 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (= (and d!23271 res!44892) b!87533))

(assert (= (and b!87533 res!44893) b!87534))

(assert (=> d!23271 m!90081))

(declare-fun m!93163 () Bool)

(assert (=> d!23271 m!93163))

(declare-fun m!93165 () Bool)

(assert (=> d!23271 m!93165))

(declare-fun m!93167 () Bool)

(assert (=> b!87533 m!93167))

(declare-fun m!93169 () Bool)

(assert (=> b!87534 m!93169))

(assert (=> d!22189 d!23271))

(declare-fun c!14444 () Bool)

(declare-fun e!57023 () List!1552)

(declare-fun b!87535 () Bool)

(declare-fun c!14443 () Bool)

(assert (=> b!87535 (= e!57023 (ite c!14443 (t!5277 (toList!759 lt!40169)) (ite c!14444 (Cons!1548 (h!2139 (toList!759 lt!40169)) (t!5277 (toList!759 lt!40169))) Nil!1549)))))

(declare-fun b!87536 () Bool)

(declare-fun e!57025 () Bool)

(declare-fun lt!41484 () List!1552)

(assert (=> b!87536 (= e!57025 (contains!764 lt!41484 (tuple2!2233 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!87537 () Bool)

(declare-fun e!57024 () List!1552)

(declare-fun e!57022 () List!1552)

(assert (=> b!87537 (= e!57024 e!57022)))

(assert (=> b!87537 (= c!14443 (and ((_ is Cons!1548) (toList!759 lt!40169)) (= (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(declare-fun b!87538 () Bool)

(declare-fun res!44894 () Bool)

(assert (=> b!87538 (=> (not res!44894) (not e!57025))))

(assert (=> b!87538 (= res!44894 (containsKey!143 lt!41484 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun d!23273 () Bool)

(assert (=> d!23273 e!57025))

(declare-fun res!44895 () Bool)

(assert (=> d!23273 (=> (not res!44895) (not e!57025))))

(assert (=> d!23273 (= res!44895 (isStrictlySorted!293 lt!41484))))

(assert (=> d!23273 (= lt!41484 e!57024)))

(declare-fun c!14445 () Bool)

(assert (=> d!23273 (= c!14445 (and ((_ is Cons!1548) (toList!759 lt!40169)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> d!23273 (isStrictlySorted!293 (toList!759 lt!40169))))

(assert (=> d!23273 (= (insertStrictlySorted!60 (toList!759 lt!40169) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))) lt!41484)))

(declare-fun call!8351 () List!1552)

(declare-fun bm!8348 () Bool)

(assert (=> bm!8348 (= call!8351 ($colon$colon!71 e!57023 (ite c!14445 (h!2139 (toList!759 lt!40169)) (tuple2!2233 (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))))

(declare-fun c!14446 () Bool)

(assert (=> bm!8348 (= c!14446 c!14445)))

(declare-fun bm!8349 () Bool)

(declare-fun call!8353 () List!1552)

(declare-fun call!8352 () List!1552)

(assert (=> bm!8349 (= call!8353 call!8352)))

(declare-fun b!87539 () Bool)

(assert (=> b!87539 (= e!57024 call!8351)))

(declare-fun b!87540 () Bool)

(declare-fun e!57026 () List!1552)

(assert (=> b!87540 (= e!57026 call!8353)))

(declare-fun b!87541 () Bool)

(assert (=> b!87541 (= e!57022 call!8352)))

(declare-fun b!87542 () Bool)

(assert (=> b!87542 (= e!57023 (insertStrictlySorted!60 (t!5277 (toList!759 lt!40169)) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))) (_2!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992)))))))))

(declare-fun b!87543 () Bool)

(assert (=> b!87543 (= e!57026 call!8353)))

(declare-fun b!87544 () Bool)

(assert (=> b!87544 (= c!14444 (and ((_ is Cons!1548) (toList!759 lt!40169)) (bvsgt (_1!1126 (h!2139 (toList!759 lt!40169))) (_1!1126 (tuple2!2233 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2648 (underlying!293 thiss!992))))))))))

(assert (=> b!87544 (= e!57022 e!57026)))

(declare-fun bm!8350 () Bool)

(assert (=> bm!8350 (= call!8352 call!8351)))

(assert (= (and d!23273 c!14445) b!87539))

(assert (= (and d!23273 (not c!14445)) b!87537))

(assert (= (and b!87537 c!14443) b!87541))

(assert (= (and b!87537 (not c!14443)) b!87544))

(assert (= (and b!87544 c!14444) b!87543))

(assert (= (and b!87544 (not c!14444)) b!87540))

(assert (= (or b!87543 b!87540) bm!8349))

(assert (= (or b!87541 bm!8349) bm!8350))

(assert (= (or b!87539 bm!8350) bm!8348))

(assert (= (and bm!8348 c!14446) b!87542))

(assert (= (and bm!8348 (not c!14446)) b!87535))

(assert (= (and d!23273 res!44895) b!87538))

(assert (= (and b!87538 res!44894) b!87536))

(declare-fun m!93171 () Bool)

(assert (=> b!87538 m!93171))

(declare-fun m!93173 () Bool)

(assert (=> b!87542 m!93173))

(declare-fun m!93175 () Bool)

(assert (=> d!23273 m!93175))

(assert (=> d!23273 m!89865))

(declare-fun m!93177 () Bool)

(assert (=> b!87536 m!93177))

(declare-fun m!93179 () Bool)

(assert (=> bm!8348 m!93179))

(assert (=> d!22189 d!23273))

(declare-fun d!23275 () Bool)

(declare-fun res!44896 () Bool)

(declare-fun e!57027 () Bool)

(assert (=> d!23275 (=> res!44896 e!57027)))

(assert (=> d!23275 (= res!44896 (and ((_ is Cons!1548) (toList!759 lt!40261)) (= (_1!1126 (h!2139 (toList!759 lt!40261))) (_1!1126 lt!40163))))))

(assert (=> d!23275 (= (containsKey!143 (toList!759 lt!40261) (_1!1126 lt!40163)) e!57027)))

(declare-fun b!87545 () Bool)

(declare-fun e!57028 () Bool)

(assert (=> b!87545 (= e!57027 e!57028)))

(declare-fun res!44897 () Bool)

(assert (=> b!87545 (=> (not res!44897) (not e!57028))))

(assert (=> b!87545 (= res!44897 (and (or (not ((_ is Cons!1548) (toList!759 lt!40261))) (bvsle (_1!1126 (h!2139 (toList!759 lt!40261))) (_1!1126 lt!40163))) ((_ is Cons!1548) (toList!759 lt!40261)) (bvslt (_1!1126 (h!2139 (toList!759 lt!40261))) (_1!1126 lt!40163))))))

(declare-fun b!87546 () Bool)

(assert (=> b!87546 (= e!57028 (containsKey!143 (t!5277 (toList!759 lt!40261)) (_1!1126 lt!40163)))))

(assert (= (and d!23275 (not res!44896)) b!87545))

(assert (= (and b!87545 res!44897) b!87546))

(declare-fun m!93181 () Bool)

(assert (=> b!87546 m!93181))

(assert (=> d!22319 d!23275))

(declare-fun b!87547 () Bool)

(declare-fun e!57029 () Option!145)

(assert (=> b!87547 (= e!57029 (Some!144 (_2!1126 (h!2139 (t!5277 lt!40289)))))))

(declare-fun b!87549 () Bool)

(declare-fun e!57030 () Option!145)

(assert (=> b!87549 (= e!57030 (getValueByKey!139 (t!5277 (t!5277 lt!40289)) (_1!1126 lt!40172)))))

(declare-fun b!87548 () Bool)

(assert (=> b!87548 (= e!57029 e!57030)))

(declare-fun c!14448 () Bool)

(assert (=> b!87548 (= c!14448 (and ((_ is Cons!1548) (t!5277 lt!40289)) (not (= (_1!1126 (h!2139 (t!5277 lt!40289))) (_1!1126 lt!40172)))))))

(declare-fun d!23277 () Bool)

(declare-fun c!14447 () Bool)

(assert (=> d!23277 (= c!14447 (and ((_ is Cons!1548) (t!5277 lt!40289)) (= (_1!1126 (h!2139 (t!5277 lt!40289))) (_1!1126 lt!40172))))))

(assert (=> d!23277 (= (getValueByKey!139 (t!5277 lt!40289) (_1!1126 lt!40172)) e!57029)))

(declare-fun b!87550 () Bool)

(assert (=> b!87550 (= e!57030 None!143)))

(assert (= (and d!23277 c!14447) b!87547))

(assert (= (and d!23277 (not c!14447)) b!87548))

(assert (= (and b!87548 c!14448) b!87549))

(assert (= (and b!87548 (not c!14448)) b!87550))

(declare-fun m!93183 () Bool)

(assert (=> b!87549 m!93183))

(assert (=> b!85641 d!23277))

(declare-fun d!23279 () Bool)

(assert (=> d!23279 (= (apply!82 lt!40581 (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1216 (getValueByKey!139 (toList!759 lt!40581) (select (arr!1918 (_keys!4010 (v!2648 (underlying!293 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3693 () Bool)

(assert (= bs!3693 d!23279))

(assert (=> bs!3693 m!90163))

(assert (=> bs!3693 m!92743))

(assert (=> bs!3693 m!92743))

(declare-fun m!93185 () Bool)

(assert (=> bs!3693 m!93185))

(assert (=> b!85868 d!23279))

(assert (=> b!85868 d!22921))

(assert (=> b!86175 d!22371))

(declare-fun condMapEmpty!3413 () Bool)

(declare-fun mapDefault!3413 () ValueCell!924)

(assert (=> mapNonEmpty!3411 (= condMapEmpty!3413 (= mapRest!3411 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3413)))))

(declare-fun e!57032 () Bool)

(declare-fun mapRes!3413 () Bool)

(assert (=> mapNonEmpty!3411 (= tp!8955 (and e!57032 mapRes!3413))))

(declare-fun b!87551 () Bool)

(declare-fun e!57031 () Bool)

(assert (=> b!87551 (= e!57031 tp_is_empty!2535)))

(declare-fun mapIsEmpty!3413 () Bool)

(assert (=> mapIsEmpty!3413 mapRes!3413))

(declare-fun b!87552 () Bool)

(assert (=> b!87552 (= e!57032 tp_is_empty!2535)))

(declare-fun mapNonEmpty!3413 () Bool)

(declare-fun tp!8957 () Bool)

(assert (=> mapNonEmpty!3413 (= mapRes!3413 (and tp!8957 e!57031))))

(declare-fun mapValue!3413 () ValueCell!924)

(declare-fun mapKey!3413 () (_ BitVec 32))

(declare-fun mapRest!3413 () (Array (_ BitVec 32) ValueCell!924))

(assert (=> mapNonEmpty!3413 (= mapRest!3411 (store mapRest!3413 mapKey!3413 mapValue!3413))))

(assert (= (and mapNonEmpty!3411 condMapEmpty!3413) mapIsEmpty!3413))

(assert (= (and mapNonEmpty!3411 (not condMapEmpty!3413)) mapNonEmpty!3413))

(assert (= (and mapNonEmpty!3413 ((_ is ValueCellFull!924) mapValue!3413)) b!87551))

(assert (= (and mapNonEmpty!3411 ((_ is ValueCellFull!924) mapDefault!3413)) b!87552))

(declare-fun m!93187 () Bool)

(assert (=> mapNonEmpty!3413 m!93187))

(declare-fun condMapEmpty!3414 () Bool)

(declare-fun mapDefault!3414 () ValueCell!924)

(assert (=> mapNonEmpty!3412 (= condMapEmpty!3414 (= mapRest!3412 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3414)))))

(declare-fun e!57034 () Bool)

(declare-fun mapRes!3414 () Bool)

(assert (=> mapNonEmpty!3412 (= tp!8956 (and e!57034 mapRes!3414))))

(declare-fun b!87553 () Bool)

(declare-fun e!57033 () Bool)

(assert (=> b!87553 (= e!57033 tp_is_empty!2535)))

(declare-fun mapIsEmpty!3414 () Bool)

(assert (=> mapIsEmpty!3414 mapRes!3414))

(declare-fun b!87554 () Bool)

(assert (=> b!87554 (= e!57034 tp_is_empty!2535)))

(declare-fun mapNonEmpty!3414 () Bool)

(declare-fun tp!8958 () Bool)

(assert (=> mapNonEmpty!3414 (= mapRes!3414 (and tp!8958 e!57033))))

(declare-fun mapValue!3414 () ValueCell!924)

(declare-fun mapRest!3414 () (Array (_ BitVec 32) ValueCell!924))

(declare-fun mapKey!3414 () (_ BitVec 32))

(assert (=> mapNonEmpty!3414 (= mapRest!3412 (store mapRest!3414 mapKey!3414 mapValue!3414))))

(assert (= (and mapNonEmpty!3412 condMapEmpty!3414) mapIsEmpty!3414))

(assert (= (and mapNonEmpty!3412 (not condMapEmpty!3414)) mapNonEmpty!3414))

(assert (= (and mapNonEmpty!3414 ((_ is ValueCellFull!924) mapValue!3414)) b!87553))

(assert (= (and mapNonEmpty!3412 ((_ is ValueCellFull!924) mapDefault!3414)) b!87554))

(declare-fun m!93189 () Bool)

(assert (=> mapNonEmpty!3414 m!93189))

(declare-fun b_lambda!3859 () Bool)

(assert (= b_lambda!3829 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3859)))

(declare-fun b_lambda!3861 () Bool)

(assert (= b_lambda!3831 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3861)))

(declare-fun b_lambda!3863 () Bool)

(assert (= b_lambda!3837 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3863)))

(declare-fun b_lambda!3865 () Bool)

(assert (= b_lambda!3841 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3865)))

(declare-fun b_lambda!3867 () Bool)

(assert (= b_lambda!3849 (or (and b!85245 b_free!2237) (and b!85246 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))))) b_lambda!3867)))

(declare-fun b_lambda!3869 () Bool)

(assert (= b_lambda!3845 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3869)))

(declare-fun b_lambda!3871 () Bool)

(assert (= b_lambda!3843 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3871)))

(declare-fun b_lambda!3873 () Bool)

(assert (= b_lambda!3851 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3873)))

(declare-fun b_lambda!3875 () Bool)

(assert (= b_lambda!3835 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3875)))

(declare-fun b_lambda!3877 () Bool)

(assert (= b_lambda!3855 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3877)))

(declare-fun b_lambda!3879 () Bool)

(assert (= b_lambda!3839 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3879)))

(declare-fun b_lambda!3881 () Bool)

(assert (= b_lambda!3847 (or (and b!85245 b_free!2237) (and b!85246 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))))) b_lambda!3881)))

(declare-fun b_lambda!3883 () Bool)

(assert (= b_lambda!3853 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3883)))

(declare-fun b_lambda!3885 () Bool)

(assert (= b_lambda!3833 (or (and b!85245 b_free!2237 (= (defaultEntry!2338 (v!2648 (underlying!293 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85246 b_free!2239) b_lambda!3885)))

(check-sat (not d!23235) (not b!87059) (not b!87046) (not bm!8295) (not d!22939) (not b!87072) (not b!86909) (not d!22839) (not b!86613) (not d!22511) (not b!86821) (not b!86955) (not d!22801) (not bm!8281) (not b!86521) (not b!86726) (not b!86200) (not d!23245) (not b!86844) (not b!86259) (not bm!8313) (not bm!8246) (not b!86695) (not b!87050) (not b!86869) (not b!87494) (not b!86214) (not b!87383) (not bm!8212) (not b!86191) (not d!23173) (not d!22549) (not b!86305) (not d!22657) (not b!86976) (not b!86741) (not bm!8235) (not b!86963) (not b!87221) (not b!86659) (not b!87052) (not d!23183) (not d!22893) (not b!86416) (not b!87154) (not b!87118) (not b!86751) (not b!86998) (not b!87519) (not d!22391) (not d!22645) (not d!22695) (not bm!8269) (not b!86650) (not d!22581) (not d!22457) (not bm!8263) (not b!86520) (not bm!8293) (not b!86914) (not b!86444) (not bm!8238) (not b!86711) (not b!86707) (not b!86392) (not d!23253) (not d!23179) (not d!22725) (not d!22531) (not b!87123) (not b!86458) (not b!86765) (not b!87083) (not b!87429) (not bm!8310) (not d!22825) (not b!87013) (not b!87096) (not b!87101) (not b!87505) (not b!86697) (not b!86246) (not b!87243) (not b!86740) (not d!22923) (not b!86835) (not b!86679) (not b!87407) (not b!87005) (not b!86475) (not b!87291) (not b!87135) (not b!87273) (not bm!8314) (not b!87010) (not bm!8294) (not b!87406) (not b!86410) (not d!23171) (not b!87362) (not d!22489) (not bm!8206) (not b!87081) (not d!23229) (not d!22691) (not d!22913) (not b!87064) (not d!22815) (not d!22981) (not b!87353) (not b!86264) (not b!87169) (not b!86648) (not d!23177) (not bm!8215) (not b!86915) (not b!87139) (not d!23125) (not b!87344) (not d!22595) (not d!22703) b_and!5259 (not d!23057) (not b_lambda!3869) (not b!87125) (not b!87538) (not b!87534) (not d!23259) (not b!86249) (not b!86552) (not b!86379) (not b!86364) (not b!87293) (not b!87423) (not d!23025) (not b!86993) (not d!23051) (not b!86299) (not bm!8221) (not d!22919) (not d!22841) (not b!86938) (not d!22805) (not b!86498) (not b!86632) (not b!86999) (not b!87202) (not b!87542) (not d!23191) (not b!86705) (not b!86242) (not bm!8317) (not b!86255) (not d!22621) (not d!22373) (not d!23123) (not d!23161) (not b!87360) (not d!23121) (not b_lambda!3871) (not d!22407) (not d!22963) (not b!87467) (not b!86288) (not bm!8272) (not d!22817) (not b!86797) (not d!22551) (not d!23165) (not d!23169) (not b!86344) (not b!87106) (not b!87388) (not b!87385) (not d!23083) (not b!86349) (not b!87270) (not b!87479) (not b!86468) (not b!87076) (not bm!8331) (not d!22763) (not b!86210) (not d!23063) (not b!86637) (not d!22741) (not b_lambda!3827) (not b!87415) (not d!23033) (not b!87022) (not d!22861) (not b!87446) (not b!86531) (not b!86847) (not b!86904) (not b!87508) (not b!87211) (not d!23003) (not b!86861) (not d!22835) (not d!23111) (not b!86625) (not b!87197) (not bm!8345) (not b_lambda!3879) (not b!86226) (not d!23255) (not b!87122) (not b!86949) (not b!86529) (not b!86839) (not b!86700) (not b!86604) (not d!23093) (not d!22947) (not d!22553) (not b!87175) (not d!22381) (not b!86561) (not d!23265) (not b!86761) (not b!86733) (not d!23181) (not b!86930) (not b!87180) (not d!23195) (not b!86201) (not d!22479) (not b!86714) (not d!22563) (not bm!8286) (not b!86616) (not b!87092) (not d!23261) (not b!87477) (not b!87526) (not b!87043) (not b!87336) (not b!86944) (not d!22397) (not b!86682) (not b!87071) (not bm!8239) (not b!86271) (not b!87063) (not b!86262) (not b!86442) (not d!23055) (not d!23207) (not b!87469) (not b!86903) (not d!22507) (not d!22383) (not b!86203) (not b!86756) (not b!87228) (not d!22439) (not b!87144) (not d!22635) (not b!86592) (not b_lambda!3805) (not b!86589) (not b!86506) (not bm!8301) (not bm!8303) (not b!87233) (not b!86334) (not b!86897) (not b!86584) (not b!86272) (not b!87019) (not bm!8275) (not b!87470) (not b!87224) (not b!87400) (not d!22405) (not d!22787) (not b!87257) (not bm!8338) (not b!86686) (not b!86274) (not d!23271) (not b!86644) (not b!87191) (not d!23029) (not b!86987) (not b!86578) (not b!86569) (not b!86439) (not b!87068) (not d!23267) (not b!86474) (not b_lambda!3859) (not d!23251) (not d!22881) (not b!87471) (not b!87367) (not d!22461) (not d!23017) (not d!22429) (not bm!8266) (not b!86748) (not b!86266) (not b!87412) (not b!87386) (not b!86759) (not b!87301) (not b!86433) (not b!86571) (not b!86608) (not d!22499) (not d!22811) (not b!86619) (not bm!8323) (not b!86994) (not d!22433) (not b!86820) (not b!87217) (not b!86189) (not b!86405) (not b!87419) (not b!87368) (not b!86597) (not b_lambda!3861) (not b!87085) (not b!87008) (not b!87294) (not d!22935) (not d!23101) (not d!22451) (not b!87280) (not b!87158) (not b!86674) (not d!22617) (not d!22877) (not b!86842) (not d!22807) (not b!86373) (not b!86954) (not b!86932) (not b!86655) (not b!86377) (not d!23273) (not b!87130) (not d!22565) (not d!23075) (not b!87432) (not d!23213) (not b!86800) (not b!86662) (not d!22567) (not d!22555) (not b_lambda!3875) (not d!22641) (not d!22527) (not b!87475) (not b!86975) (not bm!8225) (not b!87283) (not b!86479) (not b_lambda!3821) (not b!87254) (not b!87267) (not b!86430) (not d!22799) (not b!86291) (not d!22611) (not b!86353) (not b!87341) (not b!87297) (not b!87066) (not d!23105) (not b!87014) (not b!86402) (not b!86992) (not b!87289) (not d!22421) (not b!87208) (not b!86972) (not b!86602) (not bm!8335) (not b!86724) (not b!86513) (not b!87487) (not b!86747) (not b!86436) (not b!87012) (not b!86639) (not b!86422) (not bm!8328) (not b!87482) (not bm!8304) (not d!23237) (not b!87448) (not b!87167) (not d!22525) (not b!86207) (not b!86526) (not d!22465) (not d!22967) (not d!23185) (not d!22899) (not b!87395) (not b!87299) (not bm!8298) (not b!87413) (not b!87549) (not b!87438) (not d!22717) (not b!86365) (not d!22895) (not b!86341) (not bm!8341) (not b!86941) (not b!86876) (not b!86703) (not b!86241) (not b!86205) (not d!22377) (not b!87300) (not bm!8260) (not d!22975) (not b!86959) (not d!22713) (not b!86445) (not b!86774) (not b!86587) (not d!22693) (not d!22697) (not d!22573) (not b!86202) (not d!22863) (not b_lambda!3883) (not b!87120) (not d!22607) (not b!87401) (not b!87515) (not b!86776) (not d!22557) (not b!86638) (not mapNonEmpty!3414) (not b!87261) (not b!86424) (not b!86352) (not b!87057) (not b!86295) (not b!86626) (not bm!8302) (not bm!8289) (not bm!8257) (not b!86917) (not b!86236) (not b!86630) (not b!87146) (not d!22623) (not d!22533) (not b!87049) (not b!87376) (not b!86833) (not b_lambda!3873) (not b!86303) (not b!87020) (not d!22849) (not bm!8243) (not d!22517) (not d!23045) (not b!86899) (not b!87546) (not d!23031) (not b!87465) (not d!22369) (not bm!8203) (not b!87044) (not d!23081) (not b!87026) (not d!23065) (not b!86927) (not b!87110) (not b!86547) (not b!86728) (not d!22991) (not b!87115) (not b!86624) (not bm!8292) (not d!22649) (not b!87484) (not b!86459) (not b!87355) (not d!22969) (not d!22917) (not b!86822) (not d!23227) (not d!23187) (not b!86641) (not b!87156) (not d!23107) (not bm!8224) (not b!86646) (not d!22633) (not b!86666) (not d!23205) (not b!87148) (not b!86591) (not d!22949) (not d!22709) (not b!86946) (not d!22487) (not b!87210) (not b!86516) (not b!86676) (not b!86423) (not b!86528) (not d!22501) (not d!22677) (not b!87330) (not b!87181) (not b!86486) (not b!86567) (not b!86399) (not b!87084) (not b!86575) (not d!22681) (not b!87028) (not bm!8316) (not b!87054) (not b!86502) (not b!87511) (not bm!8223) (not d!22679) (not b!86550) (not b!87226) (not d!22659) (not b!87215) (not d!22907) (not b!86594) (not b!86559) (not b!86310) (not b!87235) (not b!86978) (not b!87260) (not b_next!2239) (not d!22497) (not b!86732) (not b!86219) (not b!86866) (not b!86865) (not b!86803) (not b!86969) (not d!23067) (not d!22795) (not d!23109) (not b!87104) (not b!87481) (not b!86870) (not b!86557) (not b!87503) (not b!87276) (not bm!8327) (not b!87531) (not b!87502) (not d!22469) (not b!87498) (not d!23011) (not b!87172) (not d!23143) (not b!87249) (not bm!8332) (not d!22651) (not b!87079) (not d!22871) (not b!86456) (not b!86476) (not b_lambda!3885) (not d!22813) (not d!22547) (not bm!8278) (not b_next!2237) (not b!87067) (not d!22793) (not d!23279) (not b!86702) (not b!86599) (not d!22509) (not b!86815) (not b!86859) (not b!87303) (not d!22887) (not d!22583) (not b!87351) (not b!86276) (not d!23039) (not d!23175) (not bm!8259) (not b!86906) (not d!23015) (not d!22751) (not d!22729) (not d!22577) (not b!86509) (not d!22613) (not d!22925) (not d!22689) (not d!22753) (not b!87347) (not b!86623) (not b!86447) (not b!87426) (not b!87478) (not b!86251) (not d!22819) (not b!87397) (not b!86449) (not b!86622) (not d!22867) (not b!87176) (not b!86952) (not b!87372) (not bm!8220) (not b!87205) (not d!23005) (not d!22427) (not d!23079) (not b!86816) (not b!86537) (not d!22643) (not b!87380) (not b!86239) (not b!87523) (not b!87528) (not b!87492) (not b!87456) (not b!87286) (not b!87128) (not b!86640) (not b!86533) (not b!87452) (not bm!8262) (not d!22999) (not b!86777) (not b!86935) (not d!23211) (not b!87399) (not b!87342) (not d!22705) (not b!86617) (not b!86187) (not d!22685) (not d!23189) (not d!22837) (not d!22701) (not b!86919) (not b!86494) (not d!22915) (not d!23069) (not b!86981) (not b!87358) (not b!87489) (not b!86684) (not b!86772) (not b!86472) (not bm!8256) (not d!23087) (not b_lambda!3865) (not b!86675) (not b!87404) (not b!86580) (not b!86285) (not d!22687) (not b!86357) (not b_lambda!3881) (not b!87441) (not d!22529) (not b!86457) (not b!87193) (not d!22937) (not b!86453) (not bm!8251) (not b_lambda!3795) (not b!87513) (not bm!8271) (not d!23139) (not bm!8342) (not b!86828) (not b_lambda!3807) (not b!87032) (not b!86779) (not b!86798) (not b!86901) (not d!22985) (not b!87435) (not d!22535) (not b!87002) (not d!22605) (not bm!8284) (not b!86929) (not b_lambda!3825) (not b!87142) (not b!87525) (not b!86359) (not b!86518) (not b_lambda!3803) (not b!86307) (not b_lambda!3823) (not d!23263) (not d!22879) (not d!23151) (not d!22869) (not b!86634) (not bm!8229) (not b!86480) (not b!87533) (not bm!8242) (not b!87459) (not d!22979) (not bm!8330) (not b!86627) (not b!87145) (not d!22889) (not b!86193) (not b!86367) (not bm!8261) (not d!22859) (not b!87256) (not b!87174) (not b!87522) (not b!87061) (not d!23059) (not b!86473) (not b!87391) (not b!86462) (not b!87365) (not b!86406) (not b!87094) (not b!87255) (not b!86629) (not d!22993) (not d!23231) (not b!87240) (not b!86853) (not b!87444) (not b!86243) (not b!86734) (not b!86199) (not b!87436) (not b!86970) (not b!87164) (not b!86923) (not d!22663) (not b!86749) (not b!86290) (not b!87433) (not d!23113) (not b!87536) (not d!22593) b_and!5257 (not d!22543) (not b!86346) (not d!23049) (not d!23061) (not d!22561) (not d!22675) (not b!86545) (not d!22987) (not b!86836) (not d!22771) (not b_lambda!3867) (not b!86688) (not b!86496) (not b!87288) (not d!22683) (not b!86692) (not b!86809) (not bm!8282) (not d!22591) (not b!87264) (not b!86664) (not b!86730) (not bm!8249) (not b!86600) (not b!86460) (not b!86891) (not mapNonEmpty!3413) (not bm!8348) (not d!23135) (not b!86491) (not b!86934) (not b!87510) (not d!23249) (not b!86362) (not d!22699) (not d!22897) (not b!87015) (not d!22957) (not b!87405) (not b!86484) (not b!86912) (not b!87343) (not d!22851) (not b!86427) (not b!87213) (not d!22905) (not d!22821) (not d!23043) tp_is_empty!2535 (not b!86231) (not b!86843) (not b!87171) (not b!87403) (not b!86554) (not b!87161) (not b!87409) (not b!86721) (not b!86223) (not b!86669) (not b!87099) (not b!87152) (not b!86549) (not d!22669) (not b!86757) (not d!22559) (not b!86817) (not b!87458) (not b!87045) (not d!22387) (not d!23009) (not d!22629) (not b!86907) (not bm!8324) (not d!23219) (not d!22569) (not b!87133) (not b!87278) (not b!86860) (not bm!8318) (not b!87147) (not d!23115) (not b!86428) (not b!87038) (not b!86216) (not d!22755) (not b!87462) (not bm!8228) (not b!86421) (not d!22779) (not bm!8285) (not d!22765) (not d!22759) (not b!86383) (not b!87201) (not b!86387) (not b!86787) (not bm!8250) (not b!86858) (not b!86945) (not d!23163) (not d!23243) (not b!86967) (not b_lambda!3819) (not d!23201) (not d!22965) (not b!87149) (not b!86515) (not b!86293) (not b!87006) (not b!86523) (not b!86746) (not d!22467) (not b!86407) (not d!23167) (not b!86633) (not bm!8232) (not d!23119) (not b!87179) (not bm!8267) (not d!23203) (not bm!8270) (not b!86831) (not b!87009) (not b!86465) (not d!23131) (not b!86737) (not b!86437) (not b!86652) (not b!86512) (not b!86493) (not d!22997) (not b!87473) (not d!23001) (not d!22505) (not b!86228) (not b!87443) (not d!23145) (not d!22667) (not b!86754) (not b!86957) (not b!86995) (not b!86864) (not b!86467) (not b!87073) (not b!87262) (not b!86488) (not b!86283) (not b!87131) (not b!86814) (not b!86388) (not d!23197) (not b!87017) (not b!87370) (not b!86868) (not b!86770) (not b!86269) (not b!86469) (not d!23071) (not b!86355) (not d!22761) (not b!86369) (not b_lambda!3857) (not b!86672) (not d!22455) (not b!87182) (not b!86396) (not b!87348) (not d!22571) (not b!87102) (not d!22587) (not b!87029) (not b!86837) (not d!22609) (not bm!8290) (not b!87188) (not b_lambda!3877) (not bm!8307) (not b!87160) (not d!22843) (not b!86717) (not d!22495) (not b!87417) (not b!87265) (not d!22781) (not b!86556) (not d!22575) (not b!86280) (not b!87088) (not d!22827) (not d!22579) (not b!86234) (not b!86464) (not b!86947) (not b_lambda!3863) (not b!86782) (not b!87490) (not b!87269) (not d!22791) (not bm!8209) (not b!87296))
(check-sat b_and!5257 b_and!5259 (not b_next!2237) (not b_next!2239))
