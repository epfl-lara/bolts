; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10360 () Bool)

(assert start!10360)

(declare-fun b!80256 () Bool)

(declare-fun b_free!2201 () Bool)

(declare-fun b_next!2201 () Bool)

(assert (=> b!80256 (= b_free!2201 (not b_next!2201))))

(declare-fun tp!8814 () Bool)

(declare-fun b_and!4901 () Bool)

(assert (=> b!80256 (= tp!8814 b_and!4901)))

(declare-fun b!80270 () Bool)

(declare-fun b_free!2203 () Bool)

(declare-fun b_next!2203 () Bool)

(assert (=> b!80270 (= b_free!2203 (not b_next!2203))))

(declare-fun tp!8813 () Bool)

(declare-fun b_and!4903 () Bool)

(assert (=> b!80270 (= tp!8813 b_and!4903)))

(declare-datatypes ((V!3003 0))(
  ( (V!3004 (val!1303 Int)) )
))
(declare-datatypes ((array!3988 0))(
  ( (array!3989 (arr!1900 (Array (_ BitVec 32) (_ BitVec 64))) (size!2142 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!915 0))(
  ( (ValueCellFull!915 (v!2609 V!3003)) (EmptyCell!915) )
))
(declare-datatypes ((array!3990 0))(
  ( (array!3991 (arr!1901 (Array (_ BitVec 32) ValueCell!915)) (size!2143 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!738 0))(
  ( (LongMapFixedSize!739 (defaultEntry!2293 Int) (mask!6299 (_ BitVec 32)) (extraKeys!2140 (_ BitVec 32)) (zeroValue!2189 V!3003) (minValue!2189 V!3003) (_size!418 (_ BitVec 32)) (_keys!3957 array!3988) (_values!2276 array!3990) (_vacant!418 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!546 0))(
  ( (Cell!547 (v!2610 LongMapFixedSize!738)) )
))
(declare-datatypes ((LongMap!546 0))(
  ( (LongMap!547 (underlying!284 Cell!546)) )
))
(declare-fun thiss!992 () LongMap!546)

(declare-fun e!52430 () Bool)

(declare-fun e!52441 () Bool)

(declare-fun tp_is_empty!2517 () Bool)

(declare-fun array_inv!1133 (array!3988) Bool)

(declare-fun array_inv!1134 (array!3990) Bool)

(assert (=> b!80256 (= e!52441 (and tp!8814 tp_is_empty!2517 (array_inv!1133 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (array_inv!1134 (_values!2276 (v!2610 (underlying!284 thiss!992)))) e!52430))))

(declare-fun b!80257 () Bool)

(declare-fun e!52437 () Bool)

(assert (=> b!80257 (= e!52437 tp_is_empty!2517)))

(declare-fun b!80258 () Bool)

(declare-fun e!52440 () Bool)

(declare-fun e!52436 () Bool)

(assert (=> b!80258 (= e!52440 e!52436)))

(declare-fun res!41821 () Bool)

(assert (=> b!80258 (=> (not res!41821) (not e!52436))))

(declare-datatypes ((tuple2!2200 0))(
  ( (tuple2!2201 (_1!1110 Bool) (_2!1110 LongMapFixedSize!738)) )
))
(declare-fun lt!37203 () tuple2!2200)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!80258 (= res!41821 (and (_1!1110 lt!37203) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!2350 0))(
  ( (Unit!2351) )
))
(declare-fun lt!37198 () Unit!2350)

(declare-fun e!52438 () Unit!2350)

(assert (=> b!80258 (= lt!37198 e!52438)))

(declare-fun c!12539 () Bool)

(declare-datatypes ((tuple2!2202 0))(
  ( (tuple2!2203 (_1!1111 (_ BitVec 64)) (_2!1111 V!3003)) )
))
(declare-datatypes ((List!1538 0))(
  ( (Nil!1535) (Cons!1534 (h!2123 tuple2!2202) (t!5209 List!1538)) )
))
(declare-datatypes ((ListLongMap!1471 0))(
  ( (ListLongMap!1472 (toList!751 List!1538)) )
))
(declare-fun lt!37199 () ListLongMap!1471)

(declare-fun contains!750 (ListLongMap!1471 (_ BitVec 64)) Bool)

(assert (=> b!80258 (= c!12539 (contains!750 lt!37199 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun lt!37195 () V!3003)

(declare-fun newMap!16 () LongMapFixedSize!738)

(declare-fun update!114 (LongMapFixedSize!738 (_ BitVec 64) V!3003) tuple2!2200)

(assert (=> b!80258 (= lt!37203 (update!114 newMap!16 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))

(declare-fun mapIsEmpty!3329 () Bool)

(declare-fun mapRes!3329 () Bool)

(assert (=> mapIsEmpty!3329 mapRes!3329))

(declare-fun b!80259 () Bool)

(declare-fun e!52439 () Bool)

(assert (=> b!80259 (= e!52439 e!52440)))

(declare-fun res!41824 () Bool)

(assert (=> b!80259 (=> (not res!41824) (not e!52440))))

(assert (=> b!80259 (= res!41824 (and (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1195 (ValueCell!915 V!3003) V!3003)

(declare-fun dynLambda!347 (Int (_ BitVec 64)) V!3003)

(assert (=> b!80259 (= lt!37195 (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) from!355) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun mapIsEmpty!3330 () Bool)

(declare-fun mapRes!3330 () Bool)

(assert (=> mapIsEmpty!3330 mapRes!3330))

(declare-fun b!80260 () Bool)

(declare-fun res!41826 () Bool)

(declare-fun e!52433 () Bool)

(assert (=> b!80260 (=> (not res!41826) (not e!52433))))

(declare-fun valid!316 (LongMapFixedSize!738) Bool)

(assert (=> b!80260 (= res!41826 (valid!316 newMap!16))))

(declare-fun b!80261 () Bool)

(declare-fun e!52442 () Bool)

(assert (=> b!80261 (= e!52442 tp_is_empty!2517)))

(declare-fun mapNonEmpty!3329 () Bool)

(declare-fun tp!8811 () Bool)

(assert (=> mapNonEmpty!3329 (= mapRes!3329 (and tp!8811 e!52442))))

(declare-fun mapValue!3329 () ValueCell!915)

(declare-fun mapKey!3329 () (_ BitVec 32))

(declare-fun mapRest!3330 () (Array (_ BitVec 32) ValueCell!915))

(assert (=> mapNonEmpty!3329 (= (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (store mapRest!3330 mapKey!3329 mapValue!3329))))

(declare-fun mapNonEmpty!3330 () Bool)

(declare-fun tp!8812 () Bool)

(assert (=> mapNonEmpty!3330 (= mapRes!3330 (and tp!8812 e!52437))))

(declare-fun mapKey!3330 () (_ BitVec 32))

(declare-fun mapValue!3330 () ValueCell!915)

(declare-fun mapRest!3329 () (Array (_ BitVec 32) ValueCell!915))

(assert (=> mapNonEmpty!3330 (= (arr!1901 (_values!2276 newMap!16)) (store mapRest!3329 mapKey!3330 mapValue!3330))))

(declare-fun b!80263 () Bool)

(declare-fun e!52445 () Bool)

(assert (=> b!80263 (= e!52445 e!52441)))

(declare-fun b!80264 () Bool)

(declare-fun e!52431 () Bool)

(assert (=> b!80264 (= e!52436 (not e!52431))))

(declare-fun res!41825 () Bool)

(assert (=> b!80264 (=> res!41825 e!52431)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!80264 (= res!41825 (not (validMask!0 (mask!6299 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun lt!37196 () ListLongMap!1471)

(declare-fun lt!37188 () tuple2!2202)

(declare-fun lt!37202 () tuple2!2202)

(declare-fun lt!37192 () ListLongMap!1471)

(declare-fun +!111 (ListLongMap!1471 tuple2!2202) ListLongMap!1471)

(assert (=> b!80264 (= (+!111 lt!37192 lt!37188) (+!111 (+!111 lt!37196 lt!37188) lt!37202))))

(assert (=> b!80264 (= lt!37188 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun lt!37186 () Unit!2350)

(declare-fun addCommutativeForDiffKeys!30 (ListLongMap!1471 (_ BitVec 64) V!3003 (_ BitVec 64) V!3003) Unit!2350)

(assert (=> b!80264 (= lt!37186 (addCommutativeForDiffKeys!30 lt!37196 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun lt!37200 () ListLongMap!1471)

(assert (=> b!80264 (= lt!37200 lt!37192)))

(assert (=> b!80264 (= lt!37192 (+!111 lt!37196 lt!37202))))

(declare-fun lt!37187 () ListLongMap!1471)

(declare-fun lt!37197 () tuple2!2202)

(assert (=> b!80264 (= lt!37200 (+!111 lt!37187 lt!37197))))

(declare-fun lt!37190 () ListLongMap!1471)

(assert (=> b!80264 (= lt!37196 (+!111 lt!37190 lt!37197))))

(assert (=> b!80264 (= lt!37197 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))

(assert (=> b!80264 (= lt!37187 (+!111 lt!37190 lt!37202))))

(assert (=> b!80264 (= lt!37202 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))

(declare-fun lt!37193 () Unit!2350)

(assert (=> b!80264 (= lt!37193 (addCommutativeForDiffKeys!30 lt!37190 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!75 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) Int) ListLongMap!1471)

(assert (=> b!80264 (= lt!37190 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun b!80265 () Bool)

(declare-fun e!52444 () Bool)

(assert (=> b!80265 (= e!52444 e!52445)))

(declare-fun b!80266 () Bool)

(declare-fun res!41820 () Bool)

(assert (=> b!80266 (=> (not res!41820) (not e!52433))))

(assert (=> b!80266 (= res!41820 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!80267 () Bool)

(declare-fun Unit!2352 () Unit!2350)

(assert (=> b!80267 (= e!52438 Unit!2352)))

(declare-fun b!80268 () Bool)

(declare-fun e!52443 () Bool)

(declare-fun e!52446 () Bool)

(assert (=> b!80268 (= e!52443 (and e!52446 mapRes!3330))))

(declare-fun condMapEmpty!3329 () Bool)

(declare-fun mapDefault!3329 () ValueCell!915)

(assert (=> b!80268 (= condMapEmpty!3329 (= (arr!1901 (_values!2276 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3329)))))

(declare-fun res!41822 () Bool)

(assert (=> start!10360 (=> (not res!41822) (not e!52433))))

(declare-fun valid!317 (LongMap!546) Bool)

(assert (=> start!10360 (= res!41822 (valid!317 thiss!992))))

(assert (=> start!10360 e!52433))

(assert (=> start!10360 e!52444))

(assert (=> start!10360 true))

(declare-fun e!52435 () Bool)

(assert (=> start!10360 e!52435))

(declare-fun b!80262 () Bool)

(assert (=> b!80262 (= e!52431 (or (not (= (size!2143 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6299 (v!2610 (underlying!284 thiss!992)))))) (= (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (size!2143 (_values!2276 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!80269 () Bool)

(declare-fun Unit!2353 () Unit!2350)

(assert (=> b!80269 (= e!52438 Unit!2353)))

(declare-fun lt!37194 () Unit!2350)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!66 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) (_ BitVec 32) Int) Unit!2350)

(assert (=> b!80269 (= lt!37194 (lemmaListMapContainsThenArrayContainsFrom!66 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3988 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!80269 (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!37191 () Unit!2350)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3988 (_ BitVec 32) (_ BitVec 32)) Unit!2350)

(assert (=> b!80269 (= lt!37191 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1539 0))(
  ( (Nil!1536) (Cons!1535 (h!2124 (_ BitVec 64)) (t!5210 List!1539)) )
))
(declare-fun arrayNoDuplicates!0 (array!3988 (_ BitVec 32) List!1539) Bool)

(assert (=> b!80269 (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) from!355 Nil!1536)))

(declare-fun lt!37189 () Unit!2350)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3988 (_ BitVec 32) (_ BitVec 64) List!1539) Unit!2350)

(assert (=> b!80269 (= lt!37189 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536)))))

(assert (=> b!80269 false))

(assert (=> b!80270 (= e!52435 (and tp!8813 tp_is_empty!2517 (array_inv!1133 (_keys!3957 newMap!16)) (array_inv!1134 (_values!2276 newMap!16)) e!52443))))

(declare-fun b!80271 () Bool)

(declare-fun res!41823 () Bool)

(assert (=> b!80271 (=> (not res!41823) (not e!52433))))

(assert (=> b!80271 (= res!41823 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6299 newMap!16)) (_size!418 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun b!80272 () Bool)

(declare-fun e!52429 () Bool)

(assert (=> b!80272 (= e!52430 (and e!52429 mapRes!3329))))

(declare-fun condMapEmpty!3330 () Bool)

(declare-fun mapDefault!3330 () ValueCell!915)

(assert (=> b!80272 (= condMapEmpty!3330 (= (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3330)))))

(declare-fun b!80273 () Bool)

(assert (=> b!80273 (= e!52429 tp_is_empty!2517)))

(declare-fun b!80274 () Bool)

(assert (=> b!80274 (= e!52446 tp_is_empty!2517)))

(declare-fun b!80275 () Bool)

(assert (=> b!80275 (= e!52433 e!52439)))

(declare-fun res!41827 () Bool)

(assert (=> b!80275 (=> (not res!41827) (not e!52439))))

(declare-fun lt!37201 () ListLongMap!1471)

(assert (=> b!80275 (= res!41827 (= lt!37201 lt!37199))))

(declare-fun map!1183 (LongMapFixedSize!738) ListLongMap!1471)

(assert (=> b!80275 (= lt!37199 (map!1183 newMap!16))))

(declare-fun getCurrentListMap!437 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) Int) ListLongMap!1471)

(assert (=> b!80275 (= lt!37201 (getCurrentListMap!437 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(assert (= (and start!10360 res!41822) b!80266))

(assert (= (and b!80266 res!41820) b!80260))

(assert (= (and b!80260 res!41826) b!80271))

(assert (= (and b!80271 res!41823) b!80275))

(assert (= (and b!80275 res!41827) b!80259))

(assert (= (and b!80259 res!41824) b!80258))

(assert (= (and b!80258 c!12539) b!80269))

(assert (= (and b!80258 (not c!12539)) b!80267))

(assert (= (and b!80258 res!41821) b!80264))

(assert (= (and b!80264 (not res!41825)) b!80262))

(assert (= (and b!80272 condMapEmpty!3330) mapIsEmpty!3329))

(assert (= (and b!80272 (not condMapEmpty!3330)) mapNonEmpty!3329))

(get-info :version)

(assert (= (and mapNonEmpty!3329 ((_ is ValueCellFull!915) mapValue!3329)) b!80261))

(assert (= (and b!80272 ((_ is ValueCellFull!915) mapDefault!3330)) b!80273))

(assert (= b!80256 b!80272))

(assert (= b!80263 b!80256))

(assert (= b!80265 b!80263))

(assert (= start!10360 b!80265))

(assert (= (and b!80268 condMapEmpty!3329) mapIsEmpty!3330))

(assert (= (and b!80268 (not condMapEmpty!3329)) mapNonEmpty!3330))

(assert (= (and mapNonEmpty!3330 ((_ is ValueCellFull!915) mapValue!3330)) b!80257))

(assert (= (and b!80268 ((_ is ValueCellFull!915) mapDefault!3329)) b!80274))

(assert (= b!80270 b!80268))

(assert (= start!10360 b!80270))

(declare-fun b_lambda!3593 () Bool)

(assert (=> (not b_lambda!3593) (not b!80259)))

(declare-fun t!5206 () Bool)

(declare-fun tb!1641 () Bool)

(assert (=> (and b!80256 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))) t!5206) tb!1641))

(declare-fun result!2843 () Bool)

(assert (=> tb!1641 (= result!2843 tp_is_empty!2517)))

(assert (=> b!80259 t!5206))

(declare-fun b_and!4905 () Bool)

(assert (= b_and!4901 (and (=> t!5206 result!2843) b_and!4905)))

(declare-fun tb!1643 () Bool)

(declare-fun t!5208 () Bool)

(assert (=> (and b!80270 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))) t!5208) tb!1643))

(declare-fun result!2847 () Bool)

(assert (= result!2847 result!2843))

(assert (=> b!80259 t!5208))

(declare-fun b_and!4907 () Bool)

(assert (= b_and!4903 (and (=> t!5208 result!2847) b_and!4907)))

(declare-fun m!81581 () Bool)

(assert (=> b!80260 m!81581))

(declare-fun m!81583 () Bool)

(assert (=> b!80264 m!81583))

(declare-fun m!81585 () Bool)

(assert (=> b!80264 m!81585))

(declare-fun m!81587 () Bool)

(assert (=> b!80264 m!81587))

(declare-fun m!81589 () Bool)

(assert (=> b!80264 m!81589))

(declare-fun m!81591 () Bool)

(assert (=> b!80264 m!81591))

(declare-fun m!81593 () Bool)

(assert (=> b!80264 m!81593))

(declare-fun m!81595 () Bool)

(assert (=> b!80264 m!81595))

(assert (=> b!80264 m!81585))

(declare-fun m!81597 () Bool)

(assert (=> b!80264 m!81597))

(assert (=> b!80264 m!81587))

(declare-fun m!81599 () Bool)

(assert (=> b!80264 m!81599))

(declare-fun m!81601 () Bool)

(assert (=> b!80264 m!81601))

(declare-fun m!81603 () Bool)

(assert (=> b!80264 m!81603))

(assert (=> b!80264 m!81585))

(declare-fun m!81605 () Bool)

(assert (=> b!80264 m!81605))

(declare-fun m!81607 () Bool)

(assert (=> b!80275 m!81607))

(declare-fun m!81609 () Bool)

(assert (=> b!80275 m!81609))

(declare-fun m!81611 () Bool)

(assert (=> mapNonEmpty!3330 m!81611))

(declare-fun m!81613 () Bool)

(assert (=> b!80269 m!81613))

(declare-fun m!81615 () Bool)

(assert (=> b!80269 m!81615))

(assert (=> b!80269 m!81585))

(declare-fun m!81617 () Bool)

(assert (=> b!80269 m!81617))

(assert (=> b!80269 m!81585))

(assert (=> b!80269 m!81585))

(declare-fun m!81619 () Bool)

(assert (=> b!80269 m!81619))

(assert (=> b!80269 m!81585))

(declare-fun m!81621 () Bool)

(assert (=> b!80269 m!81621))

(assert (=> b!80258 m!81585))

(assert (=> b!80258 m!81585))

(declare-fun m!81623 () Bool)

(assert (=> b!80258 m!81623))

(assert (=> b!80258 m!81585))

(declare-fun m!81625 () Bool)

(assert (=> b!80258 m!81625))

(declare-fun m!81627 () Bool)

(assert (=> mapNonEmpty!3329 m!81627))

(declare-fun m!81629 () Bool)

(assert (=> start!10360 m!81629))

(assert (=> b!80259 m!81585))

(declare-fun m!81631 () Bool)

(assert (=> b!80259 m!81631))

(declare-fun m!81633 () Bool)

(assert (=> b!80259 m!81633))

(assert (=> b!80259 m!81631))

(assert (=> b!80259 m!81633))

(declare-fun m!81635 () Bool)

(assert (=> b!80259 m!81635))

(declare-fun m!81637 () Bool)

(assert (=> b!80270 m!81637))

(declare-fun m!81639 () Bool)

(assert (=> b!80270 m!81639))

(declare-fun m!81641 () Bool)

(assert (=> b!80256 m!81641))

(declare-fun m!81643 () Bool)

(assert (=> b!80256 m!81643))

(check-sat (not b_next!2203) (not b!80264) (not mapNonEmpty!3330) b_and!4907 (not b!80258) (not start!10360) b_and!4905 (not b!80256) (not b!80275) tp_is_empty!2517 (not mapNonEmpty!3329) (not b_lambda!3593) (not b!80259) (not b!80260) (not b!80270) (not b_next!2201) (not b!80269))
(check-sat b_and!4905 b_and!4907 (not b_next!2201) (not b_next!2203))
(get-model)

(declare-fun b_lambda!3597 () Bool)

(assert (= b_lambda!3593 (or (and b!80256 b_free!2201) (and b!80270 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))))) b_lambda!3597)))

(check-sat (not b_next!2203) (not b!80264) (not mapNonEmpty!3330) b_and!4907 (not b!80258) (not start!10360) (not b!80259) b_and!4905 (not b!80256) (not b!80275) tp_is_empty!2517 (not mapNonEmpty!3329) (not b_lambda!3597) (not b!80260) (not b!80270) (not b_next!2201) (not b!80269))
(check-sat b_and!4905 b_and!4907 (not b_next!2201) (not b_next!2203))
(get-model)

(declare-fun d!19627 () Bool)

(assert (=> d!19627 (= (array_inv!1133 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvsge (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!80256 d!19627))

(declare-fun d!19629 () Bool)

(assert (=> d!19629 (= (array_inv!1134 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvsge (size!2143 (_values!2276 (v!2610 (underlying!284 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!80256 d!19629))

(declare-fun d!19631 () Bool)

(declare-fun res!41858 () Bool)

(declare-fun e!52503 () Bool)

(assert (=> d!19631 (=> (not res!41858) (not e!52503))))

(declare-fun simpleValid!55 (LongMapFixedSize!738) Bool)

(assert (=> d!19631 (= res!41858 (simpleValid!55 newMap!16))))

(assert (=> d!19631 (= (valid!316 newMap!16) e!52503)))

(declare-fun b!80346 () Bool)

(declare-fun res!41859 () Bool)

(assert (=> b!80346 (=> (not res!41859) (not e!52503))))

(declare-fun arrayCountValidKeys!0 (array!3988 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!80346 (= res!41859 (= (arrayCountValidKeys!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) (_size!418 newMap!16)))))

(declare-fun b!80347 () Bool)

(declare-fun res!41860 () Bool)

(assert (=> b!80347 (=> (not res!41860) (not e!52503))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3988 (_ BitVec 32)) Bool)

(assert (=> b!80347 (= res!41860 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun b!80348 () Bool)

(assert (=> b!80348 (= e!52503 (arrayNoDuplicates!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 Nil!1536))))

(assert (= (and d!19631 res!41858) b!80346))

(assert (= (and b!80346 res!41859) b!80347))

(assert (= (and b!80347 res!41860) b!80348))

(declare-fun m!81709 () Bool)

(assert (=> d!19631 m!81709))

(declare-fun m!81711 () Bool)

(assert (=> b!80346 m!81711))

(declare-fun m!81713 () Bool)

(assert (=> b!80347 m!81713))

(declare-fun m!81715 () Bool)

(assert (=> b!80348 m!81715))

(assert (=> b!80260 d!19631))

(declare-fun d!19633 () Bool)

(assert (=> d!19633 (= (valid!317 thiss!992) (valid!316 (v!2610 (underlying!284 thiss!992))))))

(declare-fun bs!3394 () Bool)

(assert (= bs!3394 d!19633))

(declare-fun m!81717 () Bool)

(assert (=> bs!3394 m!81717))

(assert (=> start!10360 d!19633))

(declare-fun d!19635 () Bool)

(declare-fun c!12545 () Bool)

(assert (=> d!19635 (= c!12545 ((_ is ValueCellFull!915) (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun e!52506 () V!3003)

(assert (=> d!19635 (= (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) from!355) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52506)))

(declare-fun b!80353 () Bool)

(declare-fun get!1196 (ValueCell!915 V!3003) V!3003)

(assert (=> b!80353 (= e!52506 (get!1196 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) from!355) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80354 () Bool)

(declare-fun get!1197 (ValueCell!915 V!3003) V!3003)

(assert (=> b!80354 (= e!52506 (get!1197 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) from!355) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19635 c!12545) b!80353))

(assert (= (and d!19635 (not c!12545)) b!80354))

(assert (=> b!80353 m!81631))

(assert (=> b!80353 m!81633))

(declare-fun m!81719 () Bool)

(assert (=> b!80353 m!81719))

(assert (=> b!80354 m!81631))

(assert (=> b!80354 m!81633))

(declare-fun m!81721 () Bool)

(assert (=> b!80354 m!81721))

(assert (=> b!80259 d!19635))

(declare-fun d!19637 () Bool)

(assert (=> d!19637 (not (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37260 () Unit!2350)

(declare-fun choose!68 (array!3988 (_ BitVec 32) (_ BitVec 64) List!1539) Unit!2350)

(assert (=> d!19637 (= lt!37260 (choose!68 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536)))))

(assert (=> d!19637 (bvslt (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!19637 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536)) lt!37260)))

(declare-fun bs!3395 () Bool)

(assert (= bs!3395 d!19637))

(assert (=> bs!3395 m!81585))

(assert (=> bs!3395 m!81619))

(assert (=> bs!3395 m!81585))

(declare-fun m!81723 () Bool)

(assert (=> bs!3395 m!81723))

(assert (=> b!80269 d!19637))

(declare-fun d!19639 () Bool)

(assert (=> d!19639 (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) from!355 Nil!1536)))

(declare-fun lt!37263 () Unit!2350)

(declare-fun choose!39 (array!3988 (_ BitVec 32) (_ BitVec 32)) Unit!2350)

(assert (=> d!19639 (= lt!37263 (choose!39 (_keys!3957 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!19639 (bvslt (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!19639 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000000 from!355) lt!37263)))

(declare-fun bs!3396 () Bool)

(assert (= bs!3396 d!19639))

(assert (=> bs!3396 m!81615))

(declare-fun m!81725 () Bool)

(assert (=> bs!3396 m!81725))

(assert (=> b!80269 d!19639))

(declare-fun d!19641 () Bool)

(declare-fun res!41865 () Bool)

(declare-fun e!52511 () Bool)

(assert (=> d!19641 (=> res!41865 e!52511)))

(assert (=> d!19641 (= res!41865 (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!19641 (= (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!52511)))

(declare-fun b!80359 () Bool)

(declare-fun e!52512 () Bool)

(assert (=> b!80359 (= e!52511 e!52512)))

(declare-fun res!41866 () Bool)

(assert (=> b!80359 (=> (not res!41866) (not e!52512))))

(assert (=> b!80359 (= res!41866 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!80360 () Bool)

(assert (=> b!80360 (= e!52512 (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!19641 (not res!41865)) b!80359))

(assert (= (and b!80359 res!41866) b!80360))

(declare-fun m!81727 () Bool)

(assert (=> d!19641 m!81727))

(assert (=> b!80360 m!81585))

(declare-fun m!81729 () Bool)

(assert (=> b!80360 m!81729))

(assert (=> b!80269 d!19641))

(declare-fun d!19643 () Bool)

(declare-fun e!52515 () Bool)

(assert (=> d!19643 e!52515))

(declare-fun c!12548 () Bool)

(assert (=> d!19643 (= c!12548 (and (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!37266 () Unit!2350)

(declare-fun choose!476 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) (_ BitVec 32) Int) Unit!2350)

(assert (=> d!19643 (= lt!37266 (choose!476 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(assert (=> d!19643 (validMask!0 (mask!6299 (v!2610 (underlying!284 thiss!992))))))

(assert (=> d!19643 (= (lemmaListMapContainsThenArrayContainsFrom!66 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))) lt!37266)))

(declare-fun b!80365 () Bool)

(assert (=> b!80365 (= e!52515 (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!80366 () Bool)

(assert (=> b!80366 (= e!52515 (ite (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!19643 c!12548) b!80365))

(assert (= (and d!19643 (not c!12548)) b!80366))

(assert (=> d!19643 m!81585))

(declare-fun m!81731 () Bool)

(assert (=> d!19643 m!81731))

(assert (=> d!19643 m!81603))

(assert (=> b!80365 m!81585))

(assert (=> b!80365 m!81619))

(assert (=> b!80269 d!19643))

(declare-fun b!80377 () Bool)

(declare-fun e!52527 () Bool)

(declare-fun call!7397 () Bool)

(assert (=> b!80377 (= e!52527 call!7397)))

(declare-fun b!80378 () Bool)

(declare-fun e!52526 () Bool)

(declare-fun contains!752 (List!1539 (_ BitVec 64)) Bool)

(assert (=> b!80378 (= e!52526 (contains!752 Nil!1536 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!80379 () Bool)

(assert (=> b!80379 (= e!52527 call!7397)))

(declare-fun d!19645 () Bool)

(declare-fun res!41873 () Bool)

(declare-fun e!52524 () Bool)

(assert (=> d!19645 (=> res!41873 e!52524)))

(assert (=> d!19645 (= res!41873 (bvsge from!355 (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> d!19645 (= (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) from!355 Nil!1536) e!52524)))

(declare-fun b!80380 () Bool)

(declare-fun e!52525 () Bool)

(assert (=> b!80380 (= e!52524 e!52525)))

(declare-fun res!41874 () Bool)

(assert (=> b!80380 (=> (not res!41874) (not e!52525))))

(assert (=> b!80380 (= res!41874 (not e!52526))))

(declare-fun res!41875 () Bool)

(assert (=> b!80380 (=> (not res!41875) (not e!52526))))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!80380 (= res!41875 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!80381 () Bool)

(assert (=> b!80381 (= e!52525 e!52527)))

(declare-fun c!12551 () Bool)

(assert (=> b!80381 (= c!12551 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun bm!7394 () Bool)

(assert (=> bm!7394 (= call!7397 (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)))))

(assert (= (and d!19645 (not res!41873)) b!80380))

(assert (= (and b!80380 res!41875) b!80378))

(assert (= (and b!80380 res!41874) b!80381))

(assert (= (and b!80381 c!12551) b!80377))

(assert (= (and b!80381 (not c!12551)) b!80379))

(assert (= (or b!80377 b!80379) bm!7394))

(assert (=> b!80378 m!81585))

(assert (=> b!80378 m!81585))

(declare-fun m!81733 () Bool)

(assert (=> b!80378 m!81733))

(assert (=> b!80380 m!81585))

(assert (=> b!80380 m!81585))

(declare-fun m!81735 () Bool)

(assert (=> b!80380 m!81735))

(assert (=> b!80381 m!81585))

(assert (=> b!80381 m!81585))

(assert (=> b!80381 m!81735))

(assert (=> bm!7394 m!81585))

(declare-fun m!81737 () Bool)

(assert (=> bm!7394 m!81737))

(assert (=> b!80269 d!19645))

(declare-fun d!19647 () Bool)

(declare-fun e!52530 () Bool)

(assert (=> d!19647 e!52530))

(declare-fun res!41880 () Bool)

(assert (=> d!19647 (=> (not res!41880) (not e!52530))))

(declare-fun lt!37278 () ListLongMap!1471)

(assert (=> d!19647 (= res!41880 (contains!750 lt!37278 (_1!1111 lt!37197)))))

(declare-fun lt!37275 () List!1538)

(assert (=> d!19647 (= lt!37278 (ListLongMap!1472 lt!37275))))

(declare-fun lt!37276 () Unit!2350)

(declare-fun lt!37277 () Unit!2350)

(assert (=> d!19647 (= lt!37276 lt!37277)))

(declare-datatypes ((Option!143 0))(
  ( (Some!142 (v!2614 V!3003)) (None!141) )
))
(declare-fun getValueByKey!137 (List!1538 (_ BitVec 64)) Option!143)

(assert (=> d!19647 (= (getValueByKey!137 lt!37275 (_1!1111 lt!37197)) (Some!142 (_2!1111 lt!37197)))))

(declare-fun lemmaContainsTupThenGetReturnValue!56 (List!1538 (_ BitVec 64) V!3003) Unit!2350)

(assert (=> d!19647 (= lt!37277 (lemmaContainsTupThenGetReturnValue!56 lt!37275 (_1!1111 lt!37197) (_2!1111 lt!37197)))))

(declare-fun insertStrictlySorted!58 (List!1538 (_ BitVec 64) V!3003) List!1538)

(assert (=> d!19647 (= lt!37275 (insertStrictlySorted!58 (toList!751 lt!37187) (_1!1111 lt!37197) (_2!1111 lt!37197)))))

(assert (=> d!19647 (= (+!111 lt!37187 lt!37197) lt!37278)))

(declare-fun b!80386 () Bool)

(declare-fun res!41881 () Bool)

(assert (=> b!80386 (=> (not res!41881) (not e!52530))))

(assert (=> b!80386 (= res!41881 (= (getValueByKey!137 (toList!751 lt!37278) (_1!1111 lt!37197)) (Some!142 (_2!1111 lt!37197))))))

(declare-fun b!80387 () Bool)

(declare-fun contains!753 (List!1538 tuple2!2202) Bool)

(assert (=> b!80387 (= e!52530 (contains!753 (toList!751 lt!37278) lt!37197))))

(assert (= (and d!19647 res!41880) b!80386))

(assert (= (and b!80386 res!41881) b!80387))

(declare-fun m!81739 () Bool)

(assert (=> d!19647 m!81739))

(declare-fun m!81741 () Bool)

(assert (=> d!19647 m!81741))

(declare-fun m!81743 () Bool)

(assert (=> d!19647 m!81743))

(declare-fun m!81745 () Bool)

(assert (=> d!19647 m!81745))

(declare-fun m!81747 () Bool)

(assert (=> b!80386 m!81747))

(declare-fun m!81749 () Bool)

(assert (=> b!80387 m!81749))

(assert (=> b!80264 d!19647))

(declare-fun d!19649 () Bool)

(assert (=> d!19649 (= (+!111 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (+!111 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun lt!37281 () Unit!2350)

(declare-fun choose!477 (ListLongMap!1471 (_ BitVec 64) V!3003 (_ BitVec 64) V!3003) Unit!2350)

(assert (=> d!19649 (= lt!37281 (choose!477 lt!37190 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))

(assert (=> d!19649 (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19649 (= (addCommutativeForDiffKeys!30 lt!37190 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) lt!37281)))

(declare-fun bs!3397 () Bool)

(assert (= bs!3397 d!19649))

(assert (=> bs!3397 m!81585))

(declare-fun m!81751 () Bool)

(assert (=> bs!3397 m!81751))

(declare-fun m!81753 () Bool)

(assert (=> bs!3397 m!81753))

(assert (=> bs!3397 m!81753))

(declare-fun m!81755 () Bool)

(assert (=> bs!3397 m!81755))

(declare-fun m!81757 () Bool)

(assert (=> bs!3397 m!81757))

(assert (=> bs!3397 m!81757))

(declare-fun m!81759 () Bool)

(assert (=> bs!3397 m!81759))

(assert (=> b!80264 d!19649))

(declare-fun d!19651 () Bool)

(declare-fun e!52531 () Bool)

(assert (=> d!19651 e!52531))

(declare-fun res!41882 () Bool)

(assert (=> d!19651 (=> (not res!41882) (not e!52531))))

(declare-fun lt!37285 () ListLongMap!1471)

(assert (=> d!19651 (= res!41882 (contains!750 lt!37285 (_1!1111 lt!37202)))))

(declare-fun lt!37282 () List!1538)

(assert (=> d!19651 (= lt!37285 (ListLongMap!1472 lt!37282))))

(declare-fun lt!37283 () Unit!2350)

(declare-fun lt!37284 () Unit!2350)

(assert (=> d!19651 (= lt!37283 lt!37284)))

(assert (=> d!19651 (= (getValueByKey!137 lt!37282 (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202)))))

(assert (=> d!19651 (= lt!37284 (lemmaContainsTupThenGetReturnValue!56 lt!37282 (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(assert (=> d!19651 (= lt!37282 (insertStrictlySorted!58 (toList!751 lt!37190) (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(assert (=> d!19651 (= (+!111 lt!37190 lt!37202) lt!37285)))

(declare-fun b!80388 () Bool)

(declare-fun res!41883 () Bool)

(assert (=> b!80388 (=> (not res!41883) (not e!52531))))

(assert (=> b!80388 (= res!41883 (= (getValueByKey!137 (toList!751 lt!37285) (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202))))))

(declare-fun b!80389 () Bool)

(assert (=> b!80389 (= e!52531 (contains!753 (toList!751 lt!37285) lt!37202))))

(assert (= (and d!19651 res!41882) b!80388))

(assert (= (and b!80388 res!41883) b!80389))

(declare-fun m!81761 () Bool)

(assert (=> d!19651 m!81761))

(declare-fun m!81763 () Bool)

(assert (=> d!19651 m!81763))

(declare-fun m!81765 () Bool)

(assert (=> d!19651 m!81765))

(declare-fun m!81767 () Bool)

(assert (=> d!19651 m!81767))

(declare-fun m!81769 () Bool)

(assert (=> b!80388 m!81769))

(declare-fun m!81771 () Bool)

(assert (=> b!80389 m!81771))

(assert (=> b!80264 d!19651))

(declare-fun d!19653 () Bool)

(assert (=> d!19653 (= (+!111 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (+!111 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun lt!37286 () Unit!2350)

(assert (=> d!19653 (= lt!37286 (choose!477 lt!37196 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))

(assert (=> d!19653 (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19653 (= (addCommutativeForDiffKeys!30 lt!37196 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))) lt!37286)))

(declare-fun bs!3398 () Bool)

(assert (= bs!3398 d!19653))

(assert (=> bs!3398 m!81585))

(declare-fun m!81773 () Bool)

(assert (=> bs!3398 m!81773))

(declare-fun m!81775 () Bool)

(assert (=> bs!3398 m!81775))

(assert (=> bs!3398 m!81775))

(declare-fun m!81777 () Bool)

(assert (=> bs!3398 m!81777))

(declare-fun m!81779 () Bool)

(assert (=> bs!3398 m!81779))

(assert (=> bs!3398 m!81779))

(declare-fun m!81781 () Bool)

(assert (=> bs!3398 m!81781))

(assert (=> b!80264 d!19653))

(declare-fun d!19655 () Bool)

(declare-fun e!52532 () Bool)

(assert (=> d!19655 e!52532))

(declare-fun res!41884 () Bool)

(assert (=> d!19655 (=> (not res!41884) (not e!52532))))

(declare-fun lt!37290 () ListLongMap!1471)

(assert (=> d!19655 (= res!41884 (contains!750 lt!37290 (_1!1111 lt!37188)))))

(declare-fun lt!37287 () List!1538)

(assert (=> d!19655 (= lt!37290 (ListLongMap!1472 lt!37287))))

(declare-fun lt!37288 () Unit!2350)

(declare-fun lt!37289 () Unit!2350)

(assert (=> d!19655 (= lt!37288 lt!37289)))

(assert (=> d!19655 (= (getValueByKey!137 lt!37287 (_1!1111 lt!37188)) (Some!142 (_2!1111 lt!37188)))))

(assert (=> d!19655 (= lt!37289 (lemmaContainsTupThenGetReturnValue!56 lt!37287 (_1!1111 lt!37188) (_2!1111 lt!37188)))))

(assert (=> d!19655 (= lt!37287 (insertStrictlySorted!58 (toList!751 lt!37192) (_1!1111 lt!37188) (_2!1111 lt!37188)))))

(assert (=> d!19655 (= (+!111 lt!37192 lt!37188) lt!37290)))

(declare-fun b!80390 () Bool)

(declare-fun res!41885 () Bool)

(assert (=> b!80390 (=> (not res!41885) (not e!52532))))

(assert (=> b!80390 (= res!41885 (= (getValueByKey!137 (toList!751 lt!37290) (_1!1111 lt!37188)) (Some!142 (_2!1111 lt!37188))))))

(declare-fun b!80391 () Bool)

(assert (=> b!80391 (= e!52532 (contains!753 (toList!751 lt!37290) lt!37188))))

(assert (= (and d!19655 res!41884) b!80390))

(assert (= (and b!80390 res!41885) b!80391))

(declare-fun m!81783 () Bool)

(assert (=> d!19655 m!81783))

(declare-fun m!81785 () Bool)

(assert (=> d!19655 m!81785))

(declare-fun m!81787 () Bool)

(assert (=> d!19655 m!81787))

(declare-fun m!81789 () Bool)

(assert (=> d!19655 m!81789))

(declare-fun m!81791 () Bool)

(assert (=> b!80390 m!81791))

(declare-fun m!81793 () Bool)

(assert (=> b!80391 m!81793))

(assert (=> b!80264 d!19655))

(declare-fun d!19657 () Bool)

(declare-fun e!52533 () Bool)

(assert (=> d!19657 e!52533))

(declare-fun res!41886 () Bool)

(assert (=> d!19657 (=> (not res!41886) (not e!52533))))

(declare-fun lt!37294 () ListLongMap!1471)

(assert (=> d!19657 (= res!41886 (contains!750 lt!37294 (_1!1111 lt!37202)))))

(declare-fun lt!37291 () List!1538)

(assert (=> d!19657 (= lt!37294 (ListLongMap!1472 lt!37291))))

(declare-fun lt!37292 () Unit!2350)

(declare-fun lt!37293 () Unit!2350)

(assert (=> d!19657 (= lt!37292 lt!37293)))

(assert (=> d!19657 (= (getValueByKey!137 lt!37291 (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202)))))

(assert (=> d!19657 (= lt!37293 (lemmaContainsTupThenGetReturnValue!56 lt!37291 (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(assert (=> d!19657 (= lt!37291 (insertStrictlySorted!58 (toList!751 (+!111 lt!37196 lt!37188)) (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(assert (=> d!19657 (= (+!111 (+!111 lt!37196 lt!37188) lt!37202) lt!37294)))

(declare-fun b!80392 () Bool)

(declare-fun res!41887 () Bool)

(assert (=> b!80392 (=> (not res!41887) (not e!52533))))

(assert (=> b!80392 (= res!41887 (= (getValueByKey!137 (toList!751 lt!37294) (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202))))))

(declare-fun b!80393 () Bool)

(assert (=> b!80393 (= e!52533 (contains!753 (toList!751 lt!37294) lt!37202))))

(assert (= (and d!19657 res!41886) b!80392))

(assert (= (and b!80392 res!41887) b!80393))

(declare-fun m!81795 () Bool)

(assert (=> d!19657 m!81795))

(declare-fun m!81797 () Bool)

(assert (=> d!19657 m!81797))

(declare-fun m!81799 () Bool)

(assert (=> d!19657 m!81799))

(declare-fun m!81801 () Bool)

(assert (=> d!19657 m!81801))

(declare-fun m!81803 () Bool)

(assert (=> b!80392 m!81803))

(declare-fun m!81805 () Bool)

(assert (=> b!80393 m!81805))

(assert (=> b!80264 d!19657))

(declare-fun d!19659 () Bool)

(declare-fun e!52534 () Bool)

(assert (=> d!19659 e!52534))

(declare-fun res!41888 () Bool)

(assert (=> d!19659 (=> (not res!41888) (not e!52534))))

(declare-fun lt!37298 () ListLongMap!1471)

(assert (=> d!19659 (= res!41888 (contains!750 lt!37298 (_1!1111 lt!37188)))))

(declare-fun lt!37295 () List!1538)

(assert (=> d!19659 (= lt!37298 (ListLongMap!1472 lt!37295))))

(declare-fun lt!37296 () Unit!2350)

(declare-fun lt!37297 () Unit!2350)

(assert (=> d!19659 (= lt!37296 lt!37297)))

(assert (=> d!19659 (= (getValueByKey!137 lt!37295 (_1!1111 lt!37188)) (Some!142 (_2!1111 lt!37188)))))

(assert (=> d!19659 (= lt!37297 (lemmaContainsTupThenGetReturnValue!56 lt!37295 (_1!1111 lt!37188) (_2!1111 lt!37188)))))

(assert (=> d!19659 (= lt!37295 (insertStrictlySorted!58 (toList!751 lt!37196) (_1!1111 lt!37188) (_2!1111 lt!37188)))))

(assert (=> d!19659 (= (+!111 lt!37196 lt!37188) lt!37298)))

(declare-fun b!80394 () Bool)

(declare-fun res!41889 () Bool)

(assert (=> b!80394 (=> (not res!41889) (not e!52534))))

(assert (=> b!80394 (= res!41889 (= (getValueByKey!137 (toList!751 lt!37298) (_1!1111 lt!37188)) (Some!142 (_2!1111 lt!37188))))))

(declare-fun b!80395 () Bool)

(assert (=> b!80395 (= e!52534 (contains!753 (toList!751 lt!37298) lt!37188))))

(assert (= (and d!19659 res!41888) b!80394))

(assert (= (and b!80394 res!41889) b!80395))

(declare-fun m!81807 () Bool)

(assert (=> d!19659 m!81807))

(declare-fun m!81809 () Bool)

(assert (=> d!19659 m!81809))

(declare-fun m!81811 () Bool)

(assert (=> d!19659 m!81811))

(declare-fun m!81813 () Bool)

(assert (=> d!19659 m!81813))

(declare-fun m!81815 () Bool)

(assert (=> b!80394 m!81815))

(declare-fun m!81817 () Bool)

(assert (=> b!80395 m!81817))

(assert (=> b!80264 d!19659))

(declare-fun d!19661 () Bool)

(assert (=> d!19661 (= (validMask!0 (mask!6299 (v!2610 (underlying!284 thiss!992)))) (and (or (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000001111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000011111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000001111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000011111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000001111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000011111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000001111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000011111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000001111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000011111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000001111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000011111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000111111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000001111111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000011111111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000111111111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000001111111111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000011111111111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000111111111111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00001111111111111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00011111111111111111111111111111) (= (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!80264 d!19661))

(declare-fun d!19663 () Bool)

(declare-fun e!52535 () Bool)

(assert (=> d!19663 e!52535))

(declare-fun res!41890 () Bool)

(assert (=> d!19663 (=> (not res!41890) (not e!52535))))

(declare-fun lt!37302 () ListLongMap!1471)

(assert (=> d!19663 (= res!41890 (contains!750 lt!37302 (_1!1111 lt!37197)))))

(declare-fun lt!37299 () List!1538)

(assert (=> d!19663 (= lt!37302 (ListLongMap!1472 lt!37299))))

(declare-fun lt!37300 () Unit!2350)

(declare-fun lt!37301 () Unit!2350)

(assert (=> d!19663 (= lt!37300 lt!37301)))

(assert (=> d!19663 (= (getValueByKey!137 lt!37299 (_1!1111 lt!37197)) (Some!142 (_2!1111 lt!37197)))))

(assert (=> d!19663 (= lt!37301 (lemmaContainsTupThenGetReturnValue!56 lt!37299 (_1!1111 lt!37197) (_2!1111 lt!37197)))))

(assert (=> d!19663 (= lt!37299 (insertStrictlySorted!58 (toList!751 lt!37190) (_1!1111 lt!37197) (_2!1111 lt!37197)))))

(assert (=> d!19663 (= (+!111 lt!37190 lt!37197) lt!37302)))

(declare-fun b!80396 () Bool)

(declare-fun res!41891 () Bool)

(assert (=> b!80396 (=> (not res!41891) (not e!52535))))

(assert (=> b!80396 (= res!41891 (= (getValueByKey!137 (toList!751 lt!37302) (_1!1111 lt!37197)) (Some!142 (_2!1111 lt!37197))))))

(declare-fun b!80397 () Bool)

(assert (=> b!80397 (= e!52535 (contains!753 (toList!751 lt!37302) lt!37197))))

(assert (= (and d!19663 res!41890) b!80396))

(assert (= (and b!80396 res!41891) b!80397))

(declare-fun m!81819 () Bool)

(assert (=> d!19663 m!81819))

(declare-fun m!81821 () Bool)

(assert (=> d!19663 m!81821))

(declare-fun m!81823 () Bool)

(assert (=> d!19663 m!81823))

(declare-fun m!81825 () Bool)

(assert (=> d!19663 m!81825))

(declare-fun m!81827 () Bool)

(assert (=> b!80396 m!81827))

(declare-fun m!81829 () Bool)

(assert (=> b!80397 m!81829))

(assert (=> b!80264 d!19663))

(declare-fun d!19665 () Bool)

(declare-fun e!52536 () Bool)

(assert (=> d!19665 e!52536))

(declare-fun res!41892 () Bool)

(assert (=> d!19665 (=> (not res!41892) (not e!52536))))

(declare-fun lt!37306 () ListLongMap!1471)

(assert (=> d!19665 (= res!41892 (contains!750 lt!37306 (_1!1111 lt!37202)))))

(declare-fun lt!37303 () List!1538)

(assert (=> d!19665 (= lt!37306 (ListLongMap!1472 lt!37303))))

(declare-fun lt!37304 () Unit!2350)

(declare-fun lt!37305 () Unit!2350)

(assert (=> d!19665 (= lt!37304 lt!37305)))

(assert (=> d!19665 (= (getValueByKey!137 lt!37303 (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202)))))

(assert (=> d!19665 (= lt!37305 (lemmaContainsTupThenGetReturnValue!56 lt!37303 (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(assert (=> d!19665 (= lt!37303 (insertStrictlySorted!58 (toList!751 lt!37196) (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(assert (=> d!19665 (= (+!111 lt!37196 lt!37202) lt!37306)))

(declare-fun b!80398 () Bool)

(declare-fun res!41893 () Bool)

(assert (=> b!80398 (=> (not res!41893) (not e!52536))))

(assert (=> b!80398 (= res!41893 (= (getValueByKey!137 (toList!751 lt!37306) (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202))))))

(declare-fun b!80399 () Bool)

(assert (=> b!80399 (= e!52536 (contains!753 (toList!751 lt!37306) lt!37202))))

(assert (= (and d!19665 res!41892) b!80398))

(assert (= (and b!80398 res!41893) b!80399))

(declare-fun m!81831 () Bool)

(assert (=> d!19665 m!81831))

(declare-fun m!81833 () Bool)

(assert (=> d!19665 m!81833))

(declare-fun m!81835 () Bool)

(assert (=> d!19665 m!81835))

(declare-fun m!81837 () Bool)

(assert (=> d!19665 m!81837))

(declare-fun m!81839 () Bool)

(assert (=> b!80398 m!81839))

(declare-fun m!81841 () Bool)

(assert (=> b!80399 m!81841))

(assert (=> b!80264 d!19665))

(declare-fun b!80424 () Bool)

(declare-fun e!52555 () Bool)

(assert (=> b!80424 (= e!52555 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80424 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun bm!7397 () Bool)

(declare-fun call!7400 () ListLongMap!1471)

(assert (=> bm!7397 (= call!7400 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun b!80425 () Bool)

(declare-fun e!52553 () ListLongMap!1471)

(declare-fun e!52552 () ListLongMap!1471)

(assert (=> b!80425 (= e!52553 e!52552)))

(declare-fun c!12561 () Bool)

(assert (=> b!80425 (= c!12561 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!19667 () Bool)

(declare-fun e!52554 () Bool)

(assert (=> d!19667 e!52554))

(declare-fun res!41902 () Bool)

(assert (=> d!19667 (=> (not res!41902) (not e!52554))))

(declare-fun lt!37326 () ListLongMap!1471)

(assert (=> d!19667 (= res!41902 (not (contains!750 lt!37326 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19667 (= lt!37326 e!52553)))

(declare-fun c!12562 () Bool)

(assert (=> d!19667 (= c!12562 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> d!19667 (validMask!0 (mask!6299 (v!2610 (underlying!284 thiss!992))))))

(assert (=> d!19667 (= (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))) lt!37326)))

(declare-fun b!80426 () Bool)

(declare-fun res!41905 () Bool)

(assert (=> b!80426 (=> (not res!41905) (not e!52554))))

(assert (=> b!80426 (= res!41905 (not (contains!750 lt!37326 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80427 () Bool)

(declare-fun e!52556 () Bool)

(declare-fun isEmpty!334 (ListLongMap!1471) Bool)

(assert (=> b!80427 (= e!52556 (isEmpty!334 lt!37326))))

(declare-fun b!80428 () Bool)

(assert (=> b!80428 (= e!52553 (ListLongMap!1472 Nil!1535))))

(declare-fun b!80429 () Bool)

(assert (=> b!80429 (= e!52556 (= lt!37326 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!80430 () Bool)

(declare-fun e!52551 () Bool)

(assert (=> b!80430 (= e!52554 e!52551)))

(declare-fun c!12563 () Bool)

(assert (=> b!80430 (= c!12563 e!52555)))

(declare-fun res!41903 () Bool)

(assert (=> b!80430 (=> (not res!41903) (not e!52555))))

(assert (=> b!80430 (= res!41903 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!80431 () Bool)

(assert (=> b!80431 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> b!80431 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_values!2276 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!52557 () Bool)

(declare-fun apply!80 (ListLongMap!1471 (_ BitVec 64)) V!3003)

(assert (=> b!80431 (= e!52557 (= (apply!80 lt!37326 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!80432 () Bool)

(declare-fun lt!37323 () Unit!2350)

(declare-fun lt!37322 () Unit!2350)

(assert (=> b!80432 (= lt!37323 lt!37322)))

(declare-fun lt!37321 () (_ BitVec 64))

(declare-fun lt!37324 () V!3003)

(declare-fun lt!37327 () (_ BitVec 64))

(declare-fun lt!37325 () ListLongMap!1471)

(assert (=> b!80432 (not (contains!750 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)) lt!37327))))

(declare-fun addStillNotContains!31 (ListLongMap!1471 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2350)

(assert (=> b!80432 (= lt!37322 (addStillNotContains!31 lt!37325 lt!37321 lt!37324 lt!37327))))

(assert (=> b!80432 (= lt!37327 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!80432 (= lt!37324 (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!80432 (= lt!37321 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!80432 (= lt!37325 call!7400)))

(assert (=> b!80432 (= e!52552 (+!111 call!7400 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!80433 () Bool)

(assert (=> b!80433 (= e!52551 e!52557)))

(assert (=> b!80433 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun res!41904 () Bool)

(assert (=> b!80433 (= res!41904 (contains!750 lt!37326 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80433 (=> (not res!41904) (not e!52557))))

(declare-fun b!80434 () Bool)

(assert (=> b!80434 (= e!52552 call!7400)))

(declare-fun b!80435 () Bool)

(assert (=> b!80435 (= e!52551 e!52556)))

(declare-fun c!12560 () Bool)

(assert (=> b!80435 (= c!12560 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19667 c!12562) b!80428))

(assert (= (and d!19667 (not c!12562)) b!80425))

(assert (= (and b!80425 c!12561) b!80432))

(assert (= (and b!80425 (not c!12561)) b!80434))

(assert (= (or b!80432 b!80434) bm!7397))

(assert (= (and d!19667 res!41902) b!80426))

(assert (= (and b!80426 res!41905) b!80430))

(assert (= (and b!80430 res!41903) b!80424))

(assert (= (and b!80430 c!12563) b!80433))

(assert (= (and b!80430 (not c!12563)) b!80435))

(assert (= (and b!80433 res!41904) b!80431))

(assert (= (and b!80435 c!12560) b!80429))

(assert (= (and b!80435 (not c!12560)) b!80427))

(declare-fun b_lambda!3599 () Bool)

(assert (=> (not b_lambda!3599) (not b!80431)))

(assert (=> b!80431 t!5206))

(declare-fun b_and!4917 () Bool)

(assert (= b_and!4905 (and (=> t!5206 result!2843) b_and!4917)))

(assert (=> b!80431 t!5208))

(declare-fun b_and!4919 () Bool)

(assert (= b_and!4907 (and (=> t!5208 result!2847) b_and!4919)))

(declare-fun b_lambda!3601 () Bool)

(assert (=> (not b_lambda!3601) (not b!80432)))

(assert (=> b!80432 t!5206))

(declare-fun b_and!4921 () Bool)

(assert (= b_and!4917 (and (=> t!5206 result!2843) b_and!4921)))

(assert (=> b!80432 t!5208))

(declare-fun b_and!4923 () Bool)

(assert (= b_and!4919 (and (=> t!5208 result!2847) b_and!4923)))

(declare-fun m!81843 () Bool)

(assert (=> b!80432 m!81843))

(assert (=> b!80432 m!81633))

(declare-fun m!81845 () Bool)

(assert (=> b!80432 m!81845))

(declare-fun m!81847 () Bool)

(assert (=> b!80432 m!81847))

(assert (=> b!80432 m!81633))

(declare-fun m!81849 () Bool)

(assert (=> b!80432 m!81849))

(assert (=> b!80432 m!81727))

(declare-fun m!81851 () Bool)

(assert (=> b!80432 m!81851))

(assert (=> b!80432 m!81847))

(assert (=> b!80432 m!81843))

(declare-fun m!81853 () Bool)

(assert (=> b!80432 m!81853))

(declare-fun m!81855 () Bool)

(assert (=> b!80427 m!81855))

(assert (=> b!80431 m!81633))

(assert (=> b!80431 m!81847))

(assert (=> b!80431 m!81633))

(assert (=> b!80431 m!81849))

(assert (=> b!80431 m!81727))

(assert (=> b!80431 m!81847))

(assert (=> b!80431 m!81727))

(declare-fun m!81857 () Bool)

(assert (=> b!80431 m!81857))

(declare-fun m!81859 () Bool)

(assert (=> b!80426 m!81859))

(assert (=> b!80424 m!81727))

(assert (=> b!80424 m!81727))

(declare-fun m!81861 () Bool)

(assert (=> b!80424 m!81861))

(declare-fun m!81863 () Bool)

(assert (=> bm!7397 m!81863))

(declare-fun m!81865 () Bool)

(assert (=> d!19667 m!81865))

(assert (=> d!19667 m!81603))

(assert (=> b!80425 m!81727))

(assert (=> b!80425 m!81727))

(assert (=> b!80425 m!81861))

(assert (=> b!80433 m!81727))

(assert (=> b!80433 m!81727))

(declare-fun m!81867 () Bool)

(assert (=> b!80433 m!81867))

(assert (=> b!80429 m!81863))

(assert (=> b!80264 d!19667))

(declare-fun d!19669 () Bool)

(assert (=> d!19669 (= (map!1183 newMap!16) (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun bs!3399 () Bool)

(assert (= bs!3399 d!19669))

(declare-fun m!81869 () Bool)

(assert (=> bs!3399 m!81869))

(assert (=> b!80275 d!19669))

(declare-fun b!80478 () Bool)

(declare-fun e!52593 () ListLongMap!1471)

(declare-fun call!7417 () ListLongMap!1471)

(assert (=> b!80478 (= e!52593 (+!111 call!7417 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!80479 () Bool)

(declare-fun e!52595 () Bool)

(declare-fun lt!37385 () ListLongMap!1471)

(assert (=> b!80479 (= e!52595 (= (apply!80 lt!37385 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun b!80480 () Bool)

(declare-fun e!52592 () ListLongMap!1471)

(assert (=> b!80480 (= e!52593 e!52592)))

(declare-fun c!12579 () Bool)

(assert (=> b!80480 (= c!12579 (and (not (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7412 () Bool)

(declare-fun call!7420 () ListLongMap!1471)

(assert (=> bm!7412 (= call!7420 call!7417)))

(declare-fun b!80481 () Bool)

(declare-fun e!52584 () Bool)

(declare-fun e!52587 () Bool)

(assert (=> b!80481 (= e!52584 e!52587)))

(declare-fun res!41924 () Bool)

(assert (=> b!80481 (=> (not res!41924) (not e!52587))))

(assert (=> b!80481 (= res!41924 (contains!750 lt!37385 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80481 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun d!19671 () Bool)

(declare-fun e!52596 () Bool)

(assert (=> d!19671 e!52596))

(declare-fun res!41928 () Bool)

(assert (=> d!19671 (=> (not res!41928) (not e!52596))))

(assert (=> d!19671 (= res!41928 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun lt!37383 () ListLongMap!1471)

(assert (=> d!19671 (= lt!37385 lt!37383)))

(declare-fun lt!37386 () Unit!2350)

(declare-fun e!52586 () Unit!2350)

(assert (=> d!19671 (= lt!37386 e!52586)))

(declare-fun c!12577 () Bool)

(declare-fun e!52585 () Bool)

(assert (=> d!19671 (= c!12577 e!52585)))

(declare-fun res!41930 () Bool)

(assert (=> d!19671 (=> (not res!41930) (not e!52585))))

(assert (=> d!19671 (= res!41930 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> d!19671 (= lt!37383 e!52593)))

(declare-fun c!12578 () Bool)

(assert (=> d!19671 (= c!12578 (and (not (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19671 (validMask!0 (mask!6299 (v!2610 (underlying!284 thiss!992))))))

(assert (=> d!19671 (= (getCurrentListMap!437 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))) lt!37385)))

(declare-fun bm!7413 () Bool)

(declare-fun call!7416 () Bool)

(assert (=> bm!7413 (= call!7416 (contains!750 lt!37385 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80482 () Bool)

(declare-fun e!52590 () Bool)

(assert (=> b!80482 (= e!52590 (not call!7416))))

(declare-fun b!80483 () Bool)

(assert (=> b!80483 (= e!52592 call!7420)))

(declare-fun b!80484 () Bool)

(assert (=> b!80484 (= e!52596 e!52590)))

(declare-fun c!12581 () Bool)

(assert (=> b!80484 (= c!12581 (not (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80485 () Bool)

(declare-fun e!52588 () Bool)

(declare-fun e!52594 () Bool)

(assert (=> b!80485 (= e!52588 e!52594)))

(declare-fun res!41927 () Bool)

(declare-fun call!7421 () Bool)

(assert (=> b!80485 (= res!41927 call!7421)))

(assert (=> b!80485 (=> (not res!41927) (not e!52594))))

(declare-fun b!80486 () Bool)

(declare-fun res!41929 () Bool)

(assert (=> b!80486 (=> (not res!41929) (not e!52596))))

(assert (=> b!80486 (= res!41929 e!52588)))

(declare-fun c!12580 () Bool)

(assert (=> b!80486 (= c!12580 (not (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80487 () Bool)

(declare-fun e!52589 () Bool)

(assert (=> b!80487 (= e!52589 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!7414 () Bool)

(declare-fun call!7415 () ListLongMap!1471)

(declare-fun call!7419 () ListLongMap!1471)

(assert (=> bm!7414 (= call!7415 call!7419)))

(declare-fun bm!7415 () Bool)

(declare-fun call!7418 () ListLongMap!1471)

(assert (=> bm!7415 (= call!7419 call!7418)))

(declare-fun b!80488 () Bool)

(declare-fun lt!37387 () Unit!2350)

(assert (=> b!80488 (= e!52586 lt!37387)))

(declare-fun lt!37384 () ListLongMap!1471)

(assert (=> b!80488 (= lt!37384 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun lt!37372 () (_ BitVec 64))

(assert (=> b!80488 (= lt!37372 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37392 () (_ BitVec 64))

(assert (=> b!80488 (= lt!37392 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37373 () Unit!2350)

(declare-fun addStillContains!56 (ListLongMap!1471 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2350)

(assert (=> b!80488 (= lt!37373 (addStillContains!56 lt!37384 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37392))))

(assert (=> b!80488 (contains!750 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37392)))

(declare-fun lt!37390 () Unit!2350)

(assert (=> b!80488 (= lt!37390 lt!37373)))

(declare-fun lt!37379 () ListLongMap!1471)

(assert (=> b!80488 (= lt!37379 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun lt!37388 () (_ BitVec 64))

(assert (=> b!80488 (= lt!37388 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37375 () (_ BitVec 64))

(assert (=> b!80488 (= lt!37375 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37393 () Unit!2350)

(declare-fun addApplyDifferent!56 (ListLongMap!1471 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2350)

(assert (=> b!80488 (= lt!37393 (addApplyDifferent!56 lt!37379 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37375))))

(assert (=> b!80488 (= (apply!80 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37375) (apply!80 lt!37379 lt!37375))))

(declare-fun lt!37376 () Unit!2350)

(assert (=> b!80488 (= lt!37376 lt!37393)))

(declare-fun lt!37382 () ListLongMap!1471)

(assert (=> b!80488 (= lt!37382 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun lt!37378 () (_ BitVec 64))

(assert (=> b!80488 (= lt!37378 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37380 () (_ BitVec 64))

(assert (=> b!80488 (= lt!37380 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!37391 () Unit!2350)

(assert (=> b!80488 (= lt!37391 (addApplyDifferent!56 lt!37382 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37380))))

(assert (=> b!80488 (= (apply!80 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37380) (apply!80 lt!37382 lt!37380))))

(declare-fun lt!37377 () Unit!2350)

(assert (=> b!80488 (= lt!37377 lt!37391)))

(declare-fun lt!37381 () ListLongMap!1471)

(assert (=> b!80488 (= lt!37381 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun lt!37389 () (_ BitVec 64))

(assert (=> b!80488 (= lt!37389 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37374 () (_ BitVec 64))

(assert (=> b!80488 (= lt!37374 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!80488 (= lt!37387 (addApplyDifferent!56 lt!37381 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37374))))

(assert (=> b!80488 (= (apply!80 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37374) (apply!80 lt!37381 lt!37374))))

(declare-fun b!80489 () Bool)

(declare-fun Unit!2357 () Unit!2350)

(assert (=> b!80489 (= e!52586 Unit!2357)))

(declare-fun b!80490 () Bool)

(assert (=> b!80490 (= e!52590 e!52595)))

(declare-fun res!41925 () Bool)

(assert (=> b!80490 (= res!41925 call!7416)))

(assert (=> b!80490 (=> (not res!41925) (not e!52595))))

(declare-fun b!80491 () Bool)

(declare-fun c!12576 () Bool)

(assert (=> b!80491 (= c!12576 (and (not (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52591 () ListLongMap!1471)

(assert (=> b!80491 (= e!52592 e!52591)))

(declare-fun b!80492 () Bool)

(assert (=> b!80492 (= e!52585 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!80493 () Bool)

(assert (=> b!80493 (= e!52591 call!7415)))

(declare-fun bm!7416 () Bool)

(assert (=> bm!7416 (= call!7421 (contains!750 lt!37385 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80494 () Bool)

(assert (=> b!80494 (= e!52588 (not call!7421))))

(declare-fun b!80495 () Bool)

(assert (=> b!80495 (= e!52594 (= (apply!80 lt!37385 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun bm!7417 () Bool)

(assert (=> bm!7417 (= call!7418 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun b!80496 () Bool)

(assert (=> b!80496 (= e!52587 (= (apply!80 lt!37385 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80496 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2143 (_values!2276 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> b!80496 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!80497 () Bool)

(assert (=> b!80497 (= e!52591 call!7420)))

(declare-fun bm!7418 () Bool)

(assert (=> bm!7418 (= call!7417 (+!111 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415)) (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!80498 () Bool)

(declare-fun res!41931 () Bool)

(assert (=> b!80498 (=> (not res!41931) (not e!52596))))

(assert (=> b!80498 (= res!41931 e!52584)))

(declare-fun res!41926 () Bool)

(assert (=> b!80498 (=> res!41926 e!52584)))

(assert (=> b!80498 (= res!41926 (not e!52589))))

(declare-fun res!41932 () Bool)

(assert (=> b!80498 (=> (not res!41932) (not e!52589))))

(assert (=> b!80498 (= res!41932 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19671 c!12578) b!80478))

(assert (= (and d!19671 (not c!12578)) b!80480))

(assert (= (and b!80480 c!12579) b!80483))

(assert (= (and b!80480 (not c!12579)) b!80491))

(assert (= (and b!80491 c!12576) b!80497))

(assert (= (and b!80491 (not c!12576)) b!80493))

(assert (= (or b!80497 b!80493) bm!7414))

(assert (= (or b!80483 bm!7414) bm!7415))

(assert (= (or b!80483 b!80497) bm!7412))

(assert (= (or b!80478 bm!7415) bm!7417))

(assert (= (or b!80478 bm!7412) bm!7418))

(assert (= (and d!19671 res!41930) b!80492))

(assert (= (and d!19671 c!12577) b!80488))

(assert (= (and d!19671 (not c!12577)) b!80489))

(assert (= (and d!19671 res!41928) b!80498))

(assert (= (and b!80498 res!41932) b!80487))

(assert (= (and b!80498 (not res!41926)) b!80481))

(assert (= (and b!80481 res!41924) b!80496))

(assert (= (and b!80498 res!41931) b!80486))

(assert (= (and b!80486 c!12580) b!80485))

(assert (= (and b!80486 (not c!12580)) b!80494))

(assert (= (and b!80485 res!41927) b!80495))

(assert (= (or b!80485 b!80494) bm!7416))

(assert (= (and b!80486 res!41929) b!80484))

(assert (= (and b!80484 c!12581) b!80490))

(assert (= (and b!80484 (not c!12581)) b!80482))

(assert (= (and b!80490 res!41925) b!80479))

(assert (= (or b!80490 b!80482) bm!7413))

(declare-fun b_lambda!3603 () Bool)

(assert (=> (not b_lambda!3603) (not b!80496)))

(assert (=> b!80496 t!5206))

(declare-fun b_and!4925 () Bool)

(assert (= b_and!4921 (and (=> t!5206 result!2843) b_and!4925)))

(assert (=> b!80496 t!5208))

(declare-fun b_and!4927 () Bool)

(assert (= b_and!4923 (and (=> t!5208 result!2847) b_and!4927)))

(assert (=> bm!7417 m!81599))

(declare-fun m!81871 () Bool)

(assert (=> bm!7413 m!81871))

(assert (=> b!80496 m!81727))

(assert (=> b!80496 m!81727))

(declare-fun m!81873 () Bool)

(assert (=> b!80496 m!81873))

(assert (=> b!80496 m!81847))

(assert (=> b!80496 m!81633))

(assert (=> b!80496 m!81847))

(assert (=> b!80496 m!81633))

(assert (=> b!80496 m!81849))

(assert (=> b!80487 m!81727))

(assert (=> b!80487 m!81727))

(assert (=> b!80487 m!81861))

(declare-fun m!81875 () Bool)

(assert (=> b!80478 m!81875))

(assert (=> b!80481 m!81727))

(assert (=> b!80481 m!81727))

(declare-fun m!81877 () Bool)

(assert (=> b!80481 m!81877))

(declare-fun m!81879 () Bool)

(assert (=> bm!7418 m!81879))

(assert (=> d!19671 m!81603))

(declare-fun m!81881 () Bool)

(assert (=> bm!7416 m!81881))

(declare-fun m!81883 () Bool)

(assert (=> b!80488 m!81883))

(declare-fun m!81885 () Bool)

(assert (=> b!80488 m!81885))

(declare-fun m!81887 () Bool)

(assert (=> b!80488 m!81887))

(assert (=> b!80488 m!81727))

(declare-fun m!81889 () Bool)

(assert (=> b!80488 m!81889))

(declare-fun m!81891 () Bool)

(assert (=> b!80488 m!81891))

(declare-fun m!81893 () Bool)

(assert (=> b!80488 m!81893))

(declare-fun m!81895 () Bool)

(assert (=> b!80488 m!81895))

(declare-fun m!81897 () Bool)

(assert (=> b!80488 m!81897))

(assert (=> b!80488 m!81885))

(assert (=> b!80488 m!81599))

(declare-fun m!81899 () Bool)

(assert (=> b!80488 m!81899))

(declare-fun m!81901 () Bool)

(assert (=> b!80488 m!81901))

(declare-fun m!81903 () Bool)

(assert (=> b!80488 m!81903))

(declare-fun m!81905 () Bool)

(assert (=> b!80488 m!81905))

(assert (=> b!80488 m!81893))

(declare-fun m!81907 () Bool)

(assert (=> b!80488 m!81907))

(declare-fun m!81909 () Bool)

(assert (=> b!80488 m!81909))

(assert (=> b!80488 m!81889))

(declare-fun m!81911 () Bool)

(assert (=> b!80488 m!81911))

(assert (=> b!80488 m!81899))

(declare-fun m!81913 () Bool)

(assert (=> b!80495 m!81913))

(declare-fun m!81915 () Bool)

(assert (=> b!80479 m!81915))

(assert (=> b!80492 m!81727))

(assert (=> b!80492 m!81727))

(assert (=> b!80492 m!81861))

(assert (=> b!80275 d!19671))

(declare-fun d!19673 () Bool)

(declare-fun e!52601 () Bool)

(assert (=> d!19673 e!52601))

(declare-fun res!41935 () Bool)

(assert (=> d!19673 (=> res!41935 e!52601)))

(declare-fun lt!37404 () Bool)

(assert (=> d!19673 (= res!41935 (not lt!37404))))

(declare-fun lt!37403 () Bool)

(assert (=> d!19673 (= lt!37404 lt!37403)))

(declare-fun lt!37402 () Unit!2350)

(declare-fun e!52602 () Unit!2350)

(assert (=> d!19673 (= lt!37402 e!52602)))

(declare-fun c!12584 () Bool)

(assert (=> d!19673 (= c!12584 lt!37403)))

(declare-fun containsKey!141 (List!1538 (_ BitVec 64)) Bool)

(assert (=> d!19673 (= lt!37403 (containsKey!141 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!19673 (= (contains!750 lt!37199 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) lt!37404)))

(declare-fun b!80505 () Bool)

(declare-fun lt!37405 () Unit!2350)

(assert (=> b!80505 (= e!52602 lt!37405)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!90 (List!1538 (_ BitVec 64)) Unit!2350)

(assert (=> b!80505 (= lt!37405 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun isDefined!91 (Option!143) Bool)

(assert (=> b!80505 (isDefined!91 (getValueByKey!137 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!80506 () Bool)

(declare-fun Unit!2358 () Unit!2350)

(assert (=> b!80506 (= e!52602 Unit!2358)))

(declare-fun b!80507 () Bool)

(assert (=> b!80507 (= e!52601 (isDefined!91 (getValueByKey!137 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (= (and d!19673 c!12584) b!80505))

(assert (= (and d!19673 (not c!12584)) b!80506))

(assert (= (and d!19673 (not res!41935)) b!80507))

(assert (=> d!19673 m!81585))

(declare-fun m!81917 () Bool)

(assert (=> d!19673 m!81917))

(assert (=> b!80505 m!81585))

(declare-fun m!81919 () Bool)

(assert (=> b!80505 m!81919))

(assert (=> b!80505 m!81585))

(declare-fun m!81921 () Bool)

(assert (=> b!80505 m!81921))

(assert (=> b!80505 m!81921))

(declare-fun m!81923 () Bool)

(assert (=> b!80505 m!81923))

(assert (=> b!80507 m!81585))

(assert (=> b!80507 m!81921))

(assert (=> b!80507 m!81921))

(assert (=> b!80507 m!81923))

(assert (=> b!80258 d!19673))

(declare-fun b!80584 () Bool)

(declare-fun res!41964 () Bool)

(declare-datatypes ((SeekEntryResult!251 0))(
  ( (MissingZero!251 (index!3139 (_ BitVec 32))) (Found!251 (index!3140 (_ BitVec 32))) (Intermediate!251 (undefined!1063 Bool) (index!3141 (_ BitVec 32)) (x!11702 (_ BitVec 32))) (Undefined!251) (MissingVacant!251 (index!3142 (_ BitVec 32))) )
))
(declare-fun lt!37467 () SeekEntryResult!251)

(assert (=> b!80584 (= res!41964 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3142 lt!37467)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52644 () Bool)

(assert (=> b!80584 (=> (not res!41964) (not e!52644))))

(declare-fun c!12617 () Bool)

(declare-fun call!7476 () ListLongMap!1471)

(declare-fun call!7493 () ListLongMap!1471)

(declare-fun call!7488 () ListLongMap!1471)

(declare-fun c!12610 () Bool)

(declare-fun bm!7467 () Bool)

(assert (=> bm!7467 (= call!7493 (+!111 (ite c!12617 call!7476 call!7488) (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!80585 () Bool)

(declare-fun e!52656 () Bool)

(declare-fun call!7485 () Bool)

(assert (=> b!80585 (= e!52656 (not call!7485))))

(declare-fun bm!7468 () Bool)

(declare-fun call!7471 () Bool)

(assert (=> bm!7468 (= call!7485 call!7471)))

(declare-fun call!7470 () Unit!2350)

(declare-fun bm!7470 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) Int) Unit!2350)

(assert (=> bm!7470 (= call!7470 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(declare-fun b!80586 () Bool)

(declare-fun e!52647 () tuple2!2200)

(declare-fun e!52653 () tuple2!2200)

(assert (=> b!80586 (= e!52647 e!52653)))

(assert (=> b!80586 (= c!12610 (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80587 () Bool)

(declare-fun lt!37460 () Unit!2350)

(declare-fun lt!37469 () Unit!2350)

(assert (=> b!80587 (= lt!37460 lt!37469)))

(declare-fun call!7486 () ListLongMap!1471)

(declare-fun call!7484 () ListLongMap!1471)

(assert (=> b!80587 (= call!7486 call!7484)))

(declare-fun lt!37461 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 V!3003 Int) Unit!2350)

(assert (=> b!80587 (= lt!37469 (lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37461 (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) lt!37195 (defaultEntry!2293 newMap!16)))))

(assert (=> b!80587 (= lt!37461 (bvor (extraKeys!2140 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!80587 (= e!52653 (tuple2!2201 true (LongMapFixedSize!739 (defaultEntry!2293 newMap!16) (mask!6299 newMap!16) (bvor (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) (zeroValue!2189 newMap!16) lt!37195 (_size!418 newMap!16) (_keys!3957 newMap!16) (_values!2276 newMap!16) (_vacant!418 newMap!16))))))

(declare-fun bm!7471 () Bool)

(declare-fun call!7478 () ListLongMap!1471)

(declare-fun call!7490 () ListLongMap!1471)

(assert (=> bm!7471 (= call!7478 call!7490)))

(declare-fun b!80588 () Bool)

(declare-fun e!52649 () Unit!2350)

(declare-fun lt!37465 () Unit!2350)

(assert (=> b!80588 (= e!52649 lt!37465)))

(assert (=> b!80588 (= lt!37465 call!7470)))

(declare-fun lt!37472 () SeekEntryResult!251)

(declare-fun call!7482 () SeekEntryResult!251)

(assert (=> b!80588 (= lt!37472 call!7482)))

(declare-fun c!12609 () Bool)

(assert (=> b!80588 (= c!12609 ((_ is MissingZero!251) lt!37472))))

(declare-fun e!52660 () Bool)

(assert (=> b!80588 e!52660))

(declare-fun b!80589 () Bool)

(declare-fun e!52650 () tuple2!2200)

(declare-fun lt!37483 () tuple2!2200)

(assert (=> b!80589 (= e!52650 (tuple2!2201 (_1!1110 lt!37483) (_2!1110 lt!37483)))))

(declare-fun call!7483 () tuple2!2200)

(assert (=> b!80589 (= lt!37483 call!7483)))

(declare-fun bm!7472 () Bool)

(declare-fun call!7481 () Bool)

(declare-fun call!7472 () Bool)

(assert (=> bm!7472 (= call!7481 call!7472)))

(declare-fun b!80590 () Bool)

(declare-fun c!12620 () Bool)

(assert (=> b!80590 (= c!12620 ((_ is MissingVacant!251) lt!37472))))

(declare-fun e!52643 () Bool)

(assert (=> b!80590 (= e!52660 e!52643)))

(declare-fun bm!7473 () Bool)

(declare-fun call!7487 () SeekEntryResult!251)

(assert (=> bm!7473 (= call!7482 call!7487)))

(declare-fun b!80591 () Bool)

(declare-fun Unit!2359 () Unit!2350)

(assert (=> b!80591 (= e!52649 Unit!2359)))

(declare-fun lt!37485 () Unit!2350)

(declare-fun call!7475 () Unit!2350)

(assert (=> b!80591 (= lt!37485 call!7475)))

(declare-fun lt!37482 () SeekEntryResult!251)

(assert (=> b!80591 (= lt!37482 call!7482)))

(declare-fun res!41973 () Bool)

(assert (=> b!80591 (= res!41973 ((_ is Found!251) lt!37482))))

(declare-fun e!52654 () Bool)

(assert (=> b!80591 (=> (not res!41973) (not e!52654))))

(assert (=> b!80591 e!52654))

(declare-fun lt!37474 () Unit!2350)

(assert (=> b!80591 (= lt!37474 lt!37485)))

(assert (=> b!80591 false))

(declare-fun b!80592 () Bool)

(declare-fun e!52651 () Bool)

(declare-fun lt!37471 () SeekEntryResult!251)

(assert (=> b!80592 (= e!52651 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37471)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!80593 () Bool)

(declare-fun res!41968 () Bool)

(assert (=> b!80593 (= res!41968 call!7481)))

(assert (=> b!80593 (=> (not res!41968) (not e!52654))))

(declare-fun b!80594 () Bool)

(declare-fun e!52646 () Unit!2350)

(declare-fun lt!37464 () Unit!2350)

(assert (=> b!80594 (= e!52646 lt!37464)))

(assert (=> b!80594 (= lt!37464 call!7475)))

(declare-fun call!7477 () SeekEntryResult!251)

(assert (=> b!80594 (= lt!37471 call!7477)))

(declare-fun res!41972 () Bool)

(assert (=> b!80594 (= res!41972 ((_ is Found!251) lt!37471))))

(assert (=> b!80594 (=> (not res!41972) (not e!52651))))

(assert (=> b!80594 e!52651))

(declare-fun bm!7474 () Bool)

(assert (=> bm!7474 (= call!7476 call!7488)))

(declare-fun e!52657 () Bool)

(declare-fun call!7492 () ListLongMap!1471)

(declare-fun call!7473 () ListLongMap!1471)

(declare-fun b!80595 () Bool)

(assert (=> b!80595 (= e!52657 (= call!7473 (+!111 call!7492 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun bm!7475 () Bool)

(assert (=> bm!7475 (= call!7488 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!80596 () Bool)

(declare-fun res!41971 () Bool)

(declare-fun call!7489 () Bool)

(assert (=> b!80596 (= res!41971 call!7489)))

(assert (=> b!80596 (=> (not res!41971) (not e!52651))))

(declare-fun b!80597 () Bool)

(declare-fun c!12611 () Bool)

(assert (=> b!80597 (= c!12611 ((_ is MissingVacant!251) lt!37467))))

(declare-fun e!52652 () Bool)

(declare-fun e!52655 () Bool)

(assert (=> b!80597 (= e!52652 e!52655)))

(declare-fun b!80598 () Bool)

(declare-fun res!41970 () Bool)

(assert (=> b!80598 (= res!41970 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3142 lt!37472)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52645 () Bool)

(assert (=> b!80598 (=> (not res!41970) (not e!52645))))

(declare-fun b!80599 () Bool)

(declare-fun lt!37478 () Unit!2350)

(assert (=> b!80599 (= lt!37478 e!52649)))

(declare-fun c!12614 () Bool)

(declare-fun call!7474 () Bool)

(assert (=> b!80599 (= c!12614 call!7474)))

(declare-fun e!52661 () tuple2!2200)

(assert (=> b!80599 (= e!52661 (tuple2!2201 false newMap!16))))

(declare-fun b!80600 () Bool)

(declare-fun lt!37486 () tuple2!2200)

(assert (=> b!80600 (= lt!37486 call!7483)))

(declare-fun e!52659 () tuple2!2200)

(assert (=> b!80600 (= e!52659 (tuple2!2201 (_1!1110 lt!37486) (_2!1110 lt!37486)))))

(declare-fun bm!7476 () Bool)

(declare-fun call!7480 () Bool)

(assert (=> bm!7476 (= call!7480 call!7481)))

(declare-fun b!80601 () Bool)

(declare-fun e!52648 () Bool)

(declare-fun call!7491 () Bool)

(assert (=> b!80601 (= e!52648 (not call!7491))))

(declare-fun bm!7469 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) Int) Unit!2350)

(assert (=> bm!7469 (= call!7475 (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(declare-fun d!19675 () Bool)

(declare-fun e!52658 () Bool)

(assert (=> d!19675 e!52658))

(declare-fun res!41969 () Bool)

(assert (=> d!19675 (=> (not res!41969) (not e!52658))))

(declare-fun lt!37475 () tuple2!2200)

(assert (=> d!19675 (= res!41969 (valid!316 (_2!1110 lt!37475)))))

(assert (=> d!19675 (= lt!37475 e!52647)))

(assert (=> d!19675 (= c!12617 (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvneg (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (=> d!19675 (valid!316 newMap!16)))

(assert (=> d!19675 (= (update!114 newMap!16 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195) lt!37475)))

(declare-fun bm!7477 () Bool)

(assert (=> bm!7477 (= call!7473 (map!1183 (_2!1110 lt!37475)))))

(declare-fun bm!7478 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3988 (_ BitVec 32)) SeekEntryResult!251)

(assert (=> bm!7478 (= call!7487 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun bm!7479 () Bool)

(assert (=> bm!7479 (= call!7477 call!7487)))

(declare-fun c!12612 () Bool)

(declare-fun lt!37466 () array!3990)

(declare-fun bm!7480 () Bool)

(declare-fun lt!37479 () (_ BitVec 32))

(assert (=> bm!7480 (= call!7490 (getCurrentListMap!437 (_keys!3957 newMap!16) (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466) (mask!6299 newMap!16) (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!80602 () Bool)

(assert (=> b!80602 (= e!52655 ((_ is Undefined!251) lt!37467))))

(declare-fun b!80603 () Bool)

(assert (=> b!80603 (= e!52647 e!52661)))

(declare-fun lt!37470 () SeekEntryResult!251)

(assert (=> b!80603 (= lt!37470 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (=> b!80603 (= c!12612 ((_ is Undefined!251) lt!37470))))

(declare-fun bm!7481 () Bool)

(assert (=> bm!7481 (= call!7489 call!7472)))

(declare-fun b!80604 () Bool)

(declare-fun res!41976 () Bool)

(assert (=> b!80604 (=> (not res!41976) (not e!52648))))

(assert (=> b!80604 (= res!41976 call!7480)))

(assert (=> b!80604 (= e!52660 e!52648)))

(declare-fun bm!7482 () Bool)

(assert (=> bm!7482 (= call!7471 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!80605 () Bool)

(assert (=> b!80605 (= e!52643 e!52645)))

(declare-fun res!41967 () Bool)

(assert (=> b!80605 (= res!41967 call!7480)))

(assert (=> b!80605 (=> (not res!41967) (not e!52645))))

(declare-fun bm!7483 () Bool)

(assert (=> bm!7483 (= call!7492 (map!1183 newMap!16))))

(declare-fun b!80606 () Bool)

(assert (=> b!80606 (= e!52644 (not call!7485))))

(declare-fun b!80607 () Bool)

(assert (=> b!80607 (= e!52650 e!52659)))

(declare-fun c!12618 () Bool)

(assert (=> b!80607 (= c!12618 ((_ is MissingZero!251) lt!37470))))

(declare-fun b!80608 () Bool)

(declare-fun res!41966 () Bool)

(assert (=> b!80608 (=> (not res!41966) (not e!52656))))

(declare-fun call!7479 () Bool)

(assert (=> b!80608 (= res!41966 call!7479)))

(assert (=> b!80608 (= e!52652 e!52656)))

(declare-fun bm!7484 () Bool)

(assert (=> bm!7484 (= call!7491 call!7471)))

(declare-fun bm!7485 () Bool)

(assert (=> bm!7485 (= call!7479 call!7489)))

(declare-fun b!80609 () Bool)

(declare-fun res!41974 () Bool)

(assert (=> b!80609 (=> (not res!41974) (not e!52656))))

(assert (=> b!80609 (= res!41974 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3139 lt!37467)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80610 () Bool)

(declare-fun e!52662 () Bool)

(assert (=> b!80610 (= e!52662 e!52657)))

(declare-fun res!41977 () Bool)

(assert (=> b!80610 (= res!41977 (contains!750 call!7473 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> b!80610 (=> (not res!41977) (not e!52657))))

(declare-fun b!80611 () Bool)

(assert (=> b!80611 (= e!52655 e!52644)))

(declare-fun res!41965 () Bool)

(assert (=> b!80611 (= res!41965 call!7479)))

(assert (=> b!80611 (=> (not res!41965) (not e!52644))))

(declare-fun c!12615 () Bool)

(declare-fun bm!7486 () Bool)

(declare-fun updateHelperNewKey!29 (LongMapFixedSize!738 (_ BitVec 64) V!3003 (_ BitVec 32)) tuple2!2200)

(assert (=> bm!7486 (= call!7483 (updateHelperNewKey!29 newMap!16 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470))))))

(declare-fun b!80612 () Bool)

(declare-fun res!41975 () Bool)

(assert (=> b!80612 (=> (not res!41975) (not e!52648))))

(assert (=> b!80612 (= res!41975 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3139 lt!37472)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7487 () Bool)

(assert (=> bm!7487 (= call!7484 call!7490)))

(declare-fun b!80613 () Bool)

(assert (=> b!80613 (= e!52643 ((_ is Undefined!251) lt!37472))))

(declare-fun bm!7488 () Bool)

(assert (=> bm!7488 (= call!7486 call!7493)))

(declare-fun b!80614 () Bool)

(assert (=> b!80614 (= e!52662 (= call!7473 call!7492))))

(declare-fun b!80615 () Bool)

(assert (=> b!80615 (= e!52654 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37482)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!80616 () Bool)

(assert (=> b!80616 (= e!52645 (not call!7491))))

(declare-fun b!80617 () Bool)

(declare-fun Unit!2360 () Unit!2350)

(assert (=> b!80617 (= e!52646 Unit!2360)))

(declare-fun lt!37463 () Unit!2350)

(assert (=> b!80617 (= lt!37463 call!7470)))

(assert (=> b!80617 (= lt!37467 call!7477)))

(declare-fun c!12616 () Bool)

(assert (=> b!80617 (= c!12616 ((_ is MissingZero!251) lt!37467))))

(assert (=> b!80617 e!52652))

(declare-fun lt!37480 () Unit!2350)

(assert (=> b!80617 (= lt!37480 lt!37463)))

(assert (=> b!80617 false))

(declare-fun b!80618 () Bool)

(declare-fun lt!37477 () Unit!2350)

(declare-fun lt!37473 () Unit!2350)

(assert (=> b!80618 (= lt!37477 lt!37473)))

(assert (=> b!80618 call!7474))

(declare-fun lemmaValidKeyInArrayIsInListMap!87 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) Int) Unit!2350)

(assert (=> b!80618 (= lt!37473 (lemmaValidKeyInArrayIsInListMap!87 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3140 lt!37470) (defaultEntry!2293 newMap!16)))))

(assert (=> b!80618 (= lt!37466 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))))))

(declare-fun lt!37481 () Unit!2350)

(declare-fun lt!37476 () Unit!2350)

(assert (=> b!80618 (= lt!37481 lt!37476)))

(assert (=> b!80618 (= call!7493 (getCurrentListMap!437 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) (_ BitVec 64) V!3003 Int) Unit!2350)

(assert (=> b!80618 (= lt!37476 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3140 lt!37470) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37468 () Unit!2350)

(assert (=> b!80618 (= lt!37468 e!52646)))

(declare-fun c!12613 () Bool)

(assert (=> b!80618 (= c!12613 (contains!750 call!7488 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> b!80618 (= e!52659 (tuple2!2201 true (LongMapFixedSize!739 (defaultEntry!2293 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (_size!418 newMap!16) (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (_vacant!418 newMap!16))))))

(declare-fun b!80619 () Bool)

(assert (=> b!80619 (= e!52658 e!52662)))

(declare-fun c!12619 () Bool)

(assert (=> b!80619 (= c!12619 (_1!1110 lt!37475))))

(declare-fun b!80620 () Bool)

(declare-fun lt!37462 () Unit!2350)

(declare-fun lt!37484 () Unit!2350)

(assert (=> b!80620 (= lt!37462 lt!37484)))

(assert (=> b!80620 (= call!7486 call!7484)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!29 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 V!3003 Int) Unit!2350)

(assert (=> b!80620 (= lt!37484 (lemmaChangeZeroKeyThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37479 (zeroValue!2189 newMap!16) lt!37195 (minValue!2189 newMap!16) (defaultEntry!2293 newMap!16)))))

(assert (=> b!80620 (= lt!37479 (bvor (extraKeys!2140 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!80620 (= e!52653 (tuple2!2201 true (LongMapFixedSize!739 (defaultEntry!2293 newMap!16) (mask!6299 newMap!16) (bvor (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) lt!37195 (minValue!2189 newMap!16) (_size!418 newMap!16) (_keys!3957 newMap!16) (_values!2276 newMap!16) (_vacant!418 newMap!16))))))

(declare-fun b!80621 () Bool)

(assert (=> b!80621 (= c!12615 ((_ is MissingVacant!251) lt!37470))))

(assert (=> b!80621 (= e!52661 e!52650)))

(declare-fun bm!7489 () Bool)

(assert (=> bm!7489 (= call!7474 (contains!750 call!7478 (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))

(declare-fun bm!7490 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!7490 (= call!7472 (inRange!0 (ite c!12612 (ite c!12614 (index!3140 lt!37482) (ite c!12609 (index!3139 lt!37472) (index!3142 lt!37472))) (ite c!12613 (index!3140 lt!37471) (ite c!12616 (index!3139 lt!37467) (index!3142 lt!37467)))) (mask!6299 newMap!16)))))

(assert (= (and d!19675 c!12617) b!80586))

(assert (= (and d!19675 (not c!12617)) b!80603))

(assert (= (and b!80586 c!12610) b!80620))

(assert (= (and b!80586 (not c!12610)) b!80587))

(assert (= (or b!80620 b!80587) bm!7474))

(assert (= (or b!80620 b!80587) bm!7487))

(assert (= (or b!80620 b!80587) bm!7488))

(assert (= (and b!80603 c!12612) b!80599))

(assert (= (and b!80603 (not c!12612)) b!80621))

(assert (= (and b!80599 c!12614) b!80591))

(assert (= (and b!80599 (not c!12614)) b!80588))

(assert (= (and b!80591 res!41973) b!80593))

(assert (= (and b!80593 res!41968) b!80615))

(assert (= (and b!80588 c!12609) b!80604))

(assert (= (and b!80588 (not c!12609)) b!80590))

(assert (= (and b!80604 res!41976) b!80612))

(assert (= (and b!80612 res!41975) b!80601))

(assert (= (and b!80590 c!12620) b!80605))

(assert (= (and b!80590 (not c!12620)) b!80613))

(assert (= (and b!80605 res!41967) b!80598))

(assert (= (and b!80598 res!41970) b!80616))

(assert (= (or b!80604 b!80605) bm!7476))

(assert (= (or b!80601 b!80616) bm!7484))

(assert (= (or b!80593 bm!7476) bm!7472))

(assert (= (or b!80591 b!80588) bm!7473))

(assert (= (and b!80621 c!12615) b!80589))

(assert (= (and b!80621 (not c!12615)) b!80607))

(assert (= (and b!80607 c!12618) b!80600))

(assert (= (and b!80607 (not c!12618)) b!80618))

(assert (= (and b!80618 c!12613) b!80594))

(assert (= (and b!80618 (not c!12613)) b!80617))

(assert (= (and b!80594 res!41972) b!80596))

(assert (= (and b!80596 res!41971) b!80592))

(assert (= (and b!80617 c!12616) b!80608))

(assert (= (and b!80617 (not c!12616)) b!80597))

(assert (= (and b!80608 res!41966) b!80609))

(assert (= (and b!80609 res!41974) b!80585))

(assert (= (and b!80597 c!12611) b!80611))

(assert (= (and b!80597 (not c!12611)) b!80602))

(assert (= (and b!80611 res!41965) b!80584))

(assert (= (and b!80584 res!41964) b!80606))

(assert (= (or b!80608 b!80611) bm!7485))

(assert (= (or b!80585 b!80606) bm!7468))

(assert (= (or b!80596 bm!7485) bm!7481))

(assert (= (or b!80594 b!80617) bm!7479))

(assert (= (or b!80589 b!80600) bm!7486))

(assert (= (or bm!7473 bm!7479) bm!7478))

(assert (= (or b!80588 b!80617) bm!7470))

(assert (= (or bm!7484 bm!7468) bm!7482))

(assert (= (or bm!7472 bm!7481) bm!7490))

(assert (= (or b!80599 b!80618) bm!7471))

(assert (= (or b!80591 b!80594) bm!7469))

(assert (= (or b!80599 b!80618) bm!7489))

(assert (= (or bm!7487 bm!7471) bm!7480))

(assert (= (or bm!7474 b!80618) bm!7475))

(assert (= (or bm!7488 b!80618) bm!7467))

(assert (= (and d!19675 res!41969) b!80619))

(assert (= (and b!80619 c!12619) b!80610))

(assert (= (and b!80619 (not c!12619)) b!80614))

(assert (= (and b!80610 res!41977) b!80595))

(assert (= (or b!80595 b!80614) bm!7483))

(assert (= (or b!80610 b!80595 b!80614) bm!7477))

(declare-fun m!81925 () Bool)

(assert (=> b!80609 m!81925))

(assert (=> bm!7486 m!81585))

(declare-fun m!81927 () Bool)

(assert (=> bm!7486 m!81927))

(declare-fun m!81929 () Bool)

(assert (=> bm!7489 m!81929))

(declare-fun m!81931 () Bool)

(assert (=> bm!7489 m!81931))

(assert (=> bm!7482 m!81585))

(declare-fun m!81933 () Bool)

(assert (=> bm!7482 m!81933))

(declare-fun m!81935 () Bool)

(assert (=> b!80618 m!81935))

(assert (=> b!80618 m!81585))

(declare-fun m!81937 () Bool)

(assert (=> b!80618 m!81937))

(assert (=> b!80618 m!81585))

(declare-fun m!81939 () Bool)

(assert (=> b!80618 m!81939))

(declare-fun m!81941 () Bool)

(assert (=> b!80618 m!81941))

(declare-fun m!81943 () Bool)

(assert (=> b!80618 m!81943))

(assert (=> b!80603 m!81585))

(declare-fun m!81945 () Bool)

(assert (=> b!80603 m!81945))

(declare-fun m!81947 () Bool)

(assert (=> b!80595 m!81947))

(declare-fun m!81949 () Bool)

(assert (=> bm!7480 m!81949))

(declare-fun m!81951 () Bool)

(assert (=> d!19675 m!81951))

(assert (=> d!19675 m!81581))

(assert (=> b!80610 m!81585))

(declare-fun m!81953 () Bool)

(assert (=> b!80610 m!81953))

(declare-fun m!81955 () Bool)

(assert (=> b!80584 m!81955))

(assert (=> bm!7478 m!81585))

(assert (=> bm!7478 m!81945))

(declare-fun m!81957 () Bool)

(assert (=> bm!7490 m!81957))

(assert (=> bm!7475 m!81869))

(assert (=> bm!7483 m!81607))

(assert (=> bm!7469 m!81585))

(declare-fun m!81959 () Bool)

(assert (=> bm!7469 m!81959))

(declare-fun m!81961 () Bool)

(assert (=> b!80598 m!81961))

(declare-fun m!81963 () Bool)

(assert (=> b!80587 m!81963))

(declare-fun m!81965 () Bool)

(assert (=> bm!7477 m!81965))

(declare-fun m!81967 () Bool)

(assert (=> b!80620 m!81967))

(assert (=> bm!7470 m!81585))

(declare-fun m!81969 () Bool)

(assert (=> bm!7470 m!81969))

(declare-fun m!81971 () Bool)

(assert (=> b!80612 m!81971))

(declare-fun m!81973 () Bool)

(assert (=> b!80615 m!81973))

(declare-fun m!81975 () Bool)

(assert (=> bm!7467 m!81975))

(declare-fun m!81977 () Bool)

(assert (=> b!80592 m!81977))

(assert (=> b!80258 d!19675))

(declare-fun d!19677 () Bool)

(assert (=> d!19677 (= (array_inv!1133 (_keys!3957 newMap!16)) (bvsge (size!2142 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80270 d!19677))

(declare-fun d!19679 () Bool)

(assert (=> d!19679 (= (array_inv!1134 (_values!2276 newMap!16)) (bvsge (size!2143 (_values!2276 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80270 d!19679))

(declare-fun condMapEmpty!3339 () Bool)

(declare-fun mapDefault!3339 () ValueCell!915)

(assert (=> mapNonEmpty!3330 (= condMapEmpty!3339 (= mapRest!3329 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3339)))))

(declare-fun e!52667 () Bool)

(declare-fun mapRes!3339 () Bool)

(assert (=> mapNonEmpty!3330 (= tp!8812 (and e!52667 mapRes!3339))))

(declare-fun mapNonEmpty!3339 () Bool)

(declare-fun tp!8829 () Bool)

(declare-fun e!52668 () Bool)

(assert (=> mapNonEmpty!3339 (= mapRes!3339 (and tp!8829 e!52668))))

(declare-fun mapValue!3339 () ValueCell!915)

(declare-fun mapRest!3339 () (Array (_ BitVec 32) ValueCell!915))

(declare-fun mapKey!3339 () (_ BitVec 32))

(assert (=> mapNonEmpty!3339 (= mapRest!3329 (store mapRest!3339 mapKey!3339 mapValue!3339))))

(declare-fun b!80629 () Bool)

(assert (=> b!80629 (= e!52667 tp_is_empty!2517)))

(declare-fun mapIsEmpty!3339 () Bool)

(assert (=> mapIsEmpty!3339 mapRes!3339))

(declare-fun b!80628 () Bool)

(assert (=> b!80628 (= e!52668 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3330 condMapEmpty!3339) mapIsEmpty!3339))

(assert (= (and mapNonEmpty!3330 (not condMapEmpty!3339)) mapNonEmpty!3339))

(assert (= (and mapNonEmpty!3339 ((_ is ValueCellFull!915) mapValue!3339)) b!80628))

(assert (= (and mapNonEmpty!3330 ((_ is ValueCellFull!915) mapDefault!3339)) b!80629))

(declare-fun m!81979 () Bool)

(assert (=> mapNonEmpty!3339 m!81979))

(declare-fun condMapEmpty!3340 () Bool)

(declare-fun mapDefault!3340 () ValueCell!915)

(assert (=> mapNonEmpty!3329 (= condMapEmpty!3340 (= mapRest!3330 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3340)))))

(declare-fun e!52669 () Bool)

(declare-fun mapRes!3340 () Bool)

(assert (=> mapNonEmpty!3329 (= tp!8811 (and e!52669 mapRes!3340))))

(declare-fun mapNonEmpty!3340 () Bool)

(declare-fun tp!8830 () Bool)

(declare-fun e!52670 () Bool)

(assert (=> mapNonEmpty!3340 (= mapRes!3340 (and tp!8830 e!52670))))

(declare-fun mapRest!3340 () (Array (_ BitVec 32) ValueCell!915))

(declare-fun mapValue!3340 () ValueCell!915)

(declare-fun mapKey!3340 () (_ BitVec 32))

(assert (=> mapNonEmpty!3340 (= mapRest!3330 (store mapRest!3340 mapKey!3340 mapValue!3340))))

(declare-fun b!80631 () Bool)

(assert (=> b!80631 (= e!52669 tp_is_empty!2517)))

(declare-fun mapIsEmpty!3340 () Bool)

(assert (=> mapIsEmpty!3340 mapRes!3340))

(declare-fun b!80630 () Bool)

(assert (=> b!80630 (= e!52670 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3329 condMapEmpty!3340) mapIsEmpty!3340))

(assert (= (and mapNonEmpty!3329 (not condMapEmpty!3340)) mapNonEmpty!3340))

(assert (= (and mapNonEmpty!3340 ((_ is ValueCellFull!915) mapValue!3340)) b!80630))

(assert (= (and mapNonEmpty!3329 ((_ is ValueCellFull!915) mapDefault!3340)) b!80631))

(declare-fun m!81981 () Bool)

(assert (=> mapNonEmpty!3340 m!81981))

(declare-fun b_lambda!3605 () Bool)

(assert (= b_lambda!3601 (or (and b!80256 b_free!2201) (and b!80270 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))))) b_lambda!3605)))

(declare-fun b_lambda!3607 () Bool)

(assert (= b_lambda!3599 (or (and b!80256 b_free!2201) (and b!80270 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))))) b_lambda!3607)))

(declare-fun b_lambda!3609 () Bool)

(assert (= b_lambda!3603 (or (and b!80256 b_free!2201) (and b!80270 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))))) b_lambda!3609)))

(check-sat (not b!80399) (not b!80496) (not bm!7413) (not b!80595) (not b!80378) (not b!80495) (not b!80389) (not b!80427) (not bm!7397) (not b!80348) (not b!80424) (not bm!7477) (not bm!7490) (not b_next!2203) (not b!80432) b_and!4925 (not b!80587) (not b!80393) (not b!80398) (not b_lambda!3607) (not b!80388) (not d!19647) (not b!80618) (not bm!7394) (not b!80487) (not b!80396) (not b!80507) (not d!19631) (not b!80395) (not mapNonEmpty!3339) (not d!19659) (not b!80353) (not bm!7478) (not b!80433) (not b!80488) (not d!19673) (not d!19675) (not b!80481) (not d!19639) (not b!80387) (not b!80347) (not b!80394) (not bm!7418) (not b!80397) (not b!80391) (not b_lambda!3609) (not bm!7470) (not d!19657) (not d!19665) (not b!80505) (not d!19655) (not bm!7416) (not bm!7486) (not d!19649) b_and!4927 (not b!80431) (not bm!7483) (not b!80425) (not b!80478) (not b!80365) (not b!80610) (not b_lambda!3597) (not d!19643) (not bm!7467) (not b!80392) (not b!80360) (not d!19653) (not d!19671) (not b!80390) (not d!19669) (not bm!7469) (not b_lambda!3605) (not b!80426) (not b!80492) (not d!19663) (not b_next!2201) (not b!80381) (not mapNonEmpty!3340) (not d!19637) (not b!80603) (not bm!7417) (not b!80386) (not b!80380) (not bm!7475) (not b!80346) (not b!80479) tp_is_empty!2517 (not bm!7482) (not d!19633) (not b!80354) (not bm!7489) (not d!19651) (not b!80429) (not d!19667) (not bm!7480) (not b!80620))
(check-sat b_and!4925 b_and!4927 (not b_next!2201) (not b_next!2203))
(get-model)

(declare-fun d!19681 () Bool)

(declare-fun get!1198 (Option!143) V!3003)

(assert (=> d!19681 (= (apply!80 lt!37326 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1198 (getValueByKey!137 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3400 () Bool)

(assert (= bs!3400 d!19681))

(assert (=> bs!3400 m!81727))

(declare-fun m!81983 () Bool)

(assert (=> bs!3400 m!81983))

(assert (=> bs!3400 m!81983))

(declare-fun m!81985 () Bool)

(assert (=> bs!3400 m!81985))

(assert (=> b!80431 d!19681))

(declare-fun d!19683 () Bool)

(declare-fun c!12621 () Bool)

(assert (=> d!19683 (= c!12621 ((_ is ValueCellFull!915) (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!52671 () V!3003)

(assert (=> d!19683 (= (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!52671)))

(declare-fun b!80632 () Bool)

(assert (=> b!80632 (= e!52671 (get!1196 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80633 () Bool)

(assert (=> b!80633 (= e!52671 (get!1197 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19683 c!12621) b!80632))

(assert (= (and d!19683 (not c!12621)) b!80633))

(assert (=> b!80632 m!81847))

(assert (=> b!80632 m!81633))

(declare-fun m!81987 () Bool)

(assert (=> b!80632 m!81987))

(assert (=> b!80633 m!81847))

(assert (=> b!80633 m!81633))

(declare-fun m!81989 () Bool)

(assert (=> b!80633 m!81989))

(assert (=> b!80431 d!19683))

(declare-fun d!19685 () Bool)

(declare-fun res!41978 () Bool)

(declare-fun e!52672 () Bool)

(assert (=> d!19685 (=> res!41978 e!52672)))

(assert (=> d!19685 (= res!41978 (= (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!19685 (= (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000) e!52672)))

(declare-fun b!80634 () Bool)

(declare-fun e!52673 () Bool)

(assert (=> b!80634 (= e!52672 e!52673)))

(declare-fun res!41979 () Bool)

(assert (=> b!80634 (=> (not res!41979) (not e!52673))))

(assert (=> b!80634 (= res!41979 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!80635 () Bool)

(assert (=> b!80635 (= e!52673 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!19685 (not res!41978)) b!80634))

(assert (= (and b!80634 res!41979) b!80635))

(declare-fun m!81991 () Bool)

(assert (=> d!19685 m!81991))

(assert (=> b!80635 m!81585))

(declare-fun m!81993 () Bool)

(assert (=> b!80635 m!81993))

(assert (=> bm!7482 d!19685))

(declare-fun d!19687 () Bool)

(declare-fun e!52674 () Bool)

(assert (=> d!19687 e!52674))

(declare-fun res!41980 () Bool)

(assert (=> d!19687 (=> res!41980 e!52674)))

(declare-fun lt!37489 () Bool)

(assert (=> d!19687 (= res!41980 (not lt!37489))))

(declare-fun lt!37488 () Bool)

(assert (=> d!19687 (= lt!37489 lt!37488)))

(declare-fun lt!37487 () Unit!2350)

(declare-fun e!52675 () Unit!2350)

(assert (=> d!19687 (= lt!37487 e!52675)))

(declare-fun c!12622 () Bool)

(assert (=> d!19687 (= c!12622 lt!37488)))

(assert (=> d!19687 (= lt!37488 (containsKey!141 (toList!751 lt!37290) (_1!1111 lt!37188)))))

(assert (=> d!19687 (= (contains!750 lt!37290 (_1!1111 lt!37188)) lt!37489)))

(declare-fun b!80636 () Bool)

(declare-fun lt!37490 () Unit!2350)

(assert (=> b!80636 (= e!52675 lt!37490)))

(assert (=> b!80636 (= lt!37490 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37290) (_1!1111 lt!37188)))))

(assert (=> b!80636 (isDefined!91 (getValueByKey!137 (toList!751 lt!37290) (_1!1111 lt!37188)))))

(declare-fun b!80637 () Bool)

(declare-fun Unit!2361 () Unit!2350)

(assert (=> b!80637 (= e!52675 Unit!2361)))

(declare-fun b!80638 () Bool)

(assert (=> b!80638 (= e!52674 (isDefined!91 (getValueByKey!137 (toList!751 lt!37290) (_1!1111 lt!37188))))))

(assert (= (and d!19687 c!12622) b!80636))

(assert (= (and d!19687 (not c!12622)) b!80637))

(assert (= (and d!19687 (not res!41980)) b!80638))

(declare-fun m!81995 () Bool)

(assert (=> d!19687 m!81995))

(declare-fun m!81997 () Bool)

(assert (=> b!80636 m!81997))

(assert (=> b!80636 m!81791))

(assert (=> b!80636 m!81791))

(declare-fun m!81999 () Bool)

(assert (=> b!80636 m!81999))

(assert (=> b!80638 m!81791))

(assert (=> b!80638 m!81791))

(assert (=> b!80638 m!81999))

(assert (=> d!19655 d!19687))

(declare-fun b!80648 () Bool)

(declare-fun e!52680 () Option!143)

(declare-fun e!52681 () Option!143)

(assert (=> b!80648 (= e!52680 e!52681)))

(declare-fun c!12628 () Bool)

(assert (=> b!80648 (= c!12628 (and ((_ is Cons!1534) lt!37287) (not (= (_1!1111 (h!2123 lt!37287)) (_1!1111 lt!37188)))))))

(declare-fun d!19689 () Bool)

(declare-fun c!12627 () Bool)

(assert (=> d!19689 (= c!12627 (and ((_ is Cons!1534) lt!37287) (= (_1!1111 (h!2123 lt!37287)) (_1!1111 lt!37188))))))

(assert (=> d!19689 (= (getValueByKey!137 lt!37287 (_1!1111 lt!37188)) e!52680)))

(declare-fun b!80650 () Bool)

(assert (=> b!80650 (= e!52681 None!141)))

(declare-fun b!80649 () Bool)

(assert (=> b!80649 (= e!52681 (getValueByKey!137 (t!5209 lt!37287) (_1!1111 lt!37188)))))

(declare-fun b!80647 () Bool)

(assert (=> b!80647 (= e!52680 (Some!142 (_2!1111 (h!2123 lt!37287))))))

(assert (= (and d!19689 c!12627) b!80647))

(assert (= (and d!19689 (not c!12627)) b!80648))

(assert (= (and b!80648 c!12628) b!80649))

(assert (= (and b!80648 (not c!12628)) b!80650))

(declare-fun m!82001 () Bool)

(assert (=> b!80649 m!82001))

(assert (=> d!19655 d!19689))

(declare-fun d!19691 () Bool)

(assert (=> d!19691 (= (getValueByKey!137 lt!37287 (_1!1111 lt!37188)) (Some!142 (_2!1111 lt!37188)))))

(declare-fun lt!37493 () Unit!2350)

(declare-fun choose!478 (List!1538 (_ BitVec 64) V!3003) Unit!2350)

(assert (=> d!19691 (= lt!37493 (choose!478 lt!37287 (_1!1111 lt!37188) (_2!1111 lt!37188)))))

(declare-fun e!52684 () Bool)

(assert (=> d!19691 e!52684))

(declare-fun res!41985 () Bool)

(assert (=> d!19691 (=> (not res!41985) (not e!52684))))

(declare-fun isStrictlySorted!291 (List!1538) Bool)

(assert (=> d!19691 (= res!41985 (isStrictlySorted!291 lt!37287))))

(assert (=> d!19691 (= (lemmaContainsTupThenGetReturnValue!56 lt!37287 (_1!1111 lt!37188) (_2!1111 lt!37188)) lt!37493)))

(declare-fun b!80655 () Bool)

(declare-fun res!41986 () Bool)

(assert (=> b!80655 (=> (not res!41986) (not e!52684))))

(assert (=> b!80655 (= res!41986 (containsKey!141 lt!37287 (_1!1111 lt!37188)))))

(declare-fun b!80656 () Bool)

(assert (=> b!80656 (= e!52684 (contains!753 lt!37287 (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(assert (= (and d!19691 res!41985) b!80655))

(assert (= (and b!80655 res!41986) b!80656))

(assert (=> d!19691 m!81785))

(declare-fun m!82003 () Bool)

(assert (=> d!19691 m!82003))

(declare-fun m!82005 () Bool)

(assert (=> d!19691 m!82005))

(declare-fun m!82007 () Bool)

(assert (=> b!80655 m!82007))

(declare-fun m!82009 () Bool)

(assert (=> b!80656 m!82009))

(assert (=> d!19655 d!19691))

(declare-fun d!19693 () Bool)

(declare-fun e!52696 () Bool)

(assert (=> d!19693 e!52696))

(declare-fun res!41991 () Bool)

(assert (=> d!19693 (=> (not res!41991) (not e!52696))))

(declare-fun lt!37496 () List!1538)

(assert (=> d!19693 (= res!41991 (isStrictlySorted!291 lt!37496))))

(declare-fun e!52695 () List!1538)

(assert (=> d!19693 (= lt!37496 e!52695)))

(declare-fun c!12640 () Bool)

(assert (=> d!19693 (= c!12640 (and ((_ is Cons!1534) (toList!751 lt!37192)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37192))) (_1!1111 lt!37188))))))

(assert (=> d!19693 (isStrictlySorted!291 (toList!751 lt!37192))))

(assert (=> d!19693 (= (insertStrictlySorted!58 (toList!751 lt!37192) (_1!1111 lt!37188) (_2!1111 lt!37188)) lt!37496)))

(declare-fun b!80677 () Bool)

(assert (=> b!80677 (= e!52696 (contains!753 lt!37496 (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun bm!7497 () Bool)

(declare-fun call!7500 () List!1538)

(declare-fun call!7501 () List!1538)

(assert (=> bm!7497 (= call!7500 call!7501)))

(declare-fun b!80678 () Bool)

(declare-fun res!41992 () Bool)

(assert (=> b!80678 (=> (not res!41992) (not e!52696))))

(assert (=> b!80678 (= res!41992 (containsKey!141 lt!37496 (_1!1111 lt!37188)))))

(declare-fun b!80679 () Bool)

(declare-fun e!52698 () List!1538)

(assert (=> b!80679 (= e!52698 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37192)) (_1!1111 lt!37188) (_2!1111 lt!37188)))))

(declare-fun b!80680 () Bool)

(assert (=> b!80680 (= e!52695 call!7501)))

(declare-fun bm!7498 () Bool)

(declare-fun $colon$colon!69 (List!1538 tuple2!2202) List!1538)

(assert (=> bm!7498 (= call!7501 ($colon$colon!69 e!52698 (ite c!12640 (h!2123 (toList!751 lt!37192)) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188)))))))

(declare-fun c!12638 () Bool)

(assert (=> bm!7498 (= c!12638 c!12640)))

(declare-fun c!12637 () Bool)

(declare-fun b!80681 () Bool)

(declare-fun c!12639 () Bool)

(assert (=> b!80681 (= e!52698 (ite c!12637 (t!5209 (toList!751 lt!37192)) (ite c!12639 (Cons!1534 (h!2123 (toList!751 lt!37192)) (t!5209 (toList!751 lt!37192))) Nil!1535)))))

(declare-fun b!80682 () Bool)

(declare-fun e!52699 () List!1538)

(assert (=> b!80682 (= e!52699 call!7500)))

(declare-fun b!80683 () Bool)

(declare-fun e!52697 () List!1538)

(declare-fun call!7502 () List!1538)

(assert (=> b!80683 (= e!52697 call!7502)))

(declare-fun b!80684 () Bool)

(assert (=> b!80684 (= c!12639 (and ((_ is Cons!1534) (toList!751 lt!37192)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37192))) (_1!1111 lt!37188))))))

(assert (=> b!80684 (= e!52699 e!52697)))

(declare-fun b!80685 () Bool)

(assert (=> b!80685 (= e!52697 call!7502)))

(declare-fun bm!7499 () Bool)

(assert (=> bm!7499 (= call!7502 call!7500)))

(declare-fun b!80686 () Bool)

(assert (=> b!80686 (= e!52695 e!52699)))

(assert (=> b!80686 (= c!12637 (and ((_ is Cons!1534) (toList!751 lt!37192)) (= (_1!1111 (h!2123 (toList!751 lt!37192))) (_1!1111 lt!37188))))))

(assert (= (and d!19693 c!12640) b!80680))

(assert (= (and d!19693 (not c!12640)) b!80686))

(assert (= (and b!80686 c!12637) b!80682))

(assert (= (and b!80686 (not c!12637)) b!80684))

(assert (= (and b!80684 c!12639) b!80683))

(assert (= (and b!80684 (not c!12639)) b!80685))

(assert (= (or b!80683 b!80685) bm!7499))

(assert (= (or b!80682 bm!7499) bm!7497))

(assert (= (or b!80680 bm!7497) bm!7498))

(assert (= (and bm!7498 c!12638) b!80679))

(assert (= (and bm!7498 (not c!12638)) b!80681))

(assert (= (and d!19693 res!41991) b!80678))

(assert (= (and b!80678 res!41992) b!80677))

(declare-fun m!82011 () Bool)

(assert (=> b!80678 m!82011))

(declare-fun m!82013 () Bool)

(assert (=> bm!7498 m!82013))

(declare-fun m!82015 () Bool)

(assert (=> d!19693 m!82015))

(declare-fun m!82017 () Bool)

(assert (=> d!19693 m!82017))

(declare-fun m!82019 () Bool)

(assert (=> b!80679 m!82019))

(declare-fun m!82021 () Bool)

(assert (=> b!80677 m!82021))

(assert (=> d!19655 d!19693))

(declare-fun d!19695 () Bool)

(assert (=> d!19695 (= (get!1196 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) from!355) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2609 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> b!80353 d!19695))

(assert (=> d!19639 d!19645))

(declare-fun d!19697 () Bool)

(assert (=> d!19697 (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) from!355 Nil!1536)))

(assert (=> d!19697 true))

(declare-fun _$71!108 () Unit!2350)

(assert (=> d!19697 (= (choose!39 (_keys!3957 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!108)))

(declare-fun bs!3401 () Bool)

(assert (= bs!3401 d!19697))

(assert (=> bs!3401 m!81615))

(assert (=> d!19639 d!19697))

(declare-fun b!80687 () Bool)

(declare-fun e!52709 () ListLongMap!1471)

(declare-fun call!7505 () ListLongMap!1471)

(assert (=> b!80687 (= e!52709 (+!111 call!7505 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!80688 () Bool)

(declare-fun e!52711 () Bool)

(declare-fun lt!37510 () ListLongMap!1471)

(assert (=> b!80688 (= e!52711 (= (apply!80 lt!37510 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!80689 () Bool)

(declare-fun e!52708 () ListLongMap!1471)

(assert (=> b!80689 (= e!52709 e!52708)))

(declare-fun c!12644 () Bool)

(assert (=> b!80689 (= c!12644 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7500 () Bool)

(declare-fun call!7508 () ListLongMap!1471)

(assert (=> bm!7500 (= call!7508 call!7505)))

(declare-fun b!80690 () Bool)

(declare-fun e!52700 () Bool)

(declare-fun e!52703 () Bool)

(assert (=> b!80690 (= e!52700 e!52703)))

(declare-fun res!41993 () Bool)

(assert (=> b!80690 (=> (not res!41993) (not e!52703))))

(assert (=> b!80690 (= res!41993 (contains!750 lt!37510 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80690 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun d!19699 () Bool)

(declare-fun e!52712 () Bool)

(assert (=> d!19699 e!52712))

(declare-fun res!41997 () Bool)

(assert (=> d!19699 (=> (not res!41997) (not e!52712))))

(assert (=> d!19699 (= res!41997 (or (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))))

(declare-fun lt!37508 () ListLongMap!1471)

(assert (=> d!19699 (= lt!37510 lt!37508)))

(declare-fun lt!37511 () Unit!2350)

(declare-fun e!52702 () Unit!2350)

(assert (=> d!19699 (= lt!37511 e!52702)))

(declare-fun c!12642 () Bool)

(declare-fun e!52701 () Bool)

(assert (=> d!19699 (= c!12642 e!52701)))

(declare-fun res!41999 () Bool)

(assert (=> d!19699 (=> (not res!41999) (not e!52701))))

(assert (=> d!19699 (= res!41999 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!19699 (= lt!37508 e!52709)))

(declare-fun c!12643 () Bool)

(assert (=> d!19699 (= c!12643 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19699 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19699 (= (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!37510)))

(declare-fun bm!7501 () Bool)

(declare-fun call!7504 () Bool)

(assert (=> bm!7501 (= call!7504 (contains!750 lt!37510 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80691 () Bool)

(declare-fun e!52706 () Bool)

(assert (=> b!80691 (= e!52706 (not call!7504))))

(declare-fun b!80692 () Bool)

(assert (=> b!80692 (= e!52708 call!7508)))

(declare-fun b!80693 () Bool)

(assert (=> b!80693 (= e!52712 e!52706)))

(declare-fun c!12646 () Bool)

(assert (=> b!80693 (= c!12646 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80694 () Bool)

(declare-fun e!52704 () Bool)

(declare-fun e!52710 () Bool)

(assert (=> b!80694 (= e!52704 e!52710)))

(declare-fun res!41996 () Bool)

(declare-fun call!7509 () Bool)

(assert (=> b!80694 (= res!41996 call!7509)))

(assert (=> b!80694 (=> (not res!41996) (not e!52710))))

(declare-fun b!80695 () Bool)

(declare-fun res!41998 () Bool)

(assert (=> b!80695 (=> (not res!41998) (not e!52712))))

(assert (=> b!80695 (= res!41998 e!52704)))

(declare-fun c!12645 () Bool)

(assert (=> b!80695 (= c!12645 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80696 () Bool)

(declare-fun e!52705 () Bool)

(assert (=> b!80696 (= e!52705 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7502 () Bool)

(declare-fun call!7503 () ListLongMap!1471)

(declare-fun call!7507 () ListLongMap!1471)

(assert (=> bm!7502 (= call!7503 call!7507)))

(declare-fun bm!7503 () Bool)

(declare-fun call!7506 () ListLongMap!1471)

(assert (=> bm!7503 (= call!7507 call!7506)))

(declare-fun b!80697 () Bool)

(declare-fun lt!37512 () Unit!2350)

(assert (=> b!80697 (= e!52702 lt!37512)))

(declare-fun lt!37509 () ListLongMap!1471)

(assert (=> b!80697 (= lt!37509 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37497 () (_ BitVec 64))

(assert (=> b!80697 (= lt!37497 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37517 () (_ BitVec 64))

(assert (=> b!80697 (= lt!37517 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37498 () Unit!2350)

(assert (=> b!80697 (= lt!37498 (addStillContains!56 lt!37509 lt!37497 (zeroValue!2189 newMap!16) lt!37517))))

(assert (=> b!80697 (contains!750 (+!111 lt!37509 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16))) lt!37517)))

(declare-fun lt!37515 () Unit!2350)

(assert (=> b!80697 (= lt!37515 lt!37498)))

(declare-fun lt!37504 () ListLongMap!1471)

(assert (=> b!80697 (= lt!37504 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37513 () (_ BitVec 64))

(assert (=> b!80697 (= lt!37513 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37500 () (_ BitVec 64))

(assert (=> b!80697 (= lt!37500 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37518 () Unit!2350)

(assert (=> b!80697 (= lt!37518 (addApplyDifferent!56 lt!37504 lt!37513 (minValue!2189 newMap!16) lt!37500))))

(assert (=> b!80697 (= (apply!80 (+!111 lt!37504 (tuple2!2203 lt!37513 (minValue!2189 newMap!16))) lt!37500) (apply!80 lt!37504 lt!37500))))

(declare-fun lt!37501 () Unit!2350)

(assert (=> b!80697 (= lt!37501 lt!37518)))

(declare-fun lt!37507 () ListLongMap!1471)

(assert (=> b!80697 (= lt!37507 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37503 () (_ BitVec 64))

(assert (=> b!80697 (= lt!37503 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37505 () (_ BitVec 64))

(assert (=> b!80697 (= lt!37505 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37516 () Unit!2350)

(assert (=> b!80697 (= lt!37516 (addApplyDifferent!56 lt!37507 lt!37503 (zeroValue!2189 newMap!16) lt!37505))))

(assert (=> b!80697 (= (apply!80 (+!111 lt!37507 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16))) lt!37505) (apply!80 lt!37507 lt!37505))))

(declare-fun lt!37502 () Unit!2350)

(assert (=> b!80697 (= lt!37502 lt!37516)))

(declare-fun lt!37506 () ListLongMap!1471)

(assert (=> b!80697 (= lt!37506 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37514 () (_ BitVec 64))

(assert (=> b!80697 (= lt!37514 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37499 () (_ BitVec 64))

(assert (=> b!80697 (= lt!37499 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80697 (= lt!37512 (addApplyDifferent!56 lt!37506 lt!37514 (minValue!2189 newMap!16) lt!37499))))

(assert (=> b!80697 (= (apply!80 (+!111 lt!37506 (tuple2!2203 lt!37514 (minValue!2189 newMap!16))) lt!37499) (apply!80 lt!37506 lt!37499))))

(declare-fun b!80698 () Bool)

(declare-fun Unit!2362 () Unit!2350)

(assert (=> b!80698 (= e!52702 Unit!2362)))

(declare-fun b!80699 () Bool)

(assert (=> b!80699 (= e!52706 e!52711)))

(declare-fun res!41994 () Bool)

(assert (=> b!80699 (= res!41994 call!7504)))

(assert (=> b!80699 (=> (not res!41994) (not e!52711))))

(declare-fun b!80700 () Bool)

(declare-fun c!12641 () Bool)

(assert (=> b!80700 (= c!12641 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52707 () ListLongMap!1471)

(assert (=> b!80700 (= e!52708 e!52707)))

(declare-fun b!80701 () Bool)

(assert (=> b!80701 (= e!52701 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80702 () Bool)

(assert (=> b!80702 (= e!52707 call!7503)))

(declare-fun bm!7504 () Bool)

(assert (=> bm!7504 (= call!7509 (contains!750 lt!37510 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80703 () Bool)

(assert (=> b!80703 (= e!52704 (not call!7509))))

(declare-fun b!80704 () Bool)

(assert (=> b!80704 (= e!52710 (= (apply!80 lt!37510 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun bm!7505 () Bool)

(assert (=> bm!7505 (= call!7506 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!80705 () Bool)

(assert (=> b!80705 (= e!52703 (= (apply!80 lt!37510 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80705 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_values!2276 newMap!16))))))

(assert (=> b!80705 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!80706 () Bool)

(assert (=> b!80706 (= e!52707 call!7508)))

(declare-fun bm!7506 () Bool)

(assert (=> bm!7506 (= call!7505 (+!111 (ite c!12643 call!7506 (ite c!12644 call!7507 call!7503)) (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!80707 () Bool)

(declare-fun res!42000 () Bool)

(assert (=> b!80707 (=> (not res!42000) (not e!52712))))

(assert (=> b!80707 (= res!42000 e!52700)))

(declare-fun res!41995 () Bool)

(assert (=> b!80707 (=> res!41995 e!52700)))

(assert (=> b!80707 (= res!41995 (not e!52705))))

(declare-fun res!42001 () Bool)

(assert (=> b!80707 (=> (not res!42001) (not e!52705))))

(assert (=> b!80707 (= res!42001 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (= (and d!19699 c!12643) b!80687))

(assert (= (and d!19699 (not c!12643)) b!80689))

(assert (= (and b!80689 c!12644) b!80692))

(assert (= (and b!80689 (not c!12644)) b!80700))

(assert (= (and b!80700 c!12641) b!80706))

(assert (= (and b!80700 (not c!12641)) b!80702))

(assert (= (or b!80706 b!80702) bm!7502))

(assert (= (or b!80692 bm!7502) bm!7503))

(assert (= (or b!80692 b!80706) bm!7500))

(assert (= (or b!80687 bm!7503) bm!7505))

(assert (= (or b!80687 bm!7500) bm!7506))

(assert (= (and d!19699 res!41999) b!80701))

(assert (= (and d!19699 c!12642) b!80697))

(assert (= (and d!19699 (not c!12642)) b!80698))

(assert (= (and d!19699 res!41997) b!80707))

(assert (= (and b!80707 res!42001) b!80696))

(assert (= (and b!80707 (not res!41995)) b!80690))

(assert (= (and b!80690 res!41993) b!80705))

(assert (= (and b!80707 res!42000) b!80695))

(assert (= (and b!80695 c!12645) b!80694))

(assert (= (and b!80695 (not c!12645)) b!80703))

(assert (= (and b!80694 res!41996) b!80704))

(assert (= (or b!80694 b!80703) bm!7504))

(assert (= (and b!80695 res!41998) b!80693))

(assert (= (and b!80693 c!12646) b!80699))

(assert (= (and b!80693 (not c!12646)) b!80691))

(assert (= (and b!80699 res!41994) b!80688))

(assert (= (or b!80699 b!80691) bm!7501))

(declare-fun b_lambda!3611 () Bool)

(assert (=> (not b_lambda!3611) (not b!80705)))

(declare-fun tb!1649 () Bool)

(declare-fun t!5218 () Bool)

(assert (=> (and b!80256 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16)) t!5218) tb!1649))

(declare-fun result!2857 () Bool)

(assert (=> tb!1649 (= result!2857 tp_is_empty!2517)))

(assert (=> b!80705 t!5218))

(declare-fun b_and!4929 () Bool)

(assert (= b_and!4925 (and (=> t!5218 result!2857) b_and!4929)))

(declare-fun t!5220 () Bool)

(declare-fun tb!1651 () Bool)

(assert (=> (and b!80270 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 newMap!16)) t!5220) tb!1651))

(declare-fun result!2859 () Bool)

(assert (= result!2859 result!2857))

(assert (=> b!80705 t!5220))

(declare-fun b_and!4931 () Bool)

(assert (= b_and!4927 (and (=> t!5220 result!2859) b_and!4931)))

(declare-fun m!82023 () Bool)

(assert (=> bm!7505 m!82023))

(declare-fun m!82025 () Bool)

(assert (=> bm!7501 m!82025))

(assert (=> b!80705 m!81991))

(assert (=> b!80705 m!81991))

(declare-fun m!82027 () Bool)

(assert (=> b!80705 m!82027))

(declare-fun m!82029 () Bool)

(assert (=> b!80705 m!82029))

(declare-fun m!82031 () Bool)

(assert (=> b!80705 m!82031))

(assert (=> b!80705 m!82029))

(assert (=> b!80705 m!82031))

(declare-fun m!82033 () Bool)

(assert (=> b!80705 m!82033))

(assert (=> b!80696 m!81991))

(assert (=> b!80696 m!81991))

(declare-fun m!82035 () Bool)

(assert (=> b!80696 m!82035))

(declare-fun m!82037 () Bool)

(assert (=> b!80687 m!82037))

(assert (=> b!80690 m!81991))

(assert (=> b!80690 m!81991))

(declare-fun m!82039 () Bool)

(assert (=> b!80690 m!82039))

(declare-fun m!82041 () Bool)

(assert (=> bm!7506 m!82041))

(declare-fun m!82043 () Bool)

(assert (=> d!19699 m!82043))

(declare-fun m!82045 () Bool)

(assert (=> bm!7504 m!82045))

(declare-fun m!82047 () Bool)

(assert (=> b!80697 m!82047))

(declare-fun m!82049 () Bool)

(assert (=> b!80697 m!82049))

(declare-fun m!82051 () Bool)

(assert (=> b!80697 m!82051))

(assert (=> b!80697 m!81991))

(declare-fun m!82053 () Bool)

(assert (=> b!80697 m!82053))

(declare-fun m!82055 () Bool)

(assert (=> b!80697 m!82055))

(declare-fun m!82057 () Bool)

(assert (=> b!80697 m!82057))

(declare-fun m!82059 () Bool)

(assert (=> b!80697 m!82059))

(declare-fun m!82061 () Bool)

(assert (=> b!80697 m!82061))

(assert (=> b!80697 m!82049))

(assert (=> b!80697 m!82023))

(declare-fun m!82063 () Bool)

(assert (=> b!80697 m!82063))

(declare-fun m!82065 () Bool)

(assert (=> b!80697 m!82065))

(declare-fun m!82067 () Bool)

(assert (=> b!80697 m!82067))

(declare-fun m!82069 () Bool)

(assert (=> b!80697 m!82069))

(assert (=> b!80697 m!82057))

(declare-fun m!82071 () Bool)

(assert (=> b!80697 m!82071))

(declare-fun m!82073 () Bool)

(assert (=> b!80697 m!82073))

(assert (=> b!80697 m!82053))

(declare-fun m!82075 () Bool)

(assert (=> b!80697 m!82075))

(assert (=> b!80697 m!82063))

(declare-fun m!82077 () Bool)

(assert (=> b!80704 m!82077))

(declare-fun m!82079 () Bool)

(assert (=> b!80688 m!82079))

(assert (=> b!80701 m!81991))

(assert (=> b!80701 m!81991))

(assert (=> b!80701 m!82035))

(assert (=> d!19669 d!19699))

(declare-fun d!19701 () Bool)

(declare-fun e!52713 () Bool)

(assert (=> d!19701 e!52713))

(declare-fun res!42002 () Bool)

(assert (=> d!19701 (=> res!42002 e!52713)))

(declare-fun lt!37521 () Bool)

(assert (=> d!19701 (= res!42002 (not lt!37521))))

(declare-fun lt!37520 () Bool)

(assert (=> d!19701 (= lt!37521 lt!37520)))

(declare-fun lt!37519 () Unit!2350)

(declare-fun e!52714 () Unit!2350)

(assert (=> d!19701 (= lt!37519 e!52714)))

(declare-fun c!12647 () Bool)

(assert (=> d!19701 (= c!12647 lt!37520)))

(assert (=> d!19701 (= lt!37520 (containsKey!141 (toList!751 lt!37294) (_1!1111 lt!37202)))))

(assert (=> d!19701 (= (contains!750 lt!37294 (_1!1111 lt!37202)) lt!37521)))

(declare-fun b!80708 () Bool)

(declare-fun lt!37522 () Unit!2350)

(assert (=> b!80708 (= e!52714 lt!37522)))

(assert (=> b!80708 (= lt!37522 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37294) (_1!1111 lt!37202)))))

(assert (=> b!80708 (isDefined!91 (getValueByKey!137 (toList!751 lt!37294) (_1!1111 lt!37202)))))

(declare-fun b!80709 () Bool)

(declare-fun Unit!2363 () Unit!2350)

(assert (=> b!80709 (= e!52714 Unit!2363)))

(declare-fun b!80710 () Bool)

(assert (=> b!80710 (= e!52713 (isDefined!91 (getValueByKey!137 (toList!751 lt!37294) (_1!1111 lt!37202))))))

(assert (= (and d!19701 c!12647) b!80708))

(assert (= (and d!19701 (not c!12647)) b!80709))

(assert (= (and d!19701 (not res!42002)) b!80710))

(declare-fun m!82081 () Bool)

(assert (=> d!19701 m!82081))

(declare-fun m!82083 () Bool)

(assert (=> b!80708 m!82083))

(assert (=> b!80708 m!81803))

(assert (=> b!80708 m!81803))

(declare-fun m!82085 () Bool)

(assert (=> b!80708 m!82085))

(assert (=> b!80710 m!81803))

(assert (=> b!80710 m!81803))

(assert (=> b!80710 m!82085))

(assert (=> d!19657 d!19701))

(declare-fun b!80712 () Bool)

(declare-fun e!52715 () Option!143)

(declare-fun e!52716 () Option!143)

(assert (=> b!80712 (= e!52715 e!52716)))

(declare-fun c!12649 () Bool)

(assert (=> b!80712 (= c!12649 (and ((_ is Cons!1534) lt!37291) (not (= (_1!1111 (h!2123 lt!37291)) (_1!1111 lt!37202)))))))

(declare-fun d!19703 () Bool)

(declare-fun c!12648 () Bool)

(assert (=> d!19703 (= c!12648 (and ((_ is Cons!1534) lt!37291) (= (_1!1111 (h!2123 lt!37291)) (_1!1111 lt!37202))))))

(assert (=> d!19703 (= (getValueByKey!137 lt!37291 (_1!1111 lt!37202)) e!52715)))

(declare-fun b!80714 () Bool)

(assert (=> b!80714 (= e!52716 None!141)))

(declare-fun b!80713 () Bool)

(assert (=> b!80713 (= e!52716 (getValueByKey!137 (t!5209 lt!37291) (_1!1111 lt!37202)))))

(declare-fun b!80711 () Bool)

(assert (=> b!80711 (= e!52715 (Some!142 (_2!1111 (h!2123 lt!37291))))))

(assert (= (and d!19703 c!12648) b!80711))

(assert (= (and d!19703 (not c!12648)) b!80712))

(assert (= (and b!80712 c!12649) b!80713))

(assert (= (and b!80712 (not c!12649)) b!80714))

(declare-fun m!82087 () Bool)

(assert (=> b!80713 m!82087))

(assert (=> d!19657 d!19703))

(declare-fun d!19705 () Bool)

(assert (=> d!19705 (= (getValueByKey!137 lt!37291 (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202)))))

(declare-fun lt!37523 () Unit!2350)

(assert (=> d!19705 (= lt!37523 (choose!478 lt!37291 (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(declare-fun e!52717 () Bool)

(assert (=> d!19705 e!52717))

(declare-fun res!42003 () Bool)

(assert (=> d!19705 (=> (not res!42003) (not e!52717))))

(assert (=> d!19705 (= res!42003 (isStrictlySorted!291 lt!37291))))

(assert (=> d!19705 (= (lemmaContainsTupThenGetReturnValue!56 lt!37291 (_1!1111 lt!37202) (_2!1111 lt!37202)) lt!37523)))

(declare-fun b!80715 () Bool)

(declare-fun res!42004 () Bool)

(assert (=> b!80715 (=> (not res!42004) (not e!52717))))

(assert (=> b!80715 (= res!42004 (containsKey!141 lt!37291 (_1!1111 lt!37202)))))

(declare-fun b!80716 () Bool)

(assert (=> b!80716 (= e!52717 (contains!753 lt!37291 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(assert (= (and d!19705 res!42003) b!80715))

(assert (= (and b!80715 res!42004) b!80716))

(assert (=> d!19705 m!81797))

(declare-fun m!82089 () Bool)

(assert (=> d!19705 m!82089))

(declare-fun m!82091 () Bool)

(assert (=> d!19705 m!82091))

(declare-fun m!82093 () Bool)

(assert (=> b!80715 m!82093))

(declare-fun m!82095 () Bool)

(assert (=> b!80716 m!82095))

(assert (=> d!19657 d!19705))

(declare-fun d!19707 () Bool)

(declare-fun e!52719 () Bool)

(assert (=> d!19707 e!52719))

(declare-fun res!42005 () Bool)

(assert (=> d!19707 (=> (not res!42005) (not e!52719))))

(declare-fun lt!37524 () List!1538)

(assert (=> d!19707 (= res!42005 (isStrictlySorted!291 lt!37524))))

(declare-fun e!52718 () List!1538)

(assert (=> d!19707 (= lt!37524 e!52718)))

(declare-fun c!12653 () Bool)

(assert (=> d!19707 (= c!12653 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37196 lt!37188))) (bvslt (_1!1111 (h!2123 (toList!751 (+!111 lt!37196 lt!37188)))) (_1!1111 lt!37202))))))

(assert (=> d!19707 (isStrictlySorted!291 (toList!751 (+!111 lt!37196 lt!37188)))))

(assert (=> d!19707 (= (insertStrictlySorted!58 (toList!751 (+!111 lt!37196 lt!37188)) (_1!1111 lt!37202) (_2!1111 lt!37202)) lt!37524)))

(declare-fun b!80717 () Bool)

(assert (=> b!80717 (= e!52719 (contains!753 lt!37524 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun bm!7507 () Bool)

(declare-fun call!7510 () List!1538)

(declare-fun call!7511 () List!1538)

(assert (=> bm!7507 (= call!7510 call!7511)))

(declare-fun b!80718 () Bool)

(declare-fun res!42006 () Bool)

(assert (=> b!80718 (=> (not res!42006) (not e!52719))))

(assert (=> b!80718 (= res!42006 (containsKey!141 lt!37524 (_1!1111 lt!37202)))))

(declare-fun b!80719 () Bool)

(declare-fun e!52721 () List!1538)

(assert (=> b!80719 (= e!52721 (insertStrictlySorted!58 (t!5209 (toList!751 (+!111 lt!37196 lt!37188))) (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(declare-fun b!80720 () Bool)

(assert (=> b!80720 (= e!52718 call!7511)))

(declare-fun bm!7508 () Bool)

(assert (=> bm!7508 (= call!7511 ($colon$colon!69 e!52721 (ite c!12653 (h!2123 (toList!751 (+!111 lt!37196 lt!37188))) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202)))))))

(declare-fun c!12651 () Bool)

(assert (=> bm!7508 (= c!12651 c!12653)))

(declare-fun c!12652 () Bool)

(declare-fun c!12650 () Bool)

(declare-fun b!80721 () Bool)

(assert (=> b!80721 (= e!52721 (ite c!12650 (t!5209 (toList!751 (+!111 lt!37196 lt!37188))) (ite c!12652 (Cons!1534 (h!2123 (toList!751 (+!111 lt!37196 lt!37188))) (t!5209 (toList!751 (+!111 lt!37196 lt!37188)))) Nil!1535)))))

(declare-fun b!80722 () Bool)

(declare-fun e!52722 () List!1538)

(assert (=> b!80722 (= e!52722 call!7510)))

(declare-fun b!80723 () Bool)

(declare-fun e!52720 () List!1538)

(declare-fun call!7512 () List!1538)

(assert (=> b!80723 (= e!52720 call!7512)))

(declare-fun b!80724 () Bool)

(assert (=> b!80724 (= c!12652 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37196 lt!37188))) (bvsgt (_1!1111 (h!2123 (toList!751 (+!111 lt!37196 lt!37188)))) (_1!1111 lt!37202))))))

(assert (=> b!80724 (= e!52722 e!52720)))

(declare-fun b!80725 () Bool)

(assert (=> b!80725 (= e!52720 call!7512)))

(declare-fun bm!7509 () Bool)

(assert (=> bm!7509 (= call!7512 call!7510)))

(declare-fun b!80726 () Bool)

(assert (=> b!80726 (= e!52718 e!52722)))

(assert (=> b!80726 (= c!12650 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37196 lt!37188))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37196 lt!37188)))) (_1!1111 lt!37202))))))

(assert (= (and d!19707 c!12653) b!80720))

(assert (= (and d!19707 (not c!12653)) b!80726))

(assert (= (and b!80726 c!12650) b!80722))

(assert (= (and b!80726 (not c!12650)) b!80724))

(assert (= (and b!80724 c!12652) b!80723))

(assert (= (and b!80724 (not c!12652)) b!80725))

(assert (= (or b!80723 b!80725) bm!7509))

(assert (= (or b!80722 bm!7509) bm!7507))

(assert (= (or b!80720 bm!7507) bm!7508))

(assert (= (and bm!7508 c!12651) b!80719))

(assert (= (and bm!7508 (not c!12651)) b!80721))

(assert (= (and d!19707 res!42005) b!80718))

(assert (= (and b!80718 res!42006) b!80717))

(declare-fun m!82097 () Bool)

(assert (=> b!80718 m!82097))

(declare-fun m!82099 () Bool)

(assert (=> bm!7508 m!82099))

(declare-fun m!82101 () Bool)

(assert (=> d!19707 m!82101))

(declare-fun m!82103 () Bool)

(assert (=> d!19707 m!82103))

(declare-fun m!82105 () Bool)

(assert (=> b!80719 m!82105))

(declare-fun m!82107 () Bool)

(assert (=> b!80717 m!82107))

(assert (=> d!19657 d!19707))

(declare-fun d!19709 () Bool)

(declare-fun e!52723 () Bool)

(assert (=> d!19709 e!52723))

(declare-fun res!42007 () Bool)

(assert (=> d!19709 (=> res!42007 e!52723)))

(declare-fun lt!37527 () Bool)

(assert (=> d!19709 (= res!42007 (not lt!37527))))

(declare-fun lt!37526 () Bool)

(assert (=> d!19709 (= lt!37527 lt!37526)))

(declare-fun lt!37525 () Unit!2350)

(declare-fun e!52724 () Unit!2350)

(assert (=> d!19709 (= lt!37525 e!52724)))

(declare-fun c!12654 () Bool)

(assert (=> d!19709 (= c!12654 lt!37526)))

(assert (=> d!19709 (= lt!37526 (containsKey!141 (toList!751 lt!37278) (_1!1111 lt!37197)))))

(assert (=> d!19709 (= (contains!750 lt!37278 (_1!1111 lt!37197)) lt!37527)))

(declare-fun b!80727 () Bool)

(declare-fun lt!37528 () Unit!2350)

(assert (=> b!80727 (= e!52724 lt!37528)))

(assert (=> b!80727 (= lt!37528 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37278) (_1!1111 lt!37197)))))

(assert (=> b!80727 (isDefined!91 (getValueByKey!137 (toList!751 lt!37278) (_1!1111 lt!37197)))))

(declare-fun b!80728 () Bool)

(declare-fun Unit!2364 () Unit!2350)

(assert (=> b!80728 (= e!52724 Unit!2364)))

(declare-fun b!80729 () Bool)

(assert (=> b!80729 (= e!52723 (isDefined!91 (getValueByKey!137 (toList!751 lt!37278) (_1!1111 lt!37197))))))

(assert (= (and d!19709 c!12654) b!80727))

(assert (= (and d!19709 (not c!12654)) b!80728))

(assert (= (and d!19709 (not res!42007)) b!80729))

(declare-fun m!82109 () Bool)

(assert (=> d!19709 m!82109))

(declare-fun m!82111 () Bool)

(assert (=> b!80727 m!82111))

(assert (=> b!80727 m!81747))

(assert (=> b!80727 m!81747))

(declare-fun m!82113 () Bool)

(assert (=> b!80727 m!82113))

(assert (=> b!80729 m!81747))

(assert (=> b!80729 m!81747))

(assert (=> b!80729 m!82113))

(assert (=> d!19647 d!19709))

(declare-fun b!80731 () Bool)

(declare-fun e!52725 () Option!143)

(declare-fun e!52726 () Option!143)

(assert (=> b!80731 (= e!52725 e!52726)))

(declare-fun c!12656 () Bool)

(assert (=> b!80731 (= c!12656 (and ((_ is Cons!1534) lt!37275) (not (= (_1!1111 (h!2123 lt!37275)) (_1!1111 lt!37197)))))))

(declare-fun d!19711 () Bool)

(declare-fun c!12655 () Bool)

(assert (=> d!19711 (= c!12655 (and ((_ is Cons!1534) lt!37275) (= (_1!1111 (h!2123 lt!37275)) (_1!1111 lt!37197))))))

(assert (=> d!19711 (= (getValueByKey!137 lt!37275 (_1!1111 lt!37197)) e!52725)))

(declare-fun b!80733 () Bool)

(assert (=> b!80733 (= e!52726 None!141)))

(declare-fun b!80732 () Bool)

(assert (=> b!80732 (= e!52726 (getValueByKey!137 (t!5209 lt!37275) (_1!1111 lt!37197)))))

(declare-fun b!80730 () Bool)

(assert (=> b!80730 (= e!52725 (Some!142 (_2!1111 (h!2123 lt!37275))))))

(assert (= (and d!19711 c!12655) b!80730))

(assert (= (and d!19711 (not c!12655)) b!80731))

(assert (= (and b!80731 c!12656) b!80732))

(assert (= (and b!80731 (not c!12656)) b!80733))

(declare-fun m!82115 () Bool)

(assert (=> b!80732 m!82115))

(assert (=> d!19647 d!19711))

(declare-fun d!19713 () Bool)

(assert (=> d!19713 (= (getValueByKey!137 lt!37275 (_1!1111 lt!37197)) (Some!142 (_2!1111 lt!37197)))))

(declare-fun lt!37529 () Unit!2350)

(assert (=> d!19713 (= lt!37529 (choose!478 lt!37275 (_1!1111 lt!37197) (_2!1111 lt!37197)))))

(declare-fun e!52727 () Bool)

(assert (=> d!19713 e!52727))

(declare-fun res!42008 () Bool)

(assert (=> d!19713 (=> (not res!42008) (not e!52727))))

(assert (=> d!19713 (= res!42008 (isStrictlySorted!291 lt!37275))))

(assert (=> d!19713 (= (lemmaContainsTupThenGetReturnValue!56 lt!37275 (_1!1111 lt!37197) (_2!1111 lt!37197)) lt!37529)))

(declare-fun b!80734 () Bool)

(declare-fun res!42009 () Bool)

(assert (=> b!80734 (=> (not res!42009) (not e!52727))))

(assert (=> b!80734 (= res!42009 (containsKey!141 lt!37275 (_1!1111 lt!37197)))))

(declare-fun b!80735 () Bool)

(assert (=> b!80735 (= e!52727 (contains!753 lt!37275 (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(assert (= (and d!19713 res!42008) b!80734))

(assert (= (and b!80734 res!42009) b!80735))

(assert (=> d!19713 m!81741))

(declare-fun m!82117 () Bool)

(assert (=> d!19713 m!82117))

(declare-fun m!82119 () Bool)

(assert (=> d!19713 m!82119))

(declare-fun m!82121 () Bool)

(assert (=> b!80734 m!82121))

(declare-fun m!82123 () Bool)

(assert (=> b!80735 m!82123))

(assert (=> d!19647 d!19713))

(declare-fun d!19715 () Bool)

(declare-fun e!52729 () Bool)

(assert (=> d!19715 e!52729))

(declare-fun res!42010 () Bool)

(assert (=> d!19715 (=> (not res!42010) (not e!52729))))

(declare-fun lt!37530 () List!1538)

(assert (=> d!19715 (= res!42010 (isStrictlySorted!291 lt!37530))))

(declare-fun e!52728 () List!1538)

(assert (=> d!19715 (= lt!37530 e!52728)))

(declare-fun c!12660 () Bool)

(assert (=> d!19715 (= c!12660 (and ((_ is Cons!1534) (toList!751 lt!37187)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37187))) (_1!1111 lt!37197))))))

(assert (=> d!19715 (isStrictlySorted!291 (toList!751 lt!37187))))

(assert (=> d!19715 (= (insertStrictlySorted!58 (toList!751 lt!37187) (_1!1111 lt!37197) (_2!1111 lt!37197)) lt!37530)))

(declare-fun b!80736 () Bool)

(assert (=> b!80736 (= e!52729 (contains!753 lt!37530 (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun bm!7510 () Bool)

(declare-fun call!7513 () List!1538)

(declare-fun call!7514 () List!1538)

(assert (=> bm!7510 (= call!7513 call!7514)))

(declare-fun b!80737 () Bool)

(declare-fun res!42011 () Bool)

(assert (=> b!80737 (=> (not res!42011) (not e!52729))))

(assert (=> b!80737 (= res!42011 (containsKey!141 lt!37530 (_1!1111 lt!37197)))))

(declare-fun b!80738 () Bool)

(declare-fun e!52731 () List!1538)

(assert (=> b!80738 (= e!52731 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37187)) (_1!1111 lt!37197) (_2!1111 lt!37197)))))

(declare-fun b!80739 () Bool)

(assert (=> b!80739 (= e!52728 call!7514)))

(declare-fun bm!7511 () Bool)

(assert (=> bm!7511 (= call!7514 ($colon$colon!69 e!52731 (ite c!12660 (h!2123 (toList!751 lt!37187)) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197)))))))

(declare-fun c!12658 () Bool)

(assert (=> bm!7511 (= c!12658 c!12660)))

(declare-fun c!12659 () Bool)

(declare-fun b!80740 () Bool)

(declare-fun c!12657 () Bool)

(assert (=> b!80740 (= e!52731 (ite c!12657 (t!5209 (toList!751 lt!37187)) (ite c!12659 (Cons!1534 (h!2123 (toList!751 lt!37187)) (t!5209 (toList!751 lt!37187))) Nil!1535)))))

(declare-fun b!80741 () Bool)

(declare-fun e!52732 () List!1538)

(assert (=> b!80741 (= e!52732 call!7513)))

(declare-fun b!80742 () Bool)

(declare-fun e!52730 () List!1538)

(declare-fun call!7515 () List!1538)

(assert (=> b!80742 (= e!52730 call!7515)))

(declare-fun b!80743 () Bool)

(assert (=> b!80743 (= c!12659 (and ((_ is Cons!1534) (toList!751 lt!37187)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37187))) (_1!1111 lt!37197))))))

(assert (=> b!80743 (= e!52732 e!52730)))

(declare-fun b!80744 () Bool)

(assert (=> b!80744 (= e!52730 call!7515)))

(declare-fun bm!7512 () Bool)

(assert (=> bm!7512 (= call!7515 call!7513)))

(declare-fun b!80745 () Bool)

(assert (=> b!80745 (= e!52728 e!52732)))

(assert (=> b!80745 (= c!12657 (and ((_ is Cons!1534) (toList!751 lt!37187)) (= (_1!1111 (h!2123 (toList!751 lt!37187))) (_1!1111 lt!37197))))))

(assert (= (and d!19715 c!12660) b!80739))

(assert (= (and d!19715 (not c!12660)) b!80745))

(assert (= (and b!80745 c!12657) b!80741))

(assert (= (and b!80745 (not c!12657)) b!80743))

(assert (= (and b!80743 c!12659) b!80742))

(assert (= (and b!80743 (not c!12659)) b!80744))

(assert (= (or b!80742 b!80744) bm!7512))

(assert (= (or b!80741 bm!7512) bm!7510))

(assert (= (or b!80739 bm!7510) bm!7511))

(assert (= (and bm!7511 c!12658) b!80738))

(assert (= (and bm!7511 (not c!12658)) b!80740))

(assert (= (and d!19715 res!42010) b!80737))

(assert (= (and b!80737 res!42011) b!80736))

(declare-fun m!82125 () Bool)

(assert (=> b!80737 m!82125))

(declare-fun m!82127 () Bool)

(assert (=> bm!7511 m!82127))

(declare-fun m!82129 () Bool)

(assert (=> d!19715 m!82129))

(declare-fun m!82131 () Bool)

(assert (=> d!19715 m!82131))

(declare-fun m!82133 () Bool)

(assert (=> b!80738 m!82133))

(declare-fun m!82135 () Bool)

(assert (=> b!80736 m!82135))

(assert (=> d!19647 d!19715))

(declare-fun d!19717 () Bool)

(declare-fun e!52733 () Bool)

(assert (=> d!19717 e!52733))

(declare-fun res!42012 () Bool)

(assert (=> d!19717 (=> res!42012 e!52733)))

(declare-fun lt!37533 () Bool)

(assert (=> d!19717 (= res!42012 (not lt!37533))))

(declare-fun lt!37532 () Bool)

(assert (=> d!19717 (= lt!37533 lt!37532)))

(declare-fun lt!37531 () Unit!2350)

(declare-fun e!52734 () Unit!2350)

(assert (=> d!19717 (= lt!37531 e!52734)))

(declare-fun c!12661 () Bool)

(assert (=> d!19717 (= c!12661 lt!37532)))

(assert (=> d!19717 (= lt!37532 (containsKey!141 (toList!751 lt!37298) (_1!1111 lt!37188)))))

(assert (=> d!19717 (= (contains!750 lt!37298 (_1!1111 lt!37188)) lt!37533)))

(declare-fun b!80746 () Bool)

(declare-fun lt!37534 () Unit!2350)

(assert (=> b!80746 (= e!52734 lt!37534)))

(assert (=> b!80746 (= lt!37534 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37298) (_1!1111 lt!37188)))))

(assert (=> b!80746 (isDefined!91 (getValueByKey!137 (toList!751 lt!37298) (_1!1111 lt!37188)))))

(declare-fun b!80747 () Bool)

(declare-fun Unit!2365 () Unit!2350)

(assert (=> b!80747 (= e!52734 Unit!2365)))

(declare-fun b!80748 () Bool)

(assert (=> b!80748 (= e!52733 (isDefined!91 (getValueByKey!137 (toList!751 lt!37298) (_1!1111 lt!37188))))))

(assert (= (and d!19717 c!12661) b!80746))

(assert (= (and d!19717 (not c!12661)) b!80747))

(assert (= (and d!19717 (not res!42012)) b!80748))

(declare-fun m!82137 () Bool)

(assert (=> d!19717 m!82137))

(declare-fun m!82139 () Bool)

(assert (=> b!80746 m!82139))

(assert (=> b!80746 m!81815))

(assert (=> b!80746 m!81815))

(declare-fun m!82141 () Bool)

(assert (=> b!80746 m!82141))

(assert (=> b!80748 m!81815))

(assert (=> b!80748 m!81815))

(assert (=> b!80748 m!82141))

(assert (=> d!19659 d!19717))

(declare-fun b!80750 () Bool)

(declare-fun e!52735 () Option!143)

(declare-fun e!52736 () Option!143)

(assert (=> b!80750 (= e!52735 e!52736)))

(declare-fun c!12663 () Bool)

(assert (=> b!80750 (= c!12663 (and ((_ is Cons!1534) lt!37295) (not (= (_1!1111 (h!2123 lt!37295)) (_1!1111 lt!37188)))))))

(declare-fun d!19719 () Bool)

(declare-fun c!12662 () Bool)

(assert (=> d!19719 (= c!12662 (and ((_ is Cons!1534) lt!37295) (= (_1!1111 (h!2123 lt!37295)) (_1!1111 lt!37188))))))

(assert (=> d!19719 (= (getValueByKey!137 lt!37295 (_1!1111 lt!37188)) e!52735)))

(declare-fun b!80752 () Bool)

(assert (=> b!80752 (= e!52736 None!141)))

(declare-fun b!80751 () Bool)

(assert (=> b!80751 (= e!52736 (getValueByKey!137 (t!5209 lt!37295) (_1!1111 lt!37188)))))

(declare-fun b!80749 () Bool)

(assert (=> b!80749 (= e!52735 (Some!142 (_2!1111 (h!2123 lt!37295))))))

(assert (= (and d!19719 c!12662) b!80749))

(assert (= (and d!19719 (not c!12662)) b!80750))

(assert (= (and b!80750 c!12663) b!80751))

(assert (= (and b!80750 (not c!12663)) b!80752))

(declare-fun m!82143 () Bool)

(assert (=> b!80751 m!82143))

(assert (=> d!19659 d!19719))

(declare-fun d!19721 () Bool)

(assert (=> d!19721 (= (getValueByKey!137 lt!37295 (_1!1111 lt!37188)) (Some!142 (_2!1111 lt!37188)))))

(declare-fun lt!37535 () Unit!2350)

(assert (=> d!19721 (= lt!37535 (choose!478 lt!37295 (_1!1111 lt!37188) (_2!1111 lt!37188)))))

(declare-fun e!52737 () Bool)

(assert (=> d!19721 e!52737))

(declare-fun res!42013 () Bool)

(assert (=> d!19721 (=> (not res!42013) (not e!52737))))

(assert (=> d!19721 (= res!42013 (isStrictlySorted!291 lt!37295))))

(assert (=> d!19721 (= (lemmaContainsTupThenGetReturnValue!56 lt!37295 (_1!1111 lt!37188) (_2!1111 lt!37188)) lt!37535)))

(declare-fun b!80753 () Bool)

(declare-fun res!42014 () Bool)

(assert (=> b!80753 (=> (not res!42014) (not e!52737))))

(assert (=> b!80753 (= res!42014 (containsKey!141 lt!37295 (_1!1111 lt!37188)))))

(declare-fun b!80754 () Bool)

(assert (=> b!80754 (= e!52737 (contains!753 lt!37295 (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(assert (= (and d!19721 res!42013) b!80753))

(assert (= (and b!80753 res!42014) b!80754))

(assert (=> d!19721 m!81809))

(declare-fun m!82145 () Bool)

(assert (=> d!19721 m!82145))

(declare-fun m!82147 () Bool)

(assert (=> d!19721 m!82147))

(declare-fun m!82149 () Bool)

(assert (=> b!80753 m!82149))

(declare-fun m!82151 () Bool)

(assert (=> b!80754 m!82151))

(assert (=> d!19659 d!19721))

(declare-fun d!19723 () Bool)

(declare-fun e!52739 () Bool)

(assert (=> d!19723 e!52739))

(declare-fun res!42015 () Bool)

(assert (=> d!19723 (=> (not res!42015) (not e!52739))))

(declare-fun lt!37536 () List!1538)

(assert (=> d!19723 (= res!42015 (isStrictlySorted!291 lt!37536))))

(declare-fun e!52738 () List!1538)

(assert (=> d!19723 (= lt!37536 e!52738)))

(declare-fun c!12667 () Bool)

(assert (=> d!19723 (= c!12667 (and ((_ is Cons!1534) (toList!751 lt!37196)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 lt!37188))))))

(assert (=> d!19723 (isStrictlySorted!291 (toList!751 lt!37196))))

(assert (=> d!19723 (= (insertStrictlySorted!58 (toList!751 lt!37196) (_1!1111 lt!37188) (_2!1111 lt!37188)) lt!37536)))

(declare-fun b!80755 () Bool)

(assert (=> b!80755 (= e!52739 (contains!753 lt!37536 (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun bm!7513 () Bool)

(declare-fun call!7516 () List!1538)

(declare-fun call!7517 () List!1538)

(assert (=> bm!7513 (= call!7516 call!7517)))

(declare-fun b!80756 () Bool)

(declare-fun res!42016 () Bool)

(assert (=> b!80756 (=> (not res!42016) (not e!52739))))

(assert (=> b!80756 (= res!42016 (containsKey!141 lt!37536 (_1!1111 lt!37188)))))

(declare-fun b!80757 () Bool)

(declare-fun e!52741 () List!1538)

(assert (=> b!80757 (= e!52741 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37196)) (_1!1111 lt!37188) (_2!1111 lt!37188)))))

(declare-fun b!80758 () Bool)

(assert (=> b!80758 (= e!52738 call!7517)))

(declare-fun bm!7514 () Bool)

(assert (=> bm!7514 (= call!7517 ($colon$colon!69 e!52741 (ite c!12667 (h!2123 (toList!751 lt!37196)) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188)))))))

(declare-fun c!12665 () Bool)

(assert (=> bm!7514 (= c!12665 c!12667)))

(declare-fun c!12666 () Bool)

(declare-fun b!80759 () Bool)

(declare-fun c!12664 () Bool)

(assert (=> b!80759 (= e!52741 (ite c!12664 (t!5209 (toList!751 lt!37196)) (ite c!12666 (Cons!1534 (h!2123 (toList!751 lt!37196)) (t!5209 (toList!751 lt!37196))) Nil!1535)))))

(declare-fun b!80760 () Bool)

(declare-fun e!52742 () List!1538)

(assert (=> b!80760 (= e!52742 call!7516)))

(declare-fun b!80761 () Bool)

(declare-fun e!52740 () List!1538)

(declare-fun call!7518 () List!1538)

(assert (=> b!80761 (= e!52740 call!7518)))

(declare-fun b!80762 () Bool)

(assert (=> b!80762 (= c!12666 (and ((_ is Cons!1534) (toList!751 lt!37196)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 lt!37188))))))

(assert (=> b!80762 (= e!52742 e!52740)))

(declare-fun b!80763 () Bool)

(assert (=> b!80763 (= e!52740 call!7518)))

(declare-fun bm!7515 () Bool)

(assert (=> bm!7515 (= call!7518 call!7516)))

(declare-fun b!80764 () Bool)

(assert (=> b!80764 (= e!52738 e!52742)))

(assert (=> b!80764 (= c!12664 (and ((_ is Cons!1534) (toList!751 lt!37196)) (= (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 lt!37188))))))

(assert (= (and d!19723 c!12667) b!80758))

(assert (= (and d!19723 (not c!12667)) b!80764))

(assert (= (and b!80764 c!12664) b!80760))

(assert (= (and b!80764 (not c!12664)) b!80762))

(assert (= (and b!80762 c!12666) b!80761))

(assert (= (and b!80762 (not c!12666)) b!80763))

(assert (= (or b!80761 b!80763) bm!7515))

(assert (= (or b!80760 bm!7515) bm!7513))

(assert (= (or b!80758 bm!7513) bm!7514))

(assert (= (and bm!7514 c!12665) b!80757))

(assert (= (and bm!7514 (not c!12665)) b!80759))

(assert (= (and d!19723 res!42015) b!80756))

(assert (= (and b!80756 res!42016) b!80755))

(declare-fun m!82153 () Bool)

(assert (=> b!80756 m!82153))

(declare-fun m!82155 () Bool)

(assert (=> bm!7514 m!82155))

(declare-fun m!82157 () Bool)

(assert (=> d!19723 m!82157))

(declare-fun m!82159 () Bool)

(assert (=> d!19723 m!82159))

(declare-fun m!82161 () Bool)

(assert (=> b!80757 m!82161))

(declare-fun m!82163 () Bool)

(assert (=> b!80755 m!82163))

(assert (=> d!19659 d!19723))

(assert (=> b!80365 d!19641))

(declare-fun d!19725 () Bool)

(declare-fun e!52743 () Bool)

(assert (=> d!19725 e!52743))

(declare-fun res!42017 () Bool)

(assert (=> d!19725 (=> res!42017 e!52743)))

(declare-fun lt!37539 () Bool)

(assert (=> d!19725 (= res!42017 (not lt!37539))))

(declare-fun lt!37538 () Bool)

(assert (=> d!19725 (= lt!37539 lt!37538)))

(declare-fun lt!37537 () Unit!2350)

(declare-fun e!52744 () Unit!2350)

(assert (=> d!19725 (= lt!37537 e!52744)))

(declare-fun c!12668 () Bool)

(assert (=> d!19725 (= c!12668 lt!37538)))

(assert (=> d!19725 (= lt!37538 (containsKey!141 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!19725 (= (contains!750 lt!37326 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!37539)))

(declare-fun b!80765 () Bool)

(declare-fun lt!37540 () Unit!2350)

(assert (=> b!80765 (= e!52744 lt!37540)))

(assert (=> b!80765 (= lt!37540 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80765 (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!80766 () Bool)

(declare-fun Unit!2366 () Unit!2350)

(assert (=> b!80766 (= e!52744 Unit!2366)))

(declare-fun b!80767 () Bool)

(assert (=> b!80767 (= e!52743 (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!19725 c!12668) b!80765))

(assert (= (and d!19725 (not c!12668)) b!80766))

(assert (= (and d!19725 (not res!42017)) b!80767))

(assert (=> d!19725 m!81727))

(declare-fun m!82165 () Bool)

(assert (=> d!19725 m!82165))

(assert (=> b!80765 m!81727))

(declare-fun m!82167 () Bool)

(assert (=> b!80765 m!82167))

(assert (=> b!80765 m!81727))

(assert (=> b!80765 m!81983))

(assert (=> b!80765 m!81983))

(declare-fun m!82169 () Bool)

(assert (=> b!80765 m!82169))

(assert (=> b!80767 m!81727))

(assert (=> b!80767 m!81983))

(assert (=> b!80767 m!81983))

(assert (=> b!80767 m!82169))

(assert (=> b!80433 d!19725))

(assert (=> bm!7483 d!19669))

(declare-fun d!19727 () Bool)

(assert (=> d!19727 (= (inRange!0 (ite c!12612 (ite c!12614 (index!3140 lt!37482) (ite c!12609 (index!3139 lt!37472) (index!3142 lt!37472))) (ite c!12613 (index!3140 lt!37471) (ite c!12616 (index!3139 lt!37467) (index!3142 lt!37467)))) (mask!6299 newMap!16)) (and (bvsge (ite c!12612 (ite c!12614 (index!3140 lt!37482) (ite c!12609 (index!3139 lt!37472) (index!3142 lt!37472))) (ite c!12613 (index!3140 lt!37471) (ite c!12616 (index!3139 lt!37467) (index!3142 lt!37467)))) #b00000000000000000000000000000000) (bvslt (ite c!12612 (ite c!12614 (index!3140 lt!37482) (ite c!12609 (index!3139 lt!37472) (index!3142 lt!37472))) (ite c!12613 (index!3140 lt!37471) (ite c!12616 (index!3139 lt!37467) (index!3142 lt!37467)))) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7490 d!19727))

(declare-fun d!19729 () Bool)

(assert (=> d!19729 (= (apply!80 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37374) (apply!80 lt!37381 lt!37374))))

(declare-fun lt!37543 () Unit!2350)

(declare-fun choose!479 (ListLongMap!1471 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2350)

(assert (=> d!19729 (= lt!37543 (choose!479 lt!37381 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37374))))

(declare-fun e!52747 () Bool)

(assert (=> d!19729 e!52747))

(declare-fun res!42020 () Bool)

(assert (=> d!19729 (=> (not res!42020) (not e!52747))))

(assert (=> d!19729 (= res!42020 (contains!750 lt!37381 lt!37374))))

(assert (=> d!19729 (= (addApplyDifferent!56 lt!37381 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37374) lt!37543)))

(declare-fun b!80771 () Bool)

(assert (=> b!80771 (= e!52747 (not (= lt!37374 lt!37389)))))

(assert (= (and d!19729 res!42020) b!80771))

(assert (=> d!19729 m!81889))

(assert (=> d!19729 m!81911))

(declare-fun m!82171 () Bool)

(assert (=> d!19729 m!82171))

(assert (=> d!19729 m!81905))

(assert (=> d!19729 m!81889))

(declare-fun m!82173 () Bool)

(assert (=> d!19729 m!82173))

(assert (=> b!80488 d!19729))

(declare-fun d!19731 () Bool)

(assert (=> d!19731 (= (apply!80 lt!37382 lt!37380) (get!1198 (getValueByKey!137 (toList!751 lt!37382) lt!37380)))))

(declare-fun bs!3402 () Bool)

(assert (= bs!3402 d!19731))

(declare-fun m!82175 () Bool)

(assert (=> bs!3402 m!82175))

(assert (=> bs!3402 m!82175))

(declare-fun m!82177 () Bool)

(assert (=> bs!3402 m!82177))

(assert (=> b!80488 d!19731))

(declare-fun d!19733 () Bool)

(assert (=> d!19733 (contains!750 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37392)))

(declare-fun lt!37546 () Unit!2350)

(declare-fun choose!480 (ListLongMap!1471 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2350)

(assert (=> d!19733 (= lt!37546 (choose!480 lt!37384 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37392))))

(assert (=> d!19733 (contains!750 lt!37384 lt!37392)))

(assert (=> d!19733 (= (addStillContains!56 lt!37384 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37392) lt!37546)))

(declare-fun bs!3403 () Bool)

(assert (= bs!3403 d!19733))

(assert (=> bs!3403 m!81899))

(assert (=> bs!3403 m!81899))

(assert (=> bs!3403 m!81901))

(declare-fun m!82179 () Bool)

(assert (=> bs!3403 m!82179))

(declare-fun m!82181 () Bool)

(assert (=> bs!3403 m!82181))

(assert (=> b!80488 d!19733))

(declare-fun d!19735 () Bool)

(assert (=> d!19735 (= (apply!80 lt!37379 lt!37375) (get!1198 (getValueByKey!137 (toList!751 lt!37379) lt!37375)))))

(declare-fun bs!3404 () Bool)

(assert (= bs!3404 d!19735))

(declare-fun m!82183 () Bool)

(assert (=> bs!3404 m!82183))

(assert (=> bs!3404 m!82183))

(declare-fun m!82185 () Bool)

(assert (=> bs!3404 m!82185))

(assert (=> b!80488 d!19735))

(declare-fun d!19737 () Bool)

(declare-fun e!52748 () Bool)

(assert (=> d!19737 e!52748))

(declare-fun res!42021 () Bool)

(assert (=> d!19737 (=> res!42021 e!52748)))

(declare-fun lt!37549 () Bool)

(assert (=> d!19737 (= res!42021 (not lt!37549))))

(declare-fun lt!37548 () Bool)

(assert (=> d!19737 (= lt!37549 lt!37548)))

(declare-fun lt!37547 () Unit!2350)

(declare-fun e!52749 () Unit!2350)

(assert (=> d!19737 (= lt!37547 e!52749)))

(declare-fun c!12669 () Bool)

(assert (=> d!19737 (= c!12669 lt!37548)))

(assert (=> d!19737 (= lt!37548 (containsKey!141 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392))))

(assert (=> d!19737 (= (contains!750 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37392) lt!37549)))

(declare-fun b!80773 () Bool)

(declare-fun lt!37550 () Unit!2350)

(assert (=> b!80773 (= e!52749 lt!37550)))

(assert (=> b!80773 (= lt!37550 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392))))

(assert (=> b!80773 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392))))

(declare-fun b!80774 () Bool)

(declare-fun Unit!2367 () Unit!2350)

(assert (=> b!80774 (= e!52749 Unit!2367)))

(declare-fun b!80775 () Bool)

(assert (=> b!80775 (= e!52748 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392)))))

(assert (= (and d!19737 c!12669) b!80773))

(assert (= (and d!19737 (not c!12669)) b!80774))

(assert (= (and d!19737 (not res!42021)) b!80775))

(declare-fun m!82187 () Bool)

(assert (=> d!19737 m!82187))

(declare-fun m!82189 () Bool)

(assert (=> b!80773 m!82189))

(declare-fun m!82191 () Bool)

(assert (=> b!80773 m!82191))

(assert (=> b!80773 m!82191))

(declare-fun m!82193 () Bool)

(assert (=> b!80773 m!82193))

(assert (=> b!80775 m!82191))

(assert (=> b!80775 m!82191))

(assert (=> b!80775 m!82193))

(assert (=> b!80488 d!19737))

(declare-fun d!19739 () Bool)

(assert (=> d!19739 (= (apply!80 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37380) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37380)))))

(declare-fun bs!3405 () Bool)

(assert (= bs!3405 d!19739))

(declare-fun m!82195 () Bool)

(assert (=> bs!3405 m!82195))

(assert (=> bs!3405 m!82195))

(declare-fun m!82197 () Bool)

(assert (=> bs!3405 m!82197))

(assert (=> b!80488 d!19739))

(declare-fun d!19741 () Bool)

(declare-fun e!52750 () Bool)

(assert (=> d!19741 e!52750))

(declare-fun res!42022 () Bool)

(assert (=> d!19741 (=> (not res!42022) (not e!52750))))

(declare-fun lt!37554 () ListLongMap!1471)

(assert (=> d!19741 (= res!42022 (contains!750 lt!37554 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!37551 () List!1538)

(assert (=> d!19741 (= lt!37554 (ListLongMap!1472 lt!37551))))

(declare-fun lt!37552 () Unit!2350)

(declare-fun lt!37553 () Unit!2350)

(assert (=> d!19741 (= lt!37552 lt!37553)))

(assert (=> d!19741 (= (getValueByKey!137 lt!37551 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19741 (= lt!37553 (lemmaContainsTupThenGetReturnValue!56 lt!37551 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19741 (= lt!37551 (insertStrictlySorted!58 (toList!751 lt!37381) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19741 (= (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37554)))

(declare-fun b!80776 () Bool)

(declare-fun res!42023 () Bool)

(assert (=> b!80776 (=> (not res!42023) (not e!52750))))

(assert (=> b!80776 (= res!42023 (= (getValueByKey!137 (toList!751 lt!37554) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!80777 () Bool)

(assert (=> b!80777 (= e!52750 (contains!753 (toList!751 lt!37554) (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19741 res!42022) b!80776))

(assert (= (and b!80776 res!42023) b!80777))

(declare-fun m!82199 () Bool)

(assert (=> d!19741 m!82199))

(declare-fun m!82201 () Bool)

(assert (=> d!19741 m!82201))

(declare-fun m!82203 () Bool)

(assert (=> d!19741 m!82203))

(declare-fun m!82205 () Bool)

(assert (=> d!19741 m!82205))

(declare-fun m!82207 () Bool)

(assert (=> b!80776 m!82207))

(declare-fun m!82209 () Bool)

(assert (=> b!80777 m!82209))

(assert (=> b!80488 d!19741))

(declare-fun d!19743 () Bool)

(assert (=> d!19743 (= (apply!80 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37375) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37375)))))

(declare-fun bs!3406 () Bool)

(assert (= bs!3406 d!19743))

(declare-fun m!82211 () Bool)

(assert (=> bs!3406 m!82211))

(assert (=> bs!3406 m!82211))

(declare-fun m!82213 () Bool)

(assert (=> bs!3406 m!82213))

(assert (=> b!80488 d!19743))

(declare-fun d!19745 () Bool)

(assert (=> d!19745 (= (apply!80 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37380) (apply!80 lt!37382 lt!37380))))

(declare-fun lt!37555 () Unit!2350)

(assert (=> d!19745 (= lt!37555 (choose!479 lt!37382 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37380))))

(declare-fun e!52751 () Bool)

(assert (=> d!19745 e!52751))

(declare-fun res!42024 () Bool)

(assert (=> d!19745 (=> (not res!42024) (not e!52751))))

(assert (=> d!19745 (= res!42024 (contains!750 lt!37382 lt!37380))))

(assert (=> d!19745 (= (addApplyDifferent!56 lt!37382 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37380) lt!37555)))

(declare-fun b!80778 () Bool)

(assert (=> b!80778 (= e!52751 (not (= lt!37380 lt!37378)))))

(assert (= (and d!19745 res!42024) b!80778))

(assert (=> d!19745 m!81893))

(assert (=> d!19745 m!81907))

(declare-fun m!82215 () Bool)

(assert (=> d!19745 m!82215))

(assert (=> d!19745 m!81903))

(assert (=> d!19745 m!81893))

(declare-fun m!82217 () Bool)

(assert (=> d!19745 m!82217))

(assert (=> b!80488 d!19745))

(declare-fun d!19747 () Bool)

(declare-fun e!52752 () Bool)

(assert (=> d!19747 e!52752))

(declare-fun res!42025 () Bool)

(assert (=> d!19747 (=> (not res!42025) (not e!52752))))

(declare-fun lt!37559 () ListLongMap!1471)

(assert (=> d!19747 (= res!42025 (contains!750 lt!37559 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!37556 () List!1538)

(assert (=> d!19747 (= lt!37559 (ListLongMap!1472 lt!37556))))

(declare-fun lt!37557 () Unit!2350)

(declare-fun lt!37558 () Unit!2350)

(assert (=> d!19747 (= lt!37557 lt!37558)))

(assert (=> d!19747 (= (getValueByKey!137 lt!37556 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19747 (= lt!37558 (lemmaContainsTupThenGetReturnValue!56 lt!37556 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19747 (= lt!37556 (insertStrictlySorted!58 (toList!751 lt!37382) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19747 (= (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37559)))

(declare-fun b!80779 () Bool)

(declare-fun res!42026 () Bool)

(assert (=> b!80779 (=> (not res!42026) (not e!52752))))

(assert (=> b!80779 (= res!42026 (= (getValueByKey!137 (toList!751 lt!37559) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!80780 () Bool)

(assert (=> b!80780 (= e!52752 (contains!753 (toList!751 lt!37559) (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19747 res!42025) b!80779))

(assert (= (and b!80779 res!42026) b!80780))

(declare-fun m!82219 () Bool)

(assert (=> d!19747 m!82219))

(declare-fun m!82221 () Bool)

(assert (=> d!19747 m!82221))

(declare-fun m!82223 () Bool)

(assert (=> d!19747 m!82223))

(declare-fun m!82225 () Bool)

(assert (=> d!19747 m!82225))

(declare-fun m!82227 () Bool)

(assert (=> b!80779 m!82227))

(declare-fun m!82229 () Bool)

(assert (=> b!80780 m!82229))

(assert (=> b!80488 d!19747))

(declare-fun d!19749 () Bool)

(assert (=> d!19749 (= (apply!80 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37374) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37374)))))

(declare-fun bs!3407 () Bool)

(assert (= bs!3407 d!19749))

(declare-fun m!82231 () Bool)

(assert (=> bs!3407 m!82231))

(assert (=> bs!3407 m!82231))

(declare-fun m!82233 () Bool)

(assert (=> bs!3407 m!82233))

(assert (=> b!80488 d!19749))

(declare-fun d!19751 () Bool)

(assert (=> d!19751 (= (apply!80 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37375) (apply!80 lt!37379 lt!37375))))

(declare-fun lt!37560 () Unit!2350)

(assert (=> d!19751 (= lt!37560 (choose!479 lt!37379 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37375))))

(declare-fun e!52753 () Bool)

(assert (=> d!19751 e!52753))

(declare-fun res!42027 () Bool)

(assert (=> d!19751 (=> (not res!42027) (not e!52753))))

(assert (=> d!19751 (= res!42027 (contains!750 lt!37379 lt!37375))))

(assert (=> d!19751 (= (addApplyDifferent!56 lt!37379 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37375) lt!37560)))

(declare-fun b!80781 () Bool)

(assert (=> b!80781 (= e!52753 (not (= lt!37375 lt!37388)))))

(assert (= (and d!19751 res!42027) b!80781))

(assert (=> d!19751 m!81885))

(assert (=> d!19751 m!81887))

(declare-fun m!82235 () Bool)

(assert (=> d!19751 m!82235))

(assert (=> d!19751 m!81895))

(assert (=> d!19751 m!81885))

(declare-fun m!82237 () Bool)

(assert (=> d!19751 m!82237))

(assert (=> b!80488 d!19751))

(declare-fun d!19753 () Bool)

(assert (=> d!19753 (= (apply!80 lt!37381 lt!37374) (get!1198 (getValueByKey!137 (toList!751 lt!37381) lt!37374)))))

(declare-fun bs!3408 () Bool)

(assert (= bs!3408 d!19753))

(declare-fun m!82239 () Bool)

(assert (=> bs!3408 m!82239))

(assert (=> bs!3408 m!82239))

(declare-fun m!82241 () Bool)

(assert (=> bs!3408 m!82241))

(assert (=> b!80488 d!19753))

(assert (=> b!80488 d!19667))

(declare-fun d!19755 () Bool)

(declare-fun e!52754 () Bool)

(assert (=> d!19755 e!52754))

(declare-fun res!42028 () Bool)

(assert (=> d!19755 (=> (not res!42028) (not e!52754))))

(declare-fun lt!37564 () ListLongMap!1471)

(assert (=> d!19755 (= res!42028 (contains!750 lt!37564 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!37561 () List!1538)

(assert (=> d!19755 (= lt!37564 (ListLongMap!1472 lt!37561))))

(declare-fun lt!37562 () Unit!2350)

(declare-fun lt!37563 () Unit!2350)

(assert (=> d!19755 (= lt!37562 lt!37563)))

(assert (=> d!19755 (= (getValueByKey!137 lt!37561 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19755 (= lt!37563 (lemmaContainsTupThenGetReturnValue!56 lt!37561 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19755 (= lt!37561 (insertStrictlySorted!58 (toList!751 lt!37384) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19755 (= (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37564)))

(declare-fun b!80782 () Bool)

(declare-fun res!42029 () Bool)

(assert (=> b!80782 (=> (not res!42029) (not e!52754))))

(assert (=> b!80782 (= res!42029 (= (getValueByKey!137 (toList!751 lt!37564) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!80783 () Bool)

(assert (=> b!80783 (= e!52754 (contains!753 (toList!751 lt!37564) (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19755 res!42028) b!80782))

(assert (= (and b!80782 res!42029) b!80783))

(declare-fun m!82243 () Bool)

(assert (=> d!19755 m!82243))

(declare-fun m!82245 () Bool)

(assert (=> d!19755 m!82245))

(declare-fun m!82247 () Bool)

(assert (=> d!19755 m!82247))

(declare-fun m!82249 () Bool)

(assert (=> d!19755 m!82249))

(declare-fun m!82251 () Bool)

(assert (=> b!80782 m!82251))

(declare-fun m!82253 () Bool)

(assert (=> b!80783 m!82253))

(assert (=> b!80488 d!19755))

(declare-fun d!19757 () Bool)

(declare-fun e!52755 () Bool)

(assert (=> d!19757 e!52755))

(declare-fun res!42030 () Bool)

(assert (=> d!19757 (=> (not res!42030) (not e!52755))))

(declare-fun lt!37568 () ListLongMap!1471)

(assert (=> d!19757 (= res!42030 (contains!750 lt!37568 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!37565 () List!1538)

(assert (=> d!19757 (= lt!37568 (ListLongMap!1472 lt!37565))))

(declare-fun lt!37566 () Unit!2350)

(declare-fun lt!37567 () Unit!2350)

(assert (=> d!19757 (= lt!37566 lt!37567)))

(assert (=> d!19757 (= (getValueByKey!137 lt!37565 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19757 (= lt!37567 (lemmaContainsTupThenGetReturnValue!56 lt!37565 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19757 (= lt!37565 (insertStrictlySorted!58 (toList!751 lt!37379) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19757 (= (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37568)))

(declare-fun b!80784 () Bool)

(declare-fun res!42031 () Bool)

(assert (=> b!80784 (=> (not res!42031) (not e!52755))))

(assert (=> b!80784 (= res!42031 (= (getValueByKey!137 (toList!751 lt!37568) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!80785 () Bool)

(assert (=> b!80785 (= e!52755 (contains!753 (toList!751 lt!37568) (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19757 res!42030) b!80784))

(assert (= (and b!80784 res!42031) b!80785))

(declare-fun m!82255 () Bool)

(assert (=> d!19757 m!82255))

(declare-fun m!82257 () Bool)

(assert (=> d!19757 m!82257))

(declare-fun m!82259 () Bool)

(assert (=> d!19757 m!82259))

(declare-fun m!82261 () Bool)

(assert (=> d!19757 m!82261))

(declare-fun m!82263 () Bool)

(assert (=> b!80784 m!82263))

(declare-fun m!82265 () Bool)

(assert (=> b!80785 m!82265))

(assert (=> b!80488 d!19757))

(declare-fun d!19759 () Bool)

(declare-fun e!52756 () Bool)

(assert (=> d!19759 e!52756))

(declare-fun res!42032 () Bool)

(assert (=> d!19759 (=> (not res!42032) (not e!52756))))

(declare-fun lt!37572 () ListLongMap!1471)

(assert (=> d!19759 (= res!42032 (contains!750 lt!37572 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!37569 () List!1538)

(assert (=> d!19759 (= lt!37572 (ListLongMap!1472 lt!37569))))

(declare-fun lt!37570 () Unit!2350)

(declare-fun lt!37571 () Unit!2350)

(assert (=> d!19759 (= lt!37570 lt!37571)))

(assert (=> d!19759 (= (getValueByKey!137 lt!37569 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19759 (= lt!37571 (lemmaContainsTupThenGetReturnValue!56 lt!37569 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19759 (= lt!37569 (insertStrictlySorted!58 (toList!751 call!7492) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19759 (= (+!111 call!7492 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!37572)))

(declare-fun b!80786 () Bool)

(declare-fun res!42033 () Bool)

(assert (=> b!80786 (=> (not res!42033) (not e!52756))))

(assert (=> b!80786 (= res!42033 (= (getValueByKey!137 (toList!751 lt!37572) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!80787 () Bool)

(assert (=> b!80787 (= e!52756 (contains!753 (toList!751 lt!37572) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!19759 res!42032) b!80786))

(assert (= (and b!80786 res!42033) b!80787))

(declare-fun m!82267 () Bool)

(assert (=> d!19759 m!82267))

(declare-fun m!82269 () Bool)

(assert (=> d!19759 m!82269))

(declare-fun m!82271 () Bool)

(assert (=> d!19759 m!82271))

(declare-fun m!82273 () Bool)

(assert (=> d!19759 m!82273))

(declare-fun m!82275 () Bool)

(assert (=> b!80786 m!82275))

(declare-fun m!82277 () Bool)

(assert (=> b!80787 m!82277))

(assert (=> b!80595 d!19759))

(declare-fun b!80797 () Bool)

(declare-fun res!42042 () Bool)

(declare-fun e!52759 () Bool)

(assert (=> b!80797 (=> (not res!42042) (not e!52759))))

(declare-fun size!2146 (LongMapFixedSize!738) (_ BitVec 32))

(assert (=> b!80797 (= res!42042 (bvsge (size!2146 newMap!16) (_size!418 newMap!16)))))

(declare-fun b!80798 () Bool)

(declare-fun res!42043 () Bool)

(assert (=> b!80798 (=> (not res!42043) (not e!52759))))

(assert (=> b!80798 (= res!42043 (= (size!2146 newMap!16) (bvadd (_size!418 newMap!16) (bvsdiv (bvadd (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!19761 () Bool)

(declare-fun res!42044 () Bool)

(assert (=> d!19761 (=> (not res!42044) (not e!52759))))

(assert (=> d!19761 (= res!42044 (validMask!0 (mask!6299 newMap!16)))))

(assert (=> d!19761 (= (simpleValid!55 newMap!16) e!52759)))

(declare-fun b!80796 () Bool)

(declare-fun res!42045 () Bool)

(assert (=> b!80796 (=> (not res!42045) (not e!52759))))

(assert (=> b!80796 (= res!42045 (and (= (size!2143 (_values!2276 newMap!16)) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001)) (= (size!2142 (_keys!3957 newMap!16)) (size!2143 (_values!2276 newMap!16))) (bvsge (_size!418 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!418 newMap!16) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!80799 () Bool)

(assert (=> b!80799 (= e!52759 (and (bvsge (extraKeys!2140 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2140 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!418 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!19761 res!42044) b!80796))

(assert (= (and b!80796 res!42045) b!80797))

(assert (= (and b!80797 res!42042) b!80798))

(assert (= (and b!80798 res!42043) b!80799))

(declare-fun m!82279 () Bool)

(assert (=> b!80797 m!82279))

(assert (=> b!80798 m!82279))

(assert (=> d!19761 m!82043))

(assert (=> d!19631 d!19761))

(declare-fun d!19763 () Bool)

(declare-fun res!42050 () Bool)

(declare-fun e!52766 () Bool)

(assert (=> d!19763 (=> res!42050 e!52766)))

(assert (=> d!19763 (= res!42050 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!19763 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 newMap!16) (mask!6299 newMap!16)) e!52766)))

(declare-fun b!80808 () Bool)

(declare-fun e!52768 () Bool)

(assert (=> b!80808 (= e!52766 e!52768)))

(declare-fun c!12672 () Bool)

(assert (=> b!80808 (= c!12672 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80809 () Bool)

(declare-fun e!52767 () Bool)

(assert (=> b!80809 (= e!52768 e!52767)))

(declare-fun lt!37580 () (_ BitVec 64))

(assert (=> b!80809 (= lt!37580 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37581 () Unit!2350)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3988 (_ BitVec 64) (_ BitVec 32)) Unit!2350)

(assert (=> b!80809 (= lt!37581 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3957 newMap!16) lt!37580 #b00000000000000000000000000000000))))

(assert (=> b!80809 (arrayContainsKey!0 (_keys!3957 newMap!16) lt!37580 #b00000000000000000000000000000000)))

(declare-fun lt!37579 () Unit!2350)

(assert (=> b!80809 (= lt!37579 lt!37581)))

(declare-fun res!42051 () Bool)

(assert (=> b!80809 (= res!42051 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (_keys!3957 newMap!16) (mask!6299 newMap!16)) (Found!251 #b00000000000000000000000000000000)))))

(assert (=> b!80809 (=> (not res!42051) (not e!52767))))

(declare-fun b!80810 () Bool)

(declare-fun call!7521 () Bool)

(assert (=> b!80810 (= e!52767 call!7521)))

(declare-fun bm!7518 () Bool)

(assert (=> bm!7518 (= call!7521 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun b!80811 () Bool)

(assert (=> b!80811 (= e!52768 call!7521)))

(assert (= (and d!19763 (not res!42050)) b!80808))

(assert (= (and b!80808 c!12672) b!80809))

(assert (= (and b!80808 (not c!12672)) b!80811))

(assert (= (and b!80809 res!42051) b!80810))

(assert (= (or b!80810 b!80811) bm!7518))

(assert (=> b!80808 m!81991))

(assert (=> b!80808 m!81991))

(assert (=> b!80808 m!82035))

(assert (=> b!80809 m!81991))

(declare-fun m!82281 () Bool)

(assert (=> b!80809 m!82281))

(declare-fun m!82283 () Bool)

(assert (=> b!80809 m!82283))

(assert (=> b!80809 m!81991))

(declare-fun m!82285 () Bool)

(assert (=> b!80809 m!82285))

(declare-fun m!82287 () Bool)

(assert (=> bm!7518 m!82287))

(assert (=> b!80347 d!19763))

(declare-fun d!19765 () Bool)

(declare-fun res!42056 () Bool)

(declare-fun e!52773 () Bool)

(assert (=> d!19765 (=> res!42056 e!52773)))

(assert (=> d!19765 (= res!42056 (and ((_ is Cons!1534) (toList!751 lt!37199)) (= (_1!1111 (h!2123 (toList!751 lt!37199))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (=> d!19765 (= (containsKey!141 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) e!52773)))

(declare-fun b!80816 () Bool)

(declare-fun e!52774 () Bool)

(assert (=> b!80816 (= e!52773 e!52774)))

(declare-fun res!42057 () Bool)

(assert (=> b!80816 (=> (not res!42057) (not e!52774))))

(assert (=> b!80816 (= res!42057 (and (or (not ((_ is Cons!1534) (toList!751 lt!37199))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37199))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))) ((_ is Cons!1534) (toList!751 lt!37199)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37199))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(declare-fun b!80817 () Bool)

(assert (=> b!80817 (= e!52774 (containsKey!141 (t!5209 (toList!751 lt!37199)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (= (and d!19765 (not res!42056)) b!80816))

(assert (= (and b!80816 res!42057) b!80817))

(assert (=> b!80817 m!81585))

(declare-fun m!82289 () Bool)

(assert (=> b!80817 m!82289))

(assert (=> d!19673 d!19765))

(declare-fun b!80819 () Bool)

(declare-fun e!52775 () Option!143)

(declare-fun e!52776 () Option!143)

(assert (=> b!80819 (= e!52775 e!52776)))

(declare-fun c!12674 () Bool)

(assert (=> b!80819 (= c!12674 (and ((_ is Cons!1534) (toList!751 lt!37290)) (not (= (_1!1111 (h!2123 (toList!751 lt!37290))) (_1!1111 lt!37188)))))))

(declare-fun d!19767 () Bool)

(declare-fun c!12673 () Bool)

(assert (=> d!19767 (= c!12673 (and ((_ is Cons!1534) (toList!751 lt!37290)) (= (_1!1111 (h!2123 (toList!751 lt!37290))) (_1!1111 lt!37188))))))

(assert (=> d!19767 (= (getValueByKey!137 (toList!751 lt!37290) (_1!1111 lt!37188)) e!52775)))

(declare-fun b!80821 () Bool)

(assert (=> b!80821 (= e!52776 None!141)))

(declare-fun b!80820 () Bool)

(assert (=> b!80820 (= e!52776 (getValueByKey!137 (t!5209 (toList!751 lt!37290)) (_1!1111 lt!37188)))))

(declare-fun b!80818 () Bool)

(assert (=> b!80818 (= e!52775 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37290)))))))

(assert (= (and d!19767 c!12673) b!80818))

(assert (= (and d!19767 (not c!12673)) b!80819))

(assert (= (and b!80819 c!12674) b!80820))

(assert (= (and b!80819 (not c!12674)) b!80821))

(declare-fun m!82291 () Bool)

(assert (=> b!80820 m!82291))

(assert (=> b!80390 d!19767))

(declare-fun d!19769 () Bool)

(assert (=> d!19769 (= (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80492 d!19769))

(assert (=> d!19671 d!19661))

(declare-fun b!80823 () Bool)

(declare-fun e!52777 () Option!143)

(declare-fun e!52778 () Option!143)

(assert (=> b!80823 (= e!52777 e!52778)))

(declare-fun c!12676 () Bool)

(assert (=> b!80823 (= c!12676 (and ((_ is Cons!1534) (toList!751 lt!37294)) (not (= (_1!1111 (h!2123 (toList!751 lt!37294))) (_1!1111 lt!37202)))))))

(declare-fun d!19771 () Bool)

(declare-fun c!12675 () Bool)

(assert (=> d!19771 (= c!12675 (and ((_ is Cons!1534) (toList!751 lt!37294)) (= (_1!1111 (h!2123 (toList!751 lt!37294))) (_1!1111 lt!37202))))))

(assert (=> d!19771 (= (getValueByKey!137 (toList!751 lt!37294) (_1!1111 lt!37202)) e!52777)))

(declare-fun b!80825 () Bool)

(assert (=> b!80825 (= e!52778 None!141)))

(declare-fun b!80824 () Bool)

(assert (=> b!80824 (= e!52778 (getValueByKey!137 (t!5209 (toList!751 lt!37294)) (_1!1111 lt!37202)))))

(declare-fun b!80822 () Bool)

(assert (=> b!80822 (= e!52777 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37294)))))))

(assert (= (and d!19771 c!12675) b!80822))

(assert (= (and d!19771 (not c!12675)) b!80823))

(assert (= (and b!80823 c!12676) b!80824))

(assert (= (and b!80823 (not c!12676)) b!80825))

(declare-fun m!82293 () Bool)

(assert (=> b!80824 m!82293))

(assert (=> b!80392 d!19771))

(declare-fun b!80827 () Bool)

(declare-fun e!52779 () Option!143)

(declare-fun e!52780 () Option!143)

(assert (=> b!80827 (= e!52779 e!52780)))

(declare-fun c!12678 () Bool)

(assert (=> b!80827 (= c!12678 (and ((_ is Cons!1534) (toList!751 lt!37298)) (not (= (_1!1111 (h!2123 (toList!751 lt!37298))) (_1!1111 lt!37188)))))))

(declare-fun d!19773 () Bool)

(declare-fun c!12677 () Bool)

(assert (=> d!19773 (= c!12677 (and ((_ is Cons!1534) (toList!751 lt!37298)) (= (_1!1111 (h!2123 (toList!751 lt!37298))) (_1!1111 lt!37188))))))

(assert (=> d!19773 (= (getValueByKey!137 (toList!751 lt!37298) (_1!1111 lt!37188)) e!52779)))

(declare-fun b!80829 () Bool)

(assert (=> b!80829 (= e!52780 None!141)))

(declare-fun b!80828 () Bool)

(assert (=> b!80828 (= e!52780 (getValueByKey!137 (t!5209 (toList!751 lt!37298)) (_1!1111 lt!37188)))))

(declare-fun b!80826 () Bool)

(assert (=> b!80826 (= e!52779 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37298)))))))

(assert (= (and d!19773 c!12677) b!80826))

(assert (= (and d!19773 (not c!12677)) b!80827))

(assert (= (and b!80827 c!12678) b!80828))

(assert (= (and b!80827 (not c!12678)) b!80829))

(declare-fun m!82295 () Bool)

(assert (=> b!80828 m!82295))

(assert (=> b!80394 d!19773))

(declare-fun d!19775 () Bool)

(declare-fun lt!37584 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!84 (List!1538) (InoxSet tuple2!2202))

(assert (=> d!19775 (= lt!37584 (select (content!84 (toList!751 lt!37278)) lt!37197))))

(declare-fun e!52786 () Bool)

(assert (=> d!19775 (= lt!37584 e!52786)))

(declare-fun res!42063 () Bool)

(assert (=> d!19775 (=> (not res!42063) (not e!52786))))

(assert (=> d!19775 (= res!42063 ((_ is Cons!1534) (toList!751 lt!37278)))))

(assert (=> d!19775 (= (contains!753 (toList!751 lt!37278) lt!37197) lt!37584)))

(declare-fun b!80834 () Bool)

(declare-fun e!52785 () Bool)

(assert (=> b!80834 (= e!52786 e!52785)))

(declare-fun res!42062 () Bool)

(assert (=> b!80834 (=> res!42062 e!52785)))

(assert (=> b!80834 (= res!42062 (= (h!2123 (toList!751 lt!37278)) lt!37197))))

(declare-fun b!80835 () Bool)

(assert (=> b!80835 (= e!52785 (contains!753 (t!5209 (toList!751 lt!37278)) lt!37197))))

(assert (= (and d!19775 res!42063) b!80834))

(assert (= (and b!80834 (not res!42062)) b!80835))

(declare-fun m!82297 () Bool)

(assert (=> d!19775 m!82297))

(declare-fun m!82299 () Bool)

(assert (=> d!19775 m!82299))

(declare-fun m!82301 () Bool)

(assert (=> b!80835 m!82301))

(assert (=> b!80387 d!19775))

(declare-fun d!19777 () Bool)

(declare-fun e!52789 () Bool)

(assert (=> d!19777 e!52789))

(declare-fun res!42068 () Bool)

(assert (=> d!19777 (=> (not res!42068) (not e!52789))))

(declare-fun lt!37590 () SeekEntryResult!251)

(assert (=> d!19777 (= res!42068 ((_ is Found!251) lt!37590))))

(assert (=> d!19777 (= lt!37590 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun lt!37589 () Unit!2350)

(declare-fun choose!481 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) Int) Unit!2350)

(assert (=> d!19777 (= lt!37589 (choose!481 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(assert (=> d!19777 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19777 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)) lt!37589)))

(declare-fun b!80840 () Bool)

(declare-fun res!42069 () Bool)

(assert (=> b!80840 (=> (not res!42069) (not e!52789))))

(assert (=> b!80840 (= res!42069 (inRange!0 (index!3140 lt!37590) (mask!6299 newMap!16)))))

(declare-fun b!80841 () Bool)

(assert (=> b!80841 (= e!52789 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37590)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> b!80841 (and (bvsge (index!3140 lt!37590) #b00000000000000000000000000000000) (bvslt (index!3140 lt!37590) (size!2142 (_keys!3957 newMap!16))))))

(assert (= (and d!19777 res!42068) b!80840))

(assert (= (and b!80840 res!42069) b!80841))

(assert (=> d!19777 m!81585))

(assert (=> d!19777 m!81945))

(assert (=> d!19777 m!81585))

(declare-fun m!82303 () Bool)

(assert (=> d!19777 m!82303))

(assert (=> d!19777 m!82043))

(declare-fun m!82305 () Bool)

(assert (=> b!80840 m!82305))

(declare-fun m!82307 () Bool)

(assert (=> b!80841 m!82307))

(assert (=> bm!7469 d!19777))

(declare-fun d!19779 () Bool)

(declare-fun e!52790 () Bool)

(assert (=> d!19779 e!52790))

(declare-fun res!42070 () Bool)

(assert (=> d!19779 (=> res!42070 e!52790)))

(declare-fun lt!37593 () Bool)

(assert (=> d!19779 (= res!42070 (not lt!37593))))

(declare-fun lt!37592 () Bool)

(assert (=> d!19779 (= lt!37593 lt!37592)))

(declare-fun lt!37591 () Unit!2350)

(declare-fun e!52791 () Unit!2350)

(assert (=> d!19779 (= lt!37591 e!52791)))

(declare-fun c!12679 () Bool)

(assert (=> d!19779 (= c!12679 lt!37592)))

(assert (=> d!19779 (= lt!37592 (containsKey!141 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19779 (= (contains!750 lt!37385 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37593)))

(declare-fun b!80842 () Bool)

(declare-fun lt!37594 () Unit!2350)

(assert (=> b!80842 (= e!52791 lt!37594)))

(assert (=> b!80842 (= lt!37594 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80842 (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80843 () Bool)

(declare-fun Unit!2368 () Unit!2350)

(assert (=> b!80843 (= e!52791 Unit!2368)))

(declare-fun b!80844 () Bool)

(assert (=> b!80844 (= e!52790 (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19779 c!12679) b!80842))

(assert (= (and d!19779 (not c!12679)) b!80843))

(assert (= (and d!19779 (not res!42070)) b!80844))

(declare-fun m!82309 () Bool)

(assert (=> d!19779 m!82309))

(declare-fun m!82311 () Bool)

(assert (=> b!80842 m!82311))

(declare-fun m!82313 () Bool)

(assert (=> b!80842 m!82313))

(assert (=> b!80842 m!82313))

(declare-fun m!82315 () Bool)

(assert (=> b!80842 m!82315))

(assert (=> b!80844 m!82313))

(assert (=> b!80844 m!82313))

(assert (=> b!80844 m!82315))

(assert (=> bm!7416 d!19779))

(declare-fun d!19781 () Bool)

(assert (=> d!19781 (= (apply!80 lt!37385 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!137 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3409 () Bool)

(assert (= bs!3409 d!19781))

(declare-fun m!82317 () Bool)

(assert (=> bs!3409 m!82317))

(assert (=> bs!3409 m!82317))

(declare-fun m!82319 () Bool)

(assert (=> bs!3409 m!82319))

(assert (=> b!80479 d!19781))

(declare-fun d!19783 () Bool)

(assert (=> d!19783 (= (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (and (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80381 d!19783))

(declare-fun d!19785 () Bool)

(assert (=> d!19785 (= (apply!80 lt!37385 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!137 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3410 () Bool)

(assert (= bs!3410 d!19785))

(assert (=> bs!3410 m!82313))

(assert (=> bs!3410 m!82313))

(declare-fun m!82321 () Bool)

(assert (=> bs!3410 m!82321))

(assert (=> b!80495 d!19785))

(declare-fun b!80858 () Bool)

(declare-fun c!12686 () Bool)

(declare-fun lt!37602 () (_ BitVec 64))

(assert (=> b!80858 (= c!12686 (= lt!37602 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52799 () SeekEntryResult!251)

(declare-fun e!52800 () SeekEntryResult!251)

(assert (=> b!80858 (= e!52799 e!52800)))

(declare-fun b!80859 () Bool)

(declare-fun e!52798 () SeekEntryResult!251)

(assert (=> b!80859 (= e!52798 e!52799)))

(declare-fun lt!37603 () SeekEntryResult!251)

(assert (=> b!80859 (= lt!37602 (select (arr!1900 (_keys!3957 newMap!16)) (index!3141 lt!37603)))))

(declare-fun c!12688 () Bool)

(assert (=> b!80859 (= c!12688 (= lt!37602 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!80860 () Bool)

(assert (=> b!80860 (= e!52799 (Found!251 (index!3141 lt!37603)))))

(declare-fun lt!37601 () SeekEntryResult!251)

(declare-fun d!19787 () Bool)

(assert (=> d!19787 (and (or ((_ is Undefined!251) lt!37601) (not ((_ is Found!251) lt!37601)) (and (bvsge (index!3140 lt!37601) #b00000000000000000000000000000000) (bvslt (index!3140 lt!37601) (size!2142 (_keys!3957 newMap!16))))) (or ((_ is Undefined!251) lt!37601) ((_ is Found!251) lt!37601) (not ((_ is MissingZero!251) lt!37601)) (and (bvsge (index!3139 lt!37601) #b00000000000000000000000000000000) (bvslt (index!3139 lt!37601) (size!2142 (_keys!3957 newMap!16))))) (or ((_ is Undefined!251) lt!37601) ((_ is Found!251) lt!37601) ((_ is MissingZero!251) lt!37601) (not ((_ is MissingVacant!251) lt!37601)) (and (bvsge (index!3142 lt!37601) #b00000000000000000000000000000000) (bvslt (index!3142 lt!37601) (size!2142 (_keys!3957 newMap!16))))) (or ((_ is Undefined!251) lt!37601) (ite ((_ is Found!251) lt!37601) (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37601)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (ite ((_ is MissingZero!251) lt!37601) (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3139 lt!37601)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!251) lt!37601) (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3142 lt!37601)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19787 (= lt!37601 e!52798)))

(declare-fun c!12687 () Bool)

(assert (=> d!19787 (= c!12687 (and ((_ is Intermediate!251) lt!37603) (undefined!1063 lt!37603)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3988 (_ BitVec 32)) SeekEntryResult!251)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!19787 (= lt!37603 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (mask!6299 newMap!16)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (=> d!19787 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19787 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)) lt!37601)))

(declare-fun b!80857 () Bool)

(assert (=> b!80857 (= e!52800 (MissingZero!251 (index!3141 lt!37603)))))

(declare-fun b!80861 () Bool)

(assert (=> b!80861 (= e!52798 Undefined!251)))

(declare-fun b!80862 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3988 (_ BitVec 32)) SeekEntryResult!251)

(assert (=> b!80862 (= e!52800 (seekKeyOrZeroReturnVacant!0 (x!11702 lt!37603) (index!3141 lt!37603) (index!3141 lt!37603) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (= (and d!19787 c!12687) b!80861))

(assert (= (and d!19787 (not c!12687)) b!80859))

(assert (= (and b!80859 c!12688) b!80860))

(assert (= (and b!80859 (not c!12688)) b!80858))

(assert (= (and b!80858 c!12686) b!80857))

(assert (= (and b!80858 (not c!12686)) b!80862))

(declare-fun m!82323 () Bool)

(assert (=> b!80859 m!82323))

(declare-fun m!82325 () Bool)

(assert (=> d!19787 m!82325))

(assert (=> d!19787 m!81585))

(declare-fun m!82327 () Bool)

(assert (=> d!19787 m!82327))

(assert (=> d!19787 m!82043))

(assert (=> d!19787 m!81585))

(assert (=> d!19787 m!82325))

(declare-fun m!82329 () Bool)

(assert (=> d!19787 m!82329))

(declare-fun m!82331 () Bool)

(assert (=> d!19787 m!82331))

(declare-fun m!82333 () Bool)

(assert (=> d!19787 m!82333))

(assert (=> b!80862 m!81585))

(declare-fun m!82335 () Bool)

(assert (=> b!80862 m!82335))

(assert (=> bm!7478 d!19787))

(declare-fun b!80863 () Bool)

(declare-fun e!52805 () Bool)

(assert (=> b!80863 (= e!52805 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!80863 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun bm!7519 () Bool)

(declare-fun call!7522 () ListLongMap!1471)

(assert (=> bm!7519 (= call!7522 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun b!80864 () Bool)

(declare-fun e!52803 () ListLongMap!1471)

(declare-fun e!52802 () ListLongMap!1471)

(assert (=> b!80864 (= e!52803 e!52802)))

(declare-fun c!12690 () Bool)

(assert (=> b!80864 (= c!12690 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun d!19789 () Bool)

(declare-fun e!52804 () Bool)

(assert (=> d!19789 e!52804))

(declare-fun res!42071 () Bool)

(assert (=> d!19789 (=> (not res!42071) (not e!52804))))

(declare-fun lt!37609 () ListLongMap!1471)

(assert (=> d!19789 (= res!42071 (not (contains!750 lt!37609 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19789 (= lt!37609 e!52803)))

(declare-fun c!12691 () Bool)

(assert (=> d!19789 (= c!12691 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> d!19789 (validMask!0 (mask!6299 (v!2610 (underlying!284 thiss!992))))))

(assert (=> d!19789 (= (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))) lt!37609)))

(declare-fun b!80865 () Bool)

(declare-fun res!42074 () Bool)

(assert (=> b!80865 (=> (not res!42074) (not e!52804))))

(assert (=> b!80865 (= res!42074 (not (contains!750 lt!37609 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80866 () Bool)

(declare-fun e!52806 () Bool)

(assert (=> b!80866 (= e!52806 (isEmpty!334 lt!37609))))

(declare-fun b!80867 () Bool)

(assert (=> b!80867 (= e!52803 (ListLongMap!1472 Nil!1535))))

(declare-fun b!80868 () Bool)

(assert (=> b!80868 (= e!52806 (= lt!37609 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!80869 () Bool)

(declare-fun e!52801 () Bool)

(assert (=> b!80869 (= e!52804 e!52801)))

(declare-fun c!12692 () Bool)

(assert (=> b!80869 (= c!12692 e!52805)))

(declare-fun res!42072 () Bool)

(assert (=> b!80869 (=> (not res!42072) (not e!52805))))

(assert (=> b!80869 (= res!42072 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!80870 () Bool)

(assert (=> b!80870 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> b!80870 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2143 (_values!2276 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!52807 () Bool)

(assert (=> b!80870 (= e!52807 (= (apply!80 lt!37609 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!80871 () Bool)

(declare-fun lt!37606 () Unit!2350)

(declare-fun lt!37605 () Unit!2350)

(assert (=> b!80871 (= lt!37606 lt!37605)))

(declare-fun lt!37604 () (_ BitVec 64))

(declare-fun lt!37607 () V!3003)

(declare-fun lt!37610 () (_ BitVec 64))

(declare-fun lt!37608 () ListLongMap!1471)

(assert (=> b!80871 (not (contains!750 (+!111 lt!37608 (tuple2!2203 lt!37604 lt!37607)) lt!37610))))

(assert (=> b!80871 (= lt!37605 (addStillNotContains!31 lt!37608 lt!37604 lt!37607 lt!37610))))

(assert (=> b!80871 (= lt!37610 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!80871 (= lt!37607 (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!80871 (= lt!37604 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!80871 (= lt!37608 call!7522)))

(assert (=> b!80871 (= e!52802 (+!111 call!7522 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!80872 () Bool)

(assert (=> b!80872 (= e!52801 e!52807)))

(assert (=> b!80872 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun res!42073 () Bool)

(assert (=> b!80872 (= res!42073 (contains!750 lt!37609 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!80872 (=> (not res!42073) (not e!52807))))

(declare-fun b!80873 () Bool)

(assert (=> b!80873 (= e!52802 call!7522)))

(declare-fun b!80874 () Bool)

(assert (=> b!80874 (= e!52801 e!52806)))

(declare-fun c!12689 () Bool)

(assert (=> b!80874 (= c!12689 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19789 c!12691) b!80867))

(assert (= (and d!19789 (not c!12691)) b!80864))

(assert (= (and b!80864 c!12690) b!80871))

(assert (= (and b!80864 (not c!12690)) b!80873))

(assert (= (or b!80871 b!80873) bm!7519))

(assert (= (and d!19789 res!42071) b!80865))

(assert (= (and b!80865 res!42074) b!80869))

(assert (= (and b!80869 res!42072) b!80863))

(assert (= (and b!80869 c!12692) b!80872))

(assert (= (and b!80869 (not c!12692)) b!80874))

(assert (= (and b!80872 res!42073) b!80870))

(assert (= (and b!80874 c!12689) b!80868))

(assert (= (and b!80874 (not c!12689)) b!80866))

(declare-fun b_lambda!3613 () Bool)

(assert (=> (not b_lambda!3613) (not b!80870)))

(assert (=> b!80870 t!5206))

(declare-fun b_and!4933 () Bool)

(assert (= b_and!4929 (and (=> t!5206 result!2843) b_and!4933)))

(assert (=> b!80870 t!5208))

(declare-fun b_and!4935 () Bool)

(assert (= b_and!4931 (and (=> t!5208 result!2847) b_and!4935)))

(declare-fun b_lambda!3615 () Bool)

(assert (=> (not b_lambda!3615) (not b!80871)))

(assert (=> b!80871 t!5206))

(declare-fun b_and!4937 () Bool)

(assert (= b_and!4933 (and (=> t!5206 result!2843) b_and!4937)))

(assert (=> b!80871 t!5208))

(declare-fun b_and!4939 () Bool)

(assert (= b_and!4935 (and (=> t!5208 result!2847) b_and!4939)))

(declare-fun m!82337 () Bool)

(assert (=> b!80871 m!82337))

(assert (=> b!80871 m!81633))

(declare-fun m!82339 () Bool)

(assert (=> b!80871 m!82339))

(declare-fun m!82341 () Bool)

(assert (=> b!80871 m!82341))

(assert (=> b!80871 m!81633))

(declare-fun m!82343 () Bool)

(assert (=> b!80871 m!82343))

(declare-fun m!82345 () Bool)

(assert (=> b!80871 m!82345))

(declare-fun m!82347 () Bool)

(assert (=> b!80871 m!82347))

(assert (=> b!80871 m!82341))

(assert (=> b!80871 m!82337))

(declare-fun m!82349 () Bool)

(assert (=> b!80871 m!82349))

(declare-fun m!82351 () Bool)

(assert (=> b!80866 m!82351))

(assert (=> b!80870 m!81633))

(assert (=> b!80870 m!82341))

(assert (=> b!80870 m!81633))

(assert (=> b!80870 m!82343))

(assert (=> b!80870 m!82345))

(assert (=> b!80870 m!82341))

(assert (=> b!80870 m!82345))

(declare-fun m!82353 () Bool)

(assert (=> b!80870 m!82353))

(declare-fun m!82355 () Bool)

(assert (=> b!80865 m!82355))

(assert (=> b!80863 m!82345))

(assert (=> b!80863 m!82345))

(declare-fun m!82357 () Bool)

(assert (=> b!80863 m!82357))

(declare-fun m!82359 () Bool)

(assert (=> bm!7519 m!82359))

(declare-fun m!82361 () Bool)

(assert (=> d!19789 m!82361))

(assert (=> d!19789 m!81603))

(assert (=> b!80864 m!82345))

(assert (=> b!80864 m!82345))

(assert (=> b!80864 m!82357))

(assert (=> b!80872 m!82345))

(assert (=> b!80872 m!82345))

(declare-fun m!82363 () Bool)

(assert (=> b!80872 m!82363))

(assert (=> b!80868 m!82359))

(assert (=> bm!7397 d!19789))

(declare-fun d!19791 () Bool)

(declare-fun lt!37611 () Bool)

(assert (=> d!19791 (= lt!37611 (select (content!84 (toList!751 lt!37285)) lt!37202))))

(declare-fun e!52809 () Bool)

(assert (=> d!19791 (= lt!37611 e!52809)))

(declare-fun res!42076 () Bool)

(assert (=> d!19791 (=> (not res!42076) (not e!52809))))

(assert (=> d!19791 (= res!42076 ((_ is Cons!1534) (toList!751 lt!37285)))))

(assert (=> d!19791 (= (contains!753 (toList!751 lt!37285) lt!37202) lt!37611)))

(declare-fun b!80875 () Bool)

(declare-fun e!52808 () Bool)

(assert (=> b!80875 (= e!52809 e!52808)))

(declare-fun res!42075 () Bool)

(assert (=> b!80875 (=> res!42075 e!52808)))

(assert (=> b!80875 (= res!42075 (= (h!2123 (toList!751 lt!37285)) lt!37202))))

(declare-fun b!80876 () Bool)

(assert (=> b!80876 (= e!52808 (contains!753 (t!5209 (toList!751 lt!37285)) lt!37202))))

(assert (= (and d!19791 res!42076) b!80875))

(assert (= (and b!80875 (not res!42075)) b!80876))

(declare-fun m!82365 () Bool)

(assert (=> d!19791 m!82365))

(declare-fun m!82367 () Bool)

(assert (=> d!19791 m!82367))

(declare-fun m!82369 () Bool)

(assert (=> b!80876 m!82369))

(assert (=> b!80389 d!19791))

(declare-fun d!19793 () Bool)

(declare-fun e!52810 () Bool)

(assert (=> d!19793 e!52810))

(declare-fun res!42077 () Bool)

(assert (=> d!19793 (=> res!42077 e!52810)))

(declare-fun lt!37614 () Bool)

(assert (=> d!19793 (= res!42077 (not lt!37614))))

(declare-fun lt!37613 () Bool)

(assert (=> d!19793 (= lt!37614 lt!37613)))

(declare-fun lt!37612 () Unit!2350)

(declare-fun e!52811 () Unit!2350)

(assert (=> d!19793 (= lt!37612 e!52811)))

(declare-fun c!12693 () Bool)

(assert (=> d!19793 (= c!12693 lt!37613)))

(assert (=> d!19793 (= lt!37613 (containsKey!141 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19793 (= (contains!750 lt!37326 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37614)))

(declare-fun b!80877 () Bool)

(declare-fun lt!37615 () Unit!2350)

(assert (=> b!80877 (= e!52811 lt!37615)))

(assert (=> b!80877 (= lt!37615 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80877 (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80878 () Bool)

(declare-fun Unit!2369 () Unit!2350)

(assert (=> b!80878 (= e!52811 Unit!2369)))

(declare-fun b!80879 () Bool)

(assert (=> b!80879 (= e!52810 (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19793 c!12693) b!80877))

(assert (= (and d!19793 (not c!12693)) b!80878))

(assert (= (and d!19793 (not res!42077)) b!80879))

(declare-fun m!82371 () Bool)

(assert (=> d!19793 m!82371))

(declare-fun m!82373 () Bool)

(assert (=> b!80877 m!82373))

(declare-fun m!82375 () Bool)

(assert (=> b!80877 m!82375))

(assert (=> b!80877 m!82375))

(declare-fun m!82377 () Bool)

(assert (=> b!80877 m!82377))

(assert (=> b!80879 m!82375))

(assert (=> b!80879 m!82375))

(assert (=> b!80879 m!82377))

(assert (=> b!80426 d!19793))

(declare-fun d!19795 () Bool)

(assert (=> d!19795 (= (apply!80 lt!37385 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1198 (getValueByKey!137 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3411 () Bool)

(assert (= bs!3411 d!19795))

(assert (=> bs!3411 m!81727))

(declare-fun m!82379 () Bool)

(assert (=> bs!3411 m!82379))

(assert (=> bs!3411 m!82379))

(declare-fun m!82381 () Bool)

(assert (=> bs!3411 m!82381))

(assert (=> b!80496 d!19795))

(assert (=> b!80496 d!19683))

(declare-fun d!19797 () Bool)

(declare-fun e!52812 () Bool)

(assert (=> d!19797 e!52812))

(declare-fun res!42078 () Bool)

(assert (=> d!19797 (=> res!42078 e!52812)))

(declare-fun lt!37618 () Bool)

(assert (=> d!19797 (= res!42078 (not lt!37618))))

(declare-fun lt!37617 () Bool)

(assert (=> d!19797 (= lt!37618 lt!37617)))

(declare-fun lt!37616 () Unit!2350)

(declare-fun e!52813 () Unit!2350)

(assert (=> d!19797 (= lt!37616 e!52813)))

(declare-fun c!12694 () Bool)

(assert (=> d!19797 (= c!12694 lt!37617)))

(assert (=> d!19797 (= lt!37617 (containsKey!141 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19797 (= (contains!750 lt!37385 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37618)))

(declare-fun b!80880 () Bool)

(declare-fun lt!37619 () Unit!2350)

(assert (=> b!80880 (= e!52813 lt!37619)))

(assert (=> b!80880 (= lt!37619 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80880 (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80881 () Bool)

(declare-fun Unit!2370 () Unit!2350)

(assert (=> b!80881 (= e!52813 Unit!2370)))

(declare-fun b!80882 () Bool)

(assert (=> b!80882 (= e!52812 (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19797 c!12694) b!80880))

(assert (= (and d!19797 (not c!12694)) b!80881))

(assert (= (and d!19797 (not res!42078)) b!80882))

(declare-fun m!82383 () Bool)

(assert (=> d!19797 m!82383))

(declare-fun m!82385 () Bool)

(assert (=> b!80880 m!82385))

(assert (=> b!80880 m!82317))

(assert (=> b!80880 m!82317))

(declare-fun m!82387 () Bool)

(assert (=> b!80880 m!82387))

(assert (=> b!80882 m!82317))

(assert (=> b!80882 m!82317))

(assert (=> b!80882 m!82387))

(assert (=> bm!7413 d!19797))

(declare-fun d!19799 () Bool)

(declare-fun e!52814 () Bool)

(assert (=> d!19799 e!52814))

(declare-fun res!42079 () Bool)

(assert (=> d!19799 (=> (not res!42079) (not e!52814))))

(declare-fun lt!37623 () ListLongMap!1471)

(assert (=> d!19799 (= res!42079 (contains!750 lt!37623 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun lt!37620 () List!1538)

(assert (=> d!19799 (= lt!37623 (ListLongMap!1472 lt!37620))))

(declare-fun lt!37621 () Unit!2350)

(declare-fun lt!37622 () Unit!2350)

(assert (=> d!19799 (= lt!37621 lt!37622)))

(assert (=> d!19799 (= (getValueByKey!137 lt!37620 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (Some!142 (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!19799 (= lt!37622 (lemmaContainsTupThenGetReturnValue!56 lt!37620 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!19799 (= lt!37620 (insertStrictlySorted!58 (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415))) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!19799 (= (+!111 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415)) (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37623)))

(declare-fun b!80883 () Bool)

(declare-fun res!42080 () Bool)

(assert (=> b!80883 (=> (not res!42080) (not e!52814))))

(assert (=> b!80883 (= res!42080 (= (getValueByKey!137 (toList!751 lt!37623) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (Some!142 (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun b!80884 () Bool)

(assert (=> b!80884 (= e!52814 (contains!753 (toList!751 lt!37623) (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (= (and d!19799 res!42079) b!80883))

(assert (= (and b!80883 res!42080) b!80884))

(declare-fun m!82389 () Bool)

(assert (=> d!19799 m!82389))

(declare-fun m!82391 () Bool)

(assert (=> d!19799 m!82391))

(declare-fun m!82393 () Bool)

(assert (=> d!19799 m!82393))

(declare-fun m!82395 () Bool)

(assert (=> d!19799 m!82395))

(declare-fun m!82397 () Bool)

(assert (=> b!80883 m!82397))

(declare-fun m!82399 () Bool)

(assert (=> b!80884 m!82399))

(assert (=> bm!7418 d!19799))

(declare-fun b!80885 () Bool)

(declare-fun call!7525 () ListLongMap!1471)

(declare-fun e!52824 () ListLongMap!1471)

(assert (=> b!80885 (= e!52824 (+!111 call!7525 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))))

(declare-fun lt!37637 () ListLongMap!1471)

(declare-fun b!80886 () Bool)

(declare-fun e!52826 () Bool)

(assert (=> b!80886 (= e!52826 (= (apply!80 lt!37637 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))

(declare-fun b!80887 () Bool)

(declare-fun e!52823 () ListLongMap!1471)

(assert (=> b!80887 (= e!52824 e!52823)))

(declare-fun c!12698 () Bool)

(assert (=> b!80887 (= c!12698 (and (not (= (bvand (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7520 () Bool)

(declare-fun call!7528 () ListLongMap!1471)

(assert (=> bm!7520 (= call!7528 call!7525)))

(declare-fun b!80888 () Bool)

(declare-fun e!52815 () Bool)

(declare-fun e!52818 () Bool)

(assert (=> b!80888 (= e!52815 e!52818)))

(declare-fun res!42081 () Bool)

(assert (=> b!80888 (=> (not res!42081) (not e!52818))))

(assert (=> b!80888 (= res!42081 (contains!750 lt!37637 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80888 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun d!19801 () Bool)

(declare-fun e!52827 () Bool)

(assert (=> d!19801 e!52827))

(declare-fun res!42085 () Bool)

(assert (=> d!19801 (=> (not res!42085) (not e!52827))))

(assert (=> d!19801 (= res!42085 (or (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))))

(declare-fun lt!37635 () ListLongMap!1471)

(assert (=> d!19801 (= lt!37637 lt!37635)))

(declare-fun lt!37638 () Unit!2350)

(declare-fun e!52817 () Unit!2350)

(assert (=> d!19801 (= lt!37638 e!52817)))

(declare-fun c!12696 () Bool)

(declare-fun e!52816 () Bool)

(assert (=> d!19801 (= c!12696 e!52816)))

(declare-fun res!42087 () Bool)

(assert (=> d!19801 (=> (not res!42087) (not e!52816))))

(assert (=> d!19801 (= res!42087 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!19801 (= lt!37635 e!52824)))

(declare-fun c!12697 () Bool)

(assert (=> d!19801 (= c!12697 (and (not (= (bvand (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19801 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19801 (= (getCurrentListMap!437 (_keys!3957 newMap!16) (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466) (mask!6299 newMap!16) (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!37637)))

(declare-fun bm!7521 () Bool)

(declare-fun call!7524 () Bool)

(assert (=> bm!7521 (= call!7524 (contains!750 lt!37637 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80889 () Bool)

(declare-fun e!52821 () Bool)

(assert (=> b!80889 (= e!52821 (not call!7524))))

(declare-fun b!80890 () Bool)

(assert (=> b!80890 (= e!52823 call!7528)))

(declare-fun b!80891 () Bool)

(assert (=> b!80891 (= e!52827 e!52821)))

(declare-fun c!12700 () Bool)

(assert (=> b!80891 (= c!12700 (not (= (bvand (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80892 () Bool)

(declare-fun e!52819 () Bool)

(declare-fun e!52825 () Bool)

(assert (=> b!80892 (= e!52819 e!52825)))

(declare-fun res!42084 () Bool)

(declare-fun call!7529 () Bool)

(assert (=> b!80892 (= res!42084 call!7529)))

(assert (=> b!80892 (=> (not res!42084) (not e!52825))))

(declare-fun b!80893 () Bool)

(declare-fun res!42086 () Bool)

(assert (=> b!80893 (=> (not res!42086) (not e!52827))))

(assert (=> b!80893 (= res!42086 e!52819)))

(declare-fun c!12699 () Bool)

(assert (=> b!80893 (= c!12699 (not (= (bvand (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80894 () Bool)

(declare-fun e!52820 () Bool)

(assert (=> b!80894 (= e!52820 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7522 () Bool)

(declare-fun call!7523 () ListLongMap!1471)

(declare-fun call!7527 () ListLongMap!1471)

(assert (=> bm!7522 (= call!7523 call!7527)))

(declare-fun bm!7523 () Bool)

(declare-fun call!7526 () ListLongMap!1471)

(assert (=> bm!7523 (= call!7527 call!7526)))

(declare-fun b!80895 () Bool)

(declare-fun lt!37639 () Unit!2350)

(assert (=> b!80895 (= e!52817 lt!37639)))

(declare-fun lt!37636 () ListLongMap!1471)

(assert (=> b!80895 (= lt!37636 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466) (mask!6299 newMap!16) (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37624 () (_ BitVec 64))

(assert (=> b!80895 (= lt!37624 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37644 () (_ BitVec 64))

(assert (=> b!80895 (= lt!37644 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37625 () Unit!2350)

(assert (=> b!80895 (= lt!37625 (addStillContains!56 lt!37636 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) lt!37644))))

(assert (=> b!80895 (contains!750 (+!111 lt!37636 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) lt!37644)))

(declare-fun lt!37642 () Unit!2350)

(assert (=> b!80895 (= lt!37642 lt!37625)))

(declare-fun lt!37631 () ListLongMap!1471)

(assert (=> b!80895 (= lt!37631 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466) (mask!6299 newMap!16) (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37640 () (_ BitVec 64))

(assert (=> b!80895 (= lt!37640 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37627 () (_ BitVec 64))

(assert (=> b!80895 (= lt!37627 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37645 () Unit!2350)

(assert (=> b!80895 (= lt!37645 (addApplyDifferent!56 lt!37631 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) lt!37627))))

(assert (=> b!80895 (= (apply!80 (+!111 lt!37631 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) lt!37627) (apply!80 lt!37631 lt!37627))))

(declare-fun lt!37628 () Unit!2350)

(assert (=> b!80895 (= lt!37628 lt!37645)))

(declare-fun lt!37634 () ListLongMap!1471)

(assert (=> b!80895 (= lt!37634 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466) (mask!6299 newMap!16) (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37630 () (_ BitVec 64))

(assert (=> b!80895 (= lt!37630 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37632 () (_ BitVec 64))

(assert (=> b!80895 (= lt!37632 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37643 () Unit!2350)

(assert (=> b!80895 (= lt!37643 (addApplyDifferent!56 lt!37634 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) lt!37632))))

(assert (=> b!80895 (= (apply!80 (+!111 lt!37634 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) lt!37632) (apply!80 lt!37634 lt!37632))))

(declare-fun lt!37629 () Unit!2350)

(assert (=> b!80895 (= lt!37629 lt!37643)))

(declare-fun lt!37633 () ListLongMap!1471)

(assert (=> b!80895 (= lt!37633 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466) (mask!6299 newMap!16) (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37641 () (_ BitVec 64))

(assert (=> b!80895 (= lt!37641 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37626 () (_ BitVec 64))

(assert (=> b!80895 (= lt!37626 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80895 (= lt!37639 (addApplyDifferent!56 lt!37633 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) lt!37626))))

(assert (=> b!80895 (= (apply!80 (+!111 lt!37633 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) lt!37626) (apply!80 lt!37633 lt!37626))))

(declare-fun b!80896 () Bool)

(declare-fun Unit!2371 () Unit!2350)

(assert (=> b!80896 (= e!52817 Unit!2371)))

(declare-fun b!80897 () Bool)

(assert (=> b!80897 (= e!52821 e!52826)))

(declare-fun res!42082 () Bool)

(assert (=> b!80897 (= res!42082 call!7524)))

(assert (=> b!80897 (=> (not res!42082) (not e!52826))))

(declare-fun b!80898 () Bool)

(declare-fun c!12695 () Bool)

(assert (=> b!80898 (= c!12695 (and (not (= (bvand (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52822 () ListLongMap!1471)

(assert (=> b!80898 (= e!52823 e!52822)))

(declare-fun b!80899 () Bool)

(assert (=> b!80899 (= e!52816 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80900 () Bool)

(assert (=> b!80900 (= e!52822 call!7523)))

(declare-fun bm!7524 () Bool)

(assert (=> bm!7524 (= call!7529 (contains!750 lt!37637 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80901 () Bool)

(assert (=> b!80901 (= e!52819 (not call!7529))))

(declare-fun b!80902 () Bool)

(assert (=> b!80902 (= e!52825 (= (apply!80 lt!37637 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))))

(declare-fun bm!7525 () Bool)

(assert (=> bm!7525 (= call!7526 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466) (mask!6299 newMap!16) (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!80903 () Bool)

(assert (=> b!80903 (= e!52818 (= (apply!80 lt!37637 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80903 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466))))))

(assert (=> b!80903 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!80904 () Bool)

(assert (=> b!80904 (= e!52822 call!7528)))

(declare-fun bm!7526 () Bool)

(assert (=> bm!7526 (= call!7525 (+!111 (ite c!12697 call!7526 (ite c!12698 call!7527 call!7523)) (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(declare-fun b!80905 () Bool)

(declare-fun res!42088 () Bool)

(assert (=> b!80905 (=> (not res!42088) (not e!52827))))

(assert (=> b!80905 (= res!42088 e!52815)))

(declare-fun res!42083 () Bool)

(assert (=> b!80905 (=> res!42083 e!52815)))

(assert (=> b!80905 (= res!42083 (not e!52820))))

(declare-fun res!42089 () Bool)

(assert (=> b!80905 (=> (not res!42089) (not e!52820))))

(assert (=> b!80905 (= res!42089 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (= (and d!19801 c!12697) b!80885))

(assert (= (and d!19801 (not c!12697)) b!80887))

(assert (= (and b!80887 c!12698) b!80890))

(assert (= (and b!80887 (not c!12698)) b!80898))

(assert (= (and b!80898 c!12695) b!80904))

(assert (= (and b!80898 (not c!12695)) b!80900))

(assert (= (or b!80904 b!80900) bm!7522))

(assert (= (or b!80890 bm!7522) bm!7523))

(assert (= (or b!80890 b!80904) bm!7520))

(assert (= (or b!80885 bm!7523) bm!7525))

(assert (= (or b!80885 bm!7520) bm!7526))

(assert (= (and d!19801 res!42087) b!80899))

(assert (= (and d!19801 c!12696) b!80895))

(assert (= (and d!19801 (not c!12696)) b!80896))

(assert (= (and d!19801 res!42085) b!80905))

(assert (= (and b!80905 res!42089) b!80894))

(assert (= (and b!80905 (not res!42083)) b!80888))

(assert (= (and b!80888 res!42081) b!80903))

(assert (= (and b!80905 res!42088) b!80893))

(assert (= (and b!80893 c!12699) b!80892))

(assert (= (and b!80893 (not c!12699)) b!80901))

(assert (= (and b!80892 res!42084) b!80902))

(assert (= (or b!80892 b!80901) bm!7524))

(assert (= (and b!80893 res!42086) b!80891))

(assert (= (and b!80891 c!12700) b!80897))

(assert (= (and b!80891 (not c!12700)) b!80889))

(assert (= (and b!80897 res!42082) b!80886))

(assert (= (or b!80897 b!80889) bm!7521))

(declare-fun b_lambda!3617 () Bool)

(assert (=> (not b_lambda!3617) (not b!80903)))

(assert (=> b!80903 t!5218))

(declare-fun b_and!4941 () Bool)

(assert (= b_and!4937 (and (=> t!5218 result!2857) b_and!4941)))

(assert (=> b!80903 t!5220))

(declare-fun b_and!4943 () Bool)

(assert (= b_and!4939 (and (=> t!5220 result!2859) b_and!4943)))

(declare-fun m!82401 () Bool)

(assert (=> bm!7525 m!82401))

(declare-fun m!82403 () Bool)

(assert (=> bm!7521 m!82403))

(assert (=> b!80903 m!81991))

(assert (=> b!80903 m!81991))

(declare-fun m!82405 () Bool)

(assert (=> b!80903 m!82405))

(declare-fun m!82407 () Bool)

(assert (=> b!80903 m!82407))

(assert (=> b!80903 m!82031))

(assert (=> b!80903 m!82407))

(assert (=> b!80903 m!82031))

(declare-fun m!82409 () Bool)

(assert (=> b!80903 m!82409))

(assert (=> b!80894 m!81991))

(assert (=> b!80894 m!81991))

(assert (=> b!80894 m!82035))

(declare-fun m!82411 () Bool)

(assert (=> b!80885 m!82411))

(assert (=> b!80888 m!81991))

(assert (=> b!80888 m!81991))

(declare-fun m!82413 () Bool)

(assert (=> b!80888 m!82413))

(declare-fun m!82415 () Bool)

(assert (=> bm!7526 m!82415))

(assert (=> d!19801 m!82043))

(declare-fun m!82417 () Bool)

(assert (=> bm!7524 m!82417))

(declare-fun m!82419 () Bool)

(assert (=> b!80895 m!82419))

(declare-fun m!82421 () Bool)

(assert (=> b!80895 m!82421))

(declare-fun m!82423 () Bool)

(assert (=> b!80895 m!82423))

(assert (=> b!80895 m!81991))

(declare-fun m!82425 () Bool)

(assert (=> b!80895 m!82425))

(declare-fun m!82427 () Bool)

(assert (=> b!80895 m!82427))

(declare-fun m!82429 () Bool)

(assert (=> b!80895 m!82429))

(declare-fun m!82431 () Bool)

(assert (=> b!80895 m!82431))

(declare-fun m!82433 () Bool)

(assert (=> b!80895 m!82433))

(assert (=> b!80895 m!82421))

(assert (=> b!80895 m!82401))

(declare-fun m!82435 () Bool)

(assert (=> b!80895 m!82435))

(declare-fun m!82437 () Bool)

(assert (=> b!80895 m!82437))

(declare-fun m!82439 () Bool)

(assert (=> b!80895 m!82439))

(declare-fun m!82441 () Bool)

(assert (=> b!80895 m!82441))

(assert (=> b!80895 m!82429))

(declare-fun m!82443 () Bool)

(assert (=> b!80895 m!82443))

(declare-fun m!82445 () Bool)

(assert (=> b!80895 m!82445))

(assert (=> b!80895 m!82425))

(declare-fun m!82447 () Bool)

(assert (=> b!80895 m!82447))

(assert (=> b!80895 m!82435))

(declare-fun m!82449 () Bool)

(assert (=> b!80902 m!82449))

(declare-fun m!82451 () Bool)

(assert (=> b!80886 m!82451))

(assert (=> b!80899 m!81991))

(assert (=> b!80899 m!81991))

(assert (=> b!80899 m!82035))

(assert (=> bm!7480 d!19801))

(assert (=> b!80603 d!19787))

(declare-fun d!19803 () Bool)

(declare-fun lt!37646 () Bool)

(assert (=> d!19803 (= lt!37646 (select (content!84 (toList!751 lt!37302)) lt!37197))))

(declare-fun e!52829 () Bool)

(assert (=> d!19803 (= lt!37646 e!52829)))

(declare-fun res!42091 () Bool)

(assert (=> d!19803 (=> (not res!42091) (not e!52829))))

(assert (=> d!19803 (= res!42091 ((_ is Cons!1534) (toList!751 lt!37302)))))

(assert (=> d!19803 (= (contains!753 (toList!751 lt!37302) lt!37197) lt!37646)))

(declare-fun b!80906 () Bool)

(declare-fun e!52828 () Bool)

(assert (=> b!80906 (= e!52829 e!52828)))

(declare-fun res!42090 () Bool)

(assert (=> b!80906 (=> res!42090 e!52828)))

(assert (=> b!80906 (= res!42090 (= (h!2123 (toList!751 lt!37302)) lt!37197))))

(declare-fun b!80907 () Bool)

(assert (=> b!80907 (= e!52828 (contains!753 (t!5209 (toList!751 lt!37302)) lt!37197))))

(assert (= (and d!19803 res!42091) b!80906))

(assert (= (and b!80906 (not res!42090)) b!80907))

(declare-fun m!82453 () Bool)

(assert (=> d!19803 m!82453))

(declare-fun m!82455 () Bool)

(assert (=> d!19803 m!82455))

(declare-fun m!82457 () Bool)

(assert (=> b!80907 m!82457))

(assert (=> b!80397 d!19803))

(declare-fun d!19805 () Bool)

(declare-fun lt!37647 () Bool)

(assert (=> d!19805 (= lt!37647 (select (content!84 (toList!751 lt!37306)) lt!37202))))

(declare-fun e!52831 () Bool)

(assert (=> d!19805 (= lt!37647 e!52831)))

(declare-fun res!42093 () Bool)

(assert (=> d!19805 (=> (not res!42093) (not e!52831))))

(assert (=> d!19805 (= res!42093 ((_ is Cons!1534) (toList!751 lt!37306)))))

(assert (=> d!19805 (= (contains!753 (toList!751 lt!37306) lt!37202) lt!37647)))

(declare-fun b!80908 () Bool)

(declare-fun e!52830 () Bool)

(assert (=> b!80908 (= e!52831 e!52830)))

(declare-fun res!42092 () Bool)

(assert (=> b!80908 (=> res!42092 e!52830)))

(assert (=> b!80908 (= res!42092 (= (h!2123 (toList!751 lt!37306)) lt!37202))))

(declare-fun b!80909 () Bool)

(assert (=> b!80909 (= e!52830 (contains!753 (t!5209 (toList!751 lt!37306)) lt!37202))))

(assert (= (and d!19805 res!42093) b!80908))

(assert (= (and b!80908 (not res!42092)) b!80909))

(declare-fun m!82459 () Bool)

(assert (=> d!19805 m!82459))

(declare-fun m!82461 () Bool)

(assert (=> d!19805 m!82461))

(declare-fun m!82463 () Bool)

(assert (=> b!80909 m!82463))

(assert (=> b!80399 d!19805))

(declare-fun d!19807 () Bool)

(declare-fun e!52834 () Bool)

(assert (=> d!19807 e!52834))

(declare-fun res!42096 () Bool)

(assert (=> d!19807 (=> (not res!42096) (not e!52834))))

(assert (=> d!19807 (= res!42096 (and (bvsge (index!3140 lt!37470) #b00000000000000000000000000000000) (bvslt (index!3140 lt!37470) (size!2142 (_keys!3957 newMap!16)))))))

(declare-fun lt!37650 () Unit!2350)

(declare-fun choose!482 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) Int) Unit!2350)

(assert (=> d!19807 (= lt!37650 (choose!482 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3140 lt!37470) (defaultEntry!2293 newMap!16)))))

(assert (=> d!19807 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19807 (= (lemmaValidKeyInArrayIsInListMap!87 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3140 lt!37470) (defaultEntry!2293 newMap!16)) lt!37650)))

(declare-fun b!80912 () Bool)

(assert (=> b!80912 (= e!52834 (contains!750 (getCurrentListMap!437 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470))))))

(assert (= (and d!19807 res!42096) b!80912))

(declare-fun m!82465 () Bool)

(assert (=> d!19807 m!82465))

(assert (=> d!19807 m!82043))

(declare-fun m!82467 () Bool)

(assert (=> b!80912 m!82467))

(assert (=> b!80912 m!81929))

(assert (=> b!80912 m!82467))

(assert (=> b!80912 m!81929))

(declare-fun m!82469 () Bool)

(assert (=> b!80912 m!82469))

(assert (=> b!80618 d!19807))

(declare-fun b!80913 () Bool)

(declare-fun e!52844 () ListLongMap!1471)

(declare-fun call!7532 () ListLongMap!1471)

(assert (=> b!80913 (= e!52844 (+!111 call!7532 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!80914 () Bool)

(declare-fun e!52846 () Bool)

(declare-fun lt!37664 () ListLongMap!1471)

(assert (=> b!80914 (= e!52846 (= (apply!80 lt!37664 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!80915 () Bool)

(declare-fun e!52843 () ListLongMap!1471)

(assert (=> b!80915 (= e!52844 e!52843)))

(declare-fun c!12704 () Bool)

(assert (=> b!80915 (= c!12704 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7527 () Bool)

(declare-fun call!7535 () ListLongMap!1471)

(assert (=> bm!7527 (= call!7535 call!7532)))

(declare-fun b!80916 () Bool)

(declare-fun e!52835 () Bool)

(declare-fun e!52838 () Bool)

(assert (=> b!80916 (= e!52835 e!52838)))

(declare-fun res!42097 () Bool)

(assert (=> b!80916 (=> (not res!42097) (not e!52838))))

(assert (=> b!80916 (= res!42097 (contains!750 lt!37664 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!80916 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun d!19809 () Bool)

(declare-fun e!52847 () Bool)

(assert (=> d!19809 e!52847))

(declare-fun res!42101 () Bool)

(assert (=> d!19809 (=> (not res!42101) (not e!52847))))

(assert (=> d!19809 (= res!42101 (or (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))))

(declare-fun lt!37662 () ListLongMap!1471)

(assert (=> d!19809 (= lt!37664 lt!37662)))

(declare-fun lt!37665 () Unit!2350)

(declare-fun e!52837 () Unit!2350)

(assert (=> d!19809 (= lt!37665 e!52837)))

(declare-fun c!12702 () Bool)

(declare-fun e!52836 () Bool)

(assert (=> d!19809 (= c!12702 e!52836)))

(declare-fun res!42103 () Bool)

(assert (=> d!19809 (=> (not res!42103) (not e!52836))))

(assert (=> d!19809 (= res!42103 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!19809 (= lt!37662 e!52844)))

(declare-fun c!12703 () Bool)

(assert (=> d!19809 (= c!12703 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19809 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19809 (= (getCurrentListMap!437 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!37664)))

(declare-fun bm!7528 () Bool)

(declare-fun call!7531 () Bool)

(assert (=> bm!7528 (= call!7531 (contains!750 lt!37664 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80917 () Bool)

(declare-fun e!52841 () Bool)

(assert (=> b!80917 (= e!52841 (not call!7531))))

(declare-fun b!80918 () Bool)

(assert (=> b!80918 (= e!52843 call!7535)))

(declare-fun b!80919 () Bool)

(assert (=> b!80919 (= e!52847 e!52841)))

(declare-fun c!12706 () Bool)

(assert (=> b!80919 (= c!12706 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!80920 () Bool)

(declare-fun e!52839 () Bool)

(declare-fun e!52845 () Bool)

(assert (=> b!80920 (= e!52839 e!52845)))

(declare-fun res!42100 () Bool)

(declare-fun call!7536 () Bool)

(assert (=> b!80920 (= res!42100 call!7536)))

(assert (=> b!80920 (=> (not res!42100) (not e!52845))))

(declare-fun b!80921 () Bool)

(declare-fun res!42102 () Bool)

(assert (=> b!80921 (=> (not res!42102) (not e!52847))))

(assert (=> b!80921 (= res!42102 e!52839)))

(declare-fun c!12705 () Bool)

(assert (=> b!80921 (= c!12705 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!80922 () Bool)

(declare-fun e!52840 () Bool)

(assert (=> b!80922 (= e!52840 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7529 () Bool)

(declare-fun call!7530 () ListLongMap!1471)

(declare-fun call!7534 () ListLongMap!1471)

(assert (=> bm!7529 (= call!7530 call!7534)))

(declare-fun bm!7530 () Bool)

(declare-fun call!7533 () ListLongMap!1471)

(assert (=> bm!7530 (= call!7534 call!7533)))

(declare-fun b!80923 () Bool)

(declare-fun lt!37666 () Unit!2350)

(assert (=> b!80923 (= e!52837 lt!37666)))

(declare-fun lt!37663 () ListLongMap!1471)

(assert (=> b!80923 (= lt!37663 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37651 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37651 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37671 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37671 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37652 () Unit!2350)

(assert (=> b!80923 (= lt!37652 (addStillContains!56 lt!37663 lt!37651 (zeroValue!2189 newMap!16) lt!37671))))

(assert (=> b!80923 (contains!750 (+!111 lt!37663 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16))) lt!37671)))

(declare-fun lt!37669 () Unit!2350)

(assert (=> b!80923 (= lt!37669 lt!37652)))

(declare-fun lt!37658 () ListLongMap!1471)

(assert (=> b!80923 (= lt!37658 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37667 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37667 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37654 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37654 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37672 () Unit!2350)

(assert (=> b!80923 (= lt!37672 (addApplyDifferent!56 lt!37658 lt!37667 (minValue!2189 newMap!16) lt!37654))))

(assert (=> b!80923 (= (apply!80 (+!111 lt!37658 (tuple2!2203 lt!37667 (minValue!2189 newMap!16))) lt!37654) (apply!80 lt!37658 lt!37654))))

(declare-fun lt!37655 () Unit!2350)

(assert (=> b!80923 (= lt!37655 lt!37672)))

(declare-fun lt!37661 () ListLongMap!1471)

(assert (=> b!80923 (= lt!37661 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37657 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37657 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37659 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37659 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!37670 () Unit!2350)

(assert (=> b!80923 (= lt!37670 (addApplyDifferent!56 lt!37661 lt!37657 (zeroValue!2189 newMap!16) lt!37659))))

(assert (=> b!80923 (= (apply!80 (+!111 lt!37661 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16))) lt!37659) (apply!80 lt!37661 lt!37659))))

(declare-fun lt!37656 () Unit!2350)

(assert (=> b!80923 (= lt!37656 lt!37670)))

(declare-fun lt!37660 () ListLongMap!1471)

(assert (=> b!80923 (= lt!37660 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37668 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37668 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37653 () (_ BitVec 64))

(assert (=> b!80923 (= lt!37653 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!80923 (= lt!37666 (addApplyDifferent!56 lt!37660 lt!37668 (minValue!2189 newMap!16) lt!37653))))

(assert (=> b!80923 (= (apply!80 (+!111 lt!37660 (tuple2!2203 lt!37668 (minValue!2189 newMap!16))) lt!37653) (apply!80 lt!37660 lt!37653))))

(declare-fun b!80924 () Bool)

(declare-fun Unit!2372 () Unit!2350)

(assert (=> b!80924 (= e!52837 Unit!2372)))

(declare-fun b!80925 () Bool)

(assert (=> b!80925 (= e!52841 e!52846)))

(declare-fun res!42098 () Bool)

(assert (=> b!80925 (= res!42098 call!7531)))

(assert (=> b!80925 (=> (not res!42098) (not e!52846))))

(declare-fun b!80926 () Bool)

(declare-fun c!12701 () Bool)

(assert (=> b!80926 (= c!12701 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!52842 () ListLongMap!1471)

(assert (=> b!80926 (= e!52843 e!52842)))

(declare-fun b!80927 () Bool)

(assert (=> b!80927 (= e!52836 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!80928 () Bool)

(assert (=> b!80928 (= e!52842 call!7530)))

(declare-fun bm!7531 () Bool)

(assert (=> bm!7531 (= call!7536 (contains!750 lt!37664 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80929 () Bool)

(assert (=> b!80929 (= e!52839 (not call!7536))))

(declare-fun b!80930 () Bool)

(assert (=> b!80930 (= e!52845 (= (apply!80 lt!37664 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun bm!7532 () Bool)

(assert (=> bm!7532 (= call!7533 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!80931 () Bool)

(assert (=> b!80931 (= e!52838 (= (apply!80 lt!37664 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80931 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))))))))

(assert (=> b!80931 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!80932 () Bool)

(assert (=> b!80932 (= e!52842 call!7535)))

(declare-fun bm!7533 () Bool)

(assert (=> bm!7533 (= call!7532 (+!111 (ite c!12703 call!7533 (ite c!12704 call!7534 call!7530)) (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!80933 () Bool)

(declare-fun res!42104 () Bool)

(assert (=> b!80933 (=> (not res!42104) (not e!52847))))

(assert (=> b!80933 (= res!42104 e!52835)))

(declare-fun res!42099 () Bool)

(assert (=> b!80933 (=> res!42099 e!52835)))

(assert (=> b!80933 (= res!42099 (not e!52840))))

(declare-fun res!42105 () Bool)

(assert (=> b!80933 (=> (not res!42105) (not e!52840))))

(assert (=> b!80933 (= res!42105 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (= (and d!19809 c!12703) b!80913))

(assert (= (and d!19809 (not c!12703)) b!80915))

(assert (= (and b!80915 c!12704) b!80918))

(assert (= (and b!80915 (not c!12704)) b!80926))

(assert (= (and b!80926 c!12701) b!80932))

(assert (= (and b!80926 (not c!12701)) b!80928))

(assert (= (or b!80932 b!80928) bm!7529))

(assert (= (or b!80918 bm!7529) bm!7530))

(assert (= (or b!80918 b!80932) bm!7527))

(assert (= (or b!80913 bm!7530) bm!7532))

(assert (= (or b!80913 bm!7527) bm!7533))

(assert (= (and d!19809 res!42103) b!80927))

(assert (= (and d!19809 c!12702) b!80923))

(assert (= (and d!19809 (not c!12702)) b!80924))

(assert (= (and d!19809 res!42101) b!80933))

(assert (= (and b!80933 res!42105) b!80922))

(assert (= (and b!80933 (not res!42099)) b!80916))

(assert (= (and b!80916 res!42097) b!80931))

(assert (= (and b!80933 res!42104) b!80921))

(assert (= (and b!80921 c!12705) b!80920))

(assert (= (and b!80921 (not c!12705)) b!80929))

(assert (= (and b!80920 res!42100) b!80930))

(assert (= (or b!80920 b!80929) bm!7531))

(assert (= (and b!80921 res!42102) b!80919))

(assert (= (and b!80919 c!12706) b!80925))

(assert (= (and b!80919 (not c!12706)) b!80917))

(assert (= (and b!80925 res!42098) b!80914))

(assert (= (or b!80925 b!80917) bm!7528))

(declare-fun b_lambda!3619 () Bool)

(assert (=> (not b_lambda!3619) (not b!80931)))

(assert (=> b!80931 t!5218))

(declare-fun b_and!4945 () Bool)

(assert (= b_and!4941 (and (=> t!5218 result!2857) b_and!4945)))

(assert (=> b!80931 t!5220))

(declare-fun b_and!4947 () Bool)

(assert (= b_and!4943 (and (=> t!5220 result!2859) b_and!4947)))

(declare-fun m!82471 () Bool)

(assert (=> bm!7532 m!82471))

(declare-fun m!82473 () Bool)

(assert (=> bm!7528 m!82473))

(assert (=> b!80931 m!81991))

(assert (=> b!80931 m!81991))

(declare-fun m!82475 () Bool)

(assert (=> b!80931 m!82475))

(declare-fun m!82477 () Bool)

(assert (=> b!80931 m!82477))

(assert (=> b!80931 m!82031))

(assert (=> b!80931 m!82477))

(assert (=> b!80931 m!82031))

(declare-fun m!82479 () Bool)

(assert (=> b!80931 m!82479))

(assert (=> b!80922 m!81991))

(assert (=> b!80922 m!81991))

(assert (=> b!80922 m!82035))

(declare-fun m!82481 () Bool)

(assert (=> b!80913 m!82481))

(assert (=> b!80916 m!81991))

(assert (=> b!80916 m!81991))

(declare-fun m!82483 () Bool)

(assert (=> b!80916 m!82483))

(declare-fun m!82485 () Bool)

(assert (=> bm!7533 m!82485))

(assert (=> d!19809 m!82043))

(declare-fun m!82487 () Bool)

(assert (=> bm!7531 m!82487))

(declare-fun m!82489 () Bool)

(assert (=> b!80923 m!82489))

(declare-fun m!82491 () Bool)

(assert (=> b!80923 m!82491))

(declare-fun m!82493 () Bool)

(assert (=> b!80923 m!82493))

(assert (=> b!80923 m!81991))

(declare-fun m!82495 () Bool)

(assert (=> b!80923 m!82495))

(declare-fun m!82497 () Bool)

(assert (=> b!80923 m!82497))

(declare-fun m!82499 () Bool)

(assert (=> b!80923 m!82499))

(declare-fun m!82501 () Bool)

(assert (=> b!80923 m!82501))

(declare-fun m!82503 () Bool)

(assert (=> b!80923 m!82503))

(assert (=> b!80923 m!82491))

(assert (=> b!80923 m!82471))

(declare-fun m!82505 () Bool)

(assert (=> b!80923 m!82505))

(declare-fun m!82507 () Bool)

(assert (=> b!80923 m!82507))

(declare-fun m!82509 () Bool)

(assert (=> b!80923 m!82509))

(declare-fun m!82511 () Bool)

(assert (=> b!80923 m!82511))

(assert (=> b!80923 m!82499))

(declare-fun m!82513 () Bool)

(assert (=> b!80923 m!82513))

(declare-fun m!82515 () Bool)

(assert (=> b!80923 m!82515))

(assert (=> b!80923 m!82495))

(declare-fun m!82517 () Bool)

(assert (=> b!80923 m!82517))

(assert (=> b!80923 m!82505))

(declare-fun m!82519 () Bool)

(assert (=> b!80930 m!82519))

(declare-fun m!82521 () Bool)

(assert (=> b!80914 m!82521))

(assert (=> b!80927 m!81991))

(assert (=> b!80927 m!81991))

(assert (=> b!80927 m!82035))

(assert (=> b!80618 d!19809))

(declare-fun d!19811 () Bool)

(declare-fun e!52850 () Bool)

(assert (=> d!19811 e!52850))

(declare-fun res!42108 () Bool)

(assert (=> d!19811 (=> (not res!42108) (not e!52850))))

(assert (=> d!19811 (= res!42108 (and (bvsge (index!3140 lt!37470) #b00000000000000000000000000000000) (bvslt (index!3140 lt!37470) (size!2143 (_values!2276 newMap!16)))))))

(declare-fun lt!37675 () Unit!2350)

(declare-fun choose!483 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) (_ BitVec 64) V!3003 Int) Unit!2350)

(assert (=> d!19811 (= lt!37675 (choose!483 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3140 lt!37470) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 (defaultEntry!2293 newMap!16)))))

(assert (=> d!19811 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19811 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3140 lt!37470) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 (defaultEntry!2293 newMap!16)) lt!37675)))

(declare-fun b!80936 () Bool)

(assert (=> b!80936 (= e!52850 (= (+!111 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (getCurrentListMap!437 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))))))

(assert (= (and d!19811 res!42108) b!80936))

(assert (=> d!19811 m!81585))

(declare-fun m!82523 () Bool)

(assert (=> d!19811 m!82523))

(assert (=> d!19811 m!82043))

(assert (=> b!80936 m!81869))

(assert (=> b!80936 m!81869))

(declare-fun m!82525 () Bool)

(assert (=> b!80936 m!82525))

(assert (=> b!80936 m!81935))

(assert (=> b!80936 m!81943))

(assert (=> b!80618 d!19811))

(declare-fun d!19813 () Bool)

(declare-fun e!52851 () Bool)

(assert (=> d!19813 e!52851))

(declare-fun res!42109 () Bool)

(assert (=> d!19813 (=> res!42109 e!52851)))

(declare-fun lt!37678 () Bool)

(assert (=> d!19813 (= res!42109 (not lt!37678))))

(declare-fun lt!37677 () Bool)

(assert (=> d!19813 (= lt!37678 lt!37677)))

(declare-fun lt!37676 () Unit!2350)

(declare-fun e!52852 () Unit!2350)

(assert (=> d!19813 (= lt!37676 e!52852)))

(declare-fun c!12707 () Bool)

(assert (=> d!19813 (= c!12707 lt!37677)))

(assert (=> d!19813 (= lt!37677 (containsKey!141 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!19813 (= (contains!750 call!7488 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) lt!37678)))

(declare-fun b!80937 () Bool)

(declare-fun lt!37679 () Unit!2350)

(assert (=> b!80937 (= e!52852 lt!37679)))

(assert (=> b!80937 (= lt!37679 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> b!80937 (isDefined!91 (getValueByKey!137 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!80938 () Bool)

(declare-fun Unit!2373 () Unit!2350)

(assert (=> b!80938 (= e!52852 Unit!2373)))

(declare-fun b!80939 () Bool)

(assert (=> b!80939 (= e!52851 (isDefined!91 (getValueByKey!137 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (= (and d!19813 c!12707) b!80937))

(assert (= (and d!19813 (not c!12707)) b!80938))

(assert (= (and d!19813 (not res!42109)) b!80939))

(assert (=> d!19813 m!81585))

(declare-fun m!82527 () Bool)

(assert (=> d!19813 m!82527))

(assert (=> b!80937 m!81585))

(declare-fun m!82529 () Bool)

(assert (=> b!80937 m!82529))

(assert (=> b!80937 m!81585))

(declare-fun m!82531 () Bool)

(assert (=> b!80937 m!82531))

(assert (=> b!80937 m!82531))

(declare-fun m!82533 () Bool)

(assert (=> b!80937 m!82533))

(assert (=> b!80939 m!81585))

(assert (=> b!80939 m!82531))

(assert (=> b!80939 m!82531))

(assert (=> b!80939 m!82533))

(assert (=> b!80618 d!19813))

(assert (=> b!80432 d!19683))

(declare-fun d!19815 () Bool)

(declare-fun e!52853 () Bool)

(assert (=> d!19815 e!52853))

(declare-fun res!42110 () Bool)

(assert (=> d!19815 (=> (not res!42110) (not e!52853))))

(declare-fun lt!37683 () ListLongMap!1471)

(assert (=> d!19815 (= res!42110 (contains!750 lt!37683 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!37680 () List!1538)

(assert (=> d!19815 (= lt!37683 (ListLongMap!1472 lt!37680))))

(declare-fun lt!37681 () Unit!2350)

(declare-fun lt!37682 () Unit!2350)

(assert (=> d!19815 (= lt!37681 lt!37682)))

(assert (=> d!19815 (= (getValueByKey!137 lt!37680 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19815 (= lt!37682 (lemmaContainsTupThenGetReturnValue!56 lt!37680 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19815 (= lt!37680 (insertStrictlySorted!58 (toList!751 call!7400) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19815 (= (+!111 call!7400 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!37683)))

(declare-fun b!80940 () Bool)

(declare-fun res!42111 () Bool)

(assert (=> b!80940 (=> (not res!42111) (not e!52853))))

(assert (=> b!80940 (= res!42111 (= (getValueByKey!137 (toList!751 lt!37683) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!80941 () Bool)

(assert (=> b!80941 (= e!52853 (contains!753 (toList!751 lt!37683) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!19815 res!42110) b!80940))

(assert (= (and b!80940 res!42111) b!80941))

(declare-fun m!82535 () Bool)

(assert (=> d!19815 m!82535))

(declare-fun m!82537 () Bool)

(assert (=> d!19815 m!82537))

(declare-fun m!82539 () Bool)

(assert (=> d!19815 m!82539))

(declare-fun m!82541 () Bool)

(assert (=> d!19815 m!82541))

(declare-fun m!82543 () Bool)

(assert (=> b!80940 m!82543))

(declare-fun m!82545 () Bool)

(assert (=> b!80941 m!82545))

(assert (=> b!80432 d!19815))

(declare-fun d!19817 () Bool)

(assert (=> d!19817 (not (contains!750 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)) lt!37327))))

(declare-fun lt!37686 () Unit!2350)

(declare-fun choose!484 (ListLongMap!1471 (_ BitVec 64) V!3003 (_ BitVec 64)) Unit!2350)

(assert (=> d!19817 (= lt!37686 (choose!484 lt!37325 lt!37321 lt!37324 lt!37327))))

(declare-fun e!52856 () Bool)

(assert (=> d!19817 e!52856))

(declare-fun res!42114 () Bool)

(assert (=> d!19817 (=> (not res!42114) (not e!52856))))

(assert (=> d!19817 (= res!42114 (not (contains!750 lt!37325 lt!37327)))))

(assert (=> d!19817 (= (addStillNotContains!31 lt!37325 lt!37321 lt!37324 lt!37327) lt!37686)))

(declare-fun b!80945 () Bool)

(assert (=> b!80945 (= e!52856 (not (= lt!37321 lt!37327)))))

(assert (= (and d!19817 res!42114) b!80945))

(assert (=> d!19817 m!81843))

(assert (=> d!19817 m!81843))

(assert (=> d!19817 m!81853))

(declare-fun m!82547 () Bool)

(assert (=> d!19817 m!82547))

(declare-fun m!82549 () Bool)

(assert (=> d!19817 m!82549))

(assert (=> b!80432 d!19817))

(declare-fun d!19819 () Bool)

(declare-fun e!52857 () Bool)

(assert (=> d!19819 e!52857))

(declare-fun res!42115 () Bool)

(assert (=> d!19819 (=> (not res!42115) (not e!52857))))

(declare-fun lt!37690 () ListLongMap!1471)

(assert (=> d!19819 (= res!42115 (contains!750 lt!37690 (_1!1111 (tuple2!2203 lt!37321 lt!37324))))))

(declare-fun lt!37687 () List!1538)

(assert (=> d!19819 (= lt!37690 (ListLongMap!1472 lt!37687))))

(declare-fun lt!37688 () Unit!2350)

(declare-fun lt!37689 () Unit!2350)

(assert (=> d!19819 (= lt!37688 lt!37689)))

(assert (=> d!19819 (= (getValueByKey!137 lt!37687 (_1!1111 (tuple2!2203 lt!37321 lt!37324))) (Some!142 (_2!1111 (tuple2!2203 lt!37321 lt!37324))))))

(assert (=> d!19819 (= lt!37689 (lemmaContainsTupThenGetReturnValue!56 lt!37687 (_1!1111 (tuple2!2203 lt!37321 lt!37324)) (_2!1111 (tuple2!2203 lt!37321 lt!37324))))))

(assert (=> d!19819 (= lt!37687 (insertStrictlySorted!58 (toList!751 lt!37325) (_1!1111 (tuple2!2203 lt!37321 lt!37324)) (_2!1111 (tuple2!2203 lt!37321 lt!37324))))))

(assert (=> d!19819 (= (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)) lt!37690)))

(declare-fun b!80946 () Bool)

(declare-fun res!42116 () Bool)

(assert (=> b!80946 (=> (not res!42116) (not e!52857))))

(assert (=> b!80946 (= res!42116 (= (getValueByKey!137 (toList!751 lt!37690) (_1!1111 (tuple2!2203 lt!37321 lt!37324))) (Some!142 (_2!1111 (tuple2!2203 lt!37321 lt!37324)))))))

(declare-fun b!80947 () Bool)

(assert (=> b!80947 (= e!52857 (contains!753 (toList!751 lt!37690) (tuple2!2203 lt!37321 lt!37324)))))

(assert (= (and d!19819 res!42115) b!80946))

(assert (= (and b!80946 res!42116) b!80947))

(declare-fun m!82551 () Bool)

(assert (=> d!19819 m!82551))

(declare-fun m!82553 () Bool)

(assert (=> d!19819 m!82553))

(declare-fun m!82555 () Bool)

(assert (=> d!19819 m!82555))

(declare-fun m!82557 () Bool)

(assert (=> d!19819 m!82557))

(declare-fun m!82559 () Bool)

(assert (=> b!80946 m!82559))

(declare-fun m!82561 () Bool)

(assert (=> b!80947 m!82561))

(assert (=> b!80432 d!19819))

(declare-fun d!19821 () Bool)

(declare-fun e!52858 () Bool)

(assert (=> d!19821 e!52858))

(declare-fun res!42117 () Bool)

(assert (=> d!19821 (=> res!42117 e!52858)))

(declare-fun lt!37693 () Bool)

(assert (=> d!19821 (= res!42117 (not lt!37693))))

(declare-fun lt!37692 () Bool)

(assert (=> d!19821 (= lt!37693 lt!37692)))

(declare-fun lt!37691 () Unit!2350)

(declare-fun e!52859 () Unit!2350)

(assert (=> d!19821 (= lt!37691 e!52859)))

(declare-fun c!12708 () Bool)

(assert (=> d!19821 (= c!12708 lt!37692)))

(assert (=> d!19821 (= lt!37692 (containsKey!141 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327))))

(assert (=> d!19821 (= (contains!750 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)) lt!37327) lt!37693)))

(declare-fun b!80948 () Bool)

(declare-fun lt!37694 () Unit!2350)

(assert (=> b!80948 (= e!52859 lt!37694)))

(assert (=> b!80948 (= lt!37694 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327))))

(assert (=> b!80948 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327))))

(declare-fun b!80949 () Bool)

(declare-fun Unit!2374 () Unit!2350)

(assert (=> b!80949 (= e!52859 Unit!2374)))

(declare-fun b!80950 () Bool)

(assert (=> b!80950 (= e!52858 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327)))))

(assert (= (and d!19821 c!12708) b!80948))

(assert (= (and d!19821 (not c!12708)) b!80949))

(assert (= (and d!19821 (not res!42117)) b!80950))

(declare-fun m!82563 () Bool)

(assert (=> d!19821 m!82563))

(declare-fun m!82565 () Bool)

(assert (=> b!80948 m!82565))

(declare-fun m!82567 () Bool)

(assert (=> b!80948 m!82567))

(assert (=> b!80948 m!82567))

(declare-fun m!82569 () Bool)

(assert (=> b!80948 m!82569))

(assert (=> b!80950 m!82567))

(assert (=> b!80950 m!82567))

(assert (=> b!80950 m!82569))

(assert (=> b!80432 d!19821))

(declare-fun d!19823 () Bool)

(assert (=> d!19823 (isDefined!91 (getValueByKey!137 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun lt!37697 () Unit!2350)

(declare-fun choose!485 (List!1538 (_ BitVec 64)) Unit!2350)

(assert (=> d!19823 (= lt!37697 (choose!485 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun e!52862 () Bool)

(assert (=> d!19823 e!52862))

(declare-fun res!42120 () Bool)

(assert (=> d!19823 (=> (not res!42120) (not e!52862))))

(assert (=> d!19823 (= res!42120 (isStrictlySorted!291 (toList!751 lt!37199)))))

(assert (=> d!19823 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) lt!37697)))

(declare-fun b!80953 () Bool)

(assert (=> b!80953 (= e!52862 (containsKey!141 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (= (and d!19823 res!42120) b!80953))

(assert (=> d!19823 m!81585))

(assert (=> d!19823 m!81921))

(assert (=> d!19823 m!81921))

(assert (=> d!19823 m!81923))

(assert (=> d!19823 m!81585))

(declare-fun m!82571 () Bool)

(assert (=> d!19823 m!82571))

(declare-fun m!82573 () Bool)

(assert (=> d!19823 m!82573))

(assert (=> b!80953 m!81585))

(assert (=> b!80953 m!81917))

(assert (=> b!80505 d!19823))

(declare-fun d!19825 () Bool)

(declare-fun isEmpty!335 (Option!143) Bool)

(assert (=> d!19825 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))))

(declare-fun bs!3412 () Bool)

(assert (= bs!3412 d!19825))

(assert (=> bs!3412 m!81921))

(declare-fun m!82575 () Bool)

(assert (=> bs!3412 m!82575))

(assert (=> b!80505 d!19825))

(declare-fun b!80955 () Bool)

(declare-fun e!52863 () Option!143)

(declare-fun e!52864 () Option!143)

(assert (=> b!80955 (= e!52863 e!52864)))

(declare-fun c!12710 () Bool)

(assert (=> b!80955 (= c!12710 (and ((_ is Cons!1534) (toList!751 lt!37199)) (not (= (_1!1111 (h!2123 (toList!751 lt!37199))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))))

(declare-fun d!19827 () Bool)

(declare-fun c!12709 () Bool)

(assert (=> d!19827 (= c!12709 (and ((_ is Cons!1534) (toList!751 lt!37199)) (= (_1!1111 (h!2123 (toList!751 lt!37199))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (=> d!19827 (= (getValueByKey!137 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) e!52863)))

(declare-fun b!80957 () Bool)

(assert (=> b!80957 (= e!52864 None!141)))

(declare-fun b!80956 () Bool)

(assert (=> b!80956 (= e!52864 (getValueByKey!137 (t!5209 (toList!751 lt!37199)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!80954 () Bool)

(assert (=> b!80954 (= e!52863 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37199)))))))

(assert (= (and d!19827 c!12709) b!80954))

(assert (= (and d!19827 (not c!12709)) b!80955))

(assert (= (and b!80955 c!12710) b!80956))

(assert (= (and b!80955 (not c!12710)) b!80957))

(assert (=> b!80956 m!81585))

(declare-fun m!82577 () Bool)

(assert (=> b!80956 m!82577))

(assert (=> b!80505 d!19827))

(declare-fun d!19829 () Bool)

(assert (=> d!19829 (= (get!1197 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) from!355) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80354 d!19829))

(declare-fun d!19831 () Bool)

(assert (=> d!19831 (= (+!111 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37479 lt!37195 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37700 () Unit!2350)

(declare-fun choose!486 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 V!3003 Int) Unit!2350)

(assert (=> d!19831 (= lt!37700 (choose!486 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37479 (zeroValue!2189 newMap!16) lt!37195 (minValue!2189 newMap!16) (defaultEntry!2293 newMap!16)))))

(assert (=> d!19831 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19831 (= (lemmaChangeZeroKeyThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37479 (zeroValue!2189 newMap!16) lt!37195 (minValue!2189 newMap!16) (defaultEntry!2293 newMap!16)) lt!37700)))

(declare-fun bs!3413 () Bool)

(assert (= bs!3413 d!19831))

(assert (=> bs!3413 m!81869))

(declare-fun m!82579 () Bool)

(assert (=> bs!3413 m!82579))

(assert (=> bs!3413 m!82043))

(assert (=> bs!3413 m!81869))

(declare-fun m!82581 () Bool)

(assert (=> bs!3413 m!82581))

(declare-fun m!82583 () Bool)

(assert (=> bs!3413 m!82583))

(assert (=> b!80620 d!19831))

(assert (=> b!80507 d!19825))

(assert (=> b!80507 d!19827))

(declare-fun d!19833 () Bool)

(declare-fun e!52865 () Bool)

(assert (=> d!19833 e!52865))

(declare-fun res!42121 () Bool)

(assert (=> d!19833 (=> res!42121 e!52865)))

(declare-fun lt!37703 () Bool)

(assert (=> d!19833 (= res!42121 (not lt!37703))))

(declare-fun lt!37702 () Bool)

(assert (=> d!19833 (= lt!37703 lt!37702)))

(declare-fun lt!37701 () Unit!2350)

(declare-fun e!52866 () Unit!2350)

(assert (=> d!19833 (= lt!37701 e!52866)))

(declare-fun c!12711 () Bool)

(assert (=> d!19833 (= c!12711 lt!37702)))

(assert (=> d!19833 (= lt!37702 (containsKey!141 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))

(assert (=> d!19833 (= (contains!750 call!7478 (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))) lt!37703)))

(declare-fun b!80958 () Bool)

(declare-fun lt!37704 () Unit!2350)

(assert (=> b!80958 (= e!52866 lt!37704)))

(assert (=> b!80958 (= lt!37704 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))

(assert (=> b!80958 (isDefined!91 (getValueByKey!137 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))

(declare-fun b!80959 () Bool)

(declare-fun Unit!2375 () Unit!2350)

(assert (=> b!80959 (= e!52866 Unit!2375)))

(declare-fun b!80960 () Bool)

(assert (=> b!80960 (= e!52865 (isDefined!91 (getValueByKey!137 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470))))))))

(assert (= (and d!19833 c!12711) b!80958))

(assert (= (and d!19833 (not c!12711)) b!80959))

(assert (= (and d!19833 (not res!42121)) b!80960))

(declare-fun m!82585 () Bool)

(assert (=> d!19833 m!82585))

(declare-fun m!82587 () Bool)

(assert (=> b!80958 m!82587))

(declare-fun m!82589 () Bool)

(assert (=> b!80958 m!82589))

(assert (=> b!80958 m!82589))

(declare-fun m!82591 () Bool)

(assert (=> b!80958 m!82591))

(assert (=> b!80960 m!82589))

(assert (=> b!80960 m!82589))

(assert (=> b!80960 m!82591))

(assert (=> bm!7489 d!19833))

(assert (=> b!80487 d!19769))

(declare-fun d!19835 () Bool)

(assert (=> d!19835 (= (+!111 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (+!111 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (=> d!19835 true))

(declare-fun _$28!134 () Unit!2350)

(assert (=> d!19835 (= (choose!477 lt!37190 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) _$28!134)))

(declare-fun bs!3414 () Bool)

(assert (= bs!3414 d!19835))

(assert (=> bs!3414 m!81757))

(assert (=> bs!3414 m!81757))

(assert (=> bs!3414 m!81759))

(assert (=> bs!3414 m!81753))

(assert (=> bs!3414 m!81753))

(assert (=> bs!3414 m!81755))

(assert (=> d!19649 d!19835))

(declare-fun d!19837 () Bool)

(declare-fun e!52867 () Bool)

(assert (=> d!19837 e!52867))

(declare-fun res!42122 () Bool)

(assert (=> d!19837 (=> (not res!42122) (not e!52867))))

(declare-fun lt!37708 () ListLongMap!1471)

(assert (=> d!19837 (= res!42122 (contains!750 lt!37708 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!37705 () List!1538)

(assert (=> d!19837 (= lt!37708 (ListLongMap!1472 lt!37705))))

(declare-fun lt!37706 () Unit!2350)

(declare-fun lt!37707 () Unit!2350)

(assert (=> d!19837 (= lt!37706 lt!37707)))

(assert (=> d!19837 (= (getValueByKey!137 lt!37705 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19837 (= lt!37707 (lemmaContainsTupThenGetReturnValue!56 lt!37705 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19837 (= lt!37705 (insertStrictlySorted!58 (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19837 (= (+!111 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37708)))

(declare-fun b!80961 () Bool)

(declare-fun res!42123 () Bool)

(assert (=> b!80961 (=> (not res!42123) (not e!52867))))

(assert (=> b!80961 (= res!42123 (= (getValueByKey!137 (toList!751 lt!37708) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!80962 () Bool)

(assert (=> b!80962 (= e!52867 (contains!753 (toList!751 lt!37708) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19837 res!42122) b!80961))

(assert (= (and b!80961 res!42123) b!80962))

(declare-fun m!82593 () Bool)

(assert (=> d!19837 m!82593))

(declare-fun m!82595 () Bool)

(assert (=> d!19837 m!82595))

(declare-fun m!82597 () Bool)

(assert (=> d!19837 m!82597))

(declare-fun m!82599 () Bool)

(assert (=> d!19837 m!82599))

(declare-fun m!82601 () Bool)

(assert (=> b!80961 m!82601))

(declare-fun m!82603 () Bool)

(assert (=> b!80962 m!82603))

(assert (=> d!19649 d!19837))

(declare-fun d!19839 () Bool)

(declare-fun e!52868 () Bool)

(assert (=> d!19839 e!52868))

(declare-fun res!42124 () Bool)

(assert (=> d!19839 (=> (not res!42124) (not e!52868))))

(declare-fun lt!37712 () ListLongMap!1471)

(assert (=> d!19839 (= res!42124 (contains!750 lt!37712 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!37709 () List!1538)

(assert (=> d!19839 (= lt!37712 (ListLongMap!1472 lt!37709))))

(declare-fun lt!37710 () Unit!2350)

(declare-fun lt!37711 () Unit!2350)

(assert (=> d!19839 (= lt!37710 lt!37711)))

(assert (=> d!19839 (= (getValueByKey!137 lt!37709 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19839 (= lt!37711 (lemmaContainsTupThenGetReturnValue!56 lt!37709 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19839 (= lt!37709 (insertStrictlySorted!58 (toList!751 lt!37190) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19839 (= (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!37712)))

(declare-fun b!80963 () Bool)

(declare-fun res!42125 () Bool)

(assert (=> b!80963 (=> (not res!42125) (not e!52868))))

(assert (=> b!80963 (= res!42125 (= (getValueByKey!137 (toList!751 lt!37712) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!80964 () Bool)

(assert (=> b!80964 (= e!52868 (contains!753 (toList!751 lt!37712) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!19839 res!42124) b!80963))

(assert (= (and b!80963 res!42125) b!80964))

(declare-fun m!82605 () Bool)

(assert (=> d!19839 m!82605))

(declare-fun m!82607 () Bool)

(assert (=> d!19839 m!82607))

(declare-fun m!82609 () Bool)

(assert (=> d!19839 m!82609))

(declare-fun m!82611 () Bool)

(assert (=> d!19839 m!82611))

(declare-fun m!82613 () Bool)

(assert (=> b!80963 m!82613))

(declare-fun m!82615 () Bool)

(assert (=> b!80964 m!82615))

(assert (=> d!19649 d!19839))

(declare-fun d!19841 () Bool)

(declare-fun e!52869 () Bool)

(assert (=> d!19841 e!52869))

(declare-fun res!42126 () Bool)

(assert (=> d!19841 (=> (not res!42126) (not e!52869))))

(declare-fun lt!37716 () ListLongMap!1471)

(assert (=> d!19841 (= res!42126 (contains!750 lt!37716 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!37713 () List!1538)

(assert (=> d!19841 (= lt!37716 (ListLongMap!1472 lt!37713))))

(declare-fun lt!37714 () Unit!2350)

(declare-fun lt!37715 () Unit!2350)

(assert (=> d!19841 (= lt!37714 lt!37715)))

(assert (=> d!19841 (= (getValueByKey!137 lt!37713 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19841 (= lt!37715 (lemmaContainsTupThenGetReturnValue!56 lt!37713 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19841 (= lt!37713 (insertStrictlySorted!58 (toList!751 lt!37190) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19841 (= (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37716)))

(declare-fun b!80965 () Bool)

(declare-fun res!42127 () Bool)

(assert (=> b!80965 (=> (not res!42127) (not e!52869))))

(assert (=> b!80965 (= res!42127 (= (getValueByKey!137 (toList!751 lt!37716) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!80966 () Bool)

(assert (=> b!80966 (= e!52869 (contains!753 (toList!751 lt!37716) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19841 res!42126) b!80965))

(assert (= (and b!80965 res!42127) b!80966))

(declare-fun m!82617 () Bool)

(assert (=> d!19841 m!82617))

(declare-fun m!82619 () Bool)

(assert (=> d!19841 m!82619))

(declare-fun m!82621 () Bool)

(assert (=> d!19841 m!82621))

(declare-fun m!82623 () Bool)

(assert (=> d!19841 m!82623))

(declare-fun m!82625 () Bool)

(assert (=> b!80965 m!82625))

(declare-fun m!82627 () Bool)

(assert (=> b!80966 m!82627))

(assert (=> d!19649 d!19841))

(declare-fun d!19843 () Bool)

(declare-fun e!52870 () Bool)

(assert (=> d!19843 e!52870))

(declare-fun res!42128 () Bool)

(assert (=> d!19843 (=> (not res!42128) (not e!52870))))

(declare-fun lt!37720 () ListLongMap!1471)

(assert (=> d!19843 (= res!42128 (contains!750 lt!37720 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!37717 () List!1538)

(assert (=> d!19843 (= lt!37720 (ListLongMap!1472 lt!37717))))

(declare-fun lt!37718 () Unit!2350)

(declare-fun lt!37719 () Unit!2350)

(assert (=> d!19843 (= lt!37718 lt!37719)))

(assert (=> d!19843 (= (getValueByKey!137 lt!37717 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19843 (= lt!37719 (lemmaContainsTupThenGetReturnValue!56 lt!37717 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19843 (= lt!37717 (insertStrictlySorted!58 (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19843 (= (+!111 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!37720)))

(declare-fun b!80967 () Bool)

(declare-fun res!42129 () Bool)

(assert (=> b!80967 (=> (not res!42129) (not e!52870))))

(assert (=> b!80967 (= res!42129 (= (getValueByKey!137 (toList!751 lt!37720) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!80968 () Bool)

(assert (=> b!80968 (= e!52870 (contains!753 (toList!751 lt!37720) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!19843 res!42128) b!80967))

(assert (= (and b!80967 res!42129) b!80968))

(declare-fun m!82629 () Bool)

(assert (=> d!19843 m!82629))

(declare-fun m!82631 () Bool)

(assert (=> d!19843 m!82631))

(declare-fun m!82633 () Bool)

(assert (=> d!19843 m!82633))

(declare-fun m!82635 () Bool)

(assert (=> d!19843 m!82635))

(declare-fun m!82637 () Bool)

(assert (=> b!80967 m!82637))

(declare-fun m!82639 () Bool)

(assert (=> b!80968 m!82639))

(assert (=> d!19649 d!19843))

(declare-fun d!19845 () Bool)

(declare-fun e!52871 () Bool)

(assert (=> d!19845 e!52871))

(declare-fun res!42130 () Bool)

(assert (=> d!19845 (=> res!42130 e!52871)))

(declare-fun lt!37723 () Bool)

(assert (=> d!19845 (= res!42130 (not lt!37723))))

(declare-fun lt!37722 () Bool)

(assert (=> d!19845 (= lt!37723 lt!37722)))

(declare-fun lt!37721 () Unit!2350)

(declare-fun e!52872 () Unit!2350)

(assert (=> d!19845 (= lt!37721 e!52872)))

(declare-fun c!12712 () Bool)

(assert (=> d!19845 (= c!12712 lt!37722)))

(assert (=> d!19845 (= lt!37722 (containsKey!141 (toList!751 lt!37285) (_1!1111 lt!37202)))))

(assert (=> d!19845 (= (contains!750 lt!37285 (_1!1111 lt!37202)) lt!37723)))

(declare-fun b!80969 () Bool)

(declare-fun lt!37724 () Unit!2350)

(assert (=> b!80969 (= e!52872 lt!37724)))

(assert (=> b!80969 (= lt!37724 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37285) (_1!1111 lt!37202)))))

(assert (=> b!80969 (isDefined!91 (getValueByKey!137 (toList!751 lt!37285) (_1!1111 lt!37202)))))

(declare-fun b!80970 () Bool)

(declare-fun Unit!2376 () Unit!2350)

(assert (=> b!80970 (= e!52872 Unit!2376)))

(declare-fun b!80971 () Bool)

(assert (=> b!80971 (= e!52871 (isDefined!91 (getValueByKey!137 (toList!751 lt!37285) (_1!1111 lt!37202))))))

(assert (= (and d!19845 c!12712) b!80969))

(assert (= (and d!19845 (not c!12712)) b!80970))

(assert (= (and d!19845 (not res!42130)) b!80971))

(declare-fun m!82641 () Bool)

(assert (=> d!19845 m!82641))

(declare-fun m!82643 () Bool)

(assert (=> b!80969 m!82643))

(assert (=> b!80969 m!81769))

(assert (=> b!80969 m!81769))

(declare-fun m!82645 () Bool)

(assert (=> b!80969 m!82645))

(assert (=> b!80971 m!81769))

(assert (=> b!80971 m!81769))

(assert (=> b!80971 m!82645))

(assert (=> d!19651 d!19845))

(declare-fun b!80973 () Bool)

(declare-fun e!52873 () Option!143)

(declare-fun e!52874 () Option!143)

(assert (=> b!80973 (= e!52873 e!52874)))

(declare-fun c!12714 () Bool)

(assert (=> b!80973 (= c!12714 (and ((_ is Cons!1534) lt!37282) (not (= (_1!1111 (h!2123 lt!37282)) (_1!1111 lt!37202)))))))

(declare-fun d!19847 () Bool)

(declare-fun c!12713 () Bool)

(assert (=> d!19847 (= c!12713 (and ((_ is Cons!1534) lt!37282) (= (_1!1111 (h!2123 lt!37282)) (_1!1111 lt!37202))))))

(assert (=> d!19847 (= (getValueByKey!137 lt!37282 (_1!1111 lt!37202)) e!52873)))

(declare-fun b!80975 () Bool)

(assert (=> b!80975 (= e!52874 None!141)))

(declare-fun b!80974 () Bool)

(assert (=> b!80974 (= e!52874 (getValueByKey!137 (t!5209 lt!37282) (_1!1111 lt!37202)))))

(declare-fun b!80972 () Bool)

(assert (=> b!80972 (= e!52873 (Some!142 (_2!1111 (h!2123 lt!37282))))))

(assert (= (and d!19847 c!12713) b!80972))

(assert (= (and d!19847 (not c!12713)) b!80973))

(assert (= (and b!80973 c!12714) b!80974))

(assert (= (and b!80973 (not c!12714)) b!80975))

(declare-fun m!82647 () Bool)

(assert (=> b!80974 m!82647))

(assert (=> d!19651 d!19847))

(declare-fun d!19849 () Bool)

(assert (=> d!19849 (= (getValueByKey!137 lt!37282 (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202)))))

(declare-fun lt!37725 () Unit!2350)

(assert (=> d!19849 (= lt!37725 (choose!478 lt!37282 (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(declare-fun e!52875 () Bool)

(assert (=> d!19849 e!52875))

(declare-fun res!42131 () Bool)

(assert (=> d!19849 (=> (not res!42131) (not e!52875))))

(assert (=> d!19849 (= res!42131 (isStrictlySorted!291 lt!37282))))

(assert (=> d!19849 (= (lemmaContainsTupThenGetReturnValue!56 lt!37282 (_1!1111 lt!37202) (_2!1111 lt!37202)) lt!37725)))

(declare-fun b!80976 () Bool)

(declare-fun res!42132 () Bool)

(assert (=> b!80976 (=> (not res!42132) (not e!52875))))

(assert (=> b!80976 (= res!42132 (containsKey!141 lt!37282 (_1!1111 lt!37202)))))

(declare-fun b!80977 () Bool)

(assert (=> b!80977 (= e!52875 (contains!753 lt!37282 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(assert (= (and d!19849 res!42131) b!80976))

(assert (= (and b!80976 res!42132) b!80977))

(assert (=> d!19849 m!81763))

(declare-fun m!82649 () Bool)

(assert (=> d!19849 m!82649))

(declare-fun m!82651 () Bool)

(assert (=> d!19849 m!82651))

(declare-fun m!82653 () Bool)

(assert (=> b!80976 m!82653))

(declare-fun m!82655 () Bool)

(assert (=> b!80977 m!82655))

(assert (=> d!19651 d!19849))

(declare-fun d!19851 () Bool)

(declare-fun e!52877 () Bool)

(assert (=> d!19851 e!52877))

(declare-fun res!42133 () Bool)

(assert (=> d!19851 (=> (not res!42133) (not e!52877))))

(declare-fun lt!37726 () List!1538)

(assert (=> d!19851 (= res!42133 (isStrictlySorted!291 lt!37726))))

(declare-fun e!52876 () List!1538)

(assert (=> d!19851 (= lt!37726 e!52876)))

(declare-fun c!12718 () Bool)

(assert (=> d!19851 (= c!12718 (and ((_ is Cons!1534) (toList!751 lt!37190)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 lt!37202))))))

(assert (=> d!19851 (isStrictlySorted!291 (toList!751 lt!37190))))

(assert (=> d!19851 (= (insertStrictlySorted!58 (toList!751 lt!37190) (_1!1111 lt!37202) (_2!1111 lt!37202)) lt!37726)))

(declare-fun b!80978 () Bool)

(assert (=> b!80978 (= e!52877 (contains!753 lt!37726 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun bm!7534 () Bool)

(declare-fun call!7537 () List!1538)

(declare-fun call!7538 () List!1538)

(assert (=> bm!7534 (= call!7537 call!7538)))

(declare-fun b!80979 () Bool)

(declare-fun res!42134 () Bool)

(assert (=> b!80979 (=> (not res!42134) (not e!52877))))

(assert (=> b!80979 (= res!42134 (containsKey!141 lt!37726 (_1!1111 lt!37202)))))

(declare-fun b!80980 () Bool)

(declare-fun e!52879 () List!1538)

(assert (=> b!80980 (= e!52879 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37190)) (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(declare-fun b!80981 () Bool)

(assert (=> b!80981 (= e!52876 call!7538)))

(declare-fun bm!7535 () Bool)

(assert (=> bm!7535 (= call!7538 ($colon$colon!69 e!52879 (ite c!12718 (h!2123 (toList!751 lt!37190)) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202)))))))

(declare-fun c!12716 () Bool)

(assert (=> bm!7535 (= c!12716 c!12718)))

(declare-fun c!12715 () Bool)

(declare-fun c!12717 () Bool)

(declare-fun b!80982 () Bool)

(assert (=> b!80982 (= e!52879 (ite c!12715 (t!5209 (toList!751 lt!37190)) (ite c!12717 (Cons!1534 (h!2123 (toList!751 lt!37190)) (t!5209 (toList!751 lt!37190))) Nil!1535)))))

(declare-fun b!80983 () Bool)

(declare-fun e!52880 () List!1538)

(assert (=> b!80983 (= e!52880 call!7537)))

(declare-fun b!80984 () Bool)

(declare-fun e!52878 () List!1538)

(declare-fun call!7539 () List!1538)

(assert (=> b!80984 (= e!52878 call!7539)))

(declare-fun b!80985 () Bool)

(assert (=> b!80985 (= c!12717 (and ((_ is Cons!1534) (toList!751 lt!37190)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 lt!37202))))))

(assert (=> b!80985 (= e!52880 e!52878)))

(declare-fun b!80986 () Bool)

(assert (=> b!80986 (= e!52878 call!7539)))

(declare-fun bm!7536 () Bool)

(assert (=> bm!7536 (= call!7539 call!7537)))

(declare-fun b!80987 () Bool)

(assert (=> b!80987 (= e!52876 e!52880)))

(assert (=> b!80987 (= c!12715 (and ((_ is Cons!1534) (toList!751 lt!37190)) (= (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 lt!37202))))))

(assert (= (and d!19851 c!12718) b!80981))

(assert (= (and d!19851 (not c!12718)) b!80987))

(assert (= (and b!80987 c!12715) b!80983))

(assert (= (and b!80987 (not c!12715)) b!80985))

(assert (= (and b!80985 c!12717) b!80984))

(assert (= (and b!80985 (not c!12717)) b!80986))

(assert (= (or b!80984 b!80986) bm!7536))

(assert (= (or b!80983 bm!7536) bm!7534))

(assert (= (or b!80981 bm!7534) bm!7535))

(assert (= (and bm!7535 c!12716) b!80980))

(assert (= (and bm!7535 (not c!12716)) b!80982))

(assert (= (and d!19851 res!42133) b!80979))

(assert (= (and b!80979 res!42134) b!80978))

(declare-fun m!82657 () Bool)

(assert (=> b!80979 m!82657))

(declare-fun m!82659 () Bool)

(assert (=> bm!7535 m!82659))

(declare-fun m!82661 () Bool)

(assert (=> d!19851 m!82661))

(declare-fun m!82663 () Bool)

(assert (=> d!19851 m!82663))

(declare-fun m!82665 () Bool)

(assert (=> b!80980 m!82665))

(declare-fun m!82667 () Bool)

(assert (=> b!80978 m!82667))

(assert (=> d!19651 d!19851))

(assert (=> bm!7475 d!19699))

(declare-fun d!19853 () Bool)

(declare-fun e!52881 () Bool)

(assert (=> d!19853 e!52881))

(declare-fun res!42135 () Bool)

(assert (=> d!19853 (=> (not res!42135) (not e!52881))))

(declare-fun lt!37730 () ListLongMap!1471)

(assert (=> d!19853 (= res!42135 (contains!750 lt!37730 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!37727 () List!1538)

(assert (=> d!19853 (= lt!37730 (ListLongMap!1472 lt!37727))))

(declare-fun lt!37728 () Unit!2350)

(declare-fun lt!37729 () Unit!2350)

(assert (=> d!19853 (= lt!37728 lt!37729)))

(assert (=> d!19853 (= (getValueByKey!137 lt!37727 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19853 (= lt!37729 (lemmaContainsTupThenGetReturnValue!56 lt!37727 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19853 (= lt!37727 (insertStrictlySorted!58 (toList!751 lt!37196) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19853 (= (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37730)))

(declare-fun b!80988 () Bool)

(declare-fun res!42136 () Bool)

(assert (=> b!80988 (=> (not res!42136) (not e!52881))))

(assert (=> b!80988 (= res!42136 (= (getValueByKey!137 (toList!751 lt!37730) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!80989 () Bool)

(assert (=> b!80989 (= e!52881 (contains!753 (toList!751 lt!37730) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19853 res!42135) b!80988))

(assert (= (and b!80988 res!42136) b!80989))

(declare-fun m!82669 () Bool)

(assert (=> d!19853 m!82669))

(declare-fun m!82671 () Bool)

(assert (=> d!19853 m!82671))

(declare-fun m!82673 () Bool)

(assert (=> d!19853 m!82673))

(declare-fun m!82675 () Bool)

(assert (=> d!19853 m!82675))

(declare-fun m!82677 () Bool)

(assert (=> b!80988 m!82677))

(declare-fun m!82679 () Bool)

(assert (=> b!80989 m!82679))

(assert (=> d!19653 d!19853))

(declare-fun d!19855 () Bool)

(declare-fun e!52882 () Bool)

(assert (=> d!19855 e!52882))

(declare-fun res!42137 () Bool)

(assert (=> d!19855 (=> (not res!42137) (not e!52882))))

(declare-fun lt!37734 () ListLongMap!1471)

(assert (=> d!19855 (= res!42137 (contains!750 lt!37734 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!37731 () List!1538)

(assert (=> d!19855 (= lt!37734 (ListLongMap!1472 lt!37731))))

(declare-fun lt!37732 () Unit!2350)

(declare-fun lt!37733 () Unit!2350)

(assert (=> d!19855 (= lt!37732 lt!37733)))

(assert (=> d!19855 (= (getValueByKey!137 lt!37731 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19855 (= lt!37733 (lemmaContainsTupThenGetReturnValue!56 lt!37731 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19855 (= lt!37731 (insertStrictlySorted!58 (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19855 (= (+!111 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37734)))

(declare-fun b!80990 () Bool)

(declare-fun res!42138 () Bool)

(assert (=> b!80990 (=> (not res!42138) (not e!52882))))

(assert (=> b!80990 (= res!42138 (= (getValueByKey!137 (toList!751 lt!37734) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!80991 () Bool)

(assert (=> b!80991 (= e!52882 (contains!753 (toList!751 lt!37734) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19855 res!42137) b!80990))

(assert (= (and b!80990 res!42138) b!80991))

(declare-fun m!82681 () Bool)

(assert (=> d!19855 m!82681))

(declare-fun m!82683 () Bool)

(assert (=> d!19855 m!82683))

(declare-fun m!82685 () Bool)

(assert (=> d!19855 m!82685))

(declare-fun m!82687 () Bool)

(assert (=> d!19855 m!82687))

(declare-fun m!82689 () Bool)

(assert (=> b!80990 m!82689))

(declare-fun m!82691 () Bool)

(assert (=> b!80991 m!82691))

(assert (=> d!19653 d!19855))

(declare-fun d!19857 () Bool)

(declare-fun e!52883 () Bool)

(assert (=> d!19857 e!52883))

(declare-fun res!42139 () Bool)

(assert (=> d!19857 (=> (not res!42139) (not e!52883))))

(declare-fun lt!37738 () ListLongMap!1471)

(assert (=> d!19857 (= res!42139 (contains!750 lt!37738 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!37735 () List!1538)

(assert (=> d!19857 (= lt!37738 (ListLongMap!1472 lt!37735))))

(declare-fun lt!37736 () Unit!2350)

(declare-fun lt!37737 () Unit!2350)

(assert (=> d!19857 (= lt!37736 lt!37737)))

(assert (=> d!19857 (= (getValueByKey!137 lt!37735 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19857 (= lt!37737 (lemmaContainsTupThenGetReturnValue!56 lt!37735 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19857 (= lt!37735 (insertStrictlySorted!58 (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19857 (= (+!111 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!37738)))

(declare-fun b!80992 () Bool)

(declare-fun res!42140 () Bool)

(assert (=> b!80992 (=> (not res!42140) (not e!52883))))

(assert (=> b!80992 (= res!42140 (= (getValueByKey!137 (toList!751 lt!37738) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!80993 () Bool)

(assert (=> b!80993 (= e!52883 (contains!753 (toList!751 lt!37738) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!19857 res!42139) b!80992))

(assert (= (and b!80992 res!42140) b!80993))

(declare-fun m!82693 () Bool)

(assert (=> d!19857 m!82693))

(declare-fun m!82695 () Bool)

(assert (=> d!19857 m!82695))

(declare-fun m!82697 () Bool)

(assert (=> d!19857 m!82697))

(declare-fun m!82699 () Bool)

(assert (=> d!19857 m!82699))

(declare-fun m!82701 () Bool)

(assert (=> b!80992 m!82701))

(declare-fun m!82703 () Bool)

(assert (=> b!80993 m!82703))

(assert (=> d!19653 d!19857))

(declare-fun d!19859 () Bool)

(assert (=> d!19859 (= (+!111 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (+!111 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (=> d!19859 true))

(declare-fun _$28!135 () Unit!2350)

(assert (=> d!19859 (= (choose!477 lt!37196 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))) _$28!135)))

(declare-fun bs!3415 () Bool)

(assert (= bs!3415 d!19859))

(assert (=> bs!3415 m!81779))

(assert (=> bs!3415 m!81779))

(assert (=> bs!3415 m!81781))

(assert (=> bs!3415 m!81775))

(assert (=> bs!3415 m!81775))

(assert (=> bs!3415 m!81777))

(assert (=> d!19653 d!19859))

(declare-fun d!19861 () Bool)

(declare-fun e!52884 () Bool)

(assert (=> d!19861 e!52884))

(declare-fun res!42141 () Bool)

(assert (=> d!19861 (=> (not res!42141) (not e!52884))))

(declare-fun lt!37742 () ListLongMap!1471)

(assert (=> d!19861 (= res!42141 (contains!750 lt!37742 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!37739 () List!1538)

(assert (=> d!19861 (= lt!37742 (ListLongMap!1472 lt!37739))))

(declare-fun lt!37740 () Unit!2350)

(declare-fun lt!37741 () Unit!2350)

(assert (=> d!19861 (= lt!37740 lt!37741)))

(assert (=> d!19861 (= (getValueByKey!137 lt!37739 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19861 (= lt!37741 (lemmaContainsTupThenGetReturnValue!56 lt!37739 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19861 (= lt!37739 (insertStrictlySorted!58 (toList!751 lt!37196) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!19861 (= (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!37742)))

(declare-fun b!80994 () Bool)

(declare-fun res!42142 () Bool)

(assert (=> b!80994 (=> (not res!42142) (not e!52884))))

(assert (=> b!80994 (= res!42142 (= (getValueByKey!137 (toList!751 lt!37742) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!80995 () Bool)

(assert (=> b!80995 (= e!52884 (contains!753 (toList!751 lt!37742) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!19861 res!42141) b!80994))

(assert (= (and b!80994 res!42142) b!80995))

(declare-fun m!82705 () Bool)

(assert (=> d!19861 m!82705))

(declare-fun m!82707 () Bool)

(assert (=> d!19861 m!82707))

(declare-fun m!82709 () Bool)

(assert (=> d!19861 m!82709))

(declare-fun m!82711 () Bool)

(assert (=> d!19861 m!82711))

(declare-fun m!82713 () Bool)

(assert (=> b!80994 m!82713))

(declare-fun m!82715 () Bool)

(assert (=> b!80995 m!82715))

(assert (=> d!19653 d!19861))

(assert (=> d!19637 d!19641))

(declare-fun d!19863 () Bool)

(assert (=> d!19863 (not (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!19863 true))

(declare-fun _$68!67 () Unit!2350)

(assert (=> d!19863 (= (choose!68 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536)) _$68!67)))

(declare-fun bs!3416 () Bool)

(assert (= bs!3416 d!19863))

(assert (=> bs!3416 m!81585))

(assert (=> bs!3416 m!81619))

(assert (=> d!19637 d!19863))

(declare-fun d!19865 () Bool)

(declare-fun e!52885 () Bool)

(assert (=> d!19865 e!52885))

(declare-fun res!42143 () Bool)

(assert (=> d!19865 (=> (not res!42143) (not e!52885))))

(declare-fun lt!37746 () ListLongMap!1471)

(assert (=> d!19865 (= res!42143 (contains!750 lt!37746 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun lt!37743 () List!1538)

(assert (=> d!19865 (= lt!37746 (ListLongMap!1472 lt!37743))))

(declare-fun lt!37744 () Unit!2350)

(declare-fun lt!37745 () Unit!2350)

(assert (=> d!19865 (= lt!37744 lt!37745)))

(assert (=> d!19865 (= (getValueByKey!137 lt!37743 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (Some!142 (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!19865 (= lt!37745 (lemmaContainsTupThenGetReturnValue!56 lt!37743 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!19865 (= lt!37743 (insertStrictlySorted!58 (toList!751 (ite c!12617 call!7476 call!7488)) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!19865 (= (+!111 (ite c!12617 call!7476 call!7488) (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!37746)))

(declare-fun b!80996 () Bool)

(declare-fun res!42144 () Bool)

(assert (=> b!80996 (=> (not res!42144) (not e!52885))))

(assert (=> b!80996 (= res!42144 (= (getValueByKey!137 (toList!751 lt!37746) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (Some!142 (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun b!80997 () Bool)

(assert (=> b!80997 (= e!52885 (contains!753 (toList!751 lt!37746) (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (= (and d!19865 res!42143) b!80996))

(assert (= (and b!80996 res!42144) b!80997))

(declare-fun m!82717 () Bool)

(assert (=> d!19865 m!82717))

(declare-fun m!82719 () Bool)

(assert (=> d!19865 m!82719))

(declare-fun m!82721 () Bool)

(assert (=> d!19865 m!82721))

(declare-fun m!82723 () Bool)

(assert (=> d!19865 m!82723))

(declare-fun m!82725 () Bool)

(assert (=> b!80996 m!82725))

(declare-fun m!82727 () Bool)

(assert (=> b!80997 m!82727))

(assert (=> bm!7467 d!19865))

(declare-fun bm!7539 () Bool)

(declare-fun call!7542 () (_ BitVec 32))

(assert (=> bm!7539 (= call!7542 (arrayCountValidKeys!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!81006 () Bool)

(declare-fun e!52890 () (_ BitVec 32))

(assert (=> b!81006 (= e!52890 (bvadd #b00000000000000000000000000000001 call!7542))))

(declare-fun b!81007 () Bool)

(declare-fun e!52891 () (_ BitVec 32))

(assert (=> b!81007 (= e!52891 e!52890)))

(declare-fun c!12724 () Bool)

(assert (=> b!81007 (= c!12724 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81009 () Bool)

(assert (=> b!81009 (= e!52891 #b00000000000000000000000000000000)))

(declare-fun d!19867 () Bool)

(declare-fun lt!37749 () (_ BitVec 32))

(assert (=> d!19867 (and (bvsge lt!37749 #b00000000000000000000000000000000) (bvsle lt!37749 (bvsub (size!2142 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19867 (= lt!37749 e!52891)))

(declare-fun c!12723 () Bool)

(assert (=> d!19867 (= c!12723 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!19867 (and (bvsle #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2142 (_keys!3957 newMap!16)) (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!19867 (= (arrayCountValidKeys!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) lt!37749)))

(declare-fun b!81008 () Bool)

(assert (=> b!81008 (= e!52890 call!7542)))

(assert (= (and d!19867 c!12723) b!81009))

(assert (= (and d!19867 (not c!12723)) b!81007))

(assert (= (and b!81007 c!12724) b!81006))

(assert (= (and b!81007 (not c!12724)) b!81008))

(assert (= (or b!81006 b!81008) bm!7539))

(declare-fun m!82729 () Bool)

(assert (=> bm!7539 m!82729))

(assert (=> b!81007 m!81991))

(assert (=> b!81007 m!81991))

(assert (=> b!81007 m!82035))

(assert (=> b!80346 d!19867))

(declare-fun d!19869 () Bool)

(declare-fun e!52892 () Bool)

(assert (=> d!19869 e!52892))

(declare-fun res!42145 () Bool)

(assert (=> d!19869 (=> res!42145 e!52892)))

(declare-fun lt!37752 () Bool)

(assert (=> d!19869 (= res!42145 (not lt!37752))))

(declare-fun lt!37751 () Bool)

(assert (=> d!19869 (= lt!37752 lt!37751)))

(declare-fun lt!37750 () Unit!2350)

(declare-fun e!52893 () Unit!2350)

(assert (=> d!19869 (= lt!37750 e!52893)))

(declare-fun c!12725 () Bool)

(assert (=> d!19869 (= c!12725 lt!37751)))

(assert (=> d!19869 (= lt!37751 (containsKey!141 (toList!751 lt!37302) (_1!1111 lt!37197)))))

(assert (=> d!19869 (= (contains!750 lt!37302 (_1!1111 lt!37197)) lt!37752)))

(declare-fun b!81010 () Bool)

(declare-fun lt!37753 () Unit!2350)

(assert (=> b!81010 (= e!52893 lt!37753)))

(assert (=> b!81010 (= lt!37753 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37302) (_1!1111 lt!37197)))))

(assert (=> b!81010 (isDefined!91 (getValueByKey!137 (toList!751 lt!37302) (_1!1111 lt!37197)))))

(declare-fun b!81011 () Bool)

(declare-fun Unit!2377 () Unit!2350)

(assert (=> b!81011 (= e!52893 Unit!2377)))

(declare-fun b!81012 () Bool)

(assert (=> b!81012 (= e!52892 (isDefined!91 (getValueByKey!137 (toList!751 lt!37302) (_1!1111 lt!37197))))))

(assert (= (and d!19869 c!12725) b!81010))

(assert (= (and d!19869 (not c!12725)) b!81011))

(assert (= (and d!19869 (not res!42145)) b!81012))

(declare-fun m!82731 () Bool)

(assert (=> d!19869 m!82731))

(declare-fun m!82733 () Bool)

(assert (=> b!81010 m!82733))

(assert (=> b!81010 m!81827))

(assert (=> b!81010 m!81827))

(declare-fun m!82735 () Bool)

(assert (=> b!81010 m!82735))

(assert (=> b!81012 m!81827))

(assert (=> b!81012 m!81827))

(assert (=> b!81012 m!82735))

(assert (=> d!19663 d!19869))

(declare-fun b!81014 () Bool)

(declare-fun e!52894 () Option!143)

(declare-fun e!52895 () Option!143)

(assert (=> b!81014 (= e!52894 e!52895)))

(declare-fun c!12727 () Bool)

(assert (=> b!81014 (= c!12727 (and ((_ is Cons!1534) lt!37299) (not (= (_1!1111 (h!2123 lt!37299)) (_1!1111 lt!37197)))))))

(declare-fun d!19871 () Bool)

(declare-fun c!12726 () Bool)

(assert (=> d!19871 (= c!12726 (and ((_ is Cons!1534) lt!37299) (= (_1!1111 (h!2123 lt!37299)) (_1!1111 lt!37197))))))

(assert (=> d!19871 (= (getValueByKey!137 lt!37299 (_1!1111 lt!37197)) e!52894)))

(declare-fun b!81016 () Bool)

(assert (=> b!81016 (= e!52895 None!141)))

(declare-fun b!81015 () Bool)

(assert (=> b!81015 (= e!52895 (getValueByKey!137 (t!5209 lt!37299) (_1!1111 lt!37197)))))

(declare-fun b!81013 () Bool)

(assert (=> b!81013 (= e!52894 (Some!142 (_2!1111 (h!2123 lt!37299))))))

(assert (= (and d!19871 c!12726) b!81013))

(assert (= (and d!19871 (not c!12726)) b!81014))

(assert (= (and b!81014 c!12727) b!81015))

(assert (= (and b!81014 (not c!12727)) b!81016))

(declare-fun m!82737 () Bool)

(assert (=> b!81015 m!82737))

(assert (=> d!19663 d!19871))

(declare-fun d!19873 () Bool)

(assert (=> d!19873 (= (getValueByKey!137 lt!37299 (_1!1111 lt!37197)) (Some!142 (_2!1111 lt!37197)))))

(declare-fun lt!37754 () Unit!2350)

(assert (=> d!19873 (= lt!37754 (choose!478 lt!37299 (_1!1111 lt!37197) (_2!1111 lt!37197)))))

(declare-fun e!52896 () Bool)

(assert (=> d!19873 e!52896))

(declare-fun res!42146 () Bool)

(assert (=> d!19873 (=> (not res!42146) (not e!52896))))

(assert (=> d!19873 (= res!42146 (isStrictlySorted!291 lt!37299))))

(assert (=> d!19873 (= (lemmaContainsTupThenGetReturnValue!56 lt!37299 (_1!1111 lt!37197) (_2!1111 lt!37197)) lt!37754)))

(declare-fun b!81017 () Bool)

(declare-fun res!42147 () Bool)

(assert (=> b!81017 (=> (not res!42147) (not e!52896))))

(assert (=> b!81017 (= res!42147 (containsKey!141 lt!37299 (_1!1111 lt!37197)))))

(declare-fun b!81018 () Bool)

(assert (=> b!81018 (= e!52896 (contains!753 lt!37299 (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(assert (= (and d!19873 res!42146) b!81017))

(assert (= (and b!81017 res!42147) b!81018))

(assert (=> d!19873 m!81821))

(declare-fun m!82739 () Bool)

(assert (=> d!19873 m!82739))

(declare-fun m!82741 () Bool)

(assert (=> d!19873 m!82741))

(declare-fun m!82743 () Bool)

(assert (=> b!81017 m!82743))

(declare-fun m!82745 () Bool)

(assert (=> b!81018 m!82745))

(assert (=> d!19663 d!19873))

(declare-fun d!19875 () Bool)

(declare-fun e!52898 () Bool)

(assert (=> d!19875 e!52898))

(declare-fun res!42148 () Bool)

(assert (=> d!19875 (=> (not res!42148) (not e!52898))))

(declare-fun lt!37755 () List!1538)

(assert (=> d!19875 (= res!42148 (isStrictlySorted!291 lt!37755))))

(declare-fun e!52897 () List!1538)

(assert (=> d!19875 (= lt!37755 e!52897)))

(declare-fun c!12731 () Bool)

(assert (=> d!19875 (= c!12731 (and ((_ is Cons!1534) (toList!751 lt!37190)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 lt!37197))))))

(assert (=> d!19875 (isStrictlySorted!291 (toList!751 lt!37190))))

(assert (=> d!19875 (= (insertStrictlySorted!58 (toList!751 lt!37190) (_1!1111 lt!37197) (_2!1111 lt!37197)) lt!37755)))

(declare-fun b!81019 () Bool)

(assert (=> b!81019 (= e!52898 (contains!753 lt!37755 (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun bm!7540 () Bool)

(declare-fun call!7543 () List!1538)

(declare-fun call!7544 () List!1538)

(assert (=> bm!7540 (= call!7543 call!7544)))

(declare-fun b!81020 () Bool)

(declare-fun res!42149 () Bool)

(assert (=> b!81020 (=> (not res!42149) (not e!52898))))

(assert (=> b!81020 (= res!42149 (containsKey!141 lt!37755 (_1!1111 lt!37197)))))

(declare-fun b!81021 () Bool)

(declare-fun e!52900 () List!1538)

(assert (=> b!81021 (= e!52900 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37190)) (_1!1111 lt!37197) (_2!1111 lt!37197)))))

(declare-fun b!81022 () Bool)

(assert (=> b!81022 (= e!52897 call!7544)))

(declare-fun bm!7541 () Bool)

(assert (=> bm!7541 (= call!7544 ($colon$colon!69 e!52900 (ite c!12731 (h!2123 (toList!751 lt!37190)) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197)))))))

(declare-fun c!12729 () Bool)

(assert (=> bm!7541 (= c!12729 c!12731)))

(declare-fun c!12728 () Bool)

(declare-fun c!12730 () Bool)

(declare-fun b!81023 () Bool)

(assert (=> b!81023 (= e!52900 (ite c!12728 (t!5209 (toList!751 lt!37190)) (ite c!12730 (Cons!1534 (h!2123 (toList!751 lt!37190)) (t!5209 (toList!751 lt!37190))) Nil!1535)))))

(declare-fun b!81024 () Bool)

(declare-fun e!52901 () List!1538)

(assert (=> b!81024 (= e!52901 call!7543)))

(declare-fun b!81025 () Bool)

(declare-fun e!52899 () List!1538)

(declare-fun call!7545 () List!1538)

(assert (=> b!81025 (= e!52899 call!7545)))

(declare-fun b!81026 () Bool)

(assert (=> b!81026 (= c!12730 (and ((_ is Cons!1534) (toList!751 lt!37190)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 lt!37197))))))

(assert (=> b!81026 (= e!52901 e!52899)))

(declare-fun b!81027 () Bool)

(assert (=> b!81027 (= e!52899 call!7545)))

(declare-fun bm!7542 () Bool)

(assert (=> bm!7542 (= call!7545 call!7543)))

(declare-fun b!81028 () Bool)

(assert (=> b!81028 (= e!52897 e!52901)))

(assert (=> b!81028 (= c!12728 (and ((_ is Cons!1534) (toList!751 lt!37190)) (= (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 lt!37197))))))

(assert (= (and d!19875 c!12731) b!81022))

(assert (= (and d!19875 (not c!12731)) b!81028))

(assert (= (and b!81028 c!12728) b!81024))

(assert (= (and b!81028 (not c!12728)) b!81026))

(assert (= (and b!81026 c!12730) b!81025))

(assert (= (and b!81026 (not c!12730)) b!81027))

(assert (= (or b!81025 b!81027) bm!7542))

(assert (= (or b!81024 bm!7542) bm!7540))

(assert (= (or b!81022 bm!7540) bm!7541))

(assert (= (and bm!7541 c!12729) b!81021))

(assert (= (and bm!7541 (not c!12729)) b!81023))

(assert (= (and d!19875 res!42148) b!81020))

(assert (= (and b!81020 res!42149) b!81019))

(declare-fun m!82747 () Bool)

(assert (=> b!81020 m!82747))

(declare-fun m!82749 () Bool)

(assert (=> bm!7541 m!82749))

(declare-fun m!82751 () Bool)

(assert (=> d!19875 m!82751))

(assert (=> d!19875 m!82663))

(declare-fun m!82753 () Bool)

(assert (=> b!81021 m!82753))

(declare-fun m!82755 () Bool)

(assert (=> b!81019 m!82755))

(assert (=> d!19663 d!19875))

(declare-fun d!19877 () Bool)

(declare-fun e!52902 () Bool)

(assert (=> d!19877 e!52902))

(declare-fun res!42150 () Bool)

(assert (=> d!19877 (=> res!42150 e!52902)))

(declare-fun lt!37758 () Bool)

(assert (=> d!19877 (= res!42150 (not lt!37758))))

(declare-fun lt!37757 () Bool)

(assert (=> d!19877 (= lt!37758 lt!37757)))

(declare-fun lt!37756 () Unit!2350)

(declare-fun e!52903 () Unit!2350)

(assert (=> d!19877 (= lt!37756 e!52903)))

(declare-fun c!12732 () Bool)

(assert (=> d!19877 (= c!12732 lt!37757)))

(assert (=> d!19877 (= lt!37757 (containsKey!141 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!19877 (= (contains!750 call!7473 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) lt!37758)))

(declare-fun b!81029 () Bool)

(declare-fun lt!37759 () Unit!2350)

(assert (=> b!81029 (= e!52903 lt!37759)))

(assert (=> b!81029 (= lt!37759 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> b!81029 (isDefined!91 (getValueByKey!137 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!81030 () Bool)

(declare-fun Unit!2378 () Unit!2350)

(assert (=> b!81030 (= e!52903 Unit!2378)))

(declare-fun b!81031 () Bool)

(assert (=> b!81031 (= e!52902 (isDefined!91 (getValueByKey!137 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (= (and d!19877 c!12732) b!81029))

(assert (= (and d!19877 (not c!12732)) b!81030))

(assert (= (and d!19877 (not res!42150)) b!81031))

(assert (=> d!19877 m!81585))

(declare-fun m!82757 () Bool)

(assert (=> d!19877 m!82757))

(assert (=> b!81029 m!81585))

(declare-fun m!82759 () Bool)

(assert (=> b!81029 m!82759))

(assert (=> b!81029 m!81585))

(declare-fun m!82761 () Bool)

(assert (=> b!81029 m!82761))

(assert (=> b!81029 m!82761))

(declare-fun m!82763 () Bool)

(assert (=> b!81029 m!82763))

(assert (=> b!81031 m!81585))

(assert (=> b!81031 m!82761))

(assert (=> b!81031 m!82761))

(assert (=> b!81031 m!82763))

(assert (=> b!80610 d!19877))

(declare-fun b!81032 () Bool)

(declare-fun e!52907 () Bool)

(declare-fun call!7546 () Bool)

(assert (=> b!81032 (= e!52907 call!7546)))

(declare-fun b!81033 () Bool)

(declare-fun e!52906 () Bool)

(assert (=> b!81033 (= e!52906 (contains!752 Nil!1536 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81034 () Bool)

(assert (=> b!81034 (= e!52907 call!7546)))

(declare-fun d!19879 () Bool)

(declare-fun res!42151 () Bool)

(declare-fun e!52904 () Bool)

(assert (=> d!19879 (=> res!42151 e!52904)))

(assert (=> d!19879 (= res!42151 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!19879 (= (arrayNoDuplicates!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 Nil!1536) e!52904)))

(declare-fun b!81035 () Bool)

(declare-fun e!52905 () Bool)

(assert (=> b!81035 (= e!52904 e!52905)))

(declare-fun res!42152 () Bool)

(assert (=> b!81035 (=> (not res!42152) (not e!52905))))

(assert (=> b!81035 (= res!42152 (not e!52906))))

(declare-fun res!42153 () Bool)

(assert (=> b!81035 (=> (not res!42153) (not e!52906))))

(assert (=> b!81035 (= res!42153 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81036 () Bool)

(assert (=> b!81036 (= e!52905 e!52907)))

(declare-fun c!12733 () Bool)

(assert (=> b!81036 (= c!12733 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7543 () Bool)

(assert (=> bm!7543 (= call!7546 (arrayNoDuplicates!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12733 (Cons!1535 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) Nil!1536) Nil!1536)))))

(assert (= (and d!19879 (not res!42151)) b!81035))

(assert (= (and b!81035 res!42153) b!81033))

(assert (= (and b!81035 res!42152) b!81036))

(assert (= (and b!81036 c!12733) b!81032))

(assert (= (and b!81036 (not c!12733)) b!81034))

(assert (= (or b!81032 b!81034) bm!7543))

(assert (=> b!81033 m!81991))

(assert (=> b!81033 m!81991))

(declare-fun m!82765 () Bool)

(assert (=> b!81033 m!82765))

(assert (=> b!81035 m!81991))

(assert (=> b!81035 m!81991))

(assert (=> b!81035 m!82035))

(assert (=> b!81036 m!81991))

(assert (=> b!81036 m!81991))

(assert (=> b!81036 m!82035))

(assert (=> bm!7543 m!81991))

(declare-fun m!82767 () Bool)

(assert (=> bm!7543 m!82767))

(assert (=> b!80348 d!19879))

(declare-fun d!19881 () Bool)

(declare-fun lt!37760 () Bool)

(assert (=> d!19881 (= lt!37760 (select (content!84 (toList!751 lt!37290)) lt!37188))))

(declare-fun e!52909 () Bool)

(assert (=> d!19881 (= lt!37760 e!52909)))

(declare-fun res!42155 () Bool)

(assert (=> d!19881 (=> (not res!42155) (not e!52909))))

(assert (=> d!19881 (= res!42155 ((_ is Cons!1534) (toList!751 lt!37290)))))

(assert (=> d!19881 (= (contains!753 (toList!751 lt!37290) lt!37188) lt!37760)))

(declare-fun b!81037 () Bool)

(declare-fun e!52908 () Bool)

(assert (=> b!81037 (= e!52909 e!52908)))

(declare-fun res!42154 () Bool)

(assert (=> b!81037 (=> res!42154 e!52908)))

(assert (=> b!81037 (= res!42154 (= (h!2123 (toList!751 lt!37290)) lt!37188))))

(declare-fun b!81038 () Bool)

(assert (=> b!81038 (= e!52908 (contains!753 (t!5209 (toList!751 lt!37290)) lt!37188))))

(assert (= (and d!19881 res!42155) b!81037))

(assert (= (and b!81037 (not res!42154)) b!81038))

(declare-fun m!82769 () Bool)

(assert (=> d!19881 m!82769))

(declare-fun m!82771 () Bool)

(assert (=> d!19881 m!82771))

(declare-fun m!82773 () Bool)

(assert (=> b!81038 m!82773))

(assert (=> b!80391 d!19881))

(declare-fun d!19883 () Bool)

(declare-fun lt!37763 () Bool)

(declare-fun content!85 (List!1539) (InoxSet (_ BitVec 64)))

(assert (=> d!19883 (= lt!37763 (select (content!85 Nil!1536) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun e!52914 () Bool)

(assert (=> d!19883 (= lt!37763 e!52914)))

(declare-fun res!42160 () Bool)

(assert (=> d!19883 (=> (not res!42160) (not e!52914))))

(assert (=> d!19883 (= res!42160 ((_ is Cons!1535) Nil!1536))))

(assert (=> d!19883 (= (contains!752 Nil!1536 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) lt!37763)))

(declare-fun b!81043 () Bool)

(declare-fun e!52915 () Bool)

(assert (=> b!81043 (= e!52914 e!52915)))

(declare-fun res!42161 () Bool)

(assert (=> b!81043 (=> res!42161 e!52915)))

(assert (=> b!81043 (= res!42161 (= (h!2124 Nil!1536) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!81044 () Bool)

(assert (=> b!81044 (= e!52915 (contains!752 (t!5210 Nil!1536) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (= (and d!19883 res!42160) b!81043))

(assert (= (and b!81043 (not res!42161)) b!81044))

(declare-fun m!82775 () Bool)

(assert (=> d!19883 m!82775))

(assert (=> d!19883 m!81585))

(declare-fun m!82777 () Bool)

(assert (=> d!19883 m!82777))

(assert (=> b!81044 m!81585))

(declare-fun m!82779 () Bool)

(assert (=> b!81044 m!82779))

(assert (=> b!80378 d!19883))

(declare-fun d!19885 () Bool)

(declare-fun lt!37764 () Bool)

(assert (=> d!19885 (= lt!37764 (select (content!84 (toList!751 lt!37294)) lt!37202))))

(declare-fun e!52917 () Bool)

(assert (=> d!19885 (= lt!37764 e!52917)))

(declare-fun res!42163 () Bool)

(assert (=> d!19885 (=> (not res!42163) (not e!52917))))

(assert (=> d!19885 (= res!42163 ((_ is Cons!1534) (toList!751 lt!37294)))))

(assert (=> d!19885 (= (contains!753 (toList!751 lt!37294) lt!37202) lt!37764)))

(declare-fun b!81045 () Bool)

(declare-fun e!52916 () Bool)

(assert (=> b!81045 (= e!52917 e!52916)))

(declare-fun res!42162 () Bool)

(assert (=> b!81045 (=> res!42162 e!52916)))

(assert (=> b!81045 (= res!42162 (= (h!2123 (toList!751 lt!37294)) lt!37202))))

(declare-fun b!81046 () Bool)

(assert (=> b!81046 (= e!52916 (contains!753 (t!5209 (toList!751 lt!37294)) lt!37202))))

(assert (= (and d!19885 res!42163) b!81045))

(assert (= (and b!81045 (not res!42162)) b!81046))

(declare-fun m!82781 () Bool)

(assert (=> d!19885 m!82781))

(declare-fun m!82783 () Bool)

(assert (=> d!19885 m!82783))

(declare-fun m!82785 () Bool)

(assert (=> b!81046 m!82785))

(assert (=> b!80393 d!19885))

(declare-fun b!81048 () Bool)

(declare-fun e!52918 () Option!143)

(declare-fun e!52919 () Option!143)

(assert (=> b!81048 (= e!52918 e!52919)))

(declare-fun c!12735 () Bool)

(assert (=> b!81048 (= c!12735 (and ((_ is Cons!1534) (toList!751 lt!37278)) (not (= (_1!1111 (h!2123 (toList!751 lt!37278))) (_1!1111 lt!37197)))))))

(declare-fun d!19887 () Bool)

(declare-fun c!12734 () Bool)

(assert (=> d!19887 (= c!12734 (and ((_ is Cons!1534) (toList!751 lt!37278)) (= (_1!1111 (h!2123 (toList!751 lt!37278))) (_1!1111 lt!37197))))))

(assert (=> d!19887 (= (getValueByKey!137 (toList!751 lt!37278) (_1!1111 lt!37197)) e!52918)))

(declare-fun b!81050 () Bool)

(assert (=> b!81050 (= e!52919 None!141)))

(declare-fun b!81049 () Bool)

(assert (=> b!81049 (= e!52919 (getValueByKey!137 (t!5209 (toList!751 lt!37278)) (_1!1111 lt!37197)))))

(declare-fun b!81047 () Bool)

(assert (=> b!81047 (= e!52918 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37278)))))))

(assert (= (and d!19887 c!12734) b!81047))

(assert (= (and d!19887 (not c!12734)) b!81048))

(assert (= (and b!81048 c!12735) b!81049))

(assert (= (and b!81048 (not c!12735)) b!81050))

(declare-fun m!82787 () Bool)

(assert (=> b!81049 m!82787))

(assert (=> b!80386 d!19887))

(declare-fun b!81067 () Bool)

(declare-fun e!52931 () Bool)

(declare-fun lt!37770 () SeekEntryResult!251)

(assert (=> b!81067 (= e!52931 ((_ is Undefined!251) lt!37770))))

(declare-fun b!81069 () Bool)

(declare-fun res!42173 () Bool)

(declare-fun e!52928 () Bool)

(assert (=> b!81069 (=> (not res!42173) (not e!52928))))

(assert (=> b!81069 (= res!42173 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3142 lt!37770)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81069 (and (bvsge (index!3142 lt!37770) #b00000000000000000000000000000000) (bvslt (index!3142 lt!37770) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun bm!7548 () Bool)

(declare-fun call!7552 () Bool)

(assert (=> bm!7548 (= call!7552 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!81070 () Bool)

(declare-fun res!42174 () Bool)

(assert (=> b!81070 (=> (not res!42174) (not e!52928))))

(declare-fun call!7551 () Bool)

(assert (=> b!81070 (= res!42174 call!7551)))

(assert (=> b!81070 (= e!52931 e!52928)))

(declare-fun b!81071 () Bool)

(declare-fun e!52929 () Bool)

(assert (=> b!81071 (= e!52929 e!52931)))

(declare-fun c!12740 () Bool)

(assert (=> b!81071 (= c!12740 ((_ is MissingVacant!251) lt!37770))))

(declare-fun c!12741 () Bool)

(declare-fun bm!7549 () Bool)

(assert (=> bm!7549 (= call!7551 (inRange!0 (ite c!12741 (index!3139 lt!37770) (index!3142 lt!37770)) (mask!6299 newMap!16)))))

(declare-fun b!81072 () Bool)

(declare-fun e!52930 () Bool)

(assert (=> b!81072 (= e!52930 (not call!7552))))

(declare-fun b!81073 () Bool)

(assert (=> b!81073 (= e!52928 (not call!7552))))

(declare-fun b!81074 () Bool)

(assert (=> b!81074 (= e!52929 e!52930)))

(declare-fun res!42172 () Bool)

(assert (=> b!81074 (= res!42172 call!7551)))

(assert (=> b!81074 (=> (not res!42172) (not e!52930))))

(declare-fun d!19889 () Bool)

(assert (=> d!19889 e!52929))

(assert (=> d!19889 (= c!12741 ((_ is MissingZero!251) lt!37770))))

(assert (=> d!19889 (= lt!37770 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun lt!37769 () Unit!2350)

(declare-fun choose!487 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) Int) Unit!2350)

(assert (=> d!19889 (= lt!37769 (choose!487 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(assert (=> d!19889 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19889 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)) lt!37769)))

(declare-fun b!81068 () Bool)

(assert (=> b!81068 (and (bvsge (index!3139 lt!37770) #b00000000000000000000000000000000) (bvslt (index!3139 lt!37770) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun res!42175 () Bool)

(assert (=> b!81068 (= res!42175 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3139 lt!37770)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81068 (=> (not res!42175) (not e!52930))))

(assert (= (and d!19889 c!12741) b!81074))

(assert (= (and d!19889 (not c!12741)) b!81071))

(assert (= (and b!81074 res!42172) b!81068))

(assert (= (and b!81068 res!42175) b!81072))

(assert (= (and b!81071 c!12740) b!81070))

(assert (= (and b!81071 (not c!12740)) b!81067))

(assert (= (and b!81070 res!42174) b!81069))

(assert (= (and b!81069 res!42173) b!81073))

(assert (= (or b!81074 b!81070) bm!7549))

(assert (= (or b!81072 b!81073) bm!7548))

(declare-fun m!82789 () Bool)

(assert (=> b!81069 m!82789))

(declare-fun m!82791 () Bool)

(assert (=> bm!7549 m!82791))

(assert (=> d!19889 m!81585))

(assert (=> d!19889 m!81945))

(assert (=> d!19889 m!81585))

(declare-fun m!82793 () Bool)

(assert (=> d!19889 m!82793))

(assert (=> d!19889 m!82043))

(assert (=> bm!7548 m!81585))

(assert (=> bm!7548 m!81933))

(declare-fun m!82795 () Bool)

(assert (=> b!81068 m!82795))

(assert (=> bm!7470 d!19889))

(declare-fun d!19891 () Bool)

(declare-fun lt!37771 () Bool)

(assert (=> d!19891 (= lt!37771 (select (content!84 (toList!751 lt!37298)) lt!37188))))

(declare-fun e!52933 () Bool)

(assert (=> d!19891 (= lt!37771 e!52933)))

(declare-fun res!42177 () Bool)

(assert (=> d!19891 (=> (not res!42177) (not e!52933))))

(assert (=> d!19891 (= res!42177 ((_ is Cons!1534) (toList!751 lt!37298)))))

(assert (=> d!19891 (= (contains!753 (toList!751 lt!37298) lt!37188) lt!37771)))

(declare-fun b!81075 () Bool)

(declare-fun e!52932 () Bool)

(assert (=> b!81075 (= e!52933 e!52932)))

(declare-fun res!42176 () Bool)

(assert (=> b!81075 (=> res!42176 e!52932)))

(assert (=> b!81075 (= res!42176 (= (h!2123 (toList!751 lt!37298)) lt!37188))))

(declare-fun b!81076 () Bool)

(assert (=> b!81076 (= e!52932 (contains!753 (t!5209 (toList!751 lt!37298)) lt!37188))))

(assert (= (and d!19891 res!42177) b!81075))

(assert (= (and b!81075 (not res!42176)) b!81076))

(declare-fun m!82797 () Bool)

(assert (=> d!19891 m!82797))

(declare-fun m!82799 () Bool)

(assert (=> d!19891 m!82799))

(declare-fun m!82801 () Bool)

(assert (=> b!81076 m!82801))

(assert (=> b!80395 d!19891))

(declare-fun call!7563 () Bool)

(declare-fun bm!7558 () Bool)

(assert (=> bm!7558 (= call!7563 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!19893 () Bool)

(declare-fun e!52950 () Bool)

(assert (=> d!19893 e!52950))

(declare-fun res!42198 () Bool)

(assert (=> d!19893 (=> (not res!42198) (not e!52950))))

(declare-fun lt!37854 () tuple2!2200)

(assert (=> d!19893 (= res!42198 (_1!1110 lt!37854))))

(assert (=> d!19893 (= lt!37854 (tuple2!2201 true (LongMapFixedSize!739 (defaultEntry!2293 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (bvadd (_size!418 newMap!16) #b00000000000000000000000000000001) (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (_vacant!418 newMap!16))))))

(declare-fun lt!37846 () Unit!2350)

(declare-fun lt!37833 () Unit!2350)

(assert (=> d!19893 (= lt!37846 lt!37833)))

(declare-fun lt!37845 () array!3988)

(declare-fun lt!37852 () array!3990)

(assert (=> d!19893 (contains!750 (getCurrentListMap!437 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470))))))

(assert (=> d!19893 (= lt!37833 (lemmaValidKeyInArrayIsInListMap!87 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (defaultEntry!2293 newMap!16)))))

(assert (=> d!19893 (= lt!37852 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))))))

(assert (=> d!19893 (= lt!37845 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun lt!37853 () Unit!2350)

(declare-fun lt!37860 () Unit!2350)

(assert (=> d!19893 (= lt!37853 lt!37860)))

(declare-fun lt!37850 () array!3988)

(assert (=> d!19893 (= (arrayCountValidKeys!0 lt!37850 (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (bvadd (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3988 (_ BitVec 32)) Unit!2350)

(assert (=> d!19893 (= lt!37860 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!37850 (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470))))))

(assert (=> d!19893 (= lt!37850 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun lt!37851 () Unit!2350)

(declare-fun lt!37841 () Unit!2350)

(assert (=> d!19893 (= lt!37851 lt!37841)))

(declare-fun lt!37861 () array!3988)

(assert (=> d!19893 (arrayContainsKey!0 lt!37861 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!19893 (= lt!37841 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!37861 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470))))))

(assert (=> d!19893 (= lt!37861 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun lt!37848 () Unit!2350)

(declare-fun lt!37839 () Unit!2350)

(assert (=> d!19893 (= lt!37848 lt!37839)))

(assert (=> d!19893 (= (+!111 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (getCurrentListMap!437 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!17 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) (_ BitVec 64) V!3003 Int) Unit!2350)

(assert (=> d!19893 (= lt!37839 (lemmaAddValidKeyToArrayThenAddPairToListMap!17 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37843 () Unit!2350)

(declare-fun lt!37834 () Unit!2350)

(assert (=> d!19893 (= lt!37843 lt!37834)))

(assert (=> d!19893 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (mask!6299 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3988 (_ BitVec 32) (_ BitVec 32)) Unit!2350)

(assert (=> d!19893 (= lt!37834 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (mask!6299 newMap!16)))))

(declare-fun lt!37847 () Unit!2350)

(declare-fun lt!37836 () Unit!2350)

(assert (=> d!19893 (= lt!37847 lt!37836)))

(assert (=> d!19893 (= (arrayCountValidKeys!0 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3988 (_ BitVec 32) (_ BitVec 64)) Unit!2350)

(assert (=> d!19893 (= lt!37836 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3957 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun lt!37840 () Unit!2350)

(declare-fun lt!37838 () Unit!2350)

(assert (=> d!19893 (= lt!37840 lt!37838)))

(declare-fun lt!37849 () List!1539)

(declare-fun lt!37858 () (_ BitVec 32))

(assert (=> d!19893 (arrayNoDuplicates!0 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) lt!37858 lt!37849)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3988 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1539) Unit!2350)

(assert (=> d!19893 (= lt!37838 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) lt!37858 lt!37849))))

(assert (=> d!19893 (= lt!37849 Nil!1536)))

(assert (=> d!19893 (= lt!37858 #b00000000000000000000000000000000)))

(declare-fun lt!37844 () Unit!2350)

(declare-fun e!52952 () Unit!2350)

(assert (=> d!19893 (= lt!37844 e!52952)))

(declare-fun c!12750 () Bool)

(assert (=> d!19893 (= c!12750 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!37837 () Unit!2350)

(declare-fun e!52955 () Unit!2350)

(assert (=> d!19893 (= lt!37837 e!52955)))

(declare-fun c!12752 () Bool)

(assert (=> d!19893 (= c!12752 (contains!750 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!19893 (valid!316 newMap!16)))

(assert (=> d!19893 (= (updateHelperNewKey!29 newMap!16 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470))) lt!37854)))

(declare-fun b!81111 () Bool)

(declare-fun res!42200 () Bool)

(assert (=> b!81111 (=> (not res!42200) (not e!52950))))

(assert (=> b!81111 (= res!42200 (contains!750 (map!1183 (_2!1110 lt!37854)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!81112 () Bool)

(declare-fun c!12753 () Bool)

(declare-fun lt!37859 () SeekEntryResult!251)

(assert (=> b!81112 (= c!12753 ((_ is MissingVacant!251) lt!37859))))

(declare-fun e!52954 () Bool)

(declare-fun e!52957 () Bool)

(assert (=> b!81112 (= e!52954 e!52957)))

(declare-fun b!81113 () Bool)

(declare-fun Unit!2379 () Unit!2350)

(assert (=> b!81113 (= e!52952 Unit!2379)))

(declare-fun lt!37856 () Unit!2350)

(declare-fun lemmaArrayContainsKeyThenInListMap!17 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) (_ BitVec 32) Int) Unit!2350)

(assert (=> b!81113 (= lt!37856 (lemmaArrayContainsKeyThenInListMap!17 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(assert (=> b!81113 (contains!750 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))

(declare-fun lt!37835 () Unit!2350)

(assert (=> b!81113 (= lt!37835 lt!37856)))

(assert (=> b!81113 false))

(declare-fun b!81114 () Bool)

(declare-fun e!52951 () Bool)

(assert (=> b!81114 (= e!52951 (not call!7563))))

(declare-fun b!81115 () Bool)

(declare-fun lt!37842 () Unit!2350)

(assert (=> b!81115 (= e!52955 lt!37842)))

(assert (=> b!81115 (= lt!37842 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(declare-fun call!7564 () SeekEntryResult!251)

(assert (=> b!81115 (= lt!37859 call!7564)))

(declare-fun c!12751 () Bool)

(assert (=> b!81115 (= c!12751 ((_ is MissingZero!251) lt!37859))))

(assert (=> b!81115 e!52954))

(declare-fun b!81116 () Bool)

(declare-fun Unit!2380 () Unit!2350)

(assert (=> b!81116 (= e!52955 Unit!2380)))

(declare-fun lt!37855 () Unit!2350)

(assert (=> b!81116 (= lt!37855 (lemmaInListMapThenSeekEntryOrOpenFindsIt!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37857 () SeekEntryResult!251)

(assert (=> b!81116 (= lt!37857 call!7564)))

(declare-fun res!42203 () Bool)

(assert (=> b!81116 (= res!42203 ((_ is Found!251) lt!37857))))

(declare-fun e!52956 () Bool)

(assert (=> b!81116 (=> (not res!42203) (not e!52956))))

(assert (=> b!81116 e!52956))

(declare-fun lt!37832 () Unit!2350)

(assert (=> b!81116 (= lt!37832 lt!37855)))

(assert (=> b!81116 false))

(declare-fun b!81117 () Bool)

(declare-fun res!42201 () Bool)

(declare-fun e!52953 () Bool)

(assert (=> b!81117 (=> (not res!42201) (not e!52953))))

(assert (=> b!81117 (= res!42201 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3139 lt!37859)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81118 () Bool)

(assert (=> b!81118 (= e!52950 (= (map!1183 (_2!1110 lt!37854)) (+!111 (map!1183 newMap!16) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81119 () Bool)

(declare-fun res!42204 () Bool)

(assert (=> b!81119 (=> (not res!42204) (not e!52950))))

(assert (=> b!81119 (= res!42204 (valid!316 (_2!1110 lt!37854)))))

(declare-fun b!81120 () Bool)

(declare-fun res!42199 () Bool)

(assert (=> b!81120 (=> (not res!42199) (not e!52953))))

(declare-fun call!7561 () Bool)

(assert (=> b!81120 (= res!42199 call!7561)))

(assert (=> b!81120 (= e!52954 e!52953)))

(declare-fun b!81121 () Bool)

(assert (=> b!81121 (= e!52956 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37857)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!81122 () Bool)

(declare-fun res!42196 () Bool)

(assert (=> b!81122 (= res!42196 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3142 lt!37859)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81122 (=> (not res!42196) (not e!52951))))

(declare-fun b!81123 () Bool)

(assert (=> b!81123 (= e!52957 ((_ is Undefined!251) lt!37859))))

(declare-fun b!81124 () Bool)

(declare-fun res!42202 () Bool)

(declare-fun call!7562 () Bool)

(assert (=> b!81124 (= res!42202 call!7562)))

(assert (=> b!81124 (=> (not res!42202) (not e!52956))))

(declare-fun bm!7559 () Bool)

(assert (=> bm!7559 (= call!7561 call!7562)))

(declare-fun b!81125 () Bool)

(declare-fun Unit!2381 () Unit!2350)

(assert (=> b!81125 (= e!52952 Unit!2381)))

(declare-fun b!81126 () Bool)

(assert (=> b!81126 (= e!52953 (not call!7563))))

(declare-fun bm!7560 () Bool)

(assert (=> bm!7560 (= call!7562 (inRange!0 (ite c!12752 (index!3140 lt!37857) (ite c!12751 (index!3139 lt!37859) (index!3142 lt!37859))) (mask!6299 newMap!16)))))

(declare-fun bm!7561 () Bool)

(assert (=> bm!7561 (= call!7564 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun b!81127 () Bool)

(assert (=> b!81127 (= e!52957 e!52951)))

(declare-fun res!42197 () Bool)

(assert (=> b!81127 (= res!42197 call!7561)))

(assert (=> b!81127 (=> (not res!42197) (not e!52951))))

(assert (= (and d!19893 c!12752) b!81116))

(assert (= (and d!19893 (not c!12752)) b!81115))

(assert (= (and b!81116 res!42203) b!81124))

(assert (= (and b!81124 res!42202) b!81121))

(assert (= (and b!81115 c!12751) b!81120))

(assert (= (and b!81115 (not c!12751)) b!81112))

(assert (= (and b!81120 res!42199) b!81117))

(assert (= (and b!81117 res!42201) b!81126))

(assert (= (and b!81112 c!12753) b!81127))

(assert (= (and b!81112 (not c!12753)) b!81123))

(assert (= (and b!81127 res!42197) b!81122))

(assert (= (and b!81122 res!42196) b!81114))

(assert (= (or b!81120 b!81127) bm!7559))

(assert (= (or b!81126 b!81114) bm!7558))

(assert (= (or b!81124 bm!7559) bm!7560))

(assert (= (or b!81116 b!81115) bm!7561))

(assert (= (and d!19893 c!12750) b!81113))

(assert (= (and d!19893 (not c!12750)) b!81125))

(assert (= (and d!19893 res!42198) b!81119))

(assert (= (and b!81119 res!42204) b!81111))

(assert (= (and b!81111 res!42200) b!81118))

(assert (=> d!19893 m!81585))

(declare-fun m!82803 () Bool)

(assert (=> d!19893 m!82803))

(declare-fun m!82805 () Bool)

(assert (=> d!19893 m!82805))

(assert (=> d!19893 m!81585))

(declare-fun m!82807 () Bool)

(assert (=> d!19893 m!82807))

(declare-fun m!82809 () Bool)

(assert (=> d!19893 m!82809))

(assert (=> d!19893 m!81711))

(assert (=> d!19893 m!81869))

(assert (=> d!19893 m!82525))

(declare-fun m!82811 () Bool)

(assert (=> d!19893 m!82811))

(assert (=> d!19893 m!81585))

(assert (=> d!19893 m!81933))

(assert (=> d!19893 m!81585))

(declare-fun m!82813 () Bool)

(assert (=> d!19893 m!82813))

(assert (=> d!19893 m!81581))

(declare-fun m!82815 () Bool)

(assert (=> d!19893 m!82815))

(assert (=> d!19893 m!81585))

(declare-fun m!82817 () Bool)

(assert (=> d!19893 m!82817))

(assert (=> d!19893 m!81869))

(assert (=> d!19893 m!81585))

(declare-fun m!82819 () Bool)

(assert (=> d!19893 m!82819))

(assert (=> d!19893 m!81585))

(declare-fun m!82821 () Bool)

(assert (=> d!19893 m!82821))

(declare-fun m!82823 () Bool)

(assert (=> d!19893 m!82823))

(declare-fun m!82825 () Bool)

(assert (=> d!19893 m!82825))

(declare-fun m!82827 () Bool)

(assert (=> d!19893 m!82827))

(declare-fun m!82829 () Bool)

(assert (=> d!19893 m!82829))

(declare-fun m!82831 () Bool)

(assert (=> d!19893 m!82831))

(assert (=> d!19893 m!81585))

(declare-fun m!82833 () Bool)

(assert (=> d!19893 m!82833))

(declare-fun m!82835 () Bool)

(assert (=> d!19893 m!82835))

(assert (=> d!19893 m!81869))

(declare-fun m!82837 () Bool)

(assert (=> d!19893 m!82837))

(assert (=> d!19893 m!82823))

(assert (=> d!19893 m!82809))

(declare-fun m!82839 () Bool)

(assert (=> d!19893 m!82839))

(declare-fun m!82841 () Bool)

(assert (=> b!81122 m!82841))

(declare-fun m!82843 () Bool)

(assert (=> b!81111 m!82843))

(assert (=> b!81111 m!82843))

(assert (=> b!81111 m!81585))

(declare-fun m!82845 () Bool)

(assert (=> b!81111 m!82845))

(assert (=> b!81115 m!81585))

(assert (=> b!81115 m!81969))

(assert (=> b!81113 m!81585))

(declare-fun m!82847 () Bool)

(assert (=> b!81113 m!82847))

(assert (=> b!81113 m!81869))

(assert (=> b!81113 m!81869))

(assert (=> b!81113 m!81585))

(assert (=> b!81113 m!82819))

(declare-fun m!82849 () Bool)

(assert (=> bm!7560 m!82849))

(assert (=> b!81116 m!81585))

(assert (=> b!81116 m!81959))

(assert (=> b!81118 m!82843))

(assert (=> b!81118 m!81607))

(assert (=> b!81118 m!81607))

(declare-fun m!82851 () Bool)

(assert (=> b!81118 m!82851))

(declare-fun m!82853 () Bool)

(assert (=> b!81117 m!82853))

(assert (=> bm!7561 m!81585))

(assert (=> bm!7561 m!81945))

(declare-fun m!82855 () Bool)

(assert (=> b!81119 m!82855))

(assert (=> bm!7558 m!81585))

(assert (=> bm!7558 m!81933))

(declare-fun m!82857 () Bool)

(assert (=> b!81121 m!82857))

(assert (=> bm!7486 d!19893))

(declare-fun d!19895 () Bool)

(declare-fun e!52958 () Bool)

(assert (=> d!19895 e!52958))

(declare-fun res!42205 () Bool)

(assert (=> d!19895 (=> res!42205 e!52958)))

(declare-fun lt!37864 () Bool)

(assert (=> d!19895 (= res!42205 (not lt!37864))))

(declare-fun lt!37863 () Bool)

(assert (=> d!19895 (= lt!37864 lt!37863)))

(declare-fun lt!37862 () Unit!2350)

(declare-fun e!52959 () Unit!2350)

(assert (=> d!19895 (= lt!37862 e!52959)))

(declare-fun c!12754 () Bool)

(assert (=> d!19895 (= c!12754 lt!37863)))

(assert (=> d!19895 (= lt!37863 (containsKey!141 (toList!751 lt!37306) (_1!1111 lt!37202)))))

(assert (=> d!19895 (= (contains!750 lt!37306 (_1!1111 lt!37202)) lt!37864)))

(declare-fun b!81128 () Bool)

(declare-fun lt!37865 () Unit!2350)

(assert (=> b!81128 (= e!52959 lt!37865)))

(assert (=> b!81128 (= lt!37865 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37306) (_1!1111 lt!37202)))))

(assert (=> b!81128 (isDefined!91 (getValueByKey!137 (toList!751 lt!37306) (_1!1111 lt!37202)))))

(declare-fun b!81129 () Bool)

(declare-fun Unit!2382 () Unit!2350)

(assert (=> b!81129 (= e!52959 Unit!2382)))

(declare-fun b!81130 () Bool)

(assert (=> b!81130 (= e!52958 (isDefined!91 (getValueByKey!137 (toList!751 lt!37306) (_1!1111 lt!37202))))))

(assert (= (and d!19895 c!12754) b!81128))

(assert (= (and d!19895 (not c!12754)) b!81129))

(assert (= (and d!19895 (not res!42205)) b!81130))

(declare-fun m!82859 () Bool)

(assert (=> d!19895 m!82859))

(declare-fun m!82861 () Bool)

(assert (=> b!81128 m!82861))

(assert (=> b!81128 m!81839))

(assert (=> b!81128 m!81839))

(declare-fun m!82863 () Bool)

(assert (=> b!81128 m!82863))

(assert (=> b!81130 m!81839))

(assert (=> b!81130 m!81839))

(assert (=> b!81130 m!82863))

(assert (=> d!19665 d!19895))

(declare-fun b!81132 () Bool)

(declare-fun e!52960 () Option!143)

(declare-fun e!52961 () Option!143)

(assert (=> b!81132 (= e!52960 e!52961)))

(declare-fun c!12756 () Bool)

(assert (=> b!81132 (= c!12756 (and ((_ is Cons!1534) lt!37303) (not (= (_1!1111 (h!2123 lt!37303)) (_1!1111 lt!37202)))))))

(declare-fun d!19897 () Bool)

(declare-fun c!12755 () Bool)

(assert (=> d!19897 (= c!12755 (and ((_ is Cons!1534) lt!37303) (= (_1!1111 (h!2123 lt!37303)) (_1!1111 lt!37202))))))

(assert (=> d!19897 (= (getValueByKey!137 lt!37303 (_1!1111 lt!37202)) e!52960)))

(declare-fun b!81134 () Bool)

(assert (=> b!81134 (= e!52961 None!141)))

(declare-fun b!81133 () Bool)

(assert (=> b!81133 (= e!52961 (getValueByKey!137 (t!5209 lt!37303) (_1!1111 lt!37202)))))

(declare-fun b!81131 () Bool)

(assert (=> b!81131 (= e!52960 (Some!142 (_2!1111 (h!2123 lt!37303))))))

(assert (= (and d!19897 c!12755) b!81131))

(assert (= (and d!19897 (not c!12755)) b!81132))

(assert (= (and b!81132 c!12756) b!81133))

(assert (= (and b!81132 (not c!12756)) b!81134))

(declare-fun m!82865 () Bool)

(assert (=> b!81133 m!82865))

(assert (=> d!19665 d!19897))

(declare-fun d!19899 () Bool)

(assert (=> d!19899 (= (getValueByKey!137 lt!37303 (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202)))))

(declare-fun lt!37866 () Unit!2350)

(assert (=> d!19899 (= lt!37866 (choose!478 lt!37303 (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(declare-fun e!52962 () Bool)

(assert (=> d!19899 e!52962))

(declare-fun res!42206 () Bool)

(assert (=> d!19899 (=> (not res!42206) (not e!52962))))

(assert (=> d!19899 (= res!42206 (isStrictlySorted!291 lt!37303))))

(assert (=> d!19899 (= (lemmaContainsTupThenGetReturnValue!56 lt!37303 (_1!1111 lt!37202) (_2!1111 lt!37202)) lt!37866)))

(declare-fun b!81135 () Bool)

(declare-fun res!42207 () Bool)

(assert (=> b!81135 (=> (not res!42207) (not e!52962))))

(assert (=> b!81135 (= res!42207 (containsKey!141 lt!37303 (_1!1111 lt!37202)))))

(declare-fun b!81136 () Bool)

(assert (=> b!81136 (= e!52962 (contains!753 lt!37303 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(assert (= (and d!19899 res!42206) b!81135))

(assert (= (and b!81135 res!42207) b!81136))

(assert (=> d!19899 m!81833))

(declare-fun m!82867 () Bool)

(assert (=> d!19899 m!82867))

(declare-fun m!82869 () Bool)

(assert (=> d!19899 m!82869))

(declare-fun m!82871 () Bool)

(assert (=> b!81135 m!82871))

(declare-fun m!82873 () Bool)

(assert (=> b!81136 m!82873))

(assert (=> d!19665 d!19899))

(declare-fun d!19901 () Bool)

(declare-fun e!52964 () Bool)

(assert (=> d!19901 e!52964))

(declare-fun res!42208 () Bool)

(assert (=> d!19901 (=> (not res!42208) (not e!52964))))

(declare-fun lt!37867 () List!1538)

(assert (=> d!19901 (= res!42208 (isStrictlySorted!291 lt!37867))))

(declare-fun e!52963 () List!1538)

(assert (=> d!19901 (= lt!37867 e!52963)))

(declare-fun c!12760 () Bool)

(assert (=> d!19901 (= c!12760 (and ((_ is Cons!1534) (toList!751 lt!37196)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 lt!37202))))))

(assert (=> d!19901 (isStrictlySorted!291 (toList!751 lt!37196))))

(assert (=> d!19901 (= (insertStrictlySorted!58 (toList!751 lt!37196) (_1!1111 lt!37202) (_2!1111 lt!37202)) lt!37867)))

(declare-fun b!81137 () Bool)

(assert (=> b!81137 (= e!52964 (contains!753 lt!37867 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun bm!7562 () Bool)

(declare-fun call!7565 () List!1538)

(declare-fun call!7566 () List!1538)

(assert (=> bm!7562 (= call!7565 call!7566)))

(declare-fun b!81138 () Bool)

(declare-fun res!42209 () Bool)

(assert (=> b!81138 (=> (not res!42209) (not e!52964))))

(assert (=> b!81138 (= res!42209 (containsKey!141 lt!37867 (_1!1111 lt!37202)))))

(declare-fun b!81139 () Bool)

(declare-fun e!52966 () List!1538)

(assert (=> b!81139 (= e!52966 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37196)) (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(declare-fun b!81140 () Bool)

(assert (=> b!81140 (= e!52963 call!7566)))

(declare-fun bm!7563 () Bool)

(assert (=> bm!7563 (= call!7566 ($colon$colon!69 e!52966 (ite c!12760 (h!2123 (toList!751 lt!37196)) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202)))))))

(declare-fun c!12758 () Bool)

(assert (=> bm!7563 (= c!12758 c!12760)))

(declare-fun c!12757 () Bool)

(declare-fun b!81141 () Bool)

(declare-fun c!12759 () Bool)

(assert (=> b!81141 (= e!52966 (ite c!12757 (t!5209 (toList!751 lt!37196)) (ite c!12759 (Cons!1534 (h!2123 (toList!751 lt!37196)) (t!5209 (toList!751 lt!37196))) Nil!1535)))))

(declare-fun b!81142 () Bool)

(declare-fun e!52967 () List!1538)

(assert (=> b!81142 (= e!52967 call!7565)))

(declare-fun b!81143 () Bool)

(declare-fun e!52965 () List!1538)

(declare-fun call!7567 () List!1538)

(assert (=> b!81143 (= e!52965 call!7567)))

(declare-fun b!81144 () Bool)

(assert (=> b!81144 (= c!12759 (and ((_ is Cons!1534) (toList!751 lt!37196)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 lt!37202))))))

(assert (=> b!81144 (= e!52967 e!52965)))

(declare-fun b!81145 () Bool)

(assert (=> b!81145 (= e!52965 call!7567)))

(declare-fun bm!7564 () Bool)

(assert (=> bm!7564 (= call!7567 call!7565)))

(declare-fun b!81146 () Bool)

(assert (=> b!81146 (= e!52963 e!52967)))

(assert (=> b!81146 (= c!12757 (and ((_ is Cons!1534) (toList!751 lt!37196)) (= (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 lt!37202))))))

(assert (= (and d!19901 c!12760) b!81140))

(assert (= (and d!19901 (not c!12760)) b!81146))

(assert (= (and b!81146 c!12757) b!81142))

(assert (= (and b!81146 (not c!12757)) b!81144))

(assert (= (and b!81144 c!12759) b!81143))

(assert (= (and b!81144 (not c!12759)) b!81145))

(assert (= (or b!81143 b!81145) bm!7564))

(assert (= (or b!81142 bm!7564) bm!7562))

(assert (= (or b!81140 bm!7562) bm!7563))

(assert (= (and bm!7563 c!12758) b!81139))

(assert (= (and bm!7563 (not c!12758)) b!81141))

(assert (= (and d!19901 res!42208) b!81138))

(assert (= (and b!81138 res!42209) b!81137))

(declare-fun m!82875 () Bool)

(assert (=> b!81138 m!82875))

(declare-fun m!82877 () Bool)

(assert (=> bm!7563 m!82877))

(declare-fun m!82879 () Bool)

(assert (=> d!19901 m!82879))

(assert (=> d!19901 m!82159))

(declare-fun m!82881 () Bool)

(assert (=> b!81139 m!82881))

(declare-fun m!82883 () Bool)

(assert (=> b!81137 m!82883))

(assert (=> d!19665 d!19901))

(assert (=> b!80424 d!19769))

(declare-fun b!81148 () Bool)

(declare-fun e!52968 () Option!143)

(declare-fun e!52969 () Option!143)

(assert (=> b!81148 (= e!52968 e!52969)))

(declare-fun c!12762 () Bool)

(assert (=> b!81148 (= c!12762 (and ((_ is Cons!1534) (toList!751 lt!37285)) (not (= (_1!1111 (h!2123 (toList!751 lt!37285))) (_1!1111 lt!37202)))))))

(declare-fun d!19903 () Bool)

(declare-fun c!12761 () Bool)

(assert (=> d!19903 (= c!12761 (and ((_ is Cons!1534) (toList!751 lt!37285)) (= (_1!1111 (h!2123 (toList!751 lt!37285))) (_1!1111 lt!37202))))))

(assert (=> d!19903 (= (getValueByKey!137 (toList!751 lt!37285) (_1!1111 lt!37202)) e!52968)))

(declare-fun b!81150 () Bool)

(assert (=> b!81150 (= e!52969 None!141)))

(declare-fun b!81149 () Bool)

(assert (=> b!81149 (= e!52969 (getValueByKey!137 (t!5209 (toList!751 lt!37285)) (_1!1111 lt!37202)))))

(declare-fun b!81147 () Bool)

(assert (=> b!81147 (= e!52968 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37285)))))))

(assert (= (and d!19903 c!12761) b!81147))

(assert (= (and d!19903 (not c!12761)) b!81148))

(assert (= (and b!81148 c!12762) b!81149))

(assert (= (and b!81148 (not c!12762)) b!81150))

(declare-fun m!82885 () Bool)

(assert (=> b!81149 m!82885))

(assert (=> b!80388 d!19903))

(declare-fun d!19905 () Bool)

(assert (=> d!19905 (= (map!1183 (_2!1110 lt!37475)) (getCurrentListMap!437 (_keys!3957 (_2!1110 lt!37475)) (_values!2276 (_2!1110 lt!37475)) (mask!6299 (_2!1110 lt!37475)) (extraKeys!2140 (_2!1110 lt!37475)) (zeroValue!2189 (_2!1110 lt!37475)) (minValue!2189 (_2!1110 lt!37475)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1110 lt!37475))))))

(declare-fun bs!3417 () Bool)

(assert (= bs!3417 d!19905))

(declare-fun m!82887 () Bool)

(assert (=> bs!3417 m!82887))

(assert (=> bm!7477 d!19905))

(declare-fun d!19907 () Bool)

(declare-fun e!52970 () Bool)

(assert (=> d!19907 e!52970))

(declare-fun res!42210 () Bool)

(assert (=> d!19907 (=> res!42210 e!52970)))

(declare-fun lt!37870 () Bool)

(assert (=> d!19907 (= res!42210 (not lt!37870))))

(declare-fun lt!37869 () Bool)

(assert (=> d!19907 (= lt!37870 lt!37869)))

(declare-fun lt!37868 () Unit!2350)

(declare-fun e!52971 () Unit!2350)

(assert (=> d!19907 (= lt!37868 e!52971)))

(declare-fun c!12763 () Bool)

(assert (=> d!19907 (= c!12763 lt!37869)))

(assert (=> d!19907 (= lt!37869 (containsKey!141 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19907 (= (contains!750 lt!37326 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37870)))

(declare-fun b!81151 () Bool)

(declare-fun lt!37871 () Unit!2350)

(assert (=> b!81151 (= e!52971 lt!37871)))

(assert (=> b!81151 (= lt!37871 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81151 (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81152 () Bool)

(declare-fun Unit!2383 () Unit!2350)

(assert (=> b!81152 (= e!52971 Unit!2383)))

(declare-fun b!81153 () Bool)

(assert (=> b!81153 (= e!52970 (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19907 c!12763) b!81151))

(assert (= (and d!19907 (not c!12763)) b!81152))

(assert (= (and d!19907 (not res!42210)) b!81153))

(declare-fun m!82889 () Bool)

(assert (=> d!19907 m!82889))

(declare-fun m!82891 () Bool)

(assert (=> b!81151 m!82891))

(declare-fun m!82893 () Bool)

(assert (=> b!81151 m!82893))

(assert (=> b!81151 m!82893))

(declare-fun m!82895 () Bool)

(assert (=> b!81151 m!82895))

(assert (=> b!81153 m!82893))

(assert (=> b!81153 m!82893))

(assert (=> b!81153 m!82895))

(assert (=> d!19667 d!19907))

(assert (=> d!19667 d!19661))

(declare-fun d!19909 () Bool)

(declare-fun res!42211 () Bool)

(declare-fun e!52972 () Bool)

(assert (=> d!19909 (=> (not res!42211) (not e!52972))))

(assert (=> d!19909 (= res!42211 (simpleValid!55 (_2!1110 lt!37475)))))

(assert (=> d!19909 (= (valid!316 (_2!1110 lt!37475)) e!52972)))

(declare-fun b!81154 () Bool)

(declare-fun res!42212 () Bool)

(assert (=> b!81154 (=> (not res!42212) (not e!52972))))

(assert (=> b!81154 (= res!42212 (= (arrayCountValidKeys!0 (_keys!3957 (_2!1110 lt!37475)) #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))) (_size!418 (_2!1110 lt!37475))))))

(declare-fun b!81155 () Bool)

(declare-fun res!42213 () Bool)

(assert (=> b!81155 (=> (not res!42213) (not e!52972))))

(assert (=> b!81155 (= res!42213 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 (_2!1110 lt!37475)) (mask!6299 (_2!1110 lt!37475))))))

(declare-fun b!81156 () Bool)

(assert (=> b!81156 (= e!52972 (arrayNoDuplicates!0 (_keys!3957 (_2!1110 lt!37475)) #b00000000000000000000000000000000 Nil!1536))))

(assert (= (and d!19909 res!42211) b!81154))

(assert (= (and b!81154 res!42212) b!81155))

(assert (= (and b!81155 res!42213) b!81156))

(declare-fun m!82897 () Bool)

(assert (=> d!19909 m!82897))

(declare-fun m!82899 () Bool)

(assert (=> b!81154 m!82899))

(declare-fun m!82901 () Bool)

(assert (=> b!81155 m!82901))

(declare-fun m!82903 () Bool)

(assert (=> b!81156 m!82903))

(assert (=> d!19675 d!19909))

(assert (=> d!19675 d!19631))

(declare-fun d!19911 () Bool)

(declare-fun e!52973 () Bool)

(assert (=> d!19911 e!52973))

(declare-fun res!42214 () Bool)

(assert (=> d!19911 (=> (not res!42214) (not e!52973))))

(declare-fun lt!37875 () ListLongMap!1471)

(assert (=> d!19911 (= res!42214 (contains!750 lt!37875 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!37872 () List!1538)

(assert (=> d!19911 (= lt!37875 (ListLongMap!1472 lt!37872))))

(declare-fun lt!37873 () Unit!2350)

(declare-fun lt!37874 () Unit!2350)

(assert (=> d!19911 (= lt!37873 lt!37874)))

(assert (=> d!19911 (= (getValueByKey!137 lt!37872 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19911 (= lt!37874 (lemmaContainsTupThenGetReturnValue!56 lt!37872 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19911 (= lt!37872 (insertStrictlySorted!58 (toList!751 call!7417) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19911 (= (+!111 call!7417 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37875)))

(declare-fun b!81157 () Bool)

(declare-fun res!42215 () Bool)

(assert (=> b!81157 (=> (not res!42215) (not e!52973))))

(assert (=> b!81157 (= res!42215 (= (getValueByKey!137 (toList!751 lt!37875) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!81158 () Bool)

(assert (=> b!81158 (= e!52973 (contains!753 (toList!751 lt!37875) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19911 res!42214) b!81157))

(assert (= (and b!81157 res!42215) b!81158))

(declare-fun m!82905 () Bool)

(assert (=> d!19911 m!82905))

(declare-fun m!82907 () Bool)

(assert (=> d!19911 m!82907))

(declare-fun m!82909 () Bool)

(assert (=> d!19911 m!82909))

(declare-fun m!82911 () Bool)

(assert (=> d!19911 m!82911))

(declare-fun m!82913 () Bool)

(assert (=> b!81157 m!82913))

(declare-fun m!82915 () Bool)

(assert (=> b!81158 m!82915))

(assert (=> b!80478 d!19911))

(assert (=> b!80380 d!19783))

(declare-fun b!81159 () Bool)

(declare-fun e!52977 () Bool)

(declare-fun call!7568 () Bool)

(assert (=> b!81159 (= e!52977 call!7568)))

(declare-fun e!52976 () Bool)

(declare-fun b!81160 () Bool)

(assert (=> b!81160 (= e!52976 (contains!752 (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!81161 () Bool)

(assert (=> b!81161 (= e!52977 call!7568)))

(declare-fun d!19913 () Bool)

(declare-fun res!42216 () Bool)

(declare-fun e!52974 () Bool)

(assert (=> d!19913 (=> res!42216 e!52974)))

(assert (=> d!19913 (= res!42216 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> d!19913 (= (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)) e!52974)))

(declare-fun b!81162 () Bool)

(declare-fun e!52975 () Bool)

(assert (=> b!81162 (= e!52974 e!52975)))

(declare-fun res!42217 () Bool)

(assert (=> b!81162 (=> (not res!42217) (not e!52975))))

(assert (=> b!81162 (= res!42217 (not e!52976))))

(declare-fun res!42218 () Bool)

(assert (=> b!81162 (=> (not res!42218) (not e!52976))))

(assert (=> b!81162 (= res!42218 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!81163 () Bool)

(assert (=> b!81163 (= e!52975 e!52977)))

(declare-fun c!12764 () Bool)

(assert (=> b!81163 (= c!12764 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!7565 () Bool)

(assert (=> bm!7565 (= call!7568 (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12764 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536))))))

(assert (= (and d!19913 (not res!42216)) b!81162))

(assert (= (and b!81162 res!42218) b!81160))

(assert (= (and b!81162 res!42217) b!81163))

(assert (= (and b!81163 c!12764) b!81159))

(assert (= (and b!81163 (not c!12764)) b!81161))

(assert (= (or b!81159 b!81161) bm!7565))

(declare-fun m!82917 () Bool)

(assert (=> b!81160 m!82917))

(assert (=> b!81160 m!82917))

(declare-fun m!82919 () Bool)

(assert (=> b!81160 m!82919))

(assert (=> b!81162 m!82917))

(assert (=> b!81162 m!82917))

(declare-fun m!82921 () Bool)

(assert (=> b!81162 m!82921))

(assert (=> b!81163 m!82917))

(assert (=> b!81163 m!82917))

(assert (=> b!81163 m!82921))

(assert (=> bm!7565 m!82917))

(declare-fun m!82923 () Bool)

(assert (=> bm!7565 m!82923))

(assert (=> bm!7394 d!19913))

(assert (=> bm!7417 d!19667))

(declare-fun d!19915 () Bool)

(assert (=> d!19915 (= (+!111 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37461 (zeroValue!2189 newMap!16) lt!37195 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!37878 () Unit!2350)

(declare-fun choose!488 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 V!3003 Int) Unit!2350)

(assert (=> d!19915 (= lt!37878 (choose!488 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37461 (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) lt!37195 (defaultEntry!2293 newMap!16)))))

(assert (=> d!19915 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19915 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!29 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37461 (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) lt!37195 (defaultEntry!2293 newMap!16)) lt!37878)))

(declare-fun bs!3418 () Bool)

(assert (= bs!3418 d!19915))

(assert (=> bs!3418 m!81869))

(assert (=> bs!3418 m!81869))

(declare-fun m!82925 () Bool)

(assert (=> bs!3418 m!82925))

(declare-fun m!82927 () Bool)

(assert (=> bs!3418 m!82927))

(assert (=> bs!3418 m!82043))

(declare-fun m!82929 () Bool)

(assert (=> bs!3418 m!82929))

(assert (=> b!80587 d!19915))

(declare-fun d!19917 () Bool)

(declare-fun res!42219 () Bool)

(declare-fun e!52978 () Bool)

(assert (=> d!19917 (=> res!42219 e!52978)))

(assert (=> d!19917 (= res!42219 (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!19917 (= (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!52978)))

(declare-fun b!81164 () Bool)

(declare-fun e!52979 () Bool)

(assert (=> b!81164 (= e!52978 e!52979)))

(declare-fun res!42220 () Bool)

(assert (=> b!81164 (=> (not res!42220) (not e!52979))))

(assert (=> b!81164 (= res!42220 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!81165 () Bool)

(assert (=> b!81165 (= e!52979 (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19917 (not res!42219)) b!81164))

(assert (= (and b!81164 res!42220) b!81165))

(assert (=> d!19917 m!82345))

(assert (=> b!81165 m!81585))

(declare-fun m!82931 () Bool)

(assert (=> b!81165 m!82931))

(assert (=> b!80360 d!19917))

(assert (=> b!80425 d!19769))

(declare-fun b!81167 () Bool)

(declare-fun e!52980 () Option!143)

(declare-fun e!52981 () Option!143)

(assert (=> b!81167 (= e!52980 e!52981)))

(declare-fun c!12766 () Bool)

(assert (=> b!81167 (= c!12766 (and ((_ is Cons!1534) (toList!751 lt!37302)) (not (= (_1!1111 (h!2123 (toList!751 lt!37302))) (_1!1111 lt!37197)))))))

(declare-fun d!19919 () Bool)

(declare-fun c!12765 () Bool)

(assert (=> d!19919 (= c!12765 (and ((_ is Cons!1534) (toList!751 lt!37302)) (= (_1!1111 (h!2123 (toList!751 lt!37302))) (_1!1111 lt!37197))))))

(assert (=> d!19919 (= (getValueByKey!137 (toList!751 lt!37302) (_1!1111 lt!37197)) e!52980)))

(declare-fun b!81169 () Bool)

(assert (=> b!81169 (= e!52981 None!141)))

(declare-fun b!81168 () Bool)

(assert (=> b!81168 (= e!52981 (getValueByKey!137 (t!5209 (toList!751 lt!37302)) (_1!1111 lt!37197)))))

(declare-fun b!81166 () Bool)

(assert (=> b!81166 (= e!52980 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37302)))))))

(assert (= (and d!19919 c!12765) b!81166))

(assert (= (and d!19919 (not c!12765)) b!81167))

(assert (= (and b!81167 c!12766) b!81168))

(assert (= (and b!81167 (not c!12766)) b!81169))

(declare-fun m!82933 () Bool)

(assert (=> b!81168 m!82933))

(assert (=> b!80396 d!19919))

(declare-fun d!19921 () Bool)

(declare-fun isEmpty!336 (List!1538) Bool)

(assert (=> d!19921 (= (isEmpty!334 lt!37326) (isEmpty!336 (toList!751 lt!37326)))))

(declare-fun bs!3419 () Bool)

(assert (= bs!3419 d!19921))

(declare-fun m!82935 () Bool)

(assert (=> bs!3419 m!82935))

(assert (=> b!80427 d!19921))

(declare-fun d!19923 () Bool)

(declare-fun e!52982 () Bool)

(assert (=> d!19923 e!52982))

(declare-fun res!42221 () Bool)

(assert (=> d!19923 (=> res!42221 e!52982)))

(declare-fun lt!37881 () Bool)

(assert (=> d!19923 (= res!42221 (not lt!37881))))

(declare-fun lt!37880 () Bool)

(assert (=> d!19923 (= lt!37881 lt!37880)))

(declare-fun lt!37879 () Unit!2350)

(declare-fun e!52983 () Unit!2350)

(assert (=> d!19923 (= lt!37879 e!52983)))

(declare-fun c!12767 () Bool)

(assert (=> d!19923 (= c!12767 lt!37880)))

(assert (=> d!19923 (= lt!37880 (containsKey!141 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!19923 (= (contains!750 lt!37385 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!37881)))

(declare-fun b!81170 () Bool)

(declare-fun lt!37882 () Unit!2350)

(assert (=> b!81170 (= e!52983 lt!37882)))

(assert (=> b!81170 (= lt!37882 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!81170 (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!81171 () Bool)

(declare-fun Unit!2384 () Unit!2350)

(assert (=> b!81171 (= e!52983 Unit!2384)))

(declare-fun b!81172 () Bool)

(assert (=> b!81172 (= e!52982 (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!19923 c!12767) b!81170))

(assert (= (and d!19923 (not c!12767)) b!81171))

(assert (= (and d!19923 (not res!42221)) b!81172))

(assert (=> d!19923 m!81727))

(declare-fun m!82937 () Bool)

(assert (=> d!19923 m!82937))

(assert (=> b!81170 m!81727))

(declare-fun m!82939 () Bool)

(assert (=> b!81170 m!82939))

(assert (=> b!81170 m!81727))

(assert (=> b!81170 m!82379))

(assert (=> b!81170 m!82379))

(declare-fun m!82941 () Bool)

(assert (=> b!81170 m!82941))

(assert (=> b!81172 m!81727))

(assert (=> b!81172 m!82379))

(assert (=> b!81172 m!82379))

(assert (=> b!81172 m!82941))

(assert (=> b!80481 d!19923))

(declare-fun d!19925 () Bool)

(declare-fun e!52986 () Bool)

(assert (=> d!19925 e!52986))

(declare-fun c!12770 () Bool)

(assert (=> d!19925 (= c!12770 (and (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!19925 true))

(declare-fun _$29!102 () Unit!2350)

(assert (=> d!19925 (= (choose!476 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))) _$29!102)))

(declare-fun b!81177 () Bool)

(assert (=> b!81177 (= e!52986 (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!81178 () Bool)

(assert (=> b!81178 (= e!52986 (ite (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!19925 c!12770) b!81177))

(assert (= (and d!19925 (not c!12770)) b!81178))

(assert (=> b!81177 m!81585))

(assert (=> b!81177 m!81619))

(assert (=> d!19643 d!19925))

(assert (=> d!19643 d!19661))

(assert (=> b!80429 d!19789))

(declare-fun b!81180 () Bool)

(declare-fun e!52987 () Option!143)

(declare-fun e!52988 () Option!143)

(assert (=> b!81180 (= e!52987 e!52988)))

(declare-fun c!12772 () Bool)

(assert (=> b!81180 (= c!12772 (and ((_ is Cons!1534) (toList!751 lt!37306)) (not (= (_1!1111 (h!2123 (toList!751 lt!37306))) (_1!1111 lt!37202)))))))

(declare-fun d!19927 () Bool)

(declare-fun c!12771 () Bool)

(assert (=> d!19927 (= c!12771 (and ((_ is Cons!1534) (toList!751 lt!37306)) (= (_1!1111 (h!2123 (toList!751 lt!37306))) (_1!1111 lt!37202))))))

(assert (=> d!19927 (= (getValueByKey!137 (toList!751 lt!37306) (_1!1111 lt!37202)) e!52987)))

(declare-fun b!81182 () Bool)

(assert (=> b!81182 (= e!52988 None!141)))

(declare-fun b!81181 () Bool)

(assert (=> b!81181 (= e!52988 (getValueByKey!137 (t!5209 (toList!751 lt!37306)) (_1!1111 lt!37202)))))

(declare-fun b!81179 () Bool)

(assert (=> b!81179 (= e!52987 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37306)))))))

(assert (= (and d!19927 c!12771) b!81179))

(assert (= (and d!19927 (not c!12771)) b!81180))

(assert (= (and b!81180 c!12772) b!81181))

(assert (= (and b!81180 (not c!12772)) b!81182))

(declare-fun m!82943 () Bool)

(assert (=> b!81181 m!82943))

(assert (=> b!80398 d!19927))

(declare-fun d!19929 () Bool)

(declare-fun res!42222 () Bool)

(declare-fun e!52989 () Bool)

(assert (=> d!19929 (=> (not res!42222) (not e!52989))))

(assert (=> d!19929 (= res!42222 (simpleValid!55 (v!2610 (underlying!284 thiss!992))))))

(assert (=> d!19929 (= (valid!316 (v!2610 (underlying!284 thiss!992))) e!52989)))

(declare-fun b!81183 () Bool)

(declare-fun res!42223 () Bool)

(assert (=> b!81183 (=> (not res!42223) (not e!52989))))

(assert (=> b!81183 (= res!42223 (= (arrayCountValidKeys!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000000 (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))) (_size!418 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun b!81184 () Bool)

(declare-fun res!42224 () Bool)

(assert (=> b!81184 (=> (not res!42224) (not e!52989))))

(assert (=> b!81184 (= res!42224 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun b!81185 () Bool)

(assert (=> b!81185 (= e!52989 (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000000 Nil!1536))))

(assert (= (and d!19929 res!42222) b!81183))

(assert (= (and b!81183 res!42223) b!81184))

(assert (= (and b!81184 res!42224) b!81185))

(declare-fun m!82945 () Bool)

(assert (=> d!19929 m!82945))

(declare-fun m!82947 () Bool)

(assert (=> b!81183 m!82947))

(declare-fun m!82949 () Bool)

(assert (=> b!81184 m!82949))

(declare-fun m!82951 () Bool)

(assert (=> b!81185 m!82951))

(assert (=> d!19633 d!19929))

(declare-fun condMapEmpty!3341 () Bool)

(declare-fun mapDefault!3341 () ValueCell!915)

(assert (=> mapNonEmpty!3340 (= condMapEmpty!3341 (= mapRest!3340 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3341)))))

(declare-fun e!52990 () Bool)

(declare-fun mapRes!3341 () Bool)

(assert (=> mapNonEmpty!3340 (= tp!8830 (and e!52990 mapRes!3341))))

(declare-fun mapNonEmpty!3341 () Bool)

(declare-fun tp!8831 () Bool)

(declare-fun e!52991 () Bool)

(assert (=> mapNonEmpty!3341 (= mapRes!3341 (and tp!8831 e!52991))))

(declare-fun mapRest!3341 () (Array (_ BitVec 32) ValueCell!915))

(declare-fun mapValue!3341 () ValueCell!915)

(declare-fun mapKey!3341 () (_ BitVec 32))

(assert (=> mapNonEmpty!3341 (= mapRest!3340 (store mapRest!3341 mapKey!3341 mapValue!3341))))

(declare-fun b!81187 () Bool)

(assert (=> b!81187 (= e!52990 tp_is_empty!2517)))

(declare-fun mapIsEmpty!3341 () Bool)

(assert (=> mapIsEmpty!3341 mapRes!3341))

(declare-fun b!81186 () Bool)

(assert (=> b!81186 (= e!52991 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3340 condMapEmpty!3341) mapIsEmpty!3341))

(assert (= (and mapNonEmpty!3340 (not condMapEmpty!3341)) mapNonEmpty!3341))

(assert (= (and mapNonEmpty!3341 ((_ is ValueCellFull!915) mapValue!3341)) b!81186))

(assert (= (and mapNonEmpty!3340 ((_ is ValueCellFull!915) mapDefault!3341)) b!81187))

(declare-fun m!82953 () Bool)

(assert (=> mapNonEmpty!3341 m!82953))

(declare-fun condMapEmpty!3342 () Bool)

(declare-fun mapDefault!3342 () ValueCell!915)

(assert (=> mapNonEmpty!3339 (= condMapEmpty!3342 (= mapRest!3339 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3342)))))

(declare-fun e!52992 () Bool)

(declare-fun mapRes!3342 () Bool)

(assert (=> mapNonEmpty!3339 (= tp!8829 (and e!52992 mapRes!3342))))

(declare-fun mapNonEmpty!3342 () Bool)

(declare-fun tp!8832 () Bool)

(declare-fun e!52993 () Bool)

(assert (=> mapNonEmpty!3342 (= mapRes!3342 (and tp!8832 e!52993))))

(declare-fun mapRest!3342 () (Array (_ BitVec 32) ValueCell!915))

(declare-fun mapValue!3342 () ValueCell!915)

(declare-fun mapKey!3342 () (_ BitVec 32))

(assert (=> mapNonEmpty!3342 (= mapRest!3339 (store mapRest!3342 mapKey!3342 mapValue!3342))))

(declare-fun b!81189 () Bool)

(assert (=> b!81189 (= e!52992 tp_is_empty!2517)))

(declare-fun mapIsEmpty!3342 () Bool)

(assert (=> mapIsEmpty!3342 mapRes!3342))

(declare-fun b!81188 () Bool)

(assert (=> b!81188 (= e!52993 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3339 condMapEmpty!3342) mapIsEmpty!3342))

(assert (= (and mapNonEmpty!3339 (not condMapEmpty!3342)) mapNonEmpty!3342))

(assert (= (and mapNonEmpty!3342 ((_ is ValueCellFull!915) mapValue!3342)) b!81188))

(assert (= (and mapNonEmpty!3339 ((_ is ValueCellFull!915) mapDefault!3342)) b!81189))

(declare-fun m!82955 () Bool)

(assert (=> mapNonEmpty!3342 m!82955))

(declare-fun b_lambda!3621 () Bool)

(assert (= b_lambda!3619 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3621)))

(declare-fun b_lambda!3623 () Bool)

(assert (= b_lambda!3617 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3623)))

(declare-fun b_lambda!3625 () Bool)

(assert (= b_lambda!3615 (or (and b!80256 b_free!2201) (and b!80270 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))))) b_lambda!3625)))

(declare-fun b_lambda!3627 () Bool)

(assert (= b_lambda!3613 (or (and b!80256 b_free!2201) (and b!80270 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))))) b_lambda!3627)))

(declare-fun b_lambda!3629 () Bool)

(assert (= b_lambda!3611 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3629)))

(check-sat (not d!19901) (not b!81133) (not b!80885) (not d!19851) (not d!19749) (not b!80992) (not b!80872) (not d!19905) (not b!80732) (not b!80940) (not d!19835) (not b!80971) (not b!80912) (not d!19793) (not b!80964) (not b!80939) (not b!80746) (not b!80977) (not b!81033) (not bm!7565) (not d!19791) (not b!80965) (not d!19885) (not d!19813) (not d!19713) (not d!19863) (not b!80894) (not b!80808) (not b!81021) (not b!81184) (not b!80785) (not b!80880) (not d!19723) (not b!80798) (not b_next!2203) (not b!80633) (not b!80840) (not bm!7525) (not b!80863) (not d!19883) (not bm!7563) (not b!80636) (not d!19843) (not b!81017) (not b!81010) (not bm!7558) (not b!80899) (not b!80914) (not bm!7532) (not b!81153) (not b!80738) (not b!80696) (not b!81165) (not d!19837) (not b!81038) (not d!19891) (not b!81181) (not b!81158) (not b!80767) (not d!19707) (not b!81113) (not bm!7531) (not b!80930) (not b_lambda!3607) (not d!19819) (not bm!7526) (not b!80748) (not bm!7549) (not b!80835) (not b!80786) (not b!80931) (not d!19735) (not d!19869) (not b!80993) (not d!19859) (not d!19805) (not d!19745) (not b!80719) (not d!19729) (not b!80697) (not d!19757) (not b!80876) b_and!4945 (not d!19691) (not b!80780) (not b!81172) (not b!81035) (not b!80864) (not b!80979) (not d!19849) (not b!80784) (not d!19865) (not b!80783) (not b!80679) (not b!80705) (not b!80916) (not bm!7505) (not bm!7541) (not d!19777) (not b!81155) (not b!80817) (not b!81163) (not bm!7524) (not b!80753) (not b!80710) (not d!19699) (not d!19741) (not mapNonEmpty!3341) (not d!19753) (not b!80909) (not b!80995) (not b!80927) (not b!80913) (not bm!7514) (not d!19841) (not b!80809) (not b!80967) (not d!19693) (not d!19881) (not d!19759) (not d!19921) (not d!19779) (not b!80936) (not b!81036) (not b!81020) (not b!80946) (not b!81130) (not bm!7521) (not b!80708) (not b!80638) (not b!81018) (not b!81149) (not bm!7504) (not b!80690) (not b!80704) (not b!80960) (not b!80718) (not b!81177) (not d!19895) (not b!80727) (not d!19737) (not b!80751) (not b!81029) (not bm!7535) (not d!19721) (not b_lambda!3629) (not b!80824) (not b!80756) (not b_lambda!3609) (not b!81049) (not b!81119) (not bm!7539) (not b!80716) (not b!81116) (not b!80991) (not d!19873) (not b!80755) (not b!80994) (not b!80776) (not b!81154) (not d!19751) (not b!80941) (not b!80996) (not b!81015) (not d!19681) (not b!81137) (not b!80632) (not b!81183) (not d!19857) (not b!80958) (not b!80765) (not b!80635) (not d!19817) (not bm!7560) (not d!19781) (not b!80962) (not d!19743) (not d!19739) (not d!19811) (not mapNonEmpty!3342) (not b!80678) (not b!80966) (not b!81156) (not b!80655) (not b!80773) (not b!80877) (not b!80907) (not b!80737) (not b!80882) (not b!80980) (not b!80902) (not d!19755) (not b!80937) (not d!19821) (not b!80961) (not d!19747) (not d!19687) (not b!81031) (not b!80779) (not d!19809) (not b!80736) (not d!19909) (not b!81007) (not b!80948) (not b!81138) (not b!81139) (not d!19789) (not d!19823) (not b!81160) (not b!80886) (not b!80888) (not b!80923) (not bm!7533) (not b_lambda!3597) (not d!19715) (not b!81012) (not d!19731) (not b!80782) (not b!80688) (not b!80997) (not d!19831) (not bm!7498) (not b!80865) (not b!80649) (not b!80947) (not b!80953) (not b!80735) (not b!80687) (not b!80820) (not b!80717) (not b!80828) (not b!80868) (not b_lambda!3627) (not d!19899) (not b!80797) (not bm!7561) (not b!81136) (not d!19725) (not b!80777) (not b!81157) (not b!80757) (not d!19875) b_and!4947 (not b_lambda!3621) (not bm!7501) (not b!80883) (not b!80713) (not b!80656) (not b!80974) (not bm!7519) (not b!80787) (not b!81019) (not d!19929) (not b!81115) (not d!19839) (not b_lambda!3605) (not b!80968) (not b!80701) (not d!19709) (not b!80879) (not d!19775) (not b!81168) (not d!19697) (not b!80990) (not b!81185) (not b!80871) (not d!19855) (not bm!7528) (not d!19889) (not d!19915) (not d!19799) (not d!19705) (not b!80903) (not b!80775) (not b_next!2201) (not d!19761) (not b!80844) (not b!80950) (not b!80976) (not d!19923) (not d!19825) (not b!81111) (not bm!7511) (not b!80754) (not d!19797) (not b_lambda!3625) (not d!19893) (not b!80866) (not b!80978) (not d!19717) (not b!80969) (not d!19911) tp_is_empty!2517 (not b!80922) (not b!80884) (not bm!7548) (not d!19833) (not d!19795) (not b!80715) (not b!80956) (not b!81151) (not b!81135) (not d!19701) (not b!81046) (not b_lambda!3623) (not d!19807) (not d!19787) (not b!80988) (not b!80862) (not bm!7543) (not b!80729) (not b!80734) (not b!80963) (not b!81044) (not d!19907) (not d!19803) (not bm!7508) (not b!80677) (not d!19861) (not b!81076) (not d!19801) (not d!19785) (not d!19853) (not d!19877) (not b!81118) (not d!19733) (not b!80870) (not b!81162) (not bm!7506) (not b!80842) (not d!19815) (not b!80895) (not d!19845) (not b!81128) (not bm!7518) (not b!80989) (not b!81170))
(check-sat b_and!4945 b_and!4947 (not b_next!2201) (not b_next!2203))
(get-model)

(declare-fun d!19931 () Bool)

(declare-fun res!42225 () Bool)

(declare-fun e!52994 () Bool)

(assert (=> d!19931 (=> res!42225 e!52994)))

(assert (=> d!19931 (= res!42225 (and ((_ is Cons!1534) (toList!751 lt!37326)) (= (_1!1111 (h!2123 (toList!751 lt!37326))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19931 (= (containsKey!141 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!52994)))

(declare-fun b!81190 () Bool)

(declare-fun e!52995 () Bool)

(assert (=> b!81190 (= e!52994 e!52995)))

(declare-fun res!42226 () Bool)

(assert (=> b!81190 (=> (not res!42226) (not e!52995))))

(assert (=> b!81190 (= res!42226 (and (or (not ((_ is Cons!1534) (toList!751 lt!37326))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37326))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1534) (toList!751 lt!37326)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37326))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!81191 () Bool)

(assert (=> b!81191 (= e!52995 (containsKey!141 (t!5209 (toList!751 lt!37326)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19931 (not res!42225)) b!81190))

(assert (= (and b!81190 res!42226) b!81191))

(assert (=> b!81191 m!81727))

(declare-fun m!82957 () Bool)

(assert (=> b!81191 m!82957))

(assert (=> d!19725 d!19931))

(declare-fun d!19933 () Bool)

(declare-fun res!42231 () Bool)

(declare-fun e!53000 () Bool)

(assert (=> d!19933 (=> res!42231 e!53000)))

(assert (=> d!19933 (= res!42231 (or ((_ is Nil!1535) lt!37536) ((_ is Nil!1535) (t!5209 lt!37536))))))

(assert (=> d!19933 (= (isStrictlySorted!291 lt!37536) e!53000)))

(declare-fun b!81196 () Bool)

(declare-fun e!53001 () Bool)

(assert (=> b!81196 (= e!53000 e!53001)))

(declare-fun res!42232 () Bool)

(assert (=> b!81196 (=> (not res!42232) (not e!53001))))

(assert (=> b!81196 (= res!42232 (bvslt (_1!1111 (h!2123 lt!37536)) (_1!1111 (h!2123 (t!5209 lt!37536)))))))

(declare-fun b!81197 () Bool)

(assert (=> b!81197 (= e!53001 (isStrictlySorted!291 (t!5209 lt!37536)))))

(assert (= (and d!19933 (not res!42231)) b!81196))

(assert (= (and b!81196 res!42232) b!81197))

(declare-fun m!82959 () Bool)

(assert (=> b!81197 m!82959))

(assert (=> d!19723 d!19933))

(declare-fun d!19935 () Bool)

(declare-fun res!42233 () Bool)

(declare-fun e!53002 () Bool)

(assert (=> d!19935 (=> res!42233 e!53002)))

(assert (=> d!19935 (= res!42233 (or ((_ is Nil!1535) (toList!751 lt!37196)) ((_ is Nil!1535) (t!5209 (toList!751 lt!37196)))))))

(assert (=> d!19935 (= (isStrictlySorted!291 (toList!751 lt!37196)) e!53002)))

(declare-fun b!81198 () Bool)

(declare-fun e!53003 () Bool)

(assert (=> b!81198 (= e!53002 e!53003)))

(declare-fun res!42234 () Bool)

(assert (=> b!81198 (=> (not res!42234) (not e!53003))))

(assert (=> b!81198 (= res!42234 (bvslt (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 (h!2123 (t!5209 (toList!751 lt!37196))))))))

(declare-fun b!81199 () Bool)

(assert (=> b!81199 (= e!53003 (isStrictlySorted!291 (t!5209 (toList!751 lt!37196))))))

(assert (= (and d!19935 (not res!42233)) b!81198))

(assert (= (and b!81198 res!42234) b!81199))

(declare-fun m!82961 () Bool)

(assert (=> b!81199 m!82961))

(assert (=> d!19723 d!19935))

(declare-fun d!19937 () Bool)

(assert (=> d!19937 (= (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80696 d!19937))

(declare-fun d!19939 () Bool)

(assert (=> d!19939 (arrayContainsKey!0 (_keys!3957 newMap!16) lt!37580 #b00000000000000000000000000000000)))

(declare-fun lt!37885 () Unit!2350)

(declare-fun choose!13 (array!3988 (_ BitVec 64) (_ BitVec 32)) Unit!2350)

(assert (=> d!19939 (= lt!37885 (choose!13 (_keys!3957 newMap!16) lt!37580 #b00000000000000000000000000000000))))

(assert (=> d!19939 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!19939 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3957 newMap!16) lt!37580 #b00000000000000000000000000000000) lt!37885)))

(declare-fun bs!3420 () Bool)

(assert (= bs!3420 d!19939))

(assert (=> bs!3420 m!82283))

(declare-fun m!82963 () Bool)

(assert (=> bs!3420 m!82963))

(assert (=> b!80809 d!19939))

(declare-fun d!19941 () Bool)

(declare-fun res!42235 () Bool)

(declare-fun e!53004 () Bool)

(assert (=> d!19941 (=> res!42235 e!53004)))

(assert (=> d!19941 (= res!42235 (= (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) lt!37580))))

(assert (=> d!19941 (= (arrayContainsKey!0 (_keys!3957 newMap!16) lt!37580 #b00000000000000000000000000000000) e!53004)))

(declare-fun b!81200 () Bool)

(declare-fun e!53005 () Bool)

(assert (=> b!81200 (= e!53004 e!53005)))

(declare-fun res!42236 () Bool)

(assert (=> b!81200 (=> (not res!42236) (not e!53005))))

(assert (=> b!81200 (= res!42236 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!81201 () Bool)

(assert (=> b!81201 (= e!53005 (arrayContainsKey!0 (_keys!3957 newMap!16) lt!37580 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!19941 (not res!42235)) b!81200))

(assert (= (and b!81200 res!42236) b!81201))

(assert (=> d!19941 m!81991))

(declare-fun m!82965 () Bool)

(assert (=> b!81201 m!82965))

(assert (=> b!80809 d!19941))

(declare-fun b!81203 () Bool)

(declare-fun c!12773 () Bool)

(declare-fun lt!37887 () (_ BitVec 64))

(assert (=> b!81203 (= c!12773 (= lt!37887 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53007 () SeekEntryResult!251)

(declare-fun e!53008 () SeekEntryResult!251)

(assert (=> b!81203 (= e!53007 e!53008)))

(declare-fun b!81204 () Bool)

(declare-fun e!53006 () SeekEntryResult!251)

(assert (=> b!81204 (= e!53006 e!53007)))

(declare-fun lt!37888 () SeekEntryResult!251)

(assert (=> b!81204 (= lt!37887 (select (arr!1900 (_keys!3957 newMap!16)) (index!3141 lt!37888)))))

(declare-fun c!12775 () Bool)

(assert (=> b!81204 (= c!12775 (= lt!37887 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81205 () Bool)

(assert (=> b!81205 (= e!53007 (Found!251 (index!3141 lt!37888)))))

(declare-fun d!19943 () Bool)

(declare-fun lt!37886 () SeekEntryResult!251)

(assert (=> d!19943 (and (or ((_ is Undefined!251) lt!37886) (not ((_ is Found!251) lt!37886)) (and (bvsge (index!3140 lt!37886) #b00000000000000000000000000000000) (bvslt (index!3140 lt!37886) (size!2142 (_keys!3957 newMap!16))))) (or ((_ is Undefined!251) lt!37886) ((_ is Found!251) lt!37886) (not ((_ is MissingZero!251) lt!37886)) (and (bvsge (index!3139 lt!37886) #b00000000000000000000000000000000) (bvslt (index!3139 lt!37886) (size!2142 (_keys!3957 newMap!16))))) (or ((_ is Undefined!251) lt!37886) ((_ is Found!251) lt!37886) ((_ is MissingZero!251) lt!37886) (not ((_ is MissingVacant!251) lt!37886)) (and (bvsge (index!3142 lt!37886) #b00000000000000000000000000000000) (bvslt (index!3142 lt!37886) (size!2142 (_keys!3957 newMap!16))))) (or ((_ is Undefined!251) lt!37886) (ite ((_ is Found!251) lt!37886) (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37886)) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!251) lt!37886) (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3139 lt!37886)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!251) lt!37886) (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3142 lt!37886)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19943 (= lt!37886 e!53006)))

(declare-fun c!12774 () Bool)

(assert (=> d!19943 (= c!12774 (and ((_ is Intermediate!251) lt!37888) (undefined!1063 lt!37888)))))

(assert (=> d!19943 (= lt!37888 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (mask!6299 newMap!16)) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (=> d!19943 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19943 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (_keys!3957 newMap!16) (mask!6299 newMap!16)) lt!37886)))

(declare-fun b!81202 () Bool)

(assert (=> b!81202 (= e!53008 (MissingZero!251 (index!3141 lt!37888)))))

(declare-fun b!81206 () Bool)

(assert (=> b!81206 (= e!53006 Undefined!251)))

(declare-fun b!81207 () Bool)

(assert (=> b!81207 (= e!53008 (seekKeyOrZeroReturnVacant!0 (x!11702 lt!37888) (index!3141 lt!37888) (index!3141 lt!37888) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (= (and d!19943 c!12774) b!81206))

(assert (= (and d!19943 (not c!12774)) b!81204))

(assert (= (and b!81204 c!12775) b!81205))

(assert (= (and b!81204 (not c!12775)) b!81203))

(assert (= (and b!81203 c!12773) b!81202))

(assert (= (and b!81203 (not c!12773)) b!81207))

(declare-fun m!82967 () Bool)

(assert (=> b!81204 m!82967))

(declare-fun m!82969 () Bool)

(assert (=> d!19943 m!82969))

(assert (=> d!19943 m!81991))

(declare-fun m!82971 () Bool)

(assert (=> d!19943 m!82971))

(assert (=> d!19943 m!82043))

(assert (=> d!19943 m!81991))

(assert (=> d!19943 m!82969))

(declare-fun m!82973 () Bool)

(assert (=> d!19943 m!82973))

(declare-fun m!82975 () Bool)

(assert (=> d!19943 m!82975))

(declare-fun m!82977 () Bool)

(assert (=> d!19943 m!82977))

(assert (=> b!81207 m!81991))

(declare-fun m!82979 () Bool)

(assert (=> b!81207 m!82979))

(assert (=> b!80809 d!19943))

(declare-fun d!19945 () Bool)

(assert (=> d!19945 (= (inRange!0 (ite c!12752 (index!3140 lt!37857) (ite c!12751 (index!3139 lt!37859) (index!3142 lt!37859))) (mask!6299 newMap!16)) (and (bvsge (ite c!12752 (index!3140 lt!37857) (ite c!12751 (index!3139 lt!37859) (index!3142 lt!37859))) #b00000000000000000000000000000000) (bvslt (ite c!12752 (index!3140 lt!37857) (ite c!12751 (index!3139 lt!37859) (index!3142 lt!37859))) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7560 d!19945))

(assert (=> d!19873 d!19871))

(declare-fun d!19947 () Bool)

(assert (=> d!19947 (= (getValueByKey!137 lt!37299 (_1!1111 lt!37197)) (Some!142 (_2!1111 lt!37197)))))

(assert (=> d!19947 true))

(declare-fun _$22!400 () Unit!2350)

(assert (=> d!19947 (= (choose!478 lt!37299 (_1!1111 lt!37197) (_2!1111 lt!37197)) _$22!400)))

(declare-fun bs!3421 () Bool)

(assert (= bs!3421 d!19947))

(assert (=> bs!3421 m!81821))

(assert (=> d!19873 d!19947))

(declare-fun d!19949 () Bool)

(declare-fun res!42237 () Bool)

(declare-fun e!53009 () Bool)

(assert (=> d!19949 (=> res!42237 e!53009)))

(assert (=> d!19949 (= res!42237 (or ((_ is Nil!1535) lt!37299) ((_ is Nil!1535) (t!5209 lt!37299))))))

(assert (=> d!19949 (= (isStrictlySorted!291 lt!37299) e!53009)))

(declare-fun b!81208 () Bool)

(declare-fun e!53010 () Bool)

(assert (=> b!81208 (= e!53009 e!53010)))

(declare-fun res!42238 () Bool)

(assert (=> b!81208 (=> (not res!42238) (not e!53010))))

(assert (=> b!81208 (= res!42238 (bvslt (_1!1111 (h!2123 lt!37299)) (_1!1111 (h!2123 (t!5209 lt!37299)))))))

(declare-fun b!81209 () Bool)

(assert (=> b!81209 (= e!53010 (isStrictlySorted!291 (t!5209 lt!37299)))))

(assert (= (and d!19949 (not res!42237)) b!81208))

(assert (= (and b!81208 res!42238) b!81209))

(declare-fun m!82981 () Bool)

(assert (=> b!81209 m!82981))

(assert (=> d!19873 d!19949))

(declare-fun b!81210 () Bool)

(declare-fun e!53015 () Bool)

(assert (=> b!81210 (= e!53015 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81210 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun call!7569 () ListLongMap!1471)

(declare-fun bm!7566 () Bool)

(assert (=> bm!7566 (= call!7569 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16)))))

(declare-fun b!81211 () Bool)

(declare-fun e!53013 () ListLongMap!1471)

(declare-fun e!53012 () ListLongMap!1471)

(assert (=> b!81211 (= e!53013 e!53012)))

(declare-fun c!12777 () Bool)

(assert (=> b!81211 (= c!12777 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!19951 () Bool)

(declare-fun e!53014 () Bool)

(assert (=> d!19951 e!53014))

(declare-fun res!42239 () Bool)

(assert (=> d!19951 (=> (not res!42239) (not e!53014))))

(declare-fun lt!37894 () ListLongMap!1471)

(assert (=> d!19951 (= res!42239 (not (contains!750 lt!37894 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19951 (= lt!37894 e!53013)))

(declare-fun c!12778 () Bool)

(assert (=> d!19951 (= c!12778 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!19951 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!19951 (= (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!37894)))

(declare-fun b!81212 () Bool)

(declare-fun res!42242 () Bool)

(assert (=> b!81212 (=> (not res!42242) (not e!53014))))

(assert (=> b!81212 (= res!42242 (not (contains!750 lt!37894 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81213 () Bool)

(declare-fun e!53016 () Bool)

(assert (=> b!81213 (= e!53016 (isEmpty!334 lt!37894))))

(declare-fun b!81214 () Bool)

(assert (=> b!81214 (= e!53013 (ListLongMap!1472 Nil!1535))))

(declare-fun b!81215 () Bool)

(assert (=> b!81215 (= e!53016 (= lt!37894 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16))))))

(declare-fun b!81216 () Bool)

(declare-fun e!53011 () Bool)

(assert (=> b!81216 (= e!53014 e!53011)))

(declare-fun c!12779 () Bool)

(assert (=> b!81216 (= c!12779 e!53015)))

(declare-fun res!42240 () Bool)

(assert (=> b!81216 (=> (not res!42240) (not e!53015))))

(assert (=> b!81216 (= res!42240 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!81217 () Bool)

(assert (=> b!81217 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> b!81217 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))))))))

(declare-fun e!53017 () Bool)

(assert (=> b!81217 (= e!53017 (= (apply!80 lt!37894 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81218 () Bool)

(declare-fun lt!37891 () Unit!2350)

(declare-fun lt!37890 () Unit!2350)

(assert (=> b!81218 (= lt!37891 lt!37890)))

(declare-fun lt!37895 () (_ BitVec 64))

(declare-fun lt!37892 () V!3003)

(declare-fun lt!37889 () (_ BitVec 64))

(declare-fun lt!37893 () ListLongMap!1471)

(assert (=> b!81218 (not (contains!750 (+!111 lt!37893 (tuple2!2203 lt!37889 lt!37892)) lt!37895))))

(assert (=> b!81218 (= lt!37890 (addStillNotContains!31 lt!37893 lt!37889 lt!37892 lt!37895))))

(assert (=> b!81218 (= lt!37895 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81218 (= lt!37892 (get!1195 (select (arr!1901 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81218 (= lt!37889 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81218 (= lt!37893 call!7569)))

(assert (=> b!81218 (= e!53012 (+!111 call!7569 (tuple2!2203 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (get!1195 (select (arr!1901 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81219 () Bool)

(assert (=> b!81219 (= e!53011 e!53017)))

(assert (=> b!81219 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun res!42241 () Bool)

(assert (=> b!81219 (= res!42241 (contains!750 lt!37894 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81219 (=> (not res!42241) (not e!53017))))

(declare-fun b!81220 () Bool)

(assert (=> b!81220 (= e!53012 call!7569)))

(declare-fun b!81221 () Bool)

(assert (=> b!81221 (= e!53011 e!53016)))

(declare-fun c!12776 () Bool)

(assert (=> b!81221 (= c!12776 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (= (and d!19951 c!12778) b!81214))

(assert (= (and d!19951 (not c!12778)) b!81211))

(assert (= (and b!81211 c!12777) b!81218))

(assert (= (and b!81211 (not c!12777)) b!81220))

(assert (= (or b!81218 b!81220) bm!7566))

(assert (= (and d!19951 res!42239) b!81212))

(assert (= (and b!81212 res!42242) b!81216))

(assert (= (and b!81216 res!42240) b!81210))

(assert (= (and b!81216 c!12779) b!81219))

(assert (= (and b!81216 (not c!12779)) b!81221))

(assert (= (and b!81219 res!42241) b!81217))

(assert (= (and b!81221 c!12776) b!81215))

(assert (= (and b!81221 (not c!12776)) b!81213))

(declare-fun b_lambda!3631 () Bool)

(assert (=> (not b_lambda!3631) (not b!81217)))

(assert (=> b!81217 t!5218))

(declare-fun b_and!4949 () Bool)

(assert (= b_and!4945 (and (=> t!5218 result!2857) b_and!4949)))

(assert (=> b!81217 t!5220))

(declare-fun b_and!4951 () Bool)

(assert (= b_and!4947 (and (=> t!5220 result!2859) b_and!4951)))

(declare-fun b_lambda!3633 () Bool)

(assert (=> (not b_lambda!3633) (not b!81218)))

(assert (=> b!81218 t!5218))

(declare-fun b_and!4953 () Bool)

(assert (= b_and!4949 (and (=> t!5218 result!2857) b_and!4953)))

(assert (=> b!81218 t!5220))

(declare-fun b_and!4955 () Bool)

(assert (= b_and!4951 (and (=> t!5220 result!2859) b_and!4955)))

(declare-fun m!82983 () Bool)

(assert (=> b!81218 m!82983))

(assert (=> b!81218 m!82031))

(declare-fun m!82985 () Bool)

(assert (=> b!81218 m!82985))

(assert (=> b!81218 m!82477))

(assert (=> b!81218 m!82031))

(assert (=> b!81218 m!82479))

(assert (=> b!81218 m!81991))

(declare-fun m!82987 () Bool)

(assert (=> b!81218 m!82987))

(assert (=> b!81218 m!82477))

(assert (=> b!81218 m!82983))

(declare-fun m!82989 () Bool)

(assert (=> b!81218 m!82989))

(declare-fun m!82991 () Bool)

(assert (=> b!81213 m!82991))

(assert (=> b!81217 m!82031))

(assert (=> b!81217 m!82477))

(assert (=> b!81217 m!82031))

(assert (=> b!81217 m!82479))

(assert (=> b!81217 m!81991))

(assert (=> b!81217 m!82477))

(assert (=> b!81217 m!81991))

(declare-fun m!82993 () Bool)

(assert (=> b!81217 m!82993))

(declare-fun m!82995 () Bool)

(assert (=> b!81212 m!82995))

(assert (=> b!81210 m!81991))

(assert (=> b!81210 m!81991))

(assert (=> b!81210 m!82035))

(declare-fun m!82997 () Bool)

(assert (=> bm!7566 m!82997))

(declare-fun m!82999 () Bool)

(assert (=> d!19951 m!82999))

(assert (=> d!19951 m!82043))

(assert (=> b!81211 m!81991))

(assert (=> b!81211 m!81991))

(assert (=> b!81211 m!82035))

(assert (=> b!81219 m!81991))

(assert (=> b!81219 m!81991))

(declare-fun m!83001 () Bool)

(assert (=> b!81219 m!83001))

(assert (=> b!81215 m!82997))

(assert (=> bm!7532 d!19951))

(declare-fun d!19953 () Bool)

(assert (=> d!19953 (= (apply!80 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37374) (apply!80 lt!37381 lt!37374))))

(assert (=> d!19953 true))

(declare-fun _$34!823 () Unit!2350)

(assert (=> d!19953 (= (choose!479 lt!37381 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37374) _$34!823)))

(declare-fun bs!3422 () Bool)

(assert (= bs!3422 d!19953))

(assert (=> bs!3422 m!81889))

(assert (=> bs!3422 m!81889))

(assert (=> bs!3422 m!81911))

(assert (=> bs!3422 m!81905))

(assert (=> d!19729 d!19953))

(assert (=> d!19729 d!19749))

(assert (=> d!19729 d!19753))

(declare-fun d!19955 () Bool)

(declare-fun e!53018 () Bool)

(assert (=> d!19955 e!53018))

(declare-fun res!42243 () Bool)

(assert (=> d!19955 (=> res!42243 e!53018)))

(declare-fun lt!37898 () Bool)

(assert (=> d!19955 (= res!42243 (not lt!37898))))

(declare-fun lt!37897 () Bool)

(assert (=> d!19955 (= lt!37898 lt!37897)))

(declare-fun lt!37896 () Unit!2350)

(declare-fun e!53019 () Unit!2350)

(assert (=> d!19955 (= lt!37896 e!53019)))

(declare-fun c!12780 () Bool)

(assert (=> d!19955 (= c!12780 lt!37897)))

(assert (=> d!19955 (= lt!37897 (containsKey!141 (toList!751 lt!37381) lt!37374))))

(assert (=> d!19955 (= (contains!750 lt!37381 lt!37374) lt!37898)))

(declare-fun b!81223 () Bool)

(declare-fun lt!37899 () Unit!2350)

(assert (=> b!81223 (= e!53019 lt!37899)))

(assert (=> b!81223 (= lt!37899 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37381) lt!37374))))

(assert (=> b!81223 (isDefined!91 (getValueByKey!137 (toList!751 lt!37381) lt!37374))))

(declare-fun b!81224 () Bool)

(declare-fun Unit!2385 () Unit!2350)

(assert (=> b!81224 (= e!53019 Unit!2385)))

(declare-fun b!81225 () Bool)

(assert (=> b!81225 (= e!53018 (isDefined!91 (getValueByKey!137 (toList!751 lt!37381) lt!37374)))))

(assert (= (and d!19955 c!12780) b!81223))

(assert (= (and d!19955 (not c!12780)) b!81224))

(assert (= (and d!19955 (not res!42243)) b!81225))

(declare-fun m!83003 () Bool)

(assert (=> d!19955 m!83003))

(declare-fun m!83005 () Bool)

(assert (=> b!81223 m!83005))

(assert (=> b!81223 m!82239))

(assert (=> b!81223 m!82239))

(declare-fun m!83007 () Bool)

(assert (=> b!81223 m!83007))

(assert (=> b!81225 m!82239))

(assert (=> b!81225 m!82239))

(assert (=> b!81225 m!83007))

(assert (=> d!19729 d!19955))

(assert (=> d!19729 d!19741))

(declare-fun d!19957 () Bool)

(declare-fun e!53021 () Bool)

(assert (=> d!19957 e!53021))

(declare-fun res!42244 () Bool)

(assert (=> d!19957 (=> (not res!42244) (not e!53021))))

(declare-fun lt!37900 () List!1538)

(assert (=> d!19957 (= res!42244 (isStrictlySorted!291 lt!37900))))

(declare-fun e!53020 () List!1538)

(assert (=> d!19957 (= lt!37900 e!53020)))

(declare-fun c!12784 () Bool)

(assert (=> d!19957 (= c!12784 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37190))) (bvslt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37190)))) (_1!1111 lt!37202))))))

(assert (=> d!19957 (isStrictlySorted!291 (t!5209 (toList!751 lt!37190)))))

(assert (=> d!19957 (= (insertStrictlySorted!58 (t!5209 (toList!751 lt!37190)) (_1!1111 lt!37202) (_2!1111 lt!37202)) lt!37900)))

(declare-fun b!81226 () Bool)

(assert (=> b!81226 (= e!53021 (contains!753 lt!37900 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun bm!7567 () Bool)

(declare-fun call!7570 () List!1538)

(declare-fun call!7571 () List!1538)

(assert (=> bm!7567 (= call!7570 call!7571)))

(declare-fun b!81227 () Bool)

(declare-fun res!42245 () Bool)

(assert (=> b!81227 (=> (not res!42245) (not e!53021))))

(assert (=> b!81227 (= res!42245 (containsKey!141 lt!37900 (_1!1111 lt!37202)))))

(declare-fun b!81228 () Bool)

(declare-fun e!53023 () List!1538)

(assert (=> b!81228 (= e!53023 (insertStrictlySorted!58 (t!5209 (t!5209 (toList!751 lt!37190))) (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(declare-fun b!81229 () Bool)

(assert (=> b!81229 (= e!53020 call!7571)))

(declare-fun bm!7568 () Bool)

(assert (=> bm!7568 (= call!7571 ($colon$colon!69 e!53023 (ite c!12784 (h!2123 (t!5209 (toList!751 lt!37190))) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202)))))))

(declare-fun c!12782 () Bool)

(assert (=> bm!7568 (= c!12782 c!12784)))

(declare-fun c!12783 () Bool)

(declare-fun c!12781 () Bool)

(declare-fun b!81230 () Bool)

(assert (=> b!81230 (= e!53023 (ite c!12781 (t!5209 (t!5209 (toList!751 lt!37190))) (ite c!12783 (Cons!1534 (h!2123 (t!5209 (toList!751 lt!37190))) (t!5209 (t!5209 (toList!751 lt!37190)))) Nil!1535)))))

(declare-fun b!81231 () Bool)

(declare-fun e!53024 () List!1538)

(assert (=> b!81231 (= e!53024 call!7570)))

(declare-fun b!81232 () Bool)

(declare-fun e!53022 () List!1538)

(declare-fun call!7572 () List!1538)

(assert (=> b!81232 (= e!53022 call!7572)))

(declare-fun b!81233 () Bool)

(assert (=> b!81233 (= c!12783 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37190))) (bvsgt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37190)))) (_1!1111 lt!37202))))))

(assert (=> b!81233 (= e!53024 e!53022)))

(declare-fun b!81234 () Bool)

(assert (=> b!81234 (= e!53022 call!7572)))

(declare-fun bm!7569 () Bool)

(assert (=> bm!7569 (= call!7572 call!7570)))

(declare-fun b!81235 () Bool)

(assert (=> b!81235 (= e!53020 e!53024)))

(assert (=> b!81235 (= c!12781 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37190))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37190)))) (_1!1111 lt!37202))))))

(assert (= (and d!19957 c!12784) b!81229))

(assert (= (and d!19957 (not c!12784)) b!81235))

(assert (= (and b!81235 c!12781) b!81231))

(assert (= (and b!81235 (not c!12781)) b!81233))

(assert (= (and b!81233 c!12783) b!81232))

(assert (= (and b!81233 (not c!12783)) b!81234))

(assert (= (or b!81232 b!81234) bm!7569))

(assert (= (or b!81231 bm!7569) bm!7567))

(assert (= (or b!81229 bm!7567) bm!7568))

(assert (= (and bm!7568 c!12782) b!81228))

(assert (= (and bm!7568 (not c!12782)) b!81230))

(assert (= (and d!19957 res!42244) b!81227))

(assert (= (and b!81227 res!42245) b!81226))

(declare-fun m!83009 () Bool)

(assert (=> b!81227 m!83009))

(declare-fun m!83011 () Bool)

(assert (=> bm!7568 m!83011))

(declare-fun m!83013 () Bool)

(assert (=> d!19957 m!83013))

(declare-fun m!83015 () Bool)

(assert (=> d!19957 m!83015))

(declare-fun m!83017 () Bool)

(assert (=> b!81228 m!83017))

(declare-fun m!83019 () Bool)

(assert (=> b!81226 m!83019))

(assert (=> b!80980 d!19957))

(declare-fun d!19959 () Bool)

(declare-fun e!53026 () Bool)

(assert (=> d!19959 e!53026))

(declare-fun res!42246 () Bool)

(assert (=> d!19959 (=> (not res!42246) (not e!53026))))

(declare-fun lt!37901 () List!1538)

(assert (=> d!19959 (= res!42246 (isStrictlySorted!291 lt!37901))))

(declare-fun e!53025 () List!1538)

(assert (=> d!19959 (= lt!37901 e!53025)))

(declare-fun c!12788 () Bool)

(assert (=> d!19959 (= c!12788 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37196))) (bvslt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37196)))) (_1!1111 lt!37202))))))

(assert (=> d!19959 (isStrictlySorted!291 (t!5209 (toList!751 lt!37196)))))

(assert (=> d!19959 (= (insertStrictlySorted!58 (t!5209 (toList!751 lt!37196)) (_1!1111 lt!37202) (_2!1111 lt!37202)) lt!37901)))

(declare-fun b!81236 () Bool)

(assert (=> b!81236 (= e!53026 (contains!753 lt!37901 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun bm!7570 () Bool)

(declare-fun call!7573 () List!1538)

(declare-fun call!7574 () List!1538)

(assert (=> bm!7570 (= call!7573 call!7574)))

(declare-fun b!81237 () Bool)

(declare-fun res!42247 () Bool)

(assert (=> b!81237 (=> (not res!42247) (not e!53026))))

(assert (=> b!81237 (= res!42247 (containsKey!141 lt!37901 (_1!1111 lt!37202)))))

(declare-fun b!81238 () Bool)

(declare-fun e!53028 () List!1538)

(assert (=> b!81238 (= e!53028 (insertStrictlySorted!58 (t!5209 (t!5209 (toList!751 lt!37196))) (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(declare-fun b!81239 () Bool)

(assert (=> b!81239 (= e!53025 call!7574)))

(declare-fun bm!7571 () Bool)

(assert (=> bm!7571 (= call!7574 ($colon$colon!69 e!53028 (ite c!12788 (h!2123 (t!5209 (toList!751 lt!37196))) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202)))))))

(declare-fun c!12786 () Bool)

(assert (=> bm!7571 (= c!12786 c!12788)))

(declare-fun c!12787 () Bool)

(declare-fun c!12785 () Bool)

(declare-fun b!81240 () Bool)

(assert (=> b!81240 (= e!53028 (ite c!12785 (t!5209 (t!5209 (toList!751 lt!37196))) (ite c!12787 (Cons!1534 (h!2123 (t!5209 (toList!751 lt!37196))) (t!5209 (t!5209 (toList!751 lt!37196)))) Nil!1535)))))

(declare-fun b!81241 () Bool)

(declare-fun e!53029 () List!1538)

(assert (=> b!81241 (= e!53029 call!7573)))

(declare-fun b!81242 () Bool)

(declare-fun e!53027 () List!1538)

(declare-fun call!7575 () List!1538)

(assert (=> b!81242 (= e!53027 call!7575)))

(declare-fun b!81243 () Bool)

(assert (=> b!81243 (= c!12787 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37196))) (bvsgt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37196)))) (_1!1111 lt!37202))))))

(assert (=> b!81243 (= e!53029 e!53027)))

(declare-fun b!81244 () Bool)

(assert (=> b!81244 (= e!53027 call!7575)))

(declare-fun bm!7572 () Bool)

(assert (=> bm!7572 (= call!7575 call!7573)))

(declare-fun b!81245 () Bool)

(assert (=> b!81245 (= e!53025 e!53029)))

(assert (=> b!81245 (= c!12785 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37196))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37196)))) (_1!1111 lt!37202))))))

(assert (= (and d!19959 c!12788) b!81239))

(assert (= (and d!19959 (not c!12788)) b!81245))

(assert (= (and b!81245 c!12785) b!81241))

(assert (= (and b!81245 (not c!12785)) b!81243))

(assert (= (and b!81243 c!12787) b!81242))

(assert (= (and b!81243 (not c!12787)) b!81244))

(assert (= (or b!81242 b!81244) bm!7572))

(assert (= (or b!81241 bm!7572) bm!7570))

(assert (= (or b!81239 bm!7570) bm!7571))

(assert (= (and bm!7571 c!12786) b!81238))

(assert (= (and bm!7571 (not c!12786)) b!81240))

(assert (= (and d!19959 res!42246) b!81237))

(assert (= (and b!81237 res!42247) b!81236))

(declare-fun m!83021 () Bool)

(assert (=> b!81237 m!83021))

(declare-fun m!83023 () Bool)

(assert (=> bm!7571 m!83023))

(declare-fun m!83025 () Bool)

(assert (=> d!19959 m!83025))

(assert (=> d!19959 m!82961))

(declare-fun m!83027 () Bool)

(assert (=> b!81238 m!83027))

(declare-fun m!83029 () Bool)

(assert (=> b!81236 m!83029))

(assert (=> b!81139 d!19959))

(declare-fun d!19961 () Bool)

(assert (=> d!19961 (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!37902 () Unit!2350)

(assert (=> d!19961 (= lt!37902 (choose!485 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53030 () Bool)

(assert (=> d!19961 e!53030))

(declare-fun res!42248 () Bool)

(assert (=> d!19961 (=> (not res!42248) (not e!53030))))

(assert (=> d!19961 (= res!42248 (isStrictlySorted!291 (toList!751 lt!37385)))))

(assert (=> d!19961 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000) lt!37902)))

(declare-fun b!81246 () Bool)

(assert (=> b!81246 (= e!53030 (containsKey!141 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19961 res!42248) b!81246))

(assert (=> d!19961 m!82317))

(assert (=> d!19961 m!82317))

(assert (=> d!19961 m!82387))

(declare-fun m!83031 () Bool)

(assert (=> d!19961 m!83031))

(declare-fun m!83033 () Bool)

(assert (=> d!19961 m!83033))

(assert (=> b!81246 m!82383))

(assert (=> b!80880 d!19961))

(declare-fun d!19963 () Bool)

(assert (=> d!19963 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3423 () Bool)

(assert (= bs!3423 d!19963))

(assert (=> bs!3423 m!82317))

(declare-fun m!83035 () Bool)

(assert (=> bs!3423 m!83035))

(assert (=> b!80880 d!19963))

(declare-fun b!81248 () Bool)

(declare-fun e!53031 () Option!143)

(declare-fun e!53032 () Option!143)

(assert (=> b!81248 (= e!53031 e!53032)))

(declare-fun c!12790 () Bool)

(assert (=> b!81248 (= c!12790 (and ((_ is Cons!1534) (toList!751 lt!37385)) (not (= (_1!1111 (h!2123 (toList!751 lt!37385))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!19965 () Bool)

(declare-fun c!12789 () Bool)

(assert (=> d!19965 (= c!12789 (and ((_ is Cons!1534) (toList!751 lt!37385)) (= (_1!1111 (h!2123 (toList!751 lt!37385))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19965 (= (getValueByKey!137 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000) e!53031)))

(declare-fun b!81250 () Bool)

(assert (=> b!81250 (= e!53032 None!141)))

(declare-fun b!81249 () Bool)

(assert (=> b!81249 (= e!53032 (getValueByKey!137 (t!5209 (toList!751 lt!37385)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81247 () Bool)

(assert (=> b!81247 (= e!53031 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37385)))))))

(assert (= (and d!19965 c!12789) b!81247))

(assert (= (and d!19965 (not c!12789)) b!81248))

(assert (= (and b!81248 c!12790) b!81249))

(assert (= (and b!81248 (not c!12790)) b!81250))

(declare-fun m!83037 () Bool)

(assert (=> b!81249 m!83037))

(assert (=> b!80880 d!19965))

(declare-fun b!81252 () Bool)

(declare-fun e!53033 () Option!143)

(declare-fun e!53034 () Option!143)

(assert (=> b!81252 (= e!53033 e!53034)))

(declare-fun c!12792 () Bool)

(assert (=> b!81252 (= c!12792 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37278))) (not (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37278)))) (_1!1111 lt!37197)))))))

(declare-fun d!19967 () Bool)

(declare-fun c!12791 () Bool)

(assert (=> d!19967 (= c!12791 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37278))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37278)))) (_1!1111 lt!37197))))))

(assert (=> d!19967 (= (getValueByKey!137 (t!5209 (toList!751 lt!37278)) (_1!1111 lt!37197)) e!53033)))

(declare-fun b!81254 () Bool)

(assert (=> b!81254 (= e!53034 None!141)))

(declare-fun b!81253 () Bool)

(assert (=> b!81253 (= e!53034 (getValueByKey!137 (t!5209 (t!5209 (toList!751 lt!37278))) (_1!1111 lt!37197)))))

(declare-fun b!81251 () Bool)

(assert (=> b!81251 (= e!53033 (Some!142 (_2!1111 (h!2123 (t!5209 (toList!751 lt!37278))))))))

(assert (= (and d!19967 c!12791) b!81251))

(assert (= (and d!19967 (not c!12791)) b!81252))

(assert (= (and b!81252 c!12792) b!81253))

(assert (= (and b!81252 (not c!12792)) b!81254))

(declare-fun m!83039 () Bool)

(assert (=> b!81253 m!83039))

(assert (=> b!81049 d!19967))

(declare-fun d!19969 () Bool)

(declare-fun c!12795 () Bool)

(assert (=> d!19969 (= c!12795 ((_ is Nil!1535) (toList!751 lt!37306)))))

(declare-fun e!53037 () (InoxSet tuple2!2202))

(assert (=> d!19969 (= (content!84 (toList!751 lt!37306)) e!53037)))

(declare-fun b!81259 () Bool)

(assert (=> b!81259 (= e!53037 ((as const (Array tuple2!2202 Bool)) false))))

(declare-fun b!81260 () Bool)

(assert (=> b!81260 (= e!53037 ((_ map or) (store ((as const (Array tuple2!2202 Bool)) false) (h!2123 (toList!751 lt!37306)) true) (content!84 (t!5209 (toList!751 lt!37306)))))))

(assert (= (and d!19969 c!12795) b!81259))

(assert (= (and d!19969 (not c!12795)) b!81260))

(declare-fun m!83041 () Bool)

(assert (=> b!81260 m!83041))

(declare-fun m!83043 () Bool)

(assert (=> b!81260 m!83043))

(assert (=> d!19805 d!19969))

(declare-fun b!81262 () Bool)

(declare-fun e!53038 () Option!143)

(declare-fun e!53039 () Option!143)

(assert (=> b!81262 (= e!53038 e!53039)))

(declare-fun c!12797 () Bool)

(assert (=> b!81262 (= c!12797 (and ((_ is Cons!1534) (toList!751 lt!37875)) (not (= (_1!1111 (h!2123 (toList!751 lt!37875))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!19971 () Bool)

(declare-fun c!12796 () Bool)

(assert (=> d!19971 (= c!12796 (and ((_ is Cons!1534) (toList!751 lt!37875)) (= (_1!1111 (h!2123 (toList!751 lt!37875))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!19971 (= (getValueByKey!137 (toList!751 lt!37875) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53038)))

(declare-fun b!81264 () Bool)

(assert (=> b!81264 (= e!53039 None!141)))

(declare-fun b!81263 () Bool)

(assert (=> b!81263 (= e!53039 (getValueByKey!137 (t!5209 (toList!751 lt!37875)) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81261 () Bool)

(assert (=> b!81261 (= e!53038 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37875)))))))

(assert (= (and d!19971 c!12796) b!81261))

(assert (= (and d!19971 (not c!12796)) b!81262))

(assert (= (and b!81262 c!12797) b!81263))

(assert (= (and b!81262 (not c!12797)) b!81264))

(declare-fun m!83045 () Bool)

(assert (=> b!81263 m!83045))

(assert (=> b!81157 d!19971))

(declare-fun lt!37903 () Bool)

(declare-fun d!19973 () Bool)

(assert (=> d!19973 (= lt!37903 (select (content!84 (toList!751 lt!37712)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun e!53041 () Bool)

(assert (=> d!19973 (= lt!37903 e!53041)))

(declare-fun res!42250 () Bool)

(assert (=> d!19973 (=> (not res!42250) (not e!53041))))

(assert (=> d!19973 (= res!42250 ((_ is Cons!1534) (toList!751 lt!37712)))))

(assert (=> d!19973 (= (contains!753 (toList!751 lt!37712) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!37903)))

(declare-fun b!81265 () Bool)

(declare-fun e!53040 () Bool)

(assert (=> b!81265 (= e!53041 e!53040)))

(declare-fun res!42249 () Bool)

(assert (=> b!81265 (=> res!42249 e!53040)))

(assert (=> b!81265 (= res!42249 (= (h!2123 (toList!751 lt!37712)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun b!81266 () Bool)

(assert (=> b!81266 (= e!53040 (contains!753 (t!5209 (toList!751 lt!37712)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!19973 res!42250) b!81265))

(assert (= (and b!81265 (not res!42249)) b!81266))

(declare-fun m!83047 () Bool)

(assert (=> d!19973 m!83047))

(declare-fun m!83049 () Bool)

(assert (=> d!19973 m!83049))

(declare-fun m!83051 () Bool)

(assert (=> b!81266 m!83051))

(assert (=> b!80964 d!19973))

(declare-fun d!19975 () Bool)

(assert (=> d!19975 (= (inRange!0 (ite c!12741 (index!3139 lt!37770) (index!3142 lt!37770)) (mask!6299 newMap!16)) (and (bvsge (ite c!12741 (index!3139 lt!37770) (index!3142 lt!37770)) #b00000000000000000000000000000000) (bvslt (ite c!12741 (index!3139 lt!37770) (index!3142 lt!37770)) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7549 d!19975))

(assert (=> b!80899 d!19937))

(declare-fun b!81268 () Bool)

(declare-fun res!42251 () Bool)

(declare-fun e!53042 () Bool)

(assert (=> b!81268 (=> (not res!42251) (not e!53042))))

(assert (=> b!81268 (= res!42251 (bvsge (size!2146 (_2!1110 lt!37475)) (_size!418 (_2!1110 lt!37475))))))

(declare-fun b!81269 () Bool)

(declare-fun res!42252 () Bool)

(assert (=> b!81269 (=> (not res!42252) (not e!53042))))

(assert (=> b!81269 (= res!42252 (= (size!2146 (_2!1110 lt!37475)) (bvadd (_size!418 (_2!1110 lt!37475)) (bvsdiv (bvadd (extraKeys!2140 (_2!1110 lt!37475)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!19977 () Bool)

(declare-fun res!42253 () Bool)

(assert (=> d!19977 (=> (not res!42253) (not e!53042))))

(assert (=> d!19977 (= res!42253 (validMask!0 (mask!6299 (_2!1110 lt!37475))))))

(assert (=> d!19977 (= (simpleValid!55 (_2!1110 lt!37475)) e!53042)))

(declare-fun b!81267 () Bool)

(declare-fun res!42254 () Bool)

(assert (=> b!81267 (=> (not res!42254) (not e!53042))))

(assert (=> b!81267 (= res!42254 (and (= (size!2143 (_values!2276 (_2!1110 lt!37475))) (bvadd (mask!6299 (_2!1110 lt!37475)) #b00000000000000000000000000000001)) (= (size!2142 (_keys!3957 (_2!1110 lt!37475))) (size!2143 (_values!2276 (_2!1110 lt!37475)))) (bvsge (_size!418 (_2!1110 lt!37475)) #b00000000000000000000000000000000) (bvsle (_size!418 (_2!1110 lt!37475)) (bvadd (mask!6299 (_2!1110 lt!37475)) #b00000000000000000000000000000001))))))

(declare-fun b!81270 () Bool)

(assert (=> b!81270 (= e!53042 (and (bvsge (extraKeys!2140 (_2!1110 lt!37475)) #b00000000000000000000000000000000) (bvsle (extraKeys!2140 (_2!1110 lt!37475)) #b00000000000000000000000000000011) (bvsge (_vacant!418 (_2!1110 lt!37475)) #b00000000000000000000000000000000)))))

(assert (= (and d!19977 res!42253) b!81267))

(assert (= (and b!81267 res!42254) b!81268))

(assert (= (and b!81268 res!42251) b!81269))

(assert (= (and b!81269 res!42252) b!81270))

(declare-fun m!83053 () Bool)

(assert (=> b!81268 m!83053))

(assert (=> b!81269 m!83053))

(declare-fun m!83055 () Bool)

(assert (=> d!19977 m!83055))

(assert (=> d!19909 d!19977))

(declare-fun b!81272 () Bool)

(declare-fun e!53043 () Option!143)

(declare-fun e!53044 () Option!143)

(assert (=> b!81272 (= e!53043 e!53044)))

(declare-fun c!12799 () Bool)

(assert (=> b!81272 (= c!12799 (and ((_ is Cons!1534) (t!5209 lt!37287)) (not (= (_1!1111 (h!2123 (t!5209 lt!37287))) (_1!1111 lt!37188)))))))

(declare-fun d!19979 () Bool)

(declare-fun c!12798 () Bool)

(assert (=> d!19979 (= c!12798 (and ((_ is Cons!1534) (t!5209 lt!37287)) (= (_1!1111 (h!2123 (t!5209 lt!37287))) (_1!1111 lt!37188))))))

(assert (=> d!19979 (= (getValueByKey!137 (t!5209 lt!37287) (_1!1111 lt!37188)) e!53043)))

(declare-fun b!81274 () Bool)

(assert (=> b!81274 (= e!53044 None!141)))

(declare-fun b!81273 () Bool)

(assert (=> b!81273 (= e!53044 (getValueByKey!137 (t!5209 (t!5209 lt!37287)) (_1!1111 lt!37188)))))

(declare-fun b!81271 () Bool)

(assert (=> b!81271 (= e!53043 (Some!142 (_2!1111 (h!2123 (t!5209 lt!37287)))))))

(assert (= (and d!19979 c!12798) b!81271))

(assert (= (and d!19979 (not c!12798)) b!81272))

(assert (= (and b!81272 c!12799) b!81273))

(assert (= (and b!81272 (not c!12799)) b!81274))

(declare-fun m!83057 () Bool)

(assert (=> b!81273 m!83057))

(assert (=> b!80649 d!19979))

(declare-fun d!19981 () Bool)

(declare-fun res!42255 () Bool)

(declare-fun e!53045 () Bool)

(assert (=> d!19981 (=> res!42255 e!53045)))

(assert (=> d!19981 (= res!42255 (and ((_ is Cons!1534) lt!37524) (= (_1!1111 (h!2123 lt!37524)) (_1!1111 lt!37202))))))

(assert (=> d!19981 (= (containsKey!141 lt!37524 (_1!1111 lt!37202)) e!53045)))

(declare-fun b!81275 () Bool)

(declare-fun e!53046 () Bool)

(assert (=> b!81275 (= e!53045 e!53046)))

(declare-fun res!42256 () Bool)

(assert (=> b!81275 (=> (not res!42256) (not e!53046))))

(assert (=> b!81275 (= res!42256 (and (or (not ((_ is Cons!1534) lt!37524)) (bvsle (_1!1111 (h!2123 lt!37524)) (_1!1111 lt!37202))) ((_ is Cons!1534) lt!37524) (bvslt (_1!1111 (h!2123 lt!37524)) (_1!1111 lt!37202))))))

(declare-fun b!81276 () Bool)

(assert (=> b!81276 (= e!53046 (containsKey!141 (t!5209 lt!37524) (_1!1111 lt!37202)))))

(assert (= (and d!19981 (not res!42255)) b!81275))

(assert (= (and b!81275 res!42256) b!81276))

(declare-fun m!83059 () Bool)

(assert (=> b!81276 m!83059))

(assert (=> b!80718 d!19981))

(assert (=> d!19859 d!19855))

(assert (=> d!19859 d!19861))

(assert (=> d!19859 d!19857))

(assert (=> d!19859 d!19853))

(declare-fun d!19983 () Bool)

(declare-fun res!42257 () Bool)

(declare-fun e!53047 () Bool)

(assert (=> d!19983 (=> res!42257 e!53047)))

(assert (=> d!19983 (= res!42257 (and ((_ is Cons!1534) lt!37755) (= (_1!1111 (h!2123 lt!37755)) (_1!1111 lt!37197))))))

(assert (=> d!19983 (= (containsKey!141 lt!37755 (_1!1111 lt!37197)) e!53047)))

(declare-fun b!81277 () Bool)

(declare-fun e!53048 () Bool)

(assert (=> b!81277 (= e!53047 e!53048)))

(declare-fun res!42258 () Bool)

(assert (=> b!81277 (=> (not res!42258) (not e!53048))))

(assert (=> b!81277 (= res!42258 (and (or (not ((_ is Cons!1534) lt!37755)) (bvsle (_1!1111 (h!2123 lt!37755)) (_1!1111 lt!37197))) ((_ is Cons!1534) lt!37755) (bvslt (_1!1111 (h!2123 lt!37755)) (_1!1111 lt!37197))))))

(declare-fun b!81278 () Bool)

(assert (=> b!81278 (= e!53048 (containsKey!141 (t!5209 lt!37755) (_1!1111 lt!37197)))))

(assert (= (and d!19983 (not res!42257)) b!81277))

(assert (= (and b!81277 res!42258) b!81278))

(declare-fun m!83061 () Bool)

(assert (=> b!81278 m!83061))

(assert (=> b!81020 d!19983))

(declare-fun d!19985 () Bool)

(assert (=> d!19985 (= (apply!80 lt!37637 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!137 (toList!751 lt!37637) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3424 () Bool)

(assert (= bs!3424 d!19985))

(declare-fun m!83063 () Bool)

(assert (=> bs!3424 m!83063))

(assert (=> bs!3424 m!83063))

(declare-fun m!83065 () Bool)

(assert (=> bs!3424 m!83065))

(assert (=> b!80886 d!19985))

(declare-fun lt!37904 () Bool)

(declare-fun d!19987 () Bool)

(assert (=> d!19987 (= lt!37904 (select (content!84 (toList!751 lt!37568)) (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!53050 () Bool)

(assert (=> d!19987 (= lt!37904 e!53050)))

(declare-fun res!42260 () Bool)

(assert (=> d!19987 (=> (not res!42260) (not e!53050))))

(assert (=> d!19987 (= res!42260 ((_ is Cons!1534) (toList!751 lt!37568)))))

(assert (=> d!19987 (= (contains!753 (toList!751 lt!37568) (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37904)))

(declare-fun b!81279 () Bool)

(declare-fun e!53049 () Bool)

(assert (=> b!81279 (= e!53050 e!53049)))

(declare-fun res!42259 () Bool)

(assert (=> b!81279 (=> res!42259 e!53049)))

(assert (=> b!81279 (= res!42259 (= (h!2123 (toList!751 lt!37568)) (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!81280 () Bool)

(assert (=> b!81280 (= e!53049 (contains!753 (t!5209 (toList!751 lt!37568)) (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!19987 res!42260) b!81279))

(assert (= (and b!81279 (not res!42259)) b!81280))

(declare-fun m!83067 () Bool)

(assert (=> d!19987 m!83067))

(declare-fun m!83069 () Bool)

(assert (=> d!19987 m!83069))

(declare-fun m!83071 () Bool)

(assert (=> b!81280 m!83071))

(assert (=> b!80785 d!19987))

(declare-fun d!19989 () Bool)

(declare-fun e!53051 () Bool)

(assert (=> d!19989 e!53051))

(declare-fun res!42261 () Bool)

(assert (=> d!19989 (=> res!42261 e!53051)))

(declare-fun lt!37907 () Bool)

(assert (=> d!19989 (= res!42261 (not lt!37907))))

(declare-fun lt!37906 () Bool)

(assert (=> d!19989 (= lt!37907 lt!37906)))

(declare-fun lt!37905 () Unit!2350)

(declare-fun e!53052 () Unit!2350)

(assert (=> d!19989 (= lt!37905 e!53052)))

(declare-fun c!12800 () Bool)

(assert (=> d!19989 (= c!12800 lt!37906)))

(assert (=> d!19989 (= lt!37906 (containsKey!141 (toList!751 lt!37875) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!19989 (= (contains!750 lt!37875 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37907)))

(declare-fun b!81281 () Bool)

(declare-fun lt!37908 () Unit!2350)

(assert (=> b!81281 (= e!53052 lt!37908)))

(assert (=> b!81281 (= lt!37908 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37875) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> b!81281 (isDefined!91 (getValueByKey!137 (toList!751 lt!37875) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81282 () Bool)

(declare-fun Unit!2386 () Unit!2350)

(assert (=> b!81282 (= e!53052 Unit!2386)))

(declare-fun b!81283 () Bool)

(assert (=> b!81283 (= e!53051 (isDefined!91 (getValueByKey!137 (toList!751 lt!37875) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!19989 c!12800) b!81281))

(assert (= (and d!19989 (not c!12800)) b!81282))

(assert (= (and d!19989 (not res!42261)) b!81283))

(declare-fun m!83073 () Bool)

(assert (=> d!19989 m!83073))

(declare-fun m!83075 () Bool)

(assert (=> b!81281 m!83075))

(assert (=> b!81281 m!82913))

(assert (=> b!81281 m!82913))

(declare-fun m!83077 () Bool)

(assert (=> b!81281 m!83077))

(assert (=> b!81283 m!82913))

(assert (=> b!81283 m!82913))

(assert (=> b!81283 m!83077))

(assert (=> d!19911 d!19989))

(declare-fun b!81285 () Bool)

(declare-fun e!53053 () Option!143)

(declare-fun e!53054 () Option!143)

(assert (=> b!81285 (= e!53053 e!53054)))

(declare-fun c!12802 () Bool)

(assert (=> b!81285 (= c!12802 (and ((_ is Cons!1534) lt!37872) (not (= (_1!1111 (h!2123 lt!37872)) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!19991 () Bool)

(declare-fun c!12801 () Bool)

(assert (=> d!19991 (= c!12801 (and ((_ is Cons!1534) lt!37872) (= (_1!1111 (h!2123 lt!37872)) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!19991 (= (getValueByKey!137 lt!37872 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53053)))

(declare-fun b!81287 () Bool)

(assert (=> b!81287 (= e!53054 None!141)))

(declare-fun b!81286 () Bool)

(assert (=> b!81286 (= e!53054 (getValueByKey!137 (t!5209 lt!37872) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81284 () Bool)

(assert (=> b!81284 (= e!53053 (Some!142 (_2!1111 (h!2123 lt!37872))))))

(assert (= (and d!19991 c!12801) b!81284))

(assert (= (and d!19991 (not c!12801)) b!81285))

(assert (= (and b!81285 c!12802) b!81286))

(assert (= (and b!81285 (not c!12802)) b!81287))

(declare-fun m!83079 () Bool)

(assert (=> b!81286 m!83079))

(assert (=> d!19911 d!19991))

(declare-fun d!19993 () Bool)

(assert (=> d!19993 (= (getValueByKey!137 lt!37872 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!37909 () Unit!2350)

(assert (=> d!19993 (= lt!37909 (choose!478 lt!37872 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53055 () Bool)

(assert (=> d!19993 e!53055))

(declare-fun res!42262 () Bool)

(assert (=> d!19993 (=> (not res!42262) (not e!53055))))

(assert (=> d!19993 (= res!42262 (isStrictlySorted!291 lt!37872))))

(assert (=> d!19993 (= (lemmaContainsTupThenGetReturnValue!56 lt!37872 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37909)))

(declare-fun b!81288 () Bool)

(declare-fun res!42263 () Bool)

(assert (=> b!81288 (=> (not res!42263) (not e!53055))))

(assert (=> b!81288 (= res!42263 (containsKey!141 lt!37872 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81289 () Bool)

(assert (=> b!81289 (= e!53055 (contains!753 lt!37872 (tuple2!2203 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!19993 res!42262) b!81288))

(assert (= (and b!81288 res!42263) b!81289))

(assert (=> d!19993 m!82907))

(declare-fun m!83081 () Bool)

(assert (=> d!19993 m!83081))

(declare-fun m!83083 () Bool)

(assert (=> d!19993 m!83083))

(declare-fun m!83085 () Bool)

(assert (=> b!81288 m!83085))

(declare-fun m!83087 () Bool)

(assert (=> b!81289 m!83087))

(assert (=> d!19911 d!19993))

(declare-fun d!19995 () Bool)

(declare-fun e!53057 () Bool)

(assert (=> d!19995 e!53057))

(declare-fun res!42264 () Bool)

(assert (=> d!19995 (=> (not res!42264) (not e!53057))))

(declare-fun lt!37910 () List!1538)

(assert (=> d!19995 (= res!42264 (isStrictlySorted!291 lt!37910))))

(declare-fun e!53056 () List!1538)

(assert (=> d!19995 (= lt!37910 e!53056)))

(declare-fun c!12806 () Bool)

(assert (=> d!19995 (= c!12806 (and ((_ is Cons!1534) (toList!751 call!7417)) (bvslt (_1!1111 (h!2123 (toList!751 call!7417))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!19995 (isStrictlySorted!291 (toList!751 call!7417))))

(assert (=> d!19995 (= (insertStrictlySorted!58 (toList!751 call!7417) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37910)))

(declare-fun b!81290 () Bool)

(assert (=> b!81290 (= e!53057 (contains!753 lt!37910 (tuple2!2203 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun bm!7573 () Bool)

(declare-fun call!7576 () List!1538)

(declare-fun call!7577 () List!1538)

(assert (=> bm!7573 (= call!7576 call!7577)))

(declare-fun b!81291 () Bool)

(declare-fun res!42265 () Bool)

(assert (=> b!81291 (=> (not res!42265) (not e!53057))))

(assert (=> b!81291 (= res!42265 (containsKey!141 lt!37910 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81292 () Bool)

(declare-fun e!53059 () List!1538)

(assert (=> b!81292 (= e!53059 (insertStrictlySorted!58 (t!5209 (toList!751 call!7417)) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81293 () Bool)

(assert (=> b!81293 (= e!53056 call!7577)))

(declare-fun bm!7574 () Bool)

(assert (=> bm!7574 (= call!7577 ($colon$colon!69 e!53059 (ite c!12806 (h!2123 (toList!751 call!7417)) (tuple2!2203 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!12804 () Bool)

(assert (=> bm!7574 (= c!12804 c!12806)))

(declare-fun b!81294 () Bool)

(declare-fun c!12803 () Bool)

(declare-fun c!12805 () Bool)

(assert (=> b!81294 (= e!53059 (ite c!12803 (t!5209 (toList!751 call!7417)) (ite c!12805 (Cons!1534 (h!2123 (toList!751 call!7417)) (t!5209 (toList!751 call!7417))) Nil!1535)))))

(declare-fun b!81295 () Bool)

(declare-fun e!53060 () List!1538)

(assert (=> b!81295 (= e!53060 call!7576)))

(declare-fun b!81296 () Bool)

(declare-fun e!53058 () List!1538)

(declare-fun call!7578 () List!1538)

(assert (=> b!81296 (= e!53058 call!7578)))

(declare-fun b!81297 () Bool)

(assert (=> b!81297 (= c!12805 (and ((_ is Cons!1534) (toList!751 call!7417)) (bvsgt (_1!1111 (h!2123 (toList!751 call!7417))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> b!81297 (= e!53060 e!53058)))

(declare-fun b!81298 () Bool)

(assert (=> b!81298 (= e!53058 call!7578)))

(declare-fun bm!7575 () Bool)

(assert (=> bm!7575 (= call!7578 call!7576)))

(declare-fun b!81299 () Bool)

(assert (=> b!81299 (= e!53056 e!53060)))

(assert (=> b!81299 (= c!12803 (and ((_ is Cons!1534) (toList!751 call!7417)) (= (_1!1111 (h!2123 (toList!751 call!7417))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!19995 c!12806) b!81293))

(assert (= (and d!19995 (not c!12806)) b!81299))

(assert (= (and b!81299 c!12803) b!81295))

(assert (= (and b!81299 (not c!12803)) b!81297))

(assert (= (and b!81297 c!12805) b!81296))

(assert (= (and b!81297 (not c!12805)) b!81298))

(assert (= (or b!81296 b!81298) bm!7575))

(assert (= (or b!81295 bm!7575) bm!7573))

(assert (= (or b!81293 bm!7573) bm!7574))

(assert (= (and bm!7574 c!12804) b!81292))

(assert (= (and bm!7574 (not c!12804)) b!81294))

(assert (= (and d!19995 res!42264) b!81291))

(assert (= (and b!81291 res!42265) b!81290))

(declare-fun m!83089 () Bool)

(assert (=> b!81291 m!83089))

(declare-fun m!83091 () Bool)

(assert (=> bm!7574 m!83091))

(declare-fun m!83093 () Bool)

(assert (=> d!19995 m!83093))

(declare-fun m!83095 () Bool)

(assert (=> d!19995 m!83095))

(declare-fun m!83097 () Bool)

(assert (=> b!81292 m!83097))

(declare-fun m!83099 () Bool)

(assert (=> b!81290 m!83099))

(assert (=> d!19911 d!19995))

(declare-fun b!81301 () Bool)

(declare-fun e!53061 () Option!143)

(declare-fun e!53062 () Option!143)

(assert (=> b!81301 (= e!53061 e!53062)))

(declare-fun c!12808 () Bool)

(assert (=> b!81301 (= c!12808 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37298))) (not (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37298)))) (_1!1111 lt!37188)))))))

(declare-fun d!19997 () Bool)

(declare-fun c!12807 () Bool)

(assert (=> d!19997 (= c!12807 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37298))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37298)))) (_1!1111 lt!37188))))))

(assert (=> d!19997 (= (getValueByKey!137 (t!5209 (toList!751 lt!37298)) (_1!1111 lt!37188)) e!53061)))

(declare-fun b!81303 () Bool)

(assert (=> b!81303 (= e!53062 None!141)))

(declare-fun b!81302 () Bool)

(assert (=> b!81302 (= e!53062 (getValueByKey!137 (t!5209 (t!5209 (toList!751 lt!37298))) (_1!1111 lt!37188)))))

(declare-fun b!81300 () Bool)

(assert (=> b!81300 (= e!53061 (Some!142 (_2!1111 (h!2123 (t!5209 (toList!751 lt!37298))))))))

(assert (= (and d!19997 c!12807) b!81300))

(assert (= (and d!19997 (not c!12807)) b!81301))

(assert (= (and b!81301 c!12808) b!81302))

(assert (= (and b!81301 (not c!12808)) b!81303))

(declare-fun m!83101 () Bool)

(assert (=> b!81302 m!83101))

(assert (=> b!80828 d!19997))

(declare-fun d!19999 () Bool)

(assert (=> d!19999 (= (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37380)) (v!2614 (getValueByKey!137 (toList!751 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37380)))))

(assert (=> d!19739 d!19999))

(declare-fun b!81305 () Bool)

(declare-fun e!53063 () Option!143)

(declare-fun e!53064 () Option!143)

(assert (=> b!81305 (= e!53063 e!53064)))

(declare-fun c!12810 () Bool)

(assert (=> b!81305 (= c!12810 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (not (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) lt!37380))))))

(declare-fun c!12809 () Bool)

(declare-fun d!20001 () Bool)

(assert (=> d!20001 (= c!12809 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) lt!37380)))))

(assert (=> d!20001 (= (getValueByKey!137 (toList!751 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37380) e!53063)))

(declare-fun b!81307 () Bool)

(assert (=> b!81307 (= e!53064 None!141)))

(declare-fun b!81306 () Bool)

(assert (=> b!81306 (= e!53064 (getValueByKey!137 (t!5209 (toList!751 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) lt!37380))))

(declare-fun b!81304 () Bool)

(assert (=> b!81304 (= e!53063 (Some!142 (_2!1111 (h!2123 (toList!751 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))))

(assert (= (and d!20001 c!12809) b!81304))

(assert (= (and d!20001 (not c!12809)) b!81305))

(assert (= (and b!81305 c!12810) b!81306))

(assert (= (and b!81305 (not c!12810)) b!81307))

(declare-fun m!83103 () Bool)

(assert (=> b!81306 m!83103))

(assert (=> d!19739 d!20001))

(declare-fun d!20003 () Bool)

(declare-fun e!53065 () Bool)

(assert (=> d!20003 e!53065))

(declare-fun res!42266 () Bool)

(assert (=> d!20003 (=> (not res!42266) (not e!53065))))

(declare-fun lt!37914 () ListLongMap!1471)

(assert (=> d!20003 (= res!42266 (contains!750 lt!37914 (_1!1111 (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))))))

(declare-fun lt!37911 () List!1538)

(assert (=> d!20003 (= lt!37914 (ListLongMap!1472 lt!37911))))

(declare-fun lt!37912 () Unit!2350)

(declare-fun lt!37913 () Unit!2350)

(assert (=> d!20003 (= lt!37912 lt!37913)))

(assert (=> d!20003 (= (getValueByKey!137 lt!37911 (_1!1111 (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))) (Some!142 (_2!1111 (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))))))

(assert (=> d!20003 (= lt!37913 (lemmaContainsTupThenGetReturnValue!56 lt!37911 (_1!1111 (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))) (_2!1111 (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))))))

(assert (=> d!20003 (= lt!37911 (insertStrictlySorted!58 (toList!751 (ite c!12697 call!7526 (ite c!12698 call!7527 call!7523))) (_1!1111 (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))) (_2!1111 (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))))))

(assert (=> d!20003 (= (+!111 (ite c!12697 call!7526 (ite c!12698 call!7527 call!7523)) (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))) lt!37914)))

(declare-fun b!81308 () Bool)

(declare-fun res!42267 () Bool)

(assert (=> b!81308 (=> (not res!42267) (not e!53065))))

(assert (=> b!81308 (= res!42267 (= (getValueByKey!137 (toList!751 lt!37914) (_1!1111 (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))) (Some!142 (_2!1111 (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))))

(declare-fun b!81309 () Bool)

(assert (=> b!81309 (= e!53065 (contains!753 (toList!751 lt!37914) (ite (or c!12697 c!12698) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(assert (= (and d!20003 res!42266) b!81308))

(assert (= (and b!81308 res!42267) b!81309))

(declare-fun m!83105 () Bool)

(assert (=> d!20003 m!83105))

(declare-fun m!83107 () Bool)

(assert (=> d!20003 m!83107))

(declare-fun m!83109 () Bool)

(assert (=> d!20003 m!83109))

(declare-fun m!83111 () Bool)

(assert (=> d!20003 m!83111))

(declare-fun m!83113 () Bool)

(assert (=> b!81308 m!83113))

(declare-fun m!83115 () Bool)

(assert (=> b!81309 m!83115))

(assert (=> bm!7526 d!20003))

(declare-fun d!20005 () Bool)

(assert (=> d!20005 (= (apply!80 (+!111 lt!37658 (tuple2!2203 lt!37667 (minValue!2189 newMap!16))) lt!37654) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37658 (tuple2!2203 lt!37667 (minValue!2189 newMap!16)))) lt!37654)))))

(declare-fun bs!3425 () Bool)

(assert (= bs!3425 d!20005))

(declare-fun m!83117 () Bool)

(assert (=> bs!3425 m!83117))

(assert (=> bs!3425 m!83117))

(declare-fun m!83119 () Bool)

(assert (=> bs!3425 m!83119))

(assert (=> b!80923 d!20005))

(declare-fun d!20007 () Bool)

(declare-fun e!53066 () Bool)

(assert (=> d!20007 e!53066))

(declare-fun res!42268 () Bool)

(assert (=> d!20007 (=> (not res!42268) (not e!53066))))

(declare-fun lt!37918 () ListLongMap!1471)

(assert (=> d!20007 (= res!42268 (contains!750 lt!37918 (_1!1111 (tuple2!2203 lt!37668 (minValue!2189 newMap!16)))))))

(declare-fun lt!37915 () List!1538)

(assert (=> d!20007 (= lt!37918 (ListLongMap!1472 lt!37915))))

(declare-fun lt!37916 () Unit!2350)

(declare-fun lt!37917 () Unit!2350)

(assert (=> d!20007 (= lt!37916 lt!37917)))

(assert (=> d!20007 (= (getValueByKey!137 lt!37915 (_1!1111 (tuple2!2203 lt!37668 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37668 (minValue!2189 newMap!16)))))))

(assert (=> d!20007 (= lt!37917 (lemmaContainsTupThenGetReturnValue!56 lt!37915 (_1!1111 (tuple2!2203 lt!37668 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37668 (minValue!2189 newMap!16)))))))

(assert (=> d!20007 (= lt!37915 (insertStrictlySorted!58 (toList!751 lt!37660) (_1!1111 (tuple2!2203 lt!37668 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37668 (minValue!2189 newMap!16)))))))

(assert (=> d!20007 (= (+!111 lt!37660 (tuple2!2203 lt!37668 (minValue!2189 newMap!16))) lt!37918)))

(declare-fun b!81310 () Bool)

(declare-fun res!42269 () Bool)

(assert (=> b!81310 (=> (not res!42269) (not e!53066))))

(assert (=> b!81310 (= res!42269 (= (getValueByKey!137 (toList!751 lt!37918) (_1!1111 (tuple2!2203 lt!37668 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37668 (minValue!2189 newMap!16))))))))

(declare-fun b!81311 () Bool)

(assert (=> b!81311 (= e!53066 (contains!753 (toList!751 lt!37918) (tuple2!2203 lt!37668 (minValue!2189 newMap!16))))))

(assert (= (and d!20007 res!42268) b!81310))

(assert (= (and b!81310 res!42269) b!81311))

(declare-fun m!83121 () Bool)

(assert (=> d!20007 m!83121))

(declare-fun m!83123 () Bool)

(assert (=> d!20007 m!83123))

(declare-fun m!83125 () Bool)

(assert (=> d!20007 m!83125))

(declare-fun m!83127 () Bool)

(assert (=> d!20007 m!83127))

(declare-fun m!83129 () Bool)

(assert (=> b!81310 m!83129))

(declare-fun m!83131 () Bool)

(assert (=> b!81311 m!83131))

(assert (=> b!80923 d!20007))

(declare-fun d!20009 () Bool)

(assert (=> d!20009 (= (apply!80 (+!111 lt!37661 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16))) lt!37659) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37661 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16)))) lt!37659)))))

(declare-fun bs!3426 () Bool)

(assert (= bs!3426 d!20009))

(declare-fun m!83133 () Bool)

(assert (=> bs!3426 m!83133))

(assert (=> bs!3426 m!83133))

(declare-fun m!83135 () Bool)

(assert (=> bs!3426 m!83135))

(assert (=> b!80923 d!20009))

(declare-fun d!20011 () Bool)

(assert (=> d!20011 (= (apply!80 (+!111 lt!37660 (tuple2!2203 lt!37668 (minValue!2189 newMap!16))) lt!37653) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37660 (tuple2!2203 lt!37668 (minValue!2189 newMap!16)))) lt!37653)))))

(declare-fun bs!3427 () Bool)

(assert (= bs!3427 d!20011))

(declare-fun m!83137 () Bool)

(assert (=> bs!3427 m!83137))

(assert (=> bs!3427 m!83137))

(declare-fun m!83139 () Bool)

(assert (=> bs!3427 m!83139))

(assert (=> b!80923 d!20011))

(declare-fun d!20013 () Bool)

(assert (=> d!20013 (= (apply!80 lt!37661 lt!37659) (get!1198 (getValueByKey!137 (toList!751 lt!37661) lt!37659)))))

(declare-fun bs!3428 () Bool)

(assert (= bs!3428 d!20013))

(declare-fun m!83141 () Bool)

(assert (=> bs!3428 m!83141))

(assert (=> bs!3428 m!83141))

(declare-fun m!83143 () Bool)

(assert (=> bs!3428 m!83143))

(assert (=> b!80923 d!20013))

(declare-fun d!20015 () Bool)

(assert (=> d!20015 (= (apply!80 (+!111 lt!37658 (tuple2!2203 lt!37667 (minValue!2189 newMap!16))) lt!37654) (apply!80 lt!37658 lt!37654))))

(declare-fun lt!37919 () Unit!2350)

(assert (=> d!20015 (= lt!37919 (choose!479 lt!37658 lt!37667 (minValue!2189 newMap!16) lt!37654))))

(declare-fun e!53067 () Bool)

(assert (=> d!20015 e!53067))

(declare-fun res!42270 () Bool)

(assert (=> d!20015 (=> (not res!42270) (not e!53067))))

(assert (=> d!20015 (= res!42270 (contains!750 lt!37658 lt!37654))))

(assert (=> d!20015 (= (addApplyDifferent!56 lt!37658 lt!37667 (minValue!2189 newMap!16) lt!37654) lt!37919)))

(declare-fun b!81312 () Bool)

(assert (=> b!81312 (= e!53067 (not (= lt!37654 lt!37667)))))

(assert (= (and d!20015 res!42270) b!81312))

(assert (=> d!20015 m!82491))

(assert (=> d!20015 m!82493))

(declare-fun m!83145 () Bool)

(assert (=> d!20015 m!83145))

(assert (=> d!20015 m!82501))

(assert (=> d!20015 m!82491))

(declare-fun m!83147 () Bool)

(assert (=> d!20015 m!83147))

(assert (=> b!80923 d!20015))

(declare-fun d!20017 () Bool)

(assert (=> d!20017 (= (apply!80 lt!37660 lt!37653) (get!1198 (getValueByKey!137 (toList!751 lt!37660) lt!37653)))))

(declare-fun bs!3429 () Bool)

(assert (= bs!3429 d!20017))

(declare-fun m!83149 () Bool)

(assert (=> bs!3429 m!83149))

(assert (=> bs!3429 m!83149))

(declare-fun m!83151 () Bool)

(assert (=> bs!3429 m!83151))

(assert (=> b!80923 d!20017))

(declare-fun d!20019 () Bool)

(assert (=> d!20019 (= (apply!80 lt!37658 lt!37654) (get!1198 (getValueByKey!137 (toList!751 lt!37658) lt!37654)))))

(declare-fun bs!3430 () Bool)

(assert (= bs!3430 d!20019))

(declare-fun m!83153 () Bool)

(assert (=> bs!3430 m!83153))

(assert (=> bs!3430 m!83153))

(declare-fun m!83155 () Bool)

(assert (=> bs!3430 m!83155))

(assert (=> b!80923 d!20019))

(declare-fun d!20021 () Bool)

(assert (=> d!20021 (contains!750 (+!111 lt!37663 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16))) lt!37671)))

(declare-fun lt!37920 () Unit!2350)

(assert (=> d!20021 (= lt!37920 (choose!480 lt!37663 lt!37651 (zeroValue!2189 newMap!16) lt!37671))))

(assert (=> d!20021 (contains!750 lt!37663 lt!37671)))

(assert (=> d!20021 (= (addStillContains!56 lt!37663 lt!37651 (zeroValue!2189 newMap!16) lt!37671) lt!37920)))

(declare-fun bs!3431 () Bool)

(assert (= bs!3431 d!20021))

(assert (=> bs!3431 m!82505))

(assert (=> bs!3431 m!82505))

(assert (=> bs!3431 m!82507))

(declare-fun m!83157 () Bool)

(assert (=> bs!3431 m!83157))

(declare-fun m!83159 () Bool)

(assert (=> bs!3431 m!83159))

(assert (=> b!80923 d!20021))

(declare-fun d!20023 () Bool)

(declare-fun e!53068 () Bool)

(assert (=> d!20023 e!53068))

(declare-fun res!42271 () Bool)

(assert (=> d!20023 (=> res!42271 e!53068)))

(declare-fun lt!37923 () Bool)

(assert (=> d!20023 (= res!42271 (not lt!37923))))

(declare-fun lt!37922 () Bool)

(assert (=> d!20023 (= lt!37923 lt!37922)))

(declare-fun lt!37921 () Unit!2350)

(declare-fun e!53069 () Unit!2350)

(assert (=> d!20023 (= lt!37921 e!53069)))

(declare-fun c!12811 () Bool)

(assert (=> d!20023 (= c!12811 lt!37922)))

(assert (=> d!20023 (= lt!37922 (containsKey!141 (toList!751 (+!111 lt!37663 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16)))) lt!37671))))

(assert (=> d!20023 (= (contains!750 (+!111 lt!37663 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16))) lt!37671) lt!37923)))

(declare-fun b!81313 () Bool)

(declare-fun lt!37924 () Unit!2350)

(assert (=> b!81313 (= e!53069 lt!37924)))

(assert (=> b!81313 (= lt!37924 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (+!111 lt!37663 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16)))) lt!37671))))

(assert (=> b!81313 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37663 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16)))) lt!37671))))

(declare-fun b!81314 () Bool)

(declare-fun Unit!2387 () Unit!2350)

(assert (=> b!81314 (= e!53069 Unit!2387)))

(declare-fun b!81315 () Bool)

(assert (=> b!81315 (= e!53068 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37663 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16)))) lt!37671)))))

(assert (= (and d!20023 c!12811) b!81313))

(assert (= (and d!20023 (not c!12811)) b!81314))

(assert (= (and d!20023 (not res!42271)) b!81315))

(declare-fun m!83161 () Bool)

(assert (=> d!20023 m!83161))

(declare-fun m!83163 () Bool)

(assert (=> b!81313 m!83163))

(declare-fun m!83165 () Bool)

(assert (=> b!81313 m!83165))

(assert (=> b!81313 m!83165))

(declare-fun m!83167 () Bool)

(assert (=> b!81313 m!83167))

(assert (=> b!81315 m!83165))

(assert (=> b!81315 m!83165))

(assert (=> b!81315 m!83167))

(assert (=> b!80923 d!20023))

(declare-fun d!20025 () Bool)

(assert (=> d!20025 (= (apply!80 (+!111 lt!37660 (tuple2!2203 lt!37668 (minValue!2189 newMap!16))) lt!37653) (apply!80 lt!37660 lt!37653))))

(declare-fun lt!37925 () Unit!2350)

(assert (=> d!20025 (= lt!37925 (choose!479 lt!37660 lt!37668 (minValue!2189 newMap!16) lt!37653))))

(declare-fun e!53070 () Bool)

(assert (=> d!20025 e!53070))

(declare-fun res!42272 () Bool)

(assert (=> d!20025 (=> (not res!42272) (not e!53070))))

(assert (=> d!20025 (= res!42272 (contains!750 lt!37660 lt!37653))))

(assert (=> d!20025 (= (addApplyDifferent!56 lt!37660 lt!37668 (minValue!2189 newMap!16) lt!37653) lt!37925)))

(declare-fun b!81316 () Bool)

(assert (=> b!81316 (= e!53070 (not (= lt!37653 lt!37668)))))

(assert (= (and d!20025 res!42272) b!81316))

(assert (=> d!20025 m!82495))

(assert (=> d!20025 m!82517))

(declare-fun m!83169 () Bool)

(assert (=> d!20025 m!83169))

(assert (=> d!20025 m!82511))

(assert (=> d!20025 m!82495))

(declare-fun m!83171 () Bool)

(assert (=> d!20025 m!83171))

(assert (=> b!80923 d!20025))

(declare-fun d!20027 () Bool)

(assert (=> d!20027 (= (apply!80 (+!111 lt!37661 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16))) lt!37659) (apply!80 lt!37661 lt!37659))))

(declare-fun lt!37926 () Unit!2350)

(assert (=> d!20027 (= lt!37926 (choose!479 lt!37661 lt!37657 (zeroValue!2189 newMap!16) lt!37659))))

(declare-fun e!53071 () Bool)

(assert (=> d!20027 e!53071))

(declare-fun res!42273 () Bool)

(assert (=> d!20027 (=> (not res!42273) (not e!53071))))

(assert (=> d!20027 (= res!42273 (contains!750 lt!37661 lt!37659))))

(assert (=> d!20027 (= (addApplyDifferent!56 lt!37661 lt!37657 (zeroValue!2189 newMap!16) lt!37659) lt!37926)))

(declare-fun b!81317 () Bool)

(assert (=> b!81317 (= e!53071 (not (= lt!37659 lt!37657)))))

(assert (= (and d!20027 res!42273) b!81317))

(assert (=> d!20027 m!82499))

(assert (=> d!20027 m!82513))

(declare-fun m!83173 () Bool)

(assert (=> d!20027 m!83173))

(assert (=> d!20027 m!82509))

(assert (=> d!20027 m!82499))

(declare-fun m!83175 () Bool)

(assert (=> d!20027 m!83175))

(assert (=> b!80923 d!20027))

(declare-fun d!20029 () Bool)

(declare-fun e!53072 () Bool)

(assert (=> d!20029 e!53072))

(declare-fun res!42274 () Bool)

(assert (=> d!20029 (=> (not res!42274) (not e!53072))))

(declare-fun lt!37930 () ListLongMap!1471)

(assert (=> d!20029 (= res!42274 (contains!750 lt!37930 (_1!1111 (tuple2!2203 lt!37667 (minValue!2189 newMap!16)))))))

(declare-fun lt!37927 () List!1538)

(assert (=> d!20029 (= lt!37930 (ListLongMap!1472 lt!37927))))

(declare-fun lt!37928 () Unit!2350)

(declare-fun lt!37929 () Unit!2350)

(assert (=> d!20029 (= lt!37928 lt!37929)))

(assert (=> d!20029 (= (getValueByKey!137 lt!37927 (_1!1111 (tuple2!2203 lt!37667 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37667 (minValue!2189 newMap!16)))))))

(assert (=> d!20029 (= lt!37929 (lemmaContainsTupThenGetReturnValue!56 lt!37927 (_1!1111 (tuple2!2203 lt!37667 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37667 (minValue!2189 newMap!16)))))))

(assert (=> d!20029 (= lt!37927 (insertStrictlySorted!58 (toList!751 lt!37658) (_1!1111 (tuple2!2203 lt!37667 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37667 (minValue!2189 newMap!16)))))))

(assert (=> d!20029 (= (+!111 lt!37658 (tuple2!2203 lt!37667 (minValue!2189 newMap!16))) lt!37930)))

(declare-fun b!81318 () Bool)

(declare-fun res!42275 () Bool)

(assert (=> b!81318 (=> (not res!42275) (not e!53072))))

(assert (=> b!81318 (= res!42275 (= (getValueByKey!137 (toList!751 lt!37930) (_1!1111 (tuple2!2203 lt!37667 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37667 (minValue!2189 newMap!16))))))))

(declare-fun b!81319 () Bool)

(assert (=> b!81319 (= e!53072 (contains!753 (toList!751 lt!37930) (tuple2!2203 lt!37667 (minValue!2189 newMap!16))))))

(assert (= (and d!20029 res!42274) b!81318))

(assert (= (and b!81318 res!42275) b!81319))

(declare-fun m!83177 () Bool)

(assert (=> d!20029 m!83177))

(declare-fun m!83179 () Bool)

(assert (=> d!20029 m!83179))

(declare-fun m!83181 () Bool)

(assert (=> d!20029 m!83181))

(declare-fun m!83183 () Bool)

(assert (=> d!20029 m!83183))

(declare-fun m!83185 () Bool)

(assert (=> b!81318 m!83185))

(declare-fun m!83187 () Bool)

(assert (=> b!81319 m!83187))

(assert (=> b!80923 d!20029))

(declare-fun d!20031 () Bool)

(declare-fun e!53073 () Bool)

(assert (=> d!20031 e!53073))

(declare-fun res!42276 () Bool)

(assert (=> d!20031 (=> (not res!42276) (not e!53073))))

(declare-fun lt!37934 () ListLongMap!1471)

(assert (=> d!20031 (= res!42276 (contains!750 lt!37934 (_1!1111 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16)))))))

(declare-fun lt!37931 () List!1538)

(assert (=> d!20031 (= lt!37934 (ListLongMap!1472 lt!37931))))

(declare-fun lt!37932 () Unit!2350)

(declare-fun lt!37933 () Unit!2350)

(assert (=> d!20031 (= lt!37932 lt!37933)))

(assert (=> d!20031 (= (getValueByKey!137 lt!37931 (_1!1111 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20031 (= lt!37933 (lemmaContainsTupThenGetReturnValue!56 lt!37931 (_1!1111 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20031 (= lt!37931 (insertStrictlySorted!58 (toList!751 lt!37661) (_1!1111 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20031 (= (+!111 lt!37661 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16))) lt!37934)))

(declare-fun b!81320 () Bool)

(declare-fun res!42277 () Bool)

(assert (=> b!81320 (=> (not res!42277) (not e!53073))))

(assert (=> b!81320 (= res!42277 (= (getValueByKey!137 (toList!751 lt!37934) (_1!1111 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16))))))))

(declare-fun b!81321 () Bool)

(assert (=> b!81321 (= e!53073 (contains!753 (toList!751 lt!37934) (tuple2!2203 lt!37657 (zeroValue!2189 newMap!16))))))

(assert (= (and d!20031 res!42276) b!81320))

(assert (= (and b!81320 res!42277) b!81321))

(declare-fun m!83189 () Bool)

(assert (=> d!20031 m!83189))

(declare-fun m!83191 () Bool)

(assert (=> d!20031 m!83191))

(declare-fun m!83193 () Bool)

(assert (=> d!20031 m!83193))

(declare-fun m!83195 () Bool)

(assert (=> d!20031 m!83195))

(declare-fun m!83197 () Bool)

(assert (=> b!81320 m!83197))

(declare-fun m!83199 () Bool)

(assert (=> b!81321 m!83199))

(assert (=> b!80923 d!20031))

(assert (=> b!80923 d!19951))

(declare-fun d!20033 () Bool)

(declare-fun e!53074 () Bool)

(assert (=> d!20033 e!53074))

(declare-fun res!42278 () Bool)

(assert (=> d!20033 (=> (not res!42278) (not e!53074))))

(declare-fun lt!37938 () ListLongMap!1471)

(assert (=> d!20033 (= res!42278 (contains!750 lt!37938 (_1!1111 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16)))))))

(declare-fun lt!37935 () List!1538)

(assert (=> d!20033 (= lt!37938 (ListLongMap!1472 lt!37935))))

(declare-fun lt!37936 () Unit!2350)

(declare-fun lt!37937 () Unit!2350)

(assert (=> d!20033 (= lt!37936 lt!37937)))

(assert (=> d!20033 (= (getValueByKey!137 lt!37935 (_1!1111 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20033 (= lt!37937 (lemmaContainsTupThenGetReturnValue!56 lt!37935 (_1!1111 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20033 (= lt!37935 (insertStrictlySorted!58 (toList!751 lt!37663) (_1!1111 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20033 (= (+!111 lt!37663 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16))) lt!37938)))

(declare-fun b!81322 () Bool)

(declare-fun res!42279 () Bool)

(assert (=> b!81322 (=> (not res!42279) (not e!53074))))

(assert (=> b!81322 (= res!42279 (= (getValueByKey!137 (toList!751 lt!37938) (_1!1111 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16))))))))

(declare-fun b!81323 () Bool)

(assert (=> b!81323 (= e!53074 (contains!753 (toList!751 lt!37938) (tuple2!2203 lt!37651 (zeroValue!2189 newMap!16))))))

(assert (= (and d!20033 res!42278) b!81322))

(assert (= (and b!81322 res!42279) b!81323))

(declare-fun m!83201 () Bool)

(assert (=> d!20033 m!83201))

(declare-fun m!83203 () Bool)

(assert (=> d!20033 m!83203))

(declare-fun m!83205 () Bool)

(assert (=> d!20033 m!83205))

(declare-fun m!83207 () Bool)

(assert (=> d!20033 m!83207))

(declare-fun m!83209 () Bool)

(assert (=> b!81322 m!83209))

(declare-fun m!83211 () Bool)

(assert (=> b!81323 m!83211))

(assert (=> b!80923 d!20033))

(declare-fun d!20035 () Bool)

(declare-fun lt!37939 () Bool)

(assert (=> d!20035 (= lt!37939 (select (content!84 lt!37536) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun e!53076 () Bool)

(assert (=> d!20035 (= lt!37939 e!53076)))

(declare-fun res!42281 () Bool)

(assert (=> d!20035 (=> (not res!42281) (not e!53076))))

(assert (=> d!20035 (= res!42281 ((_ is Cons!1534) lt!37536))))

(assert (=> d!20035 (= (contains!753 lt!37536 (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))) lt!37939)))

(declare-fun b!81324 () Bool)

(declare-fun e!53075 () Bool)

(assert (=> b!81324 (= e!53076 e!53075)))

(declare-fun res!42280 () Bool)

(assert (=> b!81324 (=> res!42280 e!53075)))

(assert (=> b!81324 (= res!42280 (= (h!2123 lt!37536) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun b!81325 () Bool)

(assert (=> b!81325 (= e!53075 (contains!753 (t!5209 lt!37536) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(assert (= (and d!20035 res!42281) b!81324))

(assert (= (and b!81324 (not res!42280)) b!81325))

(declare-fun m!83213 () Bool)

(assert (=> d!20035 m!83213))

(declare-fun m!83215 () Bool)

(assert (=> d!20035 m!83215))

(declare-fun m!83217 () Bool)

(assert (=> b!81325 m!83217))

(assert (=> b!80755 d!20035))

(declare-fun d!20037 () Bool)

(assert (=> d!20037 (= (validMask!0 (mask!6299 newMap!16)) (and (or (= (mask!6299 newMap!16) #b00000000000000000000000000000111) (= (mask!6299 newMap!16) #b00000000000000000000000000001111) (= (mask!6299 newMap!16) #b00000000000000000000000000011111) (= (mask!6299 newMap!16) #b00000000000000000000000000111111) (= (mask!6299 newMap!16) #b00000000000000000000000001111111) (= (mask!6299 newMap!16) #b00000000000000000000000011111111) (= (mask!6299 newMap!16) #b00000000000000000000000111111111) (= (mask!6299 newMap!16) #b00000000000000000000001111111111) (= (mask!6299 newMap!16) #b00000000000000000000011111111111) (= (mask!6299 newMap!16) #b00000000000000000000111111111111) (= (mask!6299 newMap!16) #b00000000000000000001111111111111) (= (mask!6299 newMap!16) #b00000000000000000011111111111111) (= (mask!6299 newMap!16) #b00000000000000000111111111111111) (= (mask!6299 newMap!16) #b00000000000000001111111111111111) (= (mask!6299 newMap!16) #b00000000000000011111111111111111) (= (mask!6299 newMap!16) #b00000000000000111111111111111111) (= (mask!6299 newMap!16) #b00000000000001111111111111111111) (= (mask!6299 newMap!16) #b00000000000011111111111111111111) (= (mask!6299 newMap!16) #b00000000000111111111111111111111) (= (mask!6299 newMap!16) #b00000000001111111111111111111111) (= (mask!6299 newMap!16) #b00000000011111111111111111111111) (= (mask!6299 newMap!16) #b00000000111111111111111111111111) (= (mask!6299 newMap!16) #b00000001111111111111111111111111) (= (mask!6299 newMap!16) #b00000011111111111111111111111111) (= (mask!6299 newMap!16) #b00000111111111111111111111111111) (= (mask!6299 newMap!16) #b00001111111111111111111111111111) (= (mask!6299 newMap!16) #b00011111111111111111111111111111) (= (mask!6299 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6299 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!19801 d!20037))

(declare-fun d!20039 () Bool)

(declare-fun res!42282 () Bool)

(declare-fun e!53077 () Bool)

(assert (=> d!20039 (=> res!42282 e!53077)))

(assert (=> d!20039 (= res!42282 (and ((_ is Cons!1534) (toList!751 lt!37385)) (= (_1!1111 (h!2123 (toList!751 lt!37385))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20039 (= (containsKey!141 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000) e!53077)))

(declare-fun b!81326 () Bool)

(declare-fun e!53078 () Bool)

(assert (=> b!81326 (= e!53077 e!53078)))

(declare-fun res!42283 () Bool)

(assert (=> b!81326 (=> (not res!42283) (not e!53078))))

(assert (=> b!81326 (= res!42283 (and (or (not ((_ is Cons!1534) (toList!751 lt!37385))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37385))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1534) (toList!751 lt!37385)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37385))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81327 () Bool)

(assert (=> b!81327 (= e!53078 (containsKey!141 (t!5209 (toList!751 lt!37385)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20039 (not res!42282)) b!81326))

(assert (= (and b!81326 res!42283) b!81327))

(declare-fun m!83219 () Bool)

(assert (=> b!81327 m!83219))

(assert (=> d!19797 d!20039))

(declare-fun d!20041 () Bool)

(assert (=> d!20041 (= ($colon$colon!69 e!52731 (ite c!12660 (h!2123 (toList!751 lt!37187)) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197)))) (Cons!1534 (ite c!12660 (h!2123 (toList!751 lt!37187)) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))) e!52731))))

(assert (=> bm!7511 d!20041))

(declare-fun b!81329 () Bool)

(declare-fun e!53079 () Option!143)

(declare-fun e!53080 () Option!143)

(assert (=> b!81329 (= e!53079 e!53080)))

(declare-fun c!12813 () Bool)

(assert (=> b!81329 (= c!12813 (and ((_ is Cons!1534) (t!5209 lt!37275)) (not (= (_1!1111 (h!2123 (t!5209 lt!37275))) (_1!1111 lt!37197)))))))

(declare-fun d!20043 () Bool)

(declare-fun c!12812 () Bool)

(assert (=> d!20043 (= c!12812 (and ((_ is Cons!1534) (t!5209 lt!37275)) (= (_1!1111 (h!2123 (t!5209 lt!37275))) (_1!1111 lt!37197))))))

(assert (=> d!20043 (= (getValueByKey!137 (t!5209 lt!37275) (_1!1111 lt!37197)) e!53079)))

(declare-fun b!81331 () Bool)

(assert (=> b!81331 (= e!53080 None!141)))

(declare-fun b!81330 () Bool)

(assert (=> b!81330 (= e!53080 (getValueByKey!137 (t!5209 (t!5209 lt!37275)) (_1!1111 lt!37197)))))

(declare-fun b!81328 () Bool)

(assert (=> b!81328 (= e!53079 (Some!142 (_2!1111 (h!2123 (t!5209 lt!37275)))))))

(assert (= (and d!20043 c!12812) b!81328))

(assert (= (and d!20043 (not c!12812)) b!81329))

(assert (= (and b!81329 c!12813) b!81330))

(assert (= (and b!81329 (not c!12813)) b!81331))

(declare-fun m!83221 () Bool)

(assert (=> b!81330 m!83221))

(assert (=> b!80732 d!20043))

(declare-fun d!20045 () Bool)

(declare-fun e!53081 () Bool)

(assert (=> d!20045 e!53081))

(declare-fun res!42284 () Bool)

(assert (=> d!20045 (=> res!42284 e!53081)))

(declare-fun lt!37942 () Bool)

(assert (=> d!20045 (= res!42284 (not lt!37942))))

(declare-fun lt!37941 () Bool)

(assert (=> d!20045 (= lt!37942 lt!37941)))

(declare-fun lt!37940 () Unit!2350)

(declare-fun e!53082 () Unit!2350)

(assert (=> d!20045 (= lt!37940 e!53082)))

(declare-fun c!12814 () Bool)

(assert (=> d!20045 (= c!12814 lt!37941)))

(assert (=> d!20045 (= lt!37941 (containsKey!141 (toList!751 lt!37712) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20045 (= (contains!750 lt!37712 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!37942)))

(declare-fun b!81332 () Bool)

(declare-fun lt!37943 () Unit!2350)

(assert (=> b!81332 (= e!53082 lt!37943)))

(assert (=> b!81332 (= lt!37943 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37712) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> b!81332 (isDefined!91 (getValueByKey!137 (toList!751 lt!37712) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81333 () Bool)

(declare-fun Unit!2388 () Unit!2350)

(assert (=> b!81333 (= e!53082 Unit!2388)))

(declare-fun b!81334 () Bool)

(assert (=> b!81334 (= e!53081 (isDefined!91 (getValueByKey!137 (toList!751 lt!37712) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20045 c!12814) b!81332))

(assert (= (and d!20045 (not c!12814)) b!81333))

(assert (= (and d!20045 (not res!42284)) b!81334))

(declare-fun m!83223 () Bool)

(assert (=> d!20045 m!83223))

(declare-fun m!83225 () Bool)

(assert (=> b!81332 m!83225))

(assert (=> b!81332 m!82613))

(assert (=> b!81332 m!82613))

(declare-fun m!83227 () Bool)

(assert (=> b!81332 m!83227))

(assert (=> b!81334 m!82613))

(assert (=> b!81334 m!82613))

(assert (=> b!81334 m!83227))

(assert (=> d!19839 d!20045))

(declare-fun b!81336 () Bool)

(declare-fun e!53083 () Option!143)

(declare-fun e!53084 () Option!143)

(assert (=> b!81336 (= e!53083 e!53084)))

(declare-fun c!12816 () Bool)

(assert (=> b!81336 (= c!12816 (and ((_ is Cons!1534) lt!37709) (not (= (_1!1111 (h!2123 lt!37709)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun d!20047 () Bool)

(declare-fun c!12815 () Bool)

(assert (=> d!20047 (= c!12815 (and ((_ is Cons!1534) lt!37709) (= (_1!1111 (h!2123 lt!37709)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20047 (= (getValueByKey!137 lt!37709 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) e!53083)))

(declare-fun b!81338 () Bool)

(assert (=> b!81338 (= e!53084 None!141)))

(declare-fun b!81337 () Bool)

(assert (=> b!81337 (= e!53084 (getValueByKey!137 (t!5209 lt!37709) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81335 () Bool)

(assert (=> b!81335 (= e!53083 (Some!142 (_2!1111 (h!2123 lt!37709))))))

(assert (= (and d!20047 c!12815) b!81335))

(assert (= (and d!20047 (not c!12815)) b!81336))

(assert (= (and b!81336 c!12816) b!81337))

(assert (= (and b!81336 (not c!12816)) b!81338))

(declare-fun m!83229 () Bool)

(assert (=> b!81337 m!83229))

(assert (=> d!19839 d!20047))

(declare-fun d!20049 () Bool)

(assert (=> d!20049 (= (getValueByKey!137 lt!37709 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!37944 () Unit!2350)

(assert (=> d!20049 (= lt!37944 (choose!478 lt!37709 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun e!53085 () Bool)

(assert (=> d!20049 e!53085))

(declare-fun res!42285 () Bool)

(assert (=> d!20049 (=> (not res!42285) (not e!53085))))

(assert (=> d!20049 (= res!42285 (isStrictlySorted!291 lt!37709))))

(assert (=> d!20049 (= (lemmaContainsTupThenGetReturnValue!56 lt!37709 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!37944)))

(declare-fun b!81339 () Bool)

(declare-fun res!42286 () Bool)

(assert (=> b!81339 (=> (not res!42286) (not e!53085))))

(assert (=> b!81339 (= res!42286 (containsKey!141 lt!37709 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81340 () Bool)

(assert (=> b!81340 (= e!53085 (contains!753 lt!37709 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20049 res!42285) b!81339))

(assert (= (and b!81339 res!42286) b!81340))

(assert (=> d!20049 m!82607))

(declare-fun m!83231 () Bool)

(assert (=> d!20049 m!83231))

(declare-fun m!83233 () Bool)

(assert (=> d!20049 m!83233))

(declare-fun m!83235 () Bool)

(assert (=> b!81339 m!83235))

(declare-fun m!83237 () Bool)

(assert (=> b!81340 m!83237))

(assert (=> d!19839 d!20049))

(declare-fun d!20051 () Bool)

(declare-fun e!53087 () Bool)

(assert (=> d!20051 e!53087))

(declare-fun res!42287 () Bool)

(assert (=> d!20051 (=> (not res!42287) (not e!53087))))

(declare-fun lt!37945 () List!1538)

(assert (=> d!20051 (= res!42287 (isStrictlySorted!291 lt!37945))))

(declare-fun e!53086 () List!1538)

(assert (=> d!20051 (= lt!37945 e!53086)))

(declare-fun c!12820 () Bool)

(assert (=> d!20051 (= c!12820 (and ((_ is Cons!1534) (toList!751 lt!37190)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20051 (isStrictlySorted!291 (toList!751 lt!37190))))

(assert (=> d!20051 (= (insertStrictlySorted!58 (toList!751 lt!37190) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!37945)))

(declare-fun b!81341 () Bool)

(assert (=> b!81341 (= e!53087 (contains!753 lt!37945 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun bm!7576 () Bool)

(declare-fun call!7579 () List!1538)

(declare-fun call!7580 () List!1538)

(assert (=> bm!7576 (= call!7579 call!7580)))

(declare-fun b!81342 () Bool)

(declare-fun res!42288 () Bool)

(assert (=> b!81342 (=> (not res!42288) (not e!53087))))

(assert (=> b!81342 (= res!42288 (containsKey!141 lt!37945 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun e!53089 () List!1538)

(declare-fun b!81343 () Bool)

(assert (=> b!81343 (= e!53089 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37190)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81344 () Bool)

(assert (=> b!81344 (= e!53086 call!7580)))

(declare-fun bm!7577 () Bool)

(assert (=> bm!7577 (= call!7580 ($colon$colon!69 e!53089 (ite c!12820 (h!2123 (toList!751 lt!37190)) (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!12818 () Bool)

(assert (=> bm!7577 (= c!12818 c!12820)))

(declare-fun c!12817 () Bool)

(declare-fun b!81345 () Bool)

(declare-fun c!12819 () Bool)

(assert (=> b!81345 (= e!53089 (ite c!12817 (t!5209 (toList!751 lt!37190)) (ite c!12819 (Cons!1534 (h!2123 (toList!751 lt!37190)) (t!5209 (toList!751 lt!37190))) Nil!1535)))))

(declare-fun b!81346 () Bool)

(declare-fun e!53090 () List!1538)

(assert (=> b!81346 (= e!53090 call!7579)))

(declare-fun b!81347 () Bool)

(declare-fun e!53088 () List!1538)

(declare-fun call!7581 () List!1538)

(assert (=> b!81347 (= e!53088 call!7581)))

(declare-fun b!81348 () Bool)

(assert (=> b!81348 (= c!12819 (and ((_ is Cons!1534) (toList!751 lt!37190)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> b!81348 (= e!53090 e!53088)))

(declare-fun b!81349 () Bool)

(assert (=> b!81349 (= e!53088 call!7581)))

(declare-fun bm!7578 () Bool)

(assert (=> bm!7578 (= call!7581 call!7579)))

(declare-fun b!81350 () Bool)

(assert (=> b!81350 (= e!53086 e!53090)))

(assert (=> b!81350 (= c!12817 (and ((_ is Cons!1534) (toList!751 lt!37190)) (= (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20051 c!12820) b!81344))

(assert (= (and d!20051 (not c!12820)) b!81350))

(assert (= (and b!81350 c!12817) b!81346))

(assert (= (and b!81350 (not c!12817)) b!81348))

(assert (= (and b!81348 c!12819) b!81347))

(assert (= (and b!81348 (not c!12819)) b!81349))

(assert (= (or b!81347 b!81349) bm!7578))

(assert (= (or b!81346 bm!7578) bm!7576))

(assert (= (or b!81344 bm!7576) bm!7577))

(assert (= (and bm!7577 c!12818) b!81343))

(assert (= (and bm!7577 (not c!12818)) b!81345))

(assert (= (and d!20051 res!42287) b!81342))

(assert (= (and b!81342 res!42288) b!81341))

(declare-fun m!83239 () Bool)

(assert (=> b!81342 m!83239))

(declare-fun m!83241 () Bool)

(assert (=> bm!7577 m!83241))

(declare-fun m!83243 () Bool)

(assert (=> d!20051 m!83243))

(assert (=> d!20051 m!82663))

(declare-fun m!83245 () Bool)

(assert (=> b!81343 m!83245))

(declare-fun m!83247 () Bool)

(assert (=> b!81341 m!83247))

(assert (=> d!19839 d!20051))

(declare-fun d!20053 () Bool)

(declare-fun res!42289 () Bool)

(declare-fun e!53091 () Bool)

(assert (=> d!20053 (=> res!42289 e!53091)))

(assert (=> d!20053 (= res!42289 (and ((_ is Cons!1534) (toList!751 lt!37385)) (= (_1!1111 (h!2123 (toList!751 lt!37385))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20053 (= (containsKey!141 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53091)))

(declare-fun b!81351 () Bool)

(declare-fun e!53092 () Bool)

(assert (=> b!81351 (= e!53091 e!53092)))

(declare-fun res!42290 () Bool)

(assert (=> b!81351 (=> (not res!42290) (not e!53092))))

(assert (=> b!81351 (= res!42290 (and (or (not ((_ is Cons!1534) (toList!751 lt!37385))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37385))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1534) (toList!751 lt!37385)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37385))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!81352 () Bool)

(assert (=> b!81352 (= e!53092 (containsKey!141 (t!5209 (toList!751 lt!37385)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20053 (not res!42289)) b!81351))

(assert (= (and b!81351 res!42290) b!81352))

(assert (=> b!81352 m!81727))

(declare-fun m!83249 () Bool)

(assert (=> b!81352 m!83249))

(assert (=> d!19923 d!20053))

(assert (=> d!19705 d!19703))

(declare-fun d!20055 () Bool)

(assert (=> d!20055 (= (getValueByKey!137 lt!37291 (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202)))))

(assert (=> d!20055 true))

(declare-fun _$22!401 () Unit!2350)

(assert (=> d!20055 (= (choose!478 lt!37291 (_1!1111 lt!37202) (_2!1111 lt!37202)) _$22!401)))

(declare-fun bs!3432 () Bool)

(assert (= bs!3432 d!20055))

(assert (=> bs!3432 m!81797))

(assert (=> d!19705 d!20055))

(declare-fun d!20057 () Bool)

(declare-fun res!42291 () Bool)

(declare-fun e!53093 () Bool)

(assert (=> d!20057 (=> res!42291 e!53093)))

(assert (=> d!20057 (= res!42291 (or ((_ is Nil!1535) lt!37291) ((_ is Nil!1535) (t!5209 lt!37291))))))

(assert (=> d!20057 (= (isStrictlySorted!291 lt!37291) e!53093)))

(declare-fun b!81353 () Bool)

(declare-fun e!53094 () Bool)

(assert (=> b!81353 (= e!53093 e!53094)))

(declare-fun res!42292 () Bool)

(assert (=> b!81353 (=> (not res!42292) (not e!53094))))

(assert (=> b!81353 (= res!42292 (bvslt (_1!1111 (h!2123 lt!37291)) (_1!1111 (h!2123 (t!5209 lt!37291)))))))

(declare-fun b!81354 () Bool)

(assert (=> b!81354 (= e!53094 (isStrictlySorted!291 (t!5209 lt!37291)))))

(assert (= (and d!20057 (not res!42291)) b!81353))

(assert (= (and b!81353 res!42292) b!81354))

(declare-fun m!83251 () Bool)

(assert (=> b!81354 m!83251))

(assert (=> d!19705 d!20057))

(declare-fun d!20059 () Bool)

(declare-fun res!42293 () Bool)

(declare-fun e!53095 () Bool)

(assert (=> d!20059 (=> res!42293 e!53095)))

(assert (=> d!20059 (= res!42293 (and ((_ is Cons!1534) lt!37496) (= (_1!1111 (h!2123 lt!37496)) (_1!1111 lt!37188))))))

(assert (=> d!20059 (= (containsKey!141 lt!37496 (_1!1111 lt!37188)) e!53095)))

(declare-fun b!81355 () Bool)

(declare-fun e!53096 () Bool)

(assert (=> b!81355 (= e!53095 e!53096)))

(declare-fun res!42294 () Bool)

(assert (=> b!81355 (=> (not res!42294) (not e!53096))))

(assert (=> b!81355 (= res!42294 (and (or (not ((_ is Cons!1534) lt!37496)) (bvsle (_1!1111 (h!2123 lt!37496)) (_1!1111 lt!37188))) ((_ is Cons!1534) lt!37496) (bvslt (_1!1111 (h!2123 lt!37496)) (_1!1111 lt!37188))))))

(declare-fun b!81356 () Bool)

(assert (=> b!81356 (= e!53096 (containsKey!141 (t!5209 lt!37496) (_1!1111 lt!37188)))))

(assert (= (and d!20059 (not res!42293)) b!81355))

(assert (= (and b!81355 res!42294) b!81356))

(declare-fun m!83253 () Bool)

(assert (=> b!81356 m!83253))

(assert (=> b!80678 d!20059))

(assert (=> b!80894 d!19937))

(declare-fun b!81358 () Bool)

(declare-fun e!53097 () Option!143)

(declare-fun e!53098 () Option!143)

(assert (=> b!81358 (= e!53097 e!53098)))

(declare-fun c!12822 () Bool)

(assert (=> b!81358 (= c!12822 (and ((_ is Cons!1534) (toList!751 lt!37623)) (not (= (_1!1111 (h!2123 (toList!751 lt!37623))) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))))

(declare-fun c!12821 () Bool)

(declare-fun d!20061 () Bool)

(assert (=> d!20061 (= c!12821 (and ((_ is Cons!1534) (toList!751 lt!37623)) (= (_1!1111 (h!2123 (toList!751 lt!37623))) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(assert (=> d!20061 (= (getValueByKey!137 (toList!751 lt!37623) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) e!53097)))

(declare-fun b!81360 () Bool)

(assert (=> b!81360 (= e!53098 None!141)))

(declare-fun b!81359 () Bool)

(assert (=> b!81359 (= e!53098 (getValueByKey!137 (t!5209 (toList!751 lt!37623)) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!81357 () Bool)

(assert (=> b!81357 (= e!53097 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37623)))))))

(assert (= (and d!20061 c!12821) b!81357))

(assert (= (and d!20061 (not c!12821)) b!81358))

(assert (= (and b!81358 c!12822) b!81359))

(assert (= (and b!81358 (not c!12822)) b!81360))

(declare-fun m!83255 () Bool)

(assert (=> b!81359 m!83255))

(assert (=> b!80883 d!20061))

(declare-fun d!20063 () Bool)

(declare-fun e!53099 () Bool)

(assert (=> d!20063 e!53099))

(declare-fun res!42295 () Bool)

(assert (=> d!20063 (=> res!42295 e!53099)))

(declare-fun lt!37948 () Bool)

(assert (=> d!20063 (= res!42295 (not lt!37948))))

(declare-fun lt!37947 () Bool)

(assert (=> d!20063 (= lt!37948 lt!37947)))

(declare-fun lt!37946 () Unit!2350)

(declare-fun e!53100 () Unit!2350)

(assert (=> d!20063 (= lt!37946 e!53100)))

(declare-fun c!12823 () Bool)

(assert (=> d!20063 (= c!12823 lt!37947)))

(assert (=> d!20063 (= lt!37947 (containsKey!141 (toList!751 lt!37564) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!20063 (= (contains!750 lt!37564 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37948)))

(declare-fun b!81361 () Bool)

(declare-fun lt!37949 () Unit!2350)

(assert (=> b!81361 (= e!53100 lt!37949)))

(assert (=> b!81361 (= lt!37949 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37564) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> b!81361 (isDefined!91 (getValueByKey!137 (toList!751 lt!37564) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81362 () Bool)

(declare-fun Unit!2389 () Unit!2350)

(assert (=> b!81362 (= e!53100 Unit!2389)))

(declare-fun b!81363 () Bool)

(assert (=> b!81363 (= e!53099 (isDefined!91 (getValueByKey!137 (toList!751 lt!37564) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20063 c!12823) b!81361))

(assert (= (and d!20063 (not c!12823)) b!81362))

(assert (= (and d!20063 (not res!42295)) b!81363))

(declare-fun m!83257 () Bool)

(assert (=> d!20063 m!83257))

(declare-fun m!83259 () Bool)

(assert (=> b!81361 m!83259))

(assert (=> b!81361 m!82251))

(assert (=> b!81361 m!82251))

(declare-fun m!83261 () Bool)

(assert (=> b!81361 m!83261))

(assert (=> b!81363 m!82251))

(assert (=> b!81363 m!82251))

(assert (=> b!81363 m!83261))

(assert (=> d!19755 d!20063))

(declare-fun b!81365 () Bool)

(declare-fun e!53101 () Option!143)

(declare-fun e!53102 () Option!143)

(assert (=> b!81365 (= e!53101 e!53102)))

(declare-fun c!12825 () Bool)

(assert (=> b!81365 (= c!12825 (and ((_ is Cons!1534) lt!37561) (not (= (_1!1111 (h!2123 lt!37561)) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!12824 () Bool)

(declare-fun d!20065 () Bool)

(assert (=> d!20065 (= c!12824 (and ((_ is Cons!1534) lt!37561) (= (_1!1111 (h!2123 lt!37561)) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20065 (= (getValueByKey!137 lt!37561 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53101)))

(declare-fun b!81367 () Bool)

(assert (=> b!81367 (= e!53102 None!141)))

(declare-fun b!81366 () Bool)

(assert (=> b!81366 (= e!53102 (getValueByKey!137 (t!5209 lt!37561) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81364 () Bool)

(assert (=> b!81364 (= e!53101 (Some!142 (_2!1111 (h!2123 lt!37561))))))

(assert (= (and d!20065 c!12824) b!81364))

(assert (= (and d!20065 (not c!12824)) b!81365))

(assert (= (and b!81365 c!12825) b!81366))

(assert (= (and b!81365 (not c!12825)) b!81367))

(declare-fun m!83263 () Bool)

(assert (=> b!81366 m!83263))

(assert (=> d!19755 d!20065))

(declare-fun d!20067 () Bool)

(assert (=> d!20067 (= (getValueByKey!137 lt!37561 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!37950 () Unit!2350)

(assert (=> d!20067 (= lt!37950 (choose!478 lt!37561 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53103 () Bool)

(assert (=> d!20067 e!53103))

(declare-fun res!42296 () Bool)

(assert (=> d!20067 (=> (not res!42296) (not e!53103))))

(assert (=> d!20067 (= res!42296 (isStrictlySorted!291 lt!37561))))

(assert (=> d!20067 (= (lemmaContainsTupThenGetReturnValue!56 lt!37561 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37950)))

(declare-fun b!81368 () Bool)

(declare-fun res!42297 () Bool)

(assert (=> b!81368 (=> (not res!42297) (not e!53103))))

(assert (=> b!81368 (= res!42297 (containsKey!141 lt!37561 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81369 () Bool)

(assert (=> b!81369 (= e!53103 (contains!753 lt!37561 (tuple2!2203 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20067 res!42296) b!81368))

(assert (= (and b!81368 res!42297) b!81369))

(assert (=> d!20067 m!82245))

(declare-fun m!83265 () Bool)

(assert (=> d!20067 m!83265))

(declare-fun m!83267 () Bool)

(assert (=> d!20067 m!83267))

(declare-fun m!83269 () Bool)

(assert (=> b!81368 m!83269))

(declare-fun m!83271 () Bool)

(assert (=> b!81369 m!83271))

(assert (=> d!19755 d!20067))

(declare-fun d!20069 () Bool)

(declare-fun e!53105 () Bool)

(assert (=> d!20069 e!53105))

(declare-fun res!42298 () Bool)

(assert (=> d!20069 (=> (not res!42298) (not e!53105))))

(declare-fun lt!37951 () List!1538)

(assert (=> d!20069 (= res!42298 (isStrictlySorted!291 lt!37951))))

(declare-fun e!53104 () List!1538)

(assert (=> d!20069 (= lt!37951 e!53104)))

(declare-fun c!12829 () Bool)

(assert (=> d!20069 (= c!12829 (and ((_ is Cons!1534) (toList!751 lt!37384)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37384))) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20069 (isStrictlySorted!291 (toList!751 lt!37384))))

(assert (=> d!20069 (= (insertStrictlySorted!58 (toList!751 lt!37384) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37951)))

(declare-fun b!81370 () Bool)

(assert (=> b!81370 (= e!53105 (contains!753 lt!37951 (tuple2!2203 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun bm!7579 () Bool)

(declare-fun call!7582 () List!1538)

(declare-fun call!7583 () List!1538)

(assert (=> bm!7579 (= call!7582 call!7583)))

(declare-fun b!81371 () Bool)

(declare-fun res!42299 () Bool)

(assert (=> b!81371 (=> (not res!42299) (not e!53105))))

(assert (=> b!81371 (= res!42299 (containsKey!141 lt!37951 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81372 () Bool)

(declare-fun e!53107 () List!1538)

(assert (=> b!81372 (= e!53107 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37384)) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81373 () Bool)

(assert (=> b!81373 (= e!53104 call!7583)))

(declare-fun bm!7580 () Bool)

(assert (=> bm!7580 (= call!7583 ($colon$colon!69 e!53107 (ite c!12829 (h!2123 (toList!751 lt!37384)) (tuple2!2203 (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!12827 () Bool)

(assert (=> bm!7580 (= c!12827 c!12829)))

(declare-fun c!12826 () Bool)

(declare-fun b!81374 () Bool)

(declare-fun c!12828 () Bool)

(assert (=> b!81374 (= e!53107 (ite c!12826 (t!5209 (toList!751 lt!37384)) (ite c!12828 (Cons!1534 (h!2123 (toList!751 lt!37384)) (t!5209 (toList!751 lt!37384))) Nil!1535)))))

(declare-fun b!81375 () Bool)

(declare-fun e!53108 () List!1538)

(assert (=> b!81375 (= e!53108 call!7582)))

(declare-fun b!81376 () Bool)

(declare-fun e!53106 () List!1538)

(declare-fun call!7584 () List!1538)

(assert (=> b!81376 (= e!53106 call!7584)))

(declare-fun b!81377 () Bool)

(assert (=> b!81377 (= c!12828 (and ((_ is Cons!1534) (toList!751 lt!37384)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37384))) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> b!81377 (= e!53108 e!53106)))

(declare-fun b!81378 () Bool)

(assert (=> b!81378 (= e!53106 call!7584)))

(declare-fun bm!7581 () Bool)

(assert (=> bm!7581 (= call!7584 call!7582)))

(declare-fun b!81379 () Bool)

(assert (=> b!81379 (= e!53104 e!53108)))

(assert (=> b!81379 (= c!12826 (and ((_ is Cons!1534) (toList!751 lt!37384)) (= (_1!1111 (h!2123 (toList!751 lt!37384))) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20069 c!12829) b!81373))

(assert (= (and d!20069 (not c!12829)) b!81379))

(assert (= (and b!81379 c!12826) b!81375))

(assert (= (and b!81379 (not c!12826)) b!81377))

(assert (= (and b!81377 c!12828) b!81376))

(assert (= (and b!81377 (not c!12828)) b!81378))

(assert (= (or b!81376 b!81378) bm!7581))

(assert (= (or b!81375 bm!7581) bm!7579))

(assert (= (or b!81373 bm!7579) bm!7580))

(assert (= (and bm!7580 c!12827) b!81372))

(assert (= (and bm!7580 (not c!12827)) b!81374))

(assert (= (and d!20069 res!42298) b!81371))

(assert (= (and b!81371 res!42299) b!81370))

(declare-fun m!83273 () Bool)

(assert (=> b!81371 m!83273))

(declare-fun m!83275 () Bool)

(assert (=> bm!7580 m!83275))

(declare-fun m!83277 () Bool)

(assert (=> d!20069 m!83277))

(declare-fun m!83279 () Bool)

(assert (=> d!20069 m!83279))

(declare-fun m!83281 () Bool)

(assert (=> b!81372 m!83281))

(declare-fun m!83283 () Bool)

(assert (=> b!81370 m!83283))

(assert (=> d!19755 d!20069))

(declare-fun d!20071 () Bool)

(declare-fun res!42300 () Bool)

(declare-fun e!53109 () Bool)

(assert (=> d!20071 (=> res!42300 e!53109)))

(assert (=> d!20071 (= res!42300 (and ((_ is Cons!1534) (toList!751 lt!37285)) (= (_1!1111 (h!2123 (toList!751 lt!37285))) (_1!1111 lt!37202))))))

(assert (=> d!20071 (= (containsKey!141 (toList!751 lt!37285) (_1!1111 lt!37202)) e!53109)))

(declare-fun b!81380 () Bool)

(declare-fun e!53110 () Bool)

(assert (=> b!81380 (= e!53109 e!53110)))

(declare-fun res!42301 () Bool)

(assert (=> b!81380 (=> (not res!42301) (not e!53110))))

(assert (=> b!81380 (= res!42301 (and (or (not ((_ is Cons!1534) (toList!751 lt!37285))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37285))) (_1!1111 lt!37202))) ((_ is Cons!1534) (toList!751 lt!37285)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37285))) (_1!1111 lt!37202))))))

(declare-fun b!81381 () Bool)

(assert (=> b!81381 (= e!53110 (containsKey!141 (t!5209 (toList!751 lt!37285)) (_1!1111 lt!37202)))))

(assert (= (and d!20071 (not res!42300)) b!81380))

(assert (= (and b!81380 res!42301) b!81381))

(declare-fun m!83285 () Bool)

(assert (=> b!81381 m!83285))

(assert (=> d!19845 d!20071))

(declare-fun b!81382 () Bool)

(declare-fun e!53114 () Bool)

(declare-fun call!7585 () Bool)

(assert (=> b!81382 (= e!53114 call!7585)))

(declare-fun b!81383 () Bool)

(declare-fun e!53113 () Bool)

(assert (=> b!81383 (= e!53113 (contains!752 Nil!1536 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000)))))

(declare-fun b!81384 () Bool)

(assert (=> b!81384 (= e!53114 call!7585)))

(declare-fun d!20073 () Bool)

(declare-fun res!42302 () Bool)

(declare-fun e!53111 () Bool)

(assert (=> d!20073 (=> res!42302 e!53111)))

(assert (=> d!20073 (= res!42302 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))))))

(assert (=> d!20073 (= (arrayNoDuplicates!0 (_keys!3957 (_2!1110 lt!37475)) #b00000000000000000000000000000000 Nil!1536) e!53111)))

(declare-fun b!81385 () Bool)

(declare-fun e!53112 () Bool)

(assert (=> b!81385 (= e!53111 e!53112)))

(declare-fun res!42303 () Bool)

(assert (=> b!81385 (=> (not res!42303) (not e!53112))))

(assert (=> b!81385 (= res!42303 (not e!53113))))

(declare-fun res!42304 () Bool)

(assert (=> b!81385 (=> (not res!42304) (not e!53113))))

(assert (=> b!81385 (= res!42304 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000)))))

(declare-fun b!81386 () Bool)

(assert (=> b!81386 (= e!53112 e!53114)))

(declare-fun c!12830 () Bool)

(assert (=> b!81386 (= c!12830 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000)))))

(declare-fun bm!7582 () Bool)

(assert (=> bm!7582 (= call!7585 (arrayNoDuplicates!0 (_keys!3957 (_2!1110 lt!37475)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12830 (Cons!1535 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000) Nil!1536) Nil!1536)))))

(assert (= (and d!20073 (not res!42302)) b!81385))

(assert (= (and b!81385 res!42304) b!81383))

(assert (= (and b!81385 res!42303) b!81386))

(assert (= (and b!81386 c!12830) b!81382))

(assert (= (and b!81386 (not c!12830)) b!81384))

(assert (= (or b!81382 b!81384) bm!7582))

(declare-fun m!83287 () Bool)

(assert (=> b!81383 m!83287))

(assert (=> b!81383 m!83287))

(declare-fun m!83289 () Bool)

(assert (=> b!81383 m!83289))

(assert (=> b!81385 m!83287))

(assert (=> b!81385 m!83287))

(declare-fun m!83291 () Bool)

(assert (=> b!81385 m!83291))

(assert (=> b!81386 m!83287))

(assert (=> b!81386 m!83287))

(assert (=> b!81386 m!83291))

(assert (=> bm!7582 m!83287))

(declare-fun m!83293 () Bool)

(assert (=> bm!7582 m!83293))

(assert (=> b!81156 d!20073))

(declare-fun b!81388 () Bool)

(declare-fun e!53115 () Option!143)

(declare-fun e!53116 () Option!143)

(assert (=> b!81388 (= e!53115 e!53116)))

(declare-fun c!12832 () Bool)

(assert (=> b!81388 (= c!12832 (and ((_ is Cons!1534) (toList!751 lt!37708)) (not (= (_1!1111 (h!2123 (toList!751 lt!37708))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20075 () Bool)

(declare-fun c!12831 () Bool)

(assert (=> d!20075 (= c!12831 (and ((_ is Cons!1534) (toList!751 lt!37708)) (= (_1!1111 (h!2123 (toList!751 lt!37708))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20075 (= (getValueByKey!137 (toList!751 lt!37708) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53115)))

(declare-fun b!81390 () Bool)

(assert (=> b!81390 (= e!53116 None!141)))

(declare-fun b!81389 () Bool)

(assert (=> b!81389 (= e!53116 (getValueByKey!137 (t!5209 (toList!751 lt!37708)) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81387 () Bool)

(assert (=> b!81387 (= e!53115 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37708)))))))

(assert (= (and d!20075 c!12831) b!81387))

(assert (= (and d!20075 (not c!12831)) b!81388))

(assert (= (and b!81388 c!12832) b!81389))

(assert (= (and b!81388 (not c!12832)) b!81390))

(declare-fun m!83295 () Bool)

(assert (=> b!81389 m!83295))

(assert (=> b!80961 d!20075))

(declare-fun d!20077 () Bool)

(assert (=> d!20077 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37278) (_1!1111 lt!37197))) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37278) (_1!1111 lt!37197)))))))

(declare-fun bs!3433 () Bool)

(assert (= bs!3433 d!20077))

(assert (=> bs!3433 m!81747))

(declare-fun m!83297 () Bool)

(assert (=> bs!3433 m!83297))

(assert (=> b!80729 d!20077))

(assert (=> b!80729 d!19887))

(declare-fun d!20079 () Bool)

(declare-fun res!42305 () Bool)

(declare-fun e!53117 () Bool)

(assert (=> d!20079 (=> res!42305 e!53117)))

(assert (=> d!20079 (= res!42305 (and ((_ is Cons!1534) (toList!751 call!7478)) (= (_1!1111 (h!2123 (toList!751 call!7478))) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470))))))))

(assert (=> d!20079 (= (containsKey!141 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))) e!53117)))

(declare-fun b!81391 () Bool)

(declare-fun e!53118 () Bool)

(assert (=> b!81391 (= e!53117 e!53118)))

(declare-fun res!42306 () Bool)

(assert (=> b!81391 (=> (not res!42306) (not e!53118))))

(assert (=> b!81391 (= res!42306 (and (or (not ((_ is Cons!1534) (toList!751 call!7478))) (bvsle (_1!1111 (h!2123 (toList!751 call!7478))) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470))))) ((_ is Cons!1534) (toList!751 call!7478)) (bvslt (_1!1111 (h!2123 (toList!751 call!7478))) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470))))))))

(declare-fun b!81392 () Bool)

(assert (=> b!81392 (= e!53118 (containsKey!141 (t!5209 (toList!751 call!7478)) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))

(assert (= (and d!20079 (not res!42305)) b!81391))

(assert (= (and b!81391 res!42306) b!81392))

(declare-fun m!83299 () Bool)

(assert (=> b!81392 m!83299))

(assert (=> d!19833 d!20079))

(declare-fun d!20081 () Bool)

(assert (=> d!20081 (= (apply!80 lt!37664 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (getValueByKey!137 (toList!751 lt!37664) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3434 () Bool)

(assert (= bs!3434 d!20081))

(assert (=> bs!3434 m!81991))

(declare-fun m!83301 () Bool)

(assert (=> bs!3434 m!83301))

(assert (=> bs!3434 m!83301))

(declare-fun m!83303 () Bool)

(assert (=> bs!3434 m!83303))

(assert (=> b!80931 d!20081))

(declare-fun d!20083 () Bool)

(declare-fun c!12833 () Bool)

(assert (=> d!20083 (= c!12833 ((_ is ValueCellFull!915) (select (arr!1901 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!53119 () V!3003)

(assert (=> d!20083 (= (get!1195 (select (arr!1901 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53119)))

(declare-fun b!81393 () Bool)

(assert (=> b!81393 (= e!53119 (get!1196 (select (arr!1901 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81394 () Bool)

(assert (=> b!81394 (= e!53119 (get!1197 (select (arr!1901 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20083 c!12833) b!81393))

(assert (= (and d!20083 (not c!12833)) b!81394))

(assert (=> b!81393 m!82477))

(assert (=> b!81393 m!82031))

(declare-fun m!83305 () Bool)

(assert (=> b!81393 m!83305))

(assert (=> b!81394 m!82477))

(assert (=> b!81394 m!82031))

(declare-fun m!83307 () Bool)

(assert (=> b!81394 m!83307))

(assert (=> b!80931 d!20083))

(declare-fun d!20085 () Bool)

(declare-fun res!42307 () Bool)

(declare-fun e!53120 () Bool)

(assert (=> d!20085 (=> res!42307 e!53120)))

(assert (=> d!20085 (= res!42307 (and ((_ is Cons!1534) (toList!751 lt!37385)) (= (_1!1111 (h!2123 (toList!751 lt!37385))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20085 (= (containsKey!141 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000) e!53120)))

(declare-fun b!81395 () Bool)

(declare-fun e!53121 () Bool)

(assert (=> b!81395 (= e!53120 e!53121)))

(declare-fun res!42308 () Bool)

(assert (=> b!81395 (=> (not res!42308) (not e!53121))))

(assert (=> b!81395 (= res!42308 (and (or (not ((_ is Cons!1534) (toList!751 lt!37385))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37385))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1534) (toList!751 lt!37385)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37385))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81396 () Bool)

(assert (=> b!81396 (= e!53121 (containsKey!141 (t!5209 (toList!751 lt!37385)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20085 (not res!42307)) b!81395))

(assert (= (and b!81395 res!42308) b!81396))

(declare-fun m!83309 () Bool)

(assert (=> b!81396 m!83309))

(assert (=> d!19779 d!20085))

(declare-fun d!20087 () Bool)

(declare-fun res!42309 () Bool)

(declare-fun e!53122 () Bool)

(assert (=> d!20087 (=> res!42309 e!53122)))

(assert (=> d!20087 (= res!42309 (and ((_ is Cons!1534) lt!37867) (= (_1!1111 (h!2123 lt!37867)) (_1!1111 lt!37202))))))

(assert (=> d!20087 (= (containsKey!141 lt!37867 (_1!1111 lt!37202)) e!53122)))

(declare-fun b!81397 () Bool)

(declare-fun e!53123 () Bool)

(assert (=> b!81397 (= e!53122 e!53123)))

(declare-fun res!42310 () Bool)

(assert (=> b!81397 (=> (not res!42310) (not e!53123))))

(assert (=> b!81397 (= res!42310 (and (or (not ((_ is Cons!1534) lt!37867)) (bvsle (_1!1111 (h!2123 lt!37867)) (_1!1111 lt!37202))) ((_ is Cons!1534) lt!37867) (bvslt (_1!1111 (h!2123 lt!37867)) (_1!1111 lt!37202))))))

(declare-fun b!81398 () Bool)

(assert (=> b!81398 (= e!53123 (containsKey!141 (t!5209 lt!37867) (_1!1111 lt!37202)))))

(assert (= (and d!20087 (not res!42309)) b!81397))

(assert (= (and b!81397 res!42310) b!81398))

(declare-fun m!83311 () Bool)

(assert (=> b!81398 m!83311))

(assert (=> b!81138 d!20087))

(assert (=> d!19721 d!19719))

(declare-fun d!20089 () Bool)

(assert (=> d!20089 (= (getValueByKey!137 lt!37295 (_1!1111 lt!37188)) (Some!142 (_2!1111 lt!37188)))))

(assert (=> d!20089 true))

(declare-fun _$22!402 () Unit!2350)

(assert (=> d!20089 (= (choose!478 lt!37295 (_1!1111 lt!37188) (_2!1111 lt!37188)) _$22!402)))

(declare-fun bs!3435 () Bool)

(assert (= bs!3435 d!20089))

(assert (=> bs!3435 m!81809))

(assert (=> d!19721 d!20089))

(declare-fun d!20091 () Bool)

(declare-fun res!42311 () Bool)

(declare-fun e!53124 () Bool)

(assert (=> d!20091 (=> res!42311 e!53124)))

(assert (=> d!20091 (= res!42311 (or ((_ is Nil!1535) lt!37295) ((_ is Nil!1535) (t!5209 lt!37295))))))

(assert (=> d!20091 (= (isStrictlySorted!291 lt!37295) e!53124)))

(declare-fun b!81399 () Bool)

(declare-fun e!53125 () Bool)

(assert (=> b!81399 (= e!53124 e!53125)))

(declare-fun res!42312 () Bool)

(assert (=> b!81399 (=> (not res!42312) (not e!53125))))

(assert (=> b!81399 (= res!42312 (bvslt (_1!1111 (h!2123 lt!37295)) (_1!1111 (h!2123 (t!5209 lt!37295)))))))

(declare-fun b!81400 () Bool)

(assert (=> b!81400 (= e!53125 (isStrictlySorted!291 (t!5209 lt!37295)))))

(assert (= (and d!20091 (not res!42311)) b!81399))

(assert (= (and b!81399 res!42312) b!81400))

(declare-fun m!83313 () Bool)

(assert (=> b!81400 m!83313))

(assert (=> d!19721 d!20091))

(declare-fun d!20093 () Bool)

(assert (=> d!20093 (= (apply!80 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37375) (apply!80 lt!37379 lt!37375))))

(assert (=> d!20093 true))

(declare-fun _$34!824 () Unit!2350)

(assert (=> d!20093 (= (choose!479 lt!37379 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37375) _$34!824)))

(declare-fun bs!3436 () Bool)

(assert (= bs!3436 d!20093))

(assert (=> bs!3436 m!81885))

(assert (=> bs!3436 m!81885))

(assert (=> bs!3436 m!81887))

(assert (=> bs!3436 m!81895))

(assert (=> d!19751 d!20093))

(assert (=> d!19751 d!19735))

(assert (=> d!19751 d!19757))

(declare-fun d!20095 () Bool)

(declare-fun e!53126 () Bool)

(assert (=> d!20095 e!53126))

(declare-fun res!42313 () Bool)

(assert (=> d!20095 (=> res!42313 e!53126)))

(declare-fun lt!37954 () Bool)

(assert (=> d!20095 (= res!42313 (not lt!37954))))

(declare-fun lt!37953 () Bool)

(assert (=> d!20095 (= lt!37954 lt!37953)))

(declare-fun lt!37952 () Unit!2350)

(declare-fun e!53127 () Unit!2350)

(assert (=> d!20095 (= lt!37952 e!53127)))

(declare-fun c!12834 () Bool)

(assert (=> d!20095 (= c!12834 lt!37953)))

(assert (=> d!20095 (= lt!37953 (containsKey!141 (toList!751 lt!37379) lt!37375))))

(assert (=> d!20095 (= (contains!750 lt!37379 lt!37375) lt!37954)))

(declare-fun b!81401 () Bool)

(declare-fun lt!37955 () Unit!2350)

(assert (=> b!81401 (= e!53127 lt!37955)))

(assert (=> b!81401 (= lt!37955 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37379) lt!37375))))

(assert (=> b!81401 (isDefined!91 (getValueByKey!137 (toList!751 lt!37379) lt!37375))))

(declare-fun b!81402 () Bool)

(declare-fun Unit!2390 () Unit!2350)

(assert (=> b!81402 (= e!53127 Unit!2390)))

(declare-fun b!81403 () Bool)

(assert (=> b!81403 (= e!53126 (isDefined!91 (getValueByKey!137 (toList!751 lt!37379) lt!37375)))))

(assert (= (and d!20095 c!12834) b!81401))

(assert (= (and d!20095 (not c!12834)) b!81402))

(assert (= (and d!20095 (not res!42313)) b!81403))

(declare-fun m!83315 () Bool)

(assert (=> d!20095 m!83315))

(declare-fun m!83317 () Bool)

(assert (=> b!81401 m!83317))

(assert (=> b!81401 m!82183))

(assert (=> b!81401 m!82183))

(declare-fun m!83319 () Bool)

(assert (=> b!81401 m!83319))

(assert (=> b!81403 m!82183))

(assert (=> b!81403 m!82183))

(assert (=> b!81403 m!83319))

(assert (=> d!19751 d!20095))

(assert (=> d!19751 d!19743))

(declare-fun d!20097 () Bool)

(declare-fun res!42314 () Bool)

(declare-fun e!53128 () Bool)

(assert (=> d!20097 (=> res!42314 e!53128)))

(assert (=> d!20097 (= res!42314 (and ((_ is Cons!1534) lt!37275) (= (_1!1111 (h!2123 lt!37275)) (_1!1111 lt!37197))))))

(assert (=> d!20097 (= (containsKey!141 lt!37275 (_1!1111 lt!37197)) e!53128)))

(declare-fun b!81404 () Bool)

(declare-fun e!53129 () Bool)

(assert (=> b!81404 (= e!53128 e!53129)))

(declare-fun res!42315 () Bool)

(assert (=> b!81404 (=> (not res!42315) (not e!53129))))

(assert (=> b!81404 (= res!42315 (and (or (not ((_ is Cons!1534) lt!37275)) (bvsle (_1!1111 (h!2123 lt!37275)) (_1!1111 lt!37197))) ((_ is Cons!1534) lt!37275) (bvslt (_1!1111 (h!2123 lt!37275)) (_1!1111 lt!37197))))))

(declare-fun b!81405 () Bool)

(assert (=> b!81405 (= e!53129 (containsKey!141 (t!5209 lt!37275) (_1!1111 lt!37197)))))

(assert (= (and d!20097 (not res!42314)) b!81404))

(assert (= (and b!81404 res!42315) b!81405))

(declare-fun m!83321 () Bool)

(assert (=> b!81405 m!83321))

(assert (=> b!80734 d!20097))

(declare-fun d!20099 () Bool)

(declare-fun res!42316 () Bool)

(declare-fun e!53130 () Bool)

(assert (=> d!20099 (=> res!42316 e!53130)))

(assert (=> d!20099 (= res!42316 (or ((_ is Nil!1535) lt!37755) ((_ is Nil!1535) (t!5209 lt!37755))))))

(assert (=> d!20099 (= (isStrictlySorted!291 lt!37755) e!53130)))

(declare-fun b!81406 () Bool)

(declare-fun e!53131 () Bool)

(assert (=> b!81406 (= e!53130 e!53131)))

(declare-fun res!42317 () Bool)

(assert (=> b!81406 (=> (not res!42317) (not e!53131))))

(assert (=> b!81406 (= res!42317 (bvslt (_1!1111 (h!2123 lt!37755)) (_1!1111 (h!2123 (t!5209 lt!37755)))))))

(declare-fun b!81407 () Bool)

(assert (=> b!81407 (= e!53131 (isStrictlySorted!291 (t!5209 lt!37755)))))

(assert (= (and d!20099 (not res!42316)) b!81406))

(assert (= (and b!81406 res!42317) b!81407))

(declare-fun m!83323 () Bool)

(assert (=> b!81407 m!83323))

(assert (=> d!19875 d!20099))

(declare-fun d!20101 () Bool)

(declare-fun res!42318 () Bool)

(declare-fun e!53132 () Bool)

(assert (=> d!20101 (=> res!42318 e!53132)))

(assert (=> d!20101 (= res!42318 (or ((_ is Nil!1535) (toList!751 lt!37190)) ((_ is Nil!1535) (t!5209 (toList!751 lt!37190)))))))

(assert (=> d!20101 (= (isStrictlySorted!291 (toList!751 lt!37190)) e!53132)))

(declare-fun b!81408 () Bool)

(declare-fun e!53133 () Bool)

(assert (=> b!81408 (= e!53132 e!53133)))

(declare-fun res!42319 () Bool)

(assert (=> b!81408 (=> (not res!42319) (not e!53133))))

(assert (=> b!81408 (= res!42319 (bvslt (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 (h!2123 (t!5209 (toList!751 lt!37190))))))))

(declare-fun b!81409 () Bool)

(assert (=> b!81409 (= e!53133 (isStrictlySorted!291 (t!5209 (toList!751 lt!37190))))))

(assert (= (and d!20101 (not res!42318)) b!81408))

(assert (= (and b!81408 res!42319) b!81409))

(assert (=> b!81409 m!83015))

(assert (=> d!19875 d!20101))

(declare-fun d!20103 () Bool)

(assert (=> d!20103 (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!37956 () Unit!2350)

(assert (=> d!20103 (= lt!37956 (choose!485 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!53134 () Bool)

(assert (=> d!20103 e!53134))

(declare-fun res!42320 () Bool)

(assert (=> d!20103 (=> (not res!42320) (not e!53134))))

(assert (=> d!20103 (= res!42320 (isStrictlySorted!291 (toList!751 lt!37326)))))

(assert (=> d!20103 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!37956)))

(declare-fun b!81410 () Bool)

(assert (=> b!81410 (= e!53134 (containsKey!141 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20103 res!42320) b!81410))

(assert (=> d!20103 m!81727))

(assert (=> d!20103 m!81983))

(assert (=> d!20103 m!81983))

(assert (=> d!20103 m!82169))

(assert (=> d!20103 m!81727))

(declare-fun m!83325 () Bool)

(assert (=> d!20103 m!83325))

(declare-fun m!83327 () Bool)

(assert (=> d!20103 m!83327))

(assert (=> b!81410 m!81727))

(assert (=> b!81410 m!82165))

(assert (=> b!80765 d!20103))

(declare-fun d!20105 () Bool)

(assert (=> d!20105 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3437 () Bool)

(assert (= bs!3437 d!20105))

(assert (=> bs!3437 m!81983))

(declare-fun m!83329 () Bool)

(assert (=> bs!3437 m!83329))

(assert (=> b!80765 d!20105))

(declare-fun b!81412 () Bool)

(declare-fun e!53135 () Option!143)

(declare-fun e!53136 () Option!143)

(assert (=> b!81412 (= e!53135 e!53136)))

(declare-fun c!12836 () Bool)

(assert (=> b!81412 (= c!12836 (and ((_ is Cons!1534) (toList!751 lt!37326)) (not (= (_1!1111 (h!2123 (toList!751 lt!37326))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun d!20107 () Bool)

(declare-fun c!12835 () Bool)

(assert (=> d!20107 (= c!12835 (and ((_ is Cons!1534) (toList!751 lt!37326)) (= (_1!1111 (h!2123 (toList!751 lt!37326))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20107 (= (getValueByKey!137 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53135)))

(declare-fun b!81414 () Bool)

(assert (=> b!81414 (= e!53136 None!141)))

(declare-fun b!81413 () Bool)

(assert (=> b!81413 (= e!53136 (getValueByKey!137 (t!5209 (toList!751 lt!37326)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!81411 () Bool)

(assert (=> b!81411 (= e!53135 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37326)))))))

(assert (= (and d!20107 c!12835) b!81411))

(assert (= (and d!20107 (not c!12835)) b!81412))

(assert (= (and b!81412 c!12836) b!81413))

(assert (= (and b!81412 (not c!12836)) b!81414))

(assert (=> b!81413 m!81727))

(declare-fun m!83331 () Bool)

(assert (=> b!81413 m!83331))

(assert (=> b!80765 d!20107))

(declare-fun b!81416 () Bool)

(declare-fun e!53137 () Option!143)

(declare-fun e!53138 () Option!143)

(assert (=> b!81416 (= e!53137 e!53138)))

(declare-fun c!12838 () Bool)

(assert (=> b!81416 (= c!12838 (and ((_ is Cons!1534) (toList!751 lt!37564)) (not (= (_1!1111 (h!2123 (toList!751 lt!37564))) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!12837 () Bool)

(declare-fun d!20109 () Bool)

(assert (=> d!20109 (= c!12837 (and ((_ is Cons!1534) (toList!751 lt!37564)) (= (_1!1111 (h!2123 (toList!751 lt!37564))) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20109 (= (getValueByKey!137 (toList!751 lt!37564) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53137)))

(declare-fun b!81418 () Bool)

(assert (=> b!81418 (= e!53138 None!141)))

(declare-fun b!81417 () Bool)

(assert (=> b!81417 (= e!53138 (getValueByKey!137 (t!5209 (toList!751 lt!37564)) (_1!1111 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81415 () Bool)

(assert (=> b!81415 (= e!53137 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37564)))))))

(assert (= (and d!20109 c!12837) b!81415))

(assert (= (and d!20109 (not c!12837)) b!81416))

(assert (= (and b!81416 c!12838) b!81417))

(assert (= (and b!81416 (not c!12838)) b!81418))

(declare-fun m!83333 () Bool)

(assert (=> b!81417 m!83333))

(assert (=> b!80782 d!20109))

(declare-fun d!20111 () Bool)

(assert (=> d!20111 (= (get!1198 (getValueByKey!137 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2614 (getValueByKey!137 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19795 d!20111))

(declare-fun b!81420 () Bool)

(declare-fun e!53139 () Option!143)

(declare-fun e!53140 () Option!143)

(assert (=> b!81420 (= e!53139 e!53140)))

(declare-fun c!12840 () Bool)

(assert (=> b!81420 (= c!12840 (and ((_ is Cons!1534) (toList!751 lt!37385)) (not (= (_1!1111 (h!2123 (toList!751 lt!37385))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun c!12839 () Bool)

(declare-fun d!20113 () Bool)

(assert (=> d!20113 (= c!12839 (and ((_ is Cons!1534) (toList!751 lt!37385)) (= (_1!1111 (h!2123 (toList!751 lt!37385))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20113 (= (getValueByKey!137 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!53139)))

(declare-fun b!81422 () Bool)

(assert (=> b!81422 (= e!53140 None!141)))

(declare-fun b!81421 () Bool)

(assert (=> b!81421 (= e!53140 (getValueByKey!137 (t!5209 (toList!751 lt!37385)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!81419 () Bool)

(assert (=> b!81419 (= e!53139 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37385)))))))

(assert (= (and d!20113 c!12839) b!81419))

(assert (= (and d!20113 (not c!12839)) b!81420))

(assert (= (and b!81420 c!12840) b!81421))

(assert (= (and b!81420 (not c!12840)) b!81422))

(assert (=> b!81421 m!81727))

(declare-fun m!83335 () Bool)

(assert (=> b!81421 m!83335))

(assert (=> d!19795 d!20113))

(declare-fun d!20115 () Bool)

(declare-fun e!53141 () Bool)

(assert (=> d!20115 e!53141))

(declare-fun res!42321 () Bool)

(assert (=> d!20115 (=> res!42321 e!53141)))

(declare-fun lt!37959 () Bool)

(assert (=> d!20115 (= res!42321 (not lt!37959))))

(declare-fun lt!37958 () Bool)

(assert (=> d!20115 (= lt!37959 lt!37958)))

(declare-fun lt!37957 () Unit!2350)

(declare-fun e!53142 () Unit!2350)

(assert (=> d!20115 (= lt!37957 e!53142)))

(declare-fun c!12841 () Bool)

(assert (=> d!20115 (= c!12841 lt!37958)))

(assert (=> d!20115 (= lt!37958 (containsKey!141 (toList!751 lt!37510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20115 (= (contains!750 lt!37510 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37959)))

(declare-fun b!81423 () Bool)

(declare-fun lt!37960 () Unit!2350)

(assert (=> b!81423 (= e!53142 lt!37960)))

(assert (=> b!81423 (= lt!37960 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81423 (isDefined!91 (getValueByKey!137 (toList!751 lt!37510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81424 () Bool)

(declare-fun Unit!2391 () Unit!2350)

(assert (=> b!81424 (= e!53142 Unit!2391)))

(declare-fun b!81425 () Bool)

(assert (=> b!81425 (= e!53141 (isDefined!91 (getValueByKey!137 (toList!751 lt!37510) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20115 c!12841) b!81423))

(assert (= (and d!20115 (not c!12841)) b!81424))

(assert (= (and d!20115 (not res!42321)) b!81425))

(declare-fun m!83337 () Bool)

(assert (=> d!20115 m!83337))

(declare-fun m!83339 () Bool)

(assert (=> b!81423 m!83339))

(declare-fun m!83341 () Bool)

(assert (=> b!81423 m!83341))

(assert (=> b!81423 m!83341))

(declare-fun m!83343 () Bool)

(assert (=> b!81423 m!83343))

(assert (=> b!81425 m!83341))

(assert (=> b!81425 m!83341))

(assert (=> b!81425 m!83343))

(assert (=> bm!7504 d!20115))

(declare-fun b!81426 () Bool)

(declare-fun e!53147 () Bool)

(assert (=> b!81426 (= e!53147 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!81426 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun bm!7583 () Bool)

(declare-fun call!7586 () ListLongMap!1471)

(assert (=> bm!7583 (= call!7586 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun b!81427 () Bool)

(declare-fun e!53145 () ListLongMap!1471)

(declare-fun e!53144 () ListLongMap!1471)

(assert (=> b!81427 (= e!53145 e!53144)))

(declare-fun c!12843 () Bool)

(assert (=> b!81427 (= c!12843 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!20117 () Bool)

(declare-fun e!53146 () Bool)

(assert (=> d!20117 e!53146))

(declare-fun res!42322 () Bool)

(assert (=> d!20117 (=> (not res!42322) (not e!53146))))

(declare-fun lt!37966 () ListLongMap!1471)

(assert (=> d!20117 (= res!42322 (not (contains!750 lt!37966 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20117 (= lt!37966 e!53145)))

(declare-fun c!12844 () Bool)

(assert (=> d!20117 (= c!12844 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> d!20117 (validMask!0 (mask!6299 (v!2610 (underlying!284 thiss!992))))))

(assert (=> d!20117 (= (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992)))) lt!37966)))

(declare-fun b!81428 () Bool)

(declare-fun res!42325 () Bool)

(assert (=> b!81428 (=> (not res!42325) (not e!53146))))

(assert (=> b!81428 (= res!42325 (not (contains!750 lt!37966 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81429 () Bool)

(declare-fun e!53148 () Bool)

(assert (=> b!81429 (= e!53148 (isEmpty!334 lt!37966))))

(declare-fun b!81430 () Bool)

(assert (=> b!81430 (= e!53145 (ListLongMap!1472 Nil!1535))))

(declare-fun b!81431 () Bool)

(assert (=> b!81431 (= e!53148 (= lt!37966 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (_values!2276 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992))) (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) (minValue!2189 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!81432 () Bool)

(declare-fun e!53143 () Bool)

(assert (=> b!81432 (= e!53146 e!53143)))

(declare-fun c!12845 () Bool)

(assert (=> b!81432 (= c!12845 e!53147)))

(declare-fun res!42323 () Bool)

(assert (=> b!81432 (=> (not res!42323) (not e!53147))))

(assert (=> b!81432 (= res!42323 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!81433 () Bool)

(assert (=> b!81433 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> b!81433 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2143 (_values!2276 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!53149 () Bool)

(assert (=> b!81433 (= e!53149 (= (apply!80 lt!37966 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81434 () Bool)

(declare-fun lt!37963 () Unit!2350)

(declare-fun lt!37962 () Unit!2350)

(assert (=> b!81434 (= lt!37963 lt!37962)))

(declare-fun lt!37964 () V!3003)

(declare-fun lt!37967 () (_ BitVec 64))

(declare-fun lt!37961 () (_ BitVec 64))

(declare-fun lt!37965 () ListLongMap!1471)

(assert (=> b!81434 (not (contains!750 (+!111 lt!37965 (tuple2!2203 lt!37961 lt!37964)) lt!37967))))

(assert (=> b!81434 (= lt!37962 (addStillNotContains!31 lt!37965 lt!37961 lt!37964 lt!37967))))

(assert (=> b!81434 (= lt!37967 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81434 (= lt!37964 (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81434 (= lt!37961 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!81434 (= lt!37965 call!7586)))

(assert (=> b!81434 (= e!53144 (+!111 call!7586 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81435 () Bool)

(assert (=> b!81435 (= e!53143 e!53149)))

(assert (=> b!81435 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun res!42324 () Bool)

(assert (=> b!81435 (= res!42324 (contains!750 lt!37966 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!81435 (=> (not res!42324) (not e!53149))))

(declare-fun b!81436 () Bool)

(assert (=> b!81436 (= e!53144 call!7586)))

(declare-fun b!81437 () Bool)

(assert (=> b!81437 (= e!53143 e!53148)))

(declare-fun c!12842 () Bool)

(assert (=> b!81437 (= c!12842 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!20117 c!12844) b!81430))

(assert (= (and d!20117 (not c!12844)) b!81427))

(assert (= (and b!81427 c!12843) b!81434))

(assert (= (and b!81427 (not c!12843)) b!81436))

(assert (= (or b!81434 b!81436) bm!7583))

(assert (= (and d!20117 res!42322) b!81428))

(assert (= (and b!81428 res!42325) b!81432))

(assert (= (and b!81432 res!42323) b!81426))

(assert (= (and b!81432 c!12845) b!81435))

(assert (= (and b!81432 (not c!12845)) b!81437))

(assert (= (and b!81435 res!42324) b!81433))

(assert (= (and b!81437 c!12842) b!81431))

(assert (= (and b!81437 (not c!12842)) b!81429))

(declare-fun b_lambda!3635 () Bool)

(assert (=> (not b_lambda!3635) (not b!81433)))

(assert (=> b!81433 t!5206))

(declare-fun b_and!4957 () Bool)

(assert (= b_and!4953 (and (=> t!5206 result!2843) b_and!4957)))

(assert (=> b!81433 t!5208))

(declare-fun b_and!4959 () Bool)

(assert (= b_and!4955 (and (=> t!5208 result!2847) b_and!4959)))

(declare-fun b_lambda!3637 () Bool)

(assert (=> (not b_lambda!3637) (not b!81434)))

(assert (=> b!81434 t!5206))

(declare-fun b_and!4961 () Bool)

(assert (= b_and!4957 (and (=> t!5206 result!2843) b_and!4961)))

(assert (=> b!81434 t!5208))

(declare-fun b_and!4963 () Bool)

(assert (= b_and!4959 (and (=> t!5208 result!2847) b_and!4963)))

(declare-fun m!83345 () Bool)

(assert (=> b!81434 m!83345))

(assert (=> b!81434 m!81633))

(declare-fun m!83347 () Bool)

(assert (=> b!81434 m!83347))

(declare-fun m!83349 () Bool)

(assert (=> b!81434 m!83349))

(assert (=> b!81434 m!81633))

(declare-fun m!83351 () Bool)

(assert (=> b!81434 m!83351))

(declare-fun m!83353 () Bool)

(assert (=> b!81434 m!83353))

(declare-fun m!83355 () Bool)

(assert (=> b!81434 m!83355))

(assert (=> b!81434 m!83349))

(assert (=> b!81434 m!83345))

(declare-fun m!83357 () Bool)

(assert (=> b!81434 m!83357))

(declare-fun m!83359 () Bool)

(assert (=> b!81429 m!83359))

(assert (=> b!81433 m!81633))

(assert (=> b!81433 m!83349))

(assert (=> b!81433 m!81633))

(assert (=> b!81433 m!83351))

(assert (=> b!81433 m!83353))

(assert (=> b!81433 m!83349))

(assert (=> b!81433 m!83353))

(declare-fun m!83361 () Bool)

(assert (=> b!81433 m!83361))

(declare-fun m!83363 () Bool)

(assert (=> b!81428 m!83363))

(assert (=> b!81426 m!83353))

(assert (=> b!81426 m!83353))

(declare-fun m!83365 () Bool)

(assert (=> b!81426 m!83365))

(declare-fun m!83367 () Bool)

(assert (=> bm!7583 m!83367))

(declare-fun m!83369 () Bool)

(assert (=> d!20117 m!83369))

(assert (=> d!20117 m!81603))

(assert (=> b!81427 m!83353))

(assert (=> b!81427 m!83353))

(assert (=> b!81427 m!83365))

(assert (=> b!81435 m!83353))

(assert (=> b!81435 m!83353))

(declare-fun m!83371 () Bool)

(assert (=> b!81435 m!83371))

(assert (=> b!81431 m!83367))

(assert (=> b!80868 d!20117))

(declare-fun d!20119 () Bool)

(declare-fun res!42326 () Bool)

(declare-fun e!53150 () Bool)

(assert (=> d!20119 (=> (not res!42326) (not e!53150))))

(assert (=> d!20119 (= res!42326 (simpleValid!55 (_2!1110 lt!37854)))))

(assert (=> d!20119 (= (valid!316 (_2!1110 lt!37854)) e!53150)))

(declare-fun b!81438 () Bool)

(declare-fun res!42327 () Bool)

(assert (=> b!81438 (=> (not res!42327) (not e!53150))))

(assert (=> b!81438 (= res!42327 (= (arrayCountValidKeys!0 (_keys!3957 (_2!1110 lt!37854)) #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37854)))) (_size!418 (_2!1110 lt!37854))))))

(declare-fun b!81439 () Bool)

(declare-fun res!42328 () Bool)

(assert (=> b!81439 (=> (not res!42328) (not e!53150))))

(assert (=> b!81439 (= res!42328 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 (_2!1110 lt!37854)) (mask!6299 (_2!1110 lt!37854))))))

(declare-fun b!81440 () Bool)

(assert (=> b!81440 (= e!53150 (arrayNoDuplicates!0 (_keys!3957 (_2!1110 lt!37854)) #b00000000000000000000000000000000 Nil!1536))))

(assert (= (and d!20119 res!42326) b!81438))

(assert (= (and b!81438 res!42327) b!81439))

(assert (= (and b!81439 res!42328) b!81440))

(declare-fun m!83373 () Bool)

(assert (=> d!20119 m!83373))

(declare-fun m!83375 () Bool)

(assert (=> b!81438 m!83375))

(declare-fun m!83377 () Bool)

(assert (=> b!81439 m!83377))

(declare-fun m!83379 () Bool)

(assert (=> b!81440 m!83379))

(assert (=> b!81119 d!20119))

(declare-fun d!20121 () Bool)

(declare-fun e!53152 () Bool)

(assert (=> d!20121 e!53152))

(declare-fun res!42329 () Bool)

(assert (=> d!20121 (=> (not res!42329) (not e!53152))))

(declare-fun lt!37968 () List!1538)

(assert (=> d!20121 (= res!42329 (isStrictlySorted!291 lt!37968))))

(declare-fun e!53151 () List!1538)

(assert (=> d!20121 (= lt!37968 e!53151)))

(declare-fun c!12849 () Bool)

(assert (=> d!20121 (= c!12849 (and ((_ is Cons!1534) (t!5209 (toList!751 (+!111 lt!37196 lt!37188)))) (bvslt (_1!1111 (h!2123 (t!5209 (toList!751 (+!111 lt!37196 lt!37188))))) (_1!1111 lt!37202))))))

(assert (=> d!20121 (isStrictlySorted!291 (t!5209 (toList!751 (+!111 lt!37196 lt!37188))))))

(assert (=> d!20121 (= (insertStrictlySorted!58 (t!5209 (toList!751 (+!111 lt!37196 lt!37188))) (_1!1111 lt!37202) (_2!1111 lt!37202)) lt!37968)))

(declare-fun b!81441 () Bool)

(assert (=> b!81441 (= e!53152 (contains!753 lt!37968 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun bm!7584 () Bool)

(declare-fun call!7587 () List!1538)

(declare-fun call!7588 () List!1538)

(assert (=> bm!7584 (= call!7587 call!7588)))

(declare-fun b!81442 () Bool)

(declare-fun res!42330 () Bool)

(assert (=> b!81442 (=> (not res!42330) (not e!53152))))

(assert (=> b!81442 (= res!42330 (containsKey!141 lt!37968 (_1!1111 lt!37202)))))

(declare-fun b!81443 () Bool)

(declare-fun e!53154 () List!1538)

(assert (=> b!81443 (= e!53154 (insertStrictlySorted!58 (t!5209 (t!5209 (toList!751 (+!111 lt!37196 lt!37188)))) (_1!1111 lt!37202) (_2!1111 lt!37202)))))

(declare-fun b!81444 () Bool)

(assert (=> b!81444 (= e!53151 call!7588)))

(declare-fun bm!7585 () Bool)

(assert (=> bm!7585 (= call!7588 ($colon$colon!69 e!53154 (ite c!12849 (h!2123 (t!5209 (toList!751 (+!111 lt!37196 lt!37188)))) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202)))))))

(declare-fun c!12847 () Bool)

(assert (=> bm!7585 (= c!12847 c!12849)))

(declare-fun c!12848 () Bool)

(declare-fun c!12846 () Bool)

(declare-fun b!81445 () Bool)

(assert (=> b!81445 (= e!53154 (ite c!12846 (t!5209 (t!5209 (toList!751 (+!111 lt!37196 lt!37188)))) (ite c!12848 (Cons!1534 (h!2123 (t!5209 (toList!751 (+!111 lt!37196 lt!37188)))) (t!5209 (t!5209 (toList!751 (+!111 lt!37196 lt!37188))))) Nil!1535)))))

(declare-fun b!81446 () Bool)

(declare-fun e!53155 () List!1538)

(assert (=> b!81446 (= e!53155 call!7587)))

(declare-fun b!81447 () Bool)

(declare-fun e!53153 () List!1538)

(declare-fun call!7589 () List!1538)

(assert (=> b!81447 (= e!53153 call!7589)))

(declare-fun b!81448 () Bool)

(assert (=> b!81448 (= c!12848 (and ((_ is Cons!1534) (t!5209 (toList!751 (+!111 lt!37196 lt!37188)))) (bvsgt (_1!1111 (h!2123 (t!5209 (toList!751 (+!111 lt!37196 lt!37188))))) (_1!1111 lt!37202))))))

(assert (=> b!81448 (= e!53155 e!53153)))

(declare-fun b!81449 () Bool)

(assert (=> b!81449 (= e!53153 call!7589)))

(declare-fun bm!7586 () Bool)

(assert (=> bm!7586 (= call!7589 call!7587)))

(declare-fun b!81450 () Bool)

(assert (=> b!81450 (= e!53151 e!53155)))

(assert (=> b!81450 (= c!12846 (and ((_ is Cons!1534) (t!5209 (toList!751 (+!111 lt!37196 lt!37188)))) (= (_1!1111 (h!2123 (t!5209 (toList!751 (+!111 lt!37196 lt!37188))))) (_1!1111 lt!37202))))))

(assert (= (and d!20121 c!12849) b!81444))

(assert (= (and d!20121 (not c!12849)) b!81450))

(assert (= (and b!81450 c!12846) b!81446))

(assert (= (and b!81450 (not c!12846)) b!81448))

(assert (= (and b!81448 c!12848) b!81447))

(assert (= (and b!81448 (not c!12848)) b!81449))

(assert (= (or b!81447 b!81449) bm!7586))

(assert (= (or b!81446 bm!7586) bm!7584))

(assert (= (or b!81444 bm!7584) bm!7585))

(assert (= (and bm!7585 c!12847) b!81443))

(assert (= (and bm!7585 (not c!12847)) b!81445))

(assert (= (and d!20121 res!42329) b!81442))

(assert (= (and b!81442 res!42330) b!81441))

(declare-fun m!83381 () Bool)

(assert (=> b!81442 m!83381))

(declare-fun m!83383 () Bool)

(assert (=> bm!7585 m!83383))

(declare-fun m!83385 () Bool)

(assert (=> d!20121 m!83385))

(declare-fun m!83387 () Bool)

(assert (=> d!20121 m!83387))

(declare-fun m!83389 () Bool)

(assert (=> b!81443 m!83389))

(declare-fun m!83391 () Bool)

(assert (=> b!81441 m!83391))

(assert (=> b!80719 d!20121))

(declare-fun b!81452 () Bool)

(declare-fun e!53156 () Option!143)

(declare-fun e!53157 () Option!143)

(assert (=> b!81452 (= e!53156 e!53157)))

(declare-fun c!12851 () Bool)

(assert (=> b!81452 (= c!12851 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37199))) (not (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37199)))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))))

(declare-fun d!20123 () Bool)

(declare-fun c!12850 () Bool)

(assert (=> d!20123 (= c!12850 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37199))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37199)))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (=> d!20123 (= (getValueByKey!137 (t!5209 (toList!751 lt!37199)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) e!53156)))

(declare-fun b!81454 () Bool)

(assert (=> b!81454 (= e!53157 None!141)))

(declare-fun b!81453 () Bool)

(assert (=> b!81453 (= e!53157 (getValueByKey!137 (t!5209 (t!5209 (toList!751 lt!37199))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!81451 () Bool)

(assert (=> b!81451 (= e!53156 (Some!142 (_2!1111 (h!2123 (t!5209 (toList!751 lt!37199))))))))

(assert (= (and d!20123 c!12850) b!81451))

(assert (= (and d!20123 (not c!12850)) b!81452))

(assert (= (and b!81452 c!12851) b!81453))

(assert (= (and b!81452 (not c!12851)) b!81454))

(assert (=> b!81453 m!81585))

(declare-fun m!83393 () Bool)

(assert (=> b!81453 m!83393))

(assert (=> b!80956 d!20123))

(declare-fun b!81455 () Bool)

(declare-fun e!53167 () ListLongMap!1471)

(declare-fun call!7592 () ListLongMap!1471)

(assert (=> b!81455 (= e!53167 (+!111 call!7592 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (_2!1110 lt!37475)))))))

(declare-fun b!81456 () Bool)

(declare-fun e!53169 () Bool)

(declare-fun lt!37982 () ListLongMap!1471)

(assert (=> b!81456 (= e!53169 (= (apply!80 lt!37982 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 (_2!1110 lt!37475))))))

(declare-fun b!81457 () Bool)

(declare-fun e!53166 () ListLongMap!1471)

(assert (=> b!81457 (= e!53167 e!53166)))

(declare-fun c!12855 () Bool)

(assert (=> b!81457 (= c!12855 (and (not (= (bvand (extraKeys!2140 (_2!1110 lt!37475)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 (_2!1110 lt!37475)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7587 () Bool)

(declare-fun call!7595 () ListLongMap!1471)

(assert (=> bm!7587 (= call!7595 call!7592)))

(declare-fun b!81458 () Bool)

(declare-fun e!53158 () Bool)

(declare-fun e!53161 () Bool)

(assert (=> b!81458 (= e!53158 e!53161)))

(declare-fun res!42331 () Bool)

(assert (=> b!81458 (=> (not res!42331) (not e!53161))))

(assert (=> b!81458 (= res!42331 (contains!750 lt!37982 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000)))))

(assert (=> b!81458 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))))))

(declare-fun d!20125 () Bool)

(declare-fun e!53170 () Bool)

(assert (=> d!20125 e!53170))

(declare-fun res!42335 () Bool)

(assert (=> d!20125 (=> (not res!42335) (not e!53170))))

(assert (=> d!20125 (= res!42335 (or (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))))))))

(declare-fun lt!37980 () ListLongMap!1471)

(assert (=> d!20125 (= lt!37982 lt!37980)))

(declare-fun lt!37983 () Unit!2350)

(declare-fun e!53160 () Unit!2350)

(assert (=> d!20125 (= lt!37983 e!53160)))

(declare-fun c!12853 () Bool)

(declare-fun e!53159 () Bool)

(assert (=> d!20125 (= c!12853 e!53159)))

(declare-fun res!42337 () Bool)

(assert (=> d!20125 (=> (not res!42337) (not e!53159))))

(assert (=> d!20125 (= res!42337 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))))))

(assert (=> d!20125 (= lt!37980 e!53167)))

(declare-fun c!12854 () Bool)

(assert (=> d!20125 (= c!12854 (and (not (= (bvand (extraKeys!2140 (_2!1110 lt!37475)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 (_2!1110 lt!37475)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20125 (validMask!0 (mask!6299 (_2!1110 lt!37475)))))

(assert (=> d!20125 (= (getCurrentListMap!437 (_keys!3957 (_2!1110 lt!37475)) (_values!2276 (_2!1110 lt!37475)) (mask!6299 (_2!1110 lt!37475)) (extraKeys!2140 (_2!1110 lt!37475)) (zeroValue!2189 (_2!1110 lt!37475)) (minValue!2189 (_2!1110 lt!37475)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1110 lt!37475))) lt!37982)))

(declare-fun bm!7588 () Bool)

(declare-fun call!7591 () Bool)

(assert (=> bm!7588 (= call!7591 (contains!750 lt!37982 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81459 () Bool)

(declare-fun e!53164 () Bool)

(assert (=> b!81459 (= e!53164 (not call!7591))))

(declare-fun b!81460 () Bool)

(assert (=> b!81460 (= e!53166 call!7595)))

(declare-fun b!81461 () Bool)

(assert (=> b!81461 (= e!53170 e!53164)))

(declare-fun c!12857 () Bool)

(assert (=> b!81461 (= c!12857 (not (= (bvand (extraKeys!2140 (_2!1110 lt!37475)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81462 () Bool)

(declare-fun e!53162 () Bool)

(declare-fun e!53168 () Bool)

(assert (=> b!81462 (= e!53162 e!53168)))

(declare-fun res!42334 () Bool)

(declare-fun call!7596 () Bool)

(assert (=> b!81462 (= res!42334 call!7596)))

(assert (=> b!81462 (=> (not res!42334) (not e!53168))))

(declare-fun b!81463 () Bool)

(declare-fun res!42336 () Bool)

(assert (=> b!81463 (=> (not res!42336) (not e!53170))))

(assert (=> b!81463 (= res!42336 e!53162)))

(declare-fun c!12856 () Bool)

(assert (=> b!81463 (= c!12856 (not (= (bvand (extraKeys!2140 (_2!1110 lt!37475)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81464 () Bool)

(declare-fun e!53163 () Bool)

(assert (=> b!81464 (= e!53163 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000)))))

(declare-fun bm!7589 () Bool)

(declare-fun call!7590 () ListLongMap!1471)

(declare-fun call!7594 () ListLongMap!1471)

(assert (=> bm!7589 (= call!7590 call!7594)))

(declare-fun bm!7590 () Bool)

(declare-fun call!7593 () ListLongMap!1471)

(assert (=> bm!7590 (= call!7594 call!7593)))

(declare-fun b!81465 () Bool)

(declare-fun lt!37984 () Unit!2350)

(assert (=> b!81465 (= e!53160 lt!37984)))

(declare-fun lt!37981 () ListLongMap!1471)

(assert (=> b!81465 (= lt!37981 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (_2!1110 lt!37475)) (_values!2276 (_2!1110 lt!37475)) (mask!6299 (_2!1110 lt!37475)) (extraKeys!2140 (_2!1110 lt!37475)) (zeroValue!2189 (_2!1110 lt!37475)) (minValue!2189 (_2!1110 lt!37475)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1110 lt!37475))))))

(declare-fun lt!37969 () (_ BitVec 64))

(assert (=> b!81465 (= lt!37969 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37989 () (_ BitVec 64))

(assert (=> b!81465 (= lt!37989 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000))))

(declare-fun lt!37970 () Unit!2350)

(assert (=> b!81465 (= lt!37970 (addStillContains!56 lt!37981 lt!37969 (zeroValue!2189 (_2!1110 lt!37475)) lt!37989))))

(assert (=> b!81465 (contains!750 (+!111 lt!37981 (tuple2!2203 lt!37969 (zeroValue!2189 (_2!1110 lt!37475)))) lt!37989)))

(declare-fun lt!37987 () Unit!2350)

(assert (=> b!81465 (= lt!37987 lt!37970)))

(declare-fun lt!37976 () ListLongMap!1471)

(assert (=> b!81465 (= lt!37976 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (_2!1110 lt!37475)) (_values!2276 (_2!1110 lt!37475)) (mask!6299 (_2!1110 lt!37475)) (extraKeys!2140 (_2!1110 lt!37475)) (zeroValue!2189 (_2!1110 lt!37475)) (minValue!2189 (_2!1110 lt!37475)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1110 lt!37475))))))

(declare-fun lt!37985 () (_ BitVec 64))

(assert (=> b!81465 (= lt!37985 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37972 () (_ BitVec 64))

(assert (=> b!81465 (= lt!37972 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000))))

(declare-fun lt!37990 () Unit!2350)

(assert (=> b!81465 (= lt!37990 (addApplyDifferent!56 lt!37976 lt!37985 (minValue!2189 (_2!1110 lt!37475)) lt!37972))))

(assert (=> b!81465 (= (apply!80 (+!111 lt!37976 (tuple2!2203 lt!37985 (minValue!2189 (_2!1110 lt!37475)))) lt!37972) (apply!80 lt!37976 lt!37972))))

(declare-fun lt!37973 () Unit!2350)

(assert (=> b!81465 (= lt!37973 lt!37990)))

(declare-fun lt!37979 () ListLongMap!1471)

(assert (=> b!81465 (= lt!37979 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (_2!1110 lt!37475)) (_values!2276 (_2!1110 lt!37475)) (mask!6299 (_2!1110 lt!37475)) (extraKeys!2140 (_2!1110 lt!37475)) (zeroValue!2189 (_2!1110 lt!37475)) (minValue!2189 (_2!1110 lt!37475)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1110 lt!37475))))))

(declare-fun lt!37975 () (_ BitVec 64))

(assert (=> b!81465 (= lt!37975 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37977 () (_ BitVec 64))

(assert (=> b!81465 (= lt!37977 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000))))

(declare-fun lt!37988 () Unit!2350)

(assert (=> b!81465 (= lt!37988 (addApplyDifferent!56 lt!37979 lt!37975 (zeroValue!2189 (_2!1110 lt!37475)) lt!37977))))

(assert (=> b!81465 (= (apply!80 (+!111 lt!37979 (tuple2!2203 lt!37975 (zeroValue!2189 (_2!1110 lt!37475)))) lt!37977) (apply!80 lt!37979 lt!37977))))

(declare-fun lt!37974 () Unit!2350)

(assert (=> b!81465 (= lt!37974 lt!37988)))

(declare-fun lt!37978 () ListLongMap!1471)

(assert (=> b!81465 (= lt!37978 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (_2!1110 lt!37475)) (_values!2276 (_2!1110 lt!37475)) (mask!6299 (_2!1110 lt!37475)) (extraKeys!2140 (_2!1110 lt!37475)) (zeroValue!2189 (_2!1110 lt!37475)) (minValue!2189 (_2!1110 lt!37475)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1110 lt!37475))))))

(declare-fun lt!37986 () (_ BitVec 64))

(assert (=> b!81465 (= lt!37986 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!37971 () (_ BitVec 64))

(assert (=> b!81465 (= lt!37971 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000))))

(assert (=> b!81465 (= lt!37984 (addApplyDifferent!56 lt!37978 lt!37986 (minValue!2189 (_2!1110 lt!37475)) lt!37971))))

(assert (=> b!81465 (= (apply!80 (+!111 lt!37978 (tuple2!2203 lt!37986 (minValue!2189 (_2!1110 lt!37475)))) lt!37971) (apply!80 lt!37978 lt!37971))))

(declare-fun b!81466 () Bool)

(declare-fun Unit!2392 () Unit!2350)

(assert (=> b!81466 (= e!53160 Unit!2392)))

(declare-fun b!81467 () Bool)

(assert (=> b!81467 (= e!53164 e!53169)))

(declare-fun res!42332 () Bool)

(assert (=> b!81467 (= res!42332 call!7591)))

(assert (=> b!81467 (=> (not res!42332) (not e!53169))))

(declare-fun b!81468 () Bool)

(declare-fun c!12852 () Bool)

(assert (=> b!81468 (= c!12852 (and (not (= (bvand (extraKeys!2140 (_2!1110 lt!37475)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 (_2!1110 lt!37475)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53165 () ListLongMap!1471)

(assert (=> b!81468 (= e!53166 e!53165)))

(declare-fun b!81469 () Bool)

(assert (=> b!81469 (= e!53159 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000)))))

(declare-fun b!81470 () Bool)

(assert (=> b!81470 (= e!53165 call!7590)))

(declare-fun bm!7591 () Bool)

(assert (=> bm!7591 (= call!7596 (contains!750 lt!37982 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81471 () Bool)

(assert (=> b!81471 (= e!53162 (not call!7596))))

(declare-fun b!81472 () Bool)

(assert (=> b!81472 (= e!53168 (= (apply!80 lt!37982 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 (_2!1110 lt!37475))))))

(declare-fun bm!7592 () Bool)

(assert (=> bm!7592 (= call!7593 (getCurrentListMapNoExtraKeys!75 (_keys!3957 (_2!1110 lt!37475)) (_values!2276 (_2!1110 lt!37475)) (mask!6299 (_2!1110 lt!37475)) (extraKeys!2140 (_2!1110 lt!37475)) (zeroValue!2189 (_2!1110 lt!37475)) (minValue!2189 (_2!1110 lt!37475)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1110 lt!37475))))))

(declare-fun b!81473 () Bool)

(assert (=> b!81473 (= e!53161 (= (apply!80 lt!37982 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 (_values!2276 (_2!1110 lt!37475))) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 (_2!1110 lt!37475)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81473 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_values!2276 (_2!1110 lt!37475)))))))

(assert (=> b!81473 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))))))

(declare-fun b!81474 () Bool)

(assert (=> b!81474 (= e!53165 call!7595)))

(declare-fun bm!7593 () Bool)

(assert (=> bm!7593 (= call!7592 (+!111 (ite c!12854 call!7593 (ite c!12855 call!7594 call!7590)) (ite (or c!12854 c!12855) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (_2!1110 lt!37475))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (_2!1110 lt!37475))))))))

(declare-fun b!81475 () Bool)

(declare-fun res!42338 () Bool)

(assert (=> b!81475 (=> (not res!42338) (not e!53170))))

(assert (=> b!81475 (= res!42338 e!53158)))

(declare-fun res!42333 () Bool)

(assert (=> b!81475 (=> res!42333 e!53158)))

(assert (=> b!81475 (= res!42333 (not e!53163))))

(declare-fun res!42339 () Bool)

(assert (=> b!81475 (=> (not res!42339) (not e!53163))))

(assert (=> b!81475 (= res!42339 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))))))

(assert (= (and d!20125 c!12854) b!81455))

(assert (= (and d!20125 (not c!12854)) b!81457))

(assert (= (and b!81457 c!12855) b!81460))

(assert (= (and b!81457 (not c!12855)) b!81468))

(assert (= (and b!81468 c!12852) b!81474))

(assert (= (and b!81468 (not c!12852)) b!81470))

(assert (= (or b!81474 b!81470) bm!7589))

(assert (= (or b!81460 bm!7589) bm!7590))

(assert (= (or b!81460 b!81474) bm!7587))

(assert (= (or b!81455 bm!7590) bm!7592))

(assert (= (or b!81455 bm!7587) bm!7593))

(assert (= (and d!20125 res!42337) b!81469))

(assert (= (and d!20125 c!12853) b!81465))

(assert (= (and d!20125 (not c!12853)) b!81466))

(assert (= (and d!20125 res!42335) b!81475))

(assert (= (and b!81475 res!42339) b!81464))

(assert (= (and b!81475 (not res!42333)) b!81458))

(assert (= (and b!81458 res!42331) b!81473))

(assert (= (and b!81475 res!42338) b!81463))

(assert (= (and b!81463 c!12856) b!81462))

(assert (= (and b!81463 (not c!12856)) b!81471))

(assert (= (and b!81462 res!42334) b!81472))

(assert (= (or b!81462 b!81471) bm!7591))

(assert (= (and b!81463 res!42336) b!81461))

(assert (= (and b!81461 c!12857) b!81467))

(assert (= (and b!81461 (not c!12857)) b!81459))

(assert (= (and b!81467 res!42332) b!81456))

(assert (= (or b!81467 b!81459) bm!7588))

(declare-fun b_lambda!3639 () Bool)

(assert (=> (not b_lambda!3639) (not b!81473)))

(declare-fun tb!1653 () Bool)

(declare-fun t!5223 () Bool)

(assert (=> (and b!80256 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 (_2!1110 lt!37475))) t!5223) tb!1653))

(declare-fun result!2861 () Bool)

(assert (=> tb!1653 (= result!2861 tp_is_empty!2517)))

(assert (=> b!81473 t!5223))

(declare-fun b_and!4965 () Bool)

(assert (= b_and!4961 (and (=> t!5223 result!2861) b_and!4965)))

(declare-fun t!5225 () Bool)

(declare-fun tb!1655 () Bool)

(assert (=> (and b!80270 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (_2!1110 lt!37475))) t!5225) tb!1655))

(declare-fun result!2863 () Bool)

(assert (= result!2863 result!2861))

(assert (=> b!81473 t!5225))

(declare-fun b_and!4967 () Bool)

(assert (= b_and!4963 (and (=> t!5225 result!2863) b_and!4967)))

(declare-fun m!83395 () Bool)

(assert (=> bm!7592 m!83395))

(declare-fun m!83397 () Bool)

(assert (=> bm!7588 m!83397))

(assert (=> b!81473 m!83287))

(assert (=> b!81473 m!83287))

(declare-fun m!83399 () Bool)

(assert (=> b!81473 m!83399))

(declare-fun m!83401 () Bool)

(assert (=> b!81473 m!83401))

(declare-fun m!83403 () Bool)

(assert (=> b!81473 m!83403))

(assert (=> b!81473 m!83401))

(assert (=> b!81473 m!83403))

(declare-fun m!83405 () Bool)

(assert (=> b!81473 m!83405))

(assert (=> b!81464 m!83287))

(assert (=> b!81464 m!83287))

(assert (=> b!81464 m!83291))

(declare-fun m!83407 () Bool)

(assert (=> b!81455 m!83407))

(assert (=> b!81458 m!83287))

(assert (=> b!81458 m!83287))

(declare-fun m!83409 () Bool)

(assert (=> b!81458 m!83409))

(declare-fun m!83411 () Bool)

(assert (=> bm!7593 m!83411))

(assert (=> d!20125 m!83055))

(declare-fun m!83413 () Bool)

(assert (=> bm!7591 m!83413))

(declare-fun m!83415 () Bool)

(assert (=> b!81465 m!83415))

(declare-fun m!83417 () Bool)

(assert (=> b!81465 m!83417))

(declare-fun m!83419 () Bool)

(assert (=> b!81465 m!83419))

(assert (=> b!81465 m!83287))

(declare-fun m!83421 () Bool)

(assert (=> b!81465 m!83421))

(declare-fun m!83423 () Bool)

(assert (=> b!81465 m!83423))

(declare-fun m!83425 () Bool)

(assert (=> b!81465 m!83425))

(declare-fun m!83427 () Bool)

(assert (=> b!81465 m!83427))

(declare-fun m!83429 () Bool)

(assert (=> b!81465 m!83429))

(assert (=> b!81465 m!83417))

(assert (=> b!81465 m!83395))

(declare-fun m!83431 () Bool)

(assert (=> b!81465 m!83431))

(declare-fun m!83433 () Bool)

(assert (=> b!81465 m!83433))

(declare-fun m!83435 () Bool)

(assert (=> b!81465 m!83435))

(declare-fun m!83437 () Bool)

(assert (=> b!81465 m!83437))

(assert (=> b!81465 m!83425))

(declare-fun m!83439 () Bool)

(assert (=> b!81465 m!83439))

(declare-fun m!83441 () Bool)

(assert (=> b!81465 m!83441))

(assert (=> b!81465 m!83421))

(declare-fun m!83443 () Bool)

(assert (=> b!81465 m!83443))

(assert (=> b!81465 m!83431))

(declare-fun m!83445 () Bool)

(assert (=> b!81472 m!83445))

(declare-fun m!83447 () Bool)

(assert (=> b!81456 m!83447))

(assert (=> b!81469 m!83287))

(assert (=> b!81469 m!83287))

(assert (=> b!81469 m!83291))

(assert (=> d!19905 d!20125))

(declare-fun b!81476 () Bool)

(declare-fun e!53174 () Bool)

(declare-fun call!7597 () Bool)

(assert (=> b!81476 (= e!53174 call!7597)))

(declare-fun b!81477 () Bool)

(declare-fun e!53173 () Bool)

(assert (=> b!81477 (= e!53173 (contains!752 (ite c!12733 (Cons!1535 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) Nil!1536) Nil!1536) (select (arr!1900 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!81478 () Bool)

(assert (=> b!81478 (= e!53174 call!7597)))

(declare-fun d!20127 () Bool)

(declare-fun res!42340 () Bool)

(declare-fun e!53171 () Bool)

(assert (=> d!20127 (=> res!42340 e!53171)))

(assert (=> d!20127 (= res!42340 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!20127 (= (arrayNoDuplicates!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12733 (Cons!1535 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) Nil!1536) Nil!1536)) e!53171)))

(declare-fun b!81479 () Bool)

(declare-fun e!53172 () Bool)

(assert (=> b!81479 (= e!53171 e!53172)))

(declare-fun res!42341 () Bool)

(assert (=> b!81479 (=> (not res!42341) (not e!53172))))

(assert (=> b!81479 (= res!42341 (not e!53173))))

(declare-fun res!42342 () Bool)

(assert (=> b!81479 (=> (not res!42342) (not e!53173))))

(assert (=> b!81479 (= res!42342 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!81480 () Bool)

(assert (=> b!81480 (= e!53172 e!53174)))

(declare-fun c!12858 () Bool)

(assert (=> b!81480 (= c!12858 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!7594 () Bool)

(assert (=> bm!7594 (= call!7597 (arrayNoDuplicates!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12858 (Cons!1535 (select (arr!1900 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!12733 (Cons!1535 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) Nil!1536) Nil!1536)) (ite c!12733 (Cons!1535 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) Nil!1536) Nil!1536))))))

(assert (= (and d!20127 (not res!42340)) b!81479))

(assert (= (and b!81479 res!42342) b!81477))

(assert (= (and b!81479 res!42341) b!81480))

(assert (= (and b!81480 c!12858) b!81476))

(assert (= (and b!81480 (not c!12858)) b!81478))

(assert (= (or b!81476 b!81478) bm!7594))

(declare-fun m!83449 () Bool)

(assert (=> b!81477 m!83449))

(assert (=> b!81477 m!83449))

(declare-fun m!83451 () Bool)

(assert (=> b!81477 m!83451))

(assert (=> b!81479 m!83449))

(assert (=> b!81479 m!83449))

(declare-fun m!83453 () Bool)

(assert (=> b!81479 m!83453))

(assert (=> b!81480 m!83449))

(assert (=> b!81480 m!83449))

(assert (=> b!81480 m!83453))

(assert (=> bm!7594 m!83449))

(declare-fun m!83455 () Bool)

(assert (=> bm!7594 m!83455))

(assert (=> bm!7543 d!20127))

(declare-fun b!81481 () Bool)

(declare-fun e!53178 () Bool)

(declare-fun call!7598 () Bool)

(assert (=> b!81481 (= e!53178 call!7598)))

(declare-fun b!81482 () Bool)

(declare-fun e!53177 () Bool)

(assert (=> b!81482 (= e!53177 (contains!752 Nil!1536 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!81483 () Bool)

(assert (=> b!81483 (= e!53178 call!7598)))

(declare-fun d!20129 () Bool)

(declare-fun res!42343 () Bool)

(declare-fun e!53175 () Bool)

(assert (=> d!20129 (=> res!42343 e!53175)))

(assert (=> d!20129 (= res!42343 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> d!20129 (= (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000000 Nil!1536) e!53175)))

(declare-fun b!81484 () Bool)

(declare-fun e!53176 () Bool)

(assert (=> b!81484 (= e!53175 e!53176)))

(declare-fun res!42344 () Bool)

(assert (=> b!81484 (=> (not res!42344) (not e!53176))))

(assert (=> b!81484 (= res!42344 (not e!53177))))

(declare-fun res!42345 () Bool)

(assert (=> b!81484 (=> (not res!42345) (not e!53177))))

(assert (=> b!81484 (= res!42345 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!81485 () Bool)

(assert (=> b!81485 (= e!53176 e!53178)))

(declare-fun c!12859 () Bool)

(assert (=> b!81485 (= c!12859 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7595 () Bool)

(assert (=> bm!7595 (= call!7598 (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12859 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b00000000000000000000000000000000) Nil!1536) Nil!1536)))))

(assert (= (and d!20129 (not res!42343)) b!81484))

(assert (= (and b!81484 res!42345) b!81482))

(assert (= (and b!81484 res!42344) b!81485))

(assert (= (and b!81485 c!12859) b!81481))

(assert (= (and b!81485 (not c!12859)) b!81483))

(assert (= (or b!81481 b!81483) bm!7595))

(declare-fun m!83457 () Bool)

(assert (=> b!81482 m!83457))

(assert (=> b!81482 m!83457))

(declare-fun m!83459 () Bool)

(assert (=> b!81482 m!83459))

(assert (=> b!81484 m!83457))

(assert (=> b!81484 m!83457))

(declare-fun m!83461 () Bool)

(assert (=> b!81484 m!83461))

(assert (=> b!81485 m!83457))

(assert (=> b!81485 m!83457))

(assert (=> b!81485 m!83461))

(assert (=> bm!7595 m!83457))

(declare-fun m!83463 () Bool)

(assert (=> bm!7595 m!83463))

(assert (=> b!81185 d!20129))

(declare-fun d!20131 () Bool)

(assert (=> d!20131 (= (inRange!0 (index!3140 lt!37590) (mask!6299 newMap!16)) (and (bvsge (index!3140 lt!37590) #b00000000000000000000000000000000) (bvslt (index!3140 lt!37590) (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!80840 d!20131))

(declare-fun d!20133 () Bool)

(declare-fun lt!37991 () Bool)

(assert (=> d!20133 (= lt!37991 (select (content!84 (t!5209 (toList!751 lt!37302))) lt!37197))))

(declare-fun e!53180 () Bool)

(assert (=> d!20133 (= lt!37991 e!53180)))

(declare-fun res!42347 () Bool)

(assert (=> d!20133 (=> (not res!42347) (not e!53180))))

(assert (=> d!20133 (= res!42347 ((_ is Cons!1534) (t!5209 (toList!751 lt!37302))))))

(assert (=> d!20133 (= (contains!753 (t!5209 (toList!751 lt!37302)) lt!37197) lt!37991)))

(declare-fun b!81486 () Bool)

(declare-fun e!53179 () Bool)

(assert (=> b!81486 (= e!53180 e!53179)))

(declare-fun res!42346 () Bool)

(assert (=> b!81486 (=> res!42346 e!53179)))

(assert (=> b!81486 (= res!42346 (= (h!2123 (t!5209 (toList!751 lt!37302))) lt!37197))))

(declare-fun b!81487 () Bool)

(assert (=> b!81487 (= e!53179 (contains!753 (t!5209 (t!5209 (toList!751 lt!37302))) lt!37197))))

(assert (= (and d!20133 res!42347) b!81486))

(assert (= (and b!81486 (not res!42346)) b!81487))

(declare-fun m!83465 () Bool)

(assert (=> d!20133 m!83465))

(declare-fun m!83467 () Bool)

(assert (=> d!20133 m!83467))

(declare-fun m!83469 () Bool)

(assert (=> b!81487 m!83469))

(assert (=> b!80907 d!20133))

(declare-fun d!20135 () Bool)

(declare-fun e!53181 () Bool)

(assert (=> d!20135 e!53181))

(declare-fun res!42348 () Bool)

(assert (=> d!20135 (=> res!42348 e!53181)))

(declare-fun lt!37994 () Bool)

(assert (=> d!20135 (= res!42348 (not lt!37994))))

(declare-fun lt!37993 () Bool)

(assert (=> d!20135 (= lt!37994 lt!37993)))

(declare-fun lt!37992 () Unit!2350)

(declare-fun e!53182 () Unit!2350)

(assert (=> d!20135 (= lt!37992 e!53182)))

(declare-fun c!12860 () Bool)

(assert (=> d!20135 (= c!12860 lt!37993)))

(assert (=> d!20135 (= lt!37993 (containsKey!141 (toList!751 (map!1183 (_2!1110 lt!37854))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!20135 (= (contains!750 (map!1183 (_2!1110 lt!37854)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) lt!37994)))

(declare-fun b!81488 () Bool)

(declare-fun lt!37995 () Unit!2350)

(assert (=> b!81488 (= e!53182 lt!37995)))

(assert (=> b!81488 (= lt!37995 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (map!1183 (_2!1110 lt!37854))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> b!81488 (isDefined!91 (getValueByKey!137 (toList!751 (map!1183 (_2!1110 lt!37854))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!81489 () Bool)

(declare-fun Unit!2393 () Unit!2350)

(assert (=> b!81489 (= e!53182 Unit!2393)))

(declare-fun b!81490 () Bool)

(assert (=> b!81490 (= e!53181 (isDefined!91 (getValueByKey!137 (toList!751 (map!1183 (_2!1110 lt!37854))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (= (and d!20135 c!12860) b!81488))

(assert (= (and d!20135 (not c!12860)) b!81489))

(assert (= (and d!20135 (not res!42348)) b!81490))

(assert (=> d!20135 m!81585))

(declare-fun m!83471 () Bool)

(assert (=> d!20135 m!83471))

(assert (=> b!81488 m!81585))

(declare-fun m!83473 () Bool)

(assert (=> b!81488 m!83473))

(assert (=> b!81488 m!81585))

(declare-fun m!83475 () Bool)

(assert (=> b!81488 m!83475))

(assert (=> b!81488 m!83475))

(declare-fun m!83477 () Bool)

(assert (=> b!81488 m!83477))

(assert (=> b!81490 m!81585))

(assert (=> b!81490 m!83475))

(assert (=> b!81490 m!83475))

(assert (=> b!81490 m!83477))

(assert (=> b!81111 d!20135))

(declare-fun d!20137 () Bool)

(assert (=> d!20137 (= (map!1183 (_2!1110 lt!37854)) (getCurrentListMap!437 (_keys!3957 (_2!1110 lt!37854)) (_values!2276 (_2!1110 lt!37854)) (mask!6299 (_2!1110 lt!37854)) (extraKeys!2140 (_2!1110 lt!37854)) (zeroValue!2189 (_2!1110 lt!37854)) (minValue!2189 (_2!1110 lt!37854)) #b00000000000000000000000000000000 (defaultEntry!2293 (_2!1110 lt!37854))))))

(declare-fun bs!3438 () Bool)

(assert (= bs!3438 d!20137))

(declare-fun m!83479 () Bool)

(assert (=> bs!3438 m!83479))

(assert (=> b!81111 d!20137))

(declare-fun d!20139 () Bool)

(declare-fun e!53184 () Bool)

(assert (=> d!20139 e!53184))

(declare-fun res!42349 () Bool)

(assert (=> d!20139 (=> (not res!42349) (not e!53184))))

(declare-fun lt!37996 () List!1538)

(assert (=> d!20139 (= res!42349 (isStrictlySorted!291 lt!37996))))

(declare-fun e!53183 () List!1538)

(assert (=> d!20139 (= lt!37996 e!53183)))

(declare-fun c!12864 () Bool)

(assert (=> d!20139 (= c!12864 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37192))) (bvslt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37192)))) (_1!1111 lt!37188))))))

(assert (=> d!20139 (isStrictlySorted!291 (t!5209 (toList!751 lt!37192)))))

(assert (=> d!20139 (= (insertStrictlySorted!58 (t!5209 (toList!751 lt!37192)) (_1!1111 lt!37188) (_2!1111 lt!37188)) lt!37996)))

(declare-fun b!81491 () Bool)

(assert (=> b!81491 (= e!53184 (contains!753 lt!37996 (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun bm!7596 () Bool)

(declare-fun call!7599 () List!1538)

(declare-fun call!7600 () List!1538)

(assert (=> bm!7596 (= call!7599 call!7600)))

(declare-fun b!81492 () Bool)

(declare-fun res!42350 () Bool)

(assert (=> b!81492 (=> (not res!42350) (not e!53184))))

(assert (=> b!81492 (= res!42350 (containsKey!141 lt!37996 (_1!1111 lt!37188)))))

(declare-fun b!81493 () Bool)

(declare-fun e!53186 () List!1538)

(assert (=> b!81493 (= e!53186 (insertStrictlySorted!58 (t!5209 (t!5209 (toList!751 lt!37192))) (_1!1111 lt!37188) (_2!1111 lt!37188)))))

(declare-fun b!81494 () Bool)

(assert (=> b!81494 (= e!53183 call!7600)))

(declare-fun bm!7597 () Bool)

(assert (=> bm!7597 (= call!7600 ($colon$colon!69 e!53186 (ite c!12864 (h!2123 (t!5209 (toList!751 lt!37192))) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188)))))))

(declare-fun c!12862 () Bool)

(assert (=> bm!7597 (= c!12862 c!12864)))

(declare-fun c!12861 () Bool)

(declare-fun c!12863 () Bool)

(declare-fun b!81495 () Bool)

(assert (=> b!81495 (= e!53186 (ite c!12861 (t!5209 (t!5209 (toList!751 lt!37192))) (ite c!12863 (Cons!1534 (h!2123 (t!5209 (toList!751 lt!37192))) (t!5209 (t!5209 (toList!751 lt!37192)))) Nil!1535)))))

(declare-fun b!81496 () Bool)

(declare-fun e!53187 () List!1538)

(assert (=> b!81496 (= e!53187 call!7599)))

(declare-fun b!81497 () Bool)

(declare-fun e!53185 () List!1538)

(declare-fun call!7601 () List!1538)

(assert (=> b!81497 (= e!53185 call!7601)))

(declare-fun b!81498 () Bool)

(assert (=> b!81498 (= c!12863 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37192))) (bvsgt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37192)))) (_1!1111 lt!37188))))))

(assert (=> b!81498 (= e!53187 e!53185)))

(declare-fun b!81499 () Bool)

(assert (=> b!81499 (= e!53185 call!7601)))

(declare-fun bm!7598 () Bool)

(assert (=> bm!7598 (= call!7601 call!7599)))

(declare-fun b!81500 () Bool)

(assert (=> b!81500 (= e!53183 e!53187)))

(assert (=> b!81500 (= c!12861 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37192))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37192)))) (_1!1111 lt!37188))))))

(assert (= (and d!20139 c!12864) b!81494))

(assert (= (and d!20139 (not c!12864)) b!81500))

(assert (= (and b!81500 c!12861) b!81496))

(assert (= (and b!81500 (not c!12861)) b!81498))

(assert (= (and b!81498 c!12863) b!81497))

(assert (= (and b!81498 (not c!12863)) b!81499))

(assert (= (or b!81497 b!81499) bm!7598))

(assert (= (or b!81496 bm!7598) bm!7596))

(assert (= (or b!81494 bm!7596) bm!7597))

(assert (= (and bm!7597 c!12862) b!81493))

(assert (= (and bm!7597 (not c!12862)) b!81495))

(assert (= (and d!20139 res!42349) b!81492))

(assert (= (and b!81492 res!42350) b!81491))

(declare-fun m!83481 () Bool)

(assert (=> b!81492 m!83481))

(declare-fun m!83483 () Bool)

(assert (=> bm!7597 m!83483))

(declare-fun m!83485 () Bool)

(assert (=> d!20139 m!83485))

(declare-fun m!83487 () Bool)

(assert (=> d!20139 m!83487))

(declare-fun m!83489 () Bool)

(assert (=> b!81493 m!83489))

(declare-fun m!83491 () Bool)

(assert (=> b!81491 m!83491))

(assert (=> b!80679 d!20139))

(declare-fun d!20141 () Bool)

(assert (=> d!20141 (= (isDefined!91 (getValueByKey!137 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))) (not (isEmpty!335 (getValueByKey!137 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))))

(declare-fun bs!3439 () Bool)

(assert (= bs!3439 d!20141))

(assert (=> bs!3439 m!82761))

(declare-fun m!83493 () Bool)

(assert (=> bs!3439 m!83493))

(assert (=> b!81031 d!20141))

(declare-fun b!81502 () Bool)

(declare-fun e!53188 () Option!143)

(declare-fun e!53189 () Option!143)

(assert (=> b!81502 (= e!53188 e!53189)))

(declare-fun c!12866 () Bool)

(assert (=> b!81502 (= c!12866 (and ((_ is Cons!1534) (toList!751 call!7473)) (not (= (_1!1111 (h!2123 (toList!751 call!7473))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))))

(declare-fun c!12865 () Bool)

(declare-fun d!20143 () Bool)

(assert (=> d!20143 (= c!12865 (and ((_ is Cons!1534) (toList!751 call!7473)) (= (_1!1111 (h!2123 (toList!751 call!7473))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (=> d!20143 (= (getValueByKey!137 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) e!53188)))

(declare-fun b!81504 () Bool)

(assert (=> b!81504 (= e!53189 None!141)))

(declare-fun b!81503 () Bool)

(assert (=> b!81503 (= e!53189 (getValueByKey!137 (t!5209 (toList!751 call!7473)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!81501 () Bool)

(assert (=> b!81501 (= e!53188 (Some!142 (_2!1111 (h!2123 (toList!751 call!7473)))))))

(assert (= (and d!20143 c!12865) b!81501))

(assert (= (and d!20143 (not c!12865)) b!81502))

(assert (= (and b!81502 c!12866) b!81503))

(assert (= (and b!81502 (not c!12866)) b!81504))

(assert (=> b!81503 m!81585))

(declare-fun m!83495 () Bool)

(assert (=> b!81503 m!83495))

(assert (=> b!81031 d!20143))

(declare-fun d!20145 () Bool)

(declare-fun res!42351 () Bool)

(declare-fun e!53190 () Bool)

(assert (=> d!20145 (=> res!42351 e!53190)))

(assert (=> d!20145 (= res!42351 (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!20145 (= (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!53190)))

(declare-fun b!81505 () Bool)

(declare-fun e!53191 () Bool)

(assert (=> b!81505 (= e!53190 e!53191)))

(declare-fun res!42352 () Bool)

(assert (=> b!81505 (=> (not res!42352) (not e!53191))))

(assert (=> b!81505 (= res!42352 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!81506 () Bool)

(assert (=> b!81506 (= e!53191 (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!20145 (not res!42351)) b!81505))

(assert (= (and b!81505 res!42352) b!81506))

(assert (=> d!20145 m!83353))

(assert (=> b!81506 m!81585))

(declare-fun m!83497 () Bool)

(assert (=> b!81506 m!83497))

(assert (=> b!81165 d!20145))

(declare-fun b!81508 () Bool)

(declare-fun e!53192 () Option!143)

(declare-fun e!53193 () Option!143)

(assert (=> b!81508 (= e!53192 e!53193)))

(declare-fun c!12868 () Bool)

(assert (=> b!81508 (= c!12868 (and ((_ is Cons!1534) (t!5209 lt!37303)) (not (= (_1!1111 (h!2123 (t!5209 lt!37303))) (_1!1111 lt!37202)))))))

(declare-fun d!20147 () Bool)

(declare-fun c!12867 () Bool)

(assert (=> d!20147 (= c!12867 (and ((_ is Cons!1534) (t!5209 lt!37303)) (= (_1!1111 (h!2123 (t!5209 lt!37303))) (_1!1111 lt!37202))))))

(assert (=> d!20147 (= (getValueByKey!137 (t!5209 lt!37303) (_1!1111 lt!37202)) e!53192)))

(declare-fun b!81510 () Bool)

(assert (=> b!81510 (= e!53193 None!141)))

(declare-fun b!81509 () Bool)

(assert (=> b!81509 (= e!53193 (getValueByKey!137 (t!5209 (t!5209 lt!37303)) (_1!1111 lt!37202)))))

(declare-fun b!81507 () Bool)

(assert (=> b!81507 (= e!53192 (Some!142 (_2!1111 (h!2123 (t!5209 lt!37303)))))))

(assert (= (and d!20147 c!12867) b!81507))

(assert (= (and d!20147 (not c!12867)) b!81508))

(assert (= (and b!81508 c!12868) b!81509))

(assert (= (and b!81508 (not c!12868)) b!81510))

(declare-fun m!83499 () Bool)

(assert (=> b!81509 m!83499))

(assert (=> b!81133 d!20147))

(declare-fun d!20149 () Bool)

(assert (=> d!20149 (= ($colon$colon!69 e!52698 (ite c!12640 (h!2123 (toList!751 lt!37192)) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188)))) (Cons!1534 (ite c!12640 (h!2123 (toList!751 lt!37192)) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))) e!52698))))

(assert (=> bm!7498 d!20149))

(declare-fun d!20151 () Bool)

(declare-fun e!53194 () Bool)

(assert (=> d!20151 e!53194))

(declare-fun res!42353 () Bool)

(assert (=> d!20151 (=> (not res!42353) (not e!53194))))

(declare-fun lt!38000 () ListLongMap!1471)

(assert (=> d!20151 (= res!42353 (contains!750 lt!38000 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun lt!37997 () List!1538)

(assert (=> d!20151 (= lt!38000 (ListLongMap!1472 lt!37997))))

(declare-fun lt!37998 () Unit!2350)

(declare-fun lt!37999 () Unit!2350)

(assert (=> d!20151 (= lt!37998 lt!37999)))

(assert (=> d!20151 (= (getValueByKey!137 lt!37997 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20151 (= lt!37999 (lemmaContainsTupThenGetReturnValue!56 lt!37997 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20151 (= lt!37997 (insertStrictlySorted!58 (toList!751 call!7532) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20151 (= (+!111 call!7532 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) lt!38000)))

(declare-fun b!81511 () Bool)

(declare-fun res!42354 () Bool)

(assert (=> b!81511 (=> (not res!42354) (not e!53194))))

(assert (=> b!81511 (= res!42354 (= (getValueByKey!137 (toList!751 lt!38000) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(declare-fun b!81512 () Bool)

(assert (=> b!81512 (= e!53194 (contains!753 (toList!751 lt!38000) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(assert (= (and d!20151 res!42353) b!81511))

(assert (= (and b!81511 res!42354) b!81512))

(declare-fun m!83501 () Bool)

(assert (=> d!20151 m!83501))

(declare-fun m!83503 () Bool)

(assert (=> d!20151 m!83503))

(declare-fun m!83505 () Bool)

(assert (=> d!20151 m!83505))

(declare-fun m!83507 () Bool)

(assert (=> d!20151 m!83507))

(declare-fun m!83509 () Bool)

(assert (=> b!81511 m!83509))

(declare-fun m!83511 () Bool)

(assert (=> b!81512 m!83511))

(assert (=> b!80913 d!20151))

(declare-fun d!20153 () Bool)

(declare-fun lt!38001 () Bool)

(assert (=> d!20153 (= lt!38001 (select (content!84 (toList!751 lt!37623)) (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53196 () Bool)

(assert (=> d!20153 (= lt!38001 e!53196)))

(declare-fun res!42356 () Bool)

(assert (=> d!20153 (=> (not res!42356) (not e!53196))))

(assert (=> d!20153 (= res!42356 ((_ is Cons!1534) (toList!751 lt!37623)))))

(assert (=> d!20153 (= (contains!753 (toList!751 lt!37623) (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38001)))

(declare-fun b!81513 () Bool)

(declare-fun e!53195 () Bool)

(assert (=> b!81513 (= e!53196 e!53195)))

(declare-fun res!42355 () Bool)

(assert (=> b!81513 (=> res!42355 e!53195)))

(assert (=> b!81513 (= res!42355 (= (h!2123 (toList!751 lt!37623)) (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81514 () Bool)

(assert (=> b!81514 (= e!53195 (contains!753 (t!5209 (toList!751 lt!37623)) (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (= (and d!20153 res!42356) b!81513))

(assert (= (and b!81513 (not res!42355)) b!81514))

(declare-fun m!83513 () Bool)

(assert (=> d!20153 m!83513))

(declare-fun m!83515 () Bool)

(assert (=> d!20153 m!83515))

(declare-fun m!83517 () Bool)

(assert (=> b!81514 m!83517))

(assert (=> b!80884 d!20153))

(declare-fun d!20155 () Bool)

(assert (=> d!20155 (= ($colon$colon!69 e!52966 (ite c!12760 (h!2123 (toList!751 lt!37196)) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202)))) (Cons!1534 (ite c!12760 (h!2123 (toList!751 lt!37196)) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))) e!52966))))

(assert (=> bm!7563 d!20155))

(declare-fun d!20157 () Bool)

(declare-fun res!42357 () Bool)

(declare-fun e!53197 () Bool)

(assert (=> d!20157 (=> res!42357 e!53197)))

(assert (=> d!20157 (= res!42357 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!20157 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3957 newMap!16) (mask!6299 newMap!16)) e!53197)))

(declare-fun b!81515 () Bool)

(declare-fun e!53199 () Bool)

(assert (=> b!81515 (= e!53197 e!53199)))

(declare-fun c!12869 () Bool)

(assert (=> b!81515 (= c!12869 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!81516 () Bool)

(declare-fun e!53198 () Bool)

(assert (=> b!81516 (= e!53199 e!53198)))

(declare-fun lt!38003 () (_ BitVec 64))

(assert (=> b!81516 (= lt!38003 (select (arr!1900 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!38004 () Unit!2350)

(assert (=> b!81516 (= lt!38004 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3957 newMap!16) lt!38003 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!81516 (arrayContainsKey!0 (_keys!3957 newMap!16) lt!38003 #b00000000000000000000000000000000)))

(declare-fun lt!38002 () Unit!2350)

(assert (=> b!81516 (= lt!38002 lt!38004)))

(declare-fun res!42358 () Bool)

(assert (=> b!81516 (= res!42358 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3957 newMap!16) (mask!6299 newMap!16)) (Found!251 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!81516 (=> (not res!42358) (not e!53198))))

(declare-fun b!81517 () Bool)

(declare-fun call!7602 () Bool)

(assert (=> b!81517 (= e!53198 call!7602)))

(declare-fun bm!7599 () Bool)

(assert (=> bm!7599 (= call!7602 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun b!81518 () Bool)

(assert (=> b!81518 (= e!53199 call!7602)))

(assert (= (and d!20157 (not res!42357)) b!81515))

(assert (= (and b!81515 c!12869) b!81516))

(assert (= (and b!81515 (not c!12869)) b!81518))

(assert (= (and b!81516 res!42358) b!81517))

(assert (= (or b!81517 b!81518) bm!7599))

(assert (=> b!81515 m!83449))

(assert (=> b!81515 m!83449))

(assert (=> b!81515 m!83453))

(assert (=> b!81516 m!83449))

(declare-fun m!83519 () Bool)

(assert (=> b!81516 m!83519))

(declare-fun m!83521 () Bool)

(assert (=> b!81516 m!83521))

(assert (=> b!81516 m!83449))

(declare-fun m!83523 () Bool)

(assert (=> b!81516 m!83523))

(declare-fun m!83525 () Bool)

(assert (=> bm!7599 m!83525))

(assert (=> bm!7518 d!20157))

(declare-fun d!20159 () Bool)

(declare-fun lt!38005 () Bool)

(assert (=> d!20159 (= lt!38005 (select (content!84 (toList!751 lt!37708)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!53201 () Bool)

(assert (=> d!20159 (= lt!38005 e!53201)))

(declare-fun res!42360 () Bool)

(assert (=> d!20159 (=> (not res!42360) (not e!53201))))

(assert (=> d!20159 (= res!42360 ((_ is Cons!1534) (toList!751 lt!37708)))))

(assert (=> d!20159 (= (contains!753 (toList!751 lt!37708) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!38005)))

(declare-fun b!81519 () Bool)

(declare-fun e!53200 () Bool)

(assert (=> b!81519 (= e!53201 e!53200)))

(declare-fun res!42359 () Bool)

(assert (=> b!81519 (=> res!42359 e!53200)))

(assert (=> b!81519 (= res!42359 (= (h!2123 (toList!751 lt!37708)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!81520 () Bool)

(assert (=> b!81520 (= e!53200 (contains!753 (t!5209 (toList!751 lt!37708)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!20159 res!42360) b!81519))

(assert (= (and b!81519 (not res!42359)) b!81520))

(declare-fun m!83527 () Bool)

(assert (=> d!20159 m!83527))

(declare-fun m!83529 () Bool)

(assert (=> d!20159 m!83529))

(declare-fun m!83531 () Bool)

(assert (=> b!81520 m!83531))

(assert (=> b!80962 d!20159))

(declare-fun d!20161 () Bool)

(assert (=> d!20161 (= ($colon$colon!69 e!52879 (ite c!12718 (h!2123 (toList!751 lt!37190)) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202)))) (Cons!1534 (ite c!12718 (h!2123 (toList!751 lt!37190)) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))) e!52879))))

(assert (=> bm!7535 d!20161))

(declare-fun d!20163 () Bool)

(assert (=> d!20163 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327))))

(declare-fun lt!38006 () Unit!2350)

(assert (=> d!20163 (= lt!38006 (choose!485 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327))))

(declare-fun e!53202 () Bool)

(assert (=> d!20163 e!53202))

(declare-fun res!42361 () Bool)

(assert (=> d!20163 (=> (not res!42361) (not e!53202))))

(assert (=> d!20163 (= res!42361 (isStrictlySorted!291 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)))))))

(assert (=> d!20163 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327) lt!38006)))

(declare-fun b!81521 () Bool)

(assert (=> b!81521 (= e!53202 (containsKey!141 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327))))

(assert (= (and d!20163 res!42361) b!81521))

(assert (=> d!20163 m!82567))

(assert (=> d!20163 m!82567))

(assert (=> d!20163 m!82569))

(declare-fun m!83533 () Bool)

(assert (=> d!20163 m!83533))

(declare-fun m!83535 () Bool)

(assert (=> d!20163 m!83535))

(assert (=> b!81521 m!82563))

(assert (=> b!80948 d!20163))

(declare-fun d!20165 () Bool)

(assert (=> d!20165 (= (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327)) (not (isEmpty!335 (getValueByKey!137 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327))))))

(declare-fun bs!3440 () Bool)

(assert (= bs!3440 d!20165))

(assert (=> bs!3440 m!82567))

(declare-fun m!83537 () Bool)

(assert (=> bs!3440 m!83537))

(assert (=> b!80948 d!20165))

(declare-fun b!81523 () Bool)

(declare-fun e!53203 () Option!143)

(declare-fun e!53204 () Option!143)

(assert (=> b!81523 (= e!53203 e!53204)))

(declare-fun c!12871 () Bool)

(assert (=> b!81523 (= c!12871 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)))) (not (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))))) lt!37327))))))

(declare-fun d!20167 () Bool)

(declare-fun c!12870 () Bool)

(assert (=> d!20167 (= c!12870 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))))) lt!37327)))))

(assert (=> d!20167 (= (getValueByKey!137 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327) e!53203)))

(declare-fun b!81525 () Bool)

(assert (=> b!81525 (= e!53204 None!141)))

(declare-fun b!81524 () Bool)

(assert (=> b!81524 (= e!53204 (getValueByKey!137 (t!5209 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)))) lt!37327))))

(declare-fun b!81522 () Bool)

(assert (=> b!81522 (= e!53203 (Some!142 (_2!1111 (h!2123 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)))))))))

(assert (= (and d!20167 c!12870) b!81522))

(assert (= (and d!20167 (not c!12870)) b!81523))

(assert (= (and b!81523 c!12871) b!81524))

(assert (= (and b!81523 (not c!12871)) b!81525))

(declare-fun m!83539 () Bool)

(assert (=> b!81524 m!83539))

(assert (=> b!80948 d!20167))

(assert (=> b!80882 d!19963))

(assert (=> b!80882 d!19965))

(declare-fun b!81527 () Bool)

(declare-fun e!53205 () Option!143)

(declare-fun e!53206 () Option!143)

(assert (=> b!81527 (= e!53205 e!53206)))

(declare-fun c!12873 () Bool)

(assert (=> b!81527 (= c!12873 (and ((_ is Cons!1534) (t!5209 lt!37282)) (not (= (_1!1111 (h!2123 (t!5209 lt!37282))) (_1!1111 lt!37202)))))))

(declare-fun d!20169 () Bool)

(declare-fun c!12872 () Bool)

(assert (=> d!20169 (= c!12872 (and ((_ is Cons!1534) (t!5209 lt!37282)) (= (_1!1111 (h!2123 (t!5209 lt!37282))) (_1!1111 lt!37202))))))

(assert (=> d!20169 (= (getValueByKey!137 (t!5209 lt!37282) (_1!1111 lt!37202)) e!53205)))

(declare-fun b!81529 () Bool)

(assert (=> b!81529 (= e!53206 None!141)))

(declare-fun b!81528 () Bool)

(assert (=> b!81528 (= e!53206 (getValueByKey!137 (t!5209 (t!5209 lt!37282)) (_1!1111 lt!37202)))))

(declare-fun b!81526 () Bool)

(assert (=> b!81526 (= e!53205 (Some!142 (_2!1111 (h!2123 (t!5209 lt!37282)))))))

(assert (= (and d!20169 c!12872) b!81526))

(assert (= (and d!20169 (not c!12872)) b!81527))

(assert (= (and b!81527 c!12873) b!81528))

(assert (= (and b!81527 (not c!12873)) b!81529))

(declare-fun m!83541 () Bool)

(assert (=> b!81528 m!83541))

(assert (=> b!80974 d!20169))

(declare-fun d!20171 () Bool)

(assert (=> d!20171 (= (get!1196 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2609 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!80632 d!20171))

(declare-fun d!20173 () Bool)

(declare-fun lt!38007 () Bool)

(assert (=> d!20173 (= lt!38007 (select (content!84 lt!37275) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun e!53208 () Bool)

(assert (=> d!20173 (= lt!38007 e!53208)))

(declare-fun res!42363 () Bool)

(assert (=> d!20173 (=> (not res!42363) (not e!53208))))

(assert (=> d!20173 (= res!42363 ((_ is Cons!1534) lt!37275))))

(assert (=> d!20173 (= (contains!753 lt!37275 (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))) lt!38007)))

(declare-fun b!81530 () Bool)

(declare-fun e!53207 () Bool)

(assert (=> b!81530 (= e!53208 e!53207)))

(declare-fun res!42362 () Bool)

(assert (=> b!81530 (=> res!42362 e!53207)))

(assert (=> b!81530 (= res!42362 (= (h!2123 lt!37275) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun b!81531 () Bool)

(assert (=> b!81531 (= e!53207 (contains!753 (t!5209 lt!37275) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(assert (= (and d!20173 res!42363) b!81530))

(assert (= (and b!81530 (not res!42362)) b!81531))

(declare-fun m!83543 () Bool)

(assert (=> d!20173 m!83543))

(declare-fun m!83545 () Bool)

(assert (=> d!20173 m!83545))

(declare-fun m!83547 () Bool)

(assert (=> b!81531 m!83547))

(assert (=> b!80735 d!20173))

(declare-fun d!20175 () Bool)

(declare-fun e!53209 () Bool)

(assert (=> d!20175 e!53209))

(declare-fun res!42364 () Bool)

(assert (=> d!20175 (=> res!42364 e!53209)))

(declare-fun lt!38010 () Bool)

(assert (=> d!20175 (= res!42364 (not lt!38010))))

(declare-fun lt!38009 () Bool)

(assert (=> d!20175 (= lt!38010 lt!38009)))

(declare-fun lt!38008 () Unit!2350)

(declare-fun e!53210 () Unit!2350)

(assert (=> d!20175 (= lt!38008 e!53210)))

(declare-fun c!12874 () Bool)

(assert (=> d!20175 (= c!12874 lt!38009)))

(assert (=> d!20175 (= lt!38009 (containsKey!141 (toList!751 lt!37637) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20175 (= (contains!750 lt!37637 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38010)))

(declare-fun b!81532 () Bool)

(declare-fun lt!38011 () Unit!2350)

(assert (=> b!81532 (= e!53210 lt!38011)))

(assert (=> b!81532 (= lt!38011 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37637) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81532 (isDefined!91 (getValueByKey!137 (toList!751 lt!37637) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81533 () Bool)

(declare-fun Unit!2394 () Unit!2350)

(assert (=> b!81533 (= e!53210 Unit!2394)))

(declare-fun b!81534 () Bool)

(assert (=> b!81534 (= e!53209 (isDefined!91 (getValueByKey!137 (toList!751 lt!37637) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20175 c!12874) b!81532))

(assert (= (and d!20175 (not c!12874)) b!81533))

(assert (= (and d!20175 (not res!42364)) b!81534))

(declare-fun m!83549 () Bool)

(assert (=> d!20175 m!83549))

(declare-fun m!83551 () Bool)

(assert (=> b!81532 m!83551))

(declare-fun m!83553 () Bool)

(assert (=> b!81532 m!83553))

(assert (=> b!81532 m!83553))

(declare-fun m!83555 () Bool)

(assert (=> b!81532 m!83555))

(assert (=> b!81534 m!83553))

(assert (=> b!81534 m!83553))

(assert (=> b!81534 m!83555))

(assert (=> bm!7524 d!20175))

(declare-fun d!20177 () Bool)

(declare-fun e!53211 () Bool)

(assert (=> d!20177 e!53211))

(declare-fun res!42365 () Bool)

(assert (=> d!20177 (=> res!42365 e!53211)))

(declare-fun lt!38014 () Bool)

(assert (=> d!20177 (= res!42365 (not lt!38014))))

(declare-fun lt!38013 () Bool)

(assert (=> d!20177 (= lt!38014 lt!38013)))

(declare-fun lt!38012 () Unit!2350)

(declare-fun e!53212 () Unit!2350)

(assert (=> d!20177 (= lt!38012 e!53212)))

(declare-fun c!12875 () Bool)

(assert (=> d!20177 (= c!12875 lt!38013)))

(assert (=> d!20177 (= lt!38013 (containsKey!141 (toList!751 lt!37738) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20177 (= (contains!750 lt!37738 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38014)))

(declare-fun b!81535 () Bool)

(declare-fun lt!38015 () Unit!2350)

(assert (=> b!81535 (= e!53212 lt!38015)))

(assert (=> b!81535 (= lt!38015 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37738) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> b!81535 (isDefined!91 (getValueByKey!137 (toList!751 lt!37738) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81536 () Bool)

(declare-fun Unit!2395 () Unit!2350)

(assert (=> b!81536 (= e!53212 Unit!2395)))

(declare-fun b!81537 () Bool)

(assert (=> b!81537 (= e!53211 (isDefined!91 (getValueByKey!137 (toList!751 lt!37738) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20177 c!12875) b!81535))

(assert (= (and d!20177 (not c!12875)) b!81536))

(assert (= (and d!20177 (not res!42365)) b!81537))

(declare-fun m!83557 () Bool)

(assert (=> d!20177 m!83557))

(declare-fun m!83559 () Bool)

(assert (=> b!81535 m!83559))

(assert (=> b!81535 m!82701))

(assert (=> b!81535 m!82701))

(declare-fun m!83561 () Bool)

(assert (=> b!81535 m!83561))

(assert (=> b!81537 m!82701))

(assert (=> b!81537 m!82701))

(assert (=> b!81537 m!83561))

(assert (=> d!19857 d!20177))

(declare-fun b!81539 () Bool)

(declare-fun e!53213 () Option!143)

(declare-fun e!53214 () Option!143)

(assert (=> b!81539 (= e!53213 e!53214)))

(declare-fun c!12877 () Bool)

(assert (=> b!81539 (= c!12877 (and ((_ is Cons!1534) lt!37735) (not (= (_1!1111 (h!2123 lt!37735)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!12876 () Bool)

(declare-fun d!20179 () Bool)

(assert (=> d!20179 (= c!12876 (and ((_ is Cons!1534) lt!37735) (= (_1!1111 (h!2123 lt!37735)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20179 (= (getValueByKey!137 lt!37735 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) e!53213)))

(declare-fun b!81541 () Bool)

(assert (=> b!81541 (= e!53214 None!141)))

(declare-fun b!81540 () Bool)

(assert (=> b!81540 (= e!53214 (getValueByKey!137 (t!5209 lt!37735) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81538 () Bool)

(assert (=> b!81538 (= e!53213 (Some!142 (_2!1111 (h!2123 lt!37735))))))

(assert (= (and d!20179 c!12876) b!81538))

(assert (= (and d!20179 (not c!12876)) b!81539))

(assert (= (and b!81539 c!12877) b!81540))

(assert (= (and b!81539 (not c!12877)) b!81541))

(declare-fun m!83563 () Bool)

(assert (=> b!81540 m!83563))

(assert (=> d!19857 d!20179))

(declare-fun d!20181 () Bool)

(assert (=> d!20181 (= (getValueByKey!137 lt!37735 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!38016 () Unit!2350)

(assert (=> d!20181 (= lt!38016 (choose!478 lt!37735 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun e!53215 () Bool)

(assert (=> d!20181 e!53215))

(declare-fun res!42366 () Bool)

(assert (=> d!20181 (=> (not res!42366) (not e!53215))))

(assert (=> d!20181 (= res!42366 (isStrictlySorted!291 lt!37735))))

(assert (=> d!20181 (= (lemmaContainsTupThenGetReturnValue!56 lt!37735 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38016)))

(declare-fun b!81542 () Bool)

(declare-fun res!42367 () Bool)

(assert (=> b!81542 (=> (not res!42367) (not e!53215))))

(assert (=> b!81542 (= res!42367 (containsKey!141 lt!37735 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81543 () Bool)

(assert (=> b!81543 (= e!53215 (contains!753 lt!37735 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20181 res!42366) b!81542))

(assert (= (and b!81542 res!42367) b!81543))

(assert (=> d!20181 m!82695))

(declare-fun m!83565 () Bool)

(assert (=> d!20181 m!83565))

(declare-fun m!83567 () Bool)

(assert (=> d!20181 m!83567))

(declare-fun m!83569 () Bool)

(assert (=> b!81542 m!83569))

(declare-fun m!83571 () Bool)

(assert (=> b!81543 m!83571))

(assert (=> d!19857 d!20181))

(declare-fun d!20183 () Bool)

(declare-fun e!53217 () Bool)

(assert (=> d!20183 e!53217))

(declare-fun res!42368 () Bool)

(assert (=> d!20183 (=> (not res!42368) (not e!53217))))

(declare-fun lt!38017 () List!1538)

(assert (=> d!20183 (= res!42368 (isStrictlySorted!291 lt!38017))))

(declare-fun e!53216 () List!1538)

(assert (=> d!20183 (= lt!38017 e!53216)))

(declare-fun c!12881 () Bool)

(assert (=> d!20183 (= c!12881 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (bvslt (_1!1111 (h!2123 (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20183 (isStrictlySorted!291 (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!20183 (= (insertStrictlySorted!58 (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38017)))

(declare-fun b!81544 () Bool)

(assert (=> b!81544 (= e!53217 (contains!753 lt!38017 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun bm!7600 () Bool)

(declare-fun call!7603 () List!1538)

(declare-fun call!7604 () List!1538)

(assert (=> bm!7600 (= call!7603 call!7604)))

(declare-fun b!81545 () Bool)

(declare-fun res!42369 () Bool)

(assert (=> b!81545 (=> (not res!42369) (not e!53217))))

(assert (=> b!81545 (= res!42369 (containsKey!141 lt!38017 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun e!53219 () List!1538)

(declare-fun b!81546 () Bool)

(assert (=> b!81546 (= e!53219 (insertStrictlySorted!58 (t!5209 (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81547 () Bool)

(assert (=> b!81547 (= e!53216 call!7604)))

(declare-fun bm!7601 () Bool)

(assert (=> bm!7601 (= call!7604 ($colon$colon!69 e!53219 (ite c!12881 (h!2123 (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!12879 () Bool)

(assert (=> bm!7601 (= c!12879 c!12881)))

(declare-fun b!81548 () Bool)

(declare-fun c!12878 () Bool)

(declare-fun c!12880 () Bool)

(assert (=> b!81548 (= e!53219 (ite c!12878 (t!5209 (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (ite c!12880 (Cons!1534 (h!2123 (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (t!5209 (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))) Nil!1535)))))

(declare-fun b!81549 () Bool)

(declare-fun e!53220 () List!1538)

(assert (=> b!81549 (= e!53220 call!7603)))

(declare-fun b!81550 () Bool)

(declare-fun e!53218 () List!1538)

(declare-fun call!7605 () List!1538)

(assert (=> b!81550 (= e!53218 call!7605)))

(declare-fun b!81551 () Bool)

(assert (=> b!81551 (= c!12880 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (bvsgt (_1!1111 (h!2123 (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> b!81551 (= e!53220 e!53218)))

(declare-fun b!81552 () Bool)

(assert (=> b!81552 (= e!53218 call!7605)))

(declare-fun bm!7602 () Bool)

(assert (=> bm!7602 (= call!7605 call!7603)))

(declare-fun b!81553 () Bool)

(assert (=> b!81553 (= e!53216 e!53220)))

(assert (=> b!81553 (= c!12878 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37196 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20183 c!12881) b!81547))

(assert (= (and d!20183 (not c!12881)) b!81553))

(assert (= (and b!81553 c!12878) b!81549))

(assert (= (and b!81553 (not c!12878)) b!81551))

(assert (= (and b!81551 c!12880) b!81550))

(assert (= (and b!81551 (not c!12880)) b!81552))

(assert (= (or b!81550 b!81552) bm!7602))

(assert (= (or b!81549 bm!7602) bm!7600))

(assert (= (or b!81547 bm!7600) bm!7601))

(assert (= (and bm!7601 c!12879) b!81546))

(assert (= (and bm!7601 (not c!12879)) b!81548))

(assert (= (and d!20183 res!42368) b!81545))

(assert (= (and b!81545 res!42369) b!81544))

(declare-fun m!83573 () Bool)

(assert (=> b!81545 m!83573))

(declare-fun m!83575 () Bool)

(assert (=> bm!7601 m!83575))

(declare-fun m!83577 () Bool)

(assert (=> d!20183 m!83577))

(declare-fun m!83579 () Bool)

(assert (=> d!20183 m!83579))

(declare-fun m!83581 () Bool)

(assert (=> b!81546 m!83581))

(declare-fun m!83583 () Bool)

(assert (=> b!81544 m!83583))

(assert (=> d!19857 d!20183))

(declare-fun d!20185 () Bool)

(declare-fun res!42370 () Bool)

(declare-fun e!53221 () Bool)

(assert (=> d!20185 (=> res!42370 e!53221)))

(assert (=> d!20185 (= res!42370 (and ((_ is Cons!1534) (toList!751 lt!37294)) (= (_1!1111 (h!2123 (toList!751 lt!37294))) (_1!1111 lt!37202))))))

(assert (=> d!20185 (= (containsKey!141 (toList!751 lt!37294) (_1!1111 lt!37202)) e!53221)))

(declare-fun b!81554 () Bool)

(declare-fun e!53222 () Bool)

(assert (=> b!81554 (= e!53221 e!53222)))

(declare-fun res!42371 () Bool)

(assert (=> b!81554 (=> (not res!42371) (not e!53222))))

(assert (=> b!81554 (= res!42371 (and (or (not ((_ is Cons!1534) (toList!751 lt!37294))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37294))) (_1!1111 lt!37202))) ((_ is Cons!1534) (toList!751 lt!37294)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37294))) (_1!1111 lt!37202))))))

(declare-fun b!81555 () Bool)

(assert (=> b!81555 (= e!53222 (containsKey!141 (t!5209 (toList!751 lt!37294)) (_1!1111 lt!37202)))))

(assert (= (and d!20185 (not res!42370)) b!81554))

(assert (= (and b!81554 res!42371) b!81555))

(declare-fun m!83585 () Bool)

(assert (=> b!81555 m!83585))

(assert (=> d!19701 d!20185))

(declare-fun lt!38018 () Bool)

(declare-fun d!20187 () Bool)

(assert (=> d!20187 (= lt!38018 (select (content!84 (toList!751 lt!37564)) (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!53224 () Bool)

(assert (=> d!20187 (= lt!38018 e!53224)))

(declare-fun res!42373 () Bool)

(assert (=> d!20187 (=> (not res!42373) (not e!53224))))

(assert (=> d!20187 (= res!42373 ((_ is Cons!1534) (toList!751 lt!37564)))))

(assert (=> d!20187 (= (contains!753 (toList!751 lt!37564) (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!38018)))

(declare-fun b!81556 () Bool)

(declare-fun e!53223 () Bool)

(assert (=> b!81556 (= e!53224 e!53223)))

(declare-fun res!42372 () Bool)

(assert (=> b!81556 (=> res!42372 e!53223)))

(assert (=> b!81556 (= res!42372 (= (h!2123 (toList!751 lt!37564)) (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!81557 () Bool)

(assert (=> b!81557 (= e!53223 (contains!753 (t!5209 (toList!751 lt!37564)) (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!20187 res!42373) b!81556))

(assert (= (and b!81556 (not res!42372)) b!81557))

(declare-fun m!83587 () Bool)

(assert (=> d!20187 m!83587))

(declare-fun m!83589 () Bool)

(assert (=> d!20187 m!83589))

(declare-fun m!83591 () Bool)

(assert (=> b!81557 m!83591))

(assert (=> b!80783 d!20187))

(declare-fun d!20189 () Bool)

(assert (=> d!20189 (isDefined!91 (getValueByKey!137 (toList!751 lt!37285) (_1!1111 lt!37202)))))

(declare-fun lt!38019 () Unit!2350)

(assert (=> d!20189 (= lt!38019 (choose!485 (toList!751 lt!37285) (_1!1111 lt!37202)))))

(declare-fun e!53225 () Bool)

(assert (=> d!20189 e!53225))

(declare-fun res!42374 () Bool)

(assert (=> d!20189 (=> (not res!42374) (not e!53225))))

(assert (=> d!20189 (= res!42374 (isStrictlySorted!291 (toList!751 lt!37285)))))

(assert (=> d!20189 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37285) (_1!1111 lt!37202)) lt!38019)))

(declare-fun b!81558 () Bool)

(assert (=> b!81558 (= e!53225 (containsKey!141 (toList!751 lt!37285) (_1!1111 lt!37202)))))

(assert (= (and d!20189 res!42374) b!81558))

(assert (=> d!20189 m!81769))

(assert (=> d!20189 m!81769))

(assert (=> d!20189 m!82645))

(declare-fun m!83593 () Bool)

(assert (=> d!20189 m!83593))

(declare-fun m!83595 () Bool)

(assert (=> d!20189 m!83595))

(assert (=> b!81558 m!82641))

(assert (=> b!80969 d!20189))

(declare-fun d!20191 () Bool)

(assert (=> d!20191 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37285) (_1!1111 lt!37202))) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37285) (_1!1111 lt!37202)))))))

(declare-fun bs!3441 () Bool)

(assert (= bs!3441 d!20191))

(assert (=> bs!3441 m!81769))

(declare-fun m!83597 () Bool)

(assert (=> bs!3441 m!83597))

(assert (=> b!80969 d!20191))

(assert (=> b!80969 d!19903))

(declare-fun d!20193 () Bool)

(declare-fun c!12882 () Bool)

(assert (=> d!20193 (= c!12882 ((_ is Nil!1535) (toList!751 lt!37302)))))

(declare-fun e!53226 () (InoxSet tuple2!2202))

(assert (=> d!20193 (= (content!84 (toList!751 lt!37302)) e!53226)))

(declare-fun b!81559 () Bool)

(assert (=> b!81559 (= e!53226 ((as const (Array tuple2!2202 Bool)) false))))

(declare-fun b!81560 () Bool)

(assert (=> b!81560 (= e!53226 ((_ map or) (store ((as const (Array tuple2!2202 Bool)) false) (h!2123 (toList!751 lt!37302)) true) (content!84 (t!5209 (toList!751 lt!37302)))))))

(assert (= (and d!20193 c!12882) b!81559))

(assert (= (and d!20193 (not c!12882)) b!81560))

(declare-fun m!83599 () Bool)

(assert (=> b!81560 m!83599))

(assert (=> b!81560 m!83465))

(assert (=> d!19803 d!20193))

(declare-fun d!20195 () Bool)

(assert (=> d!20195 (isDefined!91 (getValueByKey!137 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))

(declare-fun lt!38020 () Unit!2350)

(assert (=> d!20195 (= lt!38020 (choose!485 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))

(declare-fun e!53227 () Bool)

(assert (=> d!20195 e!53227))

(declare-fun res!42375 () Bool)

(assert (=> d!20195 (=> (not res!42375) (not e!53227))))

(assert (=> d!20195 (= res!42375 (isStrictlySorted!291 (toList!751 call!7478)))))

(assert (=> d!20195 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))) lt!38020)))

(declare-fun b!81561 () Bool)

(assert (=> b!81561 (= e!53227 (containsKey!141 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))

(assert (= (and d!20195 res!42375) b!81561))

(assert (=> d!20195 m!82589))

(assert (=> d!20195 m!82589))

(assert (=> d!20195 m!82591))

(declare-fun m!83601 () Bool)

(assert (=> d!20195 m!83601))

(declare-fun m!83603 () Bool)

(assert (=> d!20195 m!83603))

(assert (=> b!81561 m!82585))

(assert (=> b!80958 d!20195))

(declare-fun d!20197 () Bool)

(assert (=> d!20197 (= (isDefined!91 (getValueByKey!137 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470))))) (not (isEmpty!335 (getValueByKey!137 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))))

(declare-fun bs!3442 () Bool)

(assert (= bs!3442 d!20197))

(assert (=> bs!3442 m!82589))

(declare-fun m!83605 () Bool)

(assert (=> bs!3442 m!83605))

(assert (=> b!80958 d!20197))

(declare-fun b!81563 () Bool)

(declare-fun e!53228 () Option!143)

(declare-fun e!53229 () Option!143)

(assert (=> b!81563 (= e!53228 e!53229)))

(declare-fun c!12884 () Bool)

(assert (=> b!81563 (= c!12884 (and ((_ is Cons!1534) (toList!751 call!7478)) (not (= (_1!1111 (h!2123 (toList!751 call!7478))) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))))

(declare-fun c!12883 () Bool)

(declare-fun d!20199 () Bool)

(assert (=> d!20199 (= c!12883 (and ((_ is Cons!1534) (toList!751 call!7478)) (= (_1!1111 (h!2123 (toList!751 call!7478))) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470))))))))

(assert (=> d!20199 (= (getValueByKey!137 (toList!751 call!7478) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))) e!53228)))

(declare-fun b!81565 () Bool)

(assert (=> b!81565 (= e!53229 None!141)))

(declare-fun b!81564 () Bool)

(assert (=> b!81564 (= e!53229 (getValueByKey!137 (t!5209 (toList!751 call!7478)) (ite c!12612 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))

(declare-fun b!81562 () Bool)

(assert (=> b!81562 (= e!53228 (Some!142 (_2!1111 (h!2123 (toList!751 call!7478)))))))

(assert (= (and d!20199 c!12883) b!81562))

(assert (= (and d!20199 (not c!12883)) b!81563))

(assert (= (and b!81563 c!12884) b!81564))

(assert (= (and b!81563 (not c!12884)) b!81565))

(declare-fun m!83607 () Bool)

(assert (=> b!81564 m!83607))

(assert (=> b!80958 d!20199))

(declare-fun d!20201 () Bool)

(declare-fun res!42376 () Bool)

(declare-fun e!53230 () Bool)

(assert (=> d!20201 (=> res!42376 e!53230)))

(assert (=> d!20201 (= res!42376 (and ((_ is Cons!1534) lt!37287) (= (_1!1111 (h!2123 lt!37287)) (_1!1111 lt!37188))))))

(assert (=> d!20201 (= (containsKey!141 lt!37287 (_1!1111 lt!37188)) e!53230)))

(declare-fun b!81566 () Bool)

(declare-fun e!53231 () Bool)

(assert (=> b!81566 (= e!53230 e!53231)))

(declare-fun res!42377 () Bool)

(assert (=> b!81566 (=> (not res!42377) (not e!53231))))

(assert (=> b!81566 (= res!42377 (and (or (not ((_ is Cons!1534) lt!37287)) (bvsle (_1!1111 (h!2123 lt!37287)) (_1!1111 lt!37188))) ((_ is Cons!1534) lt!37287) (bvslt (_1!1111 (h!2123 lt!37287)) (_1!1111 lt!37188))))))

(declare-fun b!81567 () Bool)

(assert (=> b!81567 (= e!53231 (containsKey!141 (t!5209 lt!37287) (_1!1111 lt!37188)))))

(assert (= (and d!20201 (not res!42376)) b!81566))

(assert (= (and b!81566 res!42377) b!81567))

(declare-fun m!83609 () Bool)

(assert (=> b!81567 m!83609))

(assert (=> b!80655 d!20201))

(declare-fun d!20203 () Bool)

(assert (=> d!20203 (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38021 () Unit!2350)

(assert (=> d!20203 (= lt!38021 (choose!485 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53232 () Bool)

(assert (=> d!20203 e!53232))

(declare-fun res!42378 () Bool)

(assert (=> d!20203 (=> (not res!42378) (not e!53232))))

(assert (=> d!20203 (= res!42378 (isStrictlySorted!291 (toList!751 lt!37385)))))

(assert (=> d!20203 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000) lt!38021)))

(declare-fun b!81568 () Bool)

(assert (=> b!81568 (= e!53232 (containsKey!141 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20203 res!42378) b!81568))

(assert (=> d!20203 m!82313))

(assert (=> d!20203 m!82313))

(assert (=> d!20203 m!82315))

(declare-fun m!83611 () Bool)

(assert (=> d!20203 m!83611))

(assert (=> d!20203 m!83033))

(assert (=> b!81568 m!82309))

(assert (=> b!80842 d!20203))

(declare-fun d!20205 () Bool)

(assert (=> d!20205 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3443 () Bool)

(assert (= bs!3443 d!20205))

(assert (=> bs!3443 m!82313))

(declare-fun m!83613 () Bool)

(assert (=> bs!3443 m!83613))

(assert (=> b!80842 d!20205))

(declare-fun b!81570 () Bool)

(declare-fun e!53233 () Option!143)

(declare-fun e!53234 () Option!143)

(assert (=> b!81570 (= e!53233 e!53234)))

(declare-fun c!12886 () Bool)

(assert (=> b!81570 (= c!12886 (and ((_ is Cons!1534) (toList!751 lt!37385)) (not (= (_1!1111 (h!2123 (toList!751 lt!37385))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!20207 () Bool)

(declare-fun c!12885 () Bool)

(assert (=> d!20207 (= c!12885 (and ((_ is Cons!1534) (toList!751 lt!37385)) (= (_1!1111 (h!2123 (toList!751 lt!37385))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20207 (= (getValueByKey!137 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000) e!53233)))

(declare-fun b!81572 () Bool)

(assert (=> b!81572 (= e!53234 None!141)))

(declare-fun b!81571 () Bool)

(assert (=> b!81571 (= e!53234 (getValueByKey!137 (t!5209 (toList!751 lt!37385)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81569 () Bool)

(assert (=> b!81569 (= e!53233 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37385)))))))

(assert (= (and d!20207 c!12885) b!81569))

(assert (= (and d!20207 (not c!12885)) b!81570))

(assert (= (and b!81570 c!12886) b!81571))

(assert (= (and b!81570 (not c!12886)) b!81572))

(declare-fun m!83615 () Bool)

(assert (=> b!81571 m!83615))

(assert (=> b!80842 d!20207))

(declare-fun d!20209 () Bool)

(declare-fun e!53235 () Bool)

(assert (=> d!20209 e!53235))

(declare-fun res!42379 () Bool)

(assert (=> d!20209 (=> res!42379 e!53235)))

(declare-fun lt!38024 () Bool)

(assert (=> d!20209 (= res!42379 (not lt!38024))))

(declare-fun lt!38023 () Bool)

(assert (=> d!20209 (= lt!38024 lt!38023)))

(declare-fun lt!38022 () Unit!2350)

(declare-fun e!53236 () Unit!2350)

(assert (=> d!20209 (= lt!38022 e!53236)))

(declare-fun c!12887 () Bool)

(assert (=> d!20209 (= c!12887 lt!38023)))

(assert (=> d!20209 (= lt!38023 (containsKey!141 (toList!751 lt!37623) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20209 (= (contains!750 lt!37623 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) lt!38024)))

(declare-fun b!81573 () Bool)

(declare-fun lt!38025 () Unit!2350)

(assert (=> b!81573 (= e!53236 lt!38025)))

(assert (=> b!81573 (= lt!38025 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37623) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> b!81573 (isDefined!91 (getValueByKey!137 (toList!751 lt!37623) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!81574 () Bool)

(declare-fun Unit!2396 () Unit!2350)

(assert (=> b!81574 (= e!53236 Unit!2396)))

(declare-fun b!81575 () Bool)

(assert (=> b!81575 (= e!53235 (isDefined!91 (getValueByKey!137 (toList!751 lt!37623) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(assert (= (and d!20209 c!12887) b!81573))

(assert (= (and d!20209 (not c!12887)) b!81574))

(assert (= (and d!20209 (not res!42379)) b!81575))

(declare-fun m!83617 () Bool)

(assert (=> d!20209 m!83617))

(declare-fun m!83619 () Bool)

(assert (=> b!81573 m!83619))

(assert (=> b!81573 m!82397))

(assert (=> b!81573 m!82397))

(declare-fun m!83621 () Bool)

(assert (=> b!81573 m!83621))

(assert (=> b!81575 m!82397))

(assert (=> b!81575 m!82397))

(assert (=> b!81575 m!83621))

(assert (=> d!19799 d!20209))

(declare-fun b!81577 () Bool)

(declare-fun e!53237 () Option!143)

(declare-fun e!53238 () Option!143)

(assert (=> b!81577 (= e!53237 e!53238)))

(declare-fun c!12889 () Bool)

(assert (=> b!81577 (= c!12889 (and ((_ is Cons!1534) lt!37620) (not (= (_1!1111 (h!2123 lt!37620)) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))))

(declare-fun d!20211 () Bool)

(declare-fun c!12888 () Bool)

(assert (=> d!20211 (= c!12888 (and ((_ is Cons!1534) lt!37620) (= (_1!1111 (h!2123 lt!37620)) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(assert (=> d!20211 (= (getValueByKey!137 lt!37620 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) e!53237)))

(declare-fun b!81579 () Bool)

(assert (=> b!81579 (= e!53238 None!141)))

(declare-fun b!81578 () Bool)

(assert (=> b!81578 (= e!53238 (getValueByKey!137 (t!5209 lt!37620) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!81576 () Bool)

(assert (=> b!81576 (= e!53237 (Some!142 (_2!1111 (h!2123 lt!37620))))))

(assert (= (and d!20211 c!12888) b!81576))

(assert (= (and d!20211 (not c!12888)) b!81577))

(assert (= (and b!81577 c!12889) b!81578))

(assert (= (and b!81577 (not c!12889)) b!81579))

(declare-fun m!83623 () Bool)

(assert (=> b!81578 m!83623))

(assert (=> d!19799 d!20211))

(declare-fun d!20213 () Bool)

(assert (=> d!20213 (= (getValueByKey!137 lt!37620 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (Some!142 (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun lt!38026 () Unit!2350)

(assert (=> d!20213 (= lt!38026 (choose!478 lt!37620 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun e!53239 () Bool)

(assert (=> d!20213 e!53239))

(declare-fun res!42380 () Bool)

(assert (=> d!20213 (=> (not res!42380) (not e!53239))))

(assert (=> d!20213 (= res!42380 (isStrictlySorted!291 lt!37620))))

(assert (=> d!20213 (= (lemmaContainsTupThenGetReturnValue!56 lt!37620 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) lt!38026)))

(declare-fun b!81580 () Bool)

(declare-fun res!42381 () Bool)

(assert (=> b!81580 (=> (not res!42381) (not e!53239))))

(assert (=> b!81580 (= res!42381 (containsKey!141 lt!37620 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!81581 () Bool)

(assert (=> b!81581 (= e!53239 (contains!753 lt!37620 (tuple2!2203 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(assert (= (and d!20213 res!42380) b!81580))

(assert (= (and b!81580 res!42381) b!81581))

(assert (=> d!20213 m!82391))

(declare-fun m!83625 () Bool)

(assert (=> d!20213 m!83625))

(declare-fun m!83627 () Bool)

(assert (=> d!20213 m!83627))

(declare-fun m!83629 () Bool)

(assert (=> b!81580 m!83629))

(declare-fun m!83631 () Bool)

(assert (=> b!81581 m!83631))

(assert (=> d!19799 d!20213))

(declare-fun d!20215 () Bool)

(declare-fun e!53241 () Bool)

(assert (=> d!20215 e!53241))

(declare-fun res!42382 () Bool)

(assert (=> d!20215 (=> (not res!42382) (not e!53241))))

(declare-fun lt!38027 () List!1538)

(assert (=> d!20215 (= res!42382 (isStrictlySorted!291 lt!38027))))

(declare-fun e!53240 () List!1538)

(assert (=> d!20215 (= lt!38027 e!53240)))

(declare-fun c!12893 () Bool)

(assert (=> d!20215 (= c!12893 (and ((_ is Cons!1534) (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415)))) (bvslt (_1!1111 (h!2123 (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415))))) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(assert (=> d!20215 (isStrictlySorted!291 (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415))))))

(assert (=> d!20215 (= (insertStrictlySorted!58 (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415))) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) lt!38027)))

(declare-fun b!81582 () Bool)

(assert (=> b!81582 (= e!53241 (contains!753 lt!38027 (tuple2!2203 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun bm!7603 () Bool)

(declare-fun call!7606 () List!1538)

(declare-fun call!7607 () List!1538)

(assert (=> bm!7603 (= call!7606 call!7607)))

(declare-fun b!81583 () Bool)

(declare-fun res!42383 () Bool)

(assert (=> b!81583 (=> (not res!42383) (not e!53241))))

(assert (=> b!81583 (= res!42383 (containsKey!141 lt!38027 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!81584 () Bool)

(declare-fun e!53243 () List!1538)

(assert (=> b!81584 (= e!53243 (insertStrictlySorted!58 (t!5209 (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415)))) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun b!81585 () Bool)

(assert (=> b!81585 (= e!53240 call!7607)))

(declare-fun bm!7604 () Bool)

(assert (=> bm!7604 (= call!7607 ($colon$colon!69 e!53243 (ite c!12893 (h!2123 (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415)))) (tuple2!2203 (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_2!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))))

(declare-fun c!12891 () Bool)

(assert (=> bm!7604 (= c!12891 c!12893)))

(declare-fun c!12890 () Bool)

(declare-fun b!81586 () Bool)

(declare-fun c!12892 () Bool)

(assert (=> b!81586 (= e!53243 (ite c!12890 (t!5209 (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415)))) (ite c!12892 (Cons!1534 (h!2123 (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415)))) (t!5209 (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415))))) Nil!1535)))))

(declare-fun b!81587 () Bool)

(declare-fun e!53244 () List!1538)

(assert (=> b!81587 (= e!53244 call!7606)))

(declare-fun b!81588 () Bool)

(declare-fun e!53242 () List!1538)

(declare-fun call!7608 () List!1538)

(assert (=> b!81588 (= e!53242 call!7608)))

(declare-fun b!81589 () Bool)

(assert (=> b!81589 (= c!12892 (and ((_ is Cons!1534) (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415)))) (bvsgt (_1!1111 (h!2123 (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415))))) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(assert (=> b!81589 (= e!53244 e!53242)))

(declare-fun b!81590 () Bool)

(assert (=> b!81590 (= e!53242 call!7608)))

(declare-fun bm!7605 () Bool)

(assert (=> bm!7605 (= call!7608 call!7606)))

(declare-fun b!81591 () Bool)

(assert (=> b!81591 (= e!53240 e!53244)))

(assert (=> b!81591 (= c!12890 (and ((_ is Cons!1534) (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415)))) (= (_1!1111 (h!2123 (toList!751 (ite c!12578 call!7418 (ite c!12579 call!7419 call!7415))))) (_1!1111 (ite (or c!12578 c!12579) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(assert (= (and d!20215 c!12893) b!81585))

(assert (= (and d!20215 (not c!12893)) b!81591))

(assert (= (and b!81591 c!12890) b!81587))

(assert (= (and b!81591 (not c!12890)) b!81589))

(assert (= (and b!81589 c!12892) b!81588))

(assert (= (and b!81589 (not c!12892)) b!81590))

(assert (= (or b!81588 b!81590) bm!7605))

(assert (= (or b!81587 bm!7605) bm!7603))

(assert (= (or b!81585 bm!7603) bm!7604))

(assert (= (and bm!7604 c!12891) b!81584))

(assert (= (and bm!7604 (not c!12891)) b!81586))

(assert (= (and d!20215 res!42382) b!81583))

(assert (= (and b!81583 res!42383) b!81582))

(declare-fun m!83633 () Bool)

(assert (=> b!81583 m!83633))

(declare-fun m!83635 () Bool)

(assert (=> bm!7604 m!83635))

(declare-fun m!83637 () Bool)

(assert (=> d!20215 m!83637))

(declare-fun m!83639 () Bool)

(assert (=> d!20215 m!83639))

(declare-fun m!83641 () Bool)

(assert (=> b!81584 m!83641))

(declare-fun m!83643 () Bool)

(assert (=> b!81582 m!83643))

(assert (=> d!19799 d!20215))

(declare-fun d!20217 () Bool)

(declare-fun e!53245 () Bool)

(assert (=> d!20217 e!53245))

(declare-fun res!42384 () Bool)

(assert (=> d!20217 (=> res!42384 e!53245)))

(declare-fun lt!38030 () Bool)

(assert (=> d!20217 (= res!42384 (not lt!38030))))

(declare-fun lt!38029 () Bool)

(assert (=> d!20217 (= lt!38030 lt!38029)))

(declare-fun lt!38028 () Unit!2350)

(declare-fun e!53246 () Unit!2350)

(assert (=> d!20217 (= lt!38028 e!53246)))

(declare-fun c!12894 () Bool)

(assert (=> d!20217 (= c!12894 lt!38029)))

(assert (=> d!20217 (= lt!38029 (containsKey!141 (toList!751 lt!37510) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20217 (= (contains!750 lt!37510 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) lt!38030)))

(declare-fun b!81592 () Bool)

(declare-fun lt!38031 () Unit!2350)

(assert (=> b!81592 (= e!53246 lt!38031)))

(assert (=> b!81592 (= lt!38031 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37510) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81592 (isDefined!91 (getValueByKey!137 (toList!751 lt!37510) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81593 () Bool)

(declare-fun Unit!2397 () Unit!2350)

(assert (=> b!81593 (= e!53246 Unit!2397)))

(declare-fun b!81594 () Bool)

(assert (=> b!81594 (= e!53245 (isDefined!91 (getValueByKey!137 (toList!751 lt!37510) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!20217 c!12894) b!81592))

(assert (= (and d!20217 (not c!12894)) b!81593))

(assert (= (and d!20217 (not res!42384)) b!81594))

(assert (=> d!20217 m!81991))

(declare-fun m!83645 () Bool)

(assert (=> d!20217 m!83645))

(assert (=> b!81592 m!81991))

(declare-fun m!83647 () Bool)

(assert (=> b!81592 m!83647))

(assert (=> b!81592 m!81991))

(declare-fun m!83649 () Bool)

(assert (=> b!81592 m!83649))

(assert (=> b!81592 m!83649))

(declare-fun m!83651 () Bool)

(assert (=> b!81592 m!83651))

(assert (=> b!81594 m!81991))

(assert (=> b!81594 m!83649))

(assert (=> b!81594 m!83649))

(assert (=> b!81594 m!83651))

(assert (=> b!80690 d!20217))

(declare-fun d!20219 () Bool)

(declare-fun res!42385 () Bool)

(declare-fun e!53247 () Bool)

(assert (=> d!20219 (=> res!42385 e!53247)))

(assert (=> d!20219 (= res!42385 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37199))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37199)))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (=> d!20219 (= (containsKey!141 (t!5209 (toList!751 lt!37199)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) e!53247)))

(declare-fun b!81595 () Bool)

(declare-fun e!53248 () Bool)

(assert (=> b!81595 (= e!53247 e!53248)))

(declare-fun res!42386 () Bool)

(assert (=> b!81595 (=> (not res!42386) (not e!53248))))

(assert (=> b!81595 (= res!42386 (and (or (not ((_ is Cons!1534) (t!5209 (toList!751 lt!37199)))) (bvsle (_1!1111 (h!2123 (t!5209 (toList!751 lt!37199)))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))) ((_ is Cons!1534) (t!5209 (toList!751 lt!37199))) (bvslt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37199)))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(declare-fun b!81596 () Bool)

(assert (=> b!81596 (= e!53248 (containsKey!141 (t!5209 (t!5209 (toList!751 lt!37199))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (= (and d!20219 (not res!42385)) b!81595))

(assert (= (and b!81595 res!42386) b!81596))

(assert (=> b!81596 m!81585))

(declare-fun m!83653 () Bool)

(assert (=> b!81596 m!83653))

(assert (=> b!80817 d!20219))

(assert (=> d!19863 d!19641))

(declare-fun d!20221 () Bool)

(declare-fun e!53249 () Bool)

(assert (=> d!20221 e!53249))

(declare-fun res!42387 () Bool)

(assert (=> d!20221 (=> res!42387 e!53249)))

(declare-fun lt!38034 () Bool)

(assert (=> d!20221 (= res!42387 (not lt!38034))))

(declare-fun lt!38033 () Bool)

(assert (=> d!20221 (= lt!38034 lt!38033)))

(declare-fun lt!38032 () Unit!2350)

(declare-fun e!53250 () Unit!2350)

(assert (=> d!20221 (= lt!38032 e!53250)))

(declare-fun c!12895 () Bool)

(assert (=> d!20221 (= c!12895 lt!38033)))

(assert (=> d!20221 (= lt!38033 (containsKey!141 (toList!751 lt!37708) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!20221 (= (contains!750 lt!37708 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38034)))

(declare-fun b!81597 () Bool)

(declare-fun lt!38035 () Unit!2350)

(assert (=> b!81597 (= e!53250 lt!38035)))

(assert (=> b!81597 (= lt!38035 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37708) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> b!81597 (isDefined!91 (getValueByKey!137 (toList!751 lt!37708) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81598 () Bool)

(declare-fun Unit!2398 () Unit!2350)

(assert (=> b!81598 (= e!53250 Unit!2398)))

(declare-fun b!81599 () Bool)

(assert (=> b!81599 (= e!53249 (isDefined!91 (getValueByKey!137 (toList!751 lt!37708) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20221 c!12895) b!81597))

(assert (= (and d!20221 (not c!12895)) b!81598))

(assert (= (and d!20221 (not res!42387)) b!81599))

(declare-fun m!83655 () Bool)

(assert (=> d!20221 m!83655))

(declare-fun m!83657 () Bool)

(assert (=> b!81597 m!83657))

(assert (=> b!81597 m!82601))

(assert (=> b!81597 m!82601))

(declare-fun m!83659 () Bool)

(assert (=> b!81597 m!83659))

(assert (=> b!81599 m!82601))

(assert (=> b!81599 m!82601))

(assert (=> b!81599 m!83659))

(assert (=> d!19837 d!20221))

(declare-fun b!81601 () Bool)

(declare-fun e!53251 () Option!143)

(declare-fun e!53252 () Option!143)

(assert (=> b!81601 (= e!53251 e!53252)))

(declare-fun c!12897 () Bool)

(assert (=> b!81601 (= c!12897 (and ((_ is Cons!1534) lt!37705) (not (= (_1!1111 (h!2123 lt!37705)) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20223 () Bool)

(declare-fun c!12896 () Bool)

(assert (=> d!20223 (= c!12896 (and ((_ is Cons!1534) lt!37705) (= (_1!1111 (h!2123 lt!37705)) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20223 (= (getValueByKey!137 lt!37705 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53251)))

(declare-fun b!81603 () Bool)

(assert (=> b!81603 (= e!53252 None!141)))

(declare-fun b!81602 () Bool)

(assert (=> b!81602 (= e!53252 (getValueByKey!137 (t!5209 lt!37705) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81600 () Bool)

(assert (=> b!81600 (= e!53251 (Some!142 (_2!1111 (h!2123 lt!37705))))))

(assert (= (and d!20223 c!12896) b!81600))

(assert (= (and d!20223 (not c!12896)) b!81601))

(assert (= (and b!81601 c!12897) b!81602))

(assert (= (and b!81601 (not c!12897)) b!81603))

(declare-fun m!83661 () Bool)

(assert (=> b!81602 m!83661))

(assert (=> d!19837 d!20223))

(declare-fun d!20225 () Bool)

(assert (=> d!20225 (= (getValueByKey!137 lt!37705 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!38036 () Unit!2350)

(assert (=> d!20225 (= lt!38036 (choose!478 lt!37705 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53253 () Bool)

(assert (=> d!20225 e!53253))

(declare-fun res!42388 () Bool)

(assert (=> d!20225 (=> (not res!42388) (not e!53253))))

(assert (=> d!20225 (= res!42388 (isStrictlySorted!291 lt!37705))))

(assert (=> d!20225 (= (lemmaContainsTupThenGetReturnValue!56 lt!37705 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38036)))

(declare-fun b!81604 () Bool)

(declare-fun res!42389 () Bool)

(assert (=> b!81604 (=> (not res!42389) (not e!53253))))

(assert (=> b!81604 (= res!42389 (containsKey!141 lt!37705 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81605 () Bool)

(assert (=> b!81605 (= e!53253 (contains!753 lt!37705 (tuple2!2203 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20225 res!42388) b!81604))

(assert (= (and b!81604 res!42389) b!81605))

(assert (=> d!20225 m!82595))

(declare-fun m!83663 () Bool)

(assert (=> d!20225 m!83663))

(declare-fun m!83665 () Bool)

(assert (=> d!20225 m!83665))

(declare-fun m!83667 () Bool)

(assert (=> b!81604 m!83667))

(declare-fun m!83669 () Bool)

(assert (=> b!81605 m!83669))

(assert (=> d!19837 d!20225))

(declare-fun d!20227 () Bool)

(declare-fun e!53255 () Bool)

(assert (=> d!20227 e!53255))

(declare-fun res!42390 () Bool)

(assert (=> d!20227 (=> (not res!42390) (not e!53255))))

(declare-fun lt!38037 () List!1538)

(assert (=> d!20227 (= res!42390 (isStrictlySorted!291 lt!38037))))

(declare-fun e!53254 () List!1538)

(assert (=> d!20227 (= lt!38037 e!53254)))

(declare-fun c!12901 () Bool)

(assert (=> d!20227 (= c!12901 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (bvslt (_1!1111 (h!2123 (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20227 (isStrictlySorted!291 (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20227 (= (insertStrictlySorted!58 (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38037)))

(declare-fun b!81606 () Bool)

(assert (=> b!81606 (= e!53255 (contains!753 lt!38037 (tuple2!2203 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun bm!7606 () Bool)

(declare-fun call!7609 () List!1538)

(declare-fun call!7610 () List!1538)

(assert (=> bm!7606 (= call!7609 call!7610)))

(declare-fun b!81607 () Bool)

(declare-fun res!42391 () Bool)

(assert (=> b!81607 (=> (not res!42391) (not e!53255))))

(assert (=> b!81607 (= res!42391 (containsKey!141 lt!38037 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53257 () List!1538)

(declare-fun b!81608 () Bool)

(assert (=> b!81608 (= e!53257 (insertStrictlySorted!58 (t!5209 (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81609 () Bool)

(assert (=> b!81609 (= e!53254 call!7610)))

(declare-fun bm!7607 () Bool)

(assert (=> bm!7607 (= call!7610 ($colon$colon!69 e!53257 (ite c!12901 (h!2123 (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (tuple2!2203 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!12899 () Bool)

(assert (=> bm!7607 (= c!12899 c!12901)))

(declare-fun b!81610 () Bool)

(declare-fun c!12900 () Bool)

(declare-fun c!12898 () Bool)

(assert (=> b!81610 (= e!53257 (ite c!12898 (t!5209 (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (ite c!12900 (Cons!1534 (h!2123 (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (t!5209 (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))) Nil!1535)))))

(declare-fun b!81611 () Bool)

(declare-fun e!53258 () List!1538)

(assert (=> b!81611 (= e!53258 call!7609)))

(declare-fun b!81612 () Bool)

(declare-fun e!53256 () List!1538)

(declare-fun call!7611 () List!1538)

(assert (=> b!81612 (= e!53256 call!7611)))

(declare-fun b!81613 () Bool)

(assert (=> b!81613 (= c!12900 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (bvsgt (_1!1111 (h!2123 (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> b!81613 (= e!53258 e!53256)))

(declare-fun b!81614 () Bool)

(assert (=> b!81614 (= e!53256 call!7611)))

(declare-fun bm!7608 () Bool)

(assert (=> bm!7608 (= call!7611 call!7609)))

(declare-fun b!81615 () Bool)

(assert (=> b!81615 (= e!53254 e!53258)))

(assert (=> b!81615 (= c!12898 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37190 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20227 c!12901) b!81609))

(assert (= (and d!20227 (not c!12901)) b!81615))

(assert (= (and b!81615 c!12898) b!81611))

(assert (= (and b!81615 (not c!12898)) b!81613))

(assert (= (and b!81613 c!12900) b!81612))

(assert (= (and b!81613 (not c!12900)) b!81614))

(assert (= (or b!81612 b!81614) bm!7608))

(assert (= (or b!81611 bm!7608) bm!7606))

(assert (= (or b!81609 bm!7606) bm!7607))

(assert (= (and bm!7607 c!12899) b!81608))

(assert (= (and bm!7607 (not c!12899)) b!81610))

(assert (= (and d!20227 res!42390) b!81607))

(assert (= (and b!81607 res!42391) b!81606))

(declare-fun m!83671 () Bool)

(assert (=> b!81607 m!83671))

(declare-fun m!83673 () Bool)

(assert (=> bm!7607 m!83673))

(declare-fun m!83675 () Bool)

(assert (=> d!20227 m!83675))

(declare-fun m!83677 () Bool)

(assert (=> d!20227 m!83677))

(declare-fun m!83679 () Bool)

(assert (=> b!81608 m!83679))

(declare-fun m!83681 () Bool)

(assert (=> b!81606 m!83681))

(assert (=> d!19837 d!20227))

(declare-fun b!81617 () Bool)

(declare-fun e!53259 () Option!143)

(declare-fun e!53260 () Option!143)

(assert (=> b!81617 (= e!53259 e!53260)))

(declare-fun c!12903 () Bool)

(assert (=> b!81617 (= c!12903 (and ((_ is Cons!1534) (toList!751 lt!37738)) (not (= (_1!1111 (h!2123 (toList!751 lt!37738))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun d!20229 () Bool)

(declare-fun c!12902 () Bool)

(assert (=> d!20229 (= c!12902 (and ((_ is Cons!1534) (toList!751 lt!37738)) (= (_1!1111 (h!2123 (toList!751 lt!37738))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20229 (= (getValueByKey!137 (toList!751 lt!37738) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) e!53259)))

(declare-fun b!81619 () Bool)

(assert (=> b!81619 (= e!53260 None!141)))

(declare-fun b!81618 () Bool)

(assert (=> b!81618 (= e!53260 (getValueByKey!137 (t!5209 (toList!751 lt!37738)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81616 () Bool)

(assert (=> b!81616 (= e!53259 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37738)))))))

(assert (= (and d!20229 c!12902) b!81616))

(assert (= (and d!20229 (not c!12902)) b!81617))

(assert (= (and b!81617 c!12903) b!81618))

(assert (= (and b!81617 (not c!12903)) b!81619))

(declare-fun m!83683 () Bool)

(assert (=> b!81618 m!83683))

(assert (=> b!80992 d!20229))

(assert (=> b!81177 d!19641))

(declare-fun d!20231 () Bool)

(declare-fun res!42392 () Bool)

(declare-fun e!53261 () Bool)

(assert (=> d!20231 (=> res!42392 e!53261)))

(assert (=> d!20231 (= res!42392 (and ((_ is Cons!1534) lt!37536) (= (_1!1111 (h!2123 lt!37536)) (_1!1111 lt!37188))))))

(assert (=> d!20231 (= (containsKey!141 lt!37536 (_1!1111 lt!37188)) e!53261)))

(declare-fun b!81620 () Bool)

(declare-fun e!53262 () Bool)

(assert (=> b!81620 (= e!53261 e!53262)))

(declare-fun res!42393 () Bool)

(assert (=> b!81620 (=> (not res!42393) (not e!53262))))

(assert (=> b!81620 (= res!42393 (and (or (not ((_ is Cons!1534) lt!37536)) (bvsle (_1!1111 (h!2123 lt!37536)) (_1!1111 lt!37188))) ((_ is Cons!1534) lt!37536) (bvslt (_1!1111 (h!2123 lt!37536)) (_1!1111 lt!37188))))))

(declare-fun b!81621 () Bool)

(assert (=> b!81621 (= e!53262 (containsKey!141 (t!5209 lt!37536) (_1!1111 lt!37188)))))

(assert (= (and d!20231 (not res!42392)) b!81620))

(assert (= (and b!81620 res!42393) b!81621))

(declare-fun m!83685 () Bool)

(assert (=> b!81621 m!83685))

(assert (=> b!80756 d!20231))

(declare-fun d!20233 () Bool)

(declare-fun res!42394 () Bool)

(declare-fun e!53263 () Bool)

(assert (=> d!20233 (=> res!42394 e!53263)))

(assert (=> d!20233 (= res!42394 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))))) lt!37327)))))

(assert (=> d!20233 (= (containsKey!141 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))) lt!37327) e!53263)))

(declare-fun b!81622 () Bool)

(declare-fun e!53264 () Bool)

(assert (=> b!81622 (= e!53263 e!53264)))

(declare-fun res!42395 () Bool)

(assert (=> b!81622 (=> (not res!42395) (not e!53264))))

(assert (=> b!81622 (= res!42395 (and (or (not ((_ is Cons!1534) (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))))) (bvsle (_1!1111 (h!2123 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))))) lt!37327)) ((_ is Cons!1534) (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)))) (bvslt (_1!1111 (h!2123 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324))))) lt!37327)))))

(declare-fun b!81623 () Bool)

(assert (=> b!81623 (= e!53264 (containsKey!141 (t!5209 (toList!751 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)))) lt!37327))))

(assert (= (and d!20233 (not res!42394)) b!81622))

(assert (= (and b!81622 res!42395) b!81623))

(declare-fun m!83687 () Bool)

(assert (=> b!81623 m!83687))

(assert (=> d!19821 d!20233))

(declare-fun b!81625 () Bool)

(declare-fun e!53265 () Option!143)

(declare-fun e!53266 () Option!143)

(assert (=> b!81625 (= e!53265 e!53266)))

(declare-fun c!12905 () Bool)

(assert (=> b!81625 (= c!12905 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37285))) (not (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37285)))) (_1!1111 lt!37202)))))))

(declare-fun d!20235 () Bool)

(declare-fun c!12904 () Bool)

(assert (=> d!20235 (= c!12904 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37285))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37285)))) (_1!1111 lt!37202))))))

(assert (=> d!20235 (= (getValueByKey!137 (t!5209 (toList!751 lt!37285)) (_1!1111 lt!37202)) e!53265)))

(declare-fun b!81627 () Bool)

(assert (=> b!81627 (= e!53266 None!141)))

(declare-fun b!81626 () Bool)

(assert (=> b!81626 (= e!53266 (getValueByKey!137 (t!5209 (t!5209 (toList!751 lt!37285))) (_1!1111 lt!37202)))))

(declare-fun b!81624 () Bool)

(assert (=> b!81624 (= e!53265 (Some!142 (_2!1111 (h!2123 (t!5209 (toList!751 lt!37285))))))))

(assert (= (and d!20235 c!12904) b!81624))

(assert (= (and d!20235 (not c!12904)) b!81625))

(assert (= (and b!81625 c!12905) b!81626))

(assert (= (and b!81625 (not c!12905)) b!81627))

(declare-fun m!83689 () Bool)

(assert (=> b!81626 m!83689))

(assert (=> b!81149 d!20235))

(declare-fun d!20237 () Bool)

(assert (=> d!20237 (= (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81162 d!20237))

(declare-fun d!20239 () Bool)

(declare-fun e!53267 () Bool)

(assert (=> d!20239 e!53267))

(declare-fun res!42396 () Bool)

(assert (=> d!20239 (=> res!42396 e!53267)))

(declare-fun lt!38040 () Bool)

(assert (=> d!20239 (= res!42396 (not lt!38040))))

(declare-fun lt!38039 () Bool)

(assert (=> d!20239 (= lt!38040 lt!38039)))

(declare-fun lt!38038 () Unit!2350)

(declare-fun e!53268 () Unit!2350)

(assert (=> d!20239 (= lt!38038 e!53268)))

(declare-fun c!12906 () Bool)

(assert (=> d!20239 (= c!12906 lt!38039)))

(assert (=> d!20239 (= lt!38039 (containsKey!141 (toList!751 (getCurrentListMap!437 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470))))))

(assert (=> d!20239 (= (contains!750 (getCurrentListMap!437 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470))) lt!38040)))

(declare-fun b!81628 () Bool)

(declare-fun lt!38041 () Unit!2350)

(assert (=> b!81628 (= e!53268 lt!38041)))

(assert (=> b!81628 (= lt!38041 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (getCurrentListMap!437 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470))))))

(assert (=> b!81628 (isDefined!91 (getValueByKey!137 (toList!751 (getCurrentListMap!437 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470))))))

(declare-fun b!81629 () Bool)

(declare-fun Unit!2399 () Unit!2350)

(assert (=> b!81629 (= e!53268 Unit!2399)))

(declare-fun b!81630 () Bool)

(assert (=> b!81630 (= e!53267 (isDefined!91 (getValueByKey!137 (toList!751 (getCurrentListMap!437 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))))

(assert (= (and d!20239 c!12906) b!81628))

(assert (= (and d!20239 (not c!12906)) b!81629))

(assert (= (and d!20239 (not res!42396)) b!81630))

(assert (=> d!20239 m!81929))

(declare-fun m!83691 () Bool)

(assert (=> d!20239 m!83691))

(assert (=> b!81628 m!81929))

(declare-fun m!83693 () Bool)

(assert (=> b!81628 m!83693))

(assert (=> b!81628 m!81929))

(declare-fun m!83695 () Bool)

(assert (=> b!81628 m!83695))

(assert (=> b!81628 m!83695))

(declare-fun m!83697 () Bool)

(assert (=> b!81628 m!83697))

(assert (=> b!81630 m!81929))

(assert (=> b!81630 m!83695))

(assert (=> b!81630 m!83695))

(assert (=> b!81630 m!83697))

(assert (=> b!80912 d!20239))

(declare-fun b!81631 () Bool)

(declare-fun e!53278 () ListLongMap!1471)

(declare-fun call!7614 () ListLongMap!1471)

(assert (=> b!81631 (= e!53278 (+!111 call!7614 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!81632 () Bool)

(declare-fun e!53280 () Bool)

(declare-fun lt!38055 () ListLongMap!1471)

(assert (=> b!81632 (= e!53280 (= (apply!80 lt!38055 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!81633 () Bool)

(declare-fun e!53277 () ListLongMap!1471)

(assert (=> b!81633 (= e!53278 e!53277)))

(declare-fun c!12910 () Bool)

(assert (=> b!81633 (= c!12910 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7609 () Bool)

(declare-fun call!7617 () ListLongMap!1471)

(assert (=> bm!7609 (= call!7617 call!7614)))

(declare-fun b!81634 () Bool)

(declare-fun e!53269 () Bool)

(declare-fun e!53272 () Bool)

(assert (=> b!81634 (= e!53269 e!53272)))

(declare-fun res!42397 () Bool)

(assert (=> b!81634 (=> (not res!42397) (not e!53272))))

(assert (=> b!81634 (= res!42397 (contains!750 lt!38055 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81634 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun d!20241 () Bool)

(declare-fun e!53281 () Bool)

(assert (=> d!20241 e!53281))

(declare-fun res!42401 () Bool)

(assert (=> d!20241 (=> (not res!42401) (not e!53281))))

(assert (=> d!20241 (= res!42401 (or (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))))

(declare-fun lt!38053 () ListLongMap!1471)

(assert (=> d!20241 (= lt!38055 lt!38053)))

(declare-fun lt!38056 () Unit!2350)

(declare-fun e!53271 () Unit!2350)

(assert (=> d!20241 (= lt!38056 e!53271)))

(declare-fun c!12908 () Bool)

(declare-fun e!53270 () Bool)

(assert (=> d!20241 (= c!12908 e!53270)))

(declare-fun res!42403 () Bool)

(assert (=> d!20241 (=> (not res!42403) (not e!53270))))

(assert (=> d!20241 (= res!42403 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!20241 (= lt!38053 e!53278)))

(declare-fun c!12909 () Bool)

(assert (=> d!20241 (= c!12909 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20241 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20241 (= (getCurrentListMap!437 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38055)))

(declare-fun bm!7610 () Bool)

(declare-fun call!7613 () Bool)

(assert (=> bm!7610 (= call!7613 (contains!750 lt!38055 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81635 () Bool)

(declare-fun e!53275 () Bool)

(assert (=> b!81635 (= e!53275 (not call!7613))))

(declare-fun b!81636 () Bool)

(assert (=> b!81636 (= e!53277 call!7617)))

(declare-fun b!81637 () Bool)

(assert (=> b!81637 (= e!53281 e!53275)))

(declare-fun c!12912 () Bool)

(assert (=> b!81637 (= c!12912 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81638 () Bool)

(declare-fun e!53273 () Bool)

(declare-fun e!53279 () Bool)

(assert (=> b!81638 (= e!53273 e!53279)))

(declare-fun res!42400 () Bool)

(declare-fun call!7618 () Bool)

(assert (=> b!81638 (= res!42400 call!7618)))

(assert (=> b!81638 (=> (not res!42400) (not e!53279))))

(declare-fun b!81639 () Bool)

(declare-fun res!42402 () Bool)

(assert (=> b!81639 (=> (not res!42402) (not e!53281))))

(assert (=> b!81639 (= res!42402 e!53273)))

(declare-fun c!12911 () Bool)

(assert (=> b!81639 (= c!12911 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81640 () Bool)

(declare-fun e!53274 () Bool)

(assert (=> b!81640 (= e!53274 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7611 () Bool)

(declare-fun call!7612 () ListLongMap!1471)

(declare-fun call!7616 () ListLongMap!1471)

(assert (=> bm!7611 (= call!7612 call!7616)))

(declare-fun bm!7612 () Bool)

(declare-fun call!7615 () ListLongMap!1471)

(assert (=> bm!7612 (= call!7616 call!7615)))

(declare-fun b!81641 () Bool)

(declare-fun lt!38057 () Unit!2350)

(assert (=> b!81641 (= e!53271 lt!38057)))

(declare-fun lt!38054 () ListLongMap!1471)

(assert (=> b!81641 (= lt!38054 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38042 () (_ BitVec 64))

(assert (=> b!81641 (= lt!38042 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38062 () (_ BitVec 64))

(assert (=> b!81641 (= lt!38062 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38043 () Unit!2350)

(assert (=> b!81641 (= lt!38043 (addStillContains!56 lt!38054 lt!38042 (zeroValue!2189 newMap!16) lt!38062))))

(assert (=> b!81641 (contains!750 (+!111 lt!38054 (tuple2!2203 lt!38042 (zeroValue!2189 newMap!16))) lt!38062)))

(declare-fun lt!38060 () Unit!2350)

(assert (=> b!81641 (= lt!38060 lt!38043)))

(declare-fun lt!38049 () ListLongMap!1471)

(assert (=> b!81641 (= lt!38049 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38058 () (_ BitVec 64))

(assert (=> b!81641 (= lt!38058 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38045 () (_ BitVec 64))

(assert (=> b!81641 (= lt!38045 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38063 () Unit!2350)

(assert (=> b!81641 (= lt!38063 (addApplyDifferent!56 lt!38049 lt!38058 (minValue!2189 newMap!16) lt!38045))))

(assert (=> b!81641 (= (apply!80 (+!111 lt!38049 (tuple2!2203 lt!38058 (minValue!2189 newMap!16))) lt!38045) (apply!80 lt!38049 lt!38045))))

(declare-fun lt!38046 () Unit!2350)

(assert (=> b!81641 (= lt!38046 lt!38063)))

(declare-fun lt!38052 () ListLongMap!1471)

(assert (=> b!81641 (= lt!38052 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38048 () (_ BitVec 64))

(assert (=> b!81641 (= lt!38048 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38050 () (_ BitVec 64))

(assert (=> b!81641 (= lt!38050 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38061 () Unit!2350)

(assert (=> b!81641 (= lt!38061 (addApplyDifferent!56 lt!38052 lt!38048 (zeroValue!2189 newMap!16) lt!38050))))

(assert (=> b!81641 (= (apply!80 (+!111 lt!38052 (tuple2!2203 lt!38048 (zeroValue!2189 newMap!16))) lt!38050) (apply!80 lt!38052 lt!38050))))

(declare-fun lt!38047 () Unit!2350)

(assert (=> b!81641 (= lt!38047 lt!38061)))

(declare-fun lt!38051 () ListLongMap!1471)

(assert (=> b!81641 (= lt!38051 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38059 () (_ BitVec 64))

(assert (=> b!81641 (= lt!38059 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38044 () (_ BitVec 64))

(assert (=> b!81641 (= lt!38044 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81641 (= lt!38057 (addApplyDifferent!56 lt!38051 lt!38059 (minValue!2189 newMap!16) lt!38044))))

(assert (=> b!81641 (= (apply!80 (+!111 lt!38051 (tuple2!2203 lt!38059 (minValue!2189 newMap!16))) lt!38044) (apply!80 lt!38051 lt!38044))))

(declare-fun b!81642 () Bool)

(declare-fun Unit!2400 () Unit!2350)

(assert (=> b!81642 (= e!53271 Unit!2400)))

(declare-fun b!81643 () Bool)

(assert (=> b!81643 (= e!53275 e!53280)))

(declare-fun res!42398 () Bool)

(assert (=> b!81643 (= res!42398 call!7613)))

(assert (=> b!81643 (=> (not res!42398) (not e!53280))))

(declare-fun b!81644 () Bool)

(declare-fun c!12907 () Bool)

(assert (=> b!81644 (= c!12907 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53276 () ListLongMap!1471)

(assert (=> b!81644 (= e!53277 e!53276)))

(declare-fun b!81645 () Bool)

(assert (=> b!81645 (= e!53270 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81646 () Bool)

(assert (=> b!81646 (= e!53276 call!7612)))

(declare-fun bm!7613 () Bool)

(assert (=> bm!7613 (= call!7618 (contains!750 lt!38055 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81647 () Bool)

(assert (=> b!81647 (= e!53273 (not call!7618))))

(declare-fun b!81648 () Bool)

(assert (=> b!81648 (= e!53279 (= (apply!80 lt!38055 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun bm!7614 () Bool)

(assert (=> bm!7614 (= call!7615 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!81649 () Bool)

(assert (=> b!81649 (= e!53272 (= (apply!80 lt!38055 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 lt!37466) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81649 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 lt!37466)))))

(assert (=> b!81649 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!81650 () Bool)

(assert (=> b!81650 (= e!53276 call!7617)))

(declare-fun bm!7615 () Bool)

(assert (=> bm!7615 (= call!7614 (+!111 (ite c!12909 call!7615 (ite c!12910 call!7616 call!7612)) (ite (or c!12909 c!12910) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!81651 () Bool)

(declare-fun res!42404 () Bool)

(assert (=> b!81651 (=> (not res!42404) (not e!53281))))

(assert (=> b!81651 (= res!42404 e!53269)))

(declare-fun res!42399 () Bool)

(assert (=> b!81651 (=> res!42399 e!53269)))

(assert (=> b!81651 (= res!42399 (not e!53274))))

(declare-fun res!42405 () Bool)

(assert (=> b!81651 (=> (not res!42405) (not e!53274))))

(assert (=> b!81651 (= res!42405 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (= (and d!20241 c!12909) b!81631))

(assert (= (and d!20241 (not c!12909)) b!81633))

(assert (= (and b!81633 c!12910) b!81636))

(assert (= (and b!81633 (not c!12910)) b!81644))

(assert (= (and b!81644 c!12907) b!81650))

(assert (= (and b!81644 (not c!12907)) b!81646))

(assert (= (or b!81650 b!81646) bm!7611))

(assert (= (or b!81636 bm!7611) bm!7612))

(assert (= (or b!81636 b!81650) bm!7609))

(assert (= (or b!81631 bm!7612) bm!7614))

(assert (= (or b!81631 bm!7609) bm!7615))

(assert (= (and d!20241 res!42403) b!81645))

(assert (= (and d!20241 c!12908) b!81641))

(assert (= (and d!20241 (not c!12908)) b!81642))

(assert (= (and d!20241 res!42401) b!81651))

(assert (= (and b!81651 res!42405) b!81640))

(assert (= (and b!81651 (not res!42399)) b!81634))

(assert (= (and b!81634 res!42397) b!81649))

(assert (= (and b!81651 res!42404) b!81639))

(assert (= (and b!81639 c!12911) b!81638))

(assert (= (and b!81639 (not c!12911)) b!81647))

(assert (= (and b!81638 res!42400) b!81648))

(assert (= (or b!81638 b!81647) bm!7613))

(assert (= (and b!81639 res!42402) b!81637))

(assert (= (and b!81637 c!12912) b!81643))

(assert (= (and b!81637 (not c!12912)) b!81635))

(assert (= (and b!81643 res!42398) b!81632))

(assert (= (or b!81643 b!81635) bm!7610))

(declare-fun b_lambda!3641 () Bool)

(assert (=> (not b_lambda!3641) (not b!81649)))

(assert (=> b!81649 t!5218))

(declare-fun b_and!4969 () Bool)

(assert (= b_and!4965 (and (=> t!5218 result!2857) b_and!4969)))

(assert (=> b!81649 t!5220))

(declare-fun b_and!4971 () Bool)

(assert (= b_and!4967 (and (=> t!5220 result!2859) b_and!4971)))

(declare-fun m!83699 () Bool)

(assert (=> bm!7614 m!83699))

(declare-fun m!83701 () Bool)

(assert (=> bm!7610 m!83701))

(assert (=> b!81649 m!81991))

(assert (=> b!81649 m!81991))

(declare-fun m!83703 () Bool)

(assert (=> b!81649 m!83703))

(declare-fun m!83705 () Bool)

(assert (=> b!81649 m!83705))

(assert (=> b!81649 m!82031))

(assert (=> b!81649 m!83705))

(assert (=> b!81649 m!82031))

(declare-fun m!83707 () Bool)

(assert (=> b!81649 m!83707))

(assert (=> b!81640 m!81991))

(assert (=> b!81640 m!81991))

(assert (=> b!81640 m!82035))

(declare-fun m!83709 () Bool)

(assert (=> b!81631 m!83709))

(assert (=> b!81634 m!81991))

(assert (=> b!81634 m!81991))

(declare-fun m!83711 () Bool)

(assert (=> b!81634 m!83711))

(declare-fun m!83713 () Bool)

(assert (=> bm!7615 m!83713))

(assert (=> d!20241 m!82043))

(declare-fun m!83715 () Bool)

(assert (=> bm!7613 m!83715))

(declare-fun m!83717 () Bool)

(assert (=> b!81641 m!83717))

(declare-fun m!83719 () Bool)

(assert (=> b!81641 m!83719))

(declare-fun m!83721 () Bool)

(assert (=> b!81641 m!83721))

(assert (=> b!81641 m!81991))

(declare-fun m!83723 () Bool)

(assert (=> b!81641 m!83723))

(declare-fun m!83725 () Bool)

(assert (=> b!81641 m!83725))

(declare-fun m!83727 () Bool)

(assert (=> b!81641 m!83727))

(declare-fun m!83729 () Bool)

(assert (=> b!81641 m!83729))

(declare-fun m!83731 () Bool)

(assert (=> b!81641 m!83731))

(assert (=> b!81641 m!83719))

(assert (=> b!81641 m!83699))

(declare-fun m!83733 () Bool)

(assert (=> b!81641 m!83733))

(declare-fun m!83735 () Bool)

(assert (=> b!81641 m!83735))

(declare-fun m!83737 () Bool)

(assert (=> b!81641 m!83737))

(declare-fun m!83739 () Bool)

(assert (=> b!81641 m!83739))

(assert (=> b!81641 m!83727))

(declare-fun m!83741 () Bool)

(assert (=> b!81641 m!83741))

(declare-fun m!83743 () Bool)

(assert (=> b!81641 m!83743))

(assert (=> b!81641 m!83723))

(declare-fun m!83745 () Bool)

(assert (=> b!81641 m!83745))

(assert (=> b!81641 m!83733))

(declare-fun m!83747 () Bool)

(assert (=> b!81648 m!83747))

(declare-fun m!83749 () Bool)

(assert (=> b!81632 m!83749))

(assert (=> b!81645 m!81991))

(assert (=> b!81645 m!81991))

(assert (=> b!81645 m!82035))

(assert (=> b!80912 d!20241))

(declare-fun bm!7616 () Bool)

(declare-fun call!7619 () (_ BitVec 32))

(assert (=> bm!7616 (= call!7619 (arrayCountValidKeys!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!81652 () Bool)

(declare-fun e!53282 () (_ BitVec 32))

(assert (=> b!81652 (= e!53282 (bvadd #b00000000000000000000000000000001 call!7619))))

(declare-fun b!81653 () Bool)

(declare-fun e!53283 () (_ BitVec 32))

(assert (=> b!81653 (= e!53283 e!53282)))

(declare-fun c!12914 () Bool)

(assert (=> b!81653 (= c!12914 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!81655 () Bool)

(assert (=> b!81655 (= e!53283 #b00000000000000000000000000000000)))

(declare-fun d!20243 () Bool)

(declare-fun lt!38064 () (_ BitVec 32))

(assert (=> d!20243 (and (bvsge lt!38064 #b00000000000000000000000000000000) (bvsle lt!38064 (bvsub (size!2142 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!20243 (= lt!38064 e!53283)))

(declare-fun c!12913 () Bool)

(assert (=> d!20243 (= c!12913 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!20243 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 (_keys!3957 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2142 (_keys!3957 newMap!16)) (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!20243 (= (arrayCountValidKeys!0 (_keys!3957 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 (_keys!3957 newMap!16))) lt!38064)))

(declare-fun b!81654 () Bool)

(assert (=> b!81654 (= e!53282 call!7619)))

(assert (= (and d!20243 c!12913) b!81655))

(assert (= (and d!20243 (not c!12913)) b!81653))

(assert (= (and b!81653 c!12914) b!81652))

(assert (= (and b!81653 (not c!12914)) b!81654))

(assert (= (or b!81652 b!81654) bm!7616))

(declare-fun m!83751 () Bool)

(assert (=> bm!7616 m!83751))

(assert (=> b!81653 m!83449))

(assert (=> b!81653 m!83449))

(assert (=> b!81653 m!83453))

(assert (=> bm!7539 d!20243))

(declare-fun d!20245 () Bool)

(declare-fun e!53284 () Bool)

(assert (=> d!20245 e!53284))

(declare-fun res!42406 () Bool)

(assert (=> d!20245 (=> res!42406 e!53284)))

(declare-fun lt!38067 () Bool)

(assert (=> d!20245 (= res!42406 (not lt!38067))))

(declare-fun lt!38066 () Bool)

(assert (=> d!20245 (= lt!38067 lt!38066)))

(declare-fun lt!38065 () Unit!2350)

(declare-fun e!53285 () Unit!2350)

(assert (=> d!20245 (= lt!38065 e!53285)))

(declare-fun c!12915 () Bool)

(assert (=> d!20245 (= c!12915 lt!38066)))

(assert (=> d!20245 (= lt!38066 (containsKey!141 (toList!751 lt!37720) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20245 (= (contains!750 lt!37720 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38067)))

(declare-fun b!81656 () Bool)

(declare-fun lt!38068 () Unit!2350)

(assert (=> b!81656 (= e!53285 lt!38068)))

(assert (=> b!81656 (= lt!38068 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37720) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> b!81656 (isDefined!91 (getValueByKey!137 (toList!751 lt!37720) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81657 () Bool)

(declare-fun Unit!2401 () Unit!2350)

(assert (=> b!81657 (= e!53285 Unit!2401)))

(declare-fun b!81658 () Bool)

(assert (=> b!81658 (= e!53284 (isDefined!91 (getValueByKey!137 (toList!751 lt!37720) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20245 c!12915) b!81656))

(assert (= (and d!20245 (not c!12915)) b!81657))

(assert (= (and d!20245 (not res!42406)) b!81658))

(declare-fun m!83753 () Bool)

(assert (=> d!20245 m!83753))

(declare-fun m!83755 () Bool)

(assert (=> b!81656 m!83755))

(assert (=> b!81656 m!82637))

(assert (=> b!81656 m!82637))

(declare-fun m!83757 () Bool)

(assert (=> b!81656 m!83757))

(assert (=> b!81658 m!82637))

(assert (=> b!81658 m!82637))

(assert (=> b!81658 m!83757))

(assert (=> d!19843 d!20245))

(declare-fun b!81660 () Bool)

(declare-fun e!53286 () Option!143)

(declare-fun e!53287 () Option!143)

(assert (=> b!81660 (= e!53286 e!53287)))

(declare-fun c!12917 () Bool)

(assert (=> b!81660 (= c!12917 (and ((_ is Cons!1534) lt!37717) (not (= (_1!1111 (h!2123 lt!37717)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!12916 () Bool)

(declare-fun d!20247 () Bool)

(assert (=> d!20247 (= c!12916 (and ((_ is Cons!1534) lt!37717) (= (_1!1111 (h!2123 lt!37717)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20247 (= (getValueByKey!137 lt!37717 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) e!53286)))

(declare-fun b!81662 () Bool)

(assert (=> b!81662 (= e!53287 None!141)))

(declare-fun b!81661 () Bool)

(assert (=> b!81661 (= e!53287 (getValueByKey!137 (t!5209 lt!37717) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81659 () Bool)

(assert (=> b!81659 (= e!53286 (Some!142 (_2!1111 (h!2123 lt!37717))))))

(assert (= (and d!20247 c!12916) b!81659))

(assert (= (and d!20247 (not c!12916)) b!81660))

(assert (= (and b!81660 c!12917) b!81661))

(assert (= (and b!81660 (not c!12917)) b!81662))

(declare-fun m!83759 () Bool)

(assert (=> b!81661 m!83759))

(assert (=> d!19843 d!20247))

(declare-fun d!20249 () Bool)

(assert (=> d!20249 (= (getValueByKey!137 lt!37717 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!38069 () Unit!2350)

(assert (=> d!20249 (= lt!38069 (choose!478 lt!37717 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun e!53288 () Bool)

(assert (=> d!20249 e!53288))

(declare-fun res!42407 () Bool)

(assert (=> d!20249 (=> (not res!42407) (not e!53288))))

(assert (=> d!20249 (= res!42407 (isStrictlySorted!291 lt!37717))))

(assert (=> d!20249 (= (lemmaContainsTupThenGetReturnValue!56 lt!37717 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38069)))

(declare-fun b!81663 () Bool)

(declare-fun res!42408 () Bool)

(assert (=> b!81663 (=> (not res!42408) (not e!53288))))

(assert (=> b!81663 (= res!42408 (containsKey!141 lt!37717 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81664 () Bool)

(assert (=> b!81664 (= e!53288 (contains!753 lt!37717 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20249 res!42407) b!81663))

(assert (= (and b!81663 res!42408) b!81664))

(assert (=> d!20249 m!82631))

(declare-fun m!83761 () Bool)

(assert (=> d!20249 m!83761))

(declare-fun m!83763 () Bool)

(assert (=> d!20249 m!83763))

(declare-fun m!83765 () Bool)

(assert (=> b!81663 m!83765))

(declare-fun m!83767 () Bool)

(assert (=> b!81664 m!83767))

(assert (=> d!19843 d!20249))

(declare-fun d!20251 () Bool)

(declare-fun e!53290 () Bool)

(assert (=> d!20251 e!53290))

(declare-fun res!42409 () Bool)

(assert (=> d!20251 (=> (not res!42409) (not e!53290))))

(declare-fun lt!38070 () List!1538)

(assert (=> d!20251 (= res!42409 (isStrictlySorted!291 lt!38070))))

(declare-fun e!53289 () List!1538)

(assert (=> d!20251 (= lt!38070 e!53289)))

(declare-fun c!12921 () Bool)

(assert (=> d!20251 (= c!12921 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (bvslt (_1!1111 (h!2123 (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20251 (isStrictlySorted!291 (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!20251 (= (insertStrictlySorted!58 (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38070)))

(declare-fun b!81665 () Bool)

(assert (=> b!81665 (= e!53290 (contains!753 lt!38070 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun bm!7617 () Bool)

(declare-fun call!7620 () List!1538)

(declare-fun call!7621 () List!1538)

(assert (=> bm!7617 (= call!7620 call!7621)))

(declare-fun b!81666 () Bool)

(declare-fun res!42410 () Bool)

(assert (=> b!81666 (=> (not res!42410) (not e!53290))))

(assert (=> b!81666 (= res!42410 (containsKey!141 lt!38070 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81667 () Bool)

(declare-fun e!53292 () List!1538)

(assert (=> b!81667 (= e!53292 (insertStrictlySorted!58 (t!5209 (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81668 () Bool)

(assert (=> b!81668 (= e!53289 call!7621)))

(declare-fun bm!7618 () Bool)

(assert (=> bm!7618 (= call!7621 ($colon$colon!69 e!53292 (ite c!12921 (h!2123 (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!12919 () Bool)

(assert (=> bm!7618 (= c!12919 c!12921)))

(declare-fun c!12920 () Bool)

(declare-fun c!12918 () Bool)

(declare-fun b!81669 () Bool)

(assert (=> b!81669 (= e!53292 (ite c!12918 (t!5209 (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (ite c!12920 (Cons!1534 (h!2123 (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (t!5209 (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) Nil!1535)))))

(declare-fun b!81670 () Bool)

(declare-fun e!53293 () List!1538)

(assert (=> b!81670 (= e!53293 call!7620)))

(declare-fun b!81671 () Bool)

(declare-fun e!53291 () List!1538)

(declare-fun call!7622 () List!1538)

(assert (=> b!81671 (= e!53291 call!7622)))

(declare-fun b!81672 () Bool)

(assert (=> b!81672 (= c!12920 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (bvsgt (_1!1111 (h!2123 (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> b!81672 (= e!53293 e!53291)))

(declare-fun b!81673 () Bool)

(assert (=> b!81673 (= e!53291 call!7622)))

(declare-fun bm!7619 () Bool)

(assert (=> bm!7619 (= call!7622 call!7620)))

(declare-fun b!81674 () Bool)

(assert (=> b!81674 (= e!53289 e!53293)))

(assert (=> b!81674 (= c!12918 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37190 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20251 c!12921) b!81668))

(assert (= (and d!20251 (not c!12921)) b!81674))

(assert (= (and b!81674 c!12918) b!81670))

(assert (= (and b!81674 (not c!12918)) b!81672))

(assert (= (and b!81672 c!12920) b!81671))

(assert (= (and b!81672 (not c!12920)) b!81673))

(assert (= (or b!81671 b!81673) bm!7619))

(assert (= (or b!81670 bm!7619) bm!7617))

(assert (= (or b!81668 bm!7617) bm!7618))

(assert (= (and bm!7618 c!12919) b!81667))

(assert (= (and bm!7618 (not c!12919)) b!81669))

(assert (= (and d!20251 res!42409) b!81666))

(assert (= (and b!81666 res!42410) b!81665))

(declare-fun m!83769 () Bool)

(assert (=> b!81666 m!83769))

(declare-fun m!83771 () Bool)

(assert (=> bm!7618 m!83771))

(declare-fun m!83773 () Bool)

(assert (=> d!20251 m!83773))

(declare-fun m!83775 () Bool)

(assert (=> d!20251 m!83775))

(declare-fun m!83777 () Bool)

(assert (=> b!81667 m!83777))

(declare-fun m!83779 () Bool)

(assert (=> b!81665 m!83779))

(assert (=> d!19843 d!20251))

(declare-fun d!20253 () Bool)

(assert (=> d!20253 (isDefined!91 (getValueByKey!137 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun lt!38071 () Unit!2350)

(assert (=> d!20253 (= lt!38071 (choose!485 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun e!53294 () Bool)

(assert (=> d!20253 e!53294))

(declare-fun res!42411 () Bool)

(assert (=> d!20253 (=> (not res!42411) (not e!53294))))

(assert (=> d!20253 (= res!42411 (isStrictlySorted!291 (toList!751 call!7488)))))

(assert (=> d!20253 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) lt!38071)))

(declare-fun b!81675 () Bool)

(assert (=> b!81675 (= e!53294 (containsKey!141 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (= (and d!20253 res!42411) b!81675))

(assert (=> d!20253 m!81585))

(assert (=> d!20253 m!82531))

(assert (=> d!20253 m!82531))

(assert (=> d!20253 m!82533))

(assert (=> d!20253 m!81585))

(declare-fun m!83781 () Bool)

(assert (=> d!20253 m!83781))

(declare-fun m!83783 () Bool)

(assert (=> d!20253 m!83783))

(assert (=> b!81675 m!81585))

(assert (=> b!81675 m!82527))

(assert (=> b!80937 d!20253))

(declare-fun d!20255 () Bool)

(assert (=> d!20255 (= (isDefined!91 (getValueByKey!137 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))) (not (isEmpty!335 (getValueByKey!137 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))))

(declare-fun bs!3444 () Bool)

(assert (= bs!3444 d!20255))

(assert (=> bs!3444 m!82531))

(declare-fun m!83785 () Bool)

(assert (=> bs!3444 m!83785))

(assert (=> b!80937 d!20255))

(declare-fun b!81677 () Bool)

(declare-fun e!53295 () Option!143)

(declare-fun e!53296 () Option!143)

(assert (=> b!81677 (= e!53295 e!53296)))

(declare-fun c!12923 () Bool)

(assert (=> b!81677 (= c!12923 (and ((_ is Cons!1534) (toList!751 call!7488)) (not (= (_1!1111 (h!2123 (toList!751 call!7488))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))))

(declare-fun c!12922 () Bool)

(declare-fun d!20257 () Bool)

(assert (=> d!20257 (= c!12922 (and ((_ is Cons!1534) (toList!751 call!7488)) (= (_1!1111 (h!2123 (toList!751 call!7488))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (=> d!20257 (= (getValueByKey!137 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) e!53295)))

(declare-fun b!81679 () Bool)

(assert (=> b!81679 (= e!53296 None!141)))

(declare-fun b!81678 () Bool)

(assert (=> b!81678 (= e!53296 (getValueByKey!137 (t!5209 (toList!751 call!7488)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!81676 () Bool)

(assert (=> b!81676 (= e!53295 (Some!142 (_2!1111 (h!2123 (toList!751 call!7488)))))))

(assert (= (and d!20257 c!12922) b!81676))

(assert (= (and d!20257 (not c!12922)) b!81677))

(assert (= (and b!81677 c!12923) b!81678))

(assert (= (and b!81677 (not c!12923)) b!81679))

(assert (=> b!81678 m!81585))

(declare-fun m!83787 () Bool)

(assert (=> b!81678 m!83787))

(assert (=> b!80937 d!20257))

(declare-fun d!20259 () Bool)

(declare-fun lt!38072 () Bool)

(assert (=> d!20259 (= lt!38072 (select (content!85 (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!53297 () Bool)

(assert (=> d!20259 (= lt!38072 e!53297)))

(declare-fun res!42412 () Bool)

(assert (=> d!20259 (=> (not res!42412) (not e!53297))))

(assert (=> d!20259 (= res!42412 ((_ is Cons!1535) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)))))

(assert (=> d!20259 (= (contains!752 (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!38072)))

(declare-fun b!81680 () Bool)

(declare-fun e!53298 () Bool)

(assert (=> b!81680 (= e!53297 e!53298)))

(declare-fun res!42413 () Bool)

(assert (=> b!81680 (=> res!42413 e!53298)))

(assert (=> b!81680 (= res!42413 (= (h!2124 (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!81681 () Bool)

(assert (=> b!81681 (= e!53298 (contains!752 (t!5210 (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!20259 res!42412) b!81680))

(assert (= (and b!81680 (not res!42413)) b!81681))

(declare-fun m!83789 () Bool)

(assert (=> d!20259 m!83789))

(assert (=> d!20259 m!82917))

(declare-fun m!83791 () Bool)

(assert (=> d!20259 m!83791))

(assert (=> b!81681 m!82917))

(declare-fun m!83793 () Bool)

(assert (=> b!81681 m!83793))

(assert (=> b!81160 d!20259))

(assert (=> bm!7561 d!19787))

(declare-fun b!81683 () Bool)

(declare-fun e!53299 () Option!143)

(declare-fun e!53300 () Option!143)

(assert (=> b!81683 (= e!53299 e!53300)))

(declare-fun c!12925 () Bool)

(assert (=> b!81683 (= c!12925 (and ((_ is Cons!1534) (toList!751 lt!37742)) (not (= (_1!1111 (h!2123 (toList!751 lt!37742))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!12924 () Bool)

(declare-fun d!20261 () Bool)

(assert (=> d!20261 (= c!12924 (and ((_ is Cons!1534) (toList!751 lt!37742)) (= (_1!1111 (h!2123 (toList!751 lt!37742))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20261 (= (getValueByKey!137 (toList!751 lt!37742) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) e!53299)))

(declare-fun b!81685 () Bool)

(assert (=> b!81685 (= e!53300 None!141)))

(declare-fun b!81684 () Bool)

(assert (=> b!81684 (= e!53300 (getValueByKey!137 (t!5209 (toList!751 lt!37742)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81682 () Bool)

(assert (=> b!81682 (= e!53299 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37742)))))))

(assert (= (and d!20261 c!12924) b!81682))

(assert (= (and d!20261 (not c!12924)) b!81683))

(assert (= (and b!81683 c!12925) b!81684))

(assert (= (and b!81683 (not c!12925)) b!81685))

(declare-fun m!83795 () Bool)

(assert (=> b!81684 m!83795))

(assert (=> b!80994 d!20261))

(assert (=> d!19831 d!19699))

(declare-fun d!20263 () Bool)

(declare-fun e!53301 () Bool)

(assert (=> d!20263 e!53301))

(declare-fun res!42414 () Bool)

(assert (=> d!20263 (=> (not res!42414) (not e!53301))))

(declare-fun lt!38076 () ListLongMap!1471)

(assert (=> d!20263 (= res!42414 (contains!750 lt!38076 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195))))))

(declare-fun lt!38073 () List!1538)

(assert (=> d!20263 (= lt!38076 (ListLongMap!1472 lt!38073))))

(declare-fun lt!38074 () Unit!2350)

(declare-fun lt!38075 () Unit!2350)

(assert (=> d!20263 (= lt!38074 lt!38075)))

(assert (=> d!20263 (= (getValueByKey!137 lt!38073 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195))) (Some!142 (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195))))))

(assert (=> d!20263 (= lt!38075 (lemmaContainsTupThenGetReturnValue!56 lt!38073 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195))))))

(assert (=> d!20263 (= lt!38073 (insertStrictlySorted!58 (toList!751 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195))))))

(assert (=> d!20263 (= (+!111 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195)) lt!38076)))

(declare-fun b!81686 () Bool)

(declare-fun res!42415 () Bool)

(assert (=> b!81686 (=> (not res!42415) (not e!53301))))

(assert (=> b!81686 (= res!42415 (= (getValueByKey!137 (toList!751 lt!38076) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195))) (Some!142 (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195)))))))

(declare-fun b!81687 () Bool)

(assert (=> b!81687 (= e!53301 (contains!753 (toList!751 lt!38076) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195)))))

(assert (= (and d!20263 res!42414) b!81686))

(assert (= (and b!81686 res!42415) b!81687))

(declare-fun m!83797 () Bool)

(assert (=> d!20263 m!83797))

(declare-fun m!83799 () Bool)

(assert (=> d!20263 m!83799))

(declare-fun m!83801 () Bool)

(assert (=> d!20263 m!83801))

(declare-fun m!83803 () Bool)

(assert (=> d!20263 m!83803))

(declare-fun m!83805 () Bool)

(assert (=> b!81686 m!83805))

(declare-fun m!83807 () Bool)

(assert (=> b!81687 m!83807))

(assert (=> d!19831 d!20263))

(assert (=> d!19831 d!20037))

(declare-fun d!20265 () Bool)

(assert (=> d!20265 (= (+!111 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37479 lt!37195 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(assert (=> d!20265 true))

(declare-fun _$7!68 () Unit!2350)

(assert (=> d!20265 (= (choose!486 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37479 (zeroValue!2189 newMap!16) lt!37195 (minValue!2189 newMap!16) (defaultEntry!2293 newMap!16)) _$7!68)))

(declare-fun bs!3445 () Bool)

(assert (= bs!3445 d!20265))

(assert (=> bs!3445 m!81869))

(assert (=> bs!3445 m!81869))

(assert (=> bs!3445 m!82581))

(assert (=> bs!3445 m!82583))

(assert (=> d!19831 d!20265))

(declare-fun b!81688 () Bool)

(declare-fun e!53311 () ListLongMap!1471)

(declare-fun call!7625 () ListLongMap!1471)

(assert (=> b!81688 (= e!53311 (+!111 call!7625 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!81689 () Bool)

(declare-fun e!53313 () Bool)

(declare-fun lt!38090 () ListLongMap!1471)

(assert (=> b!81689 (= e!53313 (= (apply!80 lt!38090 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!81690 () Bool)

(declare-fun e!53310 () ListLongMap!1471)

(assert (=> b!81690 (= e!53311 e!53310)))

(declare-fun c!12929 () Bool)

(assert (=> b!81690 (= c!12929 (and (not (= (bvand lt!37479 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!37479 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7620 () Bool)

(declare-fun call!7628 () ListLongMap!1471)

(assert (=> bm!7620 (= call!7628 call!7625)))

(declare-fun b!81691 () Bool)

(declare-fun e!53302 () Bool)

(declare-fun e!53305 () Bool)

(assert (=> b!81691 (= e!53302 e!53305)))

(declare-fun res!42416 () Bool)

(assert (=> b!81691 (=> (not res!42416) (not e!53305))))

(assert (=> b!81691 (= res!42416 (contains!750 lt!38090 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81691 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun d!20267 () Bool)

(declare-fun e!53314 () Bool)

(assert (=> d!20267 e!53314))

(declare-fun res!42420 () Bool)

(assert (=> d!20267 (=> (not res!42420) (not e!53314))))

(assert (=> d!20267 (= res!42420 (or (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))))

(declare-fun lt!38088 () ListLongMap!1471)

(assert (=> d!20267 (= lt!38090 lt!38088)))

(declare-fun lt!38091 () Unit!2350)

(declare-fun e!53304 () Unit!2350)

(assert (=> d!20267 (= lt!38091 e!53304)))

(declare-fun c!12927 () Bool)

(declare-fun e!53303 () Bool)

(assert (=> d!20267 (= c!12927 e!53303)))

(declare-fun res!42422 () Bool)

(assert (=> d!20267 (=> (not res!42422) (not e!53303))))

(assert (=> d!20267 (= res!42422 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!20267 (= lt!38088 e!53311)))

(declare-fun c!12928 () Bool)

(assert (=> d!20267 (= c!12928 (and (not (= (bvand lt!37479 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!37479 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20267 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20267 (= (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37479 lt!37195 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38090)))

(declare-fun bm!7621 () Bool)

(declare-fun call!7624 () Bool)

(assert (=> bm!7621 (= call!7624 (contains!750 lt!38090 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81692 () Bool)

(declare-fun e!53308 () Bool)

(assert (=> b!81692 (= e!53308 (not call!7624))))

(declare-fun b!81693 () Bool)

(assert (=> b!81693 (= e!53310 call!7628)))

(declare-fun b!81694 () Bool)

(assert (=> b!81694 (= e!53314 e!53308)))

(declare-fun c!12931 () Bool)

(assert (=> b!81694 (= c!12931 (not (= (bvand lt!37479 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!81695 () Bool)

(declare-fun e!53306 () Bool)

(declare-fun e!53312 () Bool)

(assert (=> b!81695 (= e!53306 e!53312)))

(declare-fun res!42419 () Bool)

(declare-fun call!7629 () Bool)

(assert (=> b!81695 (= res!42419 call!7629)))

(assert (=> b!81695 (=> (not res!42419) (not e!53312))))

(declare-fun b!81696 () Bool)

(declare-fun res!42421 () Bool)

(assert (=> b!81696 (=> (not res!42421) (not e!53314))))

(assert (=> b!81696 (= res!42421 e!53306)))

(declare-fun c!12930 () Bool)

(assert (=> b!81696 (= c!12930 (not (= (bvand lt!37479 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!81697 () Bool)

(declare-fun e!53307 () Bool)

(assert (=> b!81697 (= e!53307 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7622 () Bool)

(declare-fun call!7623 () ListLongMap!1471)

(declare-fun call!7627 () ListLongMap!1471)

(assert (=> bm!7622 (= call!7623 call!7627)))

(declare-fun bm!7623 () Bool)

(declare-fun call!7626 () ListLongMap!1471)

(assert (=> bm!7623 (= call!7627 call!7626)))

(declare-fun b!81698 () Bool)

(declare-fun lt!38092 () Unit!2350)

(assert (=> b!81698 (= e!53304 lt!38092)))

(declare-fun lt!38089 () ListLongMap!1471)

(assert (=> b!81698 (= lt!38089 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37479 lt!37195 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38077 () (_ BitVec 64))

(assert (=> b!81698 (= lt!38077 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38097 () (_ BitVec 64))

(assert (=> b!81698 (= lt!38097 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38078 () Unit!2350)

(assert (=> b!81698 (= lt!38078 (addStillContains!56 lt!38089 lt!38077 lt!37195 lt!38097))))

(assert (=> b!81698 (contains!750 (+!111 lt!38089 (tuple2!2203 lt!38077 lt!37195)) lt!38097)))

(declare-fun lt!38095 () Unit!2350)

(assert (=> b!81698 (= lt!38095 lt!38078)))

(declare-fun lt!38084 () ListLongMap!1471)

(assert (=> b!81698 (= lt!38084 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37479 lt!37195 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38093 () (_ BitVec 64))

(assert (=> b!81698 (= lt!38093 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38080 () (_ BitVec 64))

(assert (=> b!81698 (= lt!38080 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38098 () Unit!2350)

(assert (=> b!81698 (= lt!38098 (addApplyDifferent!56 lt!38084 lt!38093 (minValue!2189 newMap!16) lt!38080))))

(assert (=> b!81698 (= (apply!80 (+!111 lt!38084 (tuple2!2203 lt!38093 (minValue!2189 newMap!16))) lt!38080) (apply!80 lt!38084 lt!38080))))

(declare-fun lt!38081 () Unit!2350)

(assert (=> b!81698 (= lt!38081 lt!38098)))

(declare-fun lt!38087 () ListLongMap!1471)

(assert (=> b!81698 (= lt!38087 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37479 lt!37195 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38083 () (_ BitVec 64))

(assert (=> b!81698 (= lt!38083 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38085 () (_ BitVec 64))

(assert (=> b!81698 (= lt!38085 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38096 () Unit!2350)

(assert (=> b!81698 (= lt!38096 (addApplyDifferent!56 lt!38087 lt!38083 lt!37195 lt!38085))))

(assert (=> b!81698 (= (apply!80 (+!111 lt!38087 (tuple2!2203 lt!38083 lt!37195)) lt!38085) (apply!80 lt!38087 lt!38085))))

(declare-fun lt!38082 () Unit!2350)

(assert (=> b!81698 (= lt!38082 lt!38096)))

(declare-fun lt!38086 () ListLongMap!1471)

(assert (=> b!81698 (= lt!38086 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37479 lt!37195 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38094 () (_ BitVec 64))

(assert (=> b!81698 (= lt!38094 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38079 () (_ BitVec 64))

(assert (=> b!81698 (= lt!38079 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81698 (= lt!38092 (addApplyDifferent!56 lt!38086 lt!38094 (minValue!2189 newMap!16) lt!38079))))

(assert (=> b!81698 (= (apply!80 (+!111 lt!38086 (tuple2!2203 lt!38094 (minValue!2189 newMap!16))) lt!38079) (apply!80 lt!38086 lt!38079))))

(declare-fun b!81699 () Bool)

(declare-fun Unit!2402 () Unit!2350)

(assert (=> b!81699 (= e!53304 Unit!2402)))

(declare-fun b!81700 () Bool)

(assert (=> b!81700 (= e!53308 e!53313)))

(declare-fun res!42417 () Bool)

(assert (=> b!81700 (= res!42417 call!7624)))

(assert (=> b!81700 (=> (not res!42417) (not e!53313))))

(declare-fun b!81701 () Bool)

(declare-fun c!12926 () Bool)

(assert (=> b!81701 (= c!12926 (and (not (= (bvand lt!37479 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!37479 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53309 () ListLongMap!1471)

(assert (=> b!81701 (= e!53310 e!53309)))

(declare-fun b!81702 () Bool)

(assert (=> b!81702 (= e!53303 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81703 () Bool)

(assert (=> b!81703 (= e!53309 call!7623)))

(declare-fun bm!7624 () Bool)

(assert (=> bm!7624 (= call!7629 (contains!750 lt!38090 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81704 () Bool)

(assert (=> b!81704 (= e!53306 (not call!7629))))

(declare-fun b!81705 () Bool)

(assert (=> b!81705 (= e!53312 (= (apply!80 lt!38090 #b0000000000000000000000000000000000000000000000000000000000000000) lt!37195))))

(declare-fun bm!7625 () Bool)

(assert (=> bm!7625 (= call!7626 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37479 lt!37195 (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!81706 () Bool)

(assert (=> b!81706 (= e!53305 (= (apply!80 lt!38090 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81706 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_values!2276 newMap!16))))))

(assert (=> b!81706 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!81707 () Bool)

(assert (=> b!81707 (= e!53309 call!7628)))

(declare-fun bm!7626 () Bool)

(assert (=> bm!7626 (= call!7625 (+!111 (ite c!12928 call!7626 (ite c!12929 call!7627 call!7623)) (ite (or c!12928 c!12929) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!81708 () Bool)

(declare-fun res!42423 () Bool)

(assert (=> b!81708 (=> (not res!42423) (not e!53314))))

(assert (=> b!81708 (= res!42423 e!53302)))

(declare-fun res!42418 () Bool)

(assert (=> b!81708 (=> res!42418 e!53302)))

(assert (=> b!81708 (= res!42418 (not e!53307))))

(declare-fun res!42424 () Bool)

(assert (=> b!81708 (=> (not res!42424) (not e!53307))))

(assert (=> b!81708 (= res!42424 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (= (and d!20267 c!12928) b!81688))

(assert (= (and d!20267 (not c!12928)) b!81690))

(assert (= (and b!81690 c!12929) b!81693))

(assert (= (and b!81690 (not c!12929)) b!81701))

(assert (= (and b!81701 c!12926) b!81707))

(assert (= (and b!81701 (not c!12926)) b!81703))

(assert (= (or b!81707 b!81703) bm!7622))

(assert (= (or b!81693 bm!7622) bm!7623))

(assert (= (or b!81693 b!81707) bm!7620))

(assert (= (or b!81688 bm!7623) bm!7625))

(assert (= (or b!81688 bm!7620) bm!7626))

(assert (= (and d!20267 res!42422) b!81702))

(assert (= (and d!20267 c!12927) b!81698))

(assert (= (and d!20267 (not c!12927)) b!81699))

(assert (= (and d!20267 res!42420) b!81708))

(assert (= (and b!81708 res!42424) b!81697))

(assert (= (and b!81708 (not res!42418)) b!81691))

(assert (= (and b!81691 res!42416) b!81706))

(assert (= (and b!81708 res!42423) b!81696))

(assert (= (and b!81696 c!12930) b!81695))

(assert (= (and b!81696 (not c!12930)) b!81704))

(assert (= (and b!81695 res!42419) b!81705))

(assert (= (or b!81695 b!81704) bm!7624))

(assert (= (and b!81696 res!42421) b!81694))

(assert (= (and b!81694 c!12931) b!81700))

(assert (= (and b!81694 (not c!12931)) b!81692))

(assert (= (and b!81700 res!42417) b!81689))

(assert (= (or b!81700 b!81692) bm!7621))

(declare-fun b_lambda!3643 () Bool)

(assert (=> (not b_lambda!3643) (not b!81706)))

(assert (=> b!81706 t!5218))

(declare-fun b_and!4973 () Bool)

(assert (= b_and!4969 (and (=> t!5218 result!2857) b_and!4973)))

(assert (=> b!81706 t!5220))

(declare-fun b_and!4975 () Bool)

(assert (= b_and!4971 (and (=> t!5220 result!2859) b_and!4975)))

(declare-fun m!83809 () Bool)

(assert (=> bm!7625 m!83809))

(declare-fun m!83811 () Bool)

(assert (=> bm!7621 m!83811))

(assert (=> b!81706 m!81991))

(assert (=> b!81706 m!81991))

(declare-fun m!83813 () Bool)

(assert (=> b!81706 m!83813))

(assert (=> b!81706 m!82029))

(assert (=> b!81706 m!82031))

(assert (=> b!81706 m!82029))

(assert (=> b!81706 m!82031))

(assert (=> b!81706 m!82033))

(assert (=> b!81697 m!81991))

(assert (=> b!81697 m!81991))

(assert (=> b!81697 m!82035))

(declare-fun m!83815 () Bool)

(assert (=> b!81688 m!83815))

(assert (=> b!81691 m!81991))

(assert (=> b!81691 m!81991))

(declare-fun m!83817 () Bool)

(assert (=> b!81691 m!83817))

(declare-fun m!83819 () Bool)

(assert (=> bm!7626 m!83819))

(assert (=> d!20267 m!82043))

(declare-fun m!83821 () Bool)

(assert (=> bm!7624 m!83821))

(declare-fun m!83823 () Bool)

(assert (=> b!81698 m!83823))

(declare-fun m!83825 () Bool)

(assert (=> b!81698 m!83825))

(declare-fun m!83827 () Bool)

(assert (=> b!81698 m!83827))

(assert (=> b!81698 m!81991))

(declare-fun m!83829 () Bool)

(assert (=> b!81698 m!83829))

(declare-fun m!83831 () Bool)

(assert (=> b!81698 m!83831))

(declare-fun m!83833 () Bool)

(assert (=> b!81698 m!83833))

(declare-fun m!83835 () Bool)

(assert (=> b!81698 m!83835))

(declare-fun m!83837 () Bool)

(assert (=> b!81698 m!83837))

(assert (=> b!81698 m!83825))

(assert (=> b!81698 m!83809))

(declare-fun m!83839 () Bool)

(assert (=> b!81698 m!83839))

(declare-fun m!83841 () Bool)

(assert (=> b!81698 m!83841))

(declare-fun m!83843 () Bool)

(assert (=> b!81698 m!83843))

(declare-fun m!83845 () Bool)

(assert (=> b!81698 m!83845))

(assert (=> b!81698 m!83833))

(declare-fun m!83847 () Bool)

(assert (=> b!81698 m!83847))

(declare-fun m!83849 () Bool)

(assert (=> b!81698 m!83849))

(assert (=> b!81698 m!83829))

(declare-fun m!83851 () Bool)

(assert (=> b!81698 m!83851))

(assert (=> b!81698 m!83839))

(declare-fun m!83853 () Bool)

(assert (=> b!81705 m!83853))

(declare-fun m!83855 () Bool)

(assert (=> b!81689 m!83855))

(assert (=> b!81702 m!81991))

(assert (=> b!81702 m!81991))

(assert (=> b!81702 m!82035))

(assert (=> d!19831 d!20267))

(declare-fun d!20269 () Bool)

(assert (=> d!20269 (= (apply!80 lt!37664 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!137 (toList!751 lt!37664) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3446 () Bool)

(assert (= bs!3446 d!20269))

(declare-fun m!83857 () Bool)

(assert (=> bs!3446 m!83857))

(assert (=> bs!3446 m!83857))

(declare-fun m!83859 () Bool)

(assert (=> bs!3446 m!83859))

(assert (=> b!80914 d!20269))

(declare-fun b!81710 () Bool)

(declare-fun res!42425 () Bool)

(declare-fun e!53315 () Bool)

(assert (=> b!81710 (=> (not res!42425) (not e!53315))))

(assert (=> b!81710 (= res!42425 (bvsge (size!2146 (v!2610 (underlying!284 thiss!992))) (_size!418 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun b!81711 () Bool)

(declare-fun res!42426 () Bool)

(assert (=> b!81711 (=> (not res!42426) (not e!53315))))

(assert (=> b!81711 (= res!42426 (= (size!2146 (v!2610 (underlying!284 thiss!992))) (bvadd (_size!418 (v!2610 (underlying!284 thiss!992))) (bvsdiv (bvadd (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!20271 () Bool)

(declare-fun res!42427 () Bool)

(assert (=> d!20271 (=> (not res!42427) (not e!53315))))

(assert (=> d!20271 (= res!42427 (validMask!0 (mask!6299 (v!2610 (underlying!284 thiss!992)))))))

(assert (=> d!20271 (= (simpleValid!55 (v!2610 (underlying!284 thiss!992))) e!53315)))

(declare-fun b!81709 () Bool)

(declare-fun res!42428 () Bool)

(assert (=> b!81709 (=> (not res!42428) (not e!53315))))

(assert (=> b!81709 (= res!42428 (and (= (size!2143 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000001)) (= (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (size!2143 (_values!2276 (v!2610 (underlying!284 thiss!992))))) (bvsge (_size!418 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!418 (v!2610 (underlying!284 thiss!992))) (bvadd (mask!6299 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!81712 () Bool)

(assert (=> b!81712 (= e!53315 (and (bvsge (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2140 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!418 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!20271 res!42427) b!81709))

(assert (= (and b!81709 res!42428) b!81710))

(assert (= (and b!81710 res!42425) b!81711))

(assert (= (and b!81711 res!42426) b!81712))

(declare-fun m!83861 () Bool)

(assert (=> b!81710 m!83861))

(assert (=> b!81711 m!83861))

(assert (=> d!20271 m!81603))

(assert (=> d!19929 d!20271))

(declare-fun b!81714 () Bool)

(declare-fun e!53316 () Option!143)

(declare-fun e!53317 () Option!143)

(assert (=> b!81714 (= e!53316 e!53317)))

(declare-fun c!12933 () Bool)

(assert (=> b!81714 (= c!12933 (and ((_ is Cons!1534) (toList!751 lt!37690)) (not (= (_1!1111 (h!2123 (toList!751 lt!37690))) (_1!1111 (tuple2!2203 lt!37321 lt!37324))))))))

(declare-fun d!20273 () Bool)

(declare-fun c!12932 () Bool)

(assert (=> d!20273 (= c!12932 (and ((_ is Cons!1534) (toList!751 lt!37690)) (= (_1!1111 (h!2123 (toList!751 lt!37690))) (_1!1111 (tuple2!2203 lt!37321 lt!37324)))))))

(assert (=> d!20273 (= (getValueByKey!137 (toList!751 lt!37690) (_1!1111 (tuple2!2203 lt!37321 lt!37324))) e!53316)))

(declare-fun b!81716 () Bool)

(assert (=> b!81716 (= e!53317 None!141)))

(declare-fun b!81715 () Bool)

(assert (=> b!81715 (= e!53317 (getValueByKey!137 (t!5209 (toList!751 lt!37690)) (_1!1111 (tuple2!2203 lt!37321 lt!37324))))))

(declare-fun b!81713 () Bool)

(assert (=> b!81713 (= e!53316 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37690)))))))

(assert (= (and d!20273 c!12932) b!81713))

(assert (= (and d!20273 (not c!12932)) b!81714))

(assert (= (and b!81714 c!12933) b!81715))

(assert (= (and b!81714 (not c!12933)) b!81716))

(declare-fun m!83863 () Bool)

(assert (=> b!81715 m!83863))

(assert (=> b!80946 d!20273))

(declare-fun d!20275 () Bool)

(assert (=> d!20275 (= (apply!80 lt!37504 lt!37500) (get!1198 (getValueByKey!137 (toList!751 lt!37504) lt!37500)))))

(declare-fun bs!3447 () Bool)

(assert (= bs!3447 d!20275))

(declare-fun m!83865 () Bool)

(assert (=> bs!3447 m!83865))

(assert (=> bs!3447 m!83865))

(declare-fun m!83867 () Bool)

(assert (=> bs!3447 m!83867))

(assert (=> b!80697 d!20275))

(declare-fun d!20277 () Bool)

(assert (=> d!20277 (= (apply!80 (+!111 lt!37504 (tuple2!2203 lt!37513 (minValue!2189 newMap!16))) lt!37500) (apply!80 lt!37504 lt!37500))))

(declare-fun lt!38099 () Unit!2350)

(assert (=> d!20277 (= lt!38099 (choose!479 lt!37504 lt!37513 (minValue!2189 newMap!16) lt!37500))))

(declare-fun e!53318 () Bool)

(assert (=> d!20277 e!53318))

(declare-fun res!42429 () Bool)

(assert (=> d!20277 (=> (not res!42429) (not e!53318))))

(assert (=> d!20277 (= res!42429 (contains!750 lt!37504 lt!37500))))

(assert (=> d!20277 (= (addApplyDifferent!56 lt!37504 lt!37513 (minValue!2189 newMap!16) lt!37500) lt!38099)))

(declare-fun b!81717 () Bool)

(assert (=> b!81717 (= e!53318 (not (= lt!37500 lt!37513)))))

(assert (= (and d!20277 res!42429) b!81717))

(assert (=> d!20277 m!82049))

(assert (=> d!20277 m!82051))

(declare-fun m!83869 () Bool)

(assert (=> d!20277 m!83869))

(assert (=> d!20277 m!82059))

(assert (=> d!20277 m!82049))

(declare-fun m!83871 () Bool)

(assert (=> d!20277 m!83871))

(assert (=> b!80697 d!20277))

(declare-fun d!20279 () Bool)

(assert (=> d!20279 (= (apply!80 (+!111 lt!37506 (tuple2!2203 lt!37514 (minValue!2189 newMap!16))) lt!37499) (apply!80 lt!37506 lt!37499))))

(declare-fun lt!38100 () Unit!2350)

(assert (=> d!20279 (= lt!38100 (choose!479 lt!37506 lt!37514 (minValue!2189 newMap!16) lt!37499))))

(declare-fun e!53319 () Bool)

(assert (=> d!20279 e!53319))

(declare-fun res!42430 () Bool)

(assert (=> d!20279 (=> (not res!42430) (not e!53319))))

(assert (=> d!20279 (= res!42430 (contains!750 lt!37506 lt!37499))))

(assert (=> d!20279 (= (addApplyDifferent!56 lt!37506 lt!37514 (minValue!2189 newMap!16) lt!37499) lt!38100)))

(declare-fun b!81718 () Bool)

(assert (=> b!81718 (= e!53319 (not (= lt!37499 lt!37514)))))

(assert (= (and d!20279 res!42430) b!81718))

(assert (=> d!20279 m!82053))

(assert (=> d!20279 m!82075))

(declare-fun m!83873 () Bool)

(assert (=> d!20279 m!83873))

(assert (=> d!20279 m!82069))

(assert (=> d!20279 m!82053))

(declare-fun m!83875 () Bool)

(assert (=> d!20279 m!83875))

(assert (=> b!80697 d!20279))

(declare-fun d!20281 () Bool)

(declare-fun e!53320 () Bool)

(assert (=> d!20281 e!53320))

(declare-fun res!42431 () Bool)

(assert (=> d!20281 (=> (not res!42431) (not e!53320))))

(declare-fun lt!38104 () ListLongMap!1471)

(assert (=> d!20281 (= res!42431 (contains!750 lt!38104 (_1!1111 (tuple2!2203 lt!37513 (minValue!2189 newMap!16)))))))

(declare-fun lt!38101 () List!1538)

(assert (=> d!20281 (= lt!38104 (ListLongMap!1472 lt!38101))))

(declare-fun lt!38102 () Unit!2350)

(declare-fun lt!38103 () Unit!2350)

(assert (=> d!20281 (= lt!38102 lt!38103)))

(assert (=> d!20281 (= (getValueByKey!137 lt!38101 (_1!1111 (tuple2!2203 lt!37513 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37513 (minValue!2189 newMap!16)))))))

(assert (=> d!20281 (= lt!38103 (lemmaContainsTupThenGetReturnValue!56 lt!38101 (_1!1111 (tuple2!2203 lt!37513 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37513 (minValue!2189 newMap!16)))))))

(assert (=> d!20281 (= lt!38101 (insertStrictlySorted!58 (toList!751 lt!37504) (_1!1111 (tuple2!2203 lt!37513 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37513 (minValue!2189 newMap!16)))))))

(assert (=> d!20281 (= (+!111 lt!37504 (tuple2!2203 lt!37513 (minValue!2189 newMap!16))) lt!38104)))

(declare-fun b!81719 () Bool)

(declare-fun res!42432 () Bool)

(assert (=> b!81719 (=> (not res!42432) (not e!53320))))

(assert (=> b!81719 (= res!42432 (= (getValueByKey!137 (toList!751 lt!38104) (_1!1111 (tuple2!2203 lt!37513 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37513 (minValue!2189 newMap!16))))))))

(declare-fun b!81720 () Bool)

(assert (=> b!81720 (= e!53320 (contains!753 (toList!751 lt!38104) (tuple2!2203 lt!37513 (minValue!2189 newMap!16))))))

(assert (= (and d!20281 res!42431) b!81719))

(assert (= (and b!81719 res!42432) b!81720))

(declare-fun m!83877 () Bool)

(assert (=> d!20281 m!83877))

(declare-fun m!83879 () Bool)

(assert (=> d!20281 m!83879))

(declare-fun m!83881 () Bool)

(assert (=> d!20281 m!83881))

(declare-fun m!83883 () Bool)

(assert (=> d!20281 m!83883))

(declare-fun m!83885 () Bool)

(assert (=> b!81719 m!83885))

(declare-fun m!83887 () Bool)

(assert (=> b!81720 m!83887))

(assert (=> b!80697 d!20281))

(declare-fun d!20283 () Bool)

(assert (=> d!20283 (= (apply!80 lt!37506 lt!37499) (get!1198 (getValueByKey!137 (toList!751 lt!37506) lt!37499)))))

(declare-fun bs!3448 () Bool)

(assert (= bs!3448 d!20283))

(declare-fun m!83889 () Bool)

(assert (=> bs!3448 m!83889))

(assert (=> bs!3448 m!83889))

(declare-fun m!83891 () Bool)

(assert (=> bs!3448 m!83891))

(assert (=> b!80697 d!20283))

(declare-fun d!20285 () Bool)

(declare-fun e!53321 () Bool)

(assert (=> d!20285 e!53321))

(declare-fun res!42433 () Bool)

(assert (=> d!20285 (=> res!42433 e!53321)))

(declare-fun lt!38107 () Bool)

(assert (=> d!20285 (= res!42433 (not lt!38107))))

(declare-fun lt!38106 () Bool)

(assert (=> d!20285 (= lt!38107 lt!38106)))

(declare-fun lt!38105 () Unit!2350)

(declare-fun e!53322 () Unit!2350)

(assert (=> d!20285 (= lt!38105 e!53322)))

(declare-fun c!12934 () Bool)

(assert (=> d!20285 (= c!12934 lt!38106)))

(assert (=> d!20285 (= lt!38106 (containsKey!141 (toList!751 (+!111 lt!37509 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16)))) lt!37517))))

(assert (=> d!20285 (= (contains!750 (+!111 lt!37509 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16))) lt!37517) lt!38107)))

(declare-fun b!81721 () Bool)

(declare-fun lt!38108 () Unit!2350)

(assert (=> b!81721 (= e!53322 lt!38108)))

(assert (=> b!81721 (= lt!38108 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (+!111 lt!37509 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16)))) lt!37517))))

(assert (=> b!81721 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37509 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16)))) lt!37517))))

(declare-fun b!81722 () Bool)

(declare-fun Unit!2403 () Unit!2350)

(assert (=> b!81722 (= e!53322 Unit!2403)))

(declare-fun b!81723 () Bool)

(assert (=> b!81723 (= e!53321 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37509 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16)))) lt!37517)))))

(assert (= (and d!20285 c!12934) b!81721))

(assert (= (and d!20285 (not c!12934)) b!81722))

(assert (= (and d!20285 (not res!42433)) b!81723))

(declare-fun m!83893 () Bool)

(assert (=> d!20285 m!83893))

(declare-fun m!83895 () Bool)

(assert (=> b!81721 m!83895))

(declare-fun m!83897 () Bool)

(assert (=> b!81721 m!83897))

(assert (=> b!81721 m!83897))

(declare-fun m!83899 () Bool)

(assert (=> b!81721 m!83899))

(assert (=> b!81723 m!83897))

(assert (=> b!81723 m!83897))

(assert (=> b!81723 m!83899))

(assert (=> b!80697 d!20285))

(declare-fun d!20287 () Bool)

(assert (=> d!20287 (= (apply!80 (+!111 lt!37507 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16))) lt!37505) (apply!80 lt!37507 lt!37505))))

(declare-fun lt!38109 () Unit!2350)

(assert (=> d!20287 (= lt!38109 (choose!479 lt!37507 lt!37503 (zeroValue!2189 newMap!16) lt!37505))))

(declare-fun e!53323 () Bool)

(assert (=> d!20287 e!53323))

(declare-fun res!42434 () Bool)

(assert (=> d!20287 (=> (not res!42434) (not e!53323))))

(assert (=> d!20287 (= res!42434 (contains!750 lt!37507 lt!37505))))

(assert (=> d!20287 (= (addApplyDifferent!56 lt!37507 lt!37503 (zeroValue!2189 newMap!16) lt!37505) lt!38109)))

(declare-fun b!81724 () Bool)

(assert (=> b!81724 (= e!53323 (not (= lt!37505 lt!37503)))))

(assert (= (and d!20287 res!42434) b!81724))

(assert (=> d!20287 m!82057))

(assert (=> d!20287 m!82071))

(declare-fun m!83901 () Bool)

(assert (=> d!20287 m!83901))

(assert (=> d!20287 m!82067))

(assert (=> d!20287 m!82057))

(declare-fun m!83903 () Bool)

(assert (=> d!20287 m!83903))

(assert (=> b!80697 d!20287))

(declare-fun d!20289 () Bool)

(declare-fun e!53324 () Bool)

(assert (=> d!20289 e!53324))

(declare-fun res!42435 () Bool)

(assert (=> d!20289 (=> (not res!42435) (not e!53324))))

(declare-fun lt!38113 () ListLongMap!1471)

(assert (=> d!20289 (= res!42435 (contains!750 lt!38113 (_1!1111 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16)))))))

(declare-fun lt!38110 () List!1538)

(assert (=> d!20289 (= lt!38113 (ListLongMap!1472 lt!38110))))

(declare-fun lt!38111 () Unit!2350)

(declare-fun lt!38112 () Unit!2350)

(assert (=> d!20289 (= lt!38111 lt!38112)))

(assert (=> d!20289 (= (getValueByKey!137 lt!38110 (_1!1111 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20289 (= lt!38112 (lemmaContainsTupThenGetReturnValue!56 lt!38110 (_1!1111 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20289 (= lt!38110 (insertStrictlySorted!58 (toList!751 lt!37509) (_1!1111 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20289 (= (+!111 lt!37509 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16))) lt!38113)))

(declare-fun b!81725 () Bool)

(declare-fun res!42436 () Bool)

(assert (=> b!81725 (=> (not res!42436) (not e!53324))))

(assert (=> b!81725 (= res!42436 (= (getValueByKey!137 (toList!751 lt!38113) (_1!1111 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16))))))))

(declare-fun b!81726 () Bool)

(assert (=> b!81726 (= e!53324 (contains!753 (toList!751 lt!38113) (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16))))))

(assert (= (and d!20289 res!42435) b!81725))

(assert (= (and b!81725 res!42436) b!81726))

(declare-fun m!83905 () Bool)

(assert (=> d!20289 m!83905))

(declare-fun m!83907 () Bool)

(assert (=> d!20289 m!83907))

(declare-fun m!83909 () Bool)

(assert (=> d!20289 m!83909))

(declare-fun m!83911 () Bool)

(assert (=> d!20289 m!83911))

(declare-fun m!83913 () Bool)

(assert (=> b!81725 m!83913))

(declare-fun m!83915 () Bool)

(assert (=> b!81726 m!83915))

(assert (=> b!80697 d!20289))

(declare-fun d!20291 () Bool)

(assert (=> d!20291 (contains!750 (+!111 lt!37509 (tuple2!2203 lt!37497 (zeroValue!2189 newMap!16))) lt!37517)))

(declare-fun lt!38114 () Unit!2350)

(assert (=> d!20291 (= lt!38114 (choose!480 lt!37509 lt!37497 (zeroValue!2189 newMap!16) lt!37517))))

(assert (=> d!20291 (contains!750 lt!37509 lt!37517)))

(assert (=> d!20291 (= (addStillContains!56 lt!37509 lt!37497 (zeroValue!2189 newMap!16) lt!37517) lt!38114)))

(declare-fun bs!3449 () Bool)

(assert (= bs!3449 d!20291))

(assert (=> bs!3449 m!82063))

(assert (=> bs!3449 m!82063))

(assert (=> bs!3449 m!82065))

(declare-fun m!83917 () Bool)

(assert (=> bs!3449 m!83917))

(declare-fun m!83919 () Bool)

(assert (=> bs!3449 m!83919))

(assert (=> b!80697 d!20291))

(declare-fun d!20293 () Bool)

(assert (=> d!20293 (= (apply!80 (+!111 lt!37506 (tuple2!2203 lt!37514 (minValue!2189 newMap!16))) lt!37499) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37506 (tuple2!2203 lt!37514 (minValue!2189 newMap!16)))) lt!37499)))))

(declare-fun bs!3450 () Bool)

(assert (= bs!3450 d!20293))

(declare-fun m!83921 () Bool)

(assert (=> bs!3450 m!83921))

(assert (=> bs!3450 m!83921))

(declare-fun m!83923 () Bool)

(assert (=> bs!3450 m!83923))

(assert (=> b!80697 d!20293))

(declare-fun b!81727 () Bool)

(declare-fun e!53329 () Bool)

(assert (=> b!81727 (= e!53329 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81727 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!7627 () Bool)

(declare-fun call!7630 () ListLongMap!1471)

(assert (=> bm!7627 (= call!7630 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16)))))

(declare-fun b!81728 () Bool)

(declare-fun e!53327 () ListLongMap!1471)

(declare-fun e!53326 () ListLongMap!1471)

(assert (=> b!81728 (= e!53327 e!53326)))

(declare-fun c!12936 () Bool)

(assert (=> b!81728 (= c!12936 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!20295 () Bool)

(declare-fun e!53328 () Bool)

(assert (=> d!20295 e!53328))

(declare-fun res!42437 () Bool)

(assert (=> d!20295 (=> (not res!42437) (not e!53328))))

(declare-fun lt!38120 () ListLongMap!1471)

(assert (=> d!20295 (= res!42437 (not (contains!750 lt!38120 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20295 (= lt!38120 e!53327)))

(declare-fun c!12937 () Bool)

(assert (=> d!20295 (= c!12937 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!20295 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20295 (= (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38120)))

(declare-fun b!81729 () Bool)

(declare-fun res!42440 () Bool)

(assert (=> b!81729 (=> (not res!42440) (not e!53328))))

(assert (=> b!81729 (= res!42440 (not (contains!750 lt!38120 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81730 () Bool)

(declare-fun e!53330 () Bool)

(assert (=> b!81730 (= e!53330 (isEmpty!334 lt!38120))))

(declare-fun b!81731 () Bool)

(assert (=> b!81731 (= e!53327 (ListLongMap!1472 Nil!1535))))

(declare-fun b!81732 () Bool)

(assert (=> b!81732 (= e!53330 (= lt!38120 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16))))))

(declare-fun b!81733 () Bool)

(declare-fun e!53325 () Bool)

(assert (=> b!81733 (= e!53328 e!53325)))

(declare-fun c!12938 () Bool)

(assert (=> b!81733 (= c!12938 e!53329)))

(declare-fun res!42438 () Bool)

(assert (=> b!81733 (=> (not res!42438) (not e!53329))))

(assert (=> b!81733 (= res!42438 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!81734 () Bool)

(assert (=> b!81734 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> b!81734 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_values!2276 newMap!16))))))

(declare-fun e!53331 () Bool)

(assert (=> b!81734 (= e!53331 (= (apply!80 lt!38120 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81735 () Bool)

(declare-fun lt!38117 () Unit!2350)

(declare-fun lt!38116 () Unit!2350)

(assert (=> b!81735 (= lt!38117 lt!38116)))

(declare-fun lt!38118 () V!3003)

(declare-fun lt!38115 () (_ BitVec 64))

(declare-fun lt!38121 () (_ BitVec 64))

(declare-fun lt!38119 () ListLongMap!1471)

(assert (=> b!81735 (not (contains!750 (+!111 lt!38119 (tuple2!2203 lt!38115 lt!38118)) lt!38121))))

(assert (=> b!81735 (= lt!38116 (addStillNotContains!31 lt!38119 lt!38115 lt!38118 lt!38121))))

(assert (=> b!81735 (= lt!38121 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81735 (= lt!38118 (get!1195 (select (arr!1901 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81735 (= lt!38115 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81735 (= lt!38119 call!7630)))

(assert (=> b!81735 (= e!53326 (+!111 call!7630 (tuple2!2203 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (get!1195 (select (arr!1901 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81736 () Bool)

(assert (=> b!81736 (= e!53325 e!53331)))

(assert (=> b!81736 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun res!42439 () Bool)

(assert (=> b!81736 (= res!42439 (contains!750 lt!38120 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81736 (=> (not res!42439) (not e!53331))))

(declare-fun b!81737 () Bool)

(assert (=> b!81737 (= e!53326 call!7630)))

(declare-fun b!81738 () Bool)

(assert (=> b!81738 (= e!53325 e!53330)))

(declare-fun c!12935 () Bool)

(assert (=> b!81738 (= c!12935 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (= (and d!20295 c!12937) b!81731))

(assert (= (and d!20295 (not c!12937)) b!81728))

(assert (= (and b!81728 c!12936) b!81735))

(assert (= (and b!81728 (not c!12936)) b!81737))

(assert (= (or b!81735 b!81737) bm!7627))

(assert (= (and d!20295 res!42437) b!81729))

(assert (= (and b!81729 res!42440) b!81733))

(assert (= (and b!81733 res!42438) b!81727))

(assert (= (and b!81733 c!12938) b!81736))

(assert (= (and b!81733 (not c!12938)) b!81738))

(assert (= (and b!81736 res!42439) b!81734))

(assert (= (and b!81738 c!12935) b!81732))

(assert (= (and b!81738 (not c!12935)) b!81730))

(declare-fun b_lambda!3645 () Bool)

(assert (=> (not b_lambda!3645) (not b!81734)))

(assert (=> b!81734 t!5218))

(declare-fun b_and!4977 () Bool)

(assert (= b_and!4973 (and (=> t!5218 result!2857) b_and!4977)))

(assert (=> b!81734 t!5220))

(declare-fun b_and!4979 () Bool)

(assert (= b_and!4975 (and (=> t!5220 result!2859) b_and!4979)))

(declare-fun b_lambda!3647 () Bool)

(assert (=> (not b_lambda!3647) (not b!81735)))

(assert (=> b!81735 t!5218))

(declare-fun b_and!4981 () Bool)

(assert (= b_and!4977 (and (=> t!5218 result!2857) b_and!4981)))

(assert (=> b!81735 t!5220))

(declare-fun b_and!4983 () Bool)

(assert (= b_and!4979 (and (=> t!5220 result!2859) b_and!4983)))

(declare-fun m!83925 () Bool)

(assert (=> b!81735 m!83925))

(assert (=> b!81735 m!82031))

(declare-fun m!83927 () Bool)

(assert (=> b!81735 m!83927))

(assert (=> b!81735 m!82029))

(assert (=> b!81735 m!82031))

(assert (=> b!81735 m!82033))

(assert (=> b!81735 m!81991))

(declare-fun m!83929 () Bool)

(assert (=> b!81735 m!83929))

(assert (=> b!81735 m!82029))

(assert (=> b!81735 m!83925))

(declare-fun m!83931 () Bool)

(assert (=> b!81735 m!83931))

(declare-fun m!83933 () Bool)

(assert (=> b!81730 m!83933))

(assert (=> b!81734 m!82031))

(assert (=> b!81734 m!82029))

(assert (=> b!81734 m!82031))

(assert (=> b!81734 m!82033))

(assert (=> b!81734 m!81991))

(assert (=> b!81734 m!82029))

(assert (=> b!81734 m!81991))

(declare-fun m!83935 () Bool)

(assert (=> b!81734 m!83935))

(declare-fun m!83937 () Bool)

(assert (=> b!81729 m!83937))

(assert (=> b!81727 m!81991))

(assert (=> b!81727 m!81991))

(assert (=> b!81727 m!82035))

(declare-fun m!83939 () Bool)

(assert (=> bm!7627 m!83939))

(declare-fun m!83941 () Bool)

(assert (=> d!20295 m!83941))

(assert (=> d!20295 m!82043))

(assert (=> b!81728 m!81991))

(assert (=> b!81728 m!81991))

(assert (=> b!81728 m!82035))

(assert (=> b!81736 m!81991))

(assert (=> b!81736 m!81991))

(declare-fun m!83943 () Bool)

(assert (=> b!81736 m!83943))

(assert (=> b!81732 m!83939))

(assert (=> b!80697 d!20295))

(declare-fun d!20297 () Bool)

(assert (=> d!20297 (= (apply!80 lt!37507 lt!37505) (get!1198 (getValueByKey!137 (toList!751 lt!37507) lt!37505)))))

(declare-fun bs!3451 () Bool)

(assert (= bs!3451 d!20297))

(declare-fun m!83945 () Bool)

(assert (=> bs!3451 m!83945))

(assert (=> bs!3451 m!83945))

(declare-fun m!83947 () Bool)

(assert (=> bs!3451 m!83947))

(assert (=> b!80697 d!20297))

(declare-fun d!20299 () Bool)

(assert (=> d!20299 (= (apply!80 (+!111 lt!37504 (tuple2!2203 lt!37513 (minValue!2189 newMap!16))) lt!37500) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37504 (tuple2!2203 lt!37513 (minValue!2189 newMap!16)))) lt!37500)))))

(declare-fun bs!3452 () Bool)

(assert (= bs!3452 d!20299))

(declare-fun m!83949 () Bool)

(assert (=> bs!3452 m!83949))

(assert (=> bs!3452 m!83949))

(declare-fun m!83951 () Bool)

(assert (=> bs!3452 m!83951))

(assert (=> b!80697 d!20299))

(declare-fun d!20301 () Bool)

(declare-fun e!53332 () Bool)

(assert (=> d!20301 e!53332))

(declare-fun res!42441 () Bool)

(assert (=> d!20301 (=> (not res!42441) (not e!53332))))

(declare-fun lt!38125 () ListLongMap!1471)

(assert (=> d!20301 (= res!42441 (contains!750 lt!38125 (_1!1111 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16)))))))

(declare-fun lt!38122 () List!1538)

(assert (=> d!20301 (= lt!38125 (ListLongMap!1472 lt!38122))))

(declare-fun lt!38123 () Unit!2350)

(declare-fun lt!38124 () Unit!2350)

(assert (=> d!20301 (= lt!38123 lt!38124)))

(assert (=> d!20301 (= (getValueByKey!137 lt!38122 (_1!1111 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20301 (= lt!38124 (lemmaContainsTupThenGetReturnValue!56 lt!38122 (_1!1111 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20301 (= lt!38122 (insertStrictlySorted!58 (toList!751 lt!37507) (_1!1111 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16)))))))

(assert (=> d!20301 (= (+!111 lt!37507 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16))) lt!38125)))

(declare-fun b!81739 () Bool)

(declare-fun res!42442 () Bool)

(assert (=> b!81739 (=> (not res!42442) (not e!53332))))

(assert (=> b!81739 (= res!42442 (= (getValueByKey!137 (toList!751 lt!38125) (_1!1111 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16))))))))

(declare-fun b!81740 () Bool)

(assert (=> b!81740 (= e!53332 (contains!753 (toList!751 lt!38125) (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16))))))

(assert (= (and d!20301 res!42441) b!81739))

(assert (= (and b!81739 res!42442) b!81740))

(declare-fun m!83953 () Bool)

(assert (=> d!20301 m!83953))

(declare-fun m!83955 () Bool)

(assert (=> d!20301 m!83955))

(declare-fun m!83957 () Bool)

(assert (=> d!20301 m!83957))

(declare-fun m!83959 () Bool)

(assert (=> d!20301 m!83959))

(declare-fun m!83961 () Bool)

(assert (=> b!81739 m!83961))

(declare-fun m!83963 () Bool)

(assert (=> b!81740 m!83963))

(assert (=> b!80697 d!20301))

(declare-fun d!20303 () Bool)

(declare-fun e!53333 () Bool)

(assert (=> d!20303 e!53333))

(declare-fun res!42443 () Bool)

(assert (=> d!20303 (=> (not res!42443) (not e!53333))))

(declare-fun lt!38129 () ListLongMap!1471)

(assert (=> d!20303 (= res!42443 (contains!750 lt!38129 (_1!1111 (tuple2!2203 lt!37514 (minValue!2189 newMap!16)))))))

(declare-fun lt!38126 () List!1538)

(assert (=> d!20303 (= lt!38129 (ListLongMap!1472 lt!38126))))

(declare-fun lt!38127 () Unit!2350)

(declare-fun lt!38128 () Unit!2350)

(assert (=> d!20303 (= lt!38127 lt!38128)))

(assert (=> d!20303 (= (getValueByKey!137 lt!38126 (_1!1111 (tuple2!2203 lt!37514 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37514 (minValue!2189 newMap!16)))))))

(assert (=> d!20303 (= lt!38128 (lemmaContainsTupThenGetReturnValue!56 lt!38126 (_1!1111 (tuple2!2203 lt!37514 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37514 (minValue!2189 newMap!16)))))))

(assert (=> d!20303 (= lt!38126 (insertStrictlySorted!58 (toList!751 lt!37506) (_1!1111 (tuple2!2203 lt!37514 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 lt!37514 (minValue!2189 newMap!16)))))))

(assert (=> d!20303 (= (+!111 lt!37506 (tuple2!2203 lt!37514 (minValue!2189 newMap!16))) lt!38129)))

(declare-fun b!81741 () Bool)

(declare-fun res!42444 () Bool)

(assert (=> b!81741 (=> (not res!42444) (not e!53333))))

(assert (=> b!81741 (= res!42444 (= (getValueByKey!137 (toList!751 lt!38129) (_1!1111 (tuple2!2203 lt!37514 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 lt!37514 (minValue!2189 newMap!16))))))))

(declare-fun b!81742 () Bool)

(assert (=> b!81742 (= e!53333 (contains!753 (toList!751 lt!38129) (tuple2!2203 lt!37514 (minValue!2189 newMap!16))))))

(assert (= (and d!20303 res!42443) b!81741))

(assert (= (and b!81741 res!42444) b!81742))

(declare-fun m!83965 () Bool)

(assert (=> d!20303 m!83965))

(declare-fun m!83967 () Bool)

(assert (=> d!20303 m!83967))

(declare-fun m!83969 () Bool)

(assert (=> d!20303 m!83969))

(declare-fun m!83971 () Bool)

(assert (=> d!20303 m!83971))

(declare-fun m!83973 () Bool)

(assert (=> b!81741 m!83973))

(declare-fun m!83975 () Bool)

(assert (=> b!81742 m!83975))

(assert (=> b!80697 d!20303))

(declare-fun d!20305 () Bool)

(assert (=> d!20305 (= (apply!80 (+!111 lt!37507 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16))) lt!37505) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37507 (tuple2!2203 lt!37503 (zeroValue!2189 newMap!16)))) lt!37505)))))

(declare-fun bs!3453 () Bool)

(assert (= bs!3453 d!20305))

(declare-fun m!83977 () Bool)

(assert (=> bs!3453 m!83977))

(assert (=> bs!3453 m!83977))

(declare-fun m!83979 () Bool)

(assert (=> bs!3453 m!83979))

(assert (=> b!80697 d!20305))

(declare-fun d!20307 () Bool)

(declare-fun lt!38130 () Bool)

(assert (=> d!20307 (= lt!38130 (select (content!84 (toList!751 lt!37875)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!53335 () Bool)

(assert (=> d!20307 (= lt!38130 e!53335)))

(declare-fun res!42446 () Bool)

(assert (=> d!20307 (=> (not res!42446) (not e!53335))))

(assert (=> d!20307 (= res!42446 ((_ is Cons!1534) (toList!751 lt!37875)))))

(assert (=> d!20307 (= (contains!753 (toList!751 lt!37875) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!38130)))

(declare-fun b!81743 () Bool)

(declare-fun e!53334 () Bool)

(assert (=> b!81743 (= e!53335 e!53334)))

(declare-fun res!42445 () Bool)

(assert (=> b!81743 (=> res!42445 e!53334)))

(assert (=> b!81743 (= res!42445 (= (h!2123 (toList!751 lt!37875)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!81744 () Bool)

(assert (=> b!81744 (= e!53334 (contains!753 (t!5209 (toList!751 lt!37875)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!20307 res!42446) b!81743))

(assert (= (and b!81743 (not res!42445)) b!81744))

(declare-fun m!83981 () Bool)

(assert (=> d!20307 m!83981))

(declare-fun m!83983 () Bool)

(assert (=> d!20307 m!83983))

(declare-fun m!83985 () Bool)

(assert (=> b!81744 m!83985))

(assert (=> b!81158 d!20307))

(declare-fun d!20309 () Bool)

(assert (=> d!20309 (= (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80863 d!20309))

(declare-fun d!20311 () Bool)

(assert (=> d!20311 (= (isEmpty!336 (toList!751 lt!37326)) ((_ is Nil!1535) (toList!751 lt!37326)))))

(assert (=> d!19921 d!20311))

(declare-fun d!20313 () Bool)

(declare-fun res!42447 () Bool)

(declare-fun e!53336 () Bool)

(assert (=> d!20313 (=> res!42447 e!53336)))

(assert (=> d!20313 (= res!42447 (and ((_ is Cons!1534) (toList!751 lt!37306)) (= (_1!1111 (h!2123 (toList!751 lt!37306))) (_1!1111 lt!37202))))))

(assert (=> d!20313 (= (containsKey!141 (toList!751 lt!37306) (_1!1111 lt!37202)) e!53336)))

(declare-fun b!81745 () Bool)

(declare-fun e!53337 () Bool)

(assert (=> b!81745 (= e!53336 e!53337)))

(declare-fun res!42448 () Bool)

(assert (=> b!81745 (=> (not res!42448) (not e!53337))))

(assert (=> b!81745 (= res!42448 (and (or (not ((_ is Cons!1534) (toList!751 lt!37306))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37306))) (_1!1111 lt!37202))) ((_ is Cons!1534) (toList!751 lt!37306)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37306))) (_1!1111 lt!37202))))))

(declare-fun b!81746 () Bool)

(assert (=> b!81746 (= e!53337 (containsKey!141 (t!5209 (toList!751 lt!37306)) (_1!1111 lt!37202)))))

(assert (= (and d!20313 (not res!42447)) b!81745))

(assert (= (and b!81745 res!42448) b!81746))

(declare-fun m!83987 () Bool)

(assert (=> b!81746 m!83987))

(assert (=> d!19895 d!20313))

(declare-fun d!20315 () Bool)

(declare-fun e!53338 () Bool)

(assert (=> d!20315 e!53338))

(declare-fun res!42449 () Bool)

(assert (=> d!20315 (=> (not res!42449) (not e!53338))))

(declare-fun lt!38134 () ListLongMap!1471)

(assert (=> d!20315 (= res!42449 (contains!750 lt!38134 (_1!1111 (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(declare-fun lt!38131 () List!1538)

(assert (=> d!20315 (= lt!38134 (ListLongMap!1472 lt!38131))))

(declare-fun lt!38132 () Unit!2350)

(declare-fun lt!38133 () Unit!2350)

(assert (=> d!20315 (= lt!38132 lt!38133)))

(assert (=> d!20315 (= (getValueByKey!137 lt!38131 (_1!1111 (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))) (Some!142 (_2!1111 (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20315 (= lt!38133 (lemmaContainsTupThenGetReturnValue!56 lt!38131 (_1!1111 (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (_2!1111 (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20315 (= lt!38131 (insertStrictlySorted!58 (toList!751 (ite c!12703 call!7533 (ite c!12704 call!7534 call!7530))) (_1!1111 (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (_2!1111 (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20315 (= (+!111 (ite c!12703 call!7533 (ite c!12704 call!7534 call!7530)) (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) lt!38134)))

(declare-fun b!81747 () Bool)

(declare-fun res!42450 () Bool)

(assert (=> b!81747 (=> (not res!42450) (not e!53338))))

(assert (=> b!81747 (= res!42450 (= (getValueByKey!137 (toList!751 lt!38134) (_1!1111 (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))) (Some!142 (_2!1111 (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))))

(declare-fun b!81748 () Bool)

(assert (=> b!81748 (= e!53338 (contains!753 (toList!751 lt!38134) (ite (or c!12703 c!12704) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (= (and d!20315 res!42449) b!81747))

(assert (= (and b!81747 res!42450) b!81748))

(declare-fun m!83989 () Bool)

(assert (=> d!20315 m!83989))

(declare-fun m!83991 () Bool)

(assert (=> d!20315 m!83991))

(declare-fun m!83993 () Bool)

(assert (=> d!20315 m!83993))

(declare-fun m!83995 () Bool)

(assert (=> d!20315 m!83995))

(declare-fun m!83997 () Bool)

(assert (=> b!81747 m!83997))

(declare-fun m!83999 () Bool)

(assert (=> b!81748 m!83999))

(assert (=> bm!7533 d!20315))

(assert (=> d!19761 d!20037))

(assert (=> d!19809 d!20037))

(declare-fun d!20317 () Bool)

(declare-fun res!42451 () Bool)

(declare-fun e!53339 () Bool)

(assert (=> d!20317 (=> res!42451 e!53339)))

(assert (=> d!20317 (= res!42451 (and ((_ is Cons!1534) (toList!751 lt!37302)) (= (_1!1111 (h!2123 (toList!751 lt!37302))) (_1!1111 lt!37197))))))

(assert (=> d!20317 (= (containsKey!141 (toList!751 lt!37302) (_1!1111 lt!37197)) e!53339)))

(declare-fun b!81749 () Bool)

(declare-fun e!53340 () Bool)

(assert (=> b!81749 (= e!53339 e!53340)))

(declare-fun res!42452 () Bool)

(assert (=> b!81749 (=> (not res!42452) (not e!53340))))

(assert (=> b!81749 (= res!42452 (and (or (not ((_ is Cons!1534) (toList!751 lt!37302))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37302))) (_1!1111 lt!37197))) ((_ is Cons!1534) (toList!751 lt!37302)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37302))) (_1!1111 lt!37197))))))

(declare-fun b!81750 () Bool)

(assert (=> b!81750 (= e!53340 (containsKey!141 (t!5209 (toList!751 lt!37302)) (_1!1111 lt!37197)))))

(assert (= (and d!20317 (not res!42451)) b!81749))

(assert (= (and b!81749 res!42452) b!81750))

(declare-fun m!84001 () Bool)

(assert (=> b!81750 m!84001))

(assert (=> d!19869 d!20317))

(declare-fun b!81752 () Bool)

(declare-fun e!53341 () Option!143)

(declare-fun e!53342 () Option!143)

(assert (=> b!81752 (= e!53341 e!53342)))

(declare-fun c!12940 () Bool)

(assert (=> b!81752 (= c!12940 (and ((_ is Cons!1534) (toList!751 lt!37720)) (not (= (_1!1111 (h!2123 (toList!751 lt!37720))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!12939 () Bool)

(declare-fun d!20319 () Bool)

(assert (=> d!20319 (= c!12939 (and ((_ is Cons!1534) (toList!751 lt!37720)) (= (_1!1111 (h!2123 (toList!751 lt!37720))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20319 (= (getValueByKey!137 (toList!751 lt!37720) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) e!53341)))

(declare-fun b!81754 () Bool)

(assert (=> b!81754 (= e!53342 None!141)))

(declare-fun b!81753 () Bool)

(assert (=> b!81753 (= e!53342 (getValueByKey!137 (t!5209 (toList!751 lt!37720)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81751 () Bool)

(assert (=> b!81751 (= e!53341 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37720)))))))

(assert (= (and d!20319 c!12939) b!81751))

(assert (= (and d!20319 (not c!12939)) b!81752))

(assert (= (and b!81752 c!12940) b!81753))

(assert (= (and b!81752 (not c!12940)) b!81754))

(declare-fun m!84003 () Bool)

(assert (=> b!81753 m!84003))

(assert (=> b!80967 d!20319))

(assert (=> d!19745 d!19731))

(declare-fun d!20321 () Bool)

(declare-fun e!53343 () Bool)

(assert (=> d!20321 e!53343))

(declare-fun res!42453 () Bool)

(assert (=> d!20321 (=> res!42453 e!53343)))

(declare-fun lt!38137 () Bool)

(assert (=> d!20321 (= res!42453 (not lt!38137))))

(declare-fun lt!38136 () Bool)

(assert (=> d!20321 (= lt!38137 lt!38136)))

(declare-fun lt!38135 () Unit!2350)

(declare-fun e!53344 () Unit!2350)

(assert (=> d!20321 (= lt!38135 e!53344)))

(declare-fun c!12941 () Bool)

(assert (=> d!20321 (= c!12941 lt!38136)))

(assert (=> d!20321 (= lt!38136 (containsKey!141 (toList!751 lt!37382) lt!37380))))

(assert (=> d!20321 (= (contains!750 lt!37382 lt!37380) lt!38137)))

(declare-fun b!81755 () Bool)

(declare-fun lt!38138 () Unit!2350)

(assert (=> b!81755 (= e!53344 lt!38138)))

(assert (=> b!81755 (= lt!38138 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37382) lt!37380))))

(assert (=> b!81755 (isDefined!91 (getValueByKey!137 (toList!751 lt!37382) lt!37380))))

(declare-fun b!81756 () Bool)

(declare-fun Unit!2404 () Unit!2350)

(assert (=> b!81756 (= e!53344 Unit!2404)))

(declare-fun b!81757 () Bool)

(assert (=> b!81757 (= e!53343 (isDefined!91 (getValueByKey!137 (toList!751 lt!37382) lt!37380)))))

(assert (= (and d!20321 c!12941) b!81755))

(assert (= (and d!20321 (not c!12941)) b!81756))

(assert (= (and d!20321 (not res!42453)) b!81757))

(declare-fun m!84005 () Bool)

(assert (=> d!20321 m!84005))

(declare-fun m!84007 () Bool)

(assert (=> b!81755 m!84007))

(assert (=> b!81755 m!82175))

(assert (=> b!81755 m!82175))

(declare-fun m!84009 () Bool)

(assert (=> b!81755 m!84009))

(assert (=> b!81757 m!82175))

(assert (=> b!81757 m!82175))

(assert (=> b!81757 m!84009))

(assert (=> d!19745 d!20321))

(declare-fun d!20323 () Bool)

(assert (=> d!20323 (= (apply!80 (+!111 lt!37382 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37380) (apply!80 lt!37382 lt!37380))))

(assert (=> d!20323 true))

(declare-fun _$34!825 () Unit!2350)

(assert (=> d!20323 (= (choose!479 lt!37382 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37380) _$34!825)))

(declare-fun bs!3454 () Bool)

(assert (= bs!3454 d!20323))

(assert (=> bs!3454 m!81893))

(assert (=> bs!3454 m!81893))

(assert (=> bs!3454 m!81907))

(assert (=> bs!3454 m!81903))

(assert (=> d!19745 d!20323))

(assert (=> d!19745 d!19739))

(assert (=> d!19745 d!19747))

(declare-fun d!20325 () Bool)

(assert (=> d!20325 (= (get!1197 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!80633 d!20325))

(declare-fun d!20327 () Bool)

(declare-fun e!53346 () Bool)

(assert (=> d!20327 e!53346))

(declare-fun res!42454 () Bool)

(assert (=> d!20327 (=> (not res!42454) (not e!53346))))

(declare-fun lt!38139 () List!1538)

(assert (=> d!20327 (= res!42454 (isStrictlySorted!291 lt!38139))))

(declare-fun e!53345 () List!1538)

(assert (=> d!20327 (= lt!38139 e!53345)))

(declare-fun c!12945 () Bool)

(assert (=> d!20327 (= c!12945 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37190))) (bvslt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37190)))) (_1!1111 lt!37197))))))

(assert (=> d!20327 (isStrictlySorted!291 (t!5209 (toList!751 lt!37190)))))

(assert (=> d!20327 (= (insertStrictlySorted!58 (t!5209 (toList!751 lt!37190)) (_1!1111 lt!37197) (_2!1111 lt!37197)) lt!38139)))

(declare-fun b!81758 () Bool)

(assert (=> b!81758 (= e!53346 (contains!753 lt!38139 (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun bm!7628 () Bool)

(declare-fun call!7631 () List!1538)

(declare-fun call!7632 () List!1538)

(assert (=> bm!7628 (= call!7631 call!7632)))

(declare-fun b!81759 () Bool)

(declare-fun res!42455 () Bool)

(assert (=> b!81759 (=> (not res!42455) (not e!53346))))

(assert (=> b!81759 (= res!42455 (containsKey!141 lt!38139 (_1!1111 lt!37197)))))

(declare-fun b!81760 () Bool)

(declare-fun e!53348 () List!1538)

(assert (=> b!81760 (= e!53348 (insertStrictlySorted!58 (t!5209 (t!5209 (toList!751 lt!37190))) (_1!1111 lt!37197) (_2!1111 lt!37197)))))

(declare-fun b!81761 () Bool)

(assert (=> b!81761 (= e!53345 call!7632)))

(declare-fun bm!7629 () Bool)

(assert (=> bm!7629 (= call!7632 ($colon$colon!69 e!53348 (ite c!12945 (h!2123 (t!5209 (toList!751 lt!37190))) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197)))))))

(declare-fun c!12943 () Bool)

(assert (=> bm!7629 (= c!12943 c!12945)))

(declare-fun b!81762 () Bool)

(declare-fun c!12944 () Bool)

(declare-fun c!12942 () Bool)

(assert (=> b!81762 (= e!53348 (ite c!12942 (t!5209 (t!5209 (toList!751 lt!37190))) (ite c!12944 (Cons!1534 (h!2123 (t!5209 (toList!751 lt!37190))) (t!5209 (t!5209 (toList!751 lt!37190)))) Nil!1535)))))

(declare-fun b!81763 () Bool)

(declare-fun e!53349 () List!1538)

(assert (=> b!81763 (= e!53349 call!7631)))

(declare-fun b!81764 () Bool)

(declare-fun e!53347 () List!1538)

(declare-fun call!7633 () List!1538)

(assert (=> b!81764 (= e!53347 call!7633)))

(declare-fun b!81765 () Bool)

(assert (=> b!81765 (= c!12944 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37190))) (bvsgt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37190)))) (_1!1111 lt!37197))))))

(assert (=> b!81765 (= e!53349 e!53347)))

(declare-fun b!81766 () Bool)

(assert (=> b!81766 (= e!53347 call!7633)))

(declare-fun bm!7630 () Bool)

(assert (=> bm!7630 (= call!7633 call!7631)))

(declare-fun b!81767 () Bool)

(assert (=> b!81767 (= e!53345 e!53349)))

(assert (=> b!81767 (= c!12942 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37190))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37190)))) (_1!1111 lt!37197))))))

(assert (= (and d!20327 c!12945) b!81761))

(assert (= (and d!20327 (not c!12945)) b!81767))

(assert (= (and b!81767 c!12942) b!81763))

(assert (= (and b!81767 (not c!12942)) b!81765))

(assert (= (and b!81765 c!12944) b!81764))

(assert (= (and b!81765 (not c!12944)) b!81766))

(assert (= (or b!81764 b!81766) bm!7630))

(assert (= (or b!81763 bm!7630) bm!7628))

(assert (= (or b!81761 bm!7628) bm!7629))

(assert (= (and bm!7629 c!12943) b!81760))

(assert (= (and bm!7629 (not c!12943)) b!81762))

(assert (= (and d!20327 res!42454) b!81759))

(assert (= (and b!81759 res!42455) b!81758))

(declare-fun m!84011 () Bool)

(assert (=> b!81759 m!84011))

(declare-fun m!84013 () Bool)

(assert (=> bm!7629 m!84013))

(declare-fun m!84015 () Bool)

(assert (=> d!20327 m!84015))

(assert (=> d!20327 m!83015))

(declare-fun m!84017 () Bool)

(assert (=> b!81760 m!84017))

(declare-fun m!84019 () Bool)

(assert (=> b!81758 m!84019))

(assert (=> b!81021 d!20327))

(declare-fun d!20329 () Bool)

(assert (=> d!20329 (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!38140 () Unit!2350)

(assert (=> d!20329 (= lt!38140 (choose!485 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!53350 () Bool)

(assert (=> d!20329 e!53350))

(declare-fun res!42456 () Bool)

(assert (=> d!20329 (=> (not res!42456) (not e!53350))))

(assert (=> d!20329 (= res!42456 (isStrictlySorted!291 (toList!751 lt!37385)))))

(assert (=> d!20329 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!38140)))

(declare-fun b!81768 () Bool)

(assert (=> b!81768 (= e!53350 (containsKey!141 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20329 res!42456) b!81768))

(assert (=> d!20329 m!81727))

(assert (=> d!20329 m!82379))

(assert (=> d!20329 m!82379))

(assert (=> d!20329 m!82941))

(assert (=> d!20329 m!81727))

(declare-fun m!84021 () Bool)

(assert (=> d!20329 m!84021))

(assert (=> d!20329 m!83033))

(assert (=> b!81768 m!81727))

(assert (=> b!81768 m!82937))

(assert (=> b!81170 d!20329))

(declare-fun d!20331 () Bool)

(assert (=> d!20331 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37385) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3455 () Bool)

(assert (= bs!3455 d!20331))

(assert (=> bs!3455 m!82379))

(declare-fun m!84023 () Bool)

(assert (=> bs!3455 m!84023))

(assert (=> b!81170 d!20331))

(assert (=> b!81170 d!20113))

(assert (=> b!80767 d!20105))

(assert (=> b!80767 d!20107))

(declare-fun d!20333 () Bool)

(assert (=> d!20333 (= (apply!80 lt!37510 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!137 (toList!751 lt!37510) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3456 () Bool)

(assert (= bs!3456 d!20333))

(assert (=> bs!3456 m!83341))

(assert (=> bs!3456 m!83341))

(declare-fun m!84025 () Bool)

(assert (=> bs!3456 m!84025))

(assert (=> b!80704 d!20333))

(declare-fun d!20335 () Bool)

(assert (=> d!20335 (= (apply!80 lt!37609 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1198 (getValueByKey!137 (toList!751 lt!37609) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3457 () Bool)

(assert (= bs!3457 d!20335))

(assert (=> bs!3457 m!82345))

(declare-fun m!84027 () Bool)

(assert (=> bs!3457 m!84027))

(assert (=> bs!3457 m!84027))

(declare-fun m!84029 () Bool)

(assert (=> bs!3457 m!84029))

(assert (=> b!80870 d!20335))

(declare-fun d!20337 () Bool)

(declare-fun c!12946 () Bool)

(assert (=> d!20337 (= c!12946 ((_ is ValueCellFull!915) (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!53351 () V!3003)

(assert (=> d!20337 (= (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53351)))

(declare-fun b!81769 () Bool)

(assert (=> b!81769 (= e!53351 (get!1196 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81770 () Bool)

(assert (=> b!81770 (= e!53351 (get!1197 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20337 c!12946) b!81769))

(assert (= (and d!20337 (not c!12946)) b!81770))

(assert (=> b!81769 m!82341))

(assert (=> b!81769 m!81633))

(declare-fun m!84031 () Bool)

(assert (=> b!81769 m!84031))

(assert (=> b!81770 m!82341))

(assert (=> b!81770 m!81633))

(declare-fun m!84033 () Bool)

(assert (=> b!81770 m!84033))

(assert (=> b!80870 d!20337))

(declare-fun d!20339 () Bool)

(declare-fun lt!38141 () Bool)

(assert (=> d!20339 (= lt!38141 (select (content!84 lt!37530) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun e!53353 () Bool)

(assert (=> d!20339 (= lt!38141 e!53353)))

(declare-fun res!42458 () Bool)

(assert (=> d!20339 (=> (not res!42458) (not e!53353))))

(assert (=> d!20339 (= res!42458 ((_ is Cons!1534) lt!37530))))

(assert (=> d!20339 (= (contains!753 lt!37530 (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))) lt!38141)))

(declare-fun b!81771 () Bool)

(declare-fun e!53352 () Bool)

(assert (=> b!81771 (= e!53353 e!53352)))

(declare-fun res!42457 () Bool)

(assert (=> b!81771 (=> res!42457 e!53352)))

(assert (=> b!81771 (= res!42457 (= (h!2123 lt!37530) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun b!81772 () Bool)

(assert (=> b!81772 (= e!53352 (contains!753 (t!5209 lt!37530) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(assert (= (and d!20339 res!42458) b!81771))

(assert (= (and b!81771 (not res!42457)) b!81772))

(declare-fun m!84035 () Bool)

(assert (=> d!20339 m!84035))

(declare-fun m!84037 () Bool)

(assert (=> d!20339 m!84037))

(declare-fun m!84039 () Bool)

(assert (=> b!81772 m!84039))

(assert (=> b!80736 d!20339))

(declare-fun d!20341 () Bool)

(declare-fun res!42459 () Bool)

(declare-fun e!53354 () Bool)

(assert (=> d!20341 (=> res!42459 e!53354)))

(assert (=> d!20341 (= res!42459 (and ((_ is Cons!1534) (toList!751 call!7488)) (= (_1!1111 (h!2123 (toList!751 call!7488))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (=> d!20341 (= (containsKey!141 (toList!751 call!7488) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) e!53354)))

(declare-fun b!81773 () Bool)

(declare-fun e!53355 () Bool)

(assert (=> b!81773 (= e!53354 e!53355)))

(declare-fun res!42460 () Bool)

(assert (=> b!81773 (=> (not res!42460) (not e!53355))))

(assert (=> b!81773 (= res!42460 (and (or (not ((_ is Cons!1534) (toList!751 call!7488))) (bvsle (_1!1111 (h!2123 (toList!751 call!7488))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))) ((_ is Cons!1534) (toList!751 call!7488)) (bvslt (_1!1111 (h!2123 (toList!751 call!7488))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(declare-fun b!81774 () Bool)

(assert (=> b!81774 (= e!53355 (containsKey!141 (t!5209 (toList!751 call!7488)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (= (and d!20341 (not res!42459)) b!81773))

(assert (= (and b!81773 res!42460) b!81774))

(assert (=> b!81774 m!81585))

(declare-fun m!84041 () Bool)

(assert (=> b!81774 m!84041))

(assert (=> d!19813 d!20341))

(declare-fun d!20343 () Bool)

(declare-fun e!53356 () Bool)

(assert (=> d!20343 e!53356))

(declare-fun res!42461 () Bool)

(assert (=> d!20343 (=> res!42461 e!53356)))

(declare-fun lt!38144 () Bool)

(assert (=> d!20343 (= res!42461 (not lt!38144))))

(declare-fun lt!38143 () Bool)

(assert (=> d!20343 (= lt!38144 lt!38143)))

(declare-fun lt!38142 () Unit!2350)

(declare-fun e!53357 () Unit!2350)

(assert (=> d!20343 (= lt!38142 e!53357)))

(declare-fun c!12947 () Bool)

(assert (=> d!20343 (= c!12947 lt!38143)))

(assert (=> d!20343 (= lt!38143 (containsKey!141 (toList!751 lt!37637) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20343 (= (contains!750 lt!37637 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) lt!38144)))

(declare-fun b!81775 () Bool)

(declare-fun lt!38145 () Unit!2350)

(assert (=> b!81775 (= e!53357 lt!38145)))

(assert (=> b!81775 (= lt!38145 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37637) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81775 (isDefined!91 (getValueByKey!137 (toList!751 lt!37637) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81776 () Bool)

(declare-fun Unit!2405 () Unit!2350)

(assert (=> b!81776 (= e!53357 Unit!2405)))

(declare-fun b!81777 () Bool)

(assert (=> b!81777 (= e!53356 (isDefined!91 (getValueByKey!137 (toList!751 lt!37637) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!20343 c!12947) b!81775))

(assert (= (and d!20343 (not c!12947)) b!81776))

(assert (= (and d!20343 (not res!42461)) b!81777))

(assert (=> d!20343 m!81991))

(declare-fun m!84043 () Bool)

(assert (=> d!20343 m!84043))

(assert (=> b!81775 m!81991))

(declare-fun m!84045 () Bool)

(assert (=> b!81775 m!84045))

(assert (=> b!81775 m!81991))

(declare-fun m!84047 () Bool)

(assert (=> b!81775 m!84047))

(assert (=> b!81775 m!84047))

(declare-fun m!84049 () Bool)

(assert (=> b!81775 m!84049))

(assert (=> b!81777 m!81991))

(assert (=> b!81777 m!84047))

(assert (=> b!81777 m!84047))

(assert (=> b!81777 m!84049))

(assert (=> b!80888 d!20343))

(declare-fun d!20345 () Bool)

(assert (=> d!20345 (= ($colon$colon!69 e!52721 (ite c!12653 (h!2123 (toList!751 (+!111 lt!37196 lt!37188))) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202)))) (Cons!1534 (ite c!12653 (h!2123 (toList!751 (+!111 lt!37196 lt!37188))) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))) e!52721))))

(assert (=> bm!7508 d!20345))

(declare-fun b!81779 () Bool)

(declare-fun e!53358 () Option!143)

(declare-fun e!53359 () Option!143)

(assert (=> b!81779 (= e!53358 e!53359)))

(declare-fun c!12949 () Bool)

(assert (=> b!81779 (= c!12949 (and ((_ is Cons!1534) (t!5209 lt!37291)) (not (= (_1!1111 (h!2123 (t!5209 lt!37291))) (_1!1111 lt!37202)))))))

(declare-fun d!20347 () Bool)

(declare-fun c!12948 () Bool)

(assert (=> d!20347 (= c!12948 (and ((_ is Cons!1534) (t!5209 lt!37291)) (= (_1!1111 (h!2123 (t!5209 lt!37291))) (_1!1111 lt!37202))))))

(assert (=> d!20347 (= (getValueByKey!137 (t!5209 lt!37291) (_1!1111 lt!37202)) e!53358)))

(declare-fun b!81781 () Bool)

(assert (=> b!81781 (= e!53359 None!141)))

(declare-fun b!81780 () Bool)

(assert (=> b!81780 (= e!53359 (getValueByKey!137 (t!5209 (t!5209 lt!37291)) (_1!1111 lt!37202)))))

(declare-fun b!81778 () Bool)

(assert (=> b!81778 (= e!53358 (Some!142 (_2!1111 (h!2123 (t!5209 lt!37291)))))))

(assert (= (and d!20347 c!12948) b!81778))

(assert (= (and d!20347 (not c!12948)) b!81779))

(assert (= (and b!81779 c!12949) b!81780))

(assert (= (and b!81779 (not c!12949)) b!81781))

(declare-fun m!84051 () Bool)

(assert (=> b!81780 m!84051))

(assert (=> b!80713 d!20347))

(declare-fun d!20349 () Bool)

(declare-fun lt!38146 () Bool)

(assert (=> d!20349 (= lt!38146 (select (content!84 lt!37287) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun e!53361 () Bool)

(assert (=> d!20349 (= lt!38146 e!53361)))

(declare-fun res!42463 () Bool)

(assert (=> d!20349 (=> (not res!42463) (not e!53361))))

(assert (=> d!20349 (= res!42463 ((_ is Cons!1534) lt!37287))))

(assert (=> d!20349 (= (contains!753 lt!37287 (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))) lt!38146)))

(declare-fun b!81782 () Bool)

(declare-fun e!53360 () Bool)

(assert (=> b!81782 (= e!53361 e!53360)))

(declare-fun res!42462 () Bool)

(assert (=> b!81782 (=> res!42462 e!53360)))

(assert (=> b!81782 (= res!42462 (= (h!2123 lt!37287) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun b!81783 () Bool)

(assert (=> b!81783 (= e!53360 (contains!753 (t!5209 lt!37287) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(assert (= (and d!20349 res!42463) b!81782))

(assert (= (and b!81782 (not res!42462)) b!81783))

(declare-fun m!84053 () Bool)

(assert (=> d!20349 m!84053))

(declare-fun m!84055 () Bool)

(assert (=> d!20349 m!84055))

(declare-fun m!84057 () Bool)

(assert (=> b!81783 m!84057))

(assert (=> b!80656 d!20349))

(declare-fun d!20351 () Bool)

(assert (=> d!20351 (= (get!1198 (getValueByKey!137 (toList!751 lt!37381) lt!37374)) (v!2614 (getValueByKey!137 (toList!751 lt!37381) lt!37374)))))

(assert (=> d!19753 d!20351))

(declare-fun b!81785 () Bool)

(declare-fun e!53362 () Option!143)

(declare-fun e!53363 () Option!143)

(assert (=> b!81785 (= e!53362 e!53363)))

(declare-fun c!12951 () Bool)

(assert (=> b!81785 (= c!12951 (and ((_ is Cons!1534) (toList!751 lt!37381)) (not (= (_1!1111 (h!2123 (toList!751 lt!37381))) lt!37374))))))

(declare-fun d!20353 () Bool)

(declare-fun c!12950 () Bool)

(assert (=> d!20353 (= c!12950 (and ((_ is Cons!1534) (toList!751 lt!37381)) (= (_1!1111 (h!2123 (toList!751 lt!37381))) lt!37374)))))

(assert (=> d!20353 (= (getValueByKey!137 (toList!751 lt!37381) lt!37374) e!53362)))

(declare-fun b!81787 () Bool)

(assert (=> b!81787 (= e!53363 None!141)))

(declare-fun b!81786 () Bool)

(assert (=> b!81786 (= e!53363 (getValueByKey!137 (t!5209 (toList!751 lt!37381)) lt!37374))))

(declare-fun b!81784 () Bool)

(assert (=> b!81784 (= e!53362 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37381)))))))

(assert (= (and d!20353 c!12950) b!81784))

(assert (= (and d!20353 (not c!12950)) b!81785))

(assert (= (and b!81785 c!12951) b!81786))

(assert (= (and b!81785 (not c!12951)) b!81787))

(declare-fun m!84059 () Bool)

(assert (=> b!81786 m!84059))

(assert (=> d!19753 d!20353))

(declare-fun d!20355 () Bool)

(declare-fun e!53364 () Bool)

(assert (=> d!20355 e!53364))

(declare-fun res!42464 () Bool)

(assert (=> d!20355 (=> res!42464 e!53364)))

(declare-fun lt!38149 () Bool)

(assert (=> d!20355 (= res!42464 (not lt!38149))))

(declare-fun lt!38148 () Bool)

(assert (=> d!20355 (= lt!38149 lt!38148)))

(declare-fun lt!38147 () Unit!2350)

(declare-fun e!53365 () Unit!2350)

(assert (=> d!20355 (= lt!38147 e!53365)))

(declare-fun c!12952 () Bool)

(assert (=> d!20355 (= c!12952 lt!38148)))

(assert (=> d!20355 (= lt!38148 (containsKey!141 (toList!751 lt!37510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20355 (= (contains!750 lt!37510 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38149)))

(declare-fun b!81788 () Bool)

(declare-fun lt!38150 () Unit!2350)

(assert (=> b!81788 (= e!53365 lt!38150)))

(assert (=> b!81788 (= lt!38150 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81788 (isDefined!91 (getValueByKey!137 (toList!751 lt!37510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81789 () Bool)

(declare-fun Unit!2406 () Unit!2350)

(assert (=> b!81789 (= e!53365 Unit!2406)))

(declare-fun b!81790 () Bool)

(assert (=> b!81790 (= e!53364 (isDefined!91 (getValueByKey!137 (toList!751 lt!37510) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20355 c!12952) b!81788))

(assert (= (and d!20355 (not c!12952)) b!81789))

(assert (= (and d!20355 (not res!42464)) b!81790))

(declare-fun m!84061 () Bool)

(assert (=> d!20355 m!84061))

(declare-fun m!84063 () Bool)

(assert (=> b!81788 m!84063))

(declare-fun m!84065 () Bool)

(assert (=> b!81788 m!84065))

(assert (=> b!81788 m!84065))

(declare-fun m!84067 () Bool)

(assert (=> b!81788 m!84067))

(assert (=> b!81790 m!84065))

(assert (=> b!81790 m!84065))

(assert (=> b!81790 m!84067))

(assert (=> bm!7501 d!20355))

(declare-fun d!20357 () Bool)

(assert (=> d!20357 (contains!750 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))

(declare-fun lt!38153 () Unit!2350)

(declare-fun choose!489 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 64) (_ BitVec 32) Int) Unit!2350)

(assert (=> d!20357 (= lt!38153 (choose!489 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(assert (=> d!20357 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20357 (= (lemmaArrayContainsKeyThenInListMap!17 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38153)))

(declare-fun bs!3458 () Bool)

(assert (= bs!3458 d!20357))

(assert (=> bs!3458 m!81869))

(assert (=> bs!3458 m!81869))

(assert (=> bs!3458 m!81585))

(assert (=> bs!3458 m!82819))

(assert (=> bs!3458 m!81585))

(declare-fun m!84069 () Bool)

(assert (=> bs!3458 m!84069))

(assert (=> bs!3458 m!82043))

(assert (=> b!81113 d!20357))

(declare-fun d!20359 () Bool)

(declare-fun e!53366 () Bool)

(assert (=> d!20359 e!53366))

(declare-fun res!42465 () Bool)

(assert (=> d!20359 (=> res!42465 e!53366)))

(declare-fun lt!38156 () Bool)

(assert (=> d!20359 (= res!42465 (not lt!38156))))

(declare-fun lt!38155 () Bool)

(assert (=> d!20359 (= lt!38156 lt!38155)))

(declare-fun lt!38154 () Unit!2350)

(declare-fun e!53367 () Unit!2350)

(assert (=> d!20359 (= lt!38154 e!53367)))

(declare-fun c!12953 () Bool)

(assert (=> d!20359 (= c!12953 lt!38155)))

(assert (=> d!20359 (= lt!38155 (containsKey!141 (toList!751 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!20359 (= (contains!750 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) lt!38156)))

(declare-fun b!81791 () Bool)

(declare-fun lt!38157 () Unit!2350)

(assert (=> b!81791 (= e!53367 lt!38157)))

(assert (=> b!81791 (= lt!38157 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> b!81791 (isDefined!91 (getValueByKey!137 (toList!751 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!81792 () Bool)

(declare-fun Unit!2407 () Unit!2350)

(assert (=> b!81792 (= e!53367 Unit!2407)))

(declare-fun b!81793 () Bool)

(assert (=> b!81793 (= e!53366 (isDefined!91 (getValueByKey!137 (toList!751 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (= (and d!20359 c!12953) b!81791))

(assert (= (and d!20359 (not c!12953)) b!81792))

(assert (= (and d!20359 (not res!42465)) b!81793))

(assert (=> d!20359 m!81585))

(declare-fun m!84071 () Bool)

(assert (=> d!20359 m!84071))

(assert (=> b!81791 m!81585))

(declare-fun m!84073 () Bool)

(assert (=> b!81791 m!84073))

(assert (=> b!81791 m!81585))

(declare-fun m!84075 () Bool)

(assert (=> b!81791 m!84075))

(assert (=> b!81791 m!84075))

(declare-fun m!84077 () Bool)

(assert (=> b!81791 m!84077))

(assert (=> b!81793 m!81585))

(assert (=> b!81793 m!84075))

(assert (=> b!81793 m!84075))

(assert (=> b!81793 m!84077))

(assert (=> b!81113 d!20359))

(assert (=> b!81113 d!19699))

(declare-fun d!20361 () Bool)

(declare-fun lt!38158 () Bool)

(assert (=> d!20361 (= lt!38158 (select (content!84 (toList!751 lt!37738)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun e!53369 () Bool)

(assert (=> d!20361 (= lt!38158 e!53369)))

(declare-fun res!42467 () Bool)

(assert (=> d!20361 (=> (not res!42467) (not e!53369))))

(assert (=> d!20361 (= res!42467 ((_ is Cons!1534) (toList!751 lt!37738)))))

(assert (=> d!20361 (= (contains!753 (toList!751 lt!37738) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!38158)))

(declare-fun b!81794 () Bool)

(declare-fun e!53368 () Bool)

(assert (=> b!81794 (= e!53369 e!53368)))

(declare-fun res!42466 () Bool)

(assert (=> b!81794 (=> res!42466 e!53368)))

(assert (=> b!81794 (= res!42466 (= (h!2123 (toList!751 lt!37738)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun b!81795 () Bool)

(assert (=> b!81795 (= e!53368 (contains!753 (t!5209 (toList!751 lt!37738)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!20361 res!42467) b!81794))

(assert (= (and b!81794 (not res!42466)) b!81795))

(declare-fun m!84079 () Bool)

(assert (=> d!20361 m!84079))

(declare-fun m!84081 () Bool)

(assert (=> d!20361 m!84081))

(declare-fun m!84083 () Bool)

(assert (=> b!81795 m!84083))

(assert (=> b!80993 d!20361))

(declare-fun d!20363 () Bool)

(assert (=> d!20363 (isDefined!91 (getValueByKey!137 (toList!751 lt!37306) (_1!1111 lt!37202)))))

(declare-fun lt!38159 () Unit!2350)

(assert (=> d!20363 (= lt!38159 (choose!485 (toList!751 lt!37306) (_1!1111 lt!37202)))))

(declare-fun e!53370 () Bool)

(assert (=> d!20363 e!53370))

(declare-fun res!42468 () Bool)

(assert (=> d!20363 (=> (not res!42468) (not e!53370))))

(assert (=> d!20363 (= res!42468 (isStrictlySorted!291 (toList!751 lt!37306)))))

(assert (=> d!20363 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37306) (_1!1111 lt!37202)) lt!38159)))

(declare-fun b!81796 () Bool)

(assert (=> b!81796 (= e!53370 (containsKey!141 (toList!751 lt!37306) (_1!1111 lt!37202)))))

(assert (= (and d!20363 res!42468) b!81796))

(assert (=> d!20363 m!81839))

(assert (=> d!20363 m!81839))

(assert (=> d!20363 m!82863))

(declare-fun m!84085 () Bool)

(assert (=> d!20363 m!84085))

(declare-fun m!84087 () Bool)

(assert (=> d!20363 m!84087))

(assert (=> b!81796 m!82859))

(assert (=> b!81128 d!20363))

(declare-fun d!20365 () Bool)

(assert (=> d!20365 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37306) (_1!1111 lt!37202))) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37306) (_1!1111 lt!37202)))))))

(declare-fun bs!3459 () Bool)

(assert (= bs!3459 d!20365))

(assert (=> bs!3459 m!81839))

(declare-fun m!84089 () Bool)

(assert (=> bs!3459 m!84089))

(assert (=> b!81128 d!20365))

(assert (=> b!81128 d!19927))

(declare-fun d!20367 () Bool)

(assert (=> d!20367 (isDefined!91 (getValueByKey!137 (toList!751 lt!37294) (_1!1111 lt!37202)))))

(declare-fun lt!38160 () Unit!2350)

(assert (=> d!20367 (= lt!38160 (choose!485 (toList!751 lt!37294) (_1!1111 lt!37202)))))

(declare-fun e!53371 () Bool)

(assert (=> d!20367 e!53371))

(declare-fun res!42469 () Bool)

(assert (=> d!20367 (=> (not res!42469) (not e!53371))))

(assert (=> d!20367 (= res!42469 (isStrictlySorted!291 (toList!751 lt!37294)))))

(assert (=> d!20367 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37294) (_1!1111 lt!37202)) lt!38160)))

(declare-fun b!81797 () Bool)

(assert (=> b!81797 (= e!53371 (containsKey!141 (toList!751 lt!37294) (_1!1111 lt!37202)))))

(assert (= (and d!20367 res!42469) b!81797))

(assert (=> d!20367 m!81803))

(assert (=> d!20367 m!81803))

(assert (=> d!20367 m!82085))

(declare-fun m!84091 () Bool)

(assert (=> d!20367 m!84091))

(declare-fun m!84093 () Bool)

(assert (=> d!20367 m!84093))

(assert (=> b!81797 m!82081))

(assert (=> b!80708 d!20367))

(declare-fun d!20369 () Bool)

(assert (=> d!20369 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37294) (_1!1111 lt!37202))) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37294) (_1!1111 lt!37202)))))))

(declare-fun bs!3460 () Bool)

(assert (= bs!3460 d!20369))

(assert (=> bs!3460 m!81803))

(declare-fun m!84095 () Bool)

(assert (=> bs!3460 m!84095))

(assert (=> b!80708 d!20369))

(assert (=> b!80708 d!19771))

(declare-fun b!81816 () Bool)

(declare-fun e!53383 () SeekEntryResult!251)

(declare-fun e!53386 () SeekEntryResult!251)

(assert (=> b!81816 (= e!53383 e!53386)))

(declare-fun c!12962 () Bool)

(declare-fun lt!38165 () (_ BitVec 64))

(assert (=> b!81816 (= c!12962 (or (= lt!38165 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (= (bvadd lt!38165 lt!38165) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81817 () Bool)

(declare-fun lt!38166 () SeekEntryResult!251)

(assert (=> b!81817 (and (bvsge (index!3141 lt!38166) #b00000000000000000000000000000000) (bvslt (index!3141 lt!38166) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun res!42477 () Bool)

(assert (=> b!81817 (= res!42477 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3141 lt!38166)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun e!53382 () Bool)

(assert (=> b!81817 (=> res!42477 e!53382)))

(declare-fun e!53385 () Bool)

(assert (=> b!81817 (= e!53385 e!53382)))

(declare-fun b!81818 () Bool)

(assert (=> b!81818 (= e!53386 (Intermediate!251 false (toIndex!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (mask!6299 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!20371 () Bool)

(declare-fun e!53384 () Bool)

(assert (=> d!20371 e!53384))

(declare-fun c!12961 () Bool)

(assert (=> d!20371 (= c!12961 (and ((_ is Intermediate!251) lt!38166) (undefined!1063 lt!38166)))))

(assert (=> d!20371 (= lt!38166 e!53383)))

(declare-fun c!12960 () Bool)

(assert (=> d!20371 (= c!12960 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!20371 (= lt!38165 (select (arr!1900 (_keys!3957 newMap!16)) (toIndex!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (mask!6299 newMap!16))))))

(assert (=> d!20371 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20371 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (mask!6299 newMap!16)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)) lt!38166)))

(declare-fun b!81819 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!81819 (= e!53386 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (mask!6299 newMap!16)) #b00000000000000000000000000000000 (mask!6299 newMap!16)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun b!81820 () Bool)

(assert (=> b!81820 (= e!53384 e!53385)))

(declare-fun res!42476 () Bool)

(assert (=> b!81820 (= res!42476 (and ((_ is Intermediate!251) lt!38166) (not (undefined!1063 lt!38166)) (bvslt (x!11702 lt!38166) #b01111111111111111111111111111110) (bvsge (x!11702 lt!38166) #b00000000000000000000000000000000) (bvsge (x!11702 lt!38166) #b00000000000000000000000000000000)))))

(assert (=> b!81820 (=> (not res!42476) (not e!53385))))

(declare-fun b!81821 () Bool)

(assert (=> b!81821 (= e!53383 (Intermediate!251 true (toIndex!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (mask!6299 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!81822 () Bool)

(assert (=> b!81822 (and (bvsge (index!3141 lt!38166) #b00000000000000000000000000000000) (bvslt (index!3141 lt!38166) (size!2142 (_keys!3957 newMap!16))))))

(assert (=> b!81822 (= e!53382 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3141 lt!38166)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81823 () Bool)

(assert (=> b!81823 (and (bvsge (index!3141 lt!38166) #b00000000000000000000000000000000) (bvslt (index!3141 lt!38166) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun res!42478 () Bool)

(assert (=> b!81823 (= res!42478 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3141 lt!38166)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81823 (=> res!42478 e!53382)))

(declare-fun b!81824 () Bool)

(assert (=> b!81824 (= e!53384 (bvsge (x!11702 lt!38166) #b01111111111111111111111111111110))))

(assert (= (and d!20371 c!12960) b!81821))

(assert (= (and d!20371 (not c!12960)) b!81816))

(assert (= (and b!81816 c!12962) b!81818))

(assert (= (and b!81816 (not c!12962)) b!81819))

(assert (= (and d!20371 c!12961) b!81824))

(assert (= (and d!20371 (not c!12961)) b!81820))

(assert (= (and b!81820 res!42476) b!81817))

(assert (= (and b!81817 (not res!42477)) b!81823))

(assert (= (and b!81823 (not res!42478)) b!81822))

(declare-fun m!84097 () Bool)

(assert (=> b!81822 m!84097))

(assert (=> d!20371 m!82325))

(declare-fun m!84099 () Bool)

(assert (=> d!20371 m!84099))

(assert (=> d!20371 m!82043))

(assert (=> b!81823 m!84097))

(assert (=> b!81817 m!84097))

(assert (=> b!81819 m!82325))

(declare-fun m!84101 () Bool)

(assert (=> b!81819 m!84101))

(assert (=> b!81819 m!84101))

(assert (=> b!81819 m!81585))

(declare-fun m!84103 () Bool)

(assert (=> b!81819 m!84103))

(assert (=> d!19787 d!20371))

(declare-fun d!20373 () Bool)

(declare-fun lt!38172 () (_ BitVec 32))

(declare-fun lt!38171 () (_ BitVec 32))

(assert (=> d!20373 (= lt!38172 (bvmul (bvxor lt!38171 (bvlshr lt!38171 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!20373 (= lt!38171 ((_ extract 31 0) (bvand (bvxor (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvlshr (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!20373 (and (bvsge (mask!6299 newMap!16) #b00000000000000000000000000000000) (let ((res!42479 (let ((h!2127 ((_ extract 31 0) (bvand (bvxor (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvlshr (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11804 (bvmul (bvxor h!2127 (bvlshr h!2127 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11804 (bvlshr x!11804 #b00000000000000000000000000001101)) (mask!6299 newMap!16)))))) (and (bvslt res!42479 (bvadd (mask!6299 newMap!16) #b00000000000000000000000000000001)) (bvsge res!42479 #b00000000000000000000000000000000))))))

(assert (=> d!20373 (= (toIndex!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (mask!6299 newMap!16)) (bvand (bvxor lt!38172 (bvlshr lt!38172 #b00000000000000000000000000001101)) (mask!6299 newMap!16)))))

(assert (=> d!19787 d!20373))

(assert (=> d!19787 d!20037))

(declare-fun d!20375 () Bool)

(assert (=> d!20375 (= (isEmpty!335 (getValueByKey!137 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))) (not ((_ is Some!142) (getValueByKey!137 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))))

(assert (=> d!19825 d!20375))

(declare-fun d!20377 () Bool)

(declare-fun e!53388 () Bool)

(assert (=> d!20377 e!53388))

(declare-fun res!42480 () Bool)

(assert (=> d!20377 (=> (not res!42480) (not e!53388))))

(declare-fun lt!38173 () List!1538)

(assert (=> d!20377 (= res!42480 (isStrictlySorted!291 lt!38173))))

(declare-fun e!53387 () List!1538)

(assert (=> d!20377 (= lt!38173 e!53387)))

(declare-fun c!12966 () Bool)

(assert (=> d!20377 (= c!12966 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37196))) (bvslt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37196)))) (_1!1111 lt!37188))))))

(assert (=> d!20377 (isStrictlySorted!291 (t!5209 (toList!751 lt!37196)))))

(assert (=> d!20377 (= (insertStrictlySorted!58 (t!5209 (toList!751 lt!37196)) (_1!1111 lt!37188) (_2!1111 lt!37188)) lt!38173)))

(declare-fun b!81825 () Bool)

(assert (=> b!81825 (= e!53388 (contains!753 lt!38173 (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun bm!7631 () Bool)

(declare-fun call!7634 () List!1538)

(declare-fun call!7635 () List!1538)

(assert (=> bm!7631 (= call!7634 call!7635)))

(declare-fun b!81826 () Bool)

(declare-fun res!42481 () Bool)

(assert (=> b!81826 (=> (not res!42481) (not e!53388))))

(assert (=> b!81826 (= res!42481 (containsKey!141 lt!38173 (_1!1111 lt!37188)))))

(declare-fun b!81827 () Bool)

(declare-fun e!53390 () List!1538)

(assert (=> b!81827 (= e!53390 (insertStrictlySorted!58 (t!5209 (t!5209 (toList!751 lt!37196))) (_1!1111 lt!37188) (_2!1111 lt!37188)))))

(declare-fun b!81828 () Bool)

(assert (=> b!81828 (= e!53387 call!7635)))

(declare-fun bm!7632 () Bool)

(assert (=> bm!7632 (= call!7635 ($colon$colon!69 e!53390 (ite c!12966 (h!2123 (t!5209 (toList!751 lt!37196))) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188)))))))

(declare-fun c!12964 () Bool)

(assert (=> bm!7632 (= c!12964 c!12966)))

(declare-fun b!81829 () Bool)

(declare-fun c!12965 () Bool)

(declare-fun c!12963 () Bool)

(assert (=> b!81829 (= e!53390 (ite c!12963 (t!5209 (t!5209 (toList!751 lt!37196))) (ite c!12965 (Cons!1534 (h!2123 (t!5209 (toList!751 lt!37196))) (t!5209 (t!5209 (toList!751 lt!37196)))) Nil!1535)))))

(declare-fun b!81830 () Bool)

(declare-fun e!53391 () List!1538)

(assert (=> b!81830 (= e!53391 call!7634)))

(declare-fun b!81831 () Bool)

(declare-fun e!53389 () List!1538)

(declare-fun call!7636 () List!1538)

(assert (=> b!81831 (= e!53389 call!7636)))

(declare-fun b!81832 () Bool)

(assert (=> b!81832 (= c!12965 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37196))) (bvsgt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37196)))) (_1!1111 lt!37188))))))

(assert (=> b!81832 (= e!53391 e!53389)))

(declare-fun b!81833 () Bool)

(assert (=> b!81833 (= e!53389 call!7636)))

(declare-fun bm!7633 () Bool)

(assert (=> bm!7633 (= call!7636 call!7634)))

(declare-fun b!81834 () Bool)

(assert (=> b!81834 (= e!53387 e!53391)))

(assert (=> b!81834 (= c!12963 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37196))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37196)))) (_1!1111 lt!37188))))))

(assert (= (and d!20377 c!12966) b!81828))

(assert (= (and d!20377 (not c!12966)) b!81834))

(assert (= (and b!81834 c!12963) b!81830))

(assert (= (and b!81834 (not c!12963)) b!81832))

(assert (= (and b!81832 c!12965) b!81831))

(assert (= (and b!81832 (not c!12965)) b!81833))

(assert (= (or b!81831 b!81833) bm!7633))

(assert (= (or b!81830 bm!7633) bm!7631))

(assert (= (or b!81828 bm!7631) bm!7632))

(assert (= (and bm!7632 c!12964) b!81827))

(assert (= (and bm!7632 (not c!12964)) b!81829))

(assert (= (and d!20377 res!42480) b!81826))

(assert (= (and b!81826 res!42481) b!81825))

(declare-fun m!84105 () Bool)

(assert (=> b!81826 m!84105))

(declare-fun m!84107 () Bool)

(assert (=> bm!7632 m!84107))

(declare-fun m!84109 () Bool)

(assert (=> d!20377 m!84109))

(assert (=> d!20377 m!82961))

(declare-fun m!84111 () Bool)

(assert (=> b!81827 m!84111))

(declare-fun m!84113 () Bool)

(assert (=> b!81825 m!84113))

(assert (=> b!80757 d!20377))

(declare-fun d!20379 () Bool)

(declare-fun lt!38174 () Bool)

(assert (=> d!20379 (= lt!38174 (select (content!84 (t!5209 (toList!751 lt!37294))) lt!37202))))

(declare-fun e!53393 () Bool)

(assert (=> d!20379 (= lt!38174 e!53393)))

(declare-fun res!42483 () Bool)

(assert (=> d!20379 (=> (not res!42483) (not e!53393))))

(assert (=> d!20379 (= res!42483 ((_ is Cons!1534) (t!5209 (toList!751 lt!37294))))))

(assert (=> d!20379 (= (contains!753 (t!5209 (toList!751 lt!37294)) lt!37202) lt!38174)))

(declare-fun b!81835 () Bool)

(declare-fun e!53392 () Bool)

(assert (=> b!81835 (= e!53393 e!53392)))

(declare-fun res!42482 () Bool)

(assert (=> b!81835 (=> res!42482 e!53392)))

(assert (=> b!81835 (= res!42482 (= (h!2123 (t!5209 (toList!751 lt!37294))) lt!37202))))

(declare-fun b!81836 () Bool)

(assert (=> b!81836 (= e!53392 (contains!753 (t!5209 (t!5209 (toList!751 lt!37294))) lt!37202))))

(assert (= (and d!20379 res!42483) b!81835))

(assert (= (and b!81835 (not res!42482)) b!81836))

(declare-fun m!84115 () Bool)

(assert (=> d!20379 m!84115))

(declare-fun m!84117 () Bool)

(assert (=> d!20379 m!84117))

(declare-fun m!84119 () Bool)

(assert (=> b!81836 m!84119))

(assert (=> b!81046 d!20379))

(declare-fun d!20381 () Bool)

(assert (=> d!20381 (= (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37374)) (v!2614 (getValueByKey!137 (toList!751 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37374)))))

(assert (=> d!19749 d!20381))

(declare-fun b!81838 () Bool)

(declare-fun e!53394 () Option!143)

(declare-fun e!53395 () Option!143)

(assert (=> b!81838 (= e!53394 e!53395)))

(declare-fun c!12968 () Bool)

(assert (=> b!81838 (= c!12968 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (not (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))) lt!37374))))))

(declare-fun d!20383 () Bool)

(declare-fun c!12967 () Bool)

(assert (=> d!20383 (= c!12967 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))) lt!37374)))))

(assert (=> d!20383 (= (getValueByKey!137 (toList!751 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37374) e!53394)))

(declare-fun b!81840 () Bool)

(assert (=> b!81840 (= e!53395 None!141)))

(declare-fun b!81839 () Bool)

(assert (=> b!81839 (= e!53395 (getValueByKey!137 (t!5209 (toList!751 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) lt!37374))))

(declare-fun b!81837 () Bool)

(assert (=> b!81837 (= e!53394 (Some!142 (_2!1111 (h!2123 (toList!751 (+!111 lt!37381 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))))

(assert (= (and d!20383 c!12967) b!81837))

(assert (= (and d!20383 (not c!12967)) b!81838))

(assert (= (and b!81838 c!12968) b!81839))

(assert (= (and b!81838 (not c!12968)) b!81840))

(declare-fun m!84121 () Bool)

(assert (=> b!81839 m!84121))

(assert (=> d!19749 d!20383))

(assert (=> b!80710 d!20369))

(assert (=> b!80710 d!19771))

(declare-fun d!20385 () Bool)

(declare-fun lt!38175 () Bool)

(assert (=> d!20385 (= lt!38175 (select (content!85 Nil!1536) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!53396 () Bool)

(assert (=> d!20385 (= lt!38175 e!53396)))

(declare-fun res!42484 () Bool)

(assert (=> d!20385 (=> (not res!42484) (not e!53396))))

(assert (=> d!20385 (= res!42484 ((_ is Cons!1535) Nil!1536))))

(assert (=> d!20385 (= (contains!752 Nil!1536 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) lt!38175)))

(declare-fun b!81841 () Bool)

(declare-fun e!53397 () Bool)

(assert (=> b!81841 (= e!53396 e!53397)))

(declare-fun res!42485 () Bool)

(assert (=> b!81841 (=> res!42485 e!53397)))

(assert (=> b!81841 (= res!42485 (= (h!2124 Nil!1536) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!81842 () Bool)

(assert (=> b!81842 (= e!53397 (contains!752 (t!5210 Nil!1536) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!20385 res!42484) b!81841))

(assert (= (and b!81841 (not res!42485)) b!81842))

(assert (=> d!20385 m!82775))

(assert (=> d!20385 m!81991))

(declare-fun m!84123 () Bool)

(assert (=> d!20385 m!84123))

(assert (=> b!81842 m!81991))

(declare-fun m!84125 () Bool)

(assert (=> b!81842 m!84125))

(assert (=> b!81033 d!20385))

(declare-fun d!20387 () Bool)

(assert (=> d!20387 (= ($colon$colon!69 e!52741 (ite c!12667 (h!2123 (toList!751 lt!37196)) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188)))) (Cons!1534 (ite c!12667 (h!2123 (toList!751 lt!37196)) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))) e!52741))))

(assert (=> bm!7514 d!20387))

(declare-fun d!20389 () Bool)

(declare-fun lt!38176 () Bool)

(assert (=> d!20389 (= lt!38176 (select (content!84 (t!5209 (toList!751 lt!37278))) lt!37197))))

(declare-fun e!53399 () Bool)

(assert (=> d!20389 (= lt!38176 e!53399)))

(declare-fun res!42487 () Bool)

(assert (=> d!20389 (=> (not res!42487) (not e!53399))))

(assert (=> d!20389 (= res!42487 ((_ is Cons!1534) (t!5209 (toList!751 lt!37278))))))

(assert (=> d!20389 (= (contains!753 (t!5209 (toList!751 lt!37278)) lt!37197) lt!38176)))

(declare-fun b!81843 () Bool)

(declare-fun e!53398 () Bool)

(assert (=> b!81843 (= e!53399 e!53398)))

(declare-fun res!42486 () Bool)

(assert (=> b!81843 (=> res!42486 e!53398)))

(assert (=> b!81843 (= res!42486 (= (h!2123 (t!5209 (toList!751 lt!37278))) lt!37197))))

(declare-fun b!81844 () Bool)

(assert (=> b!81844 (= e!53398 (contains!753 (t!5209 (t!5209 (toList!751 lt!37278))) lt!37197))))

(assert (= (and d!20389 res!42487) b!81843))

(assert (= (and b!81843 (not res!42486)) b!81844))

(declare-fun m!84127 () Bool)

(assert (=> d!20389 m!84127))

(declare-fun m!84129 () Bool)

(assert (=> d!20389 m!84129))

(declare-fun m!84131 () Bool)

(assert (=> b!81844 m!84131))

(assert (=> b!80835 d!20389))

(declare-fun b!81846 () Bool)

(declare-fun e!53400 () Option!143)

(declare-fun e!53401 () Option!143)

(assert (=> b!81846 (= e!53400 e!53401)))

(declare-fun c!12970 () Bool)

(assert (=> b!81846 (= c!12970 (and ((_ is Cons!1534) (t!5209 lt!37295)) (not (= (_1!1111 (h!2123 (t!5209 lt!37295))) (_1!1111 lt!37188)))))))

(declare-fun d!20391 () Bool)

(declare-fun c!12969 () Bool)

(assert (=> d!20391 (= c!12969 (and ((_ is Cons!1534) (t!5209 lt!37295)) (= (_1!1111 (h!2123 (t!5209 lt!37295))) (_1!1111 lt!37188))))))

(assert (=> d!20391 (= (getValueByKey!137 (t!5209 lt!37295) (_1!1111 lt!37188)) e!53400)))

(declare-fun b!81848 () Bool)

(assert (=> b!81848 (= e!53401 None!141)))

(declare-fun b!81847 () Bool)

(assert (=> b!81847 (= e!53401 (getValueByKey!137 (t!5209 (t!5209 lt!37295)) (_1!1111 lt!37188)))))

(declare-fun b!81845 () Bool)

(assert (=> b!81845 (= e!53400 (Some!142 (_2!1111 (h!2123 (t!5209 lt!37295)))))))

(assert (= (and d!20391 c!12969) b!81845))

(assert (= (and d!20391 (not c!12969)) b!81846))

(assert (= (and b!81846 c!12970) b!81847))

(assert (= (and b!81846 (not c!12970)) b!81848))

(declare-fun m!84133 () Bool)

(assert (=> b!81847 m!84133))

(assert (=> b!80751 d!20391))

(declare-fun d!20393 () Bool)

(assert (=> d!20393 (= (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37375)) (v!2614 (getValueByKey!137 (toList!751 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37375)))))

(assert (=> d!19743 d!20393))

(declare-fun b!81850 () Bool)

(declare-fun e!53402 () Option!143)

(declare-fun e!53403 () Option!143)

(assert (=> b!81850 (= e!53402 e!53403)))

(declare-fun c!12972 () Bool)

(assert (=> b!81850 (= c!12972 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (not (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))) lt!37375))))))

(declare-fun c!12971 () Bool)

(declare-fun d!20395 () Bool)

(assert (=> d!20395 (= c!12971 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))) lt!37375)))))

(assert (=> d!20395 (= (getValueByKey!137 (toList!751 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37375) e!53402)))

(declare-fun b!81852 () Bool)

(assert (=> b!81852 (= e!53403 None!141)))

(declare-fun b!81851 () Bool)

(assert (=> b!81851 (= e!53403 (getValueByKey!137 (t!5209 (toList!751 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))) lt!37375))))

(declare-fun b!81849 () Bool)

(assert (=> b!81849 (= e!53402 (Some!142 (_2!1111 (h!2123 (toList!751 (+!111 lt!37379 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))))

(assert (= (and d!20395 c!12971) b!81849))

(assert (= (and d!20395 (not c!12971)) b!81850))

(assert (= (and b!81850 c!12972) b!81851))

(assert (= (and b!81850 (not c!12972)) b!81852))

(declare-fun m!84135 () Bool)

(assert (=> b!81851 m!84135))

(assert (=> d!19743 d!20395))

(declare-fun b!81854 () Bool)

(declare-fun e!53404 () Option!143)

(declare-fun e!53405 () Option!143)

(assert (=> b!81854 (= e!53404 e!53405)))

(declare-fun c!12974 () Bool)

(assert (=> b!81854 (= c!12974 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37294))) (not (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37294)))) (_1!1111 lt!37202)))))))

(declare-fun d!20397 () Bool)

(declare-fun c!12973 () Bool)

(assert (=> d!20397 (= c!12973 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37294))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37294)))) (_1!1111 lt!37202))))))

(assert (=> d!20397 (= (getValueByKey!137 (t!5209 (toList!751 lt!37294)) (_1!1111 lt!37202)) e!53404)))

(declare-fun b!81856 () Bool)

(assert (=> b!81856 (= e!53405 None!141)))

(declare-fun b!81855 () Bool)

(assert (=> b!81855 (= e!53405 (getValueByKey!137 (t!5209 (t!5209 (toList!751 lt!37294))) (_1!1111 lt!37202)))))

(declare-fun b!81853 () Bool)

(assert (=> b!81853 (= e!53404 (Some!142 (_2!1111 (h!2123 (t!5209 (toList!751 lt!37294))))))))

(assert (= (and d!20397 c!12973) b!81853))

(assert (= (and d!20397 (not c!12973)) b!81854))

(assert (= (and b!81854 c!12974) b!81855))

(assert (= (and b!81854 (not c!12974)) b!81856))

(declare-fun m!84137 () Bool)

(assert (=> b!81855 m!84137))

(assert (=> b!80824 d!20397))

(declare-fun d!20399 () Bool)

(declare-fun e!53406 () Bool)

(assert (=> d!20399 e!53406))

(declare-fun res!42488 () Bool)

(assert (=> d!20399 (=> res!42488 e!53406)))

(declare-fun lt!38179 () Bool)

(assert (=> d!20399 (= res!42488 (not lt!38179))))

(declare-fun lt!38178 () Bool)

(assert (=> d!20399 (= lt!38179 lt!38178)))

(declare-fun lt!38177 () Unit!2350)

(declare-fun e!53407 () Unit!2350)

(assert (=> d!20399 (= lt!38177 e!53407)))

(declare-fun c!12975 () Bool)

(assert (=> d!20399 (= c!12975 lt!38178)))

(assert (=> d!20399 (= lt!38178 (containsKey!141 (toList!751 lt!37609) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20399 (= (contains!750 lt!37609 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38179)))

(declare-fun b!81857 () Bool)

(declare-fun lt!38180 () Unit!2350)

(assert (=> b!81857 (= e!53407 lt!38180)))

(assert (=> b!81857 (= lt!38180 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37609) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81857 (isDefined!91 (getValueByKey!137 (toList!751 lt!37609) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81858 () Bool)

(declare-fun Unit!2408 () Unit!2350)

(assert (=> b!81858 (= e!53407 Unit!2408)))

(declare-fun b!81859 () Bool)

(assert (=> b!81859 (= e!53406 (isDefined!91 (getValueByKey!137 (toList!751 lt!37609) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20399 c!12975) b!81857))

(assert (= (and d!20399 (not c!12975)) b!81858))

(assert (= (and d!20399 (not res!42488)) b!81859))

(declare-fun m!84139 () Bool)

(assert (=> d!20399 m!84139))

(declare-fun m!84141 () Bool)

(assert (=> b!81857 m!84141))

(declare-fun m!84143 () Bool)

(assert (=> b!81857 m!84143))

(assert (=> b!81857 m!84143))

(declare-fun m!84145 () Bool)

(assert (=> b!81857 m!84145))

(assert (=> b!81859 m!84143))

(assert (=> b!81859 m!84143))

(assert (=> b!81859 m!84145))

(assert (=> d!19789 d!20399))

(assert (=> d!19789 d!19661))

(declare-fun d!20401 () Bool)

(assert (=> d!20401 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392))))

(declare-fun lt!38181 () Unit!2350)

(assert (=> d!20401 (= lt!38181 (choose!485 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392))))

(declare-fun e!53408 () Bool)

(assert (=> d!20401 e!53408))

(declare-fun res!42489 () Bool)

(assert (=> d!20401 (=> (not res!42489) (not e!53408))))

(assert (=> d!20401 (= res!42489 (isStrictlySorted!291 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20401 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392) lt!38181)))

(declare-fun b!81860 () Bool)

(assert (=> b!81860 (= e!53408 (containsKey!141 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392))))

(assert (= (and d!20401 res!42489) b!81860))

(assert (=> d!20401 m!82191))

(assert (=> d!20401 m!82191))

(assert (=> d!20401 m!82193))

(declare-fun m!84147 () Bool)

(assert (=> d!20401 m!84147))

(declare-fun m!84149 () Bool)

(assert (=> d!20401 m!84149))

(assert (=> b!81860 m!82187))

(assert (=> b!80773 d!20401))

(declare-fun d!20403 () Bool)

(assert (=> d!20403 (= (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392)) (not (isEmpty!335 (getValueByKey!137 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392))))))

(declare-fun bs!3461 () Bool)

(assert (= bs!3461 d!20403))

(assert (=> bs!3461 m!82191))

(declare-fun m!84151 () Bool)

(assert (=> bs!3461 m!84151))

(assert (=> b!80773 d!20403))

(declare-fun b!81862 () Bool)

(declare-fun e!53409 () Option!143)

(declare-fun e!53410 () Option!143)

(assert (=> b!81862 (= e!53409 e!53410)))

(declare-fun c!12977 () Bool)

(assert (=> b!81862 (= c!12977 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (not (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) lt!37392))))))

(declare-fun d!20405 () Bool)

(declare-fun c!12976 () Bool)

(assert (=> d!20405 (= c!12976 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) lt!37392)))))

(assert (=> d!20405 (= (getValueByKey!137 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392) e!53409)))

(declare-fun b!81864 () Bool)

(assert (=> b!81864 (= e!53410 None!141)))

(declare-fun b!81863 () Bool)

(assert (=> b!81863 (= e!53410 (getValueByKey!137 (t!5209 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) lt!37392))))

(declare-fun b!81861 () Bool)

(assert (=> b!81861 (= e!53409 (Some!142 (_2!1111 (h!2123 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))))

(assert (= (and d!20405 c!12976) b!81861))

(assert (= (and d!20405 (not c!12976)) b!81862))

(assert (= (and b!81862 c!12977) b!81863))

(assert (= (and b!81862 (not c!12977)) b!81864))

(declare-fun m!84153 () Bool)

(assert (=> b!81863 m!84153))

(assert (=> b!80773 d!20405))

(assert (=> d!19713 d!19711))

(declare-fun d!20407 () Bool)

(assert (=> d!20407 (= (getValueByKey!137 lt!37275 (_1!1111 lt!37197)) (Some!142 (_2!1111 lt!37197)))))

(assert (=> d!20407 true))

(declare-fun _$22!403 () Unit!2350)

(assert (=> d!20407 (= (choose!478 lt!37275 (_1!1111 lt!37197) (_2!1111 lt!37197)) _$22!403)))

(declare-fun bs!3462 () Bool)

(assert (= bs!3462 d!20407))

(assert (=> bs!3462 m!81741))

(assert (=> d!19713 d!20407))

(declare-fun d!20409 () Bool)

(declare-fun res!42490 () Bool)

(declare-fun e!53411 () Bool)

(assert (=> d!20409 (=> res!42490 e!53411)))

(assert (=> d!20409 (= res!42490 (or ((_ is Nil!1535) lt!37275) ((_ is Nil!1535) (t!5209 lt!37275))))))

(assert (=> d!20409 (= (isStrictlySorted!291 lt!37275) e!53411)))

(declare-fun b!81865 () Bool)

(declare-fun e!53412 () Bool)

(assert (=> b!81865 (= e!53411 e!53412)))

(declare-fun res!42491 () Bool)

(assert (=> b!81865 (=> (not res!42491) (not e!53412))))

(assert (=> b!81865 (= res!42491 (bvslt (_1!1111 (h!2123 lt!37275)) (_1!1111 (h!2123 (t!5209 lt!37275)))))))

(declare-fun b!81866 () Bool)

(assert (=> b!81866 (= e!53412 (isStrictlySorted!291 (t!5209 lt!37275)))))

(assert (= (and d!20409 (not res!42490)) b!81865))

(assert (= (and b!81865 res!42491) b!81866))

(declare-fun m!84155 () Bool)

(assert (=> b!81866 m!84155))

(assert (=> d!19713 d!20409))

(declare-fun lt!38182 () Bool)

(declare-fun d!20411 () Bool)

(assert (=> d!20411 (= lt!38182 (select (content!84 (toList!751 lt!37742)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun e!53414 () Bool)

(assert (=> d!20411 (= lt!38182 e!53414)))

(declare-fun res!42493 () Bool)

(assert (=> d!20411 (=> (not res!42493) (not e!53414))))

(assert (=> d!20411 (= res!42493 ((_ is Cons!1534) (toList!751 lt!37742)))))

(assert (=> d!20411 (= (contains!753 (toList!751 lt!37742) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!38182)))

(declare-fun b!81867 () Bool)

(declare-fun e!53413 () Bool)

(assert (=> b!81867 (= e!53414 e!53413)))

(declare-fun res!42492 () Bool)

(assert (=> b!81867 (=> res!42492 e!53413)))

(assert (=> b!81867 (= res!42492 (= (h!2123 (toList!751 lt!37742)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun b!81868 () Bool)

(assert (=> b!81868 (= e!53413 (contains!753 (t!5209 (toList!751 lt!37742)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!20411 res!42493) b!81867))

(assert (= (and b!81867 (not res!42492)) b!81868))

(declare-fun m!84157 () Bool)

(assert (=> d!20411 m!84157))

(declare-fun m!84159 () Bool)

(assert (=> d!20411 m!84159))

(declare-fun m!84161 () Bool)

(assert (=> b!81868 m!84161))

(assert (=> b!80995 d!20411))

(declare-fun d!20413 () Bool)

(declare-fun e!53415 () Bool)

(assert (=> d!20413 e!53415))

(declare-fun res!42494 () Bool)

(assert (=> d!20413 (=> (not res!42494) (not e!53415))))

(declare-fun lt!38186 () ListLongMap!1471)

(assert (=> d!20413 (= res!42494 (contains!750 lt!38186 (_1!1111 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))))))

(declare-fun lt!38183 () List!1538)

(assert (=> d!20413 (= lt!38186 (ListLongMap!1472 lt!38183))))

(declare-fun lt!38184 () Unit!2350)

(declare-fun lt!38185 () Unit!2350)

(assert (=> d!20413 (= lt!38184 lt!38185)))

(assert (=> d!20413 (= (getValueByKey!137 lt!38183 (_1!1111 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))) (Some!142 (_2!1111 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20413 (= lt!38185 (lemmaContainsTupThenGetReturnValue!56 lt!38183 (_1!1111 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) (_2!1111 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20413 (= lt!38183 (insertStrictlySorted!58 (toList!751 lt!37634) (_1!1111 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) (_2!1111 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20413 (= (+!111 lt!37634 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) lt!38186)))

(declare-fun b!81869 () Bool)

(declare-fun res!42495 () Bool)

(assert (=> b!81869 (=> (not res!42495) (not e!53415))))

(assert (=> b!81869 (= res!42495 (= (getValueByKey!137 (toList!751 lt!38186) (_1!1111 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))) (Some!142 (_2!1111 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))))))))

(declare-fun b!81870 () Bool)

(assert (=> b!81870 (= e!53415 (contains!753 (toList!751 lt!38186) (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))))))

(assert (= (and d!20413 res!42494) b!81869))

(assert (= (and b!81869 res!42495) b!81870))

(declare-fun m!84163 () Bool)

(assert (=> d!20413 m!84163))

(declare-fun m!84165 () Bool)

(assert (=> d!20413 m!84165))

(declare-fun m!84167 () Bool)

(assert (=> d!20413 m!84167))

(declare-fun m!84169 () Bool)

(assert (=> d!20413 m!84169))

(declare-fun m!84171 () Bool)

(assert (=> b!81869 m!84171))

(declare-fun m!84173 () Bool)

(assert (=> b!81870 m!84173))

(assert (=> b!80895 d!20413))

(declare-fun d!20415 () Bool)

(declare-fun e!53416 () Bool)

(assert (=> d!20415 e!53416))

(declare-fun res!42496 () Bool)

(assert (=> d!20415 (=> (not res!42496) (not e!53416))))

(declare-fun lt!38190 () ListLongMap!1471)

(assert (=> d!20415 (= res!42496 (contains!750 lt!38190 (_1!1111 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(declare-fun lt!38187 () List!1538)

(assert (=> d!20415 (= lt!38190 (ListLongMap!1472 lt!38187))))

(declare-fun lt!38188 () Unit!2350)

(declare-fun lt!38189 () Unit!2350)

(assert (=> d!20415 (= lt!38188 lt!38189)))

(assert (=> d!20415 (= (getValueByKey!137 lt!38187 (_1!1111 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))) (Some!142 (_2!1111 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(assert (=> d!20415 (= lt!38189 (lemmaContainsTupThenGetReturnValue!56 lt!38187 (_1!1111 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) (_2!1111 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(assert (=> d!20415 (= lt!38187 (insertStrictlySorted!58 (toList!751 lt!37631) (_1!1111 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) (_2!1111 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(assert (=> d!20415 (= (+!111 lt!37631 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) lt!38190)))

(declare-fun b!81871 () Bool)

(declare-fun res!42497 () Bool)

(assert (=> b!81871 (=> (not res!42497) (not e!53416))))

(assert (=> b!81871 (= res!42497 (= (getValueByKey!137 (toList!751 lt!38190) (_1!1111 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))) (Some!142 (_2!1111 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))))))

(declare-fun b!81872 () Bool)

(assert (=> b!81872 (= e!53416 (contains!753 (toList!751 lt!38190) (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))))

(assert (= (and d!20415 res!42496) b!81871))

(assert (= (and b!81871 res!42497) b!81872))

(declare-fun m!84175 () Bool)

(assert (=> d!20415 m!84175))

(declare-fun m!84177 () Bool)

(assert (=> d!20415 m!84177))

(declare-fun m!84179 () Bool)

(assert (=> d!20415 m!84179))

(declare-fun m!84181 () Bool)

(assert (=> d!20415 m!84181))

(declare-fun m!84183 () Bool)

(assert (=> b!81871 m!84183))

(declare-fun m!84185 () Bool)

(assert (=> b!81872 m!84185))

(assert (=> b!80895 d!20415))

(declare-fun d!20417 () Bool)

(assert (=> d!20417 (= (apply!80 (+!111 lt!37633 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) lt!37626) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37633 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))) lt!37626)))))

(declare-fun bs!3463 () Bool)

(assert (= bs!3463 d!20417))

(declare-fun m!84187 () Bool)

(assert (=> bs!3463 m!84187))

(assert (=> bs!3463 m!84187))

(declare-fun m!84189 () Bool)

(assert (=> bs!3463 m!84189))

(assert (=> b!80895 d!20417))

(declare-fun d!20419 () Bool)

(assert (=> d!20419 (= (apply!80 (+!111 lt!37631 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) lt!37627) (apply!80 lt!37631 lt!37627))))

(declare-fun lt!38191 () Unit!2350)

(assert (=> d!20419 (= lt!38191 (choose!479 lt!37631 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) lt!37627))))

(declare-fun e!53417 () Bool)

(assert (=> d!20419 e!53417))

(declare-fun res!42498 () Bool)

(assert (=> d!20419 (=> (not res!42498) (not e!53417))))

(assert (=> d!20419 (= res!42498 (contains!750 lt!37631 lt!37627))))

(assert (=> d!20419 (= (addApplyDifferent!56 lt!37631 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) lt!37627) lt!38191)))

(declare-fun b!81873 () Bool)

(assert (=> b!81873 (= e!53417 (not (= lt!37627 lt!37640)))))

(assert (= (and d!20419 res!42498) b!81873))

(assert (=> d!20419 m!82421))

(assert (=> d!20419 m!82423))

(declare-fun m!84191 () Bool)

(assert (=> d!20419 m!84191))

(assert (=> d!20419 m!82431))

(assert (=> d!20419 m!82421))

(declare-fun m!84193 () Bool)

(assert (=> d!20419 m!84193))

(assert (=> b!80895 d!20419))

(declare-fun b!81874 () Bool)

(declare-fun e!53422 () Bool)

(assert (=> b!81874 (= e!53422 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81874 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun call!7637 () ListLongMap!1471)

(declare-fun bm!7634 () Bool)

(assert (=> bm!7634 (= call!7637 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466) (mask!6299 newMap!16) (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16)))))

(declare-fun b!81875 () Bool)

(declare-fun e!53420 () ListLongMap!1471)

(declare-fun e!53419 () ListLongMap!1471)

(assert (=> b!81875 (= e!53420 e!53419)))

(declare-fun c!12979 () Bool)

(assert (=> b!81875 (= c!12979 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!20421 () Bool)

(declare-fun e!53421 () Bool)

(assert (=> d!20421 e!53421))

(declare-fun res!42499 () Bool)

(assert (=> d!20421 (=> (not res!42499) (not e!53421))))

(declare-fun lt!38197 () ListLongMap!1471)

(assert (=> d!20421 (= res!42499 (not (contains!750 lt!38197 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20421 (= lt!38197 e!53420)))

(declare-fun c!12980 () Bool)

(assert (=> d!20421 (= c!12980 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!20421 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20421 (= (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466) (mask!6299 newMap!16) (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38197)))

(declare-fun b!81876 () Bool)

(declare-fun res!42502 () Bool)

(assert (=> b!81876 (=> (not res!42502) (not e!53421))))

(assert (=> b!81876 (= res!42502 (not (contains!750 lt!38197 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81877 () Bool)

(declare-fun e!53423 () Bool)

(assert (=> b!81877 (= e!53423 (isEmpty!334 lt!38197))))

(declare-fun b!81878 () Bool)

(assert (=> b!81878 (= e!53420 (ListLongMap!1472 Nil!1535))))

(declare-fun b!81879 () Bool)

(assert (=> b!81879 (= e!53423 (= lt!38197 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466) (mask!6299 newMap!16) (ite c!12617 (ite c!12610 lt!37479 lt!37461) (extraKeys!2140 newMap!16)) (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2293 newMap!16))))))

(declare-fun b!81880 () Bool)

(declare-fun e!53418 () Bool)

(assert (=> b!81880 (= e!53421 e!53418)))

(declare-fun c!12981 () Bool)

(assert (=> b!81880 (= c!12981 e!53422)))

(declare-fun res!42500 () Bool)

(assert (=> b!81880 (=> (not res!42500) (not e!53422))))

(assert (=> b!81880 (= res!42500 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!81881 () Bool)

(assert (=> b!81881 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> b!81881 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466))))))

(declare-fun e!53424 () Bool)

(assert (=> b!81881 (= e!53424 (= (apply!80 lt!38197 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!81882 () Bool)

(declare-fun lt!38194 () Unit!2350)

(declare-fun lt!38193 () Unit!2350)

(assert (=> b!81882 (= lt!38194 lt!38193)))

(declare-fun lt!38195 () V!3003)

(declare-fun lt!38192 () (_ BitVec 64))

(declare-fun lt!38198 () (_ BitVec 64))

(declare-fun lt!38196 () ListLongMap!1471)

(assert (=> b!81882 (not (contains!750 (+!111 lt!38196 (tuple2!2203 lt!38192 lt!38195)) lt!38198))))

(assert (=> b!81882 (= lt!38193 (addStillNotContains!31 lt!38196 lt!38192 lt!38195 lt!38198))))

(assert (=> b!81882 (= lt!38198 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81882 (= lt!38195 (get!1195 (select (arr!1901 (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81882 (= lt!38192 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!81882 (= lt!38196 call!7637)))

(assert (=> b!81882 (= e!53419 (+!111 call!7637 (tuple2!2203 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000) (get!1195 (select (arr!1901 (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!81883 () Bool)

(assert (=> b!81883 (= e!53418 e!53424)))

(assert (=> b!81883 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun res!42501 () Bool)

(assert (=> b!81883 (= res!42501 (contains!750 lt!38197 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!81883 (=> (not res!42501) (not e!53424))))

(declare-fun b!81884 () Bool)

(assert (=> b!81884 (= e!53419 call!7637)))

(declare-fun b!81885 () Bool)

(assert (=> b!81885 (= e!53418 e!53423)))

(declare-fun c!12978 () Bool)

(assert (=> b!81885 (= c!12978 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (= (and d!20421 c!12980) b!81878))

(assert (= (and d!20421 (not c!12980)) b!81875))

(assert (= (and b!81875 c!12979) b!81882))

(assert (= (and b!81875 (not c!12979)) b!81884))

(assert (= (or b!81882 b!81884) bm!7634))

(assert (= (and d!20421 res!42499) b!81876))

(assert (= (and b!81876 res!42502) b!81880))

(assert (= (and b!81880 res!42500) b!81874))

(assert (= (and b!81880 c!12981) b!81883))

(assert (= (and b!81880 (not c!12981)) b!81885))

(assert (= (and b!81883 res!42501) b!81881))

(assert (= (and b!81885 c!12978) b!81879))

(assert (= (and b!81885 (not c!12978)) b!81877))

(declare-fun b_lambda!3649 () Bool)

(assert (=> (not b_lambda!3649) (not b!81881)))

(assert (=> b!81881 t!5218))

(declare-fun b_and!4985 () Bool)

(assert (= b_and!4981 (and (=> t!5218 result!2857) b_and!4985)))

(assert (=> b!81881 t!5220))

(declare-fun b_and!4987 () Bool)

(assert (= b_and!4983 (and (=> t!5220 result!2859) b_and!4987)))

(declare-fun b_lambda!3651 () Bool)

(assert (=> (not b_lambda!3651) (not b!81882)))

(assert (=> b!81882 t!5218))

(declare-fun b_and!4989 () Bool)

(assert (= b_and!4985 (and (=> t!5218 result!2857) b_and!4989)))

(assert (=> b!81882 t!5220))

(declare-fun b_and!4991 () Bool)

(assert (= b_and!4987 (and (=> t!5220 result!2859) b_and!4991)))

(declare-fun m!84195 () Bool)

(assert (=> b!81882 m!84195))

(assert (=> b!81882 m!82031))

(declare-fun m!84197 () Bool)

(assert (=> b!81882 m!84197))

(assert (=> b!81882 m!82407))

(assert (=> b!81882 m!82031))

(assert (=> b!81882 m!82409))

(assert (=> b!81882 m!81991))

(declare-fun m!84199 () Bool)

(assert (=> b!81882 m!84199))

(assert (=> b!81882 m!82407))

(assert (=> b!81882 m!84195))

(declare-fun m!84201 () Bool)

(assert (=> b!81882 m!84201))

(declare-fun m!84203 () Bool)

(assert (=> b!81877 m!84203))

(assert (=> b!81881 m!82031))

(assert (=> b!81881 m!82407))

(assert (=> b!81881 m!82031))

(assert (=> b!81881 m!82409))

(assert (=> b!81881 m!81991))

(assert (=> b!81881 m!82407))

(assert (=> b!81881 m!81991))

(declare-fun m!84205 () Bool)

(assert (=> b!81881 m!84205))

(declare-fun m!84207 () Bool)

(assert (=> b!81876 m!84207))

(assert (=> b!81874 m!81991))

(assert (=> b!81874 m!81991))

(assert (=> b!81874 m!82035))

(declare-fun m!84209 () Bool)

(assert (=> bm!7634 m!84209))

(declare-fun m!84211 () Bool)

(assert (=> d!20421 m!84211))

(assert (=> d!20421 m!82043))

(assert (=> b!81875 m!81991))

(assert (=> b!81875 m!81991))

(assert (=> b!81875 m!82035))

(assert (=> b!81883 m!81991))

(assert (=> b!81883 m!81991))

(declare-fun m!84213 () Bool)

(assert (=> b!81883 m!84213))

(assert (=> b!81879 m!84209))

(assert (=> b!80895 d!20421))

(declare-fun d!20423 () Bool)

(assert (=> d!20423 (= (apply!80 lt!37634 lt!37632) (get!1198 (getValueByKey!137 (toList!751 lt!37634) lt!37632)))))

(declare-fun bs!3464 () Bool)

(assert (= bs!3464 d!20423))

(declare-fun m!84215 () Bool)

(assert (=> bs!3464 m!84215))

(assert (=> bs!3464 m!84215))

(declare-fun m!84217 () Bool)

(assert (=> bs!3464 m!84217))

(assert (=> b!80895 d!20423))

(declare-fun d!20425 () Bool)

(assert (=> d!20425 (= (apply!80 (+!111 lt!37633 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) lt!37626) (apply!80 lt!37633 lt!37626))))

(declare-fun lt!38199 () Unit!2350)

(assert (=> d!20425 (= lt!38199 (choose!479 lt!37633 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) lt!37626))))

(declare-fun e!53425 () Bool)

(assert (=> d!20425 e!53425))

(declare-fun res!42503 () Bool)

(assert (=> d!20425 (=> (not res!42503) (not e!53425))))

(assert (=> d!20425 (= res!42503 (contains!750 lt!37633 lt!37626))))

(assert (=> d!20425 (= (addApplyDifferent!56 lt!37633 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)) lt!37626) lt!38199)))

(declare-fun b!81886 () Bool)

(assert (=> b!81886 (= e!53425 (not (= lt!37626 lt!37641)))))

(assert (= (and d!20425 res!42503) b!81886))

(assert (=> d!20425 m!82425))

(assert (=> d!20425 m!82447))

(declare-fun m!84219 () Bool)

(assert (=> d!20425 m!84219))

(assert (=> d!20425 m!82441))

(assert (=> d!20425 m!82425))

(declare-fun m!84221 () Bool)

(assert (=> d!20425 m!84221))

(assert (=> b!80895 d!20425))

(declare-fun d!20427 () Bool)

(assert (=> d!20427 (= (apply!80 (+!111 lt!37634 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) lt!37632) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37634 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))) lt!37632)))))

(declare-fun bs!3465 () Bool)

(assert (= bs!3465 d!20427))

(declare-fun m!84223 () Bool)

(assert (=> bs!3465 m!84223))

(assert (=> bs!3465 m!84223))

(declare-fun m!84225 () Bool)

(assert (=> bs!3465 m!84225))

(assert (=> b!80895 d!20427))

(declare-fun d!20429 () Bool)

(declare-fun e!53426 () Bool)

(assert (=> d!20429 e!53426))

(declare-fun res!42504 () Bool)

(assert (=> d!20429 (=> (not res!42504) (not e!53426))))

(declare-fun lt!38203 () ListLongMap!1471)

(assert (=> d!20429 (= res!42504 (contains!750 lt!38203 (_1!1111 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))))))

(declare-fun lt!38200 () List!1538)

(assert (=> d!20429 (= lt!38203 (ListLongMap!1472 lt!38200))))

(declare-fun lt!38201 () Unit!2350)

(declare-fun lt!38202 () Unit!2350)

(assert (=> d!20429 (= lt!38201 lt!38202)))

(assert (=> d!20429 (= (getValueByKey!137 lt!38200 (_1!1111 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))) (Some!142 (_2!1111 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20429 (= lt!38202 (lemmaContainsTupThenGetReturnValue!56 lt!38200 (_1!1111 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) (_2!1111 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20429 (= lt!38200 (insertStrictlySorted!58 (toList!751 lt!37636) (_1!1111 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) (_2!1111 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))))))

(assert (=> d!20429 (= (+!111 lt!37636 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) lt!38203)))

(declare-fun b!81887 () Bool)

(declare-fun res!42505 () Bool)

(assert (=> b!81887 (=> (not res!42505) (not e!53426))))

(assert (=> b!81887 (= res!42505 (= (getValueByKey!137 (toList!751 lt!38203) (_1!1111 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))) (Some!142 (_2!1111 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))))))))

(declare-fun b!81888 () Bool)

(assert (=> b!81888 (= e!53426 (contains!753 (toList!751 lt!38203) (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))))))

(assert (= (and d!20429 res!42504) b!81887))

(assert (= (and b!81887 res!42505) b!81888))

(declare-fun m!84227 () Bool)

(assert (=> d!20429 m!84227))

(declare-fun m!84229 () Bool)

(assert (=> d!20429 m!84229))

(declare-fun m!84231 () Bool)

(assert (=> d!20429 m!84231))

(declare-fun m!84233 () Bool)

(assert (=> d!20429 m!84233))

(declare-fun m!84235 () Bool)

(assert (=> b!81887 m!84235))

(declare-fun m!84237 () Bool)

(assert (=> b!81888 m!84237))

(assert (=> b!80895 d!20429))

(declare-fun d!20431 () Bool)

(assert (=> d!20431 (= (apply!80 (+!111 lt!37634 (tuple2!2203 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) lt!37632) (apply!80 lt!37634 lt!37632))))

(declare-fun lt!38204 () Unit!2350)

(assert (=> d!20431 (= lt!38204 (choose!479 lt!37634 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) lt!37632))))

(declare-fun e!53427 () Bool)

(assert (=> d!20431 e!53427))

(declare-fun res!42506 () Bool)

(assert (=> d!20431 (=> (not res!42506) (not e!53427))))

(assert (=> d!20431 (= res!42506 (contains!750 lt!37634 lt!37632))))

(assert (=> d!20431 (= (addApplyDifferent!56 lt!37634 lt!37630 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) lt!37632) lt!38204)))

(declare-fun b!81889 () Bool)

(assert (=> b!81889 (= e!53427 (not (= lt!37632 lt!37630)))))

(assert (= (and d!20431 res!42506) b!81889))

(assert (=> d!20431 m!82429))

(assert (=> d!20431 m!82443))

(declare-fun m!84239 () Bool)

(assert (=> d!20431 m!84239))

(assert (=> d!20431 m!82439))

(assert (=> d!20431 m!82429))

(declare-fun m!84241 () Bool)

(assert (=> d!20431 m!84241))

(assert (=> b!80895 d!20431))

(declare-fun d!20433 () Bool)

(assert (=> d!20433 (= (apply!80 lt!37631 lt!37627) (get!1198 (getValueByKey!137 (toList!751 lt!37631) lt!37627)))))

(declare-fun bs!3466 () Bool)

(assert (= bs!3466 d!20433))

(declare-fun m!84243 () Bool)

(assert (=> bs!3466 m!84243))

(assert (=> bs!3466 m!84243))

(declare-fun m!84245 () Bool)

(assert (=> bs!3466 m!84245))

(assert (=> b!80895 d!20433))

(declare-fun d!20435 () Bool)

(assert (=> d!20435 (= (apply!80 (+!111 lt!37631 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) lt!37627) (get!1198 (getValueByKey!137 (toList!751 (+!111 lt!37631 (tuple2!2203 lt!37640 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))) lt!37627)))))

(declare-fun bs!3467 () Bool)

(assert (= bs!3467 d!20435))

(declare-fun m!84247 () Bool)

(assert (=> bs!3467 m!84247))

(assert (=> bs!3467 m!84247))

(declare-fun m!84249 () Bool)

(assert (=> bs!3467 m!84249))

(assert (=> b!80895 d!20435))

(declare-fun d!20437 () Bool)

(assert (=> d!20437 (= (apply!80 lt!37633 lt!37626) (get!1198 (getValueByKey!137 (toList!751 lt!37633) lt!37626)))))

(declare-fun bs!3468 () Bool)

(assert (= bs!3468 d!20437))

(declare-fun m!84251 () Bool)

(assert (=> bs!3468 m!84251))

(assert (=> bs!3468 m!84251))

(declare-fun m!84253 () Bool)

(assert (=> bs!3468 m!84253))

(assert (=> b!80895 d!20437))

(declare-fun d!20439 () Bool)

(declare-fun e!53428 () Bool)

(assert (=> d!20439 e!53428))

(declare-fun res!42507 () Bool)

(assert (=> d!20439 (=> res!42507 e!53428)))

(declare-fun lt!38207 () Bool)

(assert (=> d!20439 (= res!42507 (not lt!38207))))

(declare-fun lt!38206 () Bool)

(assert (=> d!20439 (= lt!38207 lt!38206)))

(declare-fun lt!38205 () Unit!2350)

(declare-fun e!53429 () Unit!2350)

(assert (=> d!20439 (= lt!38205 e!53429)))

(declare-fun c!12982 () Bool)

(assert (=> d!20439 (= c!12982 lt!38206)))

(assert (=> d!20439 (= lt!38206 (containsKey!141 (toList!751 (+!111 lt!37636 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))) lt!37644))))

(assert (=> d!20439 (= (contains!750 (+!111 lt!37636 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) lt!37644) lt!38207)))

(declare-fun b!81890 () Bool)

(declare-fun lt!38208 () Unit!2350)

(assert (=> b!81890 (= e!53429 lt!38208)))

(assert (=> b!81890 (= lt!38208 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (+!111 lt!37636 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))) lt!37644))))

(assert (=> b!81890 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37636 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))) lt!37644))))

(declare-fun b!81891 () Bool)

(declare-fun Unit!2409 () Unit!2350)

(assert (=> b!81891 (= e!53429 Unit!2409)))

(declare-fun b!81892 () Bool)

(assert (=> b!81892 (= e!53428 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37636 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16))))) lt!37644)))))

(assert (= (and d!20439 c!12982) b!81890))

(assert (= (and d!20439 (not c!12982)) b!81891))

(assert (= (and d!20439 (not res!42507)) b!81892))

(declare-fun m!84255 () Bool)

(assert (=> d!20439 m!84255))

(declare-fun m!84257 () Bool)

(assert (=> b!81890 m!84257))

(declare-fun m!84259 () Bool)

(assert (=> b!81890 m!84259))

(assert (=> b!81890 m!84259))

(declare-fun m!84261 () Bool)

(assert (=> b!81890 m!84261))

(assert (=> b!81892 m!84259))

(assert (=> b!81892 m!84259))

(assert (=> b!81892 m!84261))

(assert (=> b!80895 d!20439))

(declare-fun d!20441 () Bool)

(assert (=> d!20441 (contains!750 (+!111 lt!37636 (tuple2!2203 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)))) lt!37644)))

(declare-fun lt!38209 () Unit!2350)

(assert (=> d!20441 (= lt!38209 (choose!480 lt!37636 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) lt!37644))))

(assert (=> d!20441 (contains!750 lt!37636 lt!37644)))

(assert (=> d!20441 (= (addStillContains!56 lt!37636 lt!37624 (ite (and c!12617 c!12610) lt!37195 (zeroValue!2189 newMap!16)) lt!37644) lt!38209)))

(declare-fun bs!3469 () Bool)

(assert (= bs!3469 d!20441))

(assert (=> bs!3469 m!82435))

(assert (=> bs!3469 m!82435))

(assert (=> bs!3469 m!82437))

(declare-fun m!84263 () Bool)

(assert (=> bs!3469 m!84263))

(declare-fun m!84265 () Bool)

(assert (=> bs!3469 m!84265))

(assert (=> b!80895 d!20441))

(declare-fun d!20443 () Bool)

(declare-fun e!53430 () Bool)

(assert (=> d!20443 e!53430))

(declare-fun res!42508 () Bool)

(assert (=> d!20443 (=> (not res!42508) (not e!53430))))

(declare-fun lt!38213 () ListLongMap!1471)

(assert (=> d!20443 (= res!42508 (contains!750 lt!38213 (_1!1111 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(declare-fun lt!38210 () List!1538)

(assert (=> d!20443 (= lt!38213 (ListLongMap!1472 lt!38210))))

(declare-fun lt!38211 () Unit!2350)

(declare-fun lt!38212 () Unit!2350)

(assert (=> d!20443 (= lt!38211 lt!38212)))

(assert (=> d!20443 (= (getValueByKey!137 lt!38210 (_1!1111 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))) (Some!142 (_2!1111 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(assert (=> d!20443 (= lt!38212 (lemmaContainsTupThenGetReturnValue!56 lt!38210 (_1!1111 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) (_2!1111 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(assert (=> d!20443 (= lt!38210 (insertStrictlySorted!58 (toList!751 lt!37633) (_1!1111 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) (_2!1111 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(assert (=> d!20443 (= (+!111 lt!37633 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) lt!38213)))

(declare-fun b!81893 () Bool)

(declare-fun res!42509 () Bool)

(assert (=> b!81893 (=> (not res!42509) (not e!53430))))

(assert (=> b!81893 (= res!42509 (= (getValueByKey!137 (toList!751 lt!38213) (_1!1111 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))) (Some!142 (_2!1111 (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))))))

(declare-fun b!81894 () Bool)

(assert (=> b!81894 (= e!53430 (contains!753 (toList!751 lt!38213) (tuple2!2203 lt!37641 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))))

(assert (= (and d!20443 res!42508) b!81893))

(assert (= (and b!81893 res!42509) b!81894))

(declare-fun m!84267 () Bool)

(assert (=> d!20443 m!84267))

(declare-fun m!84269 () Bool)

(assert (=> d!20443 m!84269))

(declare-fun m!84271 () Bool)

(assert (=> d!20443 m!84271))

(declare-fun m!84273 () Bool)

(assert (=> d!20443 m!84273))

(declare-fun m!84275 () Bool)

(assert (=> b!81893 m!84275))

(declare-fun m!84277 () Bool)

(assert (=> b!81894 m!84277))

(assert (=> b!80895 d!20443))

(declare-fun d!20445 () Bool)

(declare-fun res!42510 () Bool)

(declare-fun e!53431 () Bool)

(assert (=> d!20445 (=> res!42510 e!53431)))

(assert (=> d!20445 (= res!42510 (or ((_ is Nil!1535) lt!37496) ((_ is Nil!1535) (t!5209 lt!37496))))))

(assert (=> d!20445 (= (isStrictlySorted!291 lt!37496) e!53431)))

(declare-fun b!81895 () Bool)

(declare-fun e!53432 () Bool)

(assert (=> b!81895 (= e!53431 e!53432)))

(declare-fun res!42511 () Bool)

(assert (=> b!81895 (=> (not res!42511) (not e!53432))))

(assert (=> b!81895 (= res!42511 (bvslt (_1!1111 (h!2123 lt!37496)) (_1!1111 (h!2123 (t!5209 lt!37496)))))))

(declare-fun b!81896 () Bool)

(assert (=> b!81896 (= e!53432 (isStrictlySorted!291 (t!5209 lt!37496)))))

(assert (= (and d!20445 (not res!42510)) b!81895))

(assert (= (and b!81895 res!42511) b!81896))

(declare-fun m!84279 () Bool)

(assert (=> b!81896 m!84279))

(assert (=> d!19693 d!20445))

(declare-fun d!20447 () Bool)

(declare-fun res!42512 () Bool)

(declare-fun e!53433 () Bool)

(assert (=> d!20447 (=> res!42512 e!53433)))

(assert (=> d!20447 (= res!42512 (or ((_ is Nil!1535) (toList!751 lt!37192)) ((_ is Nil!1535) (t!5209 (toList!751 lt!37192)))))))

(assert (=> d!20447 (= (isStrictlySorted!291 (toList!751 lt!37192)) e!53433)))

(declare-fun b!81897 () Bool)

(declare-fun e!53434 () Bool)

(assert (=> b!81897 (= e!53433 e!53434)))

(declare-fun res!42513 () Bool)

(assert (=> b!81897 (=> (not res!42513) (not e!53434))))

(assert (=> b!81897 (= res!42513 (bvslt (_1!1111 (h!2123 (toList!751 lt!37192))) (_1!1111 (h!2123 (t!5209 (toList!751 lt!37192))))))))

(declare-fun b!81898 () Bool)

(assert (=> b!81898 (= e!53434 (isStrictlySorted!291 (t!5209 (toList!751 lt!37192))))))

(assert (= (and d!20447 (not res!42512)) b!81897))

(assert (= (and b!81897 res!42513) b!81898))

(assert (=> b!81898 m!83487))

(assert (=> d!19693 d!20447))

(declare-fun d!20449 () Bool)

(declare-fun res!42514 () Bool)

(declare-fun e!53435 () Bool)

(assert (=> d!20449 (=> res!42514 e!53435)))

(assert (=> d!20449 (= res!42514 (and ((_ is Cons!1534) lt!37291) (= (_1!1111 (h!2123 lt!37291)) (_1!1111 lt!37202))))))

(assert (=> d!20449 (= (containsKey!141 lt!37291 (_1!1111 lt!37202)) e!53435)))

(declare-fun b!81899 () Bool)

(declare-fun e!53436 () Bool)

(assert (=> b!81899 (= e!53435 e!53436)))

(declare-fun res!42515 () Bool)

(assert (=> b!81899 (=> (not res!42515) (not e!53436))))

(assert (=> b!81899 (= res!42515 (and (or (not ((_ is Cons!1534) lt!37291)) (bvsle (_1!1111 (h!2123 lt!37291)) (_1!1111 lt!37202))) ((_ is Cons!1534) lt!37291) (bvslt (_1!1111 (h!2123 lt!37291)) (_1!1111 lt!37202))))))

(declare-fun b!81900 () Bool)

(assert (=> b!81900 (= e!53436 (containsKey!141 (t!5209 lt!37291) (_1!1111 lt!37202)))))

(assert (= (and d!20449 (not res!42514)) b!81899))

(assert (= (and b!81899 res!42515) b!81900))

(declare-fun m!84281 () Bool)

(assert (=> b!81900 m!84281))

(assert (=> b!80715 d!20449))

(declare-fun d!20451 () Bool)

(declare-fun lt!38214 () Bool)

(assert (=> d!20451 (= lt!38214 (select (content!84 (t!5209 (toList!751 lt!37290))) lt!37188))))

(declare-fun e!53438 () Bool)

(assert (=> d!20451 (= lt!38214 e!53438)))

(declare-fun res!42517 () Bool)

(assert (=> d!20451 (=> (not res!42517) (not e!53438))))

(assert (=> d!20451 (= res!42517 ((_ is Cons!1534) (t!5209 (toList!751 lt!37290))))))

(assert (=> d!20451 (= (contains!753 (t!5209 (toList!751 lt!37290)) lt!37188) lt!38214)))

(declare-fun b!81901 () Bool)

(declare-fun e!53437 () Bool)

(assert (=> b!81901 (= e!53438 e!53437)))

(declare-fun res!42516 () Bool)

(assert (=> b!81901 (=> res!42516 e!53437)))

(assert (=> b!81901 (= res!42516 (= (h!2123 (t!5209 (toList!751 lt!37290))) lt!37188))))

(declare-fun b!81902 () Bool)

(assert (=> b!81902 (= e!53437 (contains!753 (t!5209 (t!5209 (toList!751 lt!37290))) lt!37188))))

(assert (= (and d!20451 res!42517) b!81901))

(assert (= (and b!81901 (not res!42516)) b!81902))

(declare-fun m!84283 () Bool)

(assert (=> d!20451 m!84283))

(declare-fun m!84285 () Bool)

(assert (=> d!20451 m!84285))

(declare-fun m!84287 () Bool)

(assert (=> b!81902 m!84287))

(assert (=> b!81038 d!20451))

(declare-fun d!20453 () Bool)

(assert (=> d!20453 (isDefined!91 (getValueByKey!137 (toList!751 lt!37298) (_1!1111 lt!37188)))))

(declare-fun lt!38215 () Unit!2350)

(assert (=> d!20453 (= lt!38215 (choose!485 (toList!751 lt!37298) (_1!1111 lt!37188)))))

(declare-fun e!53439 () Bool)

(assert (=> d!20453 e!53439))

(declare-fun res!42518 () Bool)

(assert (=> d!20453 (=> (not res!42518) (not e!53439))))

(assert (=> d!20453 (= res!42518 (isStrictlySorted!291 (toList!751 lt!37298)))))

(assert (=> d!20453 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37298) (_1!1111 lt!37188)) lt!38215)))

(declare-fun b!81903 () Bool)

(assert (=> b!81903 (= e!53439 (containsKey!141 (toList!751 lt!37298) (_1!1111 lt!37188)))))

(assert (= (and d!20453 res!42518) b!81903))

(assert (=> d!20453 m!81815))

(assert (=> d!20453 m!81815))

(assert (=> d!20453 m!82141))

(declare-fun m!84289 () Bool)

(assert (=> d!20453 m!84289))

(declare-fun m!84291 () Bool)

(assert (=> d!20453 m!84291))

(assert (=> b!81903 m!82137))

(assert (=> b!80746 d!20453))

(declare-fun d!20455 () Bool)

(assert (=> d!20455 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37298) (_1!1111 lt!37188))) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37298) (_1!1111 lt!37188)))))))

(declare-fun bs!3470 () Bool)

(assert (= bs!3470 d!20455))

(assert (=> bs!3470 m!81815))

(declare-fun m!84293 () Bool)

(assert (=> bs!3470 m!84293))

(assert (=> b!80746 d!20455))

(assert (=> b!80746 d!19773))

(declare-fun d!20457 () Bool)

(declare-fun lt!38216 () Bool)

(assert (=> d!20457 (= lt!38216 (select (content!84 (toList!751 lt!37690)) (tuple2!2203 lt!37321 lt!37324)))))

(declare-fun e!53441 () Bool)

(assert (=> d!20457 (= lt!38216 e!53441)))

(declare-fun res!42520 () Bool)

(assert (=> d!20457 (=> (not res!42520) (not e!53441))))

(assert (=> d!20457 (= res!42520 ((_ is Cons!1534) (toList!751 lt!37690)))))

(assert (=> d!20457 (= (contains!753 (toList!751 lt!37690) (tuple2!2203 lt!37321 lt!37324)) lt!38216)))

(declare-fun b!81904 () Bool)

(declare-fun e!53440 () Bool)

(assert (=> b!81904 (= e!53441 e!53440)))

(declare-fun res!42519 () Bool)

(assert (=> b!81904 (=> res!42519 e!53440)))

(assert (=> b!81904 (= res!42519 (= (h!2123 (toList!751 lt!37690)) (tuple2!2203 lt!37321 lt!37324)))))

(declare-fun b!81905 () Bool)

(assert (=> b!81905 (= e!53440 (contains!753 (t!5209 (toList!751 lt!37690)) (tuple2!2203 lt!37321 lt!37324)))))

(assert (= (and d!20457 res!42520) b!81904))

(assert (= (and b!81904 (not res!42519)) b!81905))

(declare-fun m!84295 () Bool)

(assert (=> d!20457 m!84295))

(declare-fun m!84297 () Bool)

(assert (=> d!20457 m!84297))

(declare-fun m!84299 () Bool)

(assert (=> b!81905 m!84299))

(assert (=> b!80947 d!20457))

(declare-fun d!20459 () Bool)

(declare-fun res!42521 () Bool)

(declare-fun e!53442 () Bool)

(assert (=> d!20459 (=> res!42521 e!53442)))

(assert (=> d!20459 (= res!42521 (and ((_ is Cons!1534) (toList!751 lt!37290)) (= (_1!1111 (h!2123 (toList!751 lt!37290))) (_1!1111 lt!37188))))))

(assert (=> d!20459 (= (containsKey!141 (toList!751 lt!37290) (_1!1111 lt!37188)) e!53442)))

(declare-fun b!81906 () Bool)

(declare-fun e!53443 () Bool)

(assert (=> b!81906 (= e!53442 e!53443)))

(declare-fun res!42522 () Bool)

(assert (=> b!81906 (=> (not res!42522) (not e!53443))))

(assert (=> b!81906 (= res!42522 (and (or (not ((_ is Cons!1534) (toList!751 lt!37290))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37290))) (_1!1111 lt!37188))) ((_ is Cons!1534) (toList!751 lt!37290)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37290))) (_1!1111 lt!37188))))))

(declare-fun b!81907 () Bool)

(assert (=> b!81907 (= e!53443 (containsKey!141 (t!5209 (toList!751 lt!37290)) (_1!1111 lt!37188)))))

(assert (= (and d!20459 (not res!42521)) b!81906))

(assert (= (and b!81906 res!42522) b!81907))

(declare-fun m!84301 () Bool)

(assert (=> b!81907 m!84301))

(assert (=> d!19687 d!20459))

(declare-fun b!81909 () Bool)

(declare-fun e!53444 () Option!143)

(declare-fun e!53445 () Option!143)

(assert (=> b!81909 (= e!53444 e!53445)))

(declare-fun c!12984 () Bool)

(assert (=> b!81909 (= c!12984 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37290))) (not (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37290)))) (_1!1111 lt!37188)))))))

(declare-fun d!20461 () Bool)

(declare-fun c!12983 () Bool)

(assert (=> d!20461 (= c!12983 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37290))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37290)))) (_1!1111 lt!37188))))))

(assert (=> d!20461 (= (getValueByKey!137 (t!5209 (toList!751 lt!37290)) (_1!1111 lt!37188)) e!53444)))

(declare-fun b!81911 () Bool)

(assert (=> b!81911 (= e!53445 None!141)))

(declare-fun b!81910 () Bool)

(assert (=> b!81910 (= e!53445 (getValueByKey!137 (t!5209 (t!5209 (toList!751 lt!37290))) (_1!1111 lt!37188)))))

(declare-fun b!81908 () Bool)

(assert (=> b!81908 (= e!53444 (Some!142 (_2!1111 (h!2123 (t!5209 (toList!751 lt!37290))))))))

(assert (= (and d!20461 c!12983) b!81908))

(assert (= (and d!20461 (not c!12983)) b!81909))

(assert (= (and b!81909 c!12984) b!81910))

(assert (= (and b!81909 (not c!12984)) b!81911))

(declare-fun m!84303 () Bool)

(assert (=> b!81910 m!84303))

(assert (=> b!80820 d!20461))

(declare-fun b!81913 () Bool)

(declare-fun e!53446 () Option!143)

(declare-fun e!53447 () Option!143)

(assert (=> b!81913 (= e!53446 e!53447)))

(declare-fun c!12986 () Bool)

(assert (=> b!81913 (= c!12986 (and ((_ is Cons!1534) (toList!751 lt!37559)) (not (= (_1!1111 (h!2123 (toList!751 lt!37559))) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20463 () Bool)

(declare-fun c!12985 () Bool)

(assert (=> d!20463 (= c!12985 (and ((_ is Cons!1534) (toList!751 lt!37559)) (= (_1!1111 (h!2123 (toList!751 lt!37559))) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20463 (= (getValueByKey!137 (toList!751 lt!37559) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53446)))

(declare-fun b!81915 () Bool)

(assert (=> b!81915 (= e!53447 None!141)))

(declare-fun b!81914 () Bool)

(assert (=> b!81914 (= e!53447 (getValueByKey!137 (t!5209 (toList!751 lt!37559)) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81912 () Bool)

(assert (=> b!81912 (= e!53446 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37559)))))))

(assert (= (and d!20463 c!12985) b!81912))

(assert (= (and d!20463 (not c!12985)) b!81913))

(assert (= (and b!81913 c!12986) b!81914))

(assert (= (and b!81913 (not c!12986)) b!81915))

(declare-fun m!84305 () Bool)

(assert (=> b!81914 m!84305))

(assert (=> b!80779 d!20463))

(assert (=> d!19697 d!19645))

(assert (=> bm!7519 d!20117))

(declare-fun d!20465 () Bool)

(declare-fun e!53448 () Bool)

(assert (=> d!20465 e!53448))

(declare-fun res!42523 () Bool)

(assert (=> d!20465 (=> res!42523 e!53448)))

(declare-fun lt!38219 () Bool)

(assert (=> d!20465 (= res!42523 (not lt!38219))))

(declare-fun lt!38218 () Bool)

(assert (=> d!20465 (= lt!38219 lt!38218)))

(declare-fun lt!38217 () Unit!2350)

(declare-fun e!53449 () Unit!2350)

(assert (=> d!20465 (= lt!38217 e!53449)))

(declare-fun c!12987 () Bool)

(assert (=> d!20465 (= c!12987 lt!38218)))

(assert (=> d!20465 (= lt!38218 (containsKey!141 (toList!751 lt!37734) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!20465 (= (contains!750 lt!37734 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38219)))

(declare-fun b!81916 () Bool)

(declare-fun lt!38220 () Unit!2350)

(assert (=> b!81916 (= e!53449 lt!38220)))

(assert (=> b!81916 (= lt!38220 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37734) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> b!81916 (isDefined!91 (getValueByKey!137 (toList!751 lt!37734) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81917 () Bool)

(declare-fun Unit!2410 () Unit!2350)

(assert (=> b!81917 (= e!53449 Unit!2410)))

(declare-fun b!81918 () Bool)

(assert (=> b!81918 (= e!53448 (isDefined!91 (getValueByKey!137 (toList!751 lt!37734) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20465 c!12987) b!81916))

(assert (= (and d!20465 (not c!12987)) b!81917))

(assert (= (and d!20465 (not res!42523)) b!81918))

(declare-fun m!84307 () Bool)

(assert (=> d!20465 m!84307))

(declare-fun m!84309 () Bool)

(assert (=> b!81916 m!84309))

(assert (=> b!81916 m!82689))

(assert (=> b!81916 m!82689))

(declare-fun m!84311 () Bool)

(assert (=> b!81916 m!84311))

(assert (=> b!81918 m!82689))

(assert (=> b!81918 m!82689))

(assert (=> b!81918 m!84311))

(assert (=> d!19855 d!20465))

(declare-fun b!81920 () Bool)

(declare-fun e!53450 () Option!143)

(declare-fun e!53451 () Option!143)

(assert (=> b!81920 (= e!53450 e!53451)))

(declare-fun c!12989 () Bool)

(assert (=> b!81920 (= c!12989 (and ((_ is Cons!1534) lt!37731) (not (= (_1!1111 (h!2123 lt!37731)) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20467 () Bool)

(declare-fun c!12988 () Bool)

(assert (=> d!20467 (= c!12988 (and ((_ is Cons!1534) lt!37731) (= (_1!1111 (h!2123 lt!37731)) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20467 (= (getValueByKey!137 lt!37731 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53450)))

(declare-fun b!81922 () Bool)

(assert (=> b!81922 (= e!53451 None!141)))

(declare-fun b!81921 () Bool)

(assert (=> b!81921 (= e!53451 (getValueByKey!137 (t!5209 lt!37731) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81919 () Bool)

(assert (=> b!81919 (= e!53450 (Some!142 (_2!1111 (h!2123 lt!37731))))))

(assert (= (and d!20467 c!12988) b!81919))

(assert (= (and d!20467 (not c!12988)) b!81920))

(assert (= (and b!81920 c!12989) b!81921))

(assert (= (and b!81920 (not c!12989)) b!81922))

(declare-fun m!84313 () Bool)

(assert (=> b!81921 m!84313))

(assert (=> d!19855 d!20467))

(declare-fun d!20469 () Bool)

(assert (=> d!20469 (= (getValueByKey!137 lt!37731 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!38221 () Unit!2350)

(assert (=> d!20469 (= lt!38221 (choose!478 lt!37731 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53452 () Bool)

(assert (=> d!20469 e!53452))

(declare-fun res!42524 () Bool)

(assert (=> d!20469 (=> (not res!42524) (not e!53452))))

(assert (=> d!20469 (= res!42524 (isStrictlySorted!291 lt!37731))))

(assert (=> d!20469 (= (lemmaContainsTupThenGetReturnValue!56 lt!37731 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38221)))

(declare-fun b!81923 () Bool)

(declare-fun res!42525 () Bool)

(assert (=> b!81923 (=> (not res!42525) (not e!53452))))

(assert (=> b!81923 (= res!42525 (containsKey!141 lt!37731 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81924 () Bool)

(assert (=> b!81924 (= e!53452 (contains!753 lt!37731 (tuple2!2203 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20469 res!42524) b!81923))

(assert (= (and b!81923 res!42525) b!81924))

(assert (=> d!20469 m!82683))

(declare-fun m!84315 () Bool)

(assert (=> d!20469 m!84315))

(declare-fun m!84317 () Bool)

(assert (=> d!20469 m!84317))

(declare-fun m!84319 () Bool)

(assert (=> b!81923 m!84319))

(declare-fun m!84321 () Bool)

(assert (=> b!81924 m!84321))

(assert (=> d!19855 d!20469))

(declare-fun d!20471 () Bool)

(declare-fun e!53454 () Bool)

(assert (=> d!20471 e!53454))

(declare-fun res!42526 () Bool)

(assert (=> d!20471 (=> (not res!42526) (not e!53454))))

(declare-fun lt!38222 () List!1538)

(assert (=> d!20471 (= res!42526 (isStrictlySorted!291 lt!38222))))

(declare-fun e!53453 () List!1538)

(assert (=> d!20471 (= lt!38222 e!53453)))

(declare-fun c!12993 () Bool)

(assert (=> d!20471 (= c!12993 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (bvslt (_1!1111 (h!2123 (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20471 (isStrictlySorted!291 (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20471 (= (insertStrictlySorted!58 (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38222)))

(declare-fun b!81925 () Bool)

(assert (=> b!81925 (= e!53454 (contains!753 lt!38222 (tuple2!2203 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun bm!7635 () Bool)

(declare-fun call!7638 () List!1538)

(declare-fun call!7639 () List!1538)

(assert (=> bm!7635 (= call!7638 call!7639)))

(declare-fun b!81926 () Bool)

(declare-fun res!42527 () Bool)

(assert (=> b!81926 (=> (not res!42527) (not e!53454))))

(assert (=> b!81926 (= res!42527 (containsKey!141 lt!38222 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81927 () Bool)

(declare-fun e!53456 () List!1538)

(assert (=> b!81927 (= e!53456 (insertStrictlySorted!58 (t!5209 (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81928 () Bool)

(assert (=> b!81928 (= e!53453 call!7639)))

(declare-fun bm!7636 () Bool)

(assert (=> bm!7636 (= call!7639 ($colon$colon!69 e!53456 (ite c!12993 (h!2123 (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (tuple2!2203 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!12991 () Bool)

(assert (=> bm!7636 (= c!12991 c!12993)))

(declare-fun c!12990 () Bool)

(declare-fun c!12992 () Bool)

(declare-fun b!81929 () Bool)

(assert (=> b!81929 (= e!53456 (ite c!12990 (t!5209 (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (ite c!12992 (Cons!1534 (h!2123 (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (t!5209 (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))) Nil!1535)))))

(declare-fun b!81930 () Bool)

(declare-fun e!53457 () List!1538)

(assert (=> b!81930 (= e!53457 call!7638)))

(declare-fun b!81931 () Bool)

(declare-fun e!53455 () List!1538)

(declare-fun call!7640 () List!1538)

(assert (=> b!81931 (= e!53455 call!7640)))

(declare-fun b!81932 () Bool)

(assert (=> b!81932 (= c!12992 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (bvsgt (_1!1111 (h!2123 (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> b!81932 (= e!53457 e!53455)))

(declare-fun b!81933 () Bool)

(assert (=> b!81933 (= e!53455 call!7640)))

(declare-fun bm!7637 () Bool)

(assert (=> bm!7637 (= call!7640 call!7638)))

(declare-fun b!81934 () Bool)

(assert (=> b!81934 (= e!53453 e!53457)))

(assert (=> b!81934 (= c!12990 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37196 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20471 c!12993) b!81928))

(assert (= (and d!20471 (not c!12993)) b!81934))

(assert (= (and b!81934 c!12990) b!81930))

(assert (= (and b!81934 (not c!12990)) b!81932))

(assert (= (and b!81932 c!12992) b!81931))

(assert (= (and b!81932 (not c!12992)) b!81933))

(assert (= (or b!81931 b!81933) bm!7637))

(assert (= (or b!81930 bm!7637) bm!7635))

(assert (= (or b!81928 bm!7635) bm!7636))

(assert (= (and bm!7636 c!12991) b!81927))

(assert (= (and bm!7636 (not c!12991)) b!81929))

(assert (= (and d!20471 res!42526) b!81926))

(assert (= (and b!81926 res!42527) b!81925))

(declare-fun m!84323 () Bool)

(assert (=> b!81926 m!84323))

(declare-fun m!84325 () Bool)

(assert (=> bm!7636 m!84325))

(declare-fun m!84327 () Bool)

(assert (=> d!20471 m!84327))

(declare-fun m!84329 () Bool)

(assert (=> d!20471 m!84329))

(declare-fun m!84331 () Bool)

(assert (=> b!81927 m!84331))

(declare-fun m!84333 () Bool)

(assert (=> b!81925 m!84333))

(assert (=> d!19855 d!20471))

(declare-fun b!81936 () Bool)

(declare-fun e!53458 () Option!143)

(declare-fun e!53459 () Option!143)

(assert (=> b!81936 (= e!53458 e!53459)))

(declare-fun c!12995 () Bool)

(assert (=> b!81936 (= c!12995 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37306))) (not (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37306)))) (_1!1111 lt!37202)))))))

(declare-fun d!20473 () Bool)

(declare-fun c!12994 () Bool)

(assert (=> d!20473 (= c!12994 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37306))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37306)))) (_1!1111 lt!37202))))))

(assert (=> d!20473 (= (getValueByKey!137 (t!5209 (toList!751 lt!37306)) (_1!1111 lt!37202)) e!53458)))

(declare-fun b!81938 () Bool)

(assert (=> b!81938 (= e!53459 None!141)))

(declare-fun b!81937 () Bool)

(assert (=> b!81937 (= e!53459 (getValueByKey!137 (t!5209 (t!5209 (toList!751 lt!37306))) (_1!1111 lt!37202)))))

(declare-fun b!81935 () Bool)

(assert (=> b!81935 (= e!53458 (Some!142 (_2!1111 (h!2123 (t!5209 (toList!751 lt!37306))))))))

(assert (= (and d!20473 c!12994) b!81935))

(assert (= (and d!20473 (not c!12994)) b!81936))

(assert (= (and b!81936 c!12995) b!81937))

(assert (= (and b!81936 (not c!12995)) b!81938))

(declare-fun m!84335 () Bool)

(assert (=> b!81937 m!84335))

(assert (=> b!81181 d!20473))

(assert (=> b!80950 d!20165))

(assert (=> b!80950 d!20167))

(declare-fun d!20475 () Bool)

(declare-fun res!42528 () Bool)

(declare-fun e!53460 () Bool)

(assert (=> d!20475 (=> res!42528 e!53460)))

(assert (=> d!20475 (= res!42528 (and ((_ is Cons!1534) (toList!751 lt!37326)) (= (_1!1111 (h!2123 (toList!751 lt!37326))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20475 (= (containsKey!141 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000) e!53460)))

(declare-fun b!81939 () Bool)

(declare-fun e!53461 () Bool)

(assert (=> b!81939 (= e!53460 e!53461)))

(declare-fun res!42529 () Bool)

(assert (=> b!81939 (=> (not res!42529) (not e!53461))))

(assert (=> b!81939 (= res!42529 (and (or (not ((_ is Cons!1534) (toList!751 lt!37326))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37326))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1534) (toList!751 lt!37326)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37326))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!81940 () Bool)

(assert (=> b!81940 (= e!53461 (containsKey!141 (t!5209 (toList!751 lt!37326)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20475 (not res!42528)) b!81939))

(assert (= (and b!81939 res!42529) b!81940))

(declare-fun m!84337 () Bool)

(assert (=> b!81940 m!84337))

(assert (=> d!19907 d!20475))

(assert (=> d!19777 d!19787))

(declare-fun d!20477 () Bool)

(declare-fun e!53464 () Bool)

(assert (=> d!20477 e!53464))

(declare-fun res!42534 () Bool)

(assert (=> d!20477 (=> (not res!42534) (not e!53464))))

(declare-fun lt!38225 () SeekEntryResult!251)

(assert (=> d!20477 (= res!42534 ((_ is Found!251) lt!38225))))

(assert (=> d!20477 (= lt!38225 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (=> d!20477 true))

(declare-fun _$33!66 () Unit!2350)

(assert (=> d!20477 (= (choose!481 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)) _$33!66)))

(declare-fun b!81945 () Bool)

(declare-fun res!42535 () Bool)

(assert (=> b!81945 (=> (not res!42535) (not e!53464))))

(assert (=> b!81945 (= res!42535 (inRange!0 (index!3140 lt!38225) (mask!6299 newMap!16)))))

(declare-fun b!81946 () Bool)

(assert (=> b!81946 (= e!53464 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!38225)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (= (and d!20477 res!42534) b!81945))

(assert (= (and b!81945 res!42535) b!81946))

(assert (=> d!20477 m!81585))

(assert (=> d!20477 m!81945))

(declare-fun m!84339 () Bool)

(assert (=> b!81945 m!84339))

(declare-fun m!84341 () Bool)

(assert (=> b!81946 m!84341))

(assert (=> d!19777 d!20477))

(assert (=> d!19777 d!20037))

(declare-fun lt!38226 () Bool)

(declare-fun d!20479 () Bool)

(assert (=> d!20479 (= lt!38226 (select (content!84 (toList!751 lt!37720)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun e!53466 () Bool)

(assert (=> d!20479 (= lt!38226 e!53466)))

(declare-fun res!42537 () Bool)

(assert (=> d!20479 (=> (not res!42537) (not e!53466))))

(assert (=> d!20479 (= res!42537 ((_ is Cons!1534) (toList!751 lt!37720)))))

(assert (=> d!20479 (= (contains!753 (toList!751 lt!37720) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!38226)))

(declare-fun b!81947 () Bool)

(declare-fun e!53465 () Bool)

(assert (=> b!81947 (= e!53466 e!53465)))

(declare-fun res!42536 () Bool)

(assert (=> b!81947 (=> res!42536 e!53465)))

(assert (=> b!81947 (= res!42536 (= (h!2123 (toList!751 lt!37720)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun b!81948 () Bool)

(assert (=> b!81948 (= e!53465 (contains!753 (t!5209 (toList!751 lt!37720)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!20479 res!42537) b!81947))

(assert (= (and b!81947 (not res!42536)) b!81948))

(declare-fun m!84343 () Bool)

(assert (=> d!20479 m!84343))

(declare-fun m!84345 () Bool)

(assert (=> d!20479 m!84345))

(declare-fun m!84347 () Bool)

(assert (=> b!81948 m!84347))

(assert (=> b!80968 d!20479))

(declare-fun d!20481 () Bool)

(assert (=> d!20481 (= (apply!80 lt!37637 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!137 (toList!751 lt!37637) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3471 () Bool)

(assert (= bs!3471 d!20481))

(assert (=> bs!3471 m!83553))

(assert (=> bs!3471 m!83553))

(declare-fun m!84349 () Bool)

(assert (=> bs!3471 m!84349))

(assert (=> b!80902 d!20481))

(declare-fun b!81950 () Bool)

(declare-fun e!53467 () Option!143)

(declare-fun e!53468 () Option!143)

(assert (=> b!81950 (= e!53467 e!53468)))

(declare-fun c!12997 () Bool)

(assert (=> b!81950 (= c!12997 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37302))) (not (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37302)))) (_1!1111 lt!37197)))))))

(declare-fun d!20483 () Bool)

(declare-fun c!12996 () Bool)

(assert (=> d!20483 (= c!12996 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37302))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37302)))) (_1!1111 lt!37197))))))

(assert (=> d!20483 (= (getValueByKey!137 (t!5209 (toList!751 lt!37302)) (_1!1111 lt!37197)) e!53467)))

(declare-fun b!81952 () Bool)

(assert (=> b!81952 (= e!53468 None!141)))

(declare-fun b!81951 () Bool)

(assert (=> b!81951 (= e!53468 (getValueByKey!137 (t!5209 (t!5209 (toList!751 lt!37302))) (_1!1111 lt!37197)))))

(declare-fun b!81949 () Bool)

(assert (=> b!81949 (= e!53467 (Some!142 (_2!1111 (h!2123 (t!5209 (toList!751 lt!37302))))))))

(assert (= (and d!20483 c!12996) b!81949))

(assert (= (and d!20483 (not c!12996)) b!81950))

(assert (= (and b!81950 c!12997) b!81951))

(assert (= (and b!81950 (not c!12997)) b!81952))

(declare-fun m!84351 () Bool)

(assert (=> b!81951 m!84351))

(assert (=> b!81168 d!20483))

(declare-fun d!20485 () Bool)

(declare-fun lt!38227 () Bool)

(assert (=> d!20485 (= lt!38227 (select (content!84 lt!37303) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun e!53470 () Bool)

(assert (=> d!20485 (= lt!38227 e!53470)))

(declare-fun res!42539 () Bool)

(assert (=> d!20485 (=> (not res!42539) (not e!53470))))

(assert (=> d!20485 (= res!42539 ((_ is Cons!1534) lt!37303))))

(assert (=> d!20485 (= (contains!753 lt!37303 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))) lt!38227)))

(declare-fun b!81953 () Bool)

(declare-fun e!53469 () Bool)

(assert (=> b!81953 (= e!53470 e!53469)))

(declare-fun res!42538 () Bool)

(assert (=> b!81953 (=> res!42538 e!53469)))

(assert (=> b!81953 (= res!42538 (= (h!2123 lt!37303) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun b!81954 () Bool)

(assert (=> b!81954 (= e!53469 (contains!753 (t!5209 lt!37303) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(assert (= (and d!20485 res!42539) b!81953))

(assert (= (and b!81953 (not res!42538)) b!81954))

(declare-fun m!84353 () Bool)

(assert (=> d!20485 m!84353))

(declare-fun m!84355 () Bool)

(assert (=> d!20485 m!84355))

(declare-fun m!84357 () Bool)

(assert (=> b!81954 m!84357))

(assert (=> b!81136 d!20485))

(assert (=> b!80971 d!20191))

(assert (=> b!80971 d!19903))

(assert (=> bm!7505 d!20295))

(assert (=> b!81116 d!19777))

(declare-fun d!20487 () Bool)

(declare-fun e!53471 () Bool)

(assert (=> d!20487 e!53471))

(declare-fun res!42540 () Bool)

(assert (=> d!20487 (=> (not res!42540) (not e!53471))))

(declare-fun lt!38231 () ListLongMap!1471)

(assert (=> d!20487 (= res!42540 (contains!750 lt!38231 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!38228 () List!1538)

(assert (=> d!20487 (= lt!38231 (ListLongMap!1472 lt!38228))))

(declare-fun lt!38229 () Unit!2350)

(declare-fun lt!38230 () Unit!2350)

(assert (=> d!20487 (= lt!38229 lt!38230)))

(assert (=> d!20487 (= (getValueByKey!137 lt!38228 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20487 (= lt!38230 (lemmaContainsTupThenGetReturnValue!56 lt!38228 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20487 (= lt!38228 (insertStrictlySorted!58 (toList!751 call!7522) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20487 (= (+!111 call!7522 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!38231)))

(declare-fun b!81955 () Bool)

(declare-fun res!42541 () Bool)

(assert (=> b!81955 (=> (not res!42541) (not e!53471))))

(assert (=> b!81955 (= res!42541 (= (getValueByKey!137 (toList!751 lt!38231) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!81956 () Bool)

(assert (=> b!81956 (= e!53471 (contains!753 (toList!751 lt!38231) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!20487 res!42540) b!81955))

(assert (= (and b!81955 res!42541) b!81956))

(declare-fun m!84359 () Bool)

(assert (=> d!20487 m!84359))

(declare-fun m!84361 () Bool)

(assert (=> d!20487 m!84361))

(declare-fun m!84363 () Bool)

(assert (=> d!20487 m!84363))

(declare-fun m!84365 () Bool)

(assert (=> d!20487 m!84365))

(declare-fun m!84367 () Bool)

(assert (=> b!81955 m!84367))

(declare-fun m!84369 () Bool)

(assert (=> b!81956 m!84369))

(assert (=> b!80871 d!20487))

(declare-fun d!20489 () Bool)

(assert (=> d!20489 (not (contains!750 (+!111 lt!37608 (tuple2!2203 lt!37604 lt!37607)) lt!37610))))

(declare-fun lt!38232 () Unit!2350)

(assert (=> d!20489 (= lt!38232 (choose!484 lt!37608 lt!37604 lt!37607 lt!37610))))

(declare-fun e!53472 () Bool)

(assert (=> d!20489 e!53472))

(declare-fun res!42542 () Bool)

(assert (=> d!20489 (=> (not res!42542) (not e!53472))))

(assert (=> d!20489 (= res!42542 (not (contains!750 lt!37608 lt!37610)))))

(assert (=> d!20489 (= (addStillNotContains!31 lt!37608 lt!37604 lt!37607 lt!37610) lt!38232)))

(declare-fun b!81957 () Bool)

(assert (=> b!81957 (= e!53472 (not (= lt!37604 lt!37610)))))

(assert (= (and d!20489 res!42542) b!81957))

(assert (=> d!20489 m!82337))

(assert (=> d!20489 m!82337))

(assert (=> d!20489 m!82349))

(declare-fun m!84371 () Bool)

(assert (=> d!20489 m!84371))

(declare-fun m!84373 () Bool)

(assert (=> d!20489 m!84373))

(assert (=> b!80871 d!20489))

(declare-fun d!20491 () Bool)

(declare-fun e!53473 () Bool)

(assert (=> d!20491 e!53473))

(declare-fun res!42543 () Bool)

(assert (=> d!20491 (=> res!42543 e!53473)))

(declare-fun lt!38235 () Bool)

(assert (=> d!20491 (= res!42543 (not lt!38235))))

(declare-fun lt!38234 () Bool)

(assert (=> d!20491 (= lt!38235 lt!38234)))

(declare-fun lt!38233 () Unit!2350)

(declare-fun e!53474 () Unit!2350)

(assert (=> d!20491 (= lt!38233 e!53474)))

(declare-fun c!12998 () Bool)

(assert (=> d!20491 (= c!12998 lt!38234)))

(assert (=> d!20491 (= lt!38234 (containsKey!141 (toList!751 (+!111 lt!37608 (tuple2!2203 lt!37604 lt!37607))) lt!37610))))

(assert (=> d!20491 (= (contains!750 (+!111 lt!37608 (tuple2!2203 lt!37604 lt!37607)) lt!37610) lt!38235)))

(declare-fun b!81958 () Bool)

(declare-fun lt!38236 () Unit!2350)

(assert (=> b!81958 (= e!53474 lt!38236)))

(assert (=> b!81958 (= lt!38236 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (+!111 lt!37608 (tuple2!2203 lt!37604 lt!37607))) lt!37610))))

(assert (=> b!81958 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37608 (tuple2!2203 lt!37604 lt!37607))) lt!37610))))

(declare-fun b!81959 () Bool)

(declare-fun Unit!2411 () Unit!2350)

(assert (=> b!81959 (= e!53474 Unit!2411)))

(declare-fun b!81960 () Bool)

(assert (=> b!81960 (= e!53473 (isDefined!91 (getValueByKey!137 (toList!751 (+!111 lt!37608 (tuple2!2203 lt!37604 lt!37607))) lt!37610)))))

(assert (= (and d!20491 c!12998) b!81958))

(assert (= (and d!20491 (not c!12998)) b!81959))

(assert (= (and d!20491 (not res!42543)) b!81960))

(declare-fun m!84375 () Bool)

(assert (=> d!20491 m!84375))

(declare-fun m!84377 () Bool)

(assert (=> b!81958 m!84377))

(declare-fun m!84379 () Bool)

(assert (=> b!81958 m!84379))

(assert (=> b!81958 m!84379))

(declare-fun m!84381 () Bool)

(assert (=> b!81958 m!84381))

(assert (=> b!81960 m!84379))

(assert (=> b!81960 m!84379))

(assert (=> b!81960 m!84381))

(assert (=> b!80871 d!20491))

(declare-fun d!20493 () Bool)

(declare-fun e!53475 () Bool)

(assert (=> d!20493 e!53475))

(declare-fun res!42544 () Bool)

(assert (=> d!20493 (=> (not res!42544) (not e!53475))))

(declare-fun lt!38240 () ListLongMap!1471)

(assert (=> d!20493 (= res!42544 (contains!750 lt!38240 (_1!1111 (tuple2!2203 lt!37604 lt!37607))))))

(declare-fun lt!38237 () List!1538)

(assert (=> d!20493 (= lt!38240 (ListLongMap!1472 lt!38237))))

(declare-fun lt!38238 () Unit!2350)

(declare-fun lt!38239 () Unit!2350)

(assert (=> d!20493 (= lt!38238 lt!38239)))

(assert (=> d!20493 (= (getValueByKey!137 lt!38237 (_1!1111 (tuple2!2203 lt!37604 lt!37607))) (Some!142 (_2!1111 (tuple2!2203 lt!37604 lt!37607))))))

(assert (=> d!20493 (= lt!38239 (lemmaContainsTupThenGetReturnValue!56 lt!38237 (_1!1111 (tuple2!2203 lt!37604 lt!37607)) (_2!1111 (tuple2!2203 lt!37604 lt!37607))))))

(assert (=> d!20493 (= lt!38237 (insertStrictlySorted!58 (toList!751 lt!37608) (_1!1111 (tuple2!2203 lt!37604 lt!37607)) (_2!1111 (tuple2!2203 lt!37604 lt!37607))))))

(assert (=> d!20493 (= (+!111 lt!37608 (tuple2!2203 lt!37604 lt!37607)) lt!38240)))

(declare-fun b!81961 () Bool)

(declare-fun res!42545 () Bool)

(assert (=> b!81961 (=> (not res!42545) (not e!53475))))

(assert (=> b!81961 (= res!42545 (= (getValueByKey!137 (toList!751 lt!38240) (_1!1111 (tuple2!2203 lt!37604 lt!37607))) (Some!142 (_2!1111 (tuple2!2203 lt!37604 lt!37607)))))))

(declare-fun b!81962 () Bool)

(assert (=> b!81962 (= e!53475 (contains!753 (toList!751 lt!38240) (tuple2!2203 lt!37604 lt!37607)))))

(assert (= (and d!20493 res!42544) b!81961))

(assert (= (and b!81961 res!42545) b!81962))

(declare-fun m!84383 () Bool)

(assert (=> d!20493 m!84383))

(declare-fun m!84385 () Bool)

(assert (=> d!20493 m!84385))

(declare-fun m!84387 () Bool)

(assert (=> d!20493 m!84387))

(declare-fun m!84389 () Bool)

(assert (=> d!20493 m!84389))

(declare-fun m!84391 () Bool)

(assert (=> b!81961 m!84391))

(declare-fun m!84393 () Bool)

(assert (=> b!81962 m!84393))

(assert (=> b!80871 d!20493))

(assert (=> b!80871 d!20337))

(declare-fun d!20495 () Bool)

(declare-fun c!12999 () Bool)

(assert (=> d!20495 (= c!12999 ((_ is Nil!1535) (toList!751 lt!37298)))))

(declare-fun e!53476 () (InoxSet tuple2!2202))

(assert (=> d!20495 (= (content!84 (toList!751 lt!37298)) e!53476)))

(declare-fun b!81963 () Bool)

(assert (=> b!81963 (= e!53476 ((as const (Array tuple2!2202 Bool)) false))))

(declare-fun b!81964 () Bool)

(assert (=> b!81964 (= e!53476 ((_ map or) (store ((as const (Array tuple2!2202 Bool)) false) (h!2123 (toList!751 lt!37298)) true) (content!84 (t!5209 (toList!751 lt!37298)))))))

(assert (= (and d!20495 c!12999) b!81963))

(assert (= (and d!20495 (not c!12999)) b!81964))

(declare-fun m!84395 () Bool)

(assert (=> b!81964 m!84395))

(declare-fun m!84397 () Bool)

(assert (=> b!81964 m!84397))

(assert (=> d!19891 d!20495))

(declare-fun d!20497 () Bool)

(declare-fun e!53477 () Bool)

(assert (=> d!20497 e!53477))

(declare-fun res!42546 () Bool)

(assert (=> d!20497 (=> res!42546 e!53477)))

(declare-fun lt!38243 () Bool)

(assert (=> d!20497 (= res!42546 (not lt!38243))))

(declare-fun lt!38242 () Bool)

(assert (=> d!20497 (= lt!38243 lt!38242)))

(declare-fun lt!38241 () Unit!2350)

(declare-fun e!53478 () Unit!2350)

(assert (=> d!20497 (= lt!38241 e!53478)))

(declare-fun c!13000 () Bool)

(assert (=> d!20497 (= c!13000 lt!38242)))

(assert (=> d!20497 (= lt!38242 (containsKey!141 (toList!751 lt!37742) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20497 (= (contains!750 lt!37742 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38243)))

(declare-fun b!81965 () Bool)

(declare-fun lt!38244 () Unit!2350)

(assert (=> b!81965 (= e!53478 lt!38244)))

(assert (=> b!81965 (= lt!38244 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37742) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> b!81965 (isDefined!91 (getValueByKey!137 (toList!751 lt!37742) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81966 () Bool)

(declare-fun Unit!2412 () Unit!2350)

(assert (=> b!81966 (= e!53478 Unit!2412)))

(declare-fun b!81967 () Bool)

(assert (=> b!81967 (= e!53477 (isDefined!91 (getValueByKey!137 (toList!751 lt!37742) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20497 c!13000) b!81965))

(assert (= (and d!20497 (not c!13000)) b!81966))

(assert (= (and d!20497 (not res!42546)) b!81967))

(declare-fun m!84399 () Bool)

(assert (=> d!20497 m!84399))

(declare-fun m!84401 () Bool)

(assert (=> b!81965 m!84401))

(assert (=> b!81965 m!82713))

(assert (=> b!81965 m!82713))

(declare-fun m!84403 () Bool)

(assert (=> b!81965 m!84403))

(assert (=> b!81967 m!82713))

(assert (=> b!81967 m!82713))

(assert (=> b!81967 m!84403))

(assert (=> d!19861 d!20497))

(declare-fun b!81969 () Bool)

(declare-fun e!53479 () Option!143)

(declare-fun e!53480 () Option!143)

(assert (=> b!81969 (= e!53479 e!53480)))

(declare-fun c!13002 () Bool)

(assert (=> b!81969 (= c!13002 (and ((_ is Cons!1534) lt!37739) (not (= (_1!1111 (h!2123 lt!37739)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun d!20499 () Bool)

(declare-fun c!13001 () Bool)

(assert (=> d!20499 (= c!13001 (and ((_ is Cons!1534) lt!37739) (= (_1!1111 (h!2123 lt!37739)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20499 (= (getValueByKey!137 lt!37739 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) e!53479)))

(declare-fun b!81971 () Bool)

(assert (=> b!81971 (= e!53480 None!141)))

(declare-fun b!81970 () Bool)

(assert (=> b!81970 (= e!53480 (getValueByKey!137 (t!5209 lt!37739) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81968 () Bool)

(assert (=> b!81968 (= e!53479 (Some!142 (_2!1111 (h!2123 lt!37739))))))

(assert (= (and d!20499 c!13001) b!81968))

(assert (= (and d!20499 (not c!13001)) b!81969))

(assert (= (and b!81969 c!13002) b!81970))

(assert (= (and b!81969 (not c!13002)) b!81971))

(declare-fun m!84405 () Bool)

(assert (=> b!81970 m!84405))

(assert (=> d!19861 d!20499))

(declare-fun d!20501 () Bool)

(assert (=> d!20501 (= (getValueByKey!137 lt!37739 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!38245 () Unit!2350)

(assert (=> d!20501 (= lt!38245 (choose!478 lt!37739 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun e!53481 () Bool)

(assert (=> d!20501 e!53481))

(declare-fun res!42547 () Bool)

(assert (=> d!20501 (=> (not res!42547) (not e!53481))))

(assert (=> d!20501 (= res!42547 (isStrictlySorted!291 lt!37739))))

(assert (=> d!20501 (= (lemmaContainsTupThenGetReturnValue!56 lt!37739 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38245)))

(declare-fun b!81972 () Bool)

(declare-fun res!42548 () Bool)

(assert (=> b!81972 (=> (not res!42548) (not e!53481))))

(assert (=> b!81972 (= res!42548 (containsKey!141 lt!37739 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81973 () Bool)

(assert (=> b!81973 (= e!53481 (contains!753 lt!37739 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20501 res!42547) b!81972))

(assert (= (and b!81972 res!42548) b!81973))

(assert (=> d!20501 m!82707))

(declare-fun m!84407 () Bool)

(assert (=> d!20501 m!84407))

(declare-fun m!84409 () Bool)

(assert (=> d!20501 m!84409))

(declare-fun m!84411 () Bool)

(assert (=> b!81972 m!84411))

(declare-fun m!84413 () Bool)

(assert (=> b!81973 m!84413))

(assert (=> d!19861 d!20501))

(declare-fun d!20503 () Bool)

(declare-fun e!53483 () Bool)

(assert (=> d!20503 e!53483))

(declare-fun res!42549 () Bool)

(assert (=> d!20503 (=> (not res!42549) (not e!53483))))

(declare-fun lt!38246 () List!1538)

(assert (=> d!20503 (= res!42549 (isStrictlySorted!291 lt!38246))))

(declare-fun e!53482 () List!1538)

(assert (=> d!20503 (= lt!38246 e!53482)))

(declare-fun c!13006 () Bool)

(assert (=> d!20503 (= c!13006 (and ((_ is Cons!1534) (toList!751 lt!37196)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20503 (isStrictlySorted!291 (toList!751 lt!37196))))

(assert (=> d!20503 (= (insertStrictlySorted!58 (toList!751 lt!37196) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38246)))

(declare-fun b!81974 () Bool)

(assert (=> b!81974 (= e!53483 (contains!753 lt!38246 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun bm!7638 () Bool)

(declare-fun call!7641 () List!1538)

(declare-fun call!7642 () List!1538)

(assert (=> bm!7638 (= call!7641 call!7642)))

(declare-fun b!81975 () Bool)

(declare-fun res!42550 () Bool)

(assert (=> b!81975 (=> (not res!42550) (not e!53483))))

(assert (=> b!81975 (= res!42550 (containsKey!141 lt!38246 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun e!53485 () List!1538)

(declare-fun b!81976 () Bool)

(assert (=> b!81976 (= e!53485 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37196)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!81977 () Bool)

(assert (=> b!81977 (= e!53482 call!7642)))

(declare-fun bm!7639 () Bool)

(assert (=> bm!7639 (= call!7642 ($colon$colon!69 e!53485 (ite c!13006 (h!2123 (toList!751 lt!37196)) (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!13004 () Bool)

(assert (=> bm!7639 (= c!13004 c!13006)))

(declare-fun c!13003 () Bool)

(declare-fun b!81978 () Bool)

(declare-fun c!13005 () Bool)

(assert (=> b!81978 (= e!53485 (ite c!13003 (t!5209 (toList!751 lt!37196)) (ite c!13005 (Cons!1534 (h!2123 (toList!751 lt!37196)) (t!5209 (toList!751 lt!37196))) Nil!1535)))))

(declare-fun b!81979 () Bool)

(declare-fun e!53486 () List!1538)

(assert (=> b!81979 (= e!53486 call!7641)))

(declare-fun b!81980 () Bool)

(declare-fun e!53484 () List!1538)

(declare-fun call!7643 () List!1538)

(assert (=> b!81980 (= e!53484 call!7643)))

(declare-fun b!81981 () Bool)

(assert (=> b!81981 (= c!13005 (and ((_ is Cons!1534) (toList!751 lt!37196)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> b!81981 (= e!53486 e!53484)))

(declare-fun b!81982 () Bool)

(assert (=> b!81982 (= e!53484 call!7643)))

(declare-fun bm!7640 () Bool)

(assert (=> bm!7640 (= call!7643 call!7641)))

(declare-fun b!81983 () Bool)

(assert (=> b!81983 (= e!53482 e!53486)))

(assert (=> b!81983 (= c!13003 (and ((_ is Cons!1534) (toList!751 lt!37196)) (= (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20503 c!13006) b!81977))

(assert (= (and d!20503 (not c!13006)) b!81983))

(assert (= (and b!81983 c!13003) b!81979))

(assert (= (and b!81983 (not c!13003)) b!81981))

(assert (= (and b!81981 c!13005) b!81980))

(assert (= (and b!81981 (not c!13005)) b!81982))

(assert (= (or b!81980 b!81982) bm!7640))

(assert (= (or b!81979 bm!7640) bm!7638))

(assert (= (or b!81977 bm!7638) bm!7639))

(assert (= (and bm!7639 c!13004) b!81976))

(assert (= (and bm!7639 (not c!13004)) b!81978))

(assert (= (and d!20503 res!42549) b!81975))

(assert (= (and b!81975 res!42550) b!81974))

(declare-fun m!84415 () Bool)

(assert (=> b!81975 m!84415))

(declare-fun m!84417 () Bool)

(assert (=> bm!7639 m!84417))

(declare-fun m!84419 () Bool)

(assert (=> d!20503 m!84419))

(assert (=> d!20503 m!82159))

(declare-fun m!84421 () Bool)

(assert (=> b!81976 m!84421))

(declare-fun m!84423 () Bool)

(assert (=> b!81974 m!84423))

(assert (=> d!19861 d!20503))

(declare-fun d!20505 () Bool)

(declare-fun res!42551 () Bool)

(declare-fun e!53487 () Bool)

(assert (=> d!20505 (=> res!42551 e!53487)))

(assert (=> d!20505 (= res!42551 (and ((_ is Cons!1534) (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (= (_1!1111 (h!2123 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) lt!37392)))))

(assert (=> d!20505 (= (containsKey!141 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!37392) e!53487)))

(declare-fun b!81984 () Bool)

(declare-fun e!53488 () Bool)

(assert (=> b!81984 (= e!53487 e!53488)))

(declare-fun res!42552 () Bool)

(assert (=> b!81984 (=> (not res!42552) (not e!53488))))

(assert (=> b!81984 (= res!42552 (and (or (not ((_ is Cons!1534) (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) (bvsle (_1!1111 (h!2123 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) lt!37392)) ((_ is Cons!1534) (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) (bvslt (_1!1111 (h!2123 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))) lt!37392)))))

(declare-fun b!81985 () Bool)

(assert (=> b!81985 (= e!53488 (containsKey!141 (t!5209 (toList!751 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))) lt!37392))))

(assert (= (and d!20505 (not res!42551)) b!81984))

(assert (= (and b!81984 res!42552) b!81985))

(declare-fun m!84425 () Bool)

(assert (=> b!81985 m!84425))

(assert (=> d!19737 d!20505))

(assert (=> b!80960 d!20197))

(assert (=> b!80960 d!20199))

(declare-fun d!20507 () Bool)

(declare-fun e!53489 () Bool)

(assert (=> d!20507 e!53489))

(declare-fun res!42553 () Bool)

(assert (=> d!20507 (=> res!42553 e!53489)))

(declare-fun lt!38249 () Bool)

(assert (=> d!20507 (= res!42553 (not lt!38249))))

(declare-fun lt!38248 () Bool)

(assert (=> d!20507 (= lt!38249 lt!38248)))

(declare-fun lt!38247 () Unit!2350)

(declare-fun e!53490 () Unit!2350)

(assert (=> d!20507 (= lt!38247 e!53490)))

(declare-fun c!13007 () Bool)

(assert (=> d!20507 (= c!13007 lt!38248)))

(assert (=> d!20507 (= lt!38248 (containsKey!141 (toList!751 lt!37637) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20507 (= (contains!750 lt!37637 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38249)))

(declare-fun b!81986 () Bool)

(declare-fun lt!38250 () Unit!2350)

(assert (=> b!81986 (= e!53490 lt!38250)))

(assert (=> b!81986 (= lt!38250 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37637) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!81986 (isDefined!91 (getValueByKey!137 (toList!751 lt!37637) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!81987 () Bool)

(declare-fun Unit!2413 () Unit!2350)

(assert (=> b!81987 (= e!53490 Unit!2413)))

(declare-fun b!81988 () Bool)

(assert (=> b!81988 (= e!53489 (isDefined!91 (getValueByKey!137 (toList!751 lt!37637) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20507 c!13007) b!81986))

(assert (= (and d!20507 (not c!13007)) b!81987))

(assert (= (and d!20507 (not res!42553)) b!81988))

(declare-fun m!84427 () Bool)

(assert (=> d!20507 m!84427))

(declare-fun m!84429 () Bool)

(assert (=> b!81986 m!84429))

(assert (=> b!81986 m!83063))

(assert (=> b!81986 m!83063))

(declare-fun m!84431 () Bool)

(assert (=> b!81986 m!84431))

(assert (=> b!81988 m!83063))

(assert (=> b!81988 m!83063))

(assert (=> b!81988 m!84431))

(assert (=> bm!7521 d!20507))

(declare-fun b!81990 () Bool)

(declare-fun e!53491 () Option!143)

(declare-fun e!53492 () Option!143)

(assert (=> b!81990 (= e!53491 e!53492)))

(declare-fun c!13009 () Bool)

(assert (=> b!81990 (= c!13009 (and ((_ is Cons!1534) (toList!751 lt!37734)) (not (= (_1!1111 (h!2123 (toList!751 lt!37734))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20509 () Bool)

(declare-fun c!13008 () Bool)

(assert (=> d!20509 (= c!13008 (and ((_ is Cons!1534) (toList!751 lt!37734)) (= (_1!1111 (h!2123 (toList!751 lt!37734))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20509 (= (getValueByKey!137 (toList!751 lt!37734) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53491)))

(declare-fun b!81992 () Bool)

(assert (=> b!81992 (= e!53492 None!141)))

(declare-fun b!81991 () Bool)

(assert (=> b!81991 (= e!53492 (getValueByKey!137 (t!5209 (toList!751 lt!37734)) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!81989 () Bool)

(assert (=> b!81989 (= e!53491 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37734)))))))

(assert (= (and d!20509 c!13008) b!81989))

(assert (= (and d!20509 (not c!13008)) b!81990))

(assert (= (and b!81990 c!13009) b!81991))

(assert (= (and b!81990 (not c!13009)) b!81992))

(declare-fun m!84433 () Bool)

(assert (=> b!81991 m!84433))

(assert (=> b!80990 d!20509))

(assert (=> b!80844 d!20205))

(assert (=> b!80844 d!20207))

(declare-fun d!20511 () Bool)

(declare-fun res!42554 () Bool)

(declare-fun e!53493 () Bool)

(assert (=> d!20511 (=> res!42554 e!53493)))

(assert (=> d!20511 (= res!42554 (and ((_ is Cons!1534) lt!37282) (= (_1!1111 (h!2123 lt!37282)) (_1!1111 lt!37202))))))

(assert (=> d!20511 (= (containsKey!141 lt!37282 (_1!1111 lt!37202)) e!53493)))

(declare-fun b!81993 () Bool)

(declare-fun e!53494 () Bool)

(assert (=> b!81993 (= e!53493 e!53494)))

(declare-fun res!42555 () Bool)

(assert (=> b!81993 (=> (not res!42555) (not e!53494))))

(assert (=> b!81993 (= res!42555 (and (or (not ((_ is Cons!1534) lt!37282)) (bvsle (_1!1111 (h!2123 lt!37282)) (_1!1111 lt!37202))) ((_ is Cons!1534) lt!37282) (bvslt (_1!1111 (h!2123 lt!37282)) (_1!1111 lt!37202))))))

(declare-fun b!81994 () Bool)

(assert (=> b!81994 (= e!53494 (containsKey!141 (t!5209 lt!37282) (_1!1111 lt!37202)))))

(assert (= (and d!20511 (not res!42554)) b!81993))

(assert (= (and b!81993 res!42555) b!81994))

(declare-fun m!84435 () Bool)

(assert (=> b!81994 m!84435))

(assert (=> b!80976 d!20511))

(declare-fun d!20513 () Bool)

(assert (=> d!20513 (isDefined!91 (getValueByKey!137 (toList!751 lt!37302) (_1!1111 lt!37197)))))

(declare-fun lt!38251 () Unit!2350)

(assert (=> d!20513 (= lt!38251 (choose!485 (toList!751 lt!37302) (_1!1111 lt!37197)))))

(declare-fun e!53495 () Bool)

(assert (=> d!20513 e!53495))

(declare-fun res!42556 () Bool)

(assert (=> d!20513 (=> (not res!42556) (not e!53495))))

(assert (=> d!20513 (= res!42556 (isStrictlySorted!291 (toList!751 lt!37302)))))

(assert (=> d!20513 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37302) (_1!1111 lt!37197)) lt!38251)))

(declare-fun b!81995 () Bool)

(assert (=> b!81995 (= e!53495 (containsKey!141 (toList!751 lt!37302) (_1!1111 lt!37197)))))

(assert (= (and d!20513 res!42556) b!81995))

(assert (=> d!20513 m!81827))

(assert (=> d!20513 m!81827))

(assert (=> d!20513 m!82735))

(declare-fun m!84437 () Bool)

(assert (=> d!20513 m!84437))

(declare-fun m!84439 () Bool)

(assert (=> d!20513 m!84439))

(assert (=> b!81995 m!82731))

(assert (=> b!81010 d!20513))

(declare-fun d!20515 () Bool)

(assert (=> d!20515 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37302) (_1!1111 lt!37197))) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37302) (_1!1111 lt!37197)))))))

(declare-fun bs!3472 () Bool)

(assert (= bs!3472 d!20515))

(assert (=> bs!3472 m!81827))

(declare-fun m!84441 () Bool)

(assert (=> bs!3472 m!84441))

(assert (=> b!81010 d!20515))

(assert (=> b!81010 d!19919))

(declare-fun d!20517 () Bool)

(declare-fun e!53496 () Bool)

(assert (=> d!20517 e!53496))

(declare-fun res!42557 () Bool)

(assert (=> d!20517 (=> res!42557 e!53496)))

(declare-fun lt!38254 () Bool)

(assert (=> d!20517 (= res!42557 (not lt!38254))))

(declare-fun lt!38253 () Bool)

(assert (=> d!20517 (= lt!38254 lt!38253)))

(declare-fun lt!38252 () Unit!2350)

(declare-fun e!53497 () Unit!2350)

(assert (=> d!20517 (= lt!38252 e!53497)))

(declare-fun c!13010 () Bool)

(assert (=> d!20517 (= c!13010 lt!38253)))

(assert (=> d!20517 (= lt!38253 (containsKey!141 (toList!751 lt!37690) (_1!1111 (tuple2!2203 lt!37321 lt!37324))))))

(assert (=> d!20517 (= (contains!750 lt!37690 (_1!1111 (tuple2!2203 lt!37321 lt!37324))) lt!38254)))

(declare-fun b!81996 () Bool)

(declare-fun lt!38255 () Unit!2350)

(assert (=> b!81996 (= e!53497 lt!38255)))

(assert (=> b!81996 (= lt!38255 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37690) (_1!1111 (tuple2!2203 lt!37321 lt!37324))))))

(assert (=> b!81996 (isDefined!91 (getValueByKey!137 (toList!751 lt!37690) (_1!1111 (tuple2!2203 lt!37321 lt!37324))))))

(declare-fun b!81997 () Bool)

(declare-fun Unit!2414 () Unit!2350)

(assert (=> b!81997 (= e!53497 Unit!2414)))

(declare-fun b!81998 () Bool)

(assert (=> b!81998 (= e!53496 (isDefined!91 (getValueByKey!137 (toList!751 lt!37690) (_1!1111 (tuple2!2203 lt!37321 lt!37324)))))))

(assert (= (and d!20517 c!13010) b!81996))

(assert (= (and d!20517 (not c!13010)) b!81997))

(assert (= (and d!20517 (not res!42557)) b!81998))

(declare-fun m!84443 () Bool)

(assert (=> d!20517 m!84443))

(declare-fun m!84445 () Bool)

(assert (=> b!81996 m!84445))

(assert (=> b!81996 m!82559))

(assert (=> b!81996 m!82559))

(declare-fun m!84447 () Bool)

(assert (=> b!81996 m!84447))

(assert (=> b!81998 m!82559))

(assert (=> b!81998 m!82559))

(assert (=> b!81998 m!84447))

(assert (=> d!19819 d!20517))

(declare-fun b!82000 () Bool)

(declare-fun e!53498 () Option!143)

(declare-fun e!53499 () Option!143)

(assert (=> b!82000 (= e!53498 e!53499)))

(declare-fun c!13012 () Bool)

(assert (=> b!82000 (= c!13012 (and ((_ is Cons!1534) lt!37687) (not (= (_1!1111 (h!2123 lt!37687)) (_1!1111 (tuple2!2203 lt!37321 lt!37324))))))))

(declare-fun c!13011 () Bool)

(declare-fun d!20519 () Bool)

(assert (=> d!20519 (= c!13011 (and ((_ is Cons!1534) lt!37687) (= (_1!1111 (h!2123 lt!37687)) (_1!1111 (tuple2!2203 lt!37321 lt!37324)))))))

(assert (=> d!20519 (= (getValueByKey!137 lt!37687 (_1!1111 (tuple2!2203 lt!37321 lt!37324))) e!53498)))

(declare-fun b!82002 () Bool)

(assert (=> b!82002 (= e!53499 None!141)))

(declare-fun b!82001 () Bool)

(assert (=> b!82001 (= e!53499 (getValueByKey!137 (t!5209 lt!37687) (_1!1111 (tuple2!2203 lt!37321 lt!37324))))))

(declare-fun b!81999 () Bool)

(assert (=> b!81999 (= e!53498 (Some!142 (_2!1111 (h!2123 lt!37687))))))

(assert (= (and d!20519 c!13011) b!81999))

(assert (= (and d!20519 (not c!13011)) b!82000))

(assert (= (and b!82000 c!13012) b!82001))

(assert (= (and b!82000 (not c!13012)) b!82002))

(declare-fun m!84449 () Bool)

(assert (=> b!82001 m!84449))

(assert (=> d!19819 d!20519))

(declare-fun d!20521 () Bool)

(assert (=> d!20521 (= (getValueByKey!137 lt!37687 (_1!1111 (tuple2!2203 lt!37321 lt!37324))) (Some!142 (_2!1111 (tuple2!2203 lt!37321 lt!37324))))))

(declare-fun lt!38256 () Unit!2350)

(assert (=> d!20521 (= lt!38256 (choose!478 lt!37687 (_1!1111 (tuple2!2203 lt!37321 lt!37324)) (_2!1111 (tuple2!2203 lt!37321 lt!37324))))))

(declare-fun e!53500 () Bool)

(assert (=> d!20521 e!53500))

(declare-fun res!42558 () Bool)

(assert (=> d!20521 (=> (not res!42558) (not e!53500))))

(assert (=> d!20521 (= res!42558 (isStrictlySorted!291 lt!37687))))

(assert (=> d!20521 (= (lemmaContainsTupThenGetReturnValue!56 lt!37687 (_1!1111 (tuple2!2203 lt!37321 lt!37324)) (_2!1111 (tuple2!2203 lt!37321 lt!37324))) lt!38256)))

(declare-fun b!82003 () Bool)

(declare-fun res!42559 () Bool)

(assert (=> b!82003 (=> (not res!42559) (not e!53500))))

(assert (=> b!82003 (= res!42559 (containsKey!141 lt!37687 (_1!1111 (tuple2!2203 lt!37321 lt!37324))))))

(declare-fun b!82004 () Bool)

(assert (=> b!82004 (= e!53500 (contains!753 lt!37687 (tuple2!2203 (_1!1111 (tuple2!2203 lt!37321 lt!37324)) (_2!1111 (tuple2!2203 lt!37321 lt!37324)))))))

(assert (= (and d!20521 res!42558) b!82003))

(assert (= (and b!82003 res!42559) b!82004))

(assert (=> d!20521 m!82553))

(declare-fun m!84451 () Bool)

(assert (=> d!20521 m!84451))

(declare-fun m!84453 () Bool)

(assert (=> d!20521 m!84453))

(declare-fun m!84455 () Bool)

(assert (=> b!82003 m!84455))

(declare-fun m!84457 () Bool)

(assert (=> b!82004 m!84457))

(assert (=> d!19819 d!20521))

(declare-fun d!20523 () Bool)

(declare-fun e!53502 () Bool)

(assert (=> d!20523 e!53502))

(declare-fun res!42560 () Bool)

(assert (=> d!20523 (=> (not res!42560) (not e!53502))))

(declare-fun lt!38257 () List!1538)

(assert (=> d!20523 (= res!42560 (isStrictlySorted!291 lt!38257))))

(declare-fun e!53501 () List!1538)

(assert (=> d!20523 (= lt!38257 e!53501)))

(declare-fun c!13016 () Bool)

(assert (=> d!20523 (= c!13016 (and ((_ is Cons!1534) (toList!751 lt!37325)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37325))) (_1!1111 (tuple2!2203 lt!37321 lt!37324)))))))

(assert (=> d!20523 (isStrictlySorted!291 (toList!751 lt!37325))))

(assert (=> d!20523 (= (insertStrictlySorted!58 (toList!751 lt!37325) (_1!1111 (tuple2!2203 lt!37321 lt!37324)) (_2!1111 (tuple2!2203 lt!37321 lt!37324))) lt!38257)))

(declare-fun b!82005 () Bool)

(assert (=> b!82005 (= e!53502 (contains!753 lt!38257 (tuple2!2203 (_1!1111 (tuple2!2203 lt!37321 lt!37324)) (_2!1111 (tuple2!2203 lt!37321 lt!37324)))))))

(declare-fun bm!7641 () Bool)

(declare-fun call!7644 () List!1538)

(declare-fun call!7645 () List!1538)

(assert (=> bm!7641 (= call!7644 call!7645)))

(declare-fun b!82006 () Bool)

(declare-fun res!42561 () Bool)

(assert (=> b!82006 (=> (not res!42561) (not e!53502))))

(assert (=> b!82006 (= res!42561 (containsKey!141 lt!38257 (_1!1111 (tuple2!2203 lt!37321 lt!37324))))))

(declare-fun e!53504 () List!1538)

(declare-fun b!82007 () Bool)

(assert (=> b!82007 (= e!53504 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37325)) (_1!1111 (tuple2!2203 lt!37321 lt!37324)) (_2!1111 (tuple2!2203 lt!37321 lt!37324))))))

(declare-fun b!82008 () Bool)

(assert (=> b!82008 (= e!53501 call!7645)))

(declare-fun bm!7642 () Bool)

(assert (=> bm!7642 (= call!7645 ($colon$colon!69 e!53504 (ite c!13016 (h!2123 (toList!751 lt!37325)) (tuple2!2203 (_1!1111 (tuple2!2203 lt!37321 lt!37324)) (_2!1111 (tuple2!2203 lt!37321 lt!37324))))))))

(declare-fun c!13014 () Bool)

(assert (=> bm!7642 (= c!13014 c!13016)))

(declare-fun c!13015 () Bool)

(declare-fun c!13013 () Bool)

(declare-fun b!82009 () Bool)

(assert (=> b!82009 (= e!53504 (ite c!13013 (t!5209 (toList!751 lt!37325)) (ite c!13015 (Cons!1534 (h!2123 (toList!751 lt!37325)) (t!5209 (toList!751 lt!37325))) Nil!1535)))))

(declare-fun b!82010 () Bool)

(declare-fun e!53505 () List!1538)

(assert (=> b!82010 (= e!53505 call!7644)))

(declare-fun b!82011 () Bool)

(declare-fun e!53503 () List!1538)

(declare-fun call!7646 () List!1538)

(assert (=> b!82011 (= e!53503 call!7646)))

(declare-fun b!82012 () Bool)

(assert (=> b!82012 (= c!13015 (and ((_ is Cons!1534) (toList!751 lt!37325)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37325))) (_1!1111 (tuple2!2203 lt!37321 lt!37324)))))))

(assert (=> b!82012 (= e!53505 e!53503)))

(declare-fun b!82013 () Bool)

(assert (=> b!82013 (= e!53503 call!7646)))

(declare-fun bm!7643 () Bool)

(assert (=> bm!7643 (= call!7646 call!7644)))

(declare-fun b!82014 () Bool)

(assert (=> b!82014 (= e!53501 e!53505)))

(assert (=> b!82014 (= c!13013 (and ((_ is Cons!1534) (toList!751 lt!37325)) (= (_1!1111 (h!2123 (toList!751 lt!37325))) (_1!1111 (tuple2!2203 lt!37321 lt!37324)))))))

(assert (= (and d!20523 c!13016) b!82008))

(assert (= (and d!20523 (not c!13016)) b!82014))

(assert (= (and b!82014 c!13013) b!82010))

(assert (= (and b!82014 (not c!13013)) b!82012))

(assert (= (and b!82012 c!13015) b!82011))

(assert (= (and b!82012 (not c!13015)) b!82013))

(assert (= (or b!82011 b!82013) bm!7643))

(assert (= (or b!82010 bm!7643) bm!7641))

(assert (= (or b!82008 bm!7641) bm!7642))

(assert (= (and bm!7642 c!13014) b!82007))

(assert (= (and bm!7642 (not c!13014)) b!82009))

(assert (= (and d!20523 res!42560) b!82006))

(assert (= (and b!82006 res!42561) b!82005))

(declare-fun m!84459 () Bool)

(assert (=> b!82006 m!84459))

(declare-fun m!84461 () Bool)

(assert (=> bm!7642 m!84461))

(declare-fun m!84463 () Bool)

(assert (=> d!20523 m!84463))

(declare-fun m!84465 () Bool)

(assert (=> d!20523 m!84465))

(declare-fun m!84467 () Bool)

(assert (=> b!82007 m!84467))

(declare-fun m!84469 () Bool)

(assert (=> b!82005 m!84469))

(assert (=> d!19819 d!20523))

(declare-fun d!20525 () Bool)

(declare-fun res!42562 () Bool)

(declare-fun e!53506 () Bool)

(assert (=> d!20525 (=> res!42562 e!53506)))

(assert (=> d!20525 (= res!42562 (and ((_ is Cons!1534) (toList!751 lt!37298)) (= (_1!1111 (h!2123 (toList!751 lt!37298))) (_1!1111 lt!37188))))))

(assert (=> d!20525 (= (containsKey!141 (toList!751 lt!37298) (_1!1111 lt!37188)) e!53506)))

(declare-fun b!82015 () Bool)

(declare-fun e!53507 () Bool)

(assert (=> b!82015 (= e!53506 e!53507)))

(declare-fun res!42563 () Bool)

(assert (=> b!82015 (=> (not res!42563) (not e!53507))))

(assert (=> b!82015 (= res!42563 (and (or (not ((_ is Cons!1534) (toList!751 lt!37298))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37298))) (_1!1111 lt!37188))) ((_ is Cons!1534) (toList!751 lt!37298)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37298))) (_1!1111 lt!37188))))))

(declare-fun b!82016 () Bool)

(assert (=> b!82016 (= e!53507 (containsKey!141 (t!5209 (toList!751 lt!37298)) (_1!1111 lt!37188)))))

(assert (= (and d!20525 (not res!42562)) b!82015))

(assert (= (and b!82015 res!42563) b!82016))

(declare-fun m!84471 () Bool)

(assert (=> b!82016 m!84471))

(assert (=> d!19717 d!20525))

(declare-fun b!82017 () Bool)

(declare-fun e!53511 () Bool)

(declare-fun call!7647 () Bool)

(assert (=> b!82017 (= e!53511 call!7647)))

(declare-fun b!82018 () Bool)

(declare-fun e!53510 () Bool)

(assert (=> b!82018 (= e!53510 (contains!752 (ite c!12764 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!82019 () Bool)

(assert (=> b!82019 (= e!53511 call!7647)))

(declare-fun d!20527 () Bool)

(declare-fun res!42564 () Bool)

(declare-fun e!53508 () Bool)

(assert (=> d!20527 (=> res!42564 e!53508)))

(assert (=> d!20527 (= res!42564 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> d!20527 (= (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12764 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536))) e!53508)))

(declare-fun b!82020 () Bool)

(declare-fun e!53509 () Bool)

(assert (=> b!82020 (= e!53508 e!53509)))

(declare-fun res!42565 () Bool)

(assert (=> b!82020 (=> (not res!42565) (not e!53509))))

(assert (=> b!82020 (= res!42565 (not e!53510))))

(declare-fun res!42566 () Bool)

(assert (=> b!82020 (=> (not res!42566) (not e!53510))))

(assert (=> b!82020 (= res!42566 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!82021 () Bool)

(assert (=> b!82021 (= e!53509 e!53511)))

(declare-fun c!13017 () Bool)

(assert (=> b!82021 (= c!13017 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!7644 () Bool)

(assert (=> bm!7644 (= call!7647 (arrayNoDuplicates!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13017 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!12764 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536))) (ite c!12764 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)) (ite c!12551 (Cons!1535 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) Nil!1536) Nil!1536)))))))

(assert (= (and d!20527 (not res!42564)) b!82020))

(assert (= (and b!82020 res!42566) b!82018))

(assert (= (and b!82020 res!42565) b!82021))

(assert (= (and b!82021 c!13017) b!82017))

(assert (= (and b!82021 (not c!13017)) b!82019))

(assert (= (or b!82017 b!82019) bm!7644))

(declare-fun m!84473 () Bool)

(assert (=> b!82018 m!84473))

(assert (=> b!82018 m!84473))

(declare-fun m!84475 () Bool)

(assert (=> b!82018 m!84475))

(assert (=> b!82020 m!84473))

(assert (=> b!82020 m!84473))

(declare-fun m!84477 () Bool)

(assert (=> b!82020 m!84477))

(assert (=> b!82021 m!84473))

(assert (=> b!82021 m!84473))

(assert (=> b!82021 m!84477))

(assert (=> bm!7644 m!84473))

(declare-fun m!84479 () Bool)

(assert (=> bm!7644 m!84479))

(assert (=> bm!7565 d!20527))

(declare-fun d!20529 () Bool)

(declare-fun res!42567 () Bool)

(declare-fun e!53512 () Bool)

(assert (=> d!20529 (=> res!42567 e!53512)))

(assert (=> d!20529 (= res!42567 (or ((_ is Nil!1535) lt!37530) ((_ is Nil!1535) (t!5209 lt!37530))))))

(assert (=> d!20529 (= (isStrictlySorted!291 lt!37530) e!53512)))

(declare-fun b!82022 () Bool)

(declare-fun e!53513 () Bool)

(assert (=> b!82022 (= e!53512 e!53513)))

(declare-fun res!42568 () Bool)

(assert (=> b!82022 (=> (not res!42568) (not e!53513))))

(assert (=> b!82022 (= res!42568 (bvslt (_1!1111 (h!2123 lt!37530)) (_1!1111 (h!2123 (t!5209 lt!37530)))))))

(declare-fun b!82023 () Bool)

(assert (=> b!82023 (= e!53513 (isStrictlySorted!291 (t!5209 lt!37530)))))

(assert (= (and d!20529 (not res!42567)) b!82022))

(assert (= (and b!82022 res!42568) b!82023))

(declare-fun m!84481 () Bool)

(assert (=> b!82023 m!84481))

(assert (=> d!19715 d!20529))

(declare-fun d!20531 () Bool)

(declare-fun res!42569 () Bool)

(declare-fun e!53514 () Bool)

(assert (=> d!20531 (=> res!42569 e!53514)))

(assert (=> d!20531 (= res!42569 (or ((_ is Nil!1535) (toList!751 lt!37187)) ((_ is Nil!1535) (t!5209 (toList!751 lt!37187)))))))

(assert (=> d!20531 (= (isStrictlySorted!291 (toList!751 lt!37187)) e!53514)))

(declare-fun b!82024 () Bool)

(declare-fun e!53515 () Bool)

(assert (=> b!82024 (= e!53514 e!53515)))

(declare-fun res!42570 () Bool)

(assert (=> b!82024 (=> (not res!42570) (not e!53515))))

(assert (=> b!82024 (= res!42570 (bvslt (_1!1111 (h!2123 (toList!751 lt!37187))) (_1!1111 (h!2123 (t!5209 (toList!751 lt!37187))))))))

(declare-fun b!82025 () Bool)

(assert (=> b!82025 (= e!53515 (isStrictlySorted!291 (t!5209 (toList!751 lt!37187))))))

(assert (= (and d!20531 (not res!42569)) b!82024))

(assert (= (and b!82024 res!42570) b!82025))

(declare-fun m!84483 () Bool)

(assert (=> b!82025 m!84483))

(assert (=> d!19715 d!20531))

(declare-fun d!20533 () Bool)

(declare-fun res!42571 () Bool)

(declare-fun e!53516 () Bool)

(assert (=> d!20533 (=> res!42571 e!53516)))

(assert (=> d!20533 (= res!42571 (and ((_ is Cons!1534) lt!37299) (= (_1!1111 (h!2123 lt!37299)) (_1!1111 lt!37197))))))

(assert (=> d!20533 (= (containsKey!141 lt!37299 (_1!1111 lt!37197)) e!53516)))

(declare-fun b!82026 () Bool)

(declare-fun e!53517 () Bool)

(assert (=> b!82026 (= e!53516 e!53517)))

(declare-fun res!42572 () Bool)

(assert (=> b!82026 (=> (not res!42572) (not e!53517))))

(assert (=> b!82026 (= res!42572 (and (or (not ((_ is Cons!1534) lt!37299)) (bvsle (_1!1111 (h!2123 lt!37299)) (_1!1111 lt!37197))) ((_ is Cons!1534) lt!37299) (bvslt (_1!1111 (h!2123 lt!37299)) (_1!1111 lt!37197))))))

(declare-fun b!82027 () Bool)

(assert (=> b!82027 (= e!53517 (containsKey!141 (t!5209 lt!37299) (_1!1111 lt!37197)))))

(assert (= (and d!20533 (not res!42571)) b!82026))

(assert (= (and b!82026 res!42572) b!82027))

(declare-fun m!84485 () Bool)

(assert (=> b!82027 m!84485))

(assert (=> b!81017 d!20533))

(assert (=> b!80927 d!19937))

(declare-fun d!20535 () Bool)

(declare-fun res!42573 () Bool)

(declare-fun e!53518 () Bool)

(assert (=> d!20535 (=> res!42573 e!53518)))

(assert (=> d!20535 (= res!42573 (= (select (arr!1900 lt!37861) #b00000000000000000000000000000000) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!20535 (= (arrayContainsKey!0 lt!37861 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000) e!53518)))

(declare-fun b!82028 () Bool)

(declare-fun e!53519 () Bool)

(assert (=> b!82028 (= e!53518 e!53519)))

(declare-fun res!42574 () Bool)

(assert (=> b!82028 (=> (not res!42574) (not e!53519))))

(assert (=> b!82028 (= res!42574 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 lt!37861)))))

(declare-fun b!82029 () Bool)

(assert (=> b!82029 (= e!53519 (arrayContainsKey!0 lt!37861 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!20535 (not res!42573)) b!82028))

(assert (= (and b!82028 res!42574) b!82029))

(declare-fun m!84487 () Bool)

(assert (=> d!20535 m!84487))

(assert (=> b!82029 m!81585))

(declare-fun m!84489 () Bool)

(assert (=> b!82029 m!84489))

(assert (=> d!19893 d!20535))

(declare-fun d!20537 () Bool)

(declare-fun e!53522 () Bool)

(assert (=> d!20537 e!53522))

(declare-fun res!42577 () Bool)

(assert (=> d!20537 (=> (not res!42577) (not e!53522))))

(assert (=> d!20537 (= res!42577 (and (bvsge (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000000) (bvslt (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (size!2142 (_keys!3957 newMap!16))) (bvslt (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (size!2143 (_values!2276 newMap!16)))))))

(declare-fun lt!38260 () Unit!2350)

(declare-fun choose!490 (array!3988 array!3990 (_ BitVec 32) (_ BitVec 32) V!3003 V!3003 (_ BitVec 32) (_ BitVec 64) V!3003 Int) Unit!2350)

(assert (=> d!20537 (= lt!38260 (choose!490 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 (defaultEntry!2293 newMap!16)))))

(assert (=> d!20537 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20537 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!17 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 (defaultEntry!2293 newMap!16)) lt!38260)))

(declare-fun b!82032 () Bool)

(assert (=> b!82032 (= e!53522 (= (+!111 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (getCurrentListMap!437 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))))))

(assert (= (and d!20537 res!42577) b!82032))

(assert (=> d!20537 m!81585))

(declare-fun m!84491 () Bool)

(assert (=> d!20537 m!84491))

(assert (=> d!20537 m!82043))

(assert (=> b!82032 m!81869))

(assert (=> b!82032 m!82525))

(assert (=> b!82032 m!82829))

(assert (=> b!82032 m!82805))

(assert (=> b!82032 m!82835))

(assert (=> b!82032 m!81869))

(assert (=> d!19893 d!20537))

(declare-fun b!82033 () Bool)

(declare-fun e!53526 () Bool)

(declare-fun call!7648 () Bool)

(assert (=> b!82033 (= e!53526 call!7648)))

(declare-fun e!53525 () Bool)

(declare-fun b!82034 () Bool)

(assert (=> b!82034 (= e!53525 (contains!752 lt!37849 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) lt!37858)))))

(declare-fun b!82035 () Bool)

(assert (=> b!82035 (= e!53526 call!7648)))

(declare-fun d!20539 () Bool)

(declare-fun res!42578 () Bool)

(declare-fun e!53523 () Bool)

(assert (=> d!20539 (=> res!42578 e!53523)))

(assert (=> d!20539 (= res!42578 (bvsge lt!37858 (size!2142 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))))))

(assert (=> d!20539 (= (arrayNoDuplicates!0 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) lt!37858 lt!37849) e!53523)))

(declare-fun b!82036 () Bool)

(declare-fun e!53524 () Bool)

(assert (=> b!82036 (= e!53523 e!53524)))

(declare-fun res!42579 () Bool)

(assert (=> b!82036 (=> (not res!42579) (not e!53524))))

(assert (=> b!82036 (= res!42579 (not e!53525))))

(declare-fun res!42580 () Bool)

(assert (=> b!82036 (=> (not res!42580) (not e!53525))))

(assert (=> b!82036 (= res!42580 (validKeyInArray!0 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) lt!37858)))))

(declare-fun b!82037 () Bool)

(assert (=> b!82037 (= e!53524 e!53526)))

(declare-fun c!13018 () Bool)

(assert (=> b!82037 (= c!13018 (validKeyInArray!0 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) lt!37858)))))

(declare-fun bm!7645 () Bool)

(assert (=> bm!7645 (= call!7648 (arrayNoDuplicates!0 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (bvadd lt!37858 #b00000000000000000000000000000001) (ite c!13018 (Cons!1535 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) lt!37858) lt!37849) lt!37849)))))

(assert (= (and d!20539 (not res!42578)) b!82036))

(assert (= (and b!82036 res!42580) b!82034))

(assert (= (and b!82036 res!42579) b!82037))

(assert (= (and b!82037 c!13018) b!82033))

(assert (= (and b!82037 (not c!13018)) b!82035))

(assert (= (or b!82033 b!82035) bm!7645))

(declare-fun m!84493 () Bool)

(assert (=> b!82034 m!84493))

(assert (=> b!82034 m!84493))

(declare-fun m!84495 () Bool)

(assert (=> b!82034 m!84495))

(assert (=> b!82036 m!84493))

(assert (=> b!82036 m!84493))

(declare-fun m!84497 () Bool)

(assert (=> b!82036 m!84497))

(assert (=> b!82037 m!84493))

(assert (=> b!82037 m!84493))

(assert (=> b!82037 m!84497))

(assert (=> bm!7645 m!84493))

(declare-fun m!84499 () Bool)

(assert (=> bm!7645 m!84499))

(assert (=> d!19893 d!20539))

(declare-fun b!82046 () Bool)

(declare-fun res!42591 () Bool)

(declare-fun e!53531 () Bool)

(assert (=> b!82046 (=> (not res!42591) (not e!53531))))

(assert (=> b!82046 (= res!42591 (not (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470))))))))

(declare-fun b!82048 () Bool)

(assert (=> b!82048 (= e!53531 (bvslt (size!2142 (_keys!3957 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!20541 () Bool)

(declare-fun e!53532 () Bool)

(assert (=> d!20541 e!53532))

(declare-fun res!42589 () Bool)

(assert (=> d!20541 (=> (not res!42589) (not e!53532))))

(assert (=> d!20541 (= res!42589 (and (bvsge (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000000) (bvslt (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (size!2142 (_keys!3957 newMap!16)))))))

(declare-fun lt!38263 () Unit!2350)

(declare-fun choose!1 (array!3988 (_ BitVec 32) (_ BitVec 64)) Unit!2350)

(assert (=> d!20541 (= lt!38263 (choose!1 (_keys!3957 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!20541 e!53531))

(declare-fun res!42590 () Bool)

(assert (=> d!20541 (=> (not res!42590) (not e!53531))))

(assert (=> d!20541 (= res!42590 (and (bvsge (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000000) (bvslt (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (size!2142 (_keys!3957 newMap!16)))))))

(assert (=> d!20541 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3957 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) lt!38263)))

(declare-fun b!82049 () Bool)

(assert (=> b!82049 (= e!53532 (= (arrayCountValidKeys!0 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3957 newMap!16) #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!82047 () Bool)

(declare-fun res!42592 () Bool)

(assert (=> b!82047 (=> (not res!42592) (not e!53531))))

(assert (=> b!82047 (= res!42592 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (= (and d!20541 res!42590) b!82046))

(assert (= (and b!82046 res!42591) b!82047))

(assert (= (and b!82047 res!42592) b!82048))

(assert (= (and d!20541 res!42589) b!82049))

(declare-fun m!84501 () Bool)

(assert (=> b!82046 m!84501))

(assert (=> b!82046 m!84501))

(declare-fun m!84503 () Bool)

(assert (=> b!82046 m!84503))

(assert (=> d!20541 m!81585))

(declare-fun m!84505 () Bool)

(assert (=> d!20541 m!84505))

(assert (=> b!82049 m!82805))

(assert (=> b!82049 m!82827))

(assert (=> b!82049 m!81711))

(assert (=> b!82047 m!81585))

(assert (=> b!82047 m!81735))

(assert (=> d!19893 d!20541))

(declare-fun d!20543 () Bool)

(declare-fun e!53535 () Bool)

(assert (=> d!20543 e!53535))

(declare-fun res!42595 () Bool)

(assert (=> d!20543 (=> (not res!42595) (not e!53535))))

(assert (=> d!20543 (= res!42595 (and (bvsge (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000000) (bvslt (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (size!2142 (_keys!3957 newMap!16)))))))

(declare-fun lt!38266 () Unit!2350)

(declare-fun choose!41 (array!3988 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1539) Unit!2350)

(assert (=> d!20543 (= lt!38266 (choose!41 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) lt!37858 lt!37849))))

(assert (=> d!20543 (bvslt (size!2142 (_keys!3957 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!20543 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) lt!37858 lt!37849) lt!38266)))

(declare-fun b!82052 () Bool)

(assert (=> b!82052 (= e!53535 (arrayNoDuplicates!0 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) lt!37858 lt!37849))))

(assert (= (and d!20543 res!42595) b!82052))

(assert (=> d!20543 m!81585))

(declare-fun m!84507 () Bool)

(assert (=> d!20543 m!84507))

(assert (=> b!82052 m!82805))

(assert (=> b!82052 m!82811))

(assert (=> d!19893 d!20543))

(declare-fun b!82053 () Bool)

(declare-fun e!53545 () ListLongMap!1471)

(declare-fun call!7651 () ListLongMap!1471)

(assert (=> b!82053 (= e!53545 (+!111 call!7651 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!82054 () Bool)

(declare-fun e!53547 () Bool)

(declare-fun lt!38280 () ListLongMap!1471)

(assert (=> b!82054 (= e!53547 (= (apply!80 lt!38280 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!82055 () Bool)

(declare-fun e!53544 () ListLongMap!1471)

(assert (=> b!82055 (= e!53545 e!53544)))

(declare-fun c!13022 () Bool)

(assert (=> b!82055 (= c!13022 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7646 () Bool)

(declare-fun call!7654 () ListLongMap!1471)

(assert (=> bm!7646 (= call!7654 call!7651)))

(declare-fun b!82056 () Bool)

(declare-fun e!53536 () Bool)

(declare-fun e!53539 () Bool)

(assert (=> b!82056 (= e!53536 e!53539)))

(declare-fun res!42596 () Bool)

(assert (=> b!82056 (=> (not res!42596) (not e!53539))))

(assert (=> b!82056 (= res!42596 (contains!750 lt!38280 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!82056 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))))))

(declare-fun d!20545 () Bool)

(declare-fun e!53548 () Bool)

(assert (=> d!20545 e!53548))

(declare-fun res!42600 () Bool)

(assert (=> d!20545 (=> (not res!42600) (not e!53548))))

(assert (=> d!20545 (= res!42600 (or (bvsge #b00000000000000000000000000000000 (size!2142 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))))))))

(declare-fun lt!38278 () ListLongMap!1471)

(assert (=> d!20545 (= lt!38280 lt!38278)))

(declare-fun lt!38281 () Unit!2350)

(declare-fun e!53538 () Unit!2350)

(assert (=> d!20545 (= lt!38281 e!53538)))

(declare-fun c!13020 () Bool)

(declare-fun e!53537 () Bool)

(assert (=> d!20545 (= c!13020 e!53537)))

(declare-fun res!42602 () Bool)

(assert (=> d!20545 (=> (not res!42602) (not e!53537))))

(assert (=> d!20545 (= res!42602 (bvslt #b00000000000000000000000000000000 (size!2142 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))))))

(assert (=> d!20545 (= lt!38278 e!53545)))

(declare-fun c!13021 () Bool)

(assert (=> d!20545 (= c!13021 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20545 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20545 (= (getCurrentListMap!437 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38280)))

(declare-fun bm!7647 () Bool)

(declare-fun call!7650 () Bool)

(assert (=> bm!7647 (= call!7650 (contains!750 lt!38280 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82057 () Bool)

(declare-fun e!53542 () Bool)

(assert (=> b!82057 (= e!53542 (not call!7650))))

(declare-fun b!82058 () Bool)

(assert (=> b!82058 (= e!53544 call!7654)))

(declare-fun b!82059 () Bool)

(assert (=> b!82059 (= e!53548 e!53542)))

(declare-fun c!13024 () Bool)

(assert (=> b!82059 (= c!13024 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!82060 () Bool)

(declare-fun e!53540 () Bool)

(declare-fun e!53546 () Bool)

(assert (=> b!82060 (= e!53540 e!53546)))

(declare-fun res!42599 () Bool)

(declare-fun call!7655 () Bool)

(assert (=> b!82060 (= res!42599 call!7655)))

(assert (=> b!82060 (=> (not res!42599) (not e!53546))))

(declare-fun b!82061 () Bool)

(declare-fun res!42601 () Bool)

(assert (=> b!82061 (=> (not res!42601) (not e!53548))))

(assert (=> b!82061 (= res!42601 e!53540)))

(declare-fun c!13023 () Bool)

(assert (=> b!82061 (= c!13023 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!82062 () Bool)

(declare-fun e!53541 () Bool)

(assert (=> b!82062 (= e!53541 (validKeyInArray!0 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7648 () Bool)

(declare-fun call!7649 () ListLongMap!1471)

(declare-fun call!7653 () ListLongMap!1471)

(assert (=> bm!7648 (= call!7649 call!7653)))

(declare-fun bm!7649 () Bool)

(declare-fun call!7652 () ListLongMap!1471)

(assert (=> bm!7649 (= call!7653 call!7652)))

(declare-fun b!82063 () Bool)

(declare-fun lt!38282 () Unit!2350)

(assert (=> b!82063 (= e!53538 lt!38282)))

(declare-fun lt!38279 () ListLongMap!1471)

(assert (=> b!82063 (= lt!38279 (getCurrentListMapNoExtraKeys!75 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38267 () (_ BitVec 64))

(assert (=> b!82063 (= lt!38267 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38287 () (_ BitVec 64))

(assert (=> b!82063 (= lt!38287 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38268 () Unit!2350)

(assert (=> b!82063 (= lt!38268 (addStillContains!56 lt!38279 lt!38267 (zeroValue!2189 newMap!16) lt!38287))))

(assert (=> b!82063 (contains!750 (+!111 lt!38279 (tuple2!2203 lt!38267 (zeroValue!2189 newMap!16))) lt!38287)))

(declare-fun lt!38285 () Unit!2350)

(assert (=> b!82063 (= lt!38285 lt!38268)))

(declare-fun lt!38274 () ListLongMap!1471)

(assert (=> b!82063 (= lt!38274 (getCurrentListMapNoExtraKeys!75 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38283 () (_ BitVec 64))

(assert (=> b!82063 (= lt!38283 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38270 () (_ BitVec 64))

(assert (=> b!82063 (= lt!38270 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38288 () Unit!2350)

(assert (=> b!82063 (= lt!38288 (addApplyDifferent!56 lt!38274 lt!38283 (minValue!2189 newMap!16) lt!38270))))

(assert (=> b!82063 (= (apply!80 (+!111 lt!38274 (tuple2!2203 lt!38283 (minValue!2189 newMap!16))) lt!38270) (apply!80 lt!38274 lt!38270))))

(declare-fun lt!38271 () Unit!2350)

(assert (=> b!82063 (= lt!38271 lt!38288)))

(declare-fun lt!38277 () ListLongMap!1471)

(assert (=> b!82063 (= lt!38277 (getCurrentListMapNoExtraKeys!75 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38273 () (_ BitVec 64))

(assert (=> b!82063 (= lt!38273 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38275 () (_ BitVec 64))

(assert (=> b!82063 (= lt!38275 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38286 () Unit!2350)

(assert (=> b!82063 (= lt!38286 (addApplyDifferent!56 lt!38277 lt!38273 (zeroValue!2189 newMap!16) lt!38275))))

(assert (=> b!82063 (= (apply!80 (+!111 lt!38277 (tuple2!2203 lt!38273 (zeroValue!2189 newMap!16))) lt!38275) (apply!80 lt!38277 lt!38275))))

(declare-fun lt!38272 () Unit!2350)

(assert (=> b!82063 (= lt!38272 lt!38286)))

(declare-fun lt!38276 () ListLongMap!1471)

(assert (=> b!82063 (= lt!38276 (getCurrentListMapNoExtraKeys!75 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38284 () (_ BitVec 64))

(assert (=> b!82063 (= lt!38284 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38269 () (_ BitVec 64))

(assert (=> b!82063 (= lt!38269 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!82063 (= lt!38282 (addApplyDifferent!56 lt!38276 lt!38284 (minValue!2189 newMap!16) lt!38269))))

(assert (=> b!82063 (= (apply!80 (+!111 lt!38276 (tuple2!2203 lt!38284 (minValue!2189 newMap!16))) lt!38269) (apply!80 lt!38276 lt!38269))))

(declare-fun b!82064 () Bool)

(declare-fun Unit!2415 () Unit!2350)

(assert (=> b!82064 (= e!53538 Unit!2415)))

(declare-fun b!82065 () Bool)

(assert (=> b!82065 (= e!53542 e!53547)))

(declare-fun res!42597 () Bool)

(assert (=> b!82065 (= res!42597 call!7650)))

(assert (=> b!82065 (=> (not res!42597) (not e!53547))))

(declare-fun b!82066 () Bool)

(declare-fun c!13019 () Bool)

(assert (=> b!82066 (= c!13019 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53543 () ListLongMap!1471)

(assert (=> b!82066 (= e!53544 e!53543)))

(declare-fun b!82067 () Bool)

(assert (=> b!82067 (= e!53537 (validKeyInArray!0 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!82068 () Bool)

(assert (=> b!82068 (= e!53543 call!7649)))

(declare-fun bm!7650 () Bool)

(assert (=> bm!7650 (= call!7655 (contains!750 lt!38280 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82069 () Bool)

(assert (=> b!82069 (= e!53540 (not call!7655))))

(declare-fun b!82070 () Bool)

(assert (=> b!82070 (= e!53546 (= (apply!80 lt!38280 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun bm!7651 () Bool)

(assert (=> bm!7651 (= call!7652 (getCurrentListMapNoExtraKeys!75 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!82071 () Bool)

(assert (=> b!82071 (= e!53539 (= (apply!80 lt!38280 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82071 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))))))))

(assert (=> b!82071 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))))))

(declare-fun b!82072 () Bool)

(assert (=> b!82072 (= e!53543 call!7654)))

(declare-fun bm!7652 () Bool)

(assert (=> bm!7652 (= call!7651 (+!111 (ite c!13021 call!7652 (ite c!13022 call!7653 call!7649)) (ite (or c!13021 c!13022) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!82073 () Bool)

(declare-fun res!42603 () Bool)

(assert (=> b!82073 (=> (not res!42603) (not e!53548))))

(assert (=> b!82073 (= res!42603 e!53536)))

(declare-fun res!42598 () Bool)

(assert (=> b!82073 (=> res!42598 e!53536)))

(assert (=> b!82073 (= res!42598 (not e!53541))))

(declare-fun res!42604 () Bool)

(assert (=> b!82073 (=> (not res!42604) (not e!53541))))

(assert (=> b!82073 (= res!42604 (bvslt #b00000000000000000000000000000000 (size!2142 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))))))

(assert (= (and d!20545 c!13021) b!82053))

(assert (= (and d!20545 (not c!13021)) b!82055))

(assert (= (and b!82055 c!13022) b!82058))

(assert (= (and b!82055 (not c!13022)) b!82066))

(assert (= (and b!82066 c!13019) b!82072))

(assert (= (and b!82066 (not c!13019)) b!82068))

(assert (= (or b!82072 b!82068) bm!7648))

(assert (= (or b!82058 bm!7648) bm!7649))

(assert (= (or b!82058 b!82072) bm!7646))

(assert (= (or b!82053 bm!7649) bm!7651))

(assert (= (or b!82053 bm!7646) bm!7652))

(assert (= (and d!20545 res!42602) b!82067))

(assert (= (and d!20545 c!13020) b!82063))

(assert (= (and d!20545 (not c!13020)) b!82064))

(assert (= (and d!20545 res!42600) b!82073))

(assert (= (and b!82073 res!42604) b!82062))

(assert (= (and b!82073 (not res!42598)) b!82056))

(assert (= (and b!82056 res!42596) b!82071))

(assert (= (and b!82073 res!42603) b!82061))

(assert (= (and b!82061 c!13023) b!82060))

(assert (= (and b!82061 (not c!13023)) b!82069))

(assert (= (and b!82060 res!42599) b!82070))

(assert (= (or b!82060 b!82069) bm!7650))

(assert (= (and b!82061 res!42601) b!82059))

(assert (= (and b!82059 c!13024) b!82065))

(assert (= (and b!82059 (not c!13024)) b!82057))

(assert (= (and b!82065 res!42597) b!82054))

(assert (= (or b!82065 b!82057) bm!7647))

(declare-fun b_lambda!3653 () Bool)

(assert (=> (not b_lambda!3653) (not b!82071)))

(assert (=> b!82071 t!5218))

(declare-fun b_and!4993 () Bool)

(assert (= b_and!4989 (and (=> t!5218 result!2857) b_and!4993)))

(assert (=> b!82071 t!5220))

(declare-fun b_and!4995 () Bool)

(assert (= b_and!4991 (and (=> t!5220 result!2859) b_and!4995)))

(declare-fun m!84509 () Bool)

(assert (=> bm!7651 m!84509))

(declare-fun m!84511 () Bool)

(assert (=> bm!7647 m!84511))

(declare-fun m!84513 () Bool)

(assert (=> b!82071 m!84513))

(assert (=> b!82071 m!84513))

(declare-fun m!84515 () Bool)

(assert (=> b!82071 m!84515))

(declare-fun m!84517 () Bool)

(assert (=> b!82071 m!84517))

(assert (=> b!82071 m!82031))

(assert (=> b!82071 m!84517))

(assert (=> b!82071 m!82031))

(declare-fun m!84519 () Bool)

(assert (=> b!82071 m!84519))

(assert (=> b!82062 m!84513))

(assert (=> b!82062 m!84513))

(declare-fun m!84521 () Bool)

(assert (=> b!82062 m!84521))

(declare-fun m!84523 () Bool)

(assert (=> b!82053 m!84523))

(assert (=> b!82056 m!84513))

(assert (=> b!82056 m!84513))

(declare-fun m!84525 () Bool)

(assert (=> b!82056 m!84525))

(declare-fun m!84527 () Bool)

(assert (=> bm!7652 m!84527))

(assert (=> d!20545 m!82043))

(declare-fun m!84529 () Bool)

(assert (=> bm!7650 m!84529))

(declare-fun m!84531 () Bool)

(assert (=> b!82063 m!84531))

(declare-fun m!84533 () Bool)

(assert (=> b!82063 m!84533))

(declare-fun m!84535 () Bool)

(assert (=> b!82063 m!84535))

(assert (=> b!82063 m!84513))

(declare-fun m!84537 () Bool)

(assert (=> b!82063 m!84537))

(declare-fun m!84539 () Bool)

(assert (=> b!82063 m!84539))

(declare-fun m!84541 () Bool)

(assert (=> b!82063 m!84541))

(declare-fun m!84543 () Bool)

(assert (=> b!82063 m!84543))

(declare-fun m!84545 () Bool)

(assert (=> b!82063 m!84545))

(assert (=> b!82063 m!84533))

(assert (=> b!82063 m!84509))

(declare-fun m!84547 () Bool)

(assert (=> b!82063 m!84547))

(declare-fun m!84549 () Bool)

(assert (=> b!82063 m!84549))

(declare-fun m!84551 () Bool)

(assert (=> b!82063 m!84551))

(declare-fun m!84553 () Bool)

(assert (=> b!82063 m!84553))

(assert (=> b!82063 m!84541))

(declare-fun m!84555 () Bool)

(assert (=> b!82063 m!84555))

(declare-fun m!84557 () Bool)

(assert (=> b!82063 m!84557))

(assert (=> b!82063 m!84537))

(declare-fun m!84559 () Bool)

(assert (=> b!82063 m!84559))

(assert (=> b!82063 m!84547))

(declare-fun m!84561 () Bool)

(assert (=> b!82070 m!84561))

(declare-fun m!84563 () Bool)

(assert (=> b!82054 m!84563))

(assert (=> b!82067 m!84513))

(assert (=> b!82067 m!84513))

(assert (=> b!82067 m!84521))

(assert (=> d!19893 d!20545))

(assert (=> d!19893 d!20359))

(assert (=> d!19893 d!19699))

(assert (=> d!19893 d!19631))

(declare-fun d!20547 () Bool)

(declare-fun e!53549 () Bool)

(assert (=> d!20547 e!53549))

(declare-fun res!42605 () Bool)

(assert (=> d!20547 (=> (not res!42605) (not e!53549))))

(assert (=> d!20547 (= res!42605 (and (bvsge (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000000) (bvslt (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (size!2142 lt!37845))))))

(declare-fun lt!38289 () Unit!2350)

(assert (=> d!20547 (= lt!38289 (choose!482 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (defaultEntry!2293 newMap!16)))))

(assert (=> d!20547 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20547 (= (lemmaValidKeyInArrayIsInListMap!87 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (defaultEntry!2293 newMap!16)) lt!38289)))

(declare-fun b!82074 () Bool)

(assert (=> b!82074 (= e!53549 (contains!750 (getCurrentListMap!437 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1900 lt!37845) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)))))))

(assert (= (and d!20547 res!42605) b!82074))

(declare-fun m!84565 () Bool)

(assert (=> d!20547 m!84565))

(assert (=> d!20547 m!82043))

(assert (=> b!82074 m!82823))

(declare-fun m!84567 () Bool)

(assert (=> b!82074 m!84567))

(assert (=> b!82074 m!82823))

(assert (=> b!82074 m!84567))

(declare-fun m!84569 () Bool)

(assert (=> b!82074 m!84569))

(assert (=> d!19893 d!20547))

(assert (=> d!19893 d!19867))

(declare-fun d!20549 () Bool)

(declare-fun e!53550 () Bool)

(assert (=> d!20549 e!53550))

(declare-fun res!42606 () Bool)

(assert (=> d!20549 (=> (not res!42606) (not e!53550))))

(declare-fun lt!38293 () ListLongMap!1471)

(assert (=> d!20549 (= res!42606 (contains!750 lt!38293 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!38290 () List!1538)

(assert (=> d!20549 (= lt!38293 (ListLongMap!1472 lt!38290))))

(declare-fun lt!38291 () Unit!2350)

(declare-fun lt!38292 () Unit!2350)

(assert (=> d!20549 (= lt!38291 lt!38292)))

(assert (=> d!20549 (= (getValueByKey!137 lt!38290 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20549 (= lt!38292 (lemmaContainsTupThenGetReturnValue!56 lt!38290 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20549 (= lt!38290 (insertStrictlySorted!58 (toList!751 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20549 (= (+!111 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!38293)))

(declare-fun b!82075 () Bool)

(declare-fun res!42607 () Bool)

(assert (=> b!82075 (=> (not res!42607) (not e!53550))))

(assert (=> b!82075 (= res!42607 (= (getValueByKey!137 (toList!751 lt!38293) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!82076 () Bool)

(assert (=> b!82076 (= e!53550 (contains!753 (toList!751 lt!38293) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!20549 res!42606) b!82075))

(assert (= (and b!82075 res!42607) b!82076))

(declare-fun m!84571 () Bool)

(assert (=> d!20549 m!84571))

(declare-fun m!84573 () Bool)

(assert (=> d!20549 m!84573))

(declare-fun m!84575 () Bool)

(assert (=> d!20549 m!84575))

(declare-fun m!84577 () Bool)

(assert (=> d!20549 m!84577))

(declare-fun m!84579 () Bool)

(assert (=> b!82075 m!84579))

(declare-fun m!84581 () Bool)

(assert (=> b!82076 m!84581))

(assert (=> d!19893 d!20549))

(declare-fun d!20551 () Bool)

(declare-fun e!53553 () Bool)

(assert (=> d!20551 e!53553))

(declare-fun res!42610 () Bool)

(assert (=> d!20551 (=> (not res!42610) (not e!53553))))

(assert (=> d!20551 (= res!42610 (and (bvsge (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000000) (bvslt (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (size!2142 (_keys!3957 newMap!16)))))))

(declare-fun lt!38296 () Unit!2350)

(declare-fun choose!102 ((_ BitVec 64) array!3988 (_ BitVec 32) (_ BitVec 32)) Unit!2350)

(assert (=> d!20551 (= lt!38296 (choose!102 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (mask!6299 newMap!16)))))

(assert (=> d!20551 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20551 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (mask!6299 newMap!16)) lt!38296)))

(declare-fun b!82079 () Bool)

(assert (=> b!82079 (= e!53553 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (mask!6299 newMap!16)))))

(assert (= (and d!20551 res!42610) b!82079))

(assert (=> d!20551 m!81585))

(declare-fun m!84583 () Bool)

(assert (=> d!20551 m!84583))

(assert (=> d!20551 m!82043))

(assert (=> b!82079 m!82805))

(assert (=> b!82079 m!82837))

(assert (=> d!19893 d!20551))

(declare-fun d!20553 () Bool)

(declare-fun e!53554 () Bool)

(assert (=> d!20553 e!53554))

(declare-fun res!42611 () Bool)

(assert (=> d!20553 (=> res!42611 e!53554)))

(declare-fun lt!38299 () Bool)

(assert (=> d!20553 (= res!42611 (not lt!38299))))

(declare-fun lt!38298 () Bool)

(assert (=> d!20553 (= lt!38299 lt!38298)))

(declare-fun lt!38297 () Unit!2350)

(declare-fun e!53555 () Unit!2350)

(assert (=> d!20553 (= lt!38297 e!53555)))

(declare-fun c!13025 () Bool)

(assert (=> d!20553 (= c!13025 lt!38298)))

(assert (=> d!20553 (= lt!38298 (containsKey!141 (toList!751 (getCurrentListMap!437 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)))))))

(assert (=> d!20553 (= (contains!750 (getCurrentListMap!437 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)))) lt!38299)))

(declare-fun b!82080 () Bool)

(declare-fun lt!38300 () Unit!2350)

(assert (=> b!82080 (= e!53555 lt!38300)))

(assert (=> b!82080 (= lt!38300 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 (getCurrentListMap!437 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)))))))

(assert (=> b!82080 (isDefined!91 (getValueByKey!137 (toList!751 (getCurrentListMap!437 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)))))))

(declare-fun b!82081 () Bool)

(declare-fun Unit!2416 () Unit!2350)

(assert (=> b!82081 (= e!53555 Unit!2416)))

(declare-fun b!82082 () Bool)

(assert (=> b!82082 (= e!53554 (isDefined!91 (getValueByKey!137 (toList!751 (getCurrentListMap!437 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (select (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470))))))))

(assert (= (and d!20553 c!13025) b!82080))

(assert (= (and d!20553 (not c!13025)) b!82081))

(assert (= (and d!20553 (not res!42611)) b!82082))

(assert (=> d!20553 m!82809))

(declare-fun m!84585 () Bool)

(assert (=> d!20553 m!84585))

(assert (=> b!82080 m!82809))

(declare-fun m!84587 () Bool)

(assert (=> b!82080 m!84587))

(assert (=> b!82080 m!82809))

(declare-fun m!84589 () Bool)

(assert (=> b!82080 m!84589))

(assert (=> b!82080 m!84589))

(declare-fun m!84591 () Bool)

(assert (=> b!82080 m!84591))

(assert (=> b!82082 m!82809))

(assert (=> b!82082 m!84589))

(assert (=> b!82082 m!84589))

(assert (=> b!82082 m!84591))

(assert (=> d!19893 d!20553))

(declare-fun d!20555 () Bool)

(assert (=> d!20555 (= (arrayCountValidKeys!0 lt!37850 (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (bvadd (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!38303 () Unit!2350)

(declare-fun choose!2 (array!3988 (_ BitVec 32)) Unit!2350)

(assert (=> d!20555 (= lt!38303 (choose!2 lt!37850 (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470))))))

(declare-fun e!53558 () Bool)

(assert (=> d!20555 e!53558))

(declare-fun res!42616 () Bool)

(assert (=> d!20555 (=> (not res!42616) (not e!53558))))

(assert (=> d!20555 (= res!42616 (and (bvsge (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000000) (bvslt (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (size!2142 lt!37850))))))

(assert (=> d!20555 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!37850 (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470))) lt!38303)))

(declare-fun b!82087 () Bool)

(declare-fun res!42617 () Bool)

(assert (=> b!82087 (=> (not res!42617) (not e!53558))))

(assert (=> b!82087 (= res!42617 (validKeyInArray!0 (select (arr!1900 lt!37850) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)))))))

(declare-fun b!82088 () Bool)

(assert (=> b!82088 (= e!53558 (bvslt (size!2142 lt!37850) #b01111111111111111111111111111111))))

(assert (= (and d!20555 res!42616) b!82087))

(assert (= (and b!82087 res!42617) b!82088))

(assert (=> d!20555 m!82831))

(declare-fun m!84593 () Bool)

(assert (=> d!20555 m!84593))

(declare-fun m!84595 () Bool)

(assert (=> b!82087 m!84595))

(assert (=> b!82087 m!84595))

(declare-fun m!84597 () Bool)

(assert (=> b!82087 m!84597))

(assert (=> d!19893 d!20555))

(declare-fun b!82089 () Bool)

(declare-fun e!53568 () ListLongMap!1471)

(declare-fun call!7658 () ListLongMap!1471)

(assert (=> b!82089 (= e!53568 (+!111 call!7658 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(declare-fun b!82090 () Bool)

(declare-fun e!53570 () Bool)

(declare-fun lt!38317 () ListLongMap!1471)

(assert (=> b!82090 (= e!53570 (= (apply!80 lt!38317 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2189 newMap!16)))))

(declare-fun b!82091 () Bool)

(declare-fun e!53567 () ListLongMap!1471)

(assert (=> b!82091 (= e!53568 e!53567)))

(declare-fun c!13029 () Bool)

(assert (=> b!82091 (= c!13029 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7653 () Bool)

(declare-fun call!7661 () ListLongMap!1471)

(assert (=> bm!7653 (= call!7661 call!7658)))

(declare-fun b!82092 () Bool)

(declare-fun e!53559 () Bool)

(declare-fun e!53562 () Bool)

(assert (=> b!82092 (= e!53559 e!53562)))

(declare-fun res!42618 () Bool)

(assert (=> b!82092 (=> (not res!42618) (not e!53562))))

(assert (=> b!82092 (= res!42618 (contains!750 lt!38317 (select (arr!1900 lt!37845) #b00000000000000000000000000000000)))))

(assert (=> b!82092 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 lt!37845)))))

(declare-fun d!20557 () Bool)

(declare-fun e!53571 () Bool)

(assert (=> d!20557 e!53571))

(declare-fun res!42622 () Bool)

(assert (=> d!20557 (=> (not res!42622) (not e!53571))))

(assert (=> d!20557 (= res!42622 (or (bvsge #b00000000000000000000000000000000 (size!2142 lt!37845)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 lt!37845)))))))

(declare-fun lt!38315 () ListLongMap!1471)

(assert (=> d!20557 (= lt!38317 lt!38315)))

(declare-fun lt!38318 () Unit!2350)

(declare-fun e!53561 () Unit!2350)

(assert (=> d!20557 (= lt!38318 e!53561)))

(declare-fun c!13027 () Bool)

(declare-fun e!53560 () Bool)

(assert (=> d!20557 (= c!13027 e!53560)))

(declare-fun res!42624 () Bool)

(assert (=> d!20557 (=> (not res!42624) (not e!53560))))

(assert (=> d!20557 (= res!42624 (bvslt #b00000000000000000000000000000000 (size!2142 lt!37845)))))

(assert (=> d!20557 (= lt!38315 e!53568)))

(declare-fun c!13028 () Bool)

(assert (=> d!20557 (= c!13028 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20557 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20557 (= (getCurrentListMap!437 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38317)))

(declare-fun bm!7654 () Bool)

(declare-fun call!7657 () Bool)

(assert (=> bm!7654 (= call!7657 (contains!750 lt!38317 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82093 () Bool)

(declare-fun e!53565 () Bool)

(assert (=> b!82093 (= e!53565 (not call!7657))))

(declare-fun b!82094 () Bool)

(assert (=> b!82094 (= e!53567 call!7661)))

(declare-fun b!82095 () Bool)

(assert (=> b!82095 (= e!53571 e!53565)))

(declare-fun c!13031 () Bool)

(assert (=> b!82095 (= c!13031 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!82096 () Bool)

(declare-fun e!53563 () Bool)

(declare-fun e!53569 () Bool)

(assert (=> b!82096 (= e!53563 e!53569)))

(declare-fun res!42621 () Bool)

(declare-fun call!7662 () Bool)

(assert (=> b!82096 (= res!42621 call!7662)))

(assert (=> b!82096 (=> (not res!42621) (not e!53569))))

(declare-fun b!82097 () Bool)

(declare-fun res!42623 () Bool)

(assert (=> b!82097 (=> (not res!42623) (not e!53571))))

(assert (=> b!82097 (= res!42623 e!53563)))

(declare-fun c!13030 () Bool)

(assert (=> b!82097 (= c!13030 (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!82098 () Bool)

(declare-fun e!53564 () Bool)

(assert (=> b!82098 (= e!53564 (validKeyInArray!0 (select (arr!1900 lt!37845) #b00000000000000000000000000000000)))))

(declare-fun bm!7655 () Bool)

(declare-fun call!7656 () ListLongMap!1471)

(declare-fun call!7660 () ListLongMap!1471)

(assert (=> bm!7655 (= call!7656 call!7660)))

(declare-fun bm!7656 () Bool)

(declare-fun call!7659 () ListLongMap!1471)

(assert (=> bm!7656 (= call!7660 call!7659)))

(declare-fun b!82099 () Bool)

(declare-fun lt!38319 () Unit!2350)

(assert (=> b!82099 (= e!53561 lt!38319)))

(declare-fun lt!38316 () ListLongMap!1471)

(assert (=> b!82099 (= lt!38316 (getCurrentListMapNoExtraKeys!75 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38304 () (_ BitVec 64))

(assert (=> b!82099 (= lt!38304 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38324 () (_ BitVec 64))

(assert (=> b!82099 (= lt!38324 (select (arr!1900 lt!37845) #b00000000000000000000000000000000))))

(declare-fun lt!38305 () Unit!2350)

(assert (=> b!82099 (= lt!38305 (addStillContains!56 lt!38316 lt!38304 (zeroValue!2189 newMap!16) lt!38324))))

(assert (=> b!82099 (contains!750 (+!111 lt!38316 (tuple2!2203 lt!38304 (zeroValue!2189 newMap!16))) lt!38324)))

(declare-fun lt!38322 () Unit!2350)

(assert (=> b!82099 (= lt!38322 lt!38305)))

(declare-fun lt!38311 () ListLongMap!1471)

(assert (=> b!82099 (= lt!38311 (getCurrentListMapNoExtraKeys!75 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38320 () (_ BitVec 64))

(assert (=> b!82099 (= lt!38320 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38307 () (_ BitVec 64))

(assert (=> b!82099 (= lt!38307 (select (arr!1900 lt!37845) #b00000000000000000000000000000000))))

(declare-fun lt!38325 () Unit!2350)

(assert (=> b!82099 (= lt!38325 (addApplyDifferent!56 lt!38311 lt!38320 (minValue!2189 newMap!16) lt!38307))))

(assert (=> b!82099 (= (apply!80 (+!111 lt!38311 (tuple2!2203 lt!38320 (minValue!2189 newMap!16))) lt!38307) (apply!80 lt!38311 lt!38307))))

(declare-fun lt!38308 () Unit!2350)

(assert (=> b!82099 (= lt!38308 lt!38325)))

(declare-fun lt!38314 () ListLongMap!1471)

(assert (=> b!82099 (= lt!38314 (getCurrentListMapNoExtraKeys!75 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38310 () (_ BitVec 64))

(assert (=> b!82099 (= lt!38310 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38312 () (_ BitVec 64))

(assert (=> b!82099 (= lt!38312 (select (arr!1900 lt!37845) #b00000000000000000000000000000000))))

(declare-fun lt!38323 () Unit!2350)

(assert (=> b!82099 (= lt!38323 (addApplyDifferent!56 lt!38314 lt!38310 (zeroValue!2189 newMap!16) lt!38312))))

(assert (=> b!82099 (= (apply!80 (+!111 lt!38314 (tuple2!2203 lt!38310 (zeroValue!2189 newMap!16))) lt!38312) (apply!80 lt!38314 lt!38312))))

(declare-fun lt!38309 () Unit!2350)

(assert (=> b!82099 (= lt!38309 lt!38323)))

(declare-fun lt!38313 () ListLongMap!1471)

(assert (=> b!82099 (= lt!38313 (getCurrentListMapNoExtraKeys!75 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38321 () (_ BitVec 64))

(assert (=> b!82099 (= lt!38321 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38306 () (_ BitVec 64))

(assert (=> b!82099 (= lt!38306 (select (arr!1900 lt!37845) #b00000000000000000000000000000000))))

(assert (=> b!82099 (= lt!38319 (addApplyDifferent!56 lt!38313 lt!38321 (minValue!2189 newMap!16) lt!38306))))

(assert (=> b!82099 (= (apply!80 (+!111 lt!38313 (tuple2!2203 lt!38321 (minValue!2189 newMap!16))) lt!38306) (apply!80 lt!38313 lt!38306))))

(declare-fun b!82100 () Bool)

(declare-fun Unit!2417 () Unit!2350)

(assert (=> b!82100 (= e!53561 Unit!2417)))

(declare-fun b!82101 () Bool)

(assert (=> b!82101 (= e!53565 e!53570)))

(declare-fun res!42619 () Bool)

(assert (=> b!82101 (= res!42619 call!7657)))

(assert (=> b!82101 (=> (not res!42619) (not e!53570))))

(declare-fun b!82102 () Bool)

(declare-fun c!13026 () Bool)

(assert (=> b!82102 (= c!13026 (and (not (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53566 () ListLongMap!1471)

(assert (=> b!82102 (= e!53567 e!53566)))

(declare-fun b!82103 () Bool)

(assert (=> b!82103 (= e!53560 (validKeyInArray!0 (select (arr!1900 lt!37845) #b00000000000000000000000000000000)))))

(declare-fun b!82104 () Bool)

(assert (=> b!82104 (= e!53566 call!7656)))

(declare-fun bm!7657 () Bool)

(assert (=> bm!7657 (= call!7662 (contains!750 lt!38317 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82105 () Bool)

(assert (=> b!82105 (= e!53563 (not call!7662))))

(declare-fun b!82106 () Bool)

(assert (=> b!82106 (= e!53569 (= (apply!80 lt!38317 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun bm!7658 () Bool)

(assert (=> bm!7658 (= call!7659 (getCurrentListMapNoExtraKeys!75 lt!37845 lt!37852 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!82107 () Bool)

(assert (=> b!82107 (= e!53562 (= (apply!80 lt!38317 (select (arr!1900 lt!37845) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 lt!37852) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82107 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 lt!37852)))))

(assert (=> b!82107 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 lt!37845)))))

(declare-fun b!82108 () Bool)

(assert (=> b!82108 (= e!53566 call!7661)))

(declare-fun bm!7659 () Bool)

(assert (=> bm!7659 (= call!7658 (+!111 (ite c!13028 call!7659 (ite c!13029 call!7660 call!7656)) (ite (or c!13028 c!13029) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun b!82109 () Bool)

(declare-fun res!42625 () Bool)

(assert (=> b!82109 (=> (not res!42625) (not e!53571))))

(assert (=> b!82109 (= res!42625 e!53559)))

(declare-fun res!42620 () Bool)

(assert (=> b!82109 (=> res!42620 e!53559)))

(assert (=> b!82109 (= res!42620 (not e!53564))))

(declare-fun res!42626 () Bool)

(assert (=> b!82109 (=> (not res!42626) (not e!53564))))

(assert (=> b!82109 (= res!42626 (bvslt #b00000000000000000000000000000000 (size!2142 lt!37845)))))

(assert (= (and d!20557 c!13028) b!82089))

(assert (= (and d!20557 (not c!13028)) b!82091))

(assert (= (and b!82091 c!13029) b!82094))

(assert (= (and b!82091 (not c!13029)) b!82102))

(assert (= (and b!82102 c!13026) b!82108))

(assert (= (and b!82102 (not c!13026)) b!82104))

(assert (= (or b!82108 b!82104) bm!7655))

(assert (= (or b!82094 bm!7655) bm!7656))

(assert (= (or b!82094 b!82108) bm!7653))

(assert (= (or b!82089 bm!7656) bm!7658))

(assert (= (or b!82089 bm!7653) bm!7659))

(assert (= (and d!20557 res!42624) b!82103))

(assert (= (and d!20557 c!13027) b!82099))

(assert (= (and d!20557 (not c!13027)) b!82100))

(assert (= (and d!20557 res!42622) b!82109))

(assert (= (and b!82109 res!42626) b!82098))

(assert (= (and b!82109 (not res!42620)) b!82092))

(assert (= (and b!82092 res!42618) b!82107))

(assert (= (and b!82109 res!42625) b!82097))

(assert (= (and b!82097 c!13030) b!82096))

(assert (= (and b!82097 (not c!13030)) b!82105))

(assert (= (and b!82096 res!42621) b!82106))

(assert (= (or b!82096 b!82105) bm!7657))

(assert (= (and b!82097 res!42623) b!82095))

(assert (= (and b!82095 c!13031) b!82101))

(assert (= (and b!82095 (not c!13031)) b!82093))

(assert (= (and b!82101 res!42619) b!82090))

(assert (= (or b!82101 b!82093) bm!7654))

(declare-fun b_lambda!3655 () Bool)

(assert (=> (not b_lambda!3655) (not b!82107)))

(assert (=> b!82107 t!5218))

(declare-fun b_and!4997 () Bool)

(assert (= b_and!4993 (and (=> t!5218 result!2857) b_and!4997)))

(assert (=> b!82107 t!5220))

(declare-fun b_and!4999 () Bool)

(assert (= b_and!4995 (and (=> t!5220 result!2859) b_and!4999)))

(declare-fun m!84599 () Bool)

(assert (=> bm!7658 m!84599))

(declare-fun m!84601 () Bool)

(assert (=> bm!7654 m!84601))

(declare-fun m!84603 () Bool)

(assert (=> b!82107 m!84603))

(assert (=> b!82107 m!84603))

(declare-fun m!84605 () Bool)

(assert (=> b!82107 m!84605))

(declare-fun m!84607 () Bool)

(assert (=> b!82107 m!84607))

(assert (=> b!82107 m!82031))

(assert (=> b!82107 m!84607))

(assert (=> b!82107 m!82031))

(declare-fun m!84609 () Bool)

(assert (=> b!82107 m!84609))

(assert (=> b!82098 m!84603))

(assert (=> b!82098 m!84603))

(declare-fun m!84611 () Bool)

(assert (=> b!82098 m!84611))

(declare-fun m!84613 () Bool)

(assert (=> b!82089 m!84613))

(assert (=> b!82092 m!84603))

(assert (=> b!82092 m!84603))

(declare-fun m!84615 () Bool)

(assert (=> b!82092 m!84615))

(declare-fun m!84617 () Bool)

(assert (=> bm!7659 m!84617))

(assert (=> d!20557 m!82043))

(declare-fun m!84619 () Bool)

(assert (=> bm!7657 m!84619))

(declare-fun m!84621 () Bool)

(assert (=> b!82099 m!84621))

(declare-fun m!84623 () Bool)

(assert (=> b!82099 m!84623))

(declare-fun m!84625 () Bool)

(assert (=> b!82099 m!84625))

(assert (=> b!82099 m!84603))

(declare-fun m!84627 () Bool)

(assert (=> b!82099 m!84627))

(declare-fun m!84629 () Bool)

(assert (=> b!82099 m!84629))

(declare-fun m!84631 () Bool)

(assert (=> b!82099 m!84631))

(declare-fun m!84633 () Bool)

(assert (=> b!82099 m!84633))

(declare-fun m!84635 () Bool)

(assert (=> b!82099 m!84635))

(assert (=> b!82099 m!84623))

(assert (=> b!82099 m!84599))

(declare-fun m!84637 () Bool)

(assert (=> b!82099 m!84637))

(declare-fun m!84639 () Bool)

(assert (=> b!82099 m!84639))

(declare-fun m!84641 () Bool)

(assert (=> b!82099 m!84641))

(declare-fun m!84643 () Bool)

(assert (=> b!82099 m!84643))

(assert (=> b!82099 m!84631))

(declare-fun m!84645 () Bool)

(assert (=> b!82099 m!84645))

(declare-fun m!84647 () Bool)

(assert (=> b!82099 m!84647))

(assert (=> b!82099 m!84627))

(declare-fun m!84649 () Bool)

(assert (=> b!82099 m!84649))

(assert (=> b!82099 m!84637))

(declare-fun m!84651 () Bool)

(assert (=> b!82106 m!84651))

(declare-fun m!84653 () Bool)

(assert (=> b!82090 m!84653))

(assert (=> b!82103 m!84603))

(assert (=> b!82103 m!84603))

(assert (=> b!82103 m!84611))

(assert (=> d!19893 d!20557))

(assert (=> d!19893 d!19685))

(declare-fun d!20559 () Bool)

(declare-fun res!42627 () Bool)

(declare-fun e!53572 () Bool)

(assert (=> d!20559 (=> res!42627 e!53572)))

(assert (=> d!20559 (= res!42627 (bvsge #b00000000000000000000000000000000 (size!2142 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))))))

(assert (=> d!20559 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (mask!6299 newMap!16)) e!53572)))

(declare-fun b!82110 () Bool)

(declare-fun e!53574 () Bool)

(assert (=> b!82110 (= e!53572 e!53574)))

(declare-fun c!13032 () Bool)

(assert (=> b!82110 (= c!13032 (validKeyInArray!0 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!82111 () Bool)

(declare-fun e!53573 () Bool)

(assert (=> b!82111 (= e!53574 e!53573)))

(declare-fun lt!38327 () (_ BitVec 64))

(assert (=> b!82111 (= lt!38327 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!38328 () Unit!2350)

(assert (=> b!82111 (= lt!38328 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) lt!38327 #b00000000000000000000000000000000))))

(assert (=> b!82111 (arrayContainsKey!0 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) lt!38327 #b00000000000000000000000000000000)))

(declare-fun lt!38326 () Unit!2350)

(assert (=> b!82111 (= lt!38326 lt!38328)))

(declare-fun res!42628 () Bool)

(assert (=> b!82111 (= res!42628 (= (seekEntryOrOpen!0 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000) (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (mask!6299 newMap!16)) (Found!251 #b00000000000000000000000000000000)))))

(assert (=> b!82111 (=> (not res!42628) (not e!53573))))

(declare-fun b!82112 () Bool)

(declare-fun call!7663 () Bool)

(assert (=> b!82112 (= e!53573 call!7663)))

(declare-fun bm!7660 () Bool)

(assert (=> bm!7660 (= call!7663 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (mask!6299 newMap!16)))))

(declare-fun b!82113 () Bool)

(assert (=> b!82113 (= e!53574 call!7663)))

(assert (= (and d!20559 (not res!42627)) b!82110))

(assert (= (and b!82110 c!13032) b!82111))

(assert (= (and b!82110 (not c!13032)) b!82113))

(assert (= (and b!82111 res!42628) b!82112))

(assert (= (or b!82112 b!82113) bm!7660))

(assert (=> b!82110 m!84513))

(assert (=> b!82110 m!84513))

(assert (=> b!82110 m!84521))

(assert (=> b!82111 m!84513))

(declare-fun m!84655 () Bool)

(assert (=> b!82111 m!84655))

(declare-fun m!84657 () Bool)

(assert (=> b!82111 m!84657))

(assert (=> b!82111 m!84513))

(declare-fun m!84659 () Bool)

(assert (=> b!82111 m!84659))

(declare-fun m!84661 () Bool)

(assert (=> bm!7660 m!84661))

(assert (=> d!19893 d!20559))

(declare-fun call!7664 () (_ BitVec 32))

(declare-fun bm!7661 () Bool)

(assert (=> bm!7661 (= call!7664 (arrayCountValidKeys!0 lt!37850 (bvadd (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000001) (bvadd (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000001)))))

(declare-fun b!82114 () Bool)

(declare-fun e!53575 () (_ BitVec 32))

(assert (=> b!82114 (= e!53575 (bvadd #b00000000000000000000000000000001 call!7664))))

(declare-fun b!82115 () Bool)

(declare-fun e!53576 () (_ BitVec 32))

(assert (=> b!82115 (= e!53576 e!53575)))

(declare-fun c!13034 () Bool)

(assert (=> b!82115 (= c!13034 (validKeyInArray!0 (select (arr!1900 lt!37850) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)))))))

(declare-fun b!82117 () Bool)

(assert (=> b!82117 (= e!53576 #b00000000000000000000000000000000)))

(declare-fun d!20561 () Bool)

(declare-fun lt!38329 () (_ BitVec 32))

(assert (=> d!20561 (and (bvsge lt!38329 #b00000000000000000000000000000000) (bvsle lt!38329 (bvsub (size!2142 lt!37850) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)))))))

(assert (=> d!20561 (= lt!38329 e!53576)))

(declare-fun c!13033 () Bool)

(assert (=> d!20561 (= c!13033 (bvsge (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (bvadd (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000001)))))

(assert (=> d!20561 (and (bvsle (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (bvadd (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000001)) (bvsge (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000001) (size!2142 lt!37850)))))

(assert (=> d!20561 (= (arrayCountValidKeys!0 lt!37850 (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (bvadd (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000001)) lt!38329)))

(declare-fun b!82116 () Bool)

(assert (=> b!82116 (= e!53575 call!7664)))

(assert (= (and d!20561 c!13033) b!82117))

(assert (= (and d!20561 (not c!13033)) b!82115))

(assert (= (and b!82115 c!13034) b!82114))

(assert (= (and b!82115 (not c!13034)) b!82116))

(assert (= (or b!82114 b!82116) bm!7661))

(declare-fun m!84663 () Bool)

(assert (=> bm!7661 m!84663))

(assert (=> b!82115 m!84595))

(assert (=> b!82115 m!84595))

(assert (=> b!82115 m!84597))

(assert (=> d!19893 d!20561))

(declare-fun call!7665 () (_ BitVec 32))

(declare-fun bm!7662 () Bool)

(assert (=> bm!7662 (= call!7665 (arrayCountValidKeys!0 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!82118 () Bool)

(declare-fun e!53577 () (_ BitVec 32))

(assert (=> b!82118 (= e!53577 (bvadd #b00000000000000000000000000000001 call!7665))))

(declare-fun b!82119 () Bool)

(declare-fun e!53578 () (_ BitVec 32))

(assert (=> b!82119 (= e!53578 e!53577)))

(declare-fun c!13036 () Bool)

(assert (=> b!82119 (= c!13036 (validKeyInArray!0 (select (arr!1900 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!82121 () Bool)

(assert (=> b!82121 (= e!53578 #b00000000000000000000000000000000)))

(declare-fun d!20563 () Bool)

(declare-fun lt!38330 () (_ BitVec 32))

(assert (=> d!20563 (and (bvsge lt!38330 #b00000000000000000000000000000000) (bvsle lt!38330 (bvsub (size!2142 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!20563 (= lt!38330 e!53578)))

(declare-fun c!13035 () Bool)

(assert (=> d!20563 (= c!13035 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!20563 (and (bvsle #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2142 (_keys!3957 newMap!16)) (size!2142 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))))))))

(assert (=> d!20563 (= (arrayCountValidKeys!0 (array!3989 (store (arr!1900 (_keys!3957 newMap!16)) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (size!2142 (_keys!3957 newMap!16))) #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) lt!38330)))

(declare-fun b!82120 () Bool)

(assert (=> b!82120 (= e!53577 call!7665)))

(assert (= (and d!20563 c!13035) b!82121))

(assert (= (and d!20563 (not c!13035)) b!82119))

(assert (= (and b!82119 c!13036) b!82118))

(assert (= (and b!82119 (not c!13036)) b!82120))

(assert (= (or b!82118 b!82120) bm!7662))

(declare-fun m!84665 () Bool)

(assert (=> bm!7662 m!84665))

(assert (=> b!82119 m!84513))

(assert (=> b!82119 m!84513))

(assert (=> b!82119 m!84521))

(assert (=> d!19893 d!20563))

(declare-fun d!20565 () Bool)

(assert (=> d!20565 (arrayContainsKey!0 lt!37861 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!38331 () Unit!2350)

(assert (=> d!20565 (= lt!38331 (choose!13 lt!37861 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470))))))

(assert (=> d!20565 (bvsge (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470)) #b00000000000000000000000000000000)))

(assert (=> d!20565 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!37861 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (ite c!12615 (index!3142 lt!37470) (index!3139 lt!37470))) lt!38331)))

(declare-fun bs!3473 () Bool)

(assert (= bs!3473 d!20565))

(assert (=> bs!3473 m!81585))

(assert (=> bs!3473 m!82807))

(assert (=> bs!3473 m!81585))

(declare-fun m!84667 () Bool)

(assert (=> bs!3473 m!84667))

(assert (=> d!19893 d!20565))

(declare-fun d!20567 () Bool)

(declare-fun e!53579 () Bool)

(assert (=> d!20567 e!53579))

(declare-fun res!42629 () Bool)

(assert (=> d!20567 (=> res!42629 e!53579)))

(declare-fun lt!38334 () Bool)

(assert (=> d!20567 (= res!42629 (not lt!38334))))

(declare-fun lt!38333 () Bool)

(assert (=> d!20567 (= lt!38334 lt!38333)))

(declare-fun lt!38332 () Unit!2350)

(declare-fun e!53580 () Unit!2350)

(assert (=> d!20567 (= lt!38332 e!53580)))

(declare-fun c!13037 () Bool)

(assert (=> d!20567 (= c!13037 lt!38333)))

(assert (=> d!20567 (= lt!38333 (containsKey!141 (toList!751 lt!37664) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20567 (= (contains!750 lt!37664 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38334)))

(declare-fun b!82122 () Bool)

(declare-fun lt!38335 () Unit!2350)

(assert (=> b!82122 (= e!53580 lt!38335)))

(assert (=> b!82122 (= lt!38335 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37664) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82122 (isDefined!91 (getValueByKey!137 (toList!751 lt!37664) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82123 () Bool)

(declare-fun Unit!2418 () Unit!2350)

(assert (=> b!82123 (= e!53580 Unit!2418)))

(declare-fun b!82124 () Bool)

(assert (=> b!82124 (= e!53579 (isDefined!91 (getValueByKey!137 (toList!751 lt!37664) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20567 c!13037) b!82122))

(assert (= (and d!20567 (not c!13037)) b!82123))

(assert (= (and d!20567 (not res!42629)) b!82124))

(declare-fun m!84669 () Bool)

(assert (=> d!20567 m!84669))

(declare-fun m!84671 () Bool)

(assert (=> b!82122 m!84671))

(declare-fun m!84673 () Bool)

(assert (=> b!82122 m!84673))

(assert (=> b!82122 m!84673))

(declare-fun m!84675 () Bool)

(assert (=> b!82122 m!84675))

(assert (=> b!82124 m!84673))

(assert (=> b!82124 m!84673))

(assert (=> b!82124 m!84675))

(assert (=> bm!7531 d!20567))

(declare-fun d!20569 () Bool)

(declare-fun lt!38336 () Bool)

(assert (=> d!20569 (= lt!38336 (select (content!84 lt!37726) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun e!53582 () Bool)

(assert (=> d!20569 (= lt!38336 e!53582)))

(declare-fun res!42631 () Bool)

(assert (=> d!20569 (=> (not res!42631) (not e!53582))))

(assert (=> d!20569 (= res!42631 ((_ is Cons!1534) lt!37726))))

(assert (=> d!20569 (= (contains!753 lt!37726 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))) lt!38336)))

(declare-fun b!82125 () Bool)

(declare-fun e!53581 () Bool)

(assert (=> b!82125 (= e!53582 e!53581)))

(declare-fun res!42630 () Bool)

(assert (=> b!82125 (=> res!42630 e!53581)))

(assert (=> b!82125 (= res!42630 (= (h!2123 lt!37726) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun b!82126 () Bool)

(assert (=> b!82126 (= e!53581 (contains!753 (t!5209 lt!37726) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(assert (= (and d!20569 res!42631) b!82125))

(assert (= (and b!82125 (not res!42630)) b!82126))

(declare-fun m!84677 () Bool)

(assert (=> d!20569 m!84677))

(declare-fun m!84679 () Bool)

(assert (=> d!20569 m!84679))

(declare-fun m!84681 () Bool)

(assert (=> b!82126 m!84681))

(assert (=> b!80978 d!20569))

(assert (=> b!81007 d!19937))

(declare-fun d!20571 () Bool)

(declare-fun lt!38337 () Bool)

(assert (=> d!20571 (= lt!38337 (select (content!84 (t!5209 (toList!751 lt!37285))) lt!37202))))

(declare-fun e!53584 () Bool)

(assert (=> d!20571 (= lt!38337 e!53584)))

(declare-fun res!42633 () Bool)

(assert (=> d!20571 (=> (not res!42633) (not e!53584))))

(assert (=> d!20571 (= res!42633 ((_ is Cons!1534) (t!5209 (toList!751 lt!37285))))))

(assert (=> d!20571 (= (contains!753 (t!5209 (toList!751 lt!37285)) lt!37202) lt!38337)))

(declare-fun b!82127 () Bool)

(declare-fun e!53583 () Bool)

(assert (=> b!82127 (= e!53584 e!53583)))

(declare-fun res!42632 () Bool)

(assert (=> b!82127 (=> res!42632 e!53583)))

(assert (=> b!82127 (= res!42632 (= (h!2123 (t!5209 (toList!751 lt!37285))) lt!37202))))

(declare-fun b!82128 () Bool)

(assert (=> b!82128 (= e!53583 (contains!753 (t!5209 (t!5209 (toList!751 lt!37285))) lt!37202))))

(assert (= (and d!20571 res!42633) b!82127))

(assert (= (and b!82127 (not res!42632)) b!82128))

(declare-fun m!84683 () Bool)

(assert (=> d!20571 m!84683))

(declare-fun m!84685 () Bool)

(assert (=> d!20571 m!84685))

(declare-fun m!84687 () Bool)

(assert (=> b!82128 m!84687))

(assert (=> b!80876 d!20571))

(assert (=> b!80939 d!20255))

(assert (=> b!80939 d!20257))

(declare-fun d!20573 () Bool)

(assert (=> d!20573 (= (+!111 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (getCurrentListMap!437 (_keys!3957 newMap!16) (array!3991 (store (arr!1901 (_values!2276 newMap!16)) (index!3140 lt!37470) (ValueCellFull!915 lt!37195)) (size!2143 (_values!2276 newMap!16))) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(assert (=> d!20573 true))

(declare-fun _$5!86 () Unit!2350)

(assert (=> d!20573 (= (choose!483 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3140 lt!37470) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195 (defaultEntry!2293 newMap!16)) _$5!86)))

(declare-fun bs!3474 () Bool)

(assert (= bs!3474 d!20573))

(assert (=> bs!3474 m!81869))

(assert (=> bs!3474 m!81869))

(assert (=> bs!3474 m!82525))

(assert (=> bs!3474 m!81935))

(assert (=> bs!3474 m!81943))

(assert (=> d!19811 d!20573))

(assert (=> d!19811 d!20037))

(assert (=> d!19835 d!19837))

(assert (=> d!19835 d!19839))

(assert (=> d!19835 d!19843))

(assert (=> d!19835 d!19841))

(declare-fun d!20575 () Bool)

(declare-fun lt!38338 () Bool)

(assert (=> d!20575 (= lt!38338 (select (content!84 lt!37291) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun e!53586 () Bool)

(assert (=> d!20575 (= lt!38338 e!53586)))

(declare-fun res!42635 () Bool)

(assert (=> d!20575 (=> (not res!42635) (not e!53586))))

(assert (=> d!20575 (= res!42635 ((_ is Cons!1534) lt!37291))))

(assert (=> d!20575 (= (contains!753 lt!37291 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))) lt!38338)))

(declare-fun b!82129 () Bool)

(declare-fun e!53585 () Bool)

(assert (=> b!82129 (= e!53586 e!53585)))

(declare-fun res!42634 () Bool)

(assert (=> b!82129 (=> res!42634 e!53585)))

(assert (=> b!82129 (= res!42634 (= (h!2123 lt!37291) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun b!82130 () Bool)

(assert (=> b!82130 (= e!53585 (contains!753 (t!5209 lt!37291) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(assert (= (and d!20575 res!42635) b!82129))

(assert (= (and b!82129 (not res!42634)) b!82130))

(declare-fun m!84689 () Bool)

(assert (=> d!20575 m!84689))

(declare-fun m!84691 () Bool)

(assert (=> d!20575 m!84691))

(declare-fun m!84693 () Bool)

(assert (=> b!82130 m!84693))

(assert (=> b!80716 d!20575))

(declare-fun d!20577 () Bool)

(declare-fun e!53587 () Bool)

(assert (=> d!20577 e!53587))

(declare-fun res!42636 () Bool)

(assert (=> d!20577 (=> res!42636 e!53587)))

(declare-fun lt!38341 () Bool)

(assert (=> d!20577 (= res!42636 (not lt!38341))))

(declare-fun lt!38340 () Bool)

(assert (=> d!20577 (= lt!38341 lt!38340)))

(declare-fun lt!38339 () Unit!2350)

(declare-fun e!53588 () Unit!2350)

(assert (=> d!20577 (= lt!38339 e!53588)))

(declare-fun c!13038 () Bool)

(assert (=> d!20577 (= c!13038 lt!38340)))

(assert (=> d!20577 (= lt!38340 (containsKey!141 (toList!751 lt!37572) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20577 (= (contains!750 lt!37572 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38341)))

(declare-fun b!82131 () Bool)

(declare-fun lt!38342 () Unit!2350)

(assert (=> b!82131 (= e!53588 lt!38342)))

(assert (=> b!82131 (= lt!38342 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37572) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> b!82131 (isDefined!91 (getValueByKey!137 (toList!751 lt!37572) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!82132 () Bool)

(declare-fun Unit!2419 () Unit!2350)

(assert (=> b!82132 (= e!53588 Unit!2419)))

(declare-fun b!82133 () Bool)

(assert (=> b!82133 (= e!53587 (isDefined!91 (getValueByKey!137 (toList!751 lt!37572) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20577 c!13038) b!82131))

(assert (= (and d!20577 (not c!13038)) b!82132))

(assert (= (and d!20577 (not res!42636)) b!82133))

(declare-fun m!84695 () Bool)

(assert (=> d!20577 m!84695))

(declare-fun m!84697 () Bool)

(assert (=> b!82131 m!84697))

(assert (=> b!82131 m!82275))

(assert (=> b!82131 m!82275))

(declare-fun m!84699 () Bool)

(assert (=> b!82131 m!84699))

(assert (=> b!82133 m!82275))

(assert (=> b!82133 m!82275))

(assert (=> b!82133 m!84699))

(assert (=> d!19759 d!20577))

(declare-fun b!82135 () Bool)

(declare-fun e!53589 () Option!143)

(declare-fun e!53590 () Option!143)

(assert (=> b!82135 (= e!53589 e!53590)))

(declare-fun c!13040 () Bool)

(assert (=> b!82135 (= c!13040 (and ((_ is Cons!1534) lt!37569) (not (= (_1!1111 (h!2123 lt!37569)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!13039 () Bool)

(declare-fun d!20579 () Bool)

(assert (=> d!20579 (= c!13039 (and ((_ is Cons!1534) lt!37569) (= (_1!1111 (h!2123 lt!37569)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20579 (= (getValueByKey!137 lt!37569 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) e!53589)))

(declare-fun b!82137 () Bool)

(assert (=> b!82137 (= e!53590 None!141)))

(declare-fun b!82136 () Bool)

(assert (=> b!82136 (= e!53590 (getValueByKey!137 (t!5209 lt!37569) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!82134 () Bool)

(assert (=> b!82134 (= e!53589 (Some!142 (_2!1111 (h!2123 lt!37569))))))

(assert (= (and d!20579 c!13039) b!82134))

(assert (= (and d!20579 (not c!13039)) b!82135))

(assert (= (and b!82135 c!13040) b!82136))

(assert (= (and b!82135 (not c!13040)) b!82137))

(declare-fun m!84701 () Bool)

(assert (=> b!82136 m!84701))

(assert (=> d!19759 d!20579))

(declare-fun d!20581 () Bool)

(assert (=> d!20581 (= (getValueByKey!137 lt!37569 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!38343 () Unit!2350)

(assert (=> d!20581 (= lt!38343 (choose!478 lt!37569 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun e!53591 () Bool)

(assert (=> d!20581 e!53591))

(declare-fun res!42637 () Bool)

(assert (=> d!20581 (=> (not res!42637) (not e!53591))))

(assert (=> d!20581 (= res!42637 (isStrictlySorted!291 lt!37569))))

(assert (=> d!20581 (= (lemmaContainsTupThenGetReturnValue!56 lt!37569 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38343)))

(declare-fun b!82138 () Bool)

(declare-fun res!42638 () Bool)

(assert (=> b!82138 (=> (not res!42638) (not e!53591))))

(assert (=> b!82138 (= res!42638 (containsKey!141 lt!37569 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!82139 () Bool)

(assert (=> b!82139 (= e!53591 (contains!753 lt!37569 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20581 res!42637) b!82138))

(assert (= (and b!82138 res!42638) b!82139))

(assert (=> d!20581 m!82269))

(declare-fun m!84703 () Bool)

(assert (=> d!20581 m!84703))

(declare-fun m!84705 () Bool)

(assert (=> d!20581 m!84705))

(declare-fun m!84707 () Bool)

(assert (=> b!82138 m!84707))

(declare-fun m!84709 () Bool)

(assert (=> b!82139 m!84709))

(assert (=> d!19759 d!20581))

(declare-fun d!20583 () Bool)

(declare-fun e!53593 () Bool)

(assert (=> d!20583 e!53593))

(declare-fun res!42639 () Bool)

(assert (=> d!20583 (=> (not res!42639) (not e!53593))))

(declare-fun lt!38344 () List!1538)

(assert (=> d!20583 (= res!42639 (isStrictlySorted!291 lt!38344))))

(declare-fun e!53592 () List!1538)

(assert (=> d!20583 (= lt!38344 e!53592)))

(declare-fun c!13044 () Bool)

(assert (=> d!20583 (= c!13044 (and ((_ is Cons!1534) (toList!751 call!7492)) (bvslt (_1!1111 (h!2123 (toList!751 call!7492))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20583 (isStrictlySorted!291 (toList!751 call!7492))))

(assert (=> d!20583 (= (insertStrictlySorted!58 (toList!751 call!7492) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38344)))

(declare-fun b!82140 () Bool)

(assert (=> b!82140 (= e!53593 (contains!753 lt!38344 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun bm!7663 () Bool)

(declare-fun call!7666 () List!1538)

(declare-fun call!7667 () List!1538)

(assert (=> bm!7663 (= call!7666 call!7667)))

(declare-fun b!82141 () Bool)

(declare-fun res!42640 () Bool)

(assert (=> b!82141 (=> (not res!42640) (not e!53593))))

(assert (=> b!82141 (= res!42640 (containsKey!141 lt!38344 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun e!53595 () List!1538)

(declare-fun b!82142 () Bool)

(assert (=> b!82142 (= e!53595 (insertStrictlySorted!58 (t!5209 (toList!751 call!7492)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!82143 () Bool)

(assert (=> b!82143 (= e!53592 call!7667)))

(declare-fun bm!7664 () Bool)

(assert (=> bm!7664 (= call!7667 ($colon$colon!69 e!53595 (ite c!13044 (h!2123 (toList!751 call!7492)) (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!13042 () Bool)

(assert (=> bm!7664 (= c!13042 c!13044)))

(declare-fun b!82144 () Bool)

(declare-fun c!13041 () Bool)

(declare-fun c!13043 () Bool)

(assert (=> b!82144 (= e!53595 (ite c!13041 (t!5209 (toList!751 call!7492)) (ite c!13043 (Cons!1534 (h!2123 (toList!751 call!7492)) (t!5209 (toList!751 call!7492))) Nil!1535)))))

(declare-fun b!82145 () Bool)

(declare-fun e!53596 () List!1538)

(assert (=> b!82145 (= e!53596 call!7666)))

(declare-fun b!82146 () Bool)

(declare-fun e!53594 () List!1538)

(declare-fun call!7668 () List!1538)

(assert (=> b!82146 (= e!53594 call!7668)))

(declare-fun b!82147 () Bool)

(assert (=> b!82147 (= c!13043 (and ((_ is Cons!1534) (toList!751 call!7492)) (bvsgt (_1!1111 (h!2123 (toList!751 call!7492))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> b!82147 (= e!53596 e!53594)))

(declare-fun b!82148 () Bool)

(assert (=> b!82148 (= e!53594 call!7668)))

(declare-fun bm!7665 () Bool)

(assert (=> bm!7665 (= call!7668 call!7666)))

(declare-fun b!82149 () Bool)

(assert (=> b!82149 (= e!53592 e!53596)))

(assert (=> b!82149 (= c!13041 (and ((_ is Cons!1534) (toList!751 call!7492)) (= (_1!1111 (h!2123 (toList!751 call!7492))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (= (and d!20583 c!13044) b!82143))

(assert (= (and d!20583 (not c!13044)) b!82149))

(assert (= (and b!82149 c!13041) b!82145))

(assert (= (and b!82149 (not c!13041)) b!82147))

(assert (= (and b!82147 c!13043) b!82146))

(assert (= (and b!82147 (not c!13043)) b!82148))

(assert (= (or b!82146 b!82148) bm!7665))

(assert (= (or b!82145 bm!7665) bm!7663))

(assert (= (or b!82143 bm!7663) bm!7664))

(assert (= (and bm!7664 c!13042) b!82142))

(assert (= (and bm!7664 (not c!13042)) b!82144))

(assert (= (and d!20583 res!42639) b!82141))

(assert (= (and b!82141 res!42640) b!82140))

(declare-fun m!84711 () Bool)

(assert (=> b!82141 m!84711))

(declare-fun m!84713 () Bool)

(assert (=> bm!7664 m!84713))

(declare-fun m!84715 () Bool)

(assert (=> d!20583 m!84715))

(declare-fun m!84717 () Bool)

(assert (=> d!20583 m!84717))

(declare-fun m!84719 () Bool)

(assert (=> b!82142 m!84719))

(declare-fun m!84721 () Bool)

(assert (=> b!82140 m!84721))

(assert (=> d!19759 d!20583))

(declare-fun d!20585 () Bool)

(assert (=> d!20585 (= (get!1198 (getValueByKey!137 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2614 (getValueByKey!137 (toList!751 lt!37385) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19781 d!20585))

(assert (=> d!19781 d!19965))

(declare-fun d!20587 () Bool)

(declare-fun c!13045 () Bool)

(assert (=> d!20587 (= c!13045 ((_ is Nil!1535) (toList!751 lt!37294)))))

(declare-fun e!53597 () (InoxSet tuple2!2202))

(assert (=> d!20587 (= (content!84 (toList!751 lt!37294)) e!53597)))

(declare-fun b!82150 () Bool)

(assert (=> b!82150 (= e!53597 ((as const (Array tuple2!2202 Bool)) false))))

(declare-fun b!82151 () Bool)

(assert (=> b!82151 (= e!53597 ((_ map or) (store ((as const (Array tuple2!2202 Bool)) false) (h!2123 (toList!751 lt!37294)) true) (content!84 (t!5209 (toList!751 lt!37294)))))))

(assert (= (and d!20587 c!13045) b!82150))

(assert (= (and d!20587 (not c!13045)) b!82151))

(declare-fun m!84723 () Bool)

(assert (=> b!82151 m!84723))

(assert (=> b!82151 m!84115))

(assert (=> d!19885 d!20587))

(declare-fun d!20589 () Bool)

(declare-fun lt!38345 () Bool)

(assert (=> d!20589 (= lt!38345 (select (content!84 (toList!751 lt!37559)) (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!53599 () Bool)

(assert (=> d!20589 (= lt!38345 e!53599)))

(declare-fun res!42642 () Bool)

(assert (=> d!20589 (=> (not res!42642) (not e!53599))))

(assert (=> d!20589 (= res!42642 ((_ is Cons!1534) (toList!751 lt!37559)))))

(assert (=> d!20589 (= (contains!753 (toList!751 lt!37559) (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!38345)))

(declare-fun b!82152 () Bool)

(declare-fun e!53598 () Bool)

(assert (=> b!82152 (= e!53599 e!53598)))

(declare-fun res!42641 () Bool)

(assert (=> b!82152 (=> res!42641 e!53598)))

(assert (=> b!82152 (= res!42641 (= (h!2123 (toList!751 lt!37559)) (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!82153 () Bool)

(assert (=> b!82153 (= e!53598 (contains!753 (t!5209 (toList!751 lt!37559)) (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!20589 res!42642) b!82152))

(assert (= (and b!82152 (not res!42641)) b!82153))

(declare-fun m!84725 () Bool)

(assert (=> d!20589 m!84725))

(declare-fun m!84727 () Bool)

(assert (=> d!20589 m!84727))

(declare-fun m!84729 () Bool)

(assert (=> b!82153 m!84729))

(assert (=> b!80780 d!20589))

(assert (=> b!80864 d!20309))

(declare-fun b!82155 () Bool)

(declare-fun e!53600 () Option!143)

(declare-fun e!53601 () Option!143)

(assert (=> b!82155 (= e!53600 e!53601)))

(declare-fun c!13047 () Bool)

(assert (=> b!82155 (= c!13047 (and ((_ is Cons!1534) (toList!751 lt!37716)) (not (= (_1!1111 (h!2123 (toList!751 lt!37716))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20591 () Bool)

(declare-fun c!13046 () Bool)

(assert (=> d!20591 (= c!13046 (and ((_ is Cons!1534) (toList!751 lt!37716)) (= (_1!1111 (h!2123 (toList!751 lt!37716))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20591 (= (getValueByKey!137 (toList!751 lt!37716) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53600)))

(declare-fun b!82157 () Bool)

(assert (=> b!82157 (= e!53601 None!141)))

(declare-fun b!82156 () Bool)

(assert (=> b!82156 (= e!53601 (getValueByKey!137 (t!5209 (toList!751 lt!37716)) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82154 () Bool)

(assert (=> b!82154 (= e!53600 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37716)))))))

(assert (= (and d!20591 c!13046) b!82154))

(assert (= (and d!20591 (not c!13046)) b!82155))

(assert (= (and b!82155 c!13047) b!82156))

(assert (= (and b!82155 (not c!13047)) b!82157))

(declare-fun m!84731 () Bool)

(assert (=> b!82156 m!84731))

(assert (=> b!80965 d!20591))

(declare-fun d!20593 () Bool)

(declare-fun e!53602 () Bool)

(assert (=> d!20593 e!53602))

(declare-fun res!42643 () Bool)

(assert (=> d!20593 (=> res!42643 e!53602)))

(declare-fun lt!38348 () Bool)

(assert (=> d!20593 (= res!42643 (not lt!38348))))

(declare-fun lt!38347 () Bool)

(assert (=> d!20593 (= lt!38348 lt!38347)))

(declare-fun lt!38346 () Unit!2350)

(declare-fun e!53603 () Unit!2350)

(assert (=> d!20593 (= lt!38346 e!53603)))

(declare-fun c!13048 () Bool)

(assert (=> d!20593 (= c!13048 lt!38347)))

(assert (=> d!20593 (= lt!38347 (containsKey!141 (toList!751 lt!37746) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20593 (= (contains!750 lt!37746 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) lt!38348)))

(declare-fun b!82158 () Bool)

(declare-fun lt!38349 () Unit!2350)

(assert (=> b!82158 (= e!53603 lt!38349)))

(assert (=> b!82158 (= lt!38349 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37746) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> b!82158 (isDefined!91 (getValueByKey!137 (toList!751 lt!37746) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!82159 () Bool)

(declare-fun Unit!2420 () Unit!2350)

(assert (=> b!82159 (= e!53603 Unit!2420)))

(declare-fun b!82160 () Bool)

(assert (=> b!82160 (= e!53602 (isDefined!91 (getValueByKey!137 (toList!751 lt!37746) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(assert (= (and d!20593 c!13048) b!82158))

(assert (= (and d!20593 (not c!13048)) b!82159))

(assert (= (and d!20593 (not res!42643)) b!82160))

(declare-fun m!84733 () Bool)

(assert (=> d!20593 m!84733))

(declare-fun m!84735 () Bool)

(assert (=> b!82158 m!84735))

(assert (=> b!82158 m!82725))

(assert (=> b!82158 m!82725))

(declare-fun m!84737 () Bool)

(assert (=> b!82158 m!84737))

(assert (=> b!82160 m!82725))

(assert (=> b!82160 m!82725))

(assert (=> b!82160 m!84737))

(assert (=> d!19865 d!20593))

(declare-fun b!82162 () Bool)

(declare-fun e!53604 () Option!143)

(declare-fun e!53605 () Option!143)

(assert (=> b!82162 (= e!53604 e!53605)))

(declare-fun c!13050 () Bool)

(assert (=> b!82162 (= c!13050 (and ((_ is Cons!1534) lt!37743) (not (= (_1!1111 (h!2123 lt!37743)) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))))

(declare-fun c!13049 () Bool)

(declare-fun d!20595 () Bool)

(assert (=> d!20595 (= c!13049 (and ((_ is Cons!1534) lt!37743) (= (_1!1111 (h!2123 lt!37743)) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(assert (=> d!20595 (= (getValueByKey!137 lt!37743 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) e!53604)))

(declare-fun b!82164 () Bool)

(assert (=> b!82164 (= e!53605 None!141)))

(declare-fun b!82163 () Bool)

(assert (=> b!82163 (= e!53605 (getValueByKey!137 (t!5209 lt!37743) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!82161 () Bool)

(assert (=> b!82161 (= e!53604 (Some!142 (_2!1111 (h!2123 lt!37743))))))

(assert (= (and d!20595 c!13049) b!82161))

(assert (= (and d!20595 (not c!13049)) b!82162))

(assert (= (and b!82162 c!13050) b!82163))

(assert (= (and b!82162 (not c!13050)) b!82164))

(declare-fun m!84739 () Bool)

(assert (=> b!82163 m!84739))

(assert (=> d!19865 d!20595))

(declare-fun d!20597 () Bool)

(assert (=> d!20597 (= (getValueByKey!137 lt!37743 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) (Some!142 (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun lt!38350 () Unit!2350)

(assert (=> d!20597 (= lt!38350 (choose!478 lt!37743 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun e!53606 () Bool)

(assert (=> d!20597 e!53606))

(declare-fun res!42644 () Bool)

(assert (=> d!20597 (=> (not res!42644) (not e!53606))))

(assert (=> d!20597 (= res!42644 (isStrictlySorted!291 lt!37743))))

(assert (=> d!20597 (= (lemmaContainsTupThenGetReturnValue!56 lt!37743 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) lt!38350)))

(declare-fun b!82165 () Bool)

(declare-fun res!42645 () Bool)

(assert (=> b!82165 (=> (not res!42645) (not e!53606))))

(assert (=> b!82165 (= res!42645 (containsKey!141 lt!37743 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!82166 () Bool)

(assert (=> b!82166 (= e!53606 (contains!753 lt!37743 (tuple2!2203 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(assert (= (and d!20597 res!42644) b!82165))

(assert (= (and b!82165 res!42645) b!82166))

(assert (=> d!20597 m!82719))

(declare-fun m!84741 () Bool)

(assert (=> d!20597 m!84741))

(declare-fun m!84743 () Bool)

(assert (=> d!20597 m!84743))

(declare-fun m!84745 () Bool)

(assert (=> b!82165 m!84745))

(declare-fun m!84747 () Bool)

(assert (=> b!82166 m!84747))

(assert (=> d!19865 d!20597))

(declare-fun d!20599 () Bool)

(declare-fun e!53608 () Bool)

(assert (=> d!20599 e!53608))

(declare-fun res!42646 () Bool)

(assert (=> d!20599 (=> (not res!42646) (not e!53608))))

(declare-fun lt!38351 () List!1538)

(assert (=> d!20599 (= res!42646 (isStrictlySorted!291 lt!38351))))

(declare-fun e!53607 () List!1538)

(assert (=> d!20599 (= lt!38351 e!53607)))

(declare-fun c!13054 () Bool)

(assert (=> d!20599 (= c!13054 (and ((_ is Cons!1534) (toList!751 (ite c!12617 call!7476 call!7488))) (bvslt (_1!1111 (h!2123 (toList!751 (ite c!12617 call!7476 call!7488)))) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(assert (=> d!20599 (isStrictlySorted!291 (toList!751 (ite c!12617 call!7476 call!7488)))))

(assert (=> d!20599 (= (insertStrictlySorted!58 (toList!751 (ite c!12617 call!7476 call!7488)) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) lt!38351)))

(declare-fun b!82167 () Bool)

(assert (=> b!82167 (= e!53608 (contains!753 lt!38351 (tuple2!2203 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun bm!7666 () Bool)

(declare-fun call!7669 () List!1538)

(declare-fun call!7670 () List!1538)

(assert (=> bm!7666 (= call!7669 call!7670)))

(declare-fun b!82168 () Bool)

(declare-fun res!42647 () Bool)

(assert (=> b!82168 (=> (not res!42647) (not e!53608))))

(assert (=> b!82168 (= res!42647 (containsKey!141 lt!38351 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!82169 () Bool)

(declare-fun e!53610 () List!1538)

(assert (=> b!82169 (= e!53610 (insertStrictlySorted!58 (t!5209 (toList!751 (ite c!12617 call!7476 call!7488))) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!82170 () Bool)

(assert (=> b!82170 (= e!53607 call!7670)))

(declare-fun bm!7667 () Bool)

(assert (=> bm!7667 (= call!7670 ($colon$colon!69 e!53610 (ite c!13054 (h!2123 (toList!751 (ite c!12617 call!7476 call!7488))) (tuple2!2203 (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (_2!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))))

(declare-fun c!13052 () Bool)

(assert (=> bm!7667 (= c!13052 c!13054)))

(declare-fun b!82171 () Bool)

(declare-fun c!13053 () Bool)

(declare-fun c!13051 () Bool)

(assert (=> b!82171 (= e!53610 (ite c!13051 (t!5209 (toList!751 (ite c!12617 call!7476 call!7488))) (ite c!13053 (Cons!1534 (h!2123 (toList!751 (ite c!12617 call!7476 call!7488))) (t!5209 (toList!751 (ite c!12617 call!7476 call!7488)))) Nil!1535)))))

(declare-fun b!82172 () Bool)

(declare-fun e!53611 () List!1538)

(assert (=> b!82172 (= e!53611 call!7669)))

(declare-fun b!82173 () Bool)

(declare-fun e!53609 () List!1538)

(declare-fun call!7671 () List!1538)

(assert (=> b!82173 (= e!53609 call!7671)))

(declare-fun b!82174 () Bool)

(assert (=> b!82174 (= c!13053 (and ((_ is Cons!1534) (toList!751 (ite c!12617 call!7476 call!7488))) (bvsgt (_1!1111 (h!2123 (toList!751 (ite c!12617 call!7476 call!7488)))) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(assert (=> b!82174 (= e!53611 e!53609)))

(declare-fun b!82175 () Bool)

(assert (=> b!82175 (= e!53609 call!7671)))

(declare-fun bm!7668 () Bool)

(assert (=> bm!7668 (= call!7671 call!7669)))

(declare-fun b!82176 () Bool)

(assert (=> b!82176 (= e!53607 e!53611)))

(assert (=> b!82176 (= c!13051 (and ((_ is Cons!1534) (toList!751 (ite c!12617 call!7476 call!7488))) (= (_1!1111 (h!2123 (toList!751 (ite c!12617 call!7476 call!7488)))) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(assert (= (and d!20599 c!13054) b!82170))

(assert (= (and d!20599 (not c!13054)) b!82176))

(assert (= (and b!82176 c!13051) b!82172))

(assert (= (and b!82176 (not c!13051)) b!82174))

(assert (= (and b!82174 c!13053) b!82173))

(assert (= (and b!82174 (not c!13053)) b!82175))

(assert (= (or b!82173 b!82175) bm!7668))

(assert (= (or b!82172 bm!7668) bm!7666))

(assert (= (or b!82170 bm!7666) bm!7667))

(assert (= (and bm!7667 c!13052) b!82169))

(assert (= (and bm!7667 (not c!13052)) b!82171))

(assert (= (and d!20599 res!42646) b!82168))

(assert (= (and b!82168 res!42647) b!82167))

(declare-fun m!84749 () Bool)

(assert (=> b!82168 m!84749))

(declare-fun m!84751 () Bool)

(assert (=> bm!7667 m!84751))

(declare-fun m!84753 () Bool)

(assert (=> d!20599 m!84753))

(declare-fun m!84755 () Bool)

(assert (=> d!20599 m!84755))

(declare-fun m!84757 () Bool)

(assert (=> b!82169 m!84757))

(declare-fun m!84759 () Bool)

(assert (=> b!82167 m!84759))

(assert (=> d!19865 d!20599))

(assert (=> b!80936 d!20549))

(assert (=> b!80936 d!19699))

(assert (=> b!80936 d!19809))

(declare-fun b!82178 () Bool)

(declare-fun e!53612 () Option!143)

(declare-fun e!53613 () Option!143)

(assert (=> b!82178 (= e!53612 e!53613)))

(declare-fun c!13056 () Bool)

(assert (=> b!82178 (= c!13056 (and ((_ is Cons!1534) (t!5209 lt!37299)) (not (= (_1!1111 (h!2123 (t!5209 lt!37299))) (_1!1111 lt!37197)))))))

(declare-fun d!20601 () Bool)

(declare-fun c!13055 () Bool)

(assert (=> d!20601 (= c!13055 (and ((_ is Cons!1534) (t!5209 lt!37299)) (= (_1!1111 (h!2123 (t!5209 lt!37299))) (_1!1111 lt!37197))))))

(assert (=> d!20601 (= (getValueByKey!137 (t!5209 lt!37299) (_1!1111 lt!37197)) e!53612)))

(declare-fun b!82180 () Bool)

(assert (=> b!82180 (= e!53613 None!141)))

(declare-fun b!82179 () Bool)

(assert (=> b!82179 (= e!53613 (getValueByKey!137 (t!5209 (t!5209 lt!37299)) (_1!1111 lt!37197)))))

(declare-fun b!82177 () Bool)

(assert (=> b!82177 (= e!53612 (Some!142 (_2!1111 (h!2123 (t!5209 lt!37299)))))))

(assert (= (and d!20601 c!13055) b!82177))

(assert (= (and d!20601 (not c!13055)) b!82178))

(assert (= (and b!82178 c!13056) b!82179))

(assert (= (and b!82178 (not c!13056)) b!82180))

(declare-fun m!84761 () Bool)

(assert (=> b!82179 m!84761))

(assert (=> b!81015 d!20601))

(declare-fun b!82193 () Bool)

(declare-fun e!53622 () SeekEntryResult!251)

(declare-fun e!53621 () SeekEntryResult!251)

(assert (=> b!82193 (= e!53622 e!53621)))

(declare-fun c!13065 () Bool)

(declare-fun lt!38356 () (_ BitVec 64))

(assert (=> b!82193 (= c!13065 (= lt!38356 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun b!82194 () Bool)

(declare-fun e!53620 () SeekEntryResult!251)

(assert (=> b!82194 (= e!53620 (MissingVacant!251 (index!3141 lt!37603)))))

(declare-fun b!82195 () Bool)

(assert (=> b!82195 (= e!53622 Undefined!251)))

(declare-fun b!82196 () Bool)

(declare-fun c!13063 () Bool)

(assert (=> b!82196 (= c!13063 (= lt!38356 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82196 (= e!53621 e!53620)))

(declare-fun b!82197 () Bool)

(assert (=> b!82197 (= e!53621 (Found!251 (index!3141 lt!37603)))))

(declare-fun b!82198 () Bool)

(assert (=> b!82198 (= e!53620 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11702 lt!37603) #b00000000000000000000000000000001) (nextIndex!0 (index!3141 lt!37603) (x!11702 lt!37603) (mask!6299 newMap!16)) (index!3141 lt!37603) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(declare-fun lt!38357 () SeekEntryResult!251)

(declare-fun d!20603 () Bool)

(assert (=> d!20603 (and (or ((_ is Undefined!251) lt!38357) (not ((_ is Found!251) lt!38357)) (and (bvsge (index!3140 lt!38357) #b00000000000000000000000000000000) (bvslt (index!3140 lt!38357) (size!2142 (_keys!3957 newMap!16))))) (or ((_ is Undefined!251) lt!38357) ((_ is Found!251) lt!38357) (not ((_ is MissingVacant!251) lt!38357)) (not (= (index!3142 lt!38357) (index!3141 lt!37603))) (and (bvsge (index!3142 lt!38357) #b00000000000000000000000000000000) (bvslt (index!3142 lt!38357) (size!2142 (_keys!3957 newMap!16))))) (or ((_ is Undefined!251) lt!38357) (ite ((_ is Found!251) lt!38357) (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!38357)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) (and ((_ is MissingVacant!251) lt!38357) (= (index!3142 lt!38357) (index!3141 lt!37603)) (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3142 lt!38357)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!20603 (= lt!38357 e!53622)))

(declare-fun c!13064 () Bool)

(assert (=> d!20603 (= c!13064 (bvsge (x!11702 lt!37603) #b01111111111111111111111111111110))))

(assert (=> d!20603 (= lt!38356 (select (arr!1900 (_keys!3957 newMap!16)) (index!3141 lt!37603)))))

(assert (=> d!20603 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20603 (= (seekKeyOrZeroReturnVacant!0 (x!11702 lt!37603) (index!3141 lt!37603) (index!3141 lt!37603) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)) lt!38357)))

(assert (= (and d!20603 c!13064) b!82195))

(assert (= (and d!20603 (not c!13064)) b!82193))

(assert (= (and b!82193 c!13065) b!82197))

(assert (= (and b!82193 (not c!13065)) b!82196))

(assert (= (and b!82196 c!13063) b!82194))

(assert (= (and b!82196 (not c!13063)) b!82198))

(declare-fun m!84763 () Bool)

(assert (=> b!82198 m!84763))

(assert (=> b!82198 m!84763))

(assert (=> b!82198 m!81585))

(declare-fun m!84765 () Bool)

(assert (=> b!82198 m!84765))

(declare-fun m!84767 () Bool)

(assert (=> d!20603 m!84767))

(declare-fun m!84769 () Bool)

(assert (=> d!20603 m!84769))

(assert (=> d!20603 m!82323))

(assert (=> d!20603 m!82043))

(assert (=> b!80862 d!20603))

(declare-fun d!20605 () Bool)

(assert (=> d!20605 (= (get!1198 (getValueByKey!137 (toList!751 lt!37379) lt!37375)) (v!2614 (getValueByKey!137 (toList!751 lt!37379) lt!37375)))))

(assert (=> d!19735 d!20605))

(declare-fun b!82200 () Bool)

(declare-fun e!53623 () Option!143)

(declare-fun e!53624 () Option!143)

(assert (=> b!82200 (= e!53623 e!53624)))

(declare-fun c!13067 () Bool)

(assert (=> b!82200 (= c!13067 (and ((_ is Cons!1534) (toList!751 lt!37379)) (not (= (_1!1111 (h!2123 (toList!751 lt!37379))) lt!37375))))))

(declare-fun d!20607 () Bool)

(declare-fun c!13066 () Bool)

(assert (=> d!20607 (= c!13066 (and ((_ is Cons!1534) (toList!751 lt!37379)) (= (_1!1111 (h!2123 (toList!751 lt!37379))) lt!37375)))))

(assert (=> d!20607 (= (getValueByKey!137 (toList!751 lt!37379) lt!37375) e!53623)))

(declare-fun b!82202 () Bool)

(assert (=> b!82202 (= e!53624 None!141)))

(declare-fun b!82201 () Bool)

(assert (=> b!82201 (= e!53624 (getValueByKey!137 (t!5209 (toList!751 lt!37379)) lt!37375))))

(declare-fun b!82199 () Bool)

(assert (=> b!82199 (= e!53623 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37379)))))))

(assert (= (and d!20607 c!13066) b!82199))

(assert (= (and d!20607 (not c!13066)) b!82200))

(assert (= (and b!82200 c!13067) b!82201))

(assert (= (and b!82200 (not c!13067)) b!82202))

(declare-fun m!84771 () Bool)

(assert (=> b!82201 m!84771))

(assert (=> d!19735 d!20607))

(declare-fun d!20609 () Bool)

(declare-fun lt!38358 () Bool)

(assert (=> d!20609 (= lt!38358 (select (content!84 (t!5209 (toList!751 lt!37298))) lt!37188))))

(declare-fun e!53626 () Bool)

(assert (=> d!20609 (= lt!38358 e!53626)))

(declare-fun res!42649 () Bool)

(assert (=> d!20609 (=> (not res!42649) (not e!53626))))

(assert (=> d!20609 (= res!42649 ((_ is Cons!1534) (t!5209 (toList!751 lt!37298))))))

(assert (=> d!20609 (= (contains!753 (t!5209 (toList!751 lt!37298)) lt!37188) lt!38358)))

(declare-fun b!82203 () Bool)

(declare-fun e!53625 () Bool)

(assert (=> b!82203 (= e!53626 e!53625)))

(declare-fun res!42648 () Bool)

(assert (=> b!82203 (=> res!42648 e!53625)))

(assert (=> b!82203 (= res!42648 (= (h!2123 (t!5209 (toList!751 lt!37298))) lt!37188))))

(declare-fun b!82204 () Bool)

(assert (=> b!82204 (= e!53625 (contains!753 (t!5209 (t!5209 (toList!751 lt!37298))) lt!37188))))

(assert (= (and d!20609 res!42649) b!82203))

(assert (= (and b!82203 (not res!42648)) b!82204))

(assert (=> d!20609 m!84397))

(declare-fun m!84773 () Bool)

(assert (=> d!20609 m!84773))

(declare-fun m!84775 () Bool)

(assert (=> b!82204 m!84775))

(assert (=> b!81076 d!20609))

(declare-fun d!20611 () Bool)

(assert (=> d!20611 (= ($colon$colon!69 e!52900 (ite c!12731 (h!2123 (toList!751 lt!37190)) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197)))) (Cons!1534 (ite c!12731 (h!2123 (toList!751 lt!37190)) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))) e!52900))))

(assert (=> bm!7541 d!20611))

(assert (=> b!81172 d!20331))

(assert (=> b!81172 d!20113))

(declare-fun d!20613 () Bool)

(declare-fun res!42650 () Bool)

(declare-fun e!53627 () Bool)

(assert (=> d!20613 (=> res!42650 e!53627)))

(assert (=> d!20613 (= res!42650 (and ((_ is Cons!1534) (toList!751 lt!37326)) (= (_1!1111 (h!2123 (toList!751 lt!37326))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20613 (= (containsKey!141 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000) e!53627)))

(declare-fun b!82205 () Bool)

(declare-fun e!53628 () Bool)

(assert (=> b!82205 (= e!53627 e!53628)))

(declare-fun res!42651 () Bool)

(assert (=> b!82205 (=> (not res!42651) (not e!53628))))

(assert (=> b!82205 (= res!42651 (and (or (not ((_ is Cons!1534) (toList!751 lt!37326))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37326))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1534) (toList!751 lt!37326)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37326))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82206 () Bool)

(assert (=> b!82206 (= e!53628 (containsKey!141 (t!5209 (toList!751 lt!37326)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20613 (not res!42650)) b!82205))

(assert (= (and b!82205 res!42651) b!82206))

(declare-fun m!84777 () Bool)

(assert (=> b!82206 m!84777))

(assert (=> d!19793 d!20613))

(assert (=> bm!7525 d!20421))

(declare-fun b!82208 () Bool)

(declare-fun e!53629 () Option!143)

(declare-fun e!53630 () Option!143)

(assert (=> b!82208 (= e!53629 e!53630)))

(declare-fun c!13069 () Bool)

(assert (=> b!82208 (= c!13069 (and ((_ is Cons!1534) (toList!751 lt!37572)) (not (= (_1!1111 (h!2123 (toList!751 lt!37572))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!13068 () Bool)

(declare-fun d!20615 () Bool)

(assert (=> d!20615 (= c!13068 (and ((_ is Cons!1534) (toList!751 lt!37572)) (= (_1!1111 (h!2123 (toList!751 lt!37572))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20615 (= (getValueByKey!137 (toList!751 lt!37572) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) e!53629)))

(declare-fun b!82210 () Bool)

(assert (=> b!82210 (= e!53630 None!141)))

(declare-fun b!82209 () Bool)

(assert (=> b!82209 (= e!53630 (getValueByKey!137 (t!5209 (toList!751 lt!37572)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!82207 () Bool)

(assert (=> b!82207 (= e!53629 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37572)))))))

(assert (= (and d!20615 c!13068) b!82207))

(assert (= (and d!20615 (not c!13068)) b!82208))

(assert (= (and b!82208 c!13069) b!82209))

(assert (= (and b!82208 (not c!13069)) b!82210))

(declare-fun m!84779 () Bool)

(assert (=> b!82209 m!84779))

(assert (=> b!80786 d!20615))

(assert (=> b!80922 d!19937))

(declare-fun d!20617 () Bool)

(declare-fun res!42652 () Bool)

(declare-fun e!53631 () Bool)

(assert (=> d!20617 (=> res!42652 e!53631)))

(assert (=> d!20617 (= res!42652 (and ((_ is Cons!1534) lt!37303) (= (_1!1111 (h!2123 lt!37303)) (_1!1111 lt!37202))))))

(assert (=> d!20617 (= (containsKey!141 lt!37303 (_1!1111 lt!37202)) e!53631)))

(declare-fun b!82211 () Bool)

(declare-fun e!53632 () Bool)

(assert (=> b!82211 (= e!53631 e!53632)))

(declare-fun res!42653 () Bool)

(assert (=> b!82211 (=> (not res!42653) (not e!53632))))

(assert (=> b!82211 (= res!42653 (and (or (not ((_ is Cons!1534) lt!37303)) (bvsle (_1!1111 (h!2123 lt!37303)) (_1!1111 lt!37202))) ((_ is Cons!1534) lt!37303) (bvslt (_1!1111 (h!2123 lt!37303)) (_1!1111 lt!37202))))))

(declare-fun b!82212 () Bool)

(assert (=> b!82212 (= e!53632 (containsKey!141 (t!5209 lt!37303) (_1!1111 lt!37202)))))

(assert (= (and d!20617 (not res!42652)) b!82211))

(assert (= (and b!82211 res!42653) b!82212))

(declare-fun m!84781 () Bool)

(assert (=> b!82212 m!84781))

(assert (=> b!81135 d!20617))

(assert (=> b!80953 d!19765))

(declare-fun d!20619 () Bool)

(assert (not d!20619))

(assert (=> b!81044 d!20619))

(declare-fun d!20621 () Bool)

(assert (=> d!20621 (isDefined!91 (getValueByKey!137 (toList!751 lt!37290) (_1!1111 lt!37188)))))

(declare-fun lt!38359 () Unit!2350)

(assert (=> d!20621 (= lt!38359 (choose!485 (toList!751 lt!37290) (_1!1111 lt!37188)))))

(declare-fun e!53633 () Bool)

(assert (=> d!20621 e!53633))

(declare-fun res!42654 () Bool)

(assert (=> d!20621 (=> (not res!42654) (not e!53633))))

(assert (=> d!20621 (= res!42654 (isStrictlySorted!291 (toList!751 lt!37290)))))

(assert (=> d!20621 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37290) (_1!1111 lt!37188)) lt!38359)))

(declare-fun b!82213 () Bool)

(assert (=> b!82213 (= e!53633 (containsKey!141 (toList!751 lt!37290) (_1!1111 lt!37188)))))

(assert (= (and d!20621 res!42654) b!82213))

(assert (=> d!20621 m!81791))

(assert (=> d!20621 m!81791))

(assert (=> d!20621 m!81999))

(declare-fun m!84783 () Bool)

(assert (=> d!20621 m!84783))

(declare-fun m!84785 () Bool)

(assert (=> d!20621 m!84785))

(assert (=> b!82213 m!81995))

(assert (=> b!80636 d!20621))

(declare-fun d!20623 () Bool)

(assert (=> d!20623 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37290) (_1!1111 lt!37188))) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37290) (_1!1111 lt!37188)))))))

(declare-fun bs!3475 () Bool)

(assert (= bs!3475 d!20623))

(assert (=> bs!3475 m!81791))

(declare-fun m!84787 () Bool)

(assert (=> bs!3475 m!84787))

(assert (=> b!80636 d!20623))

(assert (=> b!80636 d!19767))

(declare-fun d!20625 () Bool)

(assert (=> d!20625 (= (apply!80 lt!37510 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (getValueByKey!137 (toList!751 lt!37510) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3476 () Bool)

(assert (= bs!3476 d!20625))

(assert (=> bs!3476 m!81991))

(assert (=> bs!3476 m!83649))

(assert (=> bs!3476 m!83649))

(declare-fun m!84789 () Bool)

(assert (=> bs!3476 m!84789))

(assert (=> b!80705 d!20625))

(declare-fun d!20627 () Bool)

(declare-fun c!13070 () Bool)

(assert (=> d!20627 (= c!13070 ((_ is ValueCellFull!915) (select (arr!1901 (_values!2276 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!53634 () V!3003)

(assert (=> d!20627 (= (get!1195 (select (arr!1901 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53634)))

(declare-fun b!82214 () Bool)

(assert (=> b!82214 (= e!53634 (get!1196 (select (arr!1901 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82215 () Bool)

(assert (=> b!82215 (= e!53634 (get!1197 (select (arr!1901 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20627 c!13070) b!82214))

(assert (= (and d!20627 (not c!13070)) b!82215))

(assert (=> b!82214 m!82029))

(assert (=> b!82214 m!82031))

(declare-fun m!84791 () Bool)

(assert (=> b!82214 m!84791))

(assert (=> b!82215 m!82029))

(assert (=> b!82215 m!82031))

(declare-fun m!84793 () Bool)

(assert (=> b!82215 m!84793))

(assert (=> b!80705 d!20627))

(assert (=> d!19817 d!19821))

(assert (=> d!19817 d!19819))

(declare-fun d!20629 () Bool)

(assert (=> d!20629 (not (contains!750 (+!111 lt!37325 (tuple2!2203 lt!37321 lt!37324)) lt!37327))))

(assert (=> d!20629 true))

(declare-fun _$36!307 () Unit!2350)

(assert (=> d!20629 (= (choose!484 lt!37325 lt!37321 lt!37324 lt!37327) _$36!307)))

(declare-fun bs!3477 () Bool)

(assert (= bs!3477 d!20629))

(assert (=> bs!3477 m!81843))

(assert (=> bs!3477 m!81843))

(assert (=> bs!3477 m!81853))

(assert (=> d!19817 d!20629))

(declare-fun d!20631 () Bool)

(declare-fun e!53635 () Bool)

(assert (=> d!20631 e!53635))

(declare-fun res!42655 () Bool)

(assert (=> d!20631 (=> res!42655 e!53635)))

(declare-fun lt!38362 () Bool)

(assert (=> d!20631 (= res!42655 (not lt!38362))))

(declare-fun lt!38361 () Bool)

(assert (=> d!20631 (= lt!38362 lt!38361)))

(declare-fun lt!38360 () Unit!2350)

(declare-fun e!53636 () Unit!2350)

(assert (=> d!20631 (= lt!38360 e!53636)))

(declare-fun c!13071 () Bool)

(assert (=> d!20631 (= c!13071 lt!38361)))

(assert (=> d!20631 (= lt!38361 (containsKey!141 (toList!751 lt!37325) lt!37327))))

(assert (=> d!20631 (= (contains!750 lt!37325 lt!37327) lt!38362)))

(declare-fun b!82217 () Bool)

(declare-fun lt!38363 () Unit!2350)

(assert (=> b!82217 (= e!53636 lt!38363)))

(assert (=> b!82217 (= lt!38363 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37325) lt!37327))))

(assert (=> b!82217 (isDefined!91 (getValueByKey!137 (toList!751 lt!37325) lt!37327))))

(declare-fun b!82218 () Bool)

(declare-fun Unit!2421 () Unit!2350)

(assert (=> b!82218 (= e!53636 Unit!2421)))

(declare-fun b!82219 () Bool)

(assert (=> b!82219 (= e!53635 (isDefined!91 (getValueByKey!137 (toList!751 lt!37325) lt!37327)))))

(assert (= (and d!20631 c!13071) b!82217))

(assert (= (and d!20631 (not c!13071)) b!82218))

(assert (= (and d!20631 (not res!42655)) b!82219))

(declare-fun m!84795 () Bool)

(assert (=> d!20631 m!84795))

(declare-fun m!84797 () Bool)

(assert (=> b!82217 m!84797))

(declare-fun m!84799 () Bool)

(assert (=> b!82217 m!84799))

(assert (=> b!82217 m!84799))

(declare-fun m!84801 () Bool)

(assert (=> b!82217 m!84801))

(assert (=> b!82219 m!84799))

(assert (=> b!82219 m!84799))

(assert (=> b!82219 m!84801))

(assert (=> d!19817 d!20631))

(assert (=> d!19691 d!19689))

(declare-fun d!20633 () Bool)

(assert (=> d!20633 (= (getValueByKey!137 lt!37287 (_1!1111 lt!37188)) (Some!142 (_2!1111 lt!37188)))))

(assert (=> d!20633 true))

(declare-fun _$22!404 () Unit!2350)

(assert (=> d!20633 (= (choose!478 lt!37287 (_1!1111 lt!37188) (_2!1111 lt!37188)) _$22!404)))

(declare-fun bs!3478 () Bool)

(assert (= bs!3478 d!20633))

(assert (=> bs!3478 m!81785))

(assert (=> d!19691 d!20633))

(declare-fun d!20635 () Bool)

(declare-fun res!42656 () Bool)

(declare-fun e!53637 () Bool)

(assert (=> d!20635 (=> res!42656 e!53637)))

(assert (=> d!20635 (= res!42656 (or ((_ is Nil!1535) lt!37287) ((_ is Nil!1535) (t!5209 lt!37287))))))

(assert (=> d!20635 (= (isStrictlySorted!291 lt!37287) e!53637)))

(declare-fun b!82220 () Bool)

(declare-fun e!53638 () Bool)

(assert (=> b!82220 (= e!53637 e!53638)))

(declare-fun res!42657 () Bool)

(assert (=> b!82220 (=> (not res!42657) (not e!53638))))

(assert (=> b!82220 (= res!42657 (bvslt (_1!1111 (h!2123 lt!37287)) (_1!1111 (h!2123 (t!5209 lt!37287)))))))

(declare-fun b!82221 () Bool)

(assert (=> b!82221 (= e!53638 (isStrictlySorted!291 (t!5209 lt!37287)))))

(assert (= (and d!20635 (not res!42656)) b!82220))

(assert (= (and b!82220 res!42657) b!82221))

(declare-fun m!84803 () Bool)

(assert (=> b!82221 m!84803))

(assert (=> d!19691 d!20635))

(declare-fun d!20637 () Bool)

(declare-fun e!53639 () Bool)

(assert (=> d!20637 e!53639))

(declare-fun res!42658 () Bool)

(assert (=> d!20637 (=> res!42658 e!53639)))

(declare-fun lt!38366 () Bool)

(assert (=> d!20637 (= res!42658 (not lt!38366))))

(declare-fun lt!38365 () Bool)

(assert (=> d!20637 (= lt!38366 lt!38365)))

(declare-fun lt!38364 () Unit!2350)

(declare-fun e!53640 () Unit!2350)

(assert (=> d!20637 (= lt!38364 e!53640)))

(declare-fun c!13072 () Bool)

(assert (=> d!20637 (= c!13072 lt!38365)))

(assert (=> d!20637 (= lt!38365 (containsKey!141 (toList!751 lt!37609) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!20637 (= (contains!750 lt!37609 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!38366)))

(declare-fun b!82222 () Bool)

(declare-fun lt!38367 () Unit!2350)

(assert (=> b!82222 (= e!53640 lt!38367)))

(assert (=> b!82222 (= lt!38367 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37609) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!82222 (isDefined!91 (getValueByKey!137 (toList!751 lt!37609) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!82223 () Bool)

(declare-fun Unit!2422 () Unit!2350)

(assert (=> b!82223 (= e!53640 Unit!2422)))

(declare-fun b!82224 () Bool)

(assert (=> b!82224 (= e!53639 (isDefined!91 (getValueByKey!137 (toList!751 lt!37609) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!20637 c!13072) b!82222))

(assert (= (and d!20637 (not c!13072)) b!82223))

(assert (= (and d!20637 (not res!42658)) b!82224))

(assert (=> d!20637 m!82345))

(declare-fun m!84805 () Bool)

(assert (=> d!20637 m!84805))

(assert (=> b!82222 m!82345))

(declare-fun m!84807 () Bool)

(assert (=> b!82222 m!84807))

(assert (=> b!82222 m!82345))

(assert (=> b!82222 m!84027))

(assert (=> b!82222 m!84027))

(declare-fun m!84809 () Bool)

(assert (=> b!82222 m!84809))

(assert (=> b!82224 m!82345))

(assert (=> b!82224 m!84027))

(assert (=> b!82224 m!84027))

(assert (=> b!82224 m!84809))

(assert (=> b!80872 d!20637))

(declare-fun d!20639 () Bool)

(declare-fun res!42659 () Bool)

(declare-fun e!53641 () Bool)

(assert (=> d!20639 (=> res!42659 e!53641)))

(assert (=> d!20639 (= res!42659 (and ((_ is Cons!1534) lt!37530) (= (_1!1111 (h!2123 lt!37530)) (_1!1111 lt!37197))))))

(assert (=> d!20639 (= (containsKey!141 lt!37530 (_1!1111 lt!37197)) e!53641)))

(declare-fun b!82225 () Bool)

(declare-fun e!53642 () Bool)

(assert (=> b!82225 (= e!53641 e!53642)))

(declare-fun res!42660 () Bool)

(assert (=> b!82225 (=> (not res!42660) (not e!53642))))

(assert (=> b!82225 (= res!42660 (and (or (not ((_ is Cons!1534) lt!37530)) (bvsle (_1!1111 (h!2123 lt!37530)) (_1!1111 lt!37197))) ((_ is Cons!1534) lt!37530) (bvslt (_1!1111 (h!2123 lt!37530)) (_1!1111 lt!37197))))))

(declare-fun b!82226 () Bool)

(assert (=> b!82226 (= e!53642 (containsKey!141 (t!5209 lt!37530) (_1!1111 lt!37197)))))

(assert (= (and d!20639 (not res!42659)) b!82225))

(assert (= (and b!82225 res!42660) b!82226))

(declare-fun m!84811 () Bool)

(assert (=> b!82226 m!84811))

(assert (=> b!80737 d!20639))

(declare-fun b!82228 () Bool)

(declare-fun e!53643 () Option!143)

(declare-fun e!53644 () Option!143)

(assert (=> b!82228 (= e!53643 e!53644)))

(declare-fun c!13074 () Bool)

(assert (=> b!82228 (= c!13074 (and ((_ is Cons!1534) (toList!751 lt!37746)) (not (= (_1!1111 (h!2123 (toList!751 lt!37746))) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))))

(declare-fun d!20641 () Bool)

(declare-fun c!13073 () Bool)

(assert (=> d!20641 (= c!13073 (and ((_ is Cons!1534) (toList!751 lt!37746)) (= (_1!1111 (h!2123 (toList!751 lt!37746))) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(assert (=> d!20641 (= (getValueByKey!137 (toList!751 lt!37746) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))) e!53643)))

(declare-fun b!82230 () Bool)

(assert (=> b!82230 (= e!53644 None!141)))

(declare-fun b!82229 () Bool)

(assert (=> b!82229 (= e!53644 (getValueByKey!137 (t!5209 (toList!751 lt!37746)) (_1!1111 (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!82227 () Bool)

(assert (=> b!82227 (= e!53643 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37746)))))))

(assert (= (and d!20641 c!13073) b!82227))

(assert (= (and d!20641 (not c!13073)) b!82228))

(assert (= (and b!82228 c!13074) b!82229))

(assert (= (and b!82228 (not c!13074)) b!82230))

(declare-fun m!84813 () Bool)

(assert (=> b!82229 m!84813))

(assert (=> b!80996 d!20641))

(assert (=> b!81115 d!19889))

(declare-fun d!20643 () Bool)

(assert (=> d!20643 (= (get!1198 (getValueByKey!137 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2614 (getValueByKey!137 (toList!751 lt!37326) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19681 d!20643))

(assert (=> d!19681 d!20107))

(declare-fun d!20645 () Bool)

(declare-fun lt!38368 () Bool)

(assert (=> d!20645 (= lt!38368 (select (content!84 (toList!751 lt!37734)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!53646 () Bool)

(assert (=> d!20645 (= lt!38368 e!53646)))

(declare-fun res!42662 () Bool)

(assert (=> d!20645 (=> (not res!42662) (not e!53646))))

(assert (=> d!20645 (= res!42662 ((_ is Cons!1534) (toList!751 lt!37734)))))

(assert (=> d!20645 (= (contains!753 (toList!751 lt!37734) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!38368)))

(declare-fun b!82231 () Bool)

(declare-fun e!53645 () Bool)

(assert (=> b!82231 (= e!53646 e!53645)))

(declare-fun res!42661 () Bool)

(assert (=> b!82231 (=> res!42661 e!53645)))

(assert (=> b!82231 (= res!42661 (= (h!2123 (toList!751 lt!37734)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!82232 () Bool)

(assert (=> b!82232 (= e!53645 (contains!753 (t!5209 (toList!751 lt!37734)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!20645 res!42662) b!82231))

(assert (= (and b!82231 (not res!42661)) b!82232))

(declare-fun m!84815 () Bool)

(assert (=> d!20645 m!84815))

(declare-fun m!84817 () Bool)

(assert (=> d!20645 m!84817))

(declare-fun m!84819 () Bool)

(assert (=> b!82232 m!84819))

(assert (=> b!80991 d!20645))

(assert (=> b!81130 d!20365))

(assert (=> b!81130 d!19927))

(declare-fun d!20647 () Bool)

(assert (=> d!20647 (= (content!85 Nil!1536) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!19883 d!20647))

(declare-fun d!20649 () Bool)

(declare-fun lt!38369 () Bool)

(assert (=> d!20649 (= lt!38369 (select (content!84 lt!37282) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun e!53648 () Bool)

(assert (=> d!20649 (= lt!38369 e!53648)))

(declare-fun res!42664 () Bool)

(assert (=> d!20649 (=> (not res!42664) (not e!53648))))

(assert (=> d!20649 (= res!42664 ((_ is Cons!1534) lt!37282))))

(assert (=> d!20649 (= (contains!753 lt!37282 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))) lt!38369)))

(declare-fun b!82233 () Bool)

(declare-fun e!53647 () Bool)

(assert (=> b!82233 (= e!53648 e!53647)))

(declare-fun res!42663 () Bool)

(assert (=> b!82233 (=> res!42663 e!53647)))

(assert (=> b!82233 (= res!42663 (= (h!2123 lt!37282) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun b!82234 () Bool)

(assert (=> b!82234 (= e!53647 (contains!753 (t!5209 lt!37282) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(assert (= (and d!20649 res!42664) b!82233))

(assert (= (and b!82233 (not res!42663)) b!82234))

(declare-fun m!84821 () Bool)

(assert (=> d!20649 m!84821))

(declare-fun m!84823 () Bool)

(assert (=> d!20649 m!84823))

(declare-fun m!84825 () Bool)

(assert (=> b!82234 m!84825))

(assert (=> b!80977 d!20649))

(declare-fun d!20651 () Bool)

(declare-fun c!13075 () Bool)

(assert (=> d!20651 (= c!13075 ((_ is Nil!1535) (toList!751 lt!37278)))))

(declare-fun e!53649 () (InoxSet tuple2!2202))

(assert (=> d!20651 (= (content!84 (toList!751 lt!37278)) e!53649)))

(declare-fun b!82235 () Bool)

(assert (=> b!82235 (= e!53649 ((as const (Array tuple2!2202 Bool)) false))))

(declare-fun b!82236 () Bool)

(assert (=> b!82236 (= e!53649 ((_ map or) (store ((as const (Array tuple2!2202 Bool)) false) (h!2123 (toList!751 lt!37278)) true) (content!84 (t!5209 (toList!751 lt!37278)))))))

(assert (= (and d!20651 c!13075) b!82235))

(assert (= (and d!20651 (not c!13075)) b!82236))

(declare-fun m!84827 () Bool)

(assert (=> b!82236 m!84827))

(assert (=> b!82236 m!84127))

(assert (=> d!19775 d!20651))

(declare-fun d!20653 () Bool)

(declare-fun e!53650 () Bool)

(assert (=> d!20653 e!53650))

(declare-fun res!42665 () Bool)

(assert (=> d!20653 (=> res!42665 e!53650)))

(declare-fun lt!38372 () Bool)

(assert (=> d!20653 (= res!42665 (not lt!38372))))

(declare-fun lt!38371 () Bool)

(assert (=> d!20653 (= lt!38372 lt!38371)))

(declare-fun lt!38370 () Unit!2350)

(declare-fun e!53651 () Unit!2350)

(assert (=> d!20653 (= lt!38370 e!53651)))

(declare-fun c!13076 () Bool)

(assert (=> d!20653 (= c!13076 lt!38371)))

(assert (=> d!20653 (= lt!38371 (containsKey!141 (toList!751 lt!37559) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!20653 (= (contains!750 lt!37559 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38372)))

(declare-fun b!82237 () Bool)

(declare-fun lt!38373 () Unit!2350)

(assert (=> b!82237 (= e!53651 lt!38373)))

(assert (=> b!82237 (= lt!38373 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37559) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> b!82237 (isDefined!91 (getValueByKey!137 (toList!751 lt!37559) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82238 () Bool)

(declare-fun Unit!2423 () Unit!2350)

(assert (=> b!82238 (= e!53651 Unit!2423)))

(declare-fun b!82239 () Bool)

(assert (=> b!82239 (= e!53650 (isDefined!91 (getValueByKey!137 (toList!751 lt!37559) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20653 c!13076) b!82237))

(assert (= (and d!20653 (not c!13076)) b!82238))

(assert (= (and d!20653 (not res!42665)) b!82239))

(declare-fun m!84829 () Bool)

(assert (=> d!20653 m!84829))

(declare-fun m!84831 () Bool)

(assert (=> b!82237 m!84831))

(assert (=> b!82237 m!82227))

(assert (=> b!82237 m!82227))

(declare-fun m!84833 () Bool)

(assert (=> b!82237 m!84833))

(assert (=> b!82239 m!82227))

(assert (=> b!82239 m!82227))

(assert (=> b!82239 m!84833))

(assert (=> d!19747 d!20653))

(declare-fun b!82241 () Bool)

(declare-fun e!53652 () Option!143)

(declare-fun e!53653 () Option!143)

(assert (=> b!82241 (= e!53652 e!53653)))

(declare-fun c!13078 () Bool)

(assert (=> b!82241 (= c!13078 (and ((_ is Cons!1534) lt!37556) (not (= (_1!1111 (h!2123 lt!37556)) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!13077 () Bool)

(declare-fun d!20655 () Bool)

(assert (=> d!20655 (= c!13077 (and ((_ is Cons!1534) lt!37556) (= (_1!1111 (h!2123 lt!37556)) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20655 (= (getValueByKey!137 lt!37556 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53652)))

(declare-fun b!82243 () Bool)

(assert (=> b!82243 (= e!53653 None!141)))

(declare-fun b!82242 () Bool)

(assert (=> b!82242 (= e!53653 (getValueByKey!137 (t!5209 lt!37556) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82240 () Bool)

(assert (=> b!82240 (= e!53652 (Some!142 (_2!1111 (h!2123 lt!37556))))))

(assert (= (and d!20655 c!13077) b!82240))

(assert (= (and d!20655 (not c!13077)) b!82241))

(assert (= (and b!82241 c!13078) b!82242))

(assert (= (and b!82241 (not c!13078)) b!82243))

(declare-fun m!84835 () Bool)

(assert (=> b!82242 m!84835))

(assert (=> d!19747 d!20655))

(declare-fun d!20657 () Bool)

(assert (=> d!20657 (= (getValueByKey!137 lt!37556 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!38374 () Unit!2350)

(assert (=> d!20657 (= lt!38374 (choose!478 lt!37556 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53654 () Bool)

(assert (=> d!20657 e!53654))

(declare-fun res!42666 () Bool)

(assert (=> d!20657 (=> (not res!42666) (not e!53654))))

(assert (=> d!20657 (= res!42666 (isStrictlySorted!291 lt!37556))))

(assert (=> d!20657 (= (lemmaContainsTupThenGetReturnValue!56 lt!37556 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38374)))

(declare-fun b!82244 () Bool)

(declare-fun res!42667 () Bool)

(assert (=> b!82244 (=> (not res!42667) (not e!53654))))

(assert (=> b!82244 (= res!42667 (containsKey!141 lt!37556 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82245 () Bool)

(assert (=> b!82245 (= e!53654 (contains!753 lt!37556 (tuple2!2203 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20657 res!42666) b!82244))

(assert (= (and b!82244 res!42667) b!82245))

(assert (=> d!20657 m!82221))

(declare-fun m!84837 () Bool)

(assert (=> d!20657 m!84837))

(declare-fun m!84839 () Bool)

(assert (=> d!20657 m!84839))

(declare-fun m!84841 () Bool)

(assert (=> b!82244 m!84841))

(declare-fun m!84843 () Bool)

(assert (=> b!82245 m!84843))

(assert (=> d!19747 d!20657))

(declare-fun d!20659 () Bool)

(declare-fun e!53656 () Bool)

(assert (=> d!20659 e!53656))

(declare-fun res!42668 () Bool)

(assert (=> d!20659 (=> (not res!42668) (not e!53656))))

(declare-fun lt!38375 () List!1538)

(assert (=> d!20659 (= res!42668 (isStrictlySorted!291 lt!38375))))

(declare-fun e!53655 () List!1538)

(assert (=> d!20659 (= lt!38375 e!53655)))

(declare-fun c!13082 () Bool)

(assert (=> d!20659 (= c!13082 (and ((_ is Cons!1534) (toList!751 lt!37382)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37382))) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20659 (isStrictlySorted!291 (toList!751 lt!37382))))

(assert (=> d!20659 (= (insertStrictlySorted!58 (toList!751 lt!37382) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38375)))

(declare-fun b!82246 () Bool)

(assert (=> b!82246 (= e!53656 (contains!753 lt!38375 (tuple2!2203 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun bm!7669 () Bool)

(declare-fun call!7672 () List!1538)

(declare-fun call!7673 () List!1538)

(assert (=> bm!7669 (= call!7672 call!7673)))

(declare-fun b!82247 () Bool)

(declare-fun res!42669 () Bool)

(assert (=> b!82247 (=> (not res!42669) (not e!53656))))

(assert (=> b!82247 (= res!42669 (containsKey!141 lt!38375 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82248 () Bool)

(declare-fun e!53658 () List!1538)

(assert (=> b!82248 (= e!53658 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37382)) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82249 () Bool)

(assert (=> b!82249 (= e!53655 call!7673)))

(declare-fun bm!7670 () Bool)

(assert (=> bm!7670 (= call!7673 ($colon$colon!69 e!53658 (ite c!13082 (h!2123 (toList!751 lt!37382)) (tuple2!2203 (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!13080 () Bool)

(assert (=> bm!7670 (= c!13080 c!13082)))

(declare-fun c!13081 () Bool)

(declare-fun b!82250 () Bool)

(declare-fun c!13079 () Bool)

(assert (=> b!82250 (= e!53658 (ite c!13079 (t!5209 (toList!751 lt!37382)) (ite c!13081 (Cons!1534 (h!2123 (toList!751 lt!37382)) (t!5209 (toList!751 lt!37382))) Nil!1535)))))

(declare-fun b!82251 () Bool)

(declare-fun e!53659 () List!1538)

(assert (=> b!82251 (= e!53659 call!7672)))

(declare-fun b!82252 () Bool)

(declare-fun e!53657 () List!1538)

(declare-fun call!7674 () List!1538)

(assert (=> b!82252 (= e!53657 call!7674)))

(declare-fun b!82253 () Bool)

(assert (=> b!82253 (= c!13081 (and ((_ is Cons!1534) (toList!751 lt!37382)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37382))) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> b!82253 (= e!53659 e!53657)))

(declare-fun b!82254 () Bool)

(assert (=> b!82254 (= e!53657 call!7674)))

(declare-fun bm!7671 () Bool)

(assert (=> bm!7671 (= call!7674 call!7672)))

(declare-fun b!82255 () Bool)

(assert (=> b!82255 (= e!53655 e!53659)))

(assert (=> b!82255 (= c!13079 (and ((_ is Cons!1534) (toList!751 lt!37382)) (= (_1!1111 (h!2123 (toList!751 lt!37382))) (_1!1111 (tuple2!2203 lt!37378 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20659 c!13082) b!82249))

(assert (= (and d!20659 (not c!13082)) b!82255))

(assert (= (and b!82255 c!13079) b!82251))

(assert (= (and b!82255 (not c!13079)) b!82253))

(assert (= (and b!82253 c!13081) b!82252))

(assert (= (and b!82253 (not c!13081)) b!82254))

(assert (= (or b!82252 b!82254) bm!7671))

(assert (= (or b!82251 bm!7671) bm!7669))

(assert (= (or b!82249 bm!7669) bm!7670))

(assert (= (and bm!7670 c!13080) b!82248))

(assert (= (and bm!7670 (not c!13080)) b!82250))

(assert (= (and d!20659 res!42668) b!82247))

(assert (= (and b!82247 res!42669) b!82246))

(declare-fun m!84845 () Bool)

(assert (=> b!82247 m!84845))

(declare-fun m!84847 () Bool)

(assert (=> bm!7670 m!84847))

(declare-fun m!84849 () Bool)

(assert (=> d!20659 m!84849))

(declare-fun m!84851 () Bool)

(assert (=> d!20659 m!84851))

(declare-fun m!84853 () Bool)

(assert (=> b!82248 m!84853))

(declare-fun m!84855 () Bool)

(assert (=> b!82246 m!84855))

(assert (=> d!19747 d!20659))

(assert (=> b!81163 d!20237))

(declare-fun b!82257 () Bool)

(declare-fun e!53660 () Option!143)

(declare-fun e!53661 () Option!143)

(assert (=> b!82257 (= e!53660 e!53661)))

(declare-fun c!13084 () Bool)

(assert (=> b!82257 (= c!13084 (and ((_ is Cons!1534) (toList!751 lt!37683)) (not (= (_1!1111 (h!2123 (toList!751 lt!37683))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!13083 () Bool)

(declare-fun d!20661 () Bool)

(assert (=> d!20661 (= c!13083 (and ((_ is Cons!1534) (toList!751 lt!37683)) (= (_1!1111 (h!2123 (toList!751 lt!37683))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!20661 (= (getValueByKey!137 (toList!751 lt!37683) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!53660)))

(declare-fun b!82259 () Bool)

(assert (=> b!82259 (= e!53661 None!141)))

(declare-fun b!82258 () Bool)

(assert (=> b!82258 (= e!53661 (getValueByKey!137 (t!5209 (toList!751 lt!37683)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!82256 () Bool)

(assert (=> b!82256 (= e!53660 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37683)))))))

(assert (= (and d!20661 c!13083) b!82256))

(assert (= (and d!20661 (not c!13083)) b!82257))

(assert (= (and b!82257 c!13084) b!82258))

(assert (= (and b!82257 (not c!13084)) b!82259))

(declare-fun m!84857 () Bool)

(assert (=> b!82258 m!84857))

(assert (=> b!80940 d!20661))

(declare-fun d!20663 () Bool)

(declare-fun res!42670 () Bool)

(declare-fun e!53662 () Bool)

(assert (=> d!20663 (=> res!42670 e!53662)))

(assert (=> d!20663 (= res!42670 (= (select (arr!1900 (_keys!3957 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!20663 (= (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!53662)))

(declare-fun b!82260 () Bool)

(declare-fun e!53663 () Bool)

(assert (=> b!82260 (= e!53662 e!53663)))

(declare-fun res!42671 () Bool)

(assert (=> b!82260 (=> (not res!42671) (not e!53663))))

(assert (=> b!82260 (= res!42671 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!82261 () Bool)

(assert (=> b!82261 (= e!53663 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!20663 (not res!42670)) b!82260))

(assert (= (and b!82260 res!42671) b!82261))

(assert (=> d!20663 m!83449))

(assert (=> b!82261 m!81585))

(declare-fun m!84859 () Bool)

(assert (=> b!82261 m!84859))

(assert (=> b!80635 d!20663))

(declare-fun d!20665 () Bool)

(declare-fun e!53664 () Bool)

(assert (=> d!20665 e!53664))

(declare-fun res!42672 () Bool)

(assert (=> d!20665 (=> res!42672 e!53664)))

(declare-fun lt!38378 () Bool)

(assert (=> d!20665 (= res!42672 (not lt!38378))))

(declare-fun lt!38377 () Bool)

(assert (=> d!20665 (= lt!38378 lt!38377)))

(declare-fun lt!38376 () Unit!2350)

(declare-fun e!53665 () Unit!2350)

(assert (=> d!20665 (= lt!38376 e!53665)))

(declare-fun c!13085 () Bool)

(assert (=> d!20665 (= c!13085 lt!38377)))

(assert (=> d!20665 (= lt!38377 (containsKey!141 (toList!751 lt!37554) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!20665 (= (contains!750 lt!37554 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38378)))

(declare-fun b!82262 () Bool)

(declare-fun lt!38379 () Unit!2350)

(assert (=> b!82262 (= e!53665 lt!38379)))

(assert (=> b!82262 (= lt!38379 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37554) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> b!82262 (isDefined!91 (getValueByKey!137 (toList!751 lt!37554) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82263 () Bool)

(declare-fun Unit!2424 () Unit!2350)

(assert (=> b!82263 (= e!53665 Unit!2424)))

(declare-fun b!82264 () Bool)

(assert (=> b!82264 (= e!53664 (isDefined!91 (getValueByKey!137 (toList!751 lt!37554) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20665 c!13085) b!82262))

(assert (= (and d!20665 (not c!13085)) b!82263))

(assert (= (and d!20665 (not res!42672)) b!82264))

(declare-fun m!84861 () Bool)

(assert (=> d!20665 m!84861))

(declare-fun m!84863 () Bool)

(assert (=> b!82262 m!84863))

(assert (=> b!82262 m!82207))

(assert (=> b!82262 m!82207))

(declare-fun m!84865 () Bool)

(assert (=> b!82262 m!84865))

(assert (=> b!82264 m!82207))

(assert (=> b!82264 m!82207))

(assert (=> b!82264 m!84865))

(assert (=> d!19741 d!20665))

(declare-fun b!82266 () Bool)

(declare-fun e!53666 () Option!143)

(declare-fun e!53667 () Option!143)

(assert (=> b!82266 (= e!53666 e!53667)))

(declare-fun c!13087 () Bool)

(assert (=> b!82266 (= c!13087 (and ((_ is Cons!1534) lt!37551) (not (= (_1!1111 (h!2123 lt!37551)) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20667 () Bool)

(declare-fun c!13086 () Bool)

(assert (=> d!20667 (= c!13086 (and ((_ is Cons!1534) lt!37551) (= (_1!1111 (h!2123 lt!37551)) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20667 (= (getValueByKey!137 lt!37551 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53666)))

(declare-fun b!82268 () Bool)

(assert (=> b!82268 (= e!53667 None!141)))

(declare-fun b!82267 () Bool)

(assert (=> b!82267 (= e!53667 (getValueByKey!137 (t!5209 lt!37551) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82265 () Bool)

(assert (=> b!82265 (= e!53666 (Some!142 (_2!1111 (h!2123 lt!37551))))))

(assert (= (and d!20667 c!13086) b!82265))

(assert (= (and d!20667 (not c!13086)) b!82266))

(assert (= (and b!82266 c!13087) b!82267))

(assert (= (and b!82266 (not c!13087)) b!82268))

(declare-fun m!84867 () Bool)

(assert (=> b!82267 m!84867))

(assert (=> d!19741 d!20667))

(declare-fun d!20669 () Bool)

(assert (=> d!20669 (= (getValueByKey!137 lt!37551 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!38380 () Unit!2350)

(assert (=> d!20669 (= lt!38380 (choose!478 lt!37551 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53668 () Bool)

(assert (=> d!20669 e!53668))

(declare-fun res!42673 () Bool)

(assert (=> d!20669 (=> (not res!42673) (not e!53668))))

(assert (=> d!20669 (= res!42673 (isStrictlySorted!291 lt!37551))))

(assert (=> d!20669 (= (lemmaContainsTupThenGetReturnValue!56 lt!37551 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38380)))

(declare-fun b!82269 () Bool)

(declare-fun res!42674 () Bool)

(assert (=> b!82269 (=> (not res!42674) (not e!53668))))

(assert (=> b!82269 (= res!42674 (containsKey!141 lt!37551 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82270 () Bool)

(assert (=> b!82270 (= e!53668 (contains!753 lt!37551 (tuple2!2203 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20669 res!42673) b!82269))

(assert (= (and b!82269 res!42674) b!82270))

(assert (=> d!20669 m!82201))

(declare-fun m!84869 () Bool)

(assert (=> d!20669 m!84869))

(declare-fun m!84871 () Bool)

(assert (=> d!20669 m!84871))

(declare-fun m!84873 () Bool)

(assert (=> b!82269 m!84873))

(declare-fun m!84875 () Bool)

(assert (=> b!82270 m!84875))

(assert (=> d!19741 d!20669))

(declare-fun d!20671 () Bool)

(declare-fun e!53670 () Bool)

(assert (=> d!20671 e!53670))

(declare-fun res!42675 () Bool)

(assert (=> d!20671 (=> (not res!42675) (not e!53670))))

(declare-fun lt!38381 () List!1538)

(assert (=> d!20671 (= res!42675 (isStrictlySorted!291 lt!38381))))

(declare-fun e!53669 () List!1538)

(assert (=> d!20671 (= lt!38381 e!53669)))

(declare-fun c!13091 () Bool)

(assert (=> d!20671 (= c!13091 (and ((_ is Cons!1534) (toList!751 lt!37381)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37381))) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20671 (isStrictlySorted!291 (toList!751 lt!37381))))

(assert (=> d!20671 (= (insertStrictlySorted!58 (toList!751 lt!37381) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38381)))

(declare-fun b!82271 () Bool)

(assert (=> b!82271 (= e!53670 (contains!753 lt!38381 (tuple2!2203 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun bm!7672 () Bool)

(declare-fun call!7675 () List!1538)

(declare-fun call!7676 () List!1538)

(assert (=> bm!7672 (= call!7675 call!7676)))

(declare-fun b!82272 () Bool)

(declare-fun res!42676 () Bool)

(assert (=> b!82272 (=> (not res!42676) (not e!53670))))

(assert (=> b!82272 (= res!42676 (containsKey!141 lt!38381 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53672 () List!1538)

(declare-fun b!82273 () Bool)

(assert (=> b!82273 (= e!53672 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37381)) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82274 () Bool)

(assert (=> b!82274 (= e!53669 call!7676)))

(declare-fun bm!7673 () Bool)

(assert (=> bm!7673 (= call!7676 ($colon$colon!69 e!53672 (ite c!13091 (h!2123 (toList!751 lt!37381)) (tuple2!2203 (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!13089 () Bool)

(assert (=> bm!7673 (= c!13089 c!13091)))

(declare-fun b!82275 () Bool)

(declare-fun c!13088 () Bool)

(declare-fun c!13090 () Bool)

(assert (=> b!82275 (= e!53672 (ite c!13088 (t!5209 (toList!751 lt!37381)) (ite c!13090 (Cons!1534 (h!2123 (toList!751 lt!37381)) (t!5209 (toList!751 lt!37381))) Nil!1535)))))

(declare-fun b!82276 () Bool)

(declare-fun e!53673 () List!1538)

(assert (=> b!82276 (= e!53673 call!7675)))

(declare-fun b!82277 () Bool)

(declare-fun e!53671 () List!1538)

(declare-fun call!7677 () List!1538)

(assert (=> b!82277 (= e!53671 call!7677)))

(declare-fun b!82278 () Bool)

(assert (=> b!82278 (= c!13090 (and ((_ is Cons!1534) (toList!751 lt!37381)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37381))) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> b!82278 (= e!53673 e!53671)))

(declare-fun b!82279 () Bool)

(assert (=> b!82279 (= e!53671 call!7677)))

(declare-fun bm!7674 () Bool)

(assert (=> bm!7674 (= call!7677 call!7675)))

(declare-fun b!82280 () Bool)

(assert (=> b!82280 (= e!53669 e!53673)))

(assert (=> b!82280 (= c!13088 (and ((_ is Cons!1534) (toList!751 lt!37381)) (= (_1!1111 (h!2123 (toList!751 lt!37381))) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20671 c!13091) b!82274))

(assert (= (and d!20671 (not c!13091)) b!82280))

(assert (= (and b!82280 c!13088) b!82276))

(assert (= (and b!82280 (not c!13088)) b!82278))

(assert (= (and b!82278 c!13090) b!82277))

(assert (= (and b!82278 (not c!13090)) b!82279))

(assert (= (or b!82277 b!82279) bm!7674))

(assert (= (or b!82276 bm!7674) bm!7672))

(assert (= (or b!82274 bm!7672) bm!7673))

(assert (= (and bm!7673 c!13089) b!82273))

(assert (= (and bm!7673 (not c!13089)) b!82275))

(assert (= (and d!20671 res!42675) b!82272))

(assert (= (and b!82272 res!42676) b!82271))

(declare-fun m!84877 () Bool)

(assert (=> b!82272 m!84877))

(declare-fun m!84879 () Bool)

(assert (=> bm!7673 m!84879))

(declare-fun m!84881 () Bool)

(assert (=> d!20671 m!84881))

(declare-fun m!84883 () Bool)

(assert (=> d!20671 m!84883))

(declare-fun m!84885 () Bool)

(assert (=> b!82273 m!84885))

(declare-fun m!84887 () Bool)

(assert (=> b!82271 m!84887))

(assert (=> d!19741 d!20671))

(declare-fun d!20673 () Bool)

(assert (=> d!20673 (isDefined!91 (getValueByKey!137 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun lt!38382 () Unit!2350)

(assert (=> d!20673 (= lt!38382 (choose!485 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(declare-fun e!53674 () Bool)

(assert (=> d!20673 e!53674))

(declare-fun res!42677 () Bool)

(assert (=> d!20673 (=> (not res!42677) (not e!53674))))

(assert (=> d!20673 (= res!42677 (isStrictlySorted!291 (toList!751 call!7473)))))

(assert (=> d!20673 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) lt!38382)))

(declare-fun b!82281 () Bool)

(assert (=> b!82281 (= e!53674 (containsKey!141 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (= (and d!20673 res!42677) b!82281))

(assert (=> d!20673 m!81585))

(assert (=> d!20673 m!82761))

(assert (=> d!20673 m!82761))

(assert (=> d!20673 m!82763))

(assert (=> d!20673 m!81585))

(declare-fun m!84889 () Bool)

(assert (=> d!20673 m!84889))

(declare-fun m!84891 () Bool)

(assert (=> d!20673 m!84891))

(assert (=> b!82281 m!81585))

(assert (=> b!82281 m!82757))

(assert (=> b!81029 d!20673))

(assert (=> b!81029 d!20141))

(assert (=> b!81029 d!20143))

(declare-fun d!20675 () Bool)

(declare-fun res!42678 () Bool)

(declare-fun e!53675 () Bool)

(assert (=> d!20675 (=> res!42678 e!53675)))

(assert (=> d!20675 (= res!42678 (or ((_ is Nil!1535) lt!37867) ((_ is Nil!1535) (t!5209 lt!37867))))))

(assert (=> d!20675 (= (isStrictlySorted!291 lt!37867) e!53675)))

(declare-fun b!82282 () Bool)

(declare-fun e!53676 () Bool)

(assert (=> b!82282 (= e!53675 e!53676)))

(declare-fun res!42679 () Bool)

(assert (=> b!82282 (=> (not res!42679) (not e!53676))))

(assert (=> b!82282 (= res!42679 (bvslt (_1!1111 (h!2123 lt!37867)) (_1!1111 (h!2123 (t!5209 lt!37867)))))))

(declare-fun b!82283 () Bool)

(assert (=> b!82283 (= e!53676 (isStrictlySorted!291 (t!5209 lt!37867)))))

(assert (= (and d!20675 (not res!42678)) b!82282))

(assert (= (and b!82282 res!42679) b!82283))

(declare-fun m!84893 () Bool)

(assert (=> b!82283 m!84893))

(assert (=> d!19901 d!20675))

(assert (=> d!19901 d!19935))

(declare-fun d!20677 () Bool)

(declare-fun res!42680 () Bool)

(declare-fun e!53677 () Bool)

(assert (=> d!20677 (=> res!42680 e!53677)))

(assert (=> d!20677 (= res!42680 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))))))

(assert (=> d!20677 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 (_2!1110 lt!37475)) (mask!6299 (_2!1110 lt!37475))) e!53677)))

(declare-fun b!82284 () Bool)

(declare-fun e!53679 () Bool)

(assert (=> b!82284 (= e!53677 e!53679)))

(declare-fun c!13092 () Bool)

(assert (=> b!82284 (= c!13092 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000)))))

(declare-fun b!82285 () Bool)

(declare-fun e!53678 () Bool)

(assert (=> b!82285 (= e!53679 e!53678)))

(declare-fun lt!38384 () (_ BitVec 64))

(assert (=> b!82285 (= lt!38384 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000))))

(declare-fun lt!38385 () Unit!2350)

(assert (=> b!82285 (= lt!38385 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3957 (_2!1110 lt!37475)) lt!38384 #b00000000000000000000000000000000))))

(assert (=> b!82285 (arrayContainsKey!0 (_keys!3957 (_2!1110 lt!37475)) lt!38384 #b00000000000000000000000000000000)))

(declare-fun lt!38383 () Unit!2350)

(assert (=> b!82285 (= lt!38383 lt!38385)))

(declare-fun res!42681 () Bool)

(assert (=> b!82285 (= res!42681 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000) (_keys!3957 (_2!1110 lt!37475)) (mask!6299 (_2!1110 lt!37475))) (Found!251 #b00000000000000000000000000000000)))))

(assert (=> b!82285 (=> (not res!42681) (not e!53678))))

(declare-fun b!82286 () Bool)

(declare-fun call!7678 () Bool)

(assert (=> b!82286 (= e!53678 call!7678)))

(declare-fun bm!7675 () Bool)

(assert (=> bm!7675 (= call!7678 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3957 (_2!1110 lt!37475)) (mask!6299 (_2!1110 lt!37475))))))

(declare-fun b!82287 () Bool)

(assert (=> b!82287 (= e!53679 call!7678)))

(assert (= (and d!20677 (not res!42680)) b!82284))

(assert (= (and b!82284 c!13092) b!82285))

(assert (= (and b!82284 (not c!13092)) b!82287))

(assert (= (and b!82285 res!42681) b!82286))

(assert (= (or b!82286 b!82287) bm!7675))

(assert (=> b!82284 m!83287))

(assert (=> b!82284 m!83287))

(assert (=> b!82284 m!83291))

(assert (=> b!82285 m!83287))

(declare-fun m!84895 () Bool)

(assert (=> b!82285 m!84895))

(declare-fun m!84897 () Bool)

(assert (=> b!82285 m!84897))

(assert (=> b!82285 m!83287))

(declare-fun m!84899 () Bool)

(assert (=> b!82285 m!84899))

(declare-fun m!84901 () Bool)

(assert (=> bm!7675 m!84901))

(assert (=> b!81155 d!20677))

(assert (=> b!80775 d!20403))

(assert (=> b!80775 d!20405))

(declare-fun d!20679 () Bool)

(declare-fun e!53680 () Bool)

(assert (=> d!20679 e!53680))

(declare-fun res!42682 () Bool)

(assert (=> d!20679 (=> res!42682 e!53680)))

(declare-fun lt!38388 () Bool)

(assert (=> d!20679 (= res!42682 (not lt!38388))))

(declare-fun lt!38387 () Bool)

(assert (=> d!20679 (= lt!38388 lt!38387)))

(declare-fun lt!38386 () Unit!2350)

(declare-fun e!53681 () Unit!2350)

(assert (=> d!20679 (= lt!38386 e!53681)))

(declare-fun c!13093 () Bool)

(assert (=> d!20679 (= c!13093 lt!38387)))

(assert (=> d!20679 (= lt!38387 (containsKey!141 (toList!751 lt!37730) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!20679 (= (contains!750 lt!37730 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38388)))

(declare-fun b!82288 () Bool)

(declare-fun lt!38389 () Unit!2350)

(assert (=> b!82288 (= e!53681 lt!38389)))

(assert (=> b!82288 (= lt!38389 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37730) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> b!82288 (isDefined!91 (getValueByKey!137 (toList!751 lt!37730) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82289 () Bool)

(declare-fun Unit!2425 () Unit!2350)

(assert (=> b!82289 (= e!53681 Unit!2425)))

(declare-fun b!82290 () Bool)

(assert (=> b!82290 (= e!53680 (isDefined!91 (getValueByKey!137 (toList!751 lt!37730) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20679 c!13093) b!82288))

(assert (= (and d!20679 (not c!13093)) b!82289))

(assert (= (and d!20679 (not res!42682)) b!82290))

(declare-fun m!84903 () Bool)

(assert (=> d!20679 m!84903))

(declare-fun m!84905 () Bool)

(assert (=> b!82288 m!84905))

(assert (=> b!82288 m!82677))

(assert (=> b!82288 m!82677))

(declare-fun m!84907 () Bool)

(assert (=> b!82288 m!84907))

(assert (=> b!82290 m!82677))

(assert (=> b!82290 m!82677))

(assert (=> b!82290 m!84907))

(assert (=> d!19853 d!20679))

(declare-fun b!82292 () Bool)

(declare-fun e!53682 () Option!143)

(declare-fun e!53683 () Option!143)

(assert (=> b!82292 (= e!53682 e!53683)))

(declare-fun c!13095 () Bool)

(assert (=> b!82292 (= c!13095 (and ((_ is Cons!1534) lt!37727) (not (= (_1!1111 (h!2123 lt!37727)) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20681 () Bool)

(declare-fun c!13094 () Bool)

(assert (=> d!20681 (= c!13094 (and ((_ is Cons!1534) lt!37727) (= (_1!1111 (h!2123 lt!37727)) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20681 (= (getValueByKey!137 lt!37727 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53682)))

(declare-fun b!82294 () Bool)

(assert (=> b!82294 (= e!53683 None!141)))

(declare-fun b!82293 () Bool)

(assert (=> b!82293 (= e!53683 (getValueByKey!137 (t!5209 lt!37727) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82291 () Bool)

(assert (=> b!82291 (= e!53682 (Some!142 (_2!1111 (h!2123 lt!37727))))))

(assert (= (and d!20681 c!13094) b!82291))

(assert (= (and d!20681 (not c!13094)) b!82292))

(assert (= (and b!82292 c!13095) b!82293))

(assert (= (and b!82292 (not c!13095)) b!82294))

(declare-fun m!84909 () Bool)

(assert (=> b!82293 m!84909))

(assert (=> d!19853 d!20681))

(declare-fun d!20683 () Bool)

(assert (=> d!20683 (= (getValueByKey!137 lt!37727 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!38390 () Unit!2350)

(assert (=> d!20683 (= lt!38390 (choose!478 lt!37727 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53684 () Bool)

(assert (=> d!20683 e!53684))

(declare-fun res!42683 () Bool)

(assert (=> d!20683 (=> (not res!42683) (not e!53684))))

(assert (=> d!20683 (= res!42683 (isStrictlySorted!291 lt!37727))))

(assert (=> d!20683 (= (lemmaContainsTupThenGetReturnValue!56 lt!37727 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38390)))

(declare-fun b!82295 () Bool)

(declare-fun res!42684 () Bool)

(assert (=> b!82295 (=> (not res!42684) (not e!53684))))

(assert (=> b!82295 (= res!42684 (containsKey!141 lt!37727 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82296 () Bool)

(assert (=> b!82296 (= e!53684 (contains!753 lt!37727 (tuple2!2203 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20683 res!42683) b!82295))

(assert (= (and b!82295 res!42684) b!82296))

(assert (=> d!20683 m!82671))

(declare-fun m!84911 () Bool)

(assert (=> d!20683 m!84911))

(declare-fun m!84913 () Bool)

(assert (=> d!20683 m!84913))

(declare-fun m!84915 () Bool)

(assert (=> b!82295 m!84915))

(declare-fun m!84917 () Bool)

(assert (=> b!82296 m!84917))

(assert (=> d!19853 d!20683))

(declare-fun d!20685 () Bool)

(declare-fun e!53686 () Bool)

(assert (=> d!20685 e!53686))

(declare-fun res!42685 () Bool)

(assert (=> d!20685 (=> (not res!42685) (not e!53686))))

(declare-fun lt!38391 () List!1538)

(assert (=> d!20685 (= res!42685 (isStrictlySorted!291 lt!38391))))

(declare-fun e!53685 () List!1538)

(assert (=> d!20685 (= lt!38391 e!53685)))

(declare-fun c!13099 () Bool)

(assert (=> d!20685 (= c!13099 (and ((_ is Cons!1534) (toList!751 lt!37196)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20685 (isStrictlySorted!291 (toList!751 lt!37196))))

(assert (=> d!20685 (= (insertStrictlySorted!58 (toList!751 lt!37196) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38391)))

(declare-fun b!82297 () Bool)

(assert (=> b!82297 (= e!53686 (contains!753 lt!38391 (tuple2!2203 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun bm!7676 () Bool)

(declare-fun call!7679 () List!1538)

(declare-fun call!7680 () List!1538)

(assert (=> bm!7676 (= call!7679 call!7680)))

(declare-fun b!82298 () Bool)

(declare-fun res!42686 () Bool)

(assert (=> b!82298 (=> (not res!42686) (not e!53686))))

(assert (=> b!82298 (= res!42686 (containsKey!141 lt!38391 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82299 () Bool)

(declare-fun e!53688 () List!1538)

(assert (=> b!82299 (= e!53688 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37196)) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82300 () Bool)

(assert (=> b!82300 (= e!53685 call!7680)))

(declare-fun bm!7677 () Bool)

(assert (=> bm!7677 (= call!7680 ($colon$colon!69 e!53688 (ite c!13099 (h!2123 (toList!751 lt!37196)) (tuple2!2203 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!13097 () Bool)

(assert (=> bm!7677 (= c!13097 c!13099)))

(declare-fun b!82301 () Bool)

(declare-fun c!13098 () Bool)

(declare-fun c!13096 () Bool)

(assert (=> b!82301 (= e!53688 (ite c!13096 (t!5209 (toList!751 lt!37196)) (ite c!13098 (Cons!1534 (h!2123 (toList!751 lt!37196)) (t!5209 (toList!751 lt!37196))) Nil!1535)))))

(declare-fun b!82302 () Bool)

(declare-fun e!53689 () List!1538)

(assert (=> b!82302 (= e!53689 call!7679)))

(declare-fun b!82303 () Bool)

(declare-fun e!53687 () List!1538)

(declare-fun call!7681 () List!1538)

(assert (=> b!82303 (= e!53687 call!7681)))

(declare-fun b!82304 () Bool)

(assert (=> b!82304 (= c!13098 (and ((_ is Cons!1534) (toList!751 lt!37196)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> b!82304 (= e!53689 e!53687)))

(declare-fun b!82305 () Bool)

(assert (=> b!82305 (= e!53687 call!7681)))

(declare-fun bm!7678 () Bool)

(assert (=> bm!7678 (= call!7681 call!7679)))

(declare-fun b!82306 () Bool)

(assert (=> b!82306 (= e!53685 e!53689)))

(assert (=> b!82306 (= c!13096 (and ((_ is Cons!1534) (toList!751 lt!37196)) (= (_1!1111 (h!2123 (toList!751 lt!37196))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20685 c!13099) b!82300))

(assert (= (and d!20685 (not c!13099)) b!82306))

(assert (= (and b!82306 c!13096) b!82302))

(assert (= (and b!82306 (not c!13096)) b!82304))

(assert (= (and b!82304 c!13098) b!82303))

(assert (= (and b!82304 (not c!13098)) b!82305))

(assert (= (or b!82303 b!82305) bm!7678))

(assert (= (or b!82302 bm!7678) bm!7676))

(assert (= (or b!82300 bm!7676) bm!7677))

(assert (= (and bm!7677 c!13097) b!82299))

(assert (= (and bm!7677 (not c!13097)) b!82301))

(assert (= (and d!20685 res!42685) b!82298))

(assert (= (and b!82298 res!42686) b!82297))

(declare-fun m!84919 () Bool)

(assert (=> b!82298 m!84919))

(declare-fun m!84921 () Bool)

(assert (=> bm!7677 m!84921))

(declare-fun m!84923 () Bool)

(assert (=> d!20685 m!84923))

(assert (=> d!20685 m!82159))

(declare-fun m!84925 () Bool)

(assert (=> b!82299 m!84925))

(declare-fun m!84927 () Bool)

(assert (=> b!82297 m!84927))

(assert (=> d!19853 d!20685))

(declare-fun d!20687 () Bool)

(declare-fun e!53690 () Bool)

(assert (=> d!20687 e!53690))

(declare-fun res!42687 () Bool)

(assert (=> d!20687 (=> res!42687 e!53690)))

(declare-fun lt!38394 () Bool)

(assert (=> d!20687 (= res!42687 (not lt!38394))))

(declare-fun lt!38393 () Bool)

(assert (=> d!20687 (= lt!38394 lt!38393)))

(declare-fun lt!38392 () Unit!2350)

(declare-fun e!53691 () Unit!2350)

(assert (=> d!20687 (= lt!38392 e!53691)))

(declare-fun c!13100 () Bool)

(assert (=> d!20687 (= c!13100 lt!38393)))

(assert (=> d!20687 (= lt!38393 (containsKey!141 (toList!751 lt!37664) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20687 (= (contains!750 lt!37664 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) lt!38394)))

(declare-fun b!82307 () Bool)

(declare-fun lt!38395 () Unit!2350)

(assert (=> b!82307 (= e!53691 lt!38395)))

(assert (=> b!82307 (= lt!38395 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37664) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82307 (isDefined!91 (getValueByKey!137 (toList!751 lt!37664) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82308 () Bool)

(declare-fun Unit!2426 () Unit!2350)

(assert (=> b!82308 (= e!53691 Unit!2426)))

(declare-fun b!82309 () Bool)

(assert (=> b!82309 (= e!53690 (isDefined!91 (getValueByKey!137 (toList!751 lt!37664) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!20687 c!13100) b!82307))

(assert (= (and d!20687 (not c!13100)) b!82308))

(assert (= (and d!20687 (not res!42687)) b!82309))

(assert (=> d!20687 m!81991))

(declare-fun m!84929 () Bool)

(assert (=> d!20687 m!84929))

(assert (=> b!82307 m!81991))

(declare-fun m!84931 () Bool)

(assert (=> b!82307 m!84931))

(assert (=> b!82307 m!81991))

(assert (=> b!82307 m!83301))

(assert (=> b!82307 m!83301))

(declare-fun m!84933 () Bool)

(assert (=> b!82307 m!84933))

(assert (=> b!82309 m!81991))

(assert (=> b!82309 m!83301))

(assert (=> b!82309 m!83301))

(assert (=> b!82309 m!84933))

(assert (=> b!80916 d!20687))

(declare-fun d!20689 () Bool)

(declare-fun res!42688 () Bool)

(declare-fun e!53692 () Bool)

(assert (=> d!20689 (=> res!42688 e!53692)))

(assert (=> d!20689 (= res!42688 (or ((_ is Nil!1535) lt!37726) ((_ is Nil!1535) (t!5209 lt!37726))))))

(assert (=> d!20689 (= (isStrictlySorted!291 lt!37726) e!53692)))

(declare-fun b!82310 () Bool)

(declare-fun e!53693 () Bool)

(assert (=> b!82310 (= e!53692 e!53693)))

(declare-fun res!42689 () Bool)

(assert (=> b!82310 (=> (not res!42689) (not e!53693))))

(assert (=> b!82310 (= res!42689 (bvslt (_1!1111 (h!2123 lt!37726)) (_1!1111 (h!2123 (t!5209 lt!37726)))))))

(declare-fun b!82311 () Bool)

(assert (=> b!82311 (= e!53693 (isStrictlySorted!291 (t!5209 lt!37726)))))

(assert (= (and d!20689 (not res!42688)) b!82310))

(assert (= (and b!82310 res!42689) b!82311))

(declare-fun m!84935 () Bool)

(assert (=> b!82311 m!84935))

(assert (=> d!19851 d!20689))

(assert (=> d!19851 d!20101))

(assert (=> b!80748 d!20455))

(assert (=> b!80748 d!19773))

(declare-fun d!20691 () Bool)

(declare-fun lt!38396 () Bool)

(assert (=> d!20691 (= lt!38396 (select (content!84 (toList!751 lt!37716)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!53695 () Bool)

(assert (=> d!20691 (= lt!38396 e!53695)))

(declare-fun res!42691 () Bool)

(assert (=> d!20691 (=> (not res!42691) (not e!53695))))

(assert (=> d!20691 (= res!42691 ((_ is Cons!1534) (toList!751 lt!37716)))))

(assert (=> d!20691 (= (contains!753 (toList!751 lt!37716) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!38396)))

(declare-fun b!82312 () Bool)

(declare-fun e!53694 () Bool)

(assert (=> b!82312 (= e!53695 e!53694)))

(declare-fun res!42690 () Bool)

(assert (=> b!82312 (=> res!42690 e!53694)))

(assert (=> b!82312 (= res!42690 (= (h!2123 (toList!751 lt!37716)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!82313 () Bool)

(assert (=> b!82313 (= e!53694 (contains!753 (t!5209 (toList!751 lt!37716)) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!20691 res!42691) b!82312))

(assert (= (and b!82312 (not res!42690)) b!82313))

(declare-fun m!84937 () Bool)

(assert (=> d!20691 m!84937))

(declare-fun m!84939 () Bool)

(assert (=> d!20691 m!84939))

(declare-fun m!84941 () Bool)

(assert (=> b!82313 m!84941))

(assert (=> b!80966 d!20691))

(assert (=> d!19915 d!19699))

(declare-fun d!20693 () Bool)

(declare-fun e!53696 () Bool)

(assert (=> d!20693 e!53696))

(declare-fun res!42692 () Bool)

(assert (=> d!20693 (=> (not res!42692) (not e!53696))))

(declare-fun lt!38400 () ListLongMap!1471)

(assert (=> d!20693 (= res!42692 (contains!750 lt!38400 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195))))))

(declare-fun lt!38397 () List!1538)

(assert (=> d!20693 (= lt!38400 (ListLongMap!1472 lt!38397))))

(declare-fun lt!38398 () Unit!2350)

(declare-fun lt!38399 () Unit!2350)

(assert (=> d!20693 (= lt!38398 lt!38399)))

(assert (=> d!20693 (= (getValueByKey!137 lt!38397 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195))))))

(assert (=> d!20693 (= lt!38399 (lemmaContainsTupThenGetReturnValue!56 lt!38397 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195))))))

(assert (=> d!20693 (= lt!38397 (insertStrictlySorted!58 (toList!751 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195))))))

(assert (=> d!20693 (= (+!111 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) lt!38400)))

(declare-fun b!82314 () Bool)

(declare-fun res!42693 () Bool)

(assert (=> b!82314 (=> (not res!42693) (not e!53696))))

(assert (=> b!82314 (= res!42693 (= (getValueByKey!137 (toList!751 lt!38400) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)))))))

(declare-fun b!82315 () Bool)

(assert (=> b!82315 (= e!53696 (contains!753 (toList!751 lt!38400) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)))))

(assert (= (and d!20693 res!42692) b!82314))

(assert (= (and b!82314 res!42693) b!82315))

(declare-fun m!84943 () Bool)

(assert (=> d!20693 m!84943))

(declare-fun m!84945 () Bool)

(assert (=> d!20693 m!84945))

(declare-fun m!84947 () Bool)

(assert (=> d!20693 m!84947))

(declare-fun m!84949 () Bool)

(assert (=> d!20693 m!84949))

(declare-fun m!84951 () Bool)

(assert (=> b!82314 m!84951))

(declare-fun m!84953 () Bool)

(assert (=> b!82315 m!84953))

(assert (=> d!19915 d!20693))

(assert (=> d!19915 d!20037))

(declare-fun d!20695 () Bool)

(assert (=> d!20695 (= (+!111 (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37461 (zeroValue!2189 newMap!16) lt!37195 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(assert (=> d!20695 true))

(declare-fun _$8!70 () Unit!2350)

(assert (=> d!20695 (= (choose!488 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) lt!37461 (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) lt!37195 (defaultEntry!2293 newMap!16)) _$8!70)))

(declare-fun bs!3479 () Bool)

(assert (= bs!3479 d!20695))

(assert (=> bs!3479 m!81869))

(assert (=> bs!3479 m!81869))

(assert (=> bs!3479 m!82925))

(assert (=> bs!3479 m!82929))

(assert (=> d!19915 d!20695))

(declare-fun b!82316 () Bool)

(declare-fun e!53706 () ListLongMap!1471)

(declare-fun call!7684 () ListLongMap!1471)

(assert (=> b!82316 (= e!53706 (+!111 call!7684 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)))))

(declare-fun b!82317 () Bool)

(declare-fun e!53708 () Bool)

(declare-fun lt!38414 () ListLongMap!1471)

(assert (=> b!82317 (= e!53708 (= (apply!80 lt!38414 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37195))))

(declare-fun b!82318 () Bool)

(declare-fun e!53705 () ListLongMap!1471)

(assert (=> b!82318 (= e!53706 e!53705)))

(declare-fun c!13104 () Bool)

(assert (=> b!82318 (= c!13104 (and (not (= (bvand lt!37461 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!37461 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7679 () Bool)

(declare-fun call!7687 () ListLongMap!1471)

(assert (=> bm!7679 (= call!7687 call!7684)))

(declare-fun b!82319 () Bool)

(declare-fun e!53697 () Bool)

(declare-fun e!53700 () Bool)

(assert (=> b!82319 (= e!53697 e!53700)))

(declare-fun res!42694 () Bool)

(assert (=> b!82319 (=> (not res!42694) (not e!53700))))

(assert (=> b!82319 (= res!42694 (contains!750 lt!38414 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!82319 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun d!20697 () Bool)

(declare-fun e!53709 () Bool)

(assert (=> d!20697 e!53709))

(declare-fun res!42698 () Bool)

(assert (=> d!20697 (=> (not res!42698) (not e!53709))))

(assert (=> d!20697 (= res!42698 (or (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))))

(declare-fun lt!38412 () ListLongMap!1471)

(assert (=> d!20697 (= lt!38414 lt!38412)))

(declare-fun lt!38415 () Unit!2350)

(declare-fun e!53699 () Unit!2350)

(assert (=> d!20697 (= lt!38415 e!53699)))

(declare-fun c!13102 () Bool)

(declare-fun e!53698 () Bool)

(assert (=> d!20697 (= c!13102 e!53698)))

(declare-fun res!42700 () Bool)

(assert (=> d!20697 (=> (not res!42700) (not e!53698))))

(assert (=> d!20697 (= res!42700 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (=> d!20697 (= lt!38412 e!53706)))

(declare-fun c!13103 () Bool)

(assert (=> d!20697 (= c!13103 (and (not (= (bvand lt!37461 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!37461 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20697 (validMask!0 (mask!6299 newMap!16))))

(assert (=> d!20697 (= (getCurrentListMap!437 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37461 (zeroValue!2189 newMap!16) lt!37195 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) lt!38414)))

(declare-fun bm!7680 () Bool)

(declare-fun call!7683 () Bool)

(assert (=> bm!7680 (= call!7683 (contains!750 lt!38414 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82320 () Bool)

(declare-fun e!53703 () Bool)

(assert (=> b!82320 (= e!53703 (not call!7683))))

(declare-fun b!82321 () Bool)

(assert (=> b!82321 (= e!53705 call!7687)))

(declare-fun b!82322 () Bool)

(assert (=> b!82322 (= e!53709 e!53703)))

(declare-fun c!13106 () Bool)

(assert (=> b!82322 (= c!13106 (not (= (bvand lt!37461 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!82323 () Bool)

(declare-fun e!53701 () Bool)

(declare-fun e!53707 () Bool)

(assert (=> b!82323 (= e!53701 e!53707)))

(declare-fun res!42697 () Bool)

(declare-fun call!7688 () Bool)

(assert (=> b!82323 (= res!42697 call!7688)))

(assert (=> b!82323 (=> (not res!42697) (not e!53707))))

(declare-fun b!82324 () Bool)

(declare-fun res!42699 () Bool)

(assert (=> b!82324 (=> (not res!42699) (not e!53709))))

(assert (=> b!82324 (= res!42699 e!53701)))

(declare-fun c!13105 () Bool)

(assert (=> b!82324 (= c!13105 (not (= (bvand lt!37461 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!82325 () Bool)

(declare-fun e!53702 () Bool)

(assert (=> b!82325 (= e!53702 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7681 () Bool)

(declare-fun call!7682 () ListLongMap!1471)

(declare-fun call!7686 () ListLongMap!1471)

(assert (=> bm!7681 (= call!7682 call!7686)))

(declare-fun bm!7682 () Bool)

(declare-fun call!7685 () ListLongMap!1471)

(assert (=> bm!7682 (= call!7686 call!7685)))

(declare-fun b!82326 () Bool)

(declare-fun lt!38416 () Unit!2350)

(assert (=> b!82326 (= e!53699 lt!38416)))

(declare-fun lt!38413 () ListLongMap!1471)

(assert (=> b!82326 (= lt!38413 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37461 (zeroValue!2189 newMap!16) lt!37195 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38401 () (_ BitVec 64))

(assert (=> b!82326 (= lt!38401 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38421 () (_ BitVec 64))

(assert (=> b!82326 (= lt!38421 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38402 () Unit!2350)

(assert (=> b!82326 (= lt!38402 (addStillContains!56 lt!38413 lt!38401 (zeroValue!2189 newMap!16) lt!38421))))

(assert (=> b!82326 (contains!750 (+!111 lt!38413 (tuple2!2203 lt!38401 (zeroValue!2189 newMap!16))) lt!38421)))

(declare-fun lt!38419 () Unit!2350)

(assert (=> b!82326 (= lt!38419 lt!38402)))

(declare-fun lt!38408 () ListLongMap!1471)

(assert (=> b!82326 (= lt!38408 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37461 (zeroValue!2189 newMap!16) lt!37195 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38417 () (_ BitVec 64))

(assert (=> b!82326 (= lt!38417 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38404 () (_ BitVec 64))

(assert (=> b!82326 (= lt!38404 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38422 () Unit!2350)

(assert (=> b!82326 (= lt!38422 (addApplyDifferent!56 lt!38408 lt!38417 lt!37195 lt!38404))))

(assert (=> b!82326 (= (apply!80 (+!111 lt!38408 (tuple2!2203 lt!38417 lt!37195)) lt!38404) (apply!80 lt!38408 lt!38404))))

(declare-fun lt!38405 () Unit!2350)

(assert (=> b!82326 (= lt!38405 lt!38422)))

(declare-fun lt!38411 () ListLongMap!1471)

(assert (=> b!82326 (= lt!38411 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37461 (zeroValue!2189 newMap!16) lt!37195 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38407 () (_ BitVec 64))

(assert (=> b!82326 (= lt!38407 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38409 () (_ BitVec 64))

(assert (=> b!82326 (= lt!38409 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!38420 () Unit!2350)

(assert (=> b!82326 (= lt!38420 (addApplyDifferent!56 lt!38411 lt!38407 (zeroValue!2189 newMap!16) lt!38409))))

(assert (=> b!82326 (= (apply!80 (+!111 lt!38411 (tuple2!2203 lt!38407 (zeroValue!2189 newMap!16))) lt!38409) (apply!80 lt!38411 lt!38409))))

(declare-fun lt!38406 () Unit!2350)

(assert (=> b!82326 (= lt!38406 lt!38420)))

(declare-fun lt!38410 () ListLongMap!1471)

(assert (=> b!82326 (= lt!38410 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37461 (zeroValue!2189 newMap!16) lt!37195 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun lt!38418 () (_ BitVec 64))

(assert (=> b!82326 (= lt!38418 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38403 () (_ BitVec 64))

(assert (=> b!82326 (= lt!38403 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82326 (= lt!38416 (addApplyDifferent!56 lt!38410 lt!38418 lt!37195 lt!38403))))

(assert (=> b!82326 (= (apply!80 (+!111 lt!38410 (tuple2!2203 lt!38418 lt!37195)) lt!38403) (apply!80 lt!38410 lt!38403))))

(declare-fun b!82327 () Bool)

(declare-fun Unit!2427 () Unit!2350)

(assert (=> b!82327 (= e!53699 Unit!2427)))

(declare-fun b!82328 () Bool)

(assert (=> b!82328 (= e!53703 e!53708)))

(declare-fun res!42695 () Bool)

(assert (=> b!82328 (= res!42695 call!7683)))

(assert (=> b!82328 (=> (not res!42695) (not e!53708))))

(declare-fun b!82329 () Bool)

(declare-fun c!13101 () Bool)

(assert (=> b!82329 (= c!13101 (and (not (= (bvand lt!37461 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!37461 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!53704 () ListLongMap!1471)

(assert (=> b!82329 (= e!53705 e!53704)))

(declare-fun b!82330 () Bool)

(assert (=> b!82330 (= e!53698 (validKeyInArray!0 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!82331 () Bool)

(assert (=> b!82331 (= e!53704 call!7682)))

(declare-fun bm!7683 () Bool)

(assert (=> bm!7683 (= call!7688 (contains!750 lt!38414 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82332 () Bool)

(assert (=> b!82332 (= e!53701 (not call!7688))))

(declare-fun b!82333 () Bool)

(assert (=> b!82333 (= e!53707 (= (apply!80 lt!38414 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2189 newMap!16)))))

(declare-fun bm!7684 () Bool)

(assert (=> bm!7684 (= call!7685 (getCurrentListMapNoExtraKeys!75 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) lt!37461 (zeroValue!2189 newMap!16) lt!37195 #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)))))

(declare-fun b!82334 () Bool)

(assert (=> b!82334 (= e!53700 (= (apply!80 lt!38414 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1901 (_values!2276 newMap!16)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82334 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2143 (_values!2276 newMap!16))))))

(assert (=> b!82334 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(declare-fun b!82335 () Bool)

(assert (=> b!82335 (= e!53704 call!7687)))

(declare-fun bm!7685 () Bool)

(assert (=> bm!7685 (= call!7684 (+!111 (ite c!13103 call!7685 (ite c!13104 call!7686 call!7682)) (ite (or c!13103 c!13104) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195))))))

(declare-fun b!82336 () Bool)

(declare-fun res!42701 () Bool)

(assert (=> b!82336 (=> (not res!42701) (not e!53709))))

(assert (=> b!82336 (= res!42701 e!53697)))

(declare-fun res!42696 () Bool)

(assert (=> b!82336 (=> res!42696 e!53697)))

(assert (=> b!82336 (= res!42696 (not e!53702))))

(declare-fun res!42702 () Bool)

(assert (=> b!82336 (=> (not res!42702) (not e!53702))))

(assert (=> b!82336 (= res!42702 (bvslt #b00000000000000000000000000000000 (size!2142 (_keys!3957 newMap!16))))))

(assert (= (and d!20697 c!13103) b!82316))

(assert (= (and d!20697 (not c!13103)) b!82318))

(assert (= (and b!82318 c!13104) b!82321))

(assert (= (and b!82318 (not c!13104)) b!82329))

(assert (= (and b!82329 c!13101) b!82335))

(assert (= (and b!82329 (not c!13101)) b!82331))

(assert (= (or b!82335 b!82331) bm!7681))

(assert (= (or b!82321 bm!7681) bm!7682))

(assert (= (or b!82321 b!82335) bm!7679))

(assert (= (or b!82316 bm!7682) bm!7684))

(assert (= (or b!82316 bm!7679) bm!7685))

(assert (= (and d!20697 res!42700) b!82330))

(assert (= (and d!20697 c!13102) b!82326))

(assert (= (and d!20697 (not c!13102)) b!82327))

(assert (= (and d!20697 res!42698) b!82336))

(assert (= (and b!82336 res!42702) b!82325))

(assert (= (and b!82336 (not res!42696)) b!82319))

(assert (= (and b!82319 res!42694) b!82334))

(assert (= (and b!82336 res!42701) b!82324))

(assert (= (and b!82324 c!13105) b!82323))

(assert (= (and b!82324 (not c!13105)) b!82332))

(assert (= (and b!82323 res!42697) b!82333))

(assert (= (or b!82323 b!82332) bm!7683))

(assert (= (and b!82324 res!42699) b!82322))

(assert (= (and b!82322 c!13106) b!82328))

(assert (= (and b!82322 (not c!13106)) b!82320))

(assert (= (and b!82328 res!42695) b!82317))

(assert (= (or b!82328 b!82320) bm!7680))

(declare-fun b_lambda!3657 () Bool)

(assert (=> (not b_lambda!3657) (not b!82334)))

(assert (=> b!82334 t!5218))

(declare-fun b_and!5001 () Bool)

(assert (= b_and!4997 (and (=> t!5218 result!2857) b_and!5001)))

(assert (=> b!82334 t!5220))

(declare-fun b_and!5003 () Bool)

(assert (= b_and!4999 (and (=> t!5220 result!2859) b_and!5003)))

(declare-fun m!84955 () Bool)

(assert (=> bm!7684 m!84955))

(declare-fun m!84957 () Bool)

(assert (=> bm!7680 m!84957))

(assert (=> b!82334 m!81991))

(assert (=> b!82334 m!81991))

(declare-fun m!84959 () Bool)

(assert (=> b!82334 m!84959))

(assert (=> b!82334 m!82029))

(assert (=> b!82334 m!82031))

(assert (=> b!82334 m!82029))

(assert (=> b!82334 m!82031))

(assert (=> b!82334 m!82033))

(assert (=> b!82325 m!81991))

(assert (=> b!82325 m!81991))

(assert (=> b!82325 m!82035))

(declare-fun m!84961 () Bool)

(assert (=> b!82316 m!84961))

(assert (=> b!82319 m!81991))

(assert (=> b!82319 m!81991))

(declare-fun m!84963 () Bool)

(assert (=> b!82319 m!84963))

(declare-fun m!84965 () Bool)

(assert (=> bm!7685 m!84965))

(assert (=> d!20697 m!82043))

(declare-fun m!84967 () Bool)

(assert (=> bm!7683 m!84967))

(declare-fun m!84969 () Bool)

(assert (=> b!82326 m!84969))

(declare-fun m!84971 () Bool)

(assert (=> b!82326 m!84971))

(declare-fun m!84973 () Bool)

(assert (=> b!82326 m!84973))

(assert (=> b!82326 m!81991))

(declare-fun m!84975 () Bool)

(assert (=> b!82326 m!84975))

(declare-fun m!84977 () Bool)

(assert (=> b!82326 m!84977))

(declare-fun m!84979 () Bool)

(assert (=> b!82326 m!84979))

(declare-fun m!84981 () Bool)

(assert (=> b!82326 m!84981))

(declare-fun m!84983 () Bool)

(assert (=> b!82326 m!84983))

(assert (=> b!82326 m!84971))

(assert (=> b!82326 m!84955))

(declare-fun m!84985 () Bool)

(assert (=> b!82326 m!84985))

(declare-fun m!84987 () Bool)

(assert (=> b!82326 m!84987))

(declare-fun m!84989 () Bool)

(assert (=> b!82326 m!84989))

(declare-fun m!84991 () Bool)

(assert (=> b!82326 m!84991))

(assert (=> b!82326 m!84979))

(declare-fun m!84993 () Bool)

(assert (=> b!82326 m!84993))

(declare-fun m!84995 () Bool)

(assert (=> b!82326 m!84995))

(assert (=> b!82326 m!84975))

(declare-fun m!84997 () Bool)

(assert (=> b!82326 m!84997))

(assert (=> b!82326 m!84985))

(declare-fun m!84999 () Bool)

(assert (=> b!82333 m!84999))

(declare-fun m!85001 () Bool)

(assert (=> b!82317 m!85001))

(assert (=> b!82330 m!81991))

(assert (=> b!82330 m!81991))

(assert (=> b!82330 m!82035))

(assert (=> d!19915 d!20697))

(declare-fun d!20699 () Bool)

(declare-fun e!53710 () Bool)

(assert (=> d!20699 e!53710))

(declare-fun res!42703 () Bool)

(assert (=> d!20699 (=> res!42703 e!53710)))

(declare-fun lt!38425 () Bool)

(assert (=> d!20699 (= res!42703 (not lt!38425))))

(declare-fun lt!38424 () Bool)

(assert (=> d!20699 (= lt!38425 lt!38424)))

(declare-fun lt!38423 () Unit!2350)

(declare-fun e!53711 () Unit!2350)

(assert (=> d!20699 (= lt!38423 e!53711)))

(declare-fun c!13107 () Bool)

(assert (=> d!20699 (= c!13107 lt!38424)))

(assert (=> d!20699 (= lt!38424 (containsKey!141 (toList!751 lt!37609) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20699 (= (contains!750 lt!37609 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38425)))

(declare-fun b!82337 () Bool)

(declare-fun lt!38426 () Unit!2350)

(assert (=> b!82337 (= e!53711 lt!38426)))

(assert (=> b!82337 (= lt!38426 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37609) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82337 (isDefined!91 (getValueByKey!137 (toList!751 lt!37609) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82338 () Bool)

(declare-fun Unit!2428 () Unit!2350)

(assert (=> b!82338 (= e!53711 Unit!2428)))

(declare-fun b!82339 () Bool)

(assert (=> b!82339 (= e!53710 (isDefined!91 (getValueByKey!137 (toList!751 lt!37609) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20699 c!13107) b!82337))

(assert (= (and d!20699 (not c!13107)) b!82338))

(assert (= (and d!20699 (not res!42703)) b!82339))

(declare-fun m!85003 () Bool)

(assert (=> d!20699 m!85003))

(declare-fun m!85005 () Bool)

(assert (=> b!82337 m!85005))

(declare-fun m!85007 () Bool)

(assert (=> b!82337 m!85007))

(assert (=> b!82337 m!85007))

(declare-fun m!85009 () Bool)

(assert (=> b!82337 m!85009))

(assert (=> b!82339 m!85007))

(assert (=> b!82339 m!85007))

(assert (=> b!82339 m!85009))

(assert (=> b!80865 d!20699))

(declare-fun b!82341 () Bool)

(declare-fun e!53712 () Option!143)

(declare-fun e!53713 () Option!143)

(assert (=> b!82341 (= e!53712 e!53713)))

(declare-fun c!13109 () Bool)

(assert (=> b!82341 (= c!13109 (and ((_ is Cons!1534) (toList!751 lt!37554)) (not (= (_1!1111 (h!2123 (toList!751 lt!37554))) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20701 () Bool)

(declare-fun c!13108 () Bool)

(assert (=> d!20701 (= c!13108 (and ((_ is Cons!1534) (toList!751 lt!37554)) (= (_1!1111 (h!2123 (toList!751 lt!37554))) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20701 (= (getValueByKey!137 (toList!751 lt!37554) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53712)))

(declare-fun b!82343 () Bool)

(assert (=> b!82343 (= e!53713 None!141)))

(declare-fun b!82342 () Bool)

(assert (=> b!82342 (= e!53713 (getValueByKey!137 (t!5209 (toList!751 lt!37554)) (_1!1111 (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82340 () Bool)

(assert (=> b!82340 (= e!53712 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37554)))))))

(assert (= (and d!20701 c!13108) b!82340))

(assert (= (and d!20701 (not c!13108)) b!82341))

(assert (= (and b!82341 c!13109) b!82342))

(assert (= (and b!82341 (not c!13109)) b!82343))

(declare-fun m!85011 () Bool)

(assert (=> b!82342 m!85011))

(assert (=> b!80776 d!20701))

(declare-fun d!20703 () Bool)

(declare-fun lt!38427 () Bool)

(assert (=> d!20703 (= lt!38427 (select (content!84 lt!37524) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun e!53715 () Bool)

(assert (=> d!20703 (= lt!38427 e!53715)))

(declare-fun res!42705 () Bool)

(assert (=> d!20703 (=> (not res!42705) (not e!53715))))

(assert (=> d!20703 (= res!42705 ((_ is Cons!1534) lt!37524))))

(assert (=> d!20703 (= (contains!753 lt!37524 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))) lt!38427)))

(declare-fun b!82344 () Bool)

(declare-fun e!53714 () Bool)

(assert (=> b!82344 (= e!53715 e!53714)))

(declare-fun res!42704 () Bool)

(assert (=> b!82344 (=> res!42704 e!53714)))

(assert (=> b!82344 (= res!42704 (= (h!2123 lt!37524) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun b!82345 () Bool)

(assert (=> b!82345 (= e!53714 (contains!753 (t!5209 lt!37524) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(assert (= (and d!20703 res!42705) b!82344))

(assert (= (and b!82344 (not res!42704)) b!82345))

(declare-fun m!85013 () Bool)

(assert (=> d!20703 m!85013))

(declare-fun m!85015 () Bool)

(assert (=> d!20703 m!85015))

(declare-fun m!85017 () Bool)

(assert (=> b!82345 m!85017))

(assert (=> b!80717 d!20703))

(declare-fun d!20705 () Bool)

(declare-fun res!42706 () Bool)

(declare-fun e!53716 () Bool)

(assert (=> d!20705 (=> res!42706 e!53716)))

(assert (=> d!20705 (= res!42706 (and ((_ is Cons!1534) lt!37295) (= (_1!1111 (h!2123 lt!37295)) (_1!1111 lt!37188))))))

(assert (=> d!20705 (= (containsKey!141 lt!37295 (_1!1111 lt!37188)) e!53716)))

(declare-fun b!82346 () Bool)

(declare-fun e!53717 () Bool)

(assert (=> b!82346 (= e!53716 e!53717)))

(declare-fun res!42707 () Bool)

(assert (=> b!82346 (=> (not res!42707) (not e!53717))))

(assert (=> b!82346 (= res!42707 (and (or (not ((_ is Cons!1534) lt!37295)) (bvsle (_1!1111 (h!2123 lt!37295)) (_1!1111 lt!37188))) ((_ is Cons!1534) lt!37295) (bvslt (_1!1111 (h!2123 lt!37295)) (_1!1111 lt!37188))))))

(declare-fun b!82347 () Bool)

(assert (=> b!82347 (= e!53717 (containsKey!141 (t!5209 lt!37295) (_1!1111 lt!37188)))))

(assert (= (and d!20705 (not res!42706)) b!82346))

(assert (= (and b!82346 res!42707) b!82347))

(declare-fun m!85019 () Bool)

(assert (=> b!82347 m!85019))

(assert (=> b!80753 d!20705))

(declare-fun d!20707 () Bool)

(declare-fun e!53718 () Bool)

(assert (=> d!20707 e!53718))

(declare-fun res!42708 () Bool)

(assert (=> d!20707 (=> (not res!42708) (not e!53718))))

(declare-fun lt!38431 () ListLongMap!1471)

(assert (=> d!20707 (= res!42708 (contains!750 lt!38431 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(declare-fun lt!38428 () List!1538)

(assert (=> d!20707 (= lt!38431 (ListLongMap!1472 lt!38428))))

(declare-fun lt!38429 () Unit!2350)

(declare-fun lt!38430 () Unit!2350)

(assert (=> d!20707 (= lt!38429 lt!38430)))

(assert (=> d!20707 (= (getValueByKey!137 lt!38428 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20707 (= lt!38430 (lemmaContainsTupThenGetReturnValue!56 lt!38428 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20707 (= lt!38428 (insertStrictlySorted!58 (toList!751 call!7505) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (=> d!20707 (= (+!111 call!7505 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))) lt!38431)))

(declare-fun b!82348 () Bool)

(declare-fun res!42709 () Bool)

(assert (=> b!82348 (=> (not res!42709) (not e!53718))))

(assert (=> b!82348 (= res!42709 (= (getValueByKey!137 (toList!751 lt!38431) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(declare-fun b!82349 () Bool)

(assert (=> b!82349 (= e!53718 (contains!753 (toList!751 lt!38431) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))

(assert (= (and d!20707 res!42708) b!82348))

(assert (= (and b!82348 res!42709) b!82349))

(declare-fun m!85021 () Bool)

(assert (=> d!20707 m!85021))

(declare-fun m!85023 () Bool)

(assert (=> d!20707 m!85023))

(declare-fun m!85025 () Bool)

(assert (=> d!20707 m!85025))

(declare-fun m!85027 () Bool)

(assert (=> d!20707 m!85027))

(declare-fun m!85029 () Bool)

(assert (=> b!82348 m!85029))

(declare-fun m!85031 () Bool)

(assert (=> b!82349 m!85031))

(assert (=> b!80687 d!20707))

(assert (=> b!81118 d!20137))

(declare-fun d!20709 () Bool)

(declare-fun e!53719 () Bool)

(assert (=> d!20709 e!53719))

(declare-fun res!42710 () Bool)

(assert (=> d!20709 (=> (not res!42710) (not e!53719))))

(declare-fun lt!38435 () ListLongMap!1471)

(assert (=> d!20709 (= res!42710 (contains!750 lt!38435 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun lt!38432 () List!1538)

(assert (=> d!20709 (= lt!38435 (ListLongMap!1472 lt!38432))))

(declare-fun lt!38433 () Unit!2350)

(declare-fun lt!38434 () Unit!2350)

(assert (=> d!20709 (= lt!38433 lt!38434)))

(assert (=> d!20709 (= (getValueByKey!137 lt!38432 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20709 (= lt!38434 (lemmaContainsTupThenGetReturnValue!56 lt!38432 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20709 (= lt!38432 (insertStrictlySorted!58 (toList!751 (map!1183 newMap!16)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (=> d!20709 (= (+!111 (map!1183 newMap!16) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!38435)))

(declare-fun b!82350 () Bool)

(declare-fun res!42711 () Bool)

(assert (=> b!82350 (=> (not res!42711) (not e!53719))))

(assert (=> b!82350 (= res!42711 (= (getValueByKey!137 (toList!751 lt!38435) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(declare-fun b!82351 () Bool)

(assert (=> b!82351 (= e!53719 (contains!753 (toList!751 lt!38435) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!20709 res!42710) b!82350))

(assert (= (and b!82350 res!42711) b!82351))

(declare-fun m!85033 () Bool)

(assert (=> d!20709 m!85033))

(declare-fun m!85035 () Bool)

(assert (=> d!20709 m!85035))

(declare-fun m!85037 () Bool)

(assert (=> d!20709 m!85037))

(declare-fun m!85039 () Bool)

(assert (=> d!20709 m!85039))

(declare-fun m!85041 () Bool)

(assert (=> b!82350 m!85041))

(declare-fun m!85043 () Bool)

(assert (=> b!82351 m!85043))

(assert (=> b!81118 d!20709))

(assert (=> b!81118 d!19669))

(assert (=> d!19733 d!19737))

(assert (=> d!19733 d!19755))

(declare-fun d!20711 () Bool)

(assert (=> d!20711 (contains!750 (+!111 lt!37384 (tuple2!2203 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!37392)))

(assert (=> d!20711 true))

(declare-fun _$35!324 () Unit!2350)

(assert (=> d!20711 (= (choose!480 lt!37384 lt!37372 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))) lt!37392) _$35!324)))

(declare-fun bs!3480 () Bool)

(assert (= bs!3480 d!20711))

(assert (=> bs!3480 m!81899))

(assert (=> bs!3480 m!81899))

(assert (=> bs!3480 m!81901))

(assert (=> d!19733 d!20711))

(declare-fun d!20713 () Bool)

(declare-fun e!53720 () Bool)

(assert (=> d!20713 e!53720))

(declare-fun res!42712 () Bool)

(assert (=> d!20713 (=> res!42712 e!53720)))

(declare-fun lt!38438 () Bool)

(assert (=> d!20713 (= res!42712 (not lt!38438))))

(declare-fun lt!38437 () Bool)

(assert (=> d!20713 (= lt!38438 lt!38437)))

(declare-fun lt!38436 () Unit!2350)

(declare-fun e!53721 () Unit!2350)

(assert (=> d!20713 (= lt!38436 e!53721)))

(declare-fun c!13110 () Bool)

(assert (=> d!20713 (= c!13110 lt!38437)))

(assert (=> d!20713 (= lt!38437 (containsKey!141 (toList!751 lt!37384) lt!37392))))

(assert (=> d!20713 (= (contains!750 lt!37384 lt!37392) lt!38438)))

(declare-fun b!82353 () Bool)

(declare-fun lt!38439 () Unit!2350)

(assert (=> b!82353 (= e!53721 lt!38439)))

(assert (=> b!82353 (= lt!38439 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37384) lt!37392))))

(assert (=> b!82353 (isDefined!91 (getValueByKey!137 (toList!751 lt!37384) lt!37392))))

(declare-fun b!82354 () Bool)

(declare-fun Unit!2429 () Unit!2350)

(assert (=> b!82354 (= e!53721 Unit!2429)))

(declare-fun b!82355 () Bool)

(assert (=> b!82355 (= e!53720 (isDefined!91 (getValueByKey!137 (toList!751 lt!37384) lt!37392)))))

(assert (= (and d!20713 c!13110) b!82353))

(assert (= (and d!20713 (not c!13110)) b!82354))

(assert (= (and d!20713 (not res!42712)) b!82355))

(declare-fun m!85045 () Bool)

(assert (=> d!20713 m!85045))

(declare-fun m!85047 () Bool)

(assert (=> b!82353 m!85047))

(declare-fun m!85049 () Bool)

(assert (=> b!82353 m!85049))

(assert (=> b!82353 m!85049))

(declare-fun m!85051 () Bool)

(assert (=> b!82353 m!85051))

(assert (=> b!82355 m!85049))

(assert (=> b!82355 m!85049))

(assert (=> b!82355 m!85051))

(assert (=> d!19733 d!20713))

(declare-fun d!20715 () Bool)

(assert (=> d!20715 (= (apply!80 lt!37637 (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (getValueByKey!137 (toList!751 lt!37637) (select (arr!1900 (_keys!3957 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3481 () Bool)

(assert (= bs!3481 d!20715))

(assert (=> bs!3481 m!81991))

(assert (=> bs!3481 m!84047))

(assert (=> bs!3481 m!84047))

(declare-fun m!85053 () Bool)

(assert (=> bs!3481 m!85053))

(assert (=> b!80903 d!20715))

(declare-fun c!13111 () Bool)

(declare-fun d!20717 () Bool)

(assert (=> d!20717 (= c!13111 ((_ is ValueCellFull!915) (select (arr!1901 (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466)) #b00000000000000000000000000000000)))))

(declare-fun e!53722 () V!3003)

(assert (=> d!20717 (= (get!1195 (select (arr!1901 (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!53722)))

(declare-fun b!82356 () Bool)

(assert (=> b!82356 (= e!53722 (get!1196 (select (arr!1901 (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82357 () Bool)

(assert (=> b!82357 (= e!53722 (get!1197 (select (arr!1901 (ite (or c!12617 c!12612) (_values!2276 newMap!16) lt!37466)) #b00000000000000000000000000000000) (dynLambda!347 (defaultEntry!2293 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20717 c!13111) b!82356))

(assert (= (and d!20717 (not c!13111)) b!82357))

(assert (=> b!82356 m!82407))

(assert (=> b!82356 m!82031))

(declare-fun m!85055 () Bool)

(assert (=> b!82356 m!85055))

(assert (=> b!82357 m!82407))

(assert (=> b!82357 m!82031))

(declare-fun m!85057 () Bool)

(assert (=> b!82357 m!85057))

(assert (=> b!80903 d!20717))

(declare-fun d!20719 () Bool)

(declare-fun lt!38440 () Bool)

(assert (=> d!20719 (= lt!38440 (select (content!84 lt!37755) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun e!53724 () Bool)

(assert (=> d!20719 (= lt!38440 e!53724)))

(declare-fun res!42714 () Bool)

(assert (=> d!20719 (=> (not res!42714) (not e!53724))))

(assert (=> d!20719 (= res!42714 ((_ is Cons!1534) lt!37755))))

(assert (=> d!20719 (= (contains!753 lt!37755 (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))) lt!38440)))

(declare-fun b!82358 () Bool)

(declare-fun e!53723 () Bool)

(assert (=> b!82358 (= e!53724 e!53723)))

(declare-fun res!42713 () Bool)

(assert (=> b!82358 (=> res!42713 e!53723)))

(assert (=> b!82358 (= res!42713 (= (h!2123 lt!37755) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun b!82359 () Bool)

(assert (=> b!82359 (= e!53723 (contains!753 (t!5209 lt!37755) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(assert (= (and d!20719 res!42714) b!82358))

(assert (= (and b!82358 (not res!42713)) b!82359))

(declare-fun m!85059 () Bool)

(assert (=> d!20719 m!85059))

(declare-fun m!85061 () Bool)

(assert (=> d!20719 m!85061))

(declare-fun m!85063 () Bool)

(assert (=> b!82359 m!85063))

(assert (=> b!81019 d!20719))

(declare-fun d!20721 () Bool)

(assert (=> d!20721 (= (get!1198 (getValueByKey!137 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2614 (getValueByKey!137 (toList!751 lt!37385) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19785 d!20721))

(assert (=> d!19785 d!20207))

(declare-fun d!20723 () Bool)

(assert (=> d!20723 (= (size!2146 newMap!16) (bvadd (_size!418 newMap!16) (bvsdiv (bvadd (extraKeys!2140 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!80797 d!20723))

(declare-fun b!82361 () Bool)

(declare-fun e!53725 () Option!143)

(declare-fun e!53726 () Option!143)

(assert (=> b!82361 (= e!53725 e!53726)))

(declare-fun c!13113 () Bool)

(assert (=> b!82361 (= c!13113 (and ((_ is Cons!1534) (toList!751 lt!37730)) (not (= (_1!1111 (h!2123 (toList!751 lt!37730))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20725 () Bool)

(declare-fun c!13112 () Bool)

(assert (=> d!20725 (= c!13112 (and ((_ is Cons!1534) (toList!751 lt!37730)) (= (_1!1111 (h!2123 (toList!751 lt!37730))) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20725 (= (getValueByKey!137 (toList!751 lt!37730) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53725)))

(declare-fun b!82363 () Bool)

(assert (=> b!82363 (= e!53726 None!141)))

(declare-fun b!82362 () Bool)

(assert (=> b!82362 (= e!53726 (getValueByKey!137 (t!5209 (toList!751 lt!37730)) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82360 () Bool)

(assert (=> b!82360 (= e!53725 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37730)))))))

(assert (= (and d!20725 c!13112) b!82360))

(assert (= (and d!20725 (not c!13112)) b!82361))

(assert (= (and b!82361 c!13113) b!82362))

(assert (= (and b!82361 (not c!13113)) b!82363))

(declare-fun m!85065 () Bool)

(assert (=> b!82362 m!85065))

(assert (=> b!80988 d!20725))

(declare-fun d!20727 () Bool)

(declare-fun lt!38441 () Bool)

(assert (=> d!20727 (= lt!38441 (select (content!84 (toList!751 lt!37572)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun e!53728 () Bool)

(assert (=> d!20727 (= lt!38441 e!53728)))

(declare-fun res!42716 () Bool)

(assert (=> d!20727 (=> (not res!42716) (not e!53728))))

(assert (=> d!20727 (= res!42716 ((_ is Cons!1534) (toList!751 lt!37572)))))

(assert (=> d!20727 (= (contains!753 (toList!751 lt!37572) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)) lt!38441)))

(declare-fun b!82364 () Bool)

(declare-fun e!53727 () Bool)

(assert (=> b!82364 (= e!53728 e!53727)))

(declare-fun res!42715 () Bool)

(assert (=> b!82364 (=> res!42715 e!53727)))

(assert (=> b!82364 (= res!42715 (= (h!2123 (toList!751 lt!37572)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(declare-fun b!82365 () Bool)

(assert (=> b!82365 (= e!53727 (contains!753 (t!5209 (toList!751 lt!37572)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))

(assert (= (and d!20727 res!42716) b!82364))

(assert (= (and b!82364 (not res!42715)) b!82365))

(declare-fun m!85067 () Bool)

(assert (=> d!20727 m!85067))

(declare-fun m!85069 () Bool)

(assert (=> d!20727 m!85069))

(declare-fun m!85071 () Bool)

(assert (=> b!82365 m!85071))

(assert (=> b!80787 d!20727))

(declare-fun d!20729 () Bool)

(declare-fun e!53730 () Bool)

(assert (=> d!20729 e!53730))

(declare-fun res!42717 () Bool)

(assert (=> d!20729 (=> (not res!42717) (not e!53730))))

(declare-fun lt!38442 () List!1538)

(assert (=> d!20729 (= res!42717 (isStrictlySorted!291 lt!38442))))

(declare-fun e!53729 () List!1538)

(assert (=> d!20729 (= lt!38442 e!53729)))

(declare-fun c!13117 () Bool)

(assert (=> d!20729 (= c!13117 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37187))) (bvslt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37187)))) (_1!1111 lt!37197))))))

(assert (=> d!20729 (isStrictlySorted!291 (t!5209 (toList!751 lt!37187)))))

(assert (=> d!20729 (= (insertStrictlySorted!58 (t!5209 (toList!751 lt!37187)) (_1!1111 lt!37197) (_2!1111 lt!37197)) lt!38442)))

(declare-fun b!82366 () Bool)

(assert (=> b!82366 (= e!53730 (contains!753 lt!38442 (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun bm!7686 () Bool)

(declare-fun call!7689 () List!1538)

(declare-fun call!7690 () List!1538)

(assert (=> bm!7686 (= call!7689 call!7690)))

(declare-fun b!82367 () Bool)

(declare-fun res!42718 () Bool)

(assert (=> b!82367 (=> (not res!42718) (not e!53730))))

(assert (=> b!82367 (= res!42718 (containsKey!141 lt!38442 (_1!1111 lt!37197)))))

(declare-fun b!82368 () Bool)

(declare-fun e!53732 () List!1538)

(assert (=> b!82368 (= e!53732 (insertStrictlySorted!58 (t!5209 (t!5209 (toList!751 lt!37187))) (_1!1111 lt!37197) (_2!1111 lt!37197)))))

(declare-fun b!82369 () Bool)

(assert (=> b!82369 (= e!53729 call!7690)))

(declare-fun bm!7687 () Bool)

(assert (=> bm!7687 (= call!7690 ($colon$colon!69 e!53732 (ite c!13117 (h!2123 (t!5209 (toList!751 lt!37187))) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197)))))))

(declare-fun c!13115 () Bool)

(assert (=> bm!7687 (= c!13115 c!13117)))

(declare-fun b!82370 () Bool)

(declare-fun c!13116 () Bool)

(declare-fun c!13114 () Bool)

(assert (=> b!82370 (= e!53732 (ite c!13114 (t!5209 (t!5209 (toList!751 lt!37187))) (ite c!13116 (Cons!1534 (h!2123 (t!5209 (toList!751 lt!37187))) (t!5209 (t!5209 (toList!751 lt!37187)))) Nil!1535)))))

(declare-fun b!82371 () Bool)

(declare-fun e!53733 () List!1538)

(assert (=> b!82371 (= e!53733 call!7689)))

(declare-fun b!82372 () Bool)

(declare-fun e!53731 () List!1538)

(declare-fun call!7691 () List!1538)

(assert (=> b!82372 (= e!53731 call!7691)))

(declare-fun b!82373 () Bool)

(assert (=> b!82373 (= c!13116 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37187))) (bvsgt (_1!1111 (h!2123 (t!5209 (toList!751 lt!37187)))) (_1!1111 lt!37197))))))

(assert (=> b!82373 (= e!53733 e!53731)))

(declare-fun b!82374 () Bool)

(assert (=> b!82374 (= e!53731 call!7691)))

(declare-fun bm!7688 () Bool)

(assert (=> bm!7688 (= call!7691 call!7689)))

(declare-fun b!82375 () Bool)

(assert (=> b!82375 (= e!53729 e!53733)))

(assert (=> b!82375 (= c!13114 (and ((_ is Cons!1534) (t!5209 (toList!751 lt!37187))) (= (_1!1111 (h!2123 (t!5209 (toList!751 lt!37187)))) (_1!1111 lt!37197))))))

(assert (= (and d!20729 c!13117) b!82369))

(assert (= (and d!20729 (not c!13117)) b!82375))

(assert (= (and b!82375 c!13114) b!82371))

(assert (= (and b!82375 (not c!13114)) b!82373))

(assert (= (and b!82373 c!13116) b!82372))

(assert (= (and b!82373 (not c!13116)) b!82374))

(assert (= (or b!82372 b!82374) bm!7688))

(assert (= (or b!82371 bm!7688) bm!7686))

(assert (= (or b!82369 bm!7686) bm!7687))

(assert (= (and bm!7687 c!13115) b!82368))

(assert (= (and bm!7687 (not c!13115)) b!82370))

(assert (= (and d!20729 res!42717) b!82367))

(assert (= (and b!82367 res!42718) b!82366))

(declare-fun m!85073 () Bool)

(assert (=> b!82367 m!85073))

(declare-fun m!85075 () Bool)

(assert (=> bm!7687 m!85075))

(declare-fun m!85077 () Bool)

(assert (=> d!20729 m!85077))

(assert (=> d!20729 m!84483))

(declare-fun m!85079 () Bool)

(assert (=> b!82368 m!85079))

(declare-fun m!85081 () Bool)

(assert (=> b!82366 m!85081))

(assert (=> b!80738 d!20729))

(declare-fun lt!38443 () Bool)

(declare-fun d!20731 () Bool)

(assert (=> d!20731 (= lt!38443 (select (content!84 (toList!751 lt!37746)) (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun e!53735 () Bool)

(assert (=> d!20731 (= lt!38443 e!53735)))

(declare-fun res!42720 () Bool)

(assert (=> d!20731 (=> (not res!42720) (not e!53735))))

(assert (=> d!20731 (= res!42720 ((_ is Cons!1534) (toList!751 lt!37746)))))

(assert (=> d!20731 (= (contains!753 (toList!751 lt!37746) (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) lt!38443)))

(declare-fun b!82376 () Bool)

(declare-fun e!53734 () Bool)

(assert (=> b!82376 (= e!53735 e!53734)))

(declare-fun res!42719 () Bool)

(assert (=> b!82376 (=> res!42719 e!53734)))

(assert (=> b!82376 (= res!42719 (= (h!2123 (toList!751 lt!37746)) (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!82377 () Bool)

(assert (=> b!82377 (= e!53734 (contains!753 (t!5209 (toList!751 lt!37746)) (ite c!12617 (ite c!12610 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 lt!37195) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 lt!37195)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(assert (= (and d!20731 res!42720) b!82376))

(assert (= (and b!82376 (not res!42719)) b!82377))

(declare-fun m!85083 () Bool)

(assert (=> d!20731 m!85083))

(declare-fun m!85085 () Bool)

(assert (=> d!20731 m!85085))

(declare-fun m!85087 () Bool)

(assert (=> b!82377 m!85087))

(assert (=> b!80997 d!20731))

(declare-fun d!20733 () Bool)

(declare-fun lt!38444 () Bool)

(assert (=> d!20733 (= lt!38444 (select (content!84 lt!37496) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun e!53737 () Bool)

(assert (=> d!20733 (= lt!38444 e!53737)))

(declare-fun res!42722 () Bool)

(assert (=> d!20733 (=> (not res!42722) (not e!53737))))

(assert (=> d!20733 (= res!42722 ((_ is Cons!1534) lt!37496))))

(assert (=> d!20733 (= (contains!753 lt!37496 (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))) lt!38444)))

(declare-fun b!82378 () Bool)

(declare-fun e!53736 () Bool)

(assert (=> b!82378 (= e!53737 e!53736)))

(declare-fun res!42721 () Bool)

(assert (=> b!82378 (=> res!42721 e!53736)))

(assert (=> b!82378 (= res!42721 (= (h!2123 lt!37496) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun b!82379 () Bool)

(assert (=> b!82379 (= e!53736 (contains!753 (t!5209 lt!37496) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(assert (= (and d!20733 res!42722) b!82378))

(assert (= (and b!82378 (not res!42721)) b!82379))

(declare-fun m!85089 () Bool)

(assert (=> d!20733 m!85089))

(declare-fun m!85091 () Bool)

(assert (=> d!20733 m!85091))

(declare-fun m!85093 () Bool)

(assert (=> b!82379 m!85093))

(assert (=> b!80677 d!20733))

(assert (=> d!19899 d!19897))

(declare-fun d!20735 () Bool)

(assert (=> d!20735 (= (getValueByKey!137 lt!37303 (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202)))))

(assert (=> d!20735 true))

(declare-fun _$22!405 () Unit!2350)

(assert (=> d!20735 (= (choose!478 lt!37303 (_1!1111 lt!37202) (_2!1111 lt!37202)) _$22!405)))

(declare-fun bs!3482 () Bool)

(assert (= bs!3482 d!20735))

(assert (=> bs!3482 m!81833))

(assert (=> d!19899 d!20735))

(declare-fun d!20737 () Bool)

(declare-fun res!42723 () Bool)

(declare-fun e!53738 () Bool)

(assert (=> d!20737 (=> res!42723 e!53738)))

(assert (=> d!20737 (= res!42723 (or ((_ is Nil!1535) lt!37303) ((_ is Nil!1535) (t!5209 lt!37303))))))

(assert (=> d!20737 (= (isStrictlySorted!291 lt!37303) e!53738)))

(declare-fun b!82380 () Bool)

(declare-fun e!53739 () Bool)

(assert (=> b!82380 (= e!53738 e!53739)))

(declare-fun res!42724 () Bool)

(assert (=> b!82380 (=> (not res!42724) (not e!53739))))

(assert (=> b!82380 (= res!42724 (bvslt (_1!1111 (h!2123 lt!37303)) (_1!1111 (h!2123 (t!5209 lt!37303)))))))

(declare-fun b!82381 () Bool)

(assert (=> b!82381 (= e!53739 (isStrictlySorted!291 (t!5209 lt!37303)))))

(assert (= (and d!20737 (not res!42723)) b!82380))

(assert (= (and b!82380 res!42724) b!82381))

(declare-fun m!85095 () Bool)

(assert (=> b!82381 m!85095))

(assert (=> d!19899 d!20737))

(assert (=> b!81036 d!19937))

(declare-fun d!20739 () Bool)

(declare-fun res!42725 () Bool)

(declare-fun e!53740 () Bool)

(assert (=> d!20739 (=> res!42725 e!53740)))

(assert (=> d!20739 (= res!42725 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> d!20739 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992)))) e!53740)))

(declare-fun b!82382 () Bool)

(declare-fun e!53742 () Bool)

(assert (=> b!82382 (= e!53740 e!53742)))

(declare-fun c!13118 () Bool)

(assert (=> b!82382 (= c!13118 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!82383 () Bool)

(declare-fun e!53741 () Bool)

(assert (=> b!82383 (= e!53742 e!53741)))

(declare-fun lt!38446 () (_ BitVec 64))

(assert (=> b!82383 (= lt!38446 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!38447 () Unit!2350)

(assert (=> b!82383 (= lt!38447 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) lt!38446 #b00000000000000000000000000000000))))

(assert (=> b!82383 (arrayContainsKey!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) lt!38446 #b00000000000000000000000000000000)))

(declare-fun lt!38445 () Unit!2350)

(assert (=> b!82383 (= lt!38445 lt!38447)))

(declare-fun res!42726 () Bool)

(assert (=> b!82383 (= res!42726 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b00000000000000000000000000000000) (_keys!3957 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992)))) (Found!251 #b00000000000000000000000000000000)))))

(assert (=> b!82383 (=> (not res!42726) (not e!53741))))

(declare-fun b!82384 () Bool)

(declare-fun call!7692 () Bool)

(assert (=> b!82384 (= e!53741 call!7692)))

(declare-fun bm!7689 () Bool)

(assert (=> bm!7689 (= call!7692 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3957 (v!2610 (underlying!284 thiss!992))) (mask!6299 (v!2610 (underlying!284 thiss!992)))))))

(declare-fun b!82385 () Bool)

(assert (=> b!82385 (= e!53742 call!7692)))

(assert (= (and d!20739 (not res!42725)) b!82382))

(assert (= (and b!82382 c!13118) b!82383))

(assert (= (and b!82382 (not c!13118)) b!82385))

(assert (= (and b!82383 res!42726) b!82384))

(assert (= (or b!82384 b!82385) bm!7689))

(assert (=> b!82382 m!83457))

(assert (=> b!82382 m!83457))

(assert (=> b!82382 m!83461))

(assert (=> b!82383 m!83457))

(declare-fun m!85097 () Bool)

(assert (=> b!82383 m!85097))

(declare-fun m!85099 () Bool)

(assert (=> b!82383 m!85099))

(assert (=> b!82383 m!83457))

(declare-fun m!85101 () Bool)

(assert (=> b!82383 m!85101))

(declare-fun m!85103 () Bool)

(assert (=> bm!7689 m!85103))

(assert (=> b!81184 d!20739))

(assert (=> d!19823 d!19825))

(assert (=> d!19823 d!19827))

(declare-fun d!20741 () Bool)

(assert (=> d!20741 (isDefined!91 (getValueByKey!137 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (=> d!20741 true))

(declare-fun _$12!329 () Unit!2350)

(assert (=> d!20741 (= (choose!485 (toList!751 lt!37199) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) _$12!329)))

(declare-fun bs!3483 () Bool)

(assert (= bs!3483 d!20741))

(assert (=> bs!3483 m!81585))

(assert (=> bs!3483 m!81921))

(assert (=> bs!3483 m!81921))

(assert (=> bs!3483 m!81923))

(assert (=> d!19823 d!20741))

(declare-fun d!20743 () Bool)

(declare-fun res!42727 () Bool)

(declare-fun e!53743 () Bool)

(assert (=> d!20743 (=> res!42727 e!53743)))

(assert (=> d!20743 (= res!42727 (or ((_ is Nil!1535) (toList!751 lt!37199)) ((_ is Nil!1535) (t!5209 (toList!751 lt!37199)))))))

(assert (=> d!20743 (= (isStrictlySorted!291 (toList!751 lt!37199)) e!53743)))

(declare-fun b!82386 () Bool)

(declare-fun e!53744 () Bool)

(assert (=> b!82386 (= e!53743 e!53744)))

(declare-fun res!42728 () Bool)

(assert (=> b!82386 (=> (not res!42728) (not e!53744))))

(assert (=> b!82386 (= res!42728 (bvslt (_1!1111 (h!2123 (toList!751 lt!37199))) (_1!1111 (h!2123 (t!5209 (toList!751 lt!37199))))))))

(declare-fun b!82387 () Bool)

(assert (=> b!82387 (= e!53744 (isStrictlySorted!291 (t!5209 (toList!751 lt!37199))))))

(assert (= (and d!20743 (not res!42727)) b!82386))

(assert (= (and b!82386 res!42728) b!82387))

(declare-fun m!85105 () Bool)

(assert (=> b!82387 m!85105))

(assert (=> d!19823 d!20743))

(assert (=> b!81012 d!20515))

(assert (=> b!81012 d!19919))

(declare-fun d!20745 () Bool)

(assert (=> d!20745 (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38448 () Unit!2350)

(assert (=> d!20745 (= lt!38448 (choose!485 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53745 () Bool)

(assert (=> d!20745 e!53745))

(declare-fun res!42729 () Bool)

(assert (=> d!20745 (=> (not res!42729) (not e!53745))))

(assert (=> d!20745 (= res!42729 (isStrictlySorted!291 (toList!751 lt!37326)))))

(assert (=> d!20745 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000) lt!38448)))

(declare-fun b!82388 () Bool)

(assert (=> b!82388 (= e!53745 (containsKey!141 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20745 res!42729) b!82388))

(assert (=> d!20745 m!82375))

(assert (=> d!20745 m!82375))

(assert (=> d!20745 m!82377))

(declare-fun m!85107 () Bool)

(assert (=> d!20745 m!85107))

(assert (=> d!20745 m!83327))

(assert (=> b!82388 m!82371))

(assert (=> b!80877 d!20745))

(declare-fun d!20747 () Bool)

(assert (=> d!20747 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3484 () Bool)

(assert (= bs!3484 d!20747))

(assert (=> bs!3484 m!82375))

(declare-fun m!85109 () Bool)

(assert (=> bs!3484 m!85109))

(assert (=> b!80877 d!20747))

(declare-fun b!82390 () Bool)

(declare-fun e!53746 () Option!143)

(declare-fun e!53747 () Option!143)

(assert (=> b!82390 (= e!53746 e!53747)))

(declare-fun c!13120 () Bool)

(assert (=> b!82390 (= c!13120 (and ((_ is Cons!1534) (toList!751 lt!37326)) (not (= (_1!1111 (h!2123 (toList!751 lt!37326))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!20749 () Bool)

(declare-fun c!13119 () Bool)

(assert (=> d!20749 (= c!13119 (and ((_ is Cons!1534) (toList!751 lt!37326)) (= (_1!1111 (h!2123 (toList!751 lt!37326))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20749 (= (getValueByKey!137 (toList!751 lt!37326) #b1000000000000000000000000000000000000000000000000000000000000000) e!53746)))

(declare-fun b!82392 () Bool)

(assert (=> b!82392 (= e!53747 None!141)))

(declare-fun b!82391 () Bool)

(assert (=> b!82391 (= e!53747 (getValueByKey!137 (t!5209 (toList!751 lt!37326)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82389 () Bool)

(assert (=> b!82389 (= e!53746 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37326)))))))

(assert (= (and d!20749 c!13119) b!82389))

(assert (= (and d!20749 (not c!13119)) b!82390))

(assert (= (and b!82390 c!13120) b!82391))

(assert (= (and b!82390 (not c!13120)) b!82392))

(declare-fun m!85111 () Bool)

(assert (=> b!82391 m!85111))

(assert (=> b!80877 d!20749))

(declare-fun d!20751 () Bool)

(assert (=> d!20751 (= (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!335 (getValueByKey!137 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3485 () Bool)

(assert (= bs!3485 d!20751))

(assert (=> bs!3485 m!82893))

(declare-fun m!85113 () Bool)

(assert (=> bs!3485 m!85113))

(assert (=> b!81153 d!20751))

(declare-fun b!82394 () Bool)

(declare-fun e!53748 () Option!143)

(declare-fun e!53749 () Option!143)

(assert (=> b!82394 (= e!53748 e!53749)))

(declare-fun c!13122 () Bool)

(assert (=> b!82394 (= c!13122 (and ((_ is Cons!1534) (toList!751 lt!37326)) (not (= (_1!1111 (h!2123 (toList!751 lt!37326))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!20753 () Bool)

(declare-fun c!13121 () Bool)

(assert (=> d!20753 (= c!13121 (and ((_ is Cons!1534) (toList!751 lt!37326)) (= (_1!1111 (h!2123 (toList!751 lt!37326))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20753 (= (getValueByKey!137 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000) e!53748)))

(declare-fun b!82396 () Bool)

(assert (=> b!82396 (= e!53749 None!141)))

(declare-fun b!82395 () Bool)

(assert (=> b!82395 (= e!53749 (getValueByKey!137 (t!5209 (toList!751 lt!37326)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82393 () Bool)

(assert (=> b!82393 (= e!53748 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37326)))))))

(assert (= (and d!20753 c!13121) b!82393))

(assert (= (and d!20753 (not c!13121)) b!82394))

(assert (= (and b!82394 c!13122) b!82395))

(assert (= (and b!82394 (not c!13122)) b!82396))

(declare-fun m!85115 () Bool)

(assert (=> b!82395 m!85115))

(assert (=> b!81153 d!20753))

(declare-fun d!20755 () Bool)

(declare-fun e!53750 () Bool)

(assert (=> d!20755 e!53750))

(declare-fun res!42730 () Bool)

(assert (=> d!20755 (=> res!42730 e!53750)))

(declare-fun lt!38451 () Bool)

(assert (=> d!20755 (= res!42730 (not lt!38451))))

(declare-fun lt!38450 () Bool)

(assert (=> d!20755 (= lt!38451 lt!38450)))

(declare-fun lt!38449 () Unit!2350)

(declare-fun e!53751 () Unit!2350)

(assert (=> d!20755 (= lt!38449 e!53751)))

(declare-fun c!13123 () Bool)

(assert (=> d!20755 (= c!13123 lt!38450)))

(assert (=> d!20755 (= lt!38450 (containsKey!141 (toList!751 lt!37716) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!20755 (= (contains!750 lt!37716 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38451)))

(declare-fun b!82397 () Bool)

(declare-fun lt!38452 () Unit!2350)

(assert (=> b!82397 (= e!53751 lt!38452)))

(assert (=> b!82397 (= lt!38452 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37716) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> b!82397 (isDefined!91 (getValueByKey!137 (toList!751 lt!37716) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82398 () Bool)

(declare-fun Unit!2430 () Unit!2350)

(assert (=> b!82398 (= e!53751 Unit!2430)))

(declare-fun b!82399 () Bool)

(assert (=> b!82399 (= e!53750 (isDefined!91 (getValueByKey!137 (toList!751 lt!37716) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20755 c!13123) b!82397))

(assert (= (and d!20755 (not c!13123)) b!82398))

(assert (= (and d!20755 (not res!42730)) b!82399))

(declare-fun m!85117 () Bool)

(assert (=> d!20755 m!85117))

(declare-fun m!85119 () Bool)

(assert (=> b!82397 m!85119))

(assert (=> b!82397 m!82625))

(assert (=> b!82397 m!82625))

(declare-fun m!85121 () Bool)

(assert (=> b!82397 m!85121))

(assert (=> b!82399 m!82625))

(assert (=> b!82399 m!82625))

(assert (=> b!82399 m!85121))

(assert (=> d!19841 d!20755))

(declare-fun b!82401 () Bool)

(declare-fun e!53752 () Option!143)

(declare-fun e!53753 () Option!143)

(assert (=> b!82401 (= e!53752 e!53753)))

(declare-fun c!13125 () Bool)

(assert (=> b!82401 (= c!13125 (and ((_ is Cons!1534) lt!37713) (not (= (_1!1111 (h!2123 lt!37713)) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20757 () Bool)

(declare-fun c!13124 () Bool)

(assert (=> d!20757 (= c!13124 (and ((_ is Cons!1534) lt!37713) (= (_1!1111 (h!2123 lt!37713)) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20757 (= (getValueByKey!137 lt!37713 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53752)))

(declare-fun b!82403 () Bool)

(assert (=> b!82403 (= e!53753 None!141)))

(declare-fun b!82402 () Bool)

(assert (=> b!82402 (= e!53753 (getValueByKey!137 (t!5209 lt!37713) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82400 () Bool)

(assert (=> b!82400 (= e!53752 (Some!142 (_2!1111 (h!2123 lt!37713))))))

(assert (= (and d!20757 c!13124) b!82400))

(assert (= (and d!20757 (not c!13124)) b!82401))

(assert (= (and b!82401 c!13125) b!82402))

(assert (= (and b!82401 (not c!13125)) b!82403))

(declare-fun m!85123 () Bool)

(assert (=> b!82402 m!85123))

(assert (=> d!19841 d!20757))

(declare-fun d!20759 () Bool)

(assert (=> d!20759 (= (getValueByKey!137 lt!37713 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!38453 () Unit!2350)

(assert (=> d!20759 (= lt!38453 (choose!478 lt!37713 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53754 () Bool)

(assert (=> d!20759 e!53754))

(declare-fun res!42731 () Bool)

(assert (=> d!20759 (=> (not res!42731) (not e!53754))))

(assert (=> d!20759 (= res!42731 (isStrictlySorted!291 lt!37713))))

(assert (=> d!20759 (= (lemmaContainsTupThenGetReturnValue!56 lt!37713 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38453)))

(declare-fun b!82404 () Bool)

(declare-fun res!42732 () Bool)

(assert (=> b!82404 (=> (not res!42732) (not e!53754))))

(assert (=> b!82404 (= res!42732 (containsKey!141 lt!37713 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82405 () Bool)

(assert (=> b!82405 (= e!53754 (contains!753 lt!37713 (tuple2!2203 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20759 res!42731) b!82404))

(assert (= (and b!82404 res!42732) b!82405))

(assert (=> d!20759 m!82619))

(declare-fun m!85125 () Bool)

(assert (=> d!20759 m!85125))

(declare-fun m!85127 () Bool)

(assert (=> d!20759 m!85127))

(declare-fun m!85129 () Bool)

(assert (=> b!82404 m!85129))

(declare-fun m!85131 () Bool)

(assert (=> b!82405 m!85131))

(assert (=> d!19841 d!20759))

(declare-fun d!20761 () Bool)

(declare-fun e!53756 () Bool)

(assert (=> d!20761 e!53756))

(declare-fun res!42733 () Bool)

(assert (=> d!20761 (=> (not res!42733) (not e!53756))))

(declare-fun lt!38454 () List!1538)

(assert (=> d!20761 (= res!42733 (isStrictlySorted!291 lt!38454))))

(declare-fun e!53755 () List!1538)

(assert (=> d!20761 (= lt!38454 e!53755)))

(declare-fun c!13129 () Bool)

(assert (=> d!20761 (= c!13129 (and ((_ is Cons!1534) (toList!751 lt!37190)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20761 (isStrictlySorted!291 (toList!751 lt!37190))))

(assert (=> d!20761 (= (insertStrictlySorted!58 (toList!751 lt!37190) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38454)))

(declare-fun b!82406 () Bool)

(assert (=> b!82406 (= e!53756 (contains!753 lt!38454 (tuple2!2203 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun bm!7690 () Bool)

(declare-fun call!7693 () List!1538)

(declare-fun call!7694 () List!1538)

(assert (=> bm!7690 (= call!7693 call!7694)))

(declare-fun b!82407 () Bool)

(declare-fun res!42734 () Bool)

(assert (=> b!82407 (=> (not res!42734) (not e!53756))))

(assert (=> b!82407 (= res!42734 (containsKey!141 lt!38454 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82408 () Bool)

(declare-fun e!53758 () List!1538)

(assert (=> b!82408 (= e!53758 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37190)) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82409 () Bool)

(assert (=> b!82409 (= e!53755 call!7694)))

(declare-fun bm!7691 () Bool)

(assert (=> bm!7691 (= call!7694 ($colon$colon!69 e!53758 (ite c!13129 (h!2123 (toList!751 lt!37190)) (tuple2!2203 (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!13127 () Bool)

(assert (=> bm!7691 (= c!13127 c!13129)))

(declare-fun b!82410 () Bool)

(declare-fun c!13126 () Bool)

(declare-fun c!13128 () Bool)

(assert (=> b!82410 (= e!53758 (ite c!13126 (t!5209 (toList!751 lt!37190)) (ite c!13128 (Cons!1534 (h!2123 (toList!751 lt!37190)) (t!5209 (toList!751 lt!37190))) Nil!1535)))))

(declare-fun b!82411 () Bool)

(declare-fun e!53759 () List!1538)

(assert (=> b!82411 (= e!53759 call!7693)))

(declare-fun b!82412 () Bool)

(declare-fun e!53757 () List!1538)

(declare-fun call!7695 () List!1538)

(assert (=> b!82412 (= e!53757 call!7695)))

(declare-fun b!82413 () Bool)

(assert (=> b!82413 (= c!13128 (and ((_ is Cons!1534) (toList!751 lt!37190)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> b!82413 (= e!53759 e!53757)))

(declare-fun b!82414 () Bool)

(assert (=> b!82414 (= e!53757 call!7695)))

(declare-fun bm!7692 () Bool)

(assert (=> bm!7692 (= call!7695 call!7693)))

(declare-fun b!82415 () Bool)

(assert (=> b!82415 (= e!53755 e!53759)))

(assert (=> b!82415 (= c!13126 (and ((_ is Cons!1534) (toList!751 lt!37190)) (= (_1!1111 (h!2123 (toList!751 lt!37190))) (_1!1111 (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20761 c!13129) b!82409))

(assert (= (and d!20761 (not c!13129)) b!82415))

(assert (= (and b!82415 c!13126) b!82411))

(assert (= (and b!82415 (not c!13126)) b!82413))

(assert (= (and b!82413 c!13128) b!82412))

(assert (= (and b!82413 (not c!13128)) b!82414))

(assert (= (or b!82412 b!82414) bm!7692))

(assert (= (or b!82411 bm!7692) bm!7690))

(assert (= (or b!82409 bm!7690) bm!7691))

(assert (= (and bm!7691 c!13127) b!82408))

(assert (= (and bm!7691 (not c!13127)) b!82410))

(assert (= (and d!20761 res!42733) b!82407))

(assert (= (and b!82407 res!42734) b!82406))

(declare-fun m!85133 () Bool)

(assert (=> b!82407 m!85133))

(declare-fun m!85135 () Bool)

(assert (=> bm!7691 m!85135))

(declare-fun m!85137 () Bool)

(assert (=> d!20761 m!85137))

(assert (=> d!20761 m!82663))

(declare-fun m!85139 () Bool)

(assert (=> b!82408 m!85139))

(declare-fun m!85141 () Bool)

(assert (=> b!82406 m!85141))

(assert (=> d!19841 d!20761))

(assert (=> bm!7558 d!19685))

(assert (=> b!80879 d!20747))

(assert (=> b!80879 d!20749))

(declare-fun d!20763 () Bool)

(assert (=> d!20763 (isDefined!91 (getValueByKey!137 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!38455 () Unit!2350)

(assert (=> d!20763 (= lt!38455 (choose!485 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!53760 () Bool)

(assert (=> d!20763 e!53760))

(declare-fun res!42735 () Bool)

(assert (=> d!20763 (=> (not res!42735) (not e!53760))))

(assert (=> d!20763 (= res!42735 (isStrictlySorted!291 (toList!751 lt!37326)))))

(assert (=> d!20763 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000) lt!38455)))

(declare-fun b!82416 () Bool)

(assert (=> b!82416 (= e!53760 (containsKey!141 (toList!751 lt!37326) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20763 res!42735) b!82416))

(assert (=> d!20763 m!82893))

(assert (=> d!20763 m!82893))

(assert (=> d!20763 m!82895))

(declare-fun m!85143 () Bool)

(assert (=> d!20763 m!85143))

(assert (=> d!20763 m!83327))

(assert (=> b!82416 m!82889))

(assert (=> b!81151 d!20763))

(assert (=> b!81151 d!20751))

(assert (=> b!81151 d!20753))

(assert (=> d!19889 d!19787))

(declare-fun c!13135 () Bool)

(declare-fun call!7700 () Bool)

(declare-fun bm!7697 () Bool)

(declare-fun lt!38458 () SeekEntryResult!251)

(assert (=> bm!7697 (= call!7700 (inRange!0 (ite c!13135 (index!3139 lt!38458) (index!3142 lt!38458)) (mask!6299 newMap!16)))))

(declare-fun b!82433 () Bool)

(declare-fun res!42745 () Bool)

(declare-fun e!53770 () Bool)

(assert (=> b!82433 (=> (not res!42745) (not e!53770))))

(assert (=> b!82433 (= res!42745 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3142 lt!38458)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82434 () Bool)

(declare-fun e!53772 () Bool)

(declare-fun call!7701 () Bool)

(assert (=> b!82434 (= e!53772 (not call!7701))))

(declare-fun b!82435 () Bool)

(declare-fun res!42747 () Bool)

(assert (=> b!82435 (= res!42747 (= (select (arr!1900 (_keys!3957 newMap!16)) (index!3139 lt!38458)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82435 (=> (not res!42747) (not e!53772))))

(declare-fun d!20765 () Bool)

(declare-fun e!53771 () Bool)

(assert (=> d!20765 e!53771))

(assert (=> d!20765 (= c!13135 ((_ is MissingZero!251) lt!38458))))

(assert (=> d!20765 (= lt!38458 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (_keys!3957 newMap!16) (mask!6299 newMap!16)))))

(assert (=> d!20765 true))

(declare-fun _$34!828 () Unit!2350)

(assert (=> d!20765 (= (choose!487 (_keys!3957 newMap!16) (_values!2276 newMap!16) (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) (defaultEntry!2293 newMap!16)) _$34!828)))

(declare-fun b!82436 () Bool)

(assert (=> b!82436 (= e!53771 e!53772)))

(declare-fun res!42744 () Bool)

(assert (=> b!82436 (= res!42744 call!7700)))

(assert (=> b!82436 (=> (not res!42744) (not e!53772))))

(declare-fun b!82437 () Bool)

(declare-fun res!42746 () Bool)

(assert (=> b!82437 (=> (not res!42746) (not e!53770))))

(assert (=> b!82437 (= res!42746 call!7700)))

(declare-fun e!53769 () Bool)

(assert (=> b!82437 (= e!53769 e!53770)))

(declare-fun b!82438 () Bool)

(assert (=> b!82438 (= e!53769 ((_ is Undefined!251) lt!38458))))

(declare-fun bm!7698 () Bool)

(assert (=> bm!7698 (= call!7701 (arrayContainsKey!0 (_keys!3957 newMap!16) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!82439 () Bool)

(assert (=> b!82439 (= e!53771 e!53769)))

(declare-fun c!13134 () Bool)

(assert (=> b!82439 (= c!13134 ((_ is MissingVacant!251) lt!38458))))

(declare-fun b!82440 () Bool)

(assert (=> b!82440 (= e!53770 (not call!7701))))

(assert (= (and d!20765 c!13135) b!82436))

(assert (= (and d!20765 (not c!13135)) b!82439))

(assert (= (and b!82436 res!42744) b!82435))

(assert (= (and b!82435 res!42747) b!82434))

(assert (= (and b!82439 c!13134) b!82437))

(assert (= (and b!82439 (not c!13134)) b!82438))

(assert (= (and b!82437 res!42746) b!82433))

(assert (= (and b!82433 res!42745) b!82440))

(assert (= (or b!82436 b!82437) bm!7697))

(assert (= (or b!82434 b!82440) bm!7698))

(assert (=> d!20765 m!81585))

(assert (=> d!20765 m!81945))

(declare-fun m!85145 () Bool)

(assert (=> b!82433 m!85145))

(declare-fun m!85147 () Bool)

(assert (=> b!82435 m!85147))

(assert (=> bm!7698 m!81585))

(assert (=> bm!7698 m!81933))

(declare-fun m!85149 () Bool)

(assert (=> bm!7697 m!85149))

(assert (=> d!19889 d!20765))

(assert (=> d!19889 d!20037))

(declare-fun d!20767 () Bool)

(declare-fun lt!38459 () Bool)

(assert (=> d!20767 (= lt!38459 (select (content!84 (toList!751 lt!37683)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!53774 () Bool)

(assert (=> d!20767 (= lt!38459 e!53774)))

(declare-fun res!42749 () Bool)

(assert (=> d!20767 (=> (not res!42749) (not e!53774))))

(assert (=> d!20767 (= res!42749 ((_ is Cons!1534) (toList!751 lt!37683)))))

(assert (=> d!20767 (= (contains!753 (toList!751 lt!37683) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!38459)))

(declare-fun b!82441 () Bool)

(declare-fun e!53773 () Bool)

(assert (=> b!82441 (= e!53774 e!53773)))

(declare-fun res!42748 () Bool)

(assert (=> b!82441 (=> res!42748 e!53773)))

(assert (=> b!82441 (= res!42748 (= (h!2123 (toList!751 lt!37683)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!82442 () Bool)

(assert (=> b!82442 (= e!53773 (contains!753 (t!5209 (toList!751 lt!37683)) (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!20767 res!42749) b!82441))

(assert (= (and b!82441 (not res!42748)) b!82442))

(declare-fun m!85151 () Bool)

(assert (=> d!20767 m!85151))

(declare-fun m!85153 () Bool)

(assert (=> d!20767 m!85153))

(declare-fun m!85155 () Bool)

(assert (=> b!82442 m!85155))

(assert (=> b!80941 d!20767))

(assert (=> b!80808 d!19937))

(declare-fun d!20769 () Bool)

(assert (=> d!20769 (isDefined!91 (getValueByKey!137 (toList!751 lt!37278) (_1!1111 lt!37197)))))

(declare-fun lt!38460 () Unit!2350)

(assert (=> d!20769 (= lt!38460 (choose!485 (toList!751 lt!37278) (_1!1111 lt!37197)))))

(declare-fun e!53775 () Bool)

(assert (=> d!20769 e!53775))

(declare-fun res!42750 () Bool)

(assert (=> d!20769 (=> (not res!42750) (not e!53775))))

(assert (=> d!20769 (= res!42750 (isStrictlySorted!291 (toList!751 lt!37278)))))

(assert (=> d!20769 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37278) (_1!1111 lt!37197)) lt!38460)))

(declare-fun b!82443 () Bool)

(assert (=> b!82443 (= e!53775 (containsKey!141 (toList!751 lt!37278) (_1!1111 lt!37197)))))

(assert (= (and d!20769 res!42750) b!82443))

(assert (=> d!20769 m!81747))

(assert (=> d!20769 m!81747))

(assert (=> d!20769 m!82113))

(declare-fun m!85157 () Bool)

(assert (=> d!20769 m!85157))

(declare-fun m!85159 () Bool)

(assert (=> d!20769 m!85159))

(assert (=> b!82443 m!82109))

(assert (=> b!80727 d!20769))

(assert (=> b!80727 d!20077))

(assert (=> b!80727 d!19887))

(declare-fun d!20771 () Bool)

(assert (=> d!20771 (= (apply!80 lt!37664 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!137 (toList!751 lt!37664) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3486 () Bool)

(assert (= bs!3486 d!20771))

(assert (=> bs!3486 m!84673))

(assert (=> bs!3486 m!84673))

(declare-fun m!85161 () Bool)

(assert (=> bs!3486 m!85161))

(assert (=> b!80930 d!20771))

(declare-fun d!20773 () Bool)

(declare-fun res!42751 () Bool)

(declare-fun e!53776 () Bool)

(assert (=> d!20773 (=> res!42751 e!53776)))

(assert (=> d!20773 (= res!42751 (and ((_ is Cons!1534) lt!37726) (= (_1!1111 (h!2123 lt!37726)) (_1!1111 lt!37202))))))

(assert (=> d!20773 (= (containsKey!141 lt!37726 (_1!1111 lt!37202)) e!53776)))

(declare-fun b!82444 () Bool)

(declare-fun e!53777 () Bool)

(assert (=> b!82444 (= e!53776 e!53777)))

(declare-fun res!42752 () Bool)

(assert (=> b!82444 (=> (not res!42752) (not e!53777))))

(assert (=> b!82444 (= res!42752 (and (or (not ((_ is Cons!1534) lt!37726)) (bvsle (_1!1111 (h!2123 lt!37726)) (_1!1111 lt!37202))) ((_ is Cons!1534) lt!37726) (bvslt (_1!1111 (h!2123 lt!37726)) (_1!1111 lt!37202))))))

(declare-fun b!82445 () Bool)

(assert (=> b!82445 (= e!53777 (containsKey!141 (t!5209 lt!37726) (_1!1111 lt!37202)))))

(assert (= (and d!20773 (not res!42751)) b!82444))

(assert (= (and b!82444 res!42752) b!82445))

(declare-fun m!85163 () Bool)

(assert (=> b!82445 m!85163))

(assert (=> b!80979 d!20773))

(declare-fun d!20775 () Bool)

(declare-fun e!53778 () Bool)

(assert (=> d!20775 e!53778))

(declare-fun res!42753 () Bool)

(assert (=> d!20775 (=> res!42753 e!53778)))

(declare-fun lt!38463 () Bool)

(assert (=> d!20775 (= res!42753 (not lt!38463))))

(declare-fun lt!38462 () Bool)

(assert (=> d!20775 (= lt!38463 lt!38462)))

(declare-fun lt!38461 () Unit!2350)

(declare-fun e!53779 () Unit!2350)

(assert (=> d!20775 (= lt!38461 e!53779)))

(declare-fun c!13136 () Bool)

(assert (=> d!20775 (= c!13136 lt!38462)))

(assert (=> d!20775 (= lt!38462 (containsKey!141 (toList!751 lt!37568) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> d!20775 (= (contains!750 lt!37568 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38463)))

(declare-fun b!82446 () Bool)

(declare-fun lt!38464 () Unit!2350)

(assert (=> b!82446 (= e!53779 lt!38464)))

(assert (=> b!82446 (= lt!38464 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37568) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(assert (=> b!82446 (isDefined!91 (getValueByKey!137 (toList!751 lt!37568) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82447 () Bool)

(declare-fun Unit!2431 () Unit!2350)

(assert (=> b!82447 (= e!53779 Unit!2431)))

(declare-fun b!82448 () Bool)

(assert (=> b!82448 (= e!53778 (isDefined!91 (getValueByKey!137 (toList!751 lt!37568) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20775 c!13136) b!82446))

(assert (= (and d!20775 (not c!13136)) b!82447))

(assert (= (and d!20775 (not res!42753)) b!82448))

(declare-fun m!85165 () Bool)

(assert (=> d!20775 m!85165))

(declare-fun m!85167 () Bool)

(assert (=> b!82446 m!85167))

(assert (=> b!82446 m!82263))

(assert (=> b!82446 m!82263))

(declare-fun m!85169 () Bool)

(assert (=> b!82446 m!85169))

(assert (=> b!82448 m!82263))

(assert (=> b!82448 m!82263))

(assert (=> b!82448 m!85169))

(assert (=> d!19757 d!20775))

(declare-fun b!82450 () Bool)

(declare-fun e!53780 () Option!143)

(declare-fun e!53781 () Option!143)

(assert (=> b!82450 (= e!53780 e!53781)))

(declare-fun c!13138 () Bool)

(assert (=> b!82450 (= c!13138 (and ((_ is Cons!1534) lt!37565) (not (= (_1!1111 (h!2123 lt!37565)) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!13137 () Bool)

(declare-fun d!20777 () Bool)

(assert (=> d!20777 (= c!13137 (and ((_ is Cons!1534) lt!37565) (= (_1!1111 (h!2123 lt!37565)) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20777 (= (getValueByKey!137 lt!37565 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53780)))

(declare-fun b!82452 () Bool)

(assert (=> b!82452 (= e!53781 None!141)))

(declare-fun b!82451 () Bool)

(assert (=> b!82451 (= e!53781 (getValueByKey!137 (t!5209 lt!37565) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82449 () Bool)

(assert (=> b!82449 (= e!53780 (Some!142 (_2!1111 (h!2123 lt!37565))))))

(assert (= (and d!20777 c!13137) b!82449))

(assert (= (and d!20777 (not c!13137)) b!82450))

(assert (= (and b!82450 c!13138) b!82451))

(assert (= (and b!82450 (not c!13138)) b!82452))

(declare-fun m!85171 () Bool)

(assert (=> b!82451 m!85171))

(assert (=> d!19757 d!20777))

(declare-fun d!20779 () Bool)

(assert (=> d!20779 (= (getValueByKey!137 lt!37565 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun lt!38465 () Unit!2350)

(assert (=> d!20779 (= lt!38465 (choose!478 lt!37565 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun e!53782 () Bool)

(assert (=> d!20779 e!53782))

(declare-fun res!42754 () Bool)

(assert (=> d!20779 (=> (not res!42754) (not e!53782))))

(assert (=> d!20779 (= res!42754 (isStrictlySorted!291 lt!37565))))

(assert (=> d!20779 (= (lemmaContainsTupThenGetReturnValue!56 lt!37565 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38465)))

(declare-fun b!82453 () Bool)

(declare-fun res!42755 () Bool)

(assert (=> b!82453 (=> (not res!42755) (not e!53782))))

(assert (=> b!82453 (= res!42755 (containsKey!141 lt!37565 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82454 () Bool)

(assert (=> b!82454 (= e!53782 (contains!753 lt!37565 (tuple2!2203 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20779 res!42754) b!82453))

(assert (= (and b!82453 res!42755) b!82454))

(assert (=> d!20779 m!82257))

(declare-fun m!85173 () Bool)

(assert (=> d!20779 m!85173))

(declare-fun m!85175 () Bool)

(assert (=> d!20779 m!85175))

(declare-fun m!85177 () Bool)

(assert (=> b!82453 m!85177))

(declare-fun m!85179 () Bool)

(assert (=> b!82454 m!85179))

(assert (=> d!19757 d!20779))

(declare-fun d!20781 () Bool)

(declare-fun e!53784 () Bool)

(assert (=> d!20781 e!53784))

(declare-fun res!42756 () Bool)

(assert (=> d!20781 (=> (not res!42756) (not e!53784))))

(declare-fun lt!38466 () List!1538)

(assert (=> d!20781 (= res!42756 (isStrictlySorted!291 lt!38466))))

(declare-fun e!53783 () List!1538)

(assert (=> d!20781 (= lt!38466 e!53783)))

(declare-fun c!13142 () Bool)

(assert (=> d!20781 (= c!13142 (and ((_ is Cons!1534) (toList!751 lt!37379)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37379))) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20781 (isStrictlySorted!291 (toList!751 lt!37379))))

(assert (=> d!20781 (= (insertStrictlySorted!58 (toList!751 lt!37379) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) lt!38466)))

(declare-fun b!82455 () Bool)

(assert (=> b!82455 (= e!53784 (contains!753 lt!38466 (tuple2!2203 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(declare-fun bm!7699 () Bool)

(declare-fun call!7702 () List!1538)

(declare-fun call!7703 () List!1538)

(assert (=> bm!7699 (= call!7702 call!7703)))

(declare-fun b!82456 () Bool)

(declare-fun res!42757 () Bool)

(assert (=> b!82456 (=> (not res!42757) (not e!53784))))

(assert (=> b!82456 (= res!42757 (containsKey!141 lt!38466 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82457 () Bool)

(declare-fun e!53786 () List!1538)

(assert (=> b!82457 (= e!53786 (insertStrictlySorted!58 (t!5209 (toList!751 lt!37379)) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82458 () Bool)

(assert (=> b!82458 (= e!53783 call!7703)))

(declare-fun bm!7700 () Bool)

(assert (=> bm!7700 (= call!7703 ($colon$colon!69 e!53786 (ite c!13142 (h!2123 (toList!751 lt!37379)) (tuple2!2203 (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) (_2!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun c!13140 () Bool)

(assert (=> bm!7700 (= c!13140 c!13142)))

(declare-fun b!82459 () Bool)

(declare-fun c!13139 () Bool)

(declare-fun c!13141 () Bool)

(assert (=> b!82459 (= e!53786 (ite c!13139 (t!5209 (toList!751 lt!37379)) (ite c!13141 (Cons!1534 (h!2123 (toList!751 lt!37379)) (t!5209 (toList!751 lt!37379))) Nil!1535)))))

(declare-fun b!82460 () Bool)

(declare-fun e!53787 () List!1538)

(assert (=> b!82460 (= e!53787 call!7702)))

(declare-fun b!82461 () Bool)

(declare-fun e!53785 () List!1538)

(declare-fun call!7704 () List!1538)

(assert (=> b!82461 (= e!53785 call!7704)))

(declare-fun b!82462 () Bool)

(assert (=> b!82462 (= c!13141 (and ((_ is Cons!1534) (toList!751 lt!37379)) (bvsgt (_1!1111 (h!2123 (toList!751 lt!37379))) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> b!82462 (= e!53787 e!53785)))

(declare-fun b!82463 () Bool)

(assert (=> b!82463 (= e!53785 call!7704)))

(declare-fun bm!7701 () Bool)

(assert (=> bm!7701 (= call!7704 call!7702)))

(declare-fun b!82464 () Bool)

(assert (=> b!82464 (= e!53783 e!53787)))

(assert (=> b!82464 (= c!13139 (and ((_ is Cons!1534) (toList!751 lt!37379)) (= (_1!1111 (h!2123 (toList!751 lt!37379))) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (= (and d!20781 c!13142) b!82458))

(assert (= (and d!20781 (not c!13142)) b!82464))

(assert (= (and b!82464 c!13139) b!82460))

(assert (= (and b!82464 (not c!13139)) b!82462))

(assert (= (and b!82462 c!13141) b!82461))

(assert (= (and b!82462 (not c!13141)) b!82463))

(assert (= (or b!82461 b!82463) bm!7701))

(assert (= (or b!82460 bm!7701) bm!7699))

(assert (= (or b!82458 bm!7699) bm!7700))

(assert (= (and bm!7700 c!13140) b!82457))

(assert (= (and bm!7700 (not c!13140)) b!82459))

(assert (= (and d!20781 res!42756) b!82456))

(assert (= (and b!82456 res!42757) b!82455))

(declare-fun m!85181 () Bool)

(assert (=> b!82456 m!85181))

(declare-fun m!85183 () Bool)

(assert (=> bm!7700 m!85183))

(declare-fun m!85185 () Bool)

(assert (=> d!20781 m!85185))

(declare-fun m!85187 () Bool)

(assert (=> d!20781 m!85187))

(declare-fun m!85189 () Bool)

(assert (=> b!82457 m!85189))

(declare-fun m!85191 () Bool)

(assert (=> b!82455 m!85191))

(assert (=> d!19757 d!20781))

(declare-fun bm!7702 () Bool)

(declare-fun call!7705 () (_ BitVec 32))

(assert (=> bm!7702 (= call!7705 (arrayCountValidKeys!0 (_keys!3957 (_2!1110 lt!37475)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (_2!1110 lt!37475)))))))

(declare-fun b!82465 () Bool)

(declare-fun e!53788 () (_ BitVec 32))

(assert (=> b!82465 (= e!53788 (bvadd #b00000000000000000000000000000001 call!7705))))

(declare-fun b!82466 () Bool)

(declare-fun e!53789 () (_ BitVec 32))

(assert (=> b!82466 (= e!53789 e!53788)))

(declare-fun c!13144 () Bool)

(assert (=> b!82466 (= c!13144 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000)))))

(declare-fun b!82468 () Bool)

(assert (=> b!82468 (= e!53789 #b00000000000000000000000000000000)))

(declare-fun d!20783 () Bool)

(declare-fun lt!38467 () (_ BitVec 32))

(assert (=> d!20783 (and (bvsge lt!38467 #b00000000000000000000000000000000) (bvsle lt!38467 (bvsub (size!2142 (_keys!3957 (_2!1110 lt!37475))) #b00000000000000000000000000000000)))))

(assert (=> d!20783 (= lt!38467 e!53789)))

(declare-fun c!13143 () Bool)

(assert (=> d!20783 (= c!13143 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))))))

(assert (=> d!20783 (and (bvsle #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2142 (_keys!3957 (_2!1110 lt!37475))) (size!2142 (_keys!3957 (_2!1110 lt!37475)))))))

(assert (=> d!20783 (= (arrayCountValidKeys!0 (_keys!3957 (_2!1110 lt!37475)) #b00000000000000000000000000000000 (size!2142 (_keys!3957 (_2!1110 lt!37475)))) lt!38467)))

(declare-fun b!82467 () Bool)

(assert (=> b!82467 (= e!53788 call!7705)))

(assert (= (and d!20783 c!13143) b!82468))

(assert (= (and d!20783 (not c!13143)) b!82466))

(assert (= (and b!82466 c!13144) b!82465))

(assert (= (and b!82466 (not c!13144)) b!82467))

(assert (= (or b!82465 b!82467) bm!7702))

(declare-fun m!85193 () Bool)

(assert (=> bm!7702 m!85193))

(assert (=> b!82466 m!83287))

(assert (=> b!82466 m!83287))

(assert (=> b!82466 m!83291))

(assert (=> b!81154 d!20783))

(declare-fun b!82470 () Bool)

(declare-fun e!53790 () Option!143)

(declare-fun e!53791 () Option!143)

(assert (=> b!82470 (= e!53790 e!53791)))

(declare-fun c!13146 () Bool)

(assert (=> b!82470 (= c!13146 (and ((_ is Cons!1534) (toList!751 lt!37712)) (not (= (_1!1111 (h!2123 (toList!751 lt!37712))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))))

(declare-fun c!13145 () Bool)

(declare-fun d!20785 () Bool)

(assert (=> d!20785 (= c!13145 (and ((_ is Cons!1534) (toList!751 lt!37712)) (= (_1!1111 (h!2123 (toList!751 lt!37712))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195)))))))

(assert (=> d!20785 (= (getValueByKey!137 (toList!751 lt!37712) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))) e!53790)))

(declare-fun b!82472 () Bool)

(assert (=> b!82472 (= e!53791 None!141)))

(declare-fun b!82471 () Bool)

(assert (=> b!82471 (= e!53791 (getValueByKey!137 (t!5209 (toList!751 lt!37712)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355) lt!37195))))))

(declare-fun b!82469 () Bool)

(assert (=> b!82469 (= e!53790 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37712)))))))

(assert (= (and d!20785 c!13145) b!82469))

(assert (= (and d!20785 (not c!13145)) b!82470))

(assert (= (and b!82470 c!13146) b!82471))

(assert (= (and b!82470 (not c!13146)) b!82472))

(declare-fun m!85195 () Bool)

(assert (=> b!82471 m!85195))

(assert (=> b!80963 d!20785))

(declare-fun d!20787 () Bool)

(assert (=> d!20787 (= (get!1198 (getValueByKey!137 (toList!751 lt!37382) lt!37380)) (v!2614 (getValueByKey!137 (toList!751 lt!37382) lt!37380)))))

(assert (=> d!19731 d!20787))

(declare-fun b!82474 () Bool)

(declare-fun e!53792 () Option!143)

(declare-fun e!53793 () Option!143)

(assert (=> b!82474 (= e!53792 e!53793)))

(declare-fun c!13148 () Bool)

(assert (=> b!82474 (= c!13148 (and ((_ is Cons!1534) (toList!751 lt!37382)) (not (= (_1!1111 (h!2123 (toList!751 lt!37382))) lt!37380))))))

(declare-fun d!20789 () Bool)

(declare-fun c!13147 () Bool)

(assert (=> d!20789 (= c!13147 (and ((_ is Cons!1534) (toList!751 lt!37382)) (= (_1!1111 (h!2123 (toList!751 lt!37382))) lt!37380)))))

(assert (=> d!20789 (= (getValueByKey!137 (toList!751 lt!37382) lt!37380) e!53792)))

(declare-fun b!82476 () Bool)

(assert (=> b!82476 (= e!53793 None!141)))

(declare-fun b!82475 () Bool)

(assert (=> b!82475 (= e!53793 (getValueByKey!137 (t!5209 (toList!751 lt!37382)) lt!37380))))

(declare-fun b!82473 () Bool)

(assert (=> b!82473 (= e!53792 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37382)))))))

(assert (= (and d!20789 c!13147) b!82473))

(assert (= (and d!20789 (not c!13147)) b!82474))

(assert (= (and b!82474 c!13148) b!82475))

(assert (= (and b!82474 (not c!13148)) b!82476))

(declare-fun m!85197 () Bool)

(assert (=> b!82475 m!85197))

(assert (=> d!19731 d!20789))

(declare-fun d!20791 () Bool)

(declare-fun e!53794 () Bool)

(assert (=> d!20791 e!53794))

(declare-fun res!42758 () Bool)

(assert (=> d!20791 (=> res!42758 e!53794)))

(declare-fun lt!38470 () Bool)

(assert (=> d!20791 (= res!42758 (not lt!38470))))

(declare-fun lt!38469 () Bool)

(assert (=> d!20791 (= lt!38470 lt!38469)))

(declare-fun lt!38468 () Unit!2350)

(declare-fun e!53795 () Unit!2350)

(assert (=> d!20791 (= lt!38468 e!53795)))

(declare-fun c!13149 () Bool)

(assert (=> d!20791 (= c!13149 lt!38469)))

(assert (=> d!20791 (= lt!38469 (containsKey!141 (toList!751 lt!37664) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20791 (= (contains!750 lt!37664 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38470)))

(declare-fun b!82477 () Bool)

(declare-fun lt!38471 () Unit!2350)

(assert (=> b!82477 (= e!53795 lt!38471)))

(assert (=> b!82477 (= lt!38471 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37664) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82477 (isDefined!91 (getValueByKey!137 (toList!751 lt!37664) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82478 () Bool)

(declare-fun Unit!2432 () Unit!2350)

(assert (=> b!82478 (= e!53795 Unit!2432)))

(declare-fun b!82479 () Bool)

(assert (=> b!82479 (= e!53794 (isDefined!91 (getValueByKey!137 (toList!751 lt!37664) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20791 c!13149) b!82477))

(assert (= (and d!20791 (not c!13149)) b!82478))

(assert (= (and d!20791 (not res!42758)) b!82479))

(declare-fun m!85199 () Bool)

(assert (=> d!20791 m!85199))

(declare-fun m!85201 () Bool)

(assert (=> b!82477 m!85201))

(assert (=> b!82477 m!83857))

(assert (=> b!82477 m!83857))

(declare-fun m!85203 () Bool)

(assert (=> b!82477 m!85203))

(assert (=> b!82479 m!83857))

(assert (=> b!82479 m!83857))

(assert (=> b!82479 m!85203))

(assert (=> bm!7528 d!20791))

(declare-fun d!20793 () Bool)

(declare-fun lt!38472 () Bool)

(assert (=> d!20793 (= lt!38472 (select (content!84 lt!37867) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun e!53797 () Bool)

(assert (=> d!20793 (= lt!38472 e!53797)))

(declare-fun res!42760 () Bool)

(assert (=> d!20793 (=> (not res!42760) (not e!53797))))

(assert (=> d!20793 (= res!42760 ((_ is Cons!1534) lt!37867))))

(assert (=> d!20793 (= (contains!753 lt!37867 (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))) lt!38472)))

(declare-fun b!82480 () Bool)

(declare-fun e!53796 () Bool)

(assert (=> b!82480 (= e!53797 e!53796)))

(declare-fun res!42759 () Bool)

(assert (=> b!82480 (=> res!42759 e!53796)))

(assert (=> b!82480 (= res!42759 (= (h!2123 lt!37867) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(declare-fun b!82481 () Bool)

(assert (=> b!82481 (= e!53796 (contains!753 (t!5209 lt!37867) (tuple2!2203 (_1!1111 lt!37202) (_2!1111 lt!37202))))))

(assert (= (and d!20793 res!42760) b!82480))

(assert (= (and b!82480 (not res!42759)) b!82481))

(declare-fun m!85205 () Bool)

(assert (=> d!20793 m!85205))

(declare-fun m!85207 () Bool)

(assert (=> d!20793 m!85207))

(declare-fun m!85209 () Bool)

(assert (=> b!82481 m!85209))

(assert (=> b!81137 d!20793))

(assert (=> b!80701 d!19937))

(declare-fun d!20795 () Bool)

(assert (=> d!20795 (= (isEmpty!334 lt!37609) (isEmpty!336 (toList!751 lt!37609)))))

(declare-fun bs!3487 () Bool)

(assert (= bs!3487 d!20795))

(declare-fun m!85211 () Bool)

(assert (=> bs!3487 m!85211))

(assert (=> b!80866 d!20795))

(declare-fun d!20797 () Bool)

(declare-fun lt!38473 () Bool)

(assert (=> d!20797 (= lt!38473 (select (content!84 (toList!751 lt!37554)) (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!53799 () Bool)

(assert (=> d!20797 (= lt!38473 e!53799)))

(declare-fun res!42762 () Bool)

(assert (=> d!20797 (=> (not res!42762) (not e!53799))))

(assert (=> d!20797 (= res!42762 ((_ is Cons!1534) (toList!751 lt!37554)))))

(assert (=> d!20797 (= (contains!753 (toList!751 lt!37554) (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!38473)))

(declare-fun b!82482 () Bool)

(declare-fun e!53798 () Bool)

(assert (=> b!82482 (= e!53799 e!53798)))

(declare-fun res!42761 () Bool)

(assert (=> b!82482 (=> res!42761 e!53798)))

(assert (=> b!82482 (= res!42761 (= (h!2123 (toList!751 lt!37554)) (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!82483 () Bool)

(assert (=> b!82483 (= e!53798 (contains!753 (t!5209 (toList!751 lt!37554)) (tuple2!2203 lt!37389 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!20797 res!42762) b!82482))

(assert (= (and b!82482 (not res!42761)) b!82483))

(declare-fun m!85213 () Bool)

(assert (=> d!20797 m!85213))

(declare-fun m!85215 () Bool)

(assert (=> d!20797 m!85215))

(declare-fun m!85217 () Bool)

(assert (=> b!82483 m!85217))

(assert (=> b!80777 d!20797))

(assert (=> bm!7548 d!19685))

(declare-fun d!20799 () Bool)

(declare-fun e!53800 () Bool)

(assert (=> d!20799 e!53800))

(declare-fun res!42763 () Bool)

(assert (=> d!20799 (=> (not res!42763) (not e!53800))))

(declare-fun lt!38477 () ListLongMap!1471)

(assert (=> d!20799 (= res!42763 (contains!750 lt!38477 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(declare-fun lt!38474 () List!1538)

(assert (=> d!20799 (= lt!38477 (ListLongMap!1472 lt!38474))))

(declare-fun lt!38475 () Unit!2350)

(declare-fun lt!38476 () Unit!2350)

(assert (=> d!20799 (= lt!38475 lt!38476)))

(assert (=> d!20799 (= (getValueByKey!137 lt!38474 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(assert (=> d!20799 (= lt!38476 (lemmaContainsTupThenGetReturnValue!56 lt!38474 (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(assert (=> d!20799 (= lt!38474 (insertStrictlySorted!58 (toList!751 call!7525) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))))))

(assert (=> d!20799 (= (+!111 call!7525 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))) lt!38477)))

(declare-fun b!82484 () Bool)

(declare-fun res!42764 () Bool)

(assert (=> b!82484 (=> (not res!42764) (not e!53800))))

(assert (=> b!82484 (= res!42764 (= (getValueByKey!137 (toList!751 lt!38477) (_1!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16))))) (Some!142 (_2!1111 (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))))))

(declare-fun b!82485 () Bool)

(assert (=> b!82485 (= e!53800 (contains!753 (toList!751 lt!38477) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!12617 (ite c!12610 (minValue!2189 newMap!16) lt!37195) (minValue!2189 newMap!16)))))))

(assert (= (and d!20799 res!42763) b!82484))

(assert (= (and b!82484 res!42764) b!82485))

(declare-fun m!85219 () Bool)

(assert (=> d!20799 m!85219))

(declare-fun m!85221 () Bool)

(assert (=> d!20799 m!85221))

(declare-fun m!85223 () Bool)

(assert (=> d!20799 m!85223))

(declare-fun m!85225 () Bool)

(assert (=> d!20799 m!85225))

(declare-fun m!85227 () Bool)

(assert (=> b!82484 m!85227))

(declare-fun m!85229 () Bool)

(assert (=> b!82485 m!85229))

(assert (=> b!80885 d!20799))

(declare-fun d!20801 () Bool)

(declare-fun res!42765 () Bool)

(declare-fun e!53801 () Bool)

(assert (=> d!20801 (=> res!42765 e!53801)))

(assert (=> d!20801 (= res!42765 (and ((_ is Cons!1534) (toList!751 call!7473)) (= (_1!1111 (h!2123 (toList!751 call!7473))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(assert (=> d!20801 (= (containsKey!141 (toList!751 call!7473) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)) e!53801)))

(declare-fun b!82486 () Bool)

(declare-fun e!53802 () Bool)

(assert (=> b!82486 (= e!53801 e!53802)))

(declare-fun res!42766 () Bool)

(assert (=> b!82486 (=> (not res!42766) (not e!53802))))

(assert (=> b!82486 (= res!42766 (and (or (not ((_ is Cons!1534) (toList!751 call!7473))) (bvsle (_1!1111 (h!2123 (toList!751 call!7473))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))) ((_ is Cons!1534) (toList!751 call!7473)) (bvslt (_1!1111 (h!2123 (toList!751 call!7473))) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355))))))

(declare-fun b!82487 () Bool)

(assert (=> b!82487 (= e!53802 (containsKey!141 (t!5209 (toList!751 call!7473)) (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) from!355)))))

(assert (= (and d!20801 (not res!42765)) b!82486))

(assert (= (and b!82486 res!42766) b!82487))

(assert (=> b!82487 m!81585))

(declare-fun m!85231 () Bool)

(assert (=> b!82487 m!85231))

(assert (=> d!19877 d!20801))

(declare-fun d!20803 () Bool)

(declare-fun c!13150 () Bool)

(assert (=> d!20803 (= c!13150 ((_ is Nil!1535) (toList!751 lt!37290)))))

(declare-fun e!53803 () (InoxSet tuple2!2202))

(assert (=> d!20803 (= (content!84 (toList!751 lt!37290)) e!53803)))

(declare-fun b!82488 () Bool)

(assert (=> b!82488 (= e!53803 ((as const (Array tuple2!2202 Bool)) false))))

(declare-fun b!82489 () Bool)

(assert (=> b!82489 (= e!53803 ((_ map or) (store ((as const (Array tuple2!2202 Bool)) false) (h!2123 (toList!751 lt!37290)) true) (content!84 (t!5209 (toList!751 lt!37290)))))))

(assert (= (and d!20803 c!13150) b!82488))

(assert (= (and d!20803 (not c!13150)) b!82489))

(declare-fun m!85233 () Bool)

(assert (=> b!82489 m!85233))

(assert (=> b!82489 m!84283))

(assert (=> d!19881 d!20803))

(declare-fun d!20805 () Bool)

(declare-fun lt!38478 () Bool)

(assert (=> d!20805 (= lt!38478 (select (content!84 lt!37295) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun e!53805 () Bool)

(assert (=> d!20805 (= lt!38478 e!53805)))

(declare-fun res!42768 () Bool)

(assert (=> d!20805 (=> (not res!42768) (not e!53805))))

(assert (=> d!20805 (= res!42768 ((_ is Cons!1534) lt!37295))))

(assert (=> d!20805 (= (contains!753 lt!37295 (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))) lt!38478)))

(declare-fun b!82490 () Bool)

(declare-fun e!53804 () Bool)

(assert (=> b!82490 (= e!53805 e!53804)))

(declare-fun res!42767 () Bool)

(assert (=> b!82490 (=> res!42767 e!53804)))

(assert (=> b!82490 (= res!42767 (= (h!2123 lt!37295) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(declare-fun b!82491 () Bool)

(assert (=> b!82491 (= e!53804 (contains!753 (t!5209 lt!37295) (tuple2!2203 (_1!1111 lt!37188) (_2!1111 lt!37188))))))

(assert (= (and d!20805 res!42768) b!82490))

(assert (= (and b!82490 (not res!42767)) b!82491))

(declare-fun m!85235 () Bool)

(assert (=> d!20805 m!85235))

(declare-fun m!85237 () Bool)

(assert (=> d!20805 m!85237))

(declare-fun m!85239 () Bool)

(assert (=> b!82491 m!85239))

(assert (=> b!80754 d!20805))

(declare-fun b!82493 () Bool)

(declare-fun e!53806 () Option!143)

(declare-fun e!53807 () Option!143)

(assert (=> b!82493 (= e!53806 e!53807)))

(declare-fun c!13152 () Bool)

(assert (=> b!82493 (= c!13152 (and ((_ is Cons!1534) (toList!751 lt!37568)) (not (= (_1!1111 (h!2123 (toList!751 lt!37568))) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))))

(declare-fun d!20807 () Bool)

(declare-fun c!13151 () Bool)

(assert (=> d!20807 (= c!13151 (and ((_ is Cons!1534) (toList!751 lt!37568)) (= (_1!1111 (h!2123 (toList!751 lt!37568))) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))))

(assert (=> d!20807 (= (getValueByKey!137 (toList!751 lt!37568) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))) e!53806)))

(declare-fun b!82495 () Bool)

(assert (=> b!82495 (= e!53807 None!141)))

(declare-fun b!82494 () Bool)

(assert (=> b!82494 (= e!53807 (getValueByKey!137 (t!5209 (toList!751 lt!37568)) (_1!1111 (tuple2!2203 lt!37388 (minValue!2189 (v!2610 (underlying!284 thiss!992)))))))))

(declare-fun b!82492 () Bool)

(assert (=> b!82492 (= e!53806 (Some!142 (_2!1111 (h!2123 (toList!751 lt!37568)))))))

(assert (= (and d!20807 c!13151) b!82492))

(assert (= (and d!20807 (not c!13151)) b!82493))

(assert (= (and b!82493 c!13152) b!82494))

(assert (= (and b!82493 (not c!13152)) b!82495))

(declare-fun m!85241 () Bool)

(assert (=> b!82494 m!85241))

(assert (=> b!80784 d!20807))

(assert (=> d!19849 d!19847))

(declare-fun d!20809 () Bool)

(assert (=> d!20809 (= (getValueByKey!137 lt!37282 (_1!1111 lt!37202)) (Some!142 (_2!1111 lt!37202)))))

(assert (=> d!20809 true))

(declare-fun _$22!406 () Unit!2350)

(assert (=> d!20809 (= (choose!478 lt!37282 (_1!1111 lt!37202) (_2!1111 lt!37202)) _$22!406)))

(declare-fun bs!3488 () Bool)

(assert (= bs!3488 d!20809))

(assert (=> bs!3488 m!81763))

(assert (=> d!19849 d!20809))

(declare-fun d!20811 () Bool)

(declare-fun res!42769 () Bool)

(declare-fun e!53808 () Bool)

(assert (=> d!20811 (=> res!42769 e!53808)))

(assert (=> d!20811 (= res!42769 (or ((_ is Nil!1535) lt!37282) ((_ is Nil!1535) (t!5209 lt!37282))))))

(assert (=> d!20811 (= (isStrictlySorted!291 lt!37282) e!53808)))

(declare-fun b!82496 () Bool)

(declare-fun e!53809 () Bool)

(assert (=> b!82496 (= e!53808 e!53809)))

(declare-fun res!42770 () Bool)

(assert (=> b!82496 (=> (not res!42770) (not e!53809))))

(assert (=> b!82496 (= res!42770 (bvslt (_1!1111 (h!2123 lt!37282)) (_1!1111 (h!2123 (t!5209 lt!37282)))))))

(declare-fun b!82497 () Bool)

(assert (=> b!82497 (= e!53809 (isStrictlySorted!291 (t!5209 lt!37282)))))

(assert (= (and d!20811 (not res!42769)) b!82496))

(assert (= (and b!82496 res!42770) b!82497))

(declare-fun m!85243 () Bool)

(assert (=> b!82497 m!85243))

(assert (=> d!19849 d!20811))

(declare-fun d!20813 () Bool)

(declare-fun lt!38479 () Bool)

(assert (=> d!20813 (= lt!38479 (select (content!84 (t!5209 (toList!751 lt!37306))) lt!37202))))

(declare-fun e!53811 () Bool)

(assert (=> d!20813 (= lt!38479 e!53811)))

(declare-fun res!42772 () Bool)

(assert (=> d!20813 (=> (not res!42772) (not e!53811))))

(assert (=> d!20813 (= res!42772 ((_ is Cons!1534) (t!5209 (toList!751 lt!37306))))))

(assert (=> d!20813 (= (contains!753 (t!5209 (toList!751 lt!37306)) lt!37202) lt!38479)))

(declare-fun b!82498 () Bool)

(declare-fun e!53810 () Bool)

(assert (=> b!82498 (= e!53811 e!53810)))

(declare-fun res!42771 () Bool)

(assert (=> b!82498 (=> res!42771 e!53810)))

(assert (=> b!82498 (= res!42771 (= (h!2123 (t!5209 (toList!751 lt!37306))) lt!37202))))

(declare-fun b!82499 () Bool)

(assert (=> b!82499 (= e!53810 (contains!753 (t!5209 (t!5209 (toList!751 lt!37306))) lt!37202))))

(assert (= (and d!20813 res!42772) b!82498))

(assert (= (and b!82498 (not res!42771)) b!82499))

(assert (=> d!20813 m!83043))

(declare-fun m!85245 () Bool)

(assert (=> d!20813 m!85245))

(declare-fun m!85247 () Bool)

(assert (=> b!82499 m!85247))

(assert (=> b!80909 d!20813))

(declare-fun d!20815 () Bool)

(declare-fun e!53812 () Bool)

(assert (=> d!20815 e!53812))

(declare-fun res!42773 () Bool)

(assert (=> d!20815 (=> res!42773 e!53812)))

(declare-fun lt!38482 () Bool)

(assert (=> d!20815 (= res!42773 (not lt!38482))))

(declare-fun lt!38481 () Bool)

(assert (=> d!20815 (= lt!38482 lt!38481)))

(declare-fun lt!38480 () Unit!2350)

(declare-fun e!53813 () Unit!2350)

(assert (=> d!20815 (= lt!38480 e!53813)))

(declare-fun c!13153 () Bool)

(assert (=> d!20815 (= c!13153 lt!38481)))

(assert (=> d!20815 (= lt!38481 (containsKey!141 (toList!751 lt!37683) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20815 (= (contains!750 lt!37683 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38482)))

(declare-fun b!82500 () Bool)

(declare-fun lt!38483 () Unit!2350)

(assert (=> b!82500 (= e!53813 lt!38483)))

(assert (=> b!82500 (= lt!38483 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!751 lt!37683) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!82500 (isDefined!91 (getValueByKey!137 (toList!751 lt!37683) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!82501 () Bool)

(declare-fun Unit!2433 () Unit!2350)

(assert (=> b!82501 (= e!53813 Unit!2433)))

(declare-fun b!82502 () Bool)

(assert (=> b!82502 (= e!53812 (isDefined!91 (getValueByKey!137 (toList!751 lt!37683) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!20815 c!13153) b!82500))

(assert (= (and d!20815 (not c!13153)) b!82501))

(assert (= (and d!20815 (not res!42773)) b!82502))

(declare-fun m!85249 () Bool)

(assert (=> d!20815 m!85249))

(declare-fun m!85251 () Bool)

(assert (=> b!82500 m!85251))

(assert (=> b!82500 m!82543))

(assert (=> b!82500 m!82543))

(declare-fun m!85253 () Bool)

(assert (=> b!82500 m!85253))

(assert (=> b!82502 m!82543))

(assert (=> b!82502 m!82543))

(assert (=> b!82502 m!85253))

(assert (=> d!19815 d!20815))

(declare-fun b!82504 () Bool)

(declare-fun e!53814 () Option!143)

(declare-fun e!53815 () Option!143)

(assert (=> b!82504 (= e!53814 e!53815)))

(declare-fun c!13155 () Bool)

(assert (=> b!82504 (= c!13155 (and ((_ is Cons!1534) lt!37680) (not (= (_1!1111 (h!2123 lt!37680)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!20817 () Bool)

(declare-fun c!13154 () Bool)

(assert (=> d!20817 (= c!13154 (and ((_ is Cons!1534) lt!37680) (= (_1!1111 (h!2123 lt!37680)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!20817 (= (getValueByKey!137 lt!37680 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!53814)))

(declare-fun b!82506 () Bool)

(assert (=> b!82506 (= e!53815 None!141)))

(declare-fun b!82505 () Bool)

(assert (=> b!82505 (= e!53815 (getValueByKey!137 (t!5209 lt!37680) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!82503 () Bool)

(assert (=> b!82503 (= e!53814 (Some!142 (_2!1111 (h!2123 lt!37680))))))

(assert (= (and d!20817 c!13154) b!82503))

(assert (= (and d!20817 (not c!13154)) b!82504))

(assert (= (and b!82504 c!13155) b!82505))

(assert (= (and b!82504 (not c!13155)) b!82506))

(declare-fun m!85255 () Bool)

(assert (=> b!82505 m!85255))

(assert (=> d!19815 d!20817))

(declare-fun d!20819 () Bool)

(assert (=> d!20819 (= (getValueByKey!137 lt!37680 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!38484 () Unit!2350)

(assert (=> d!20819 (= lt!38484 (choose!478 lt!37680 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!53816 () Bool)

(assert (=> d!20819 e!53816))

(declare-fun res!42774 () Bool)

(assert (=> d!20819 (=> (not res!42774) (not e!53816))))

(assert (=> d!20819 (= res!42774 (isStrictlySorted!291 lt!37680))))

(assert (=> d!20819 (= (lemmaContainsTupThenGetReturnValue!56 lt!37680 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38484)))

(declare-fun b!82507 () Bool)

(declare-fun res!42775 () Bool)

(assert (=> b!82507 (=> (not res!42775) (not e!53816))))

(assert (=> b!82507 (= res!42775 (containsKey!141 lt!37680 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!82508 () Bool)

(assert (=> b!82508 (= e!53816 (contains!753 lt!37680 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!20819 res!42774) b!82507))

(assert (= (and b!82507 res!42775) b!82508))

(assert (=> d!20819 m!82537))

(declare-fun m!85257 () Bool)

(assert (=> d!20819 m!85257))

(declare-fun m!85259 () Bool)

(assert (=> d!20819 m!85259))

(declare-fun m!85261 () Bool)

(assert (=> b!82507 m!85261))

(declare-fun m!85263 () Bool)

(assert (=> b!82508 m!85263))

(assert (=> d!19815 d!20819))

(declare-fun d!20821 () Bool)

(declare-fun e!53818 () Bool)

(assert (=> d!20821 e!53818))

(declare-fun res!42776 () Bool)

(assert (=> d!20821 (=> (not res!42776) (not e!53818))))

(declare-fun lt!38485 () List!1538)

(assert (=> d!20821 (= res!42776 (isStrictlySorted!291 lt!38485))))

(declare-fun e!53817 () List!1538)

(assert (=> d!20821 (= lt!38485 e!53817)))

(declare-fun c!13159 () Bool)

(assert (=> d!20821 (= c!13159 (and ((_ is Cons!1534) (toList!751 call!7400)) (bvslt (_1!1111 (h!2123 (toList!751 call!7400))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!20821 (isStrictlySorted!291 (toList!751 call!7400))))

(assert (=> d!20821 (= (insertStrictlySorted!58 (toList!751 call!7400) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!38485)))

(declare-fun b!82509 () Bool)

(assert (=> b!82509 (= e!53818 (contains!753 lt!38485 (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!7703 () Bool)

(declare-fun call!7706 () List!1538)

(declare-fun call!7707 () List!1538)

(assert (=> bm!7703 (= call!7706 call!7707)))

(declare-fun b!82510 () Bool)

(declare-fun res!42777 () Bool)

(assert (=> b!82510 (=> (not res!42777) (not e!53818))))

(assert (=> b!82510 (= res!42777 (containsKey!141 lt!38485 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!53820 () List!1538)

(declare-fun b!82511 () Bool)

(assert (=> b!82511 (= e!53820 (insertStrictlySorted!58 (t!5209 (toList!751 call!7400)) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!82512 () Bool)

(assert (=> b!82512 (= e!53817 call!7707)))

(declare-fun bm!7704 () Bool)

(assert (=> bm!7704 (= call!7707 ($colon$colon!69 e!53820 (ite c!13159 (h!2123 (toList!751 call!7400)) (tuple2!2203 (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!13157 () Bool)

(assert (=> bm!7704 (= c!13157 c!13159)))

(declare-fun c!13158 () Bool)

(declare-fun b!82513 () Bool)

(declare-fun c!13156 () Bool)

(assert (=> b!82513 (= e!53820 (ite c!13156 (t!5209 (toList!751 call!7400)) (ite c!13158 (Cons!1534 (h!2123 (toList!751 call!7400)) (t!5209 (toList!751 call!7400))) Nil!1535)))))

(declare-fun b!82514 () Bool)

(declare-fun e!53821 () List!1538)

(assert (=> b!82514 (= e!53821 call!7706)))

(declare-fun b!82515 () Bool)

(declare-fun e!53819 () List!1538)

(declare-fun call!7708 () List!1538)

(assert (=> b!82515 (= e!53819 call!7708)))

(declare-fun b!82516 () Bool)

(assert (=> b!82516 (= c!13158 (and ((_ is Cons!1534) (toList!751 call!7400)) (bvsgt (_1!1111 (h!2123 (toList!751 call!7400))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!82516 (= e!53821 e!53819)))

(declare-fun b!82517 () Bool)

(assert (=> b!82517 (= e!53819 call!7708)))

(declare-fun bm!7705 () Bool)

(assert (=> bm!7705 (= call!7708 call!7706)))

(declare-fun b!82518 () Bool)

(assert (=> b!82518 (= e!53817 e!53821)))

(assert (=> b!82518 (= c!13156 (and ((_ is Cons!1534) (toList!751 call!7400)) (= (_1!1111 (h!2123 (toList!751 call!7400))) (_1!1111 (tuple2!2203 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1901 (_values!2276 (v!2610 (underlying!284 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!347 (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!20821 c!13159) b!82512))

(assert (= (and d!20821 (not c!13159)) b!82518))

(assert (= (and b!82518 c!13156) b!82514))

(assert (= (and b!82518 (not c!13156)) b!82516))

(assert (= (and b!82516 c!13158) b!82515))

(assert (= (and b!82516 (not c!13158)) b!82517))

(assert (= (or b!82515 b!82517) bm!7705))

(assert (= (or b!82514 bm!7705) bm!7703))

(assert (= (or b!82512 bm!7703) bm!7704))

(assert (= (and bm!7704 c!13157) b!82511))

(assert (= (and bm!7704 (not c!13157)) b!82513))

(assert (= (and d!20821 res!42776) b!82510))

(assert (= (and b!82510 res!42777) b!82509))

(declare-fun m!85265 () Bool)

(assert (=> b!82510 m!85265))

(declare-fun m!85267 () Bool)

(assert (=> bm!7704 m!85267))

(declare-fun m!85269 () Bool)

(assert (=> d!20821 m!85269))

(declare-fun m!85271 () Bool)

(assert (=> d!20821 m!85271))

(declare-fun m!85273 () Bool)

(assert (=> b!82511 m!85273))

(declare-fun m!85275 () Bool)

(assert (=> b!82509 m!85275))

(assert (=> d!19815 d!20821))

(declare-fun d!20823 () Bool)

(assert (=> d!20823 (= (apply!80 lt!37510 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!137 (toList!751 lt!37510) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3489 () Bool)

(assert (= bs!3489 d!20823))

(assert (=> bs!3489 m!84065))

(assert (=> bs!3489 m!84065))

(declare-fun m!85277 () Bool)

(assert (=> bs!3489 m!85277))

(assert (=> b!80688 d!20823))

(declare-fun d!20825 () Bool)

(declare-fun res!42778 () Bool)

(declare-fun e!53822 () Bool)

(assert (=> d!20825 (=> res!42778 e!53822)))

(assert (=> d!20825 (= res!42778 (and ((_ is Cons!1534) (toList!751 lt!37278)) (= (_1!1111 (h!2123 (toList!751 lt!37278))) (_1!1111 lt!37197))))))

(assert (=> d!20825 (= (containsKey!141 (toList!751 lt!37278) (_1!1111 lt!37197)) e!53822)))

(declare-fun b!82519 () Bool)

(declare-fun e!53823 () Bool)

(assert (=> b!82519 (= e!53822 e!53823)))

(declare-fun res!42779 () Bool)

(assert (=> b!82519 (=> (not res!42779) (not e!53823))))

(assert (=> b!82519 (= res!42779 (and (or (not ((_ is Cons!1534) (toList!751 lt!37278))) (bvsle (_1!1111 (h!2123 (toList!751 lt!37278))) (_1!1111 lt!37197))) ((_ is Cons!1534) (toList!751 lt!37278)) (bvslt (_1!1111 (h!2123 (toList!751 lt!37278))) (_1!1111 lt!37197))))))

(declare-fun b!82520 () Bool)

(assert (=> b!82520 (= e!53823 (containsKey!141 (t!5209 (toList!751 lt!37278)) (_1!1111 lt!37197)))))

(assert (= (and d!20825 (not res!42778)) b!82519))

(assert (= (and b!82519 res!42779) b!82520))

(declare-fun m!85279 () Bool)

(assert (=> b!82520 m!85279))

(assert (=> d!19709 d!20825))

(assert (=> b!80798 d!20723))

(declare-fun d!20827 () Bool)

(declare-fun res!42780 () Bool)

(declare-fun e!53824 () Bool)

(assert (=> d!20827 (=> res!42780 e!53824)))

(assert (=> d!20827 (= res!42780 (or ((_ is Nil!1535) lt!37524) ((_ is Nil!1535) (t!5209 lt!37524))))))

(assert (=> d!20827 (= (isStrictlySorted!291 lt!37524) e!53824)))

(declare-fun b!82521 () Bool)

(declare-fun e!53825 () Bool)

(assert (=> b!82521 (= e!53824 e!53825)))

(declare-fun res!42781 () Bool)

(assert (=> b!82521 (=> (not res!42781) (not e!53825))))

(assert (=> b!82521 (= res!42781 (bvslt (_1!1111 (h!2123 lt!37524)) (_1!1111 (h!2123 (t!5209 lt!37524)))))))

(declare-fun b!82522 () Bool)

(assert (=> b!82522 (= e!53825 (isStrictlySorted!291 (t!5209 lt!37524)))))

(assert (= (and d!20827 (not res!42780)) b!82521))

(assert (= (and b!82521 res!42781) b!82522))

(declare-fun m!85281 () Bool)

(assert (=> b!82522 m!85281))

(assert (=> d!19707 d!20827))

(declare-fun d!20829 () Bool)

(declare-fun res!42782 () Bool)

(declare-fun e!53826 () Bool)

(assert (=> d!20829 (=> res!42782 e!53826)))

(assert (=> d!20829 (= res!42782 (or ((_ is Nil!1535) (toList!751 (+!111 lt!37196 lt!37188))) ((_ is Nil!1535) (t!5209 (toList!751 (+!111 lt!37196 lt!37188))))))))

(assert (=> d!20829 (= (isStrictlySorted!291 (toList!751 (+!111 lt!37196 lt!37188))) e!53826)))

(declare-fun b!82523 () Bool)

(declare-fun e!53827 () Bool)

(assert (=> b!82523 (= e!53826 e!53827)))

(declare-fun res!42783 () Bool)

(assert (=> b!82523 (=> (not res!42783) (not e!53827))))

(assert (=> b!82523 (= res!42783 (bvslt (_1!1111 (h!2123 (toList!751 (+!111 lt!37196 lt!37188)))) (_1!1111 (h!2123 (t!5209 (toList!751 (+!111 lt!37196 lt!37188)))))))))

(declare-fun b!82524 () Bool)

(assert (=> b!82524 (= e!53827 (isStrictlySorted!291 (t!5209 (toList!751 (+!111 lt!37196 lt!37188)))))))

(assert (= (and d!20829 (not res!42782)) b!82523))

(assert (= (and b!82523 res!42783) b!82524))

(assert (=> b!82524 m!83387))

(assert (=> d!19707 d!20829))

(declare-fun d!20831 () Bool)

(declare-fun lt!38486 () Bool)

(assert (=> d!20831 (= lt!38486 (select (content!84 (toList!751 lt!37730)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun e!53829 () Bool)

(assert (=> d!20831 (= lt!38486 e!53829)))

(declare-fun res!42785 () Bool)

(assert (=> d!20831 (=> (not res!42785) (not e!53829))))

(assert (=> d!20831 (= res!42785 ((_ is Cons!1534) (toList!751 lt!37730)))))

(assert (=> d!20831 (= (contains!753 (toList!751 lt!37730) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))) lt!38486)))

(declare-fun b!82525 () Bool)

(declare-fun e!53828 () Bool)

(assert (=> b!82525 (= e!53829 e!53828)))

(declare-fun res!42784 () Bool)

(assert (=> b!82525 (=> res!42784 e!53828)))

(assert (=> b!82525 (= res!42784 (= (h!2123 (toList!751 lt!37730)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!82526 () Bool)

(assert (=> b!82526 (= e!53828 (contains!753 (t!5209 (toList!751 lt!37730)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 (v!2610 (underlying!284 thiss!992))))))))

(assert (= (and d!20831 res!42785) b!82525))

(assert (= (and b!82525 (not res!42784)) b!82526))

(declare-fun m!85283 () Bool)

(assert (=> d!20831 m!85283))

(declare-fun m!85285 () Bool)

(assert (=> d!20831 m!85285))

(declare-fun m!85287 () Bool)

(assert (=> b!82526 m!85287))

(assert (=> b!80989 d!20831))

(declare-fun d!20833 () Bool)

(declare-fun e!53830 () Bool)

(assert (=> d!20833 e!53830))

(declare-fun res!42786 () Bool)

(assert (=> d!20833 (=> (not res!42786) (not e!53830))))

(declare-fun lt!38490 () ListLongMap!1471)

(assert (=> d!20833 (= res!42786 (contains!750 lt!38490 (_1!1111 (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(declare-fun lt!38487 () List!1538)

(assert (=> d!20833 (= lt!38490 (ListLongMap!1472 lt!38487))))

(declare-fun lt!38488 () Unit!2350)

(declare-fun lt!38489 () Unit!2350)

(assert (=> d!20833 (= lt!38488 lt!38489)))

(assert (=> d!20833 (= (getValueByKey!137 lt!38487 (_1!1111 (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))) (Some!142 (_2!1111 (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20833 (= lt!38489 (lemmaContainsTupThenGetReturnValue!56 lt!38487 (_1!1111 (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (_2!1111 (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20833 (= lt!38487 (insertStrictlySorted!58 (toList!751 (ite c!12643 call!7506 (ite c!12644 call!7507 call!7503))) (_1!1111 (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) (_2!1111 (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))))))

(assert (=> d!20833 (= (+!111 (ite c!12643 call!7506 (ite c!12644 call!7507 call!7503)) (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))) lt!38490)))

(declare-fun b!82527 () Bool)

(declare-fun res!42787 () Bool)

(assert (=> b!82527 (=> (not res!42787) (not e!53830))))

(assert (=> b!82527 (= res!42787 (= (getValueByKey!137 (toList!751 lt!38490) (_1!1111 (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16))))) (Some!142 (_2!1111 (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))))

(declare-fun b!82528 () Bool)

(assert (=> b!82528 (= e!53830 (contains!753 (toList!751 lt!38490) (ite (or c!12643 c!12644) (tuple2!2203 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2189 newMap!16)) (tuple2!2203 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2189 newMap!16)))))))

(assert (= (and d!20833 res!42786) b!82527))

(assert (= (and b!82527 res!42787) b!82528))

(declare-fun m!85289 () Bool)

(assert (=> d!20833 m!85289))

(declare-fun m!85291 () Bool)

(assert (=> d!20833 m!85291))

(declare-fun m!85293 () Bool)

(assert (=> d!20833 m!85293))

(declare-fun m!85295 () Bool)

(assert (=> d!20833 m!85295))

(declare-fun m!85297 () Bool)

(assert (=> b!82527 m!85297))

(declare-fun m!85299 () Bool)

(assert (=> b!82528 m!85299))

(assert (=> bm!7506 d!20833))

(declare-fun d!20835 () Bool)

(declare-fun c!13160 () Bool)

(assert (=> d!20835 (= c!13160 ((_ is Nil!1535) (toList!751 lt!37285)))))

(declare-fun e!53831 () (InoxSet tuple2!2202))

(assert (=> d!20835 (= (content!84 (toList!751 lt!37285)) e!53831)))

(declare-fun b!82529 () Bool)

(assert (=> b!82529 (= e!53831 ((as const (Array tuple2!2202 Bool)) false))))

(declare-fun b!82530 () Bool)

(assert (=> b!82530 (= e!53831 ((_ map or) (store ((as const (Array tuple2!2202 Bool)) false) (h!2123 (toList!751 lt!37285)) true) (content!84 (t!5209 (toList!751 lt!37285)))))))

(assert (= (and d!20835 c!13160) b!82529))

(assert (= (and d!20835 (not c!13160)) b!82530))

(declare-fun m!85301 () Bool)

(assert (=> b!82530 m!85301))

(assert (=> b!82530 m!84683))

(assert (=> d!19791 d!20835))

(assert (=> d!19699 d!20037))

(assert (=> b!80638 d!20623))

(assert (=> b!80638 d!19767))

(declare-fun d!20837 () Bool)

(declare-fun lt!38491 () Bool)

(assert (=> d!20837 (= lt!38491 (select (content!84 lt!37299) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun e!53833 () Bool)

(assert (=> d!20837 (= lt!38491 e!53833)))

(declare-fun res!42789 () Bool)

(assert (=> d!20837 (=> (not res!42789) (not e!53833))))

(assert (=> d!20837 (= res!42789 ((_ is Cons!1534) lt!37299))))

(assert (=> d!20837 (= (contains!753 lt!37299 (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))) lt!38491)))

(declare-fun b!82531 () Bool)

(declare-fun e!53832 () Bool)

(assert (=> b!82531 (= e!53833 e!53832)))

(declare-fun res!42788 () Bool)

(assert (=> b!82531 (=> res!42788 e!53832)))

(assert (=> b!82531 (= res!42788 (= (h!2123 lt!37299) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(declare-fun b!82532 () Bool)

(assert (=> b!82532 (= e!53832 (contains!753 (t!5209 lt!37299) (tuple2!2203 (_1!1111 lt!37197) (_2!1111 lt!37197))))))

(assert (= (and d!20837 res!42789) b!82531))

(assert (= (and b!82531 (not res!42788)) b!82532))

(declare-fun m!85303 () Bool)

(assert (=> d!20837 m!85303))

(declare-fun m!85305 () Bool)

(assert (=> d!20837 m!85305))

(declare-fun m!85307 () Bool)

(assert (=> b!82532 m!85307))

(assert (=> b!81018 d!20837))

(assert (=> b!81035 d!19937))

(declare-fun bm!7706 () Bool)

(declare-fun call!7709 () (_ BitVec 32))

(assert (=> bm!7706 (= call!7709 (arrayCountValidKeys!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(declare-fun b!82533 () Bool)

(declare-fun e!53834 () (_ BitVec 32))

(assert (=> b!82533 (= e!53834 (bvadd #b00000000000000000000000000000001 call!7709))))

(declare-fun b!82534 () Bool)

(declare-fun e!53835 () (_ BitVec 32))

(assert (=> b!82534 (= e!53835 e!53834)))

(declare-fun c!13162 () Bool)

(assert (=> b!82534 (= c!13162 (validKeyInArray!0 (select (arr!1900 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!82536 () Bool)

(assert (=> b!82536 (= e!53835 #b00000000000000000000000000000000)))

(declare-fun d!20839 () Bool)

(declare-fun lt!38492 () (_ BitVec 32))

(assert (=> d!20839 (and (bvsge lt!38492 #b00000000000000000000000000000000) (bvsle lt!38492 (bvsub (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!20839 (= lt!38492 e!53835)))

(declare-fun c!13161 () Bool)

(assert (=> d!20839 (= c!13161 (bvsge #b00000000000000000000000000000000 (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> d!20839 (and (bvsle #b00000000000000000000000000000000 (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992)))) (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))))))

(assert (=> d!20839 (= (arrayCountValidKeys!0 (_keys!3957 (v!2610 (underlying!284 thiss!992))) #b00000000000000000000000000000000 (size!2142 (_keys!3957 (v!2610 (underlying!284 thiss!992))))) lt!38492)))

(declare-fun b!82535 () Bool)

(assert (=> b!82535 (= e!53834 call!7709)))

(assert (= (and d!20839 c!13161) b!82536))

(assert (= (and d!20839 (not c!13161)) b!82534))

(assert (= (and b!82534 c!13162) b!82533))

(assert (= (and b!82534 (not c!13162)) b!82535))

(assert (= (or b!82533 b!82535) bm!7706))

(declare-fun m!85309 () Bool)

(assert (=> bm!7706 m!85309))

(assert (=> b!82534 m!83457))

(assert (=> b!82534 m!83457))

(assert (=> b!82534 m!83461))

(assert (=> b!81183 d!20839))

(declare-fun d!20841 () Bool)

(assert (=> d!20841 (contains!750 (getCurrentListMap!437 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2293 newMap!16)) (select (arr!1900 (_keys!3957 newMap!16)) (index!3140 lt!37470)))))

(assert (=> d!20841 true))

(declare-fun _$16!102 () Unit!2350)

(assert (=> d!20841 (= (choose!482 (_keys!3957 newMap!16) lt!37466 (mask!6299 newMap!16) (extraKeys!2140 newMap!16) (zeroValue!2189 newMap!16) (minValue!2189 newMap!16) (index!3140 lt!37470) (defaultEntry!2293 newMap!16)) _$16!102)))

(declare-fun bs!3490 () Bool)

(assert (= bs!3490 d!20841))

(assert (=> bs!3490 m!82467))

(assert (=> bs!3490 m!81929))

(assert (=> bs!3490 m!82467))

(assert (=> bs!3490 m!81929))

(assert (=> bs!3490 m!82469))

(assert (=> d!19807 d!20841))

(assert (=> d!19807 d!20037))

(declare-fun condMapEmpty!3343 () Bool)

(declare-fun mapDefault!3343 () ValueCell!915)

(assert (=> mapNonEmpty!3341 (= condMapEmpty!3343 (= mapRest!3341 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3343)))))

(declare-fun e!53836 () Bool)

(declare-fun mapRes!3343 () Bool)

(assert (=> mapNonEmpty!3341 (= tp!8831 (and e!53836 mapRes!3343))))

(declare-fun mapNonEmpty!3343 () Bool)

(declare-fun tp!8833 () Bool)

(declare-fun e!53837 () Bool)

(assert (=> mapNonEmpty!3343 (= mapRes!3343 (and tp!8833 e!53837))))

(declare-fun mapKey!3343 () (_ BitVec 32))

(declare-fun mapValue!3343 () ValueCell!915)

(declare-fun mapRest!3343 () (Array (_ BitVec 32) ValueCell!915))

(assert (=> mapNonEmpty!3343 (= mapRest!3341 (store mapRest!3343 mapKey!3343 mapValue!3343))))

(declare-fun b!82538 () Bool)

(assert (=> b!82538 (= e!53836 tp_is_empty!2517)))

(declare-fun mapIsEmpty!3343 () Bool)

(assert (=> mapIsEmpty!3343 mapRes!3343))

(declare-fun b!82537 () Bool)

(assert (=> b!82537 (= e!53837 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3341 condMapEmpty!3343) mapIsEmpty!3343))

(assert (= (and mapNonEmpty!3341 (not condMapEmpty!3343)) mapNonEmpty!3343))

(assert (= (and mapNonEmpty!3343 ((_ is ValueCellFull!915) mapValue!3343)) b!82537))

(assert (= (and mapNonEmpty!3341 ((_ is ValueCellFull!915) mapDefault!3343)) b!82538))

(declare-fun m!85311 () Bool)

(assert (=> mapNonEmpty!3343 m!85311))

(declare-fun condMapEmpty!3344 () Bool)

(declare-fun mapDefault!3344 () ValueCell!915)

(assert (=> mapNonEmpty!3342 (= condMapEmpty!3344 (= mapRest!3342 ((as const (Array (_ BitVec 32) ValueCell!915)) mapDefault!3344)))))

(declare-fun e!53838 () Bool)

(declare-fun mapRes!3344 () Bool)

(assert (=> mapNonEmpty!3342 (= tp!8832 (and e!53838 mapRes!3344))))

(declare-fun mapNonEmpty!3344 () Bool)

(declare-fun tp!8834 () Bool)

(declare-fun e!53839 () Bool)

(assert (=> mapNonEmpty!3344 (= mapRes!3344 (and tp!8834 e!53839))))

(declare-fun mapValue!3344 () ValueCell!915)

(declare-fun mapKey!3344 () (_ BitVec 32))

(declare-fun mapRest!3344 () (Array (_ BitVec 32) ValueCell!915))

(assert (=> mapNonEmpty!3344 (= mapRest!3342 (store mapRest!3344 mapKey!3344 mapValue!3344))))

(declare-fun b!82540 () Bool)

(assert (=> b!82540 (= e!53838 tp_is_empty!2517)))

(declare-fun mapIsEmpty!3344 () Bool)

(assert (=> mapIsEmpty!3344 mapRes!3344))

(declare-fun b!82539 () Bool)

(assert (=> b!82539 (= e!53839 tp_is_empty!2517)))

(assert (= (and mapNonEmpty!3342 condMapEmpty!3344) mapIsEmpty!3344))

(assert (= (and mapNonEmpty!3342 (not condMapEmpty!3344)) mapNonEmpty!3344))

(assert (= (and mapNonEmpty!3344 ((_ is ValueCellFull!915) mapValue!3344)) b!82539))

(assert (= (and mapNonEmpty!3342 ((_ is ValueCellFull!915) mapDefault!3344)) b!82540))

(declare-fun m!85313 () Bool)

(assert (=> mapNonEmpty!3344 m!85313))

(declare-fun b_lambda!3659 () Bool)

(assert (= b_lambda!3653 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3659)))

(declare-fun b_lambda!3661 () Bool)

(assert (= b_lambda!3647 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3661)))

(declare-fun b_lambda!3663 () Bool)

(assert (= b_lambda!3657 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3663)))

(declare-fun b_lambda!3665 () Bool)

(assert (= b_lambda!3635 (or (and b!80256 b_free!2201) (and b!80270 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))))) b_lambda!3665)))

(declare-fun b_lambda!3667 () Bool)

(assert (= b_lambda!3651 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3667)))

(declare-fun b_lambda!3669 () Bool)

(assert (= b_lambda!3645 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3669)))

(declare-fun b_lambda!3671 () Bool)

(assert (= b_lambda!3641 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3671)))

(declare-fun b_lambda!3673 () Bool)

(assert (= b_lambda!3631 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3673)))

(declare-fun b_lambda!3675 () Bool)

(assert (= b_lambda!3655 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3675)))

(declare-fun b_lambda!3677 () Bool)

(assert (= b_lambda!3643 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3677)))

(declare-fun b_lambda!3679 () Bool)

(assert (= b_lambda!3637 (or (and b!80256 b_free!2201) (and b!80270 b_free!2203 (= (defaultEntry!2293 newMap!16) (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))))) b_lambda!3679)))

(declare-fun b_lambda!3681 () Bool)

(assert (= b_lambda!3649 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3681)))

(declare-fun b_lambda!3683 () Bool)

(assert (= b_lambda!3633 (or (and b!80256 b_free!2201 (= (defaultEntry!2293 (v!2610 (underlying!284 thiss!992))) (defaultEntry!2293 newMap!16))) (and b!80270 b_free!2203) b_lambda!3683)))

(check-sat (not b!81531) (not b!81753) (not bm!7613) (not b!81319) (not d!20455) (not d!19995) (not d!20481) (not d!20593) (not b!82054) (not b!82446) (not d!20767) (not d!20685) (not b!81342) (not b!81215) (not d!20369) (not d!20089) (not b!82023) (not b!81512) (not b!81797) (not b!82337) (not bm!7616) (not b!81386) (not b!81907) (not d!20699) (not d!20189) (not b!81417) (not b!81361) (not b!82381) (not b!82339) (not d!20289) (not d!20791) (not b!82284) (not d!20021) (not b!82397) (not b!82366) (not b!82402) (not b!81289) (not b!82056) (not d!20435) (not d!20841) (not d!20417) (not bm!7634) (not b!81739) (not b!82511) (not d!20453) (not b!81860) (not b!82455) (not b!82115) (not b!81740) (not b!81599) (not b!82508) (not b!81986) (not b!82283) (not b_lambda!3661) (not b!81684) (not b!82165) (not b!81597) (not bm!7642) (not b!82229) (not d!20411) (not b!81681) (not d!20553) (not d!19953) (not d!20221) (not b!81506) (not b!81534) (not b!81626) (not b!81453) (not d!20429) (not d!20439) (not bm!7604) (not bm!7689) (not bm!7659) (not b!81197) (not b!81308) (not b!82391) (not b!81325) (not bm!7588) (not b!81237) (not b!81465) (not b!82206) (not d!20259) (not d!20813) (not d!20809) (not b!81389) (not b!81675) (not d!20385) (not b!82158) (not b!81872) (not b!81236) (not b!81663) (not d!20105) (not b!82111) (not b!82204) (not b!82348) (not b!82004) (not b!81410) (not b_next!2203) (not d!20763) (not b!81340) (not b!81381) (not b!81869) (not b!81480) (not b!81405) (not b!82052) (not b!81958) (not b!81584) (not b!81482) (not d!20321) (not d!20067) (not b!81330) (not d!20715) (not b!81972) (not b!82528) (not b!81623) (not b!82405) (not b!81955) (not b!82219) (not b!81750) (not b!81582) (not d!20633) (not d!19963) (not b!81940) (not d!20355) (not d!20423) (not b!82018) (not b!81366) (not d!20819) (not b!81628) (not b!81281) (not bm!7574) (not b!81898) (not b!81288) (not b!82131) (not d!19957) (not d!20669) (not d!20567) (not b!82136) (not d!20125) (not b!82063) (not d!20421) (not d!20271) (not b!81871) (not d!20249) (not b!81211) (not b!82491) (not b!81948) (not b!81951) (not b!82138) (not d!20117) (not bm!7599) (not b!81618) (not b!81757) (not b!81557) (not b!81711) (not b!81433) (not d!20141) (not b!81280) (not d!20077) (not b!82224) (not d!20269) (not d!20673) (not b!82456) (not b!81352) (not d!20823) (not b!82160) (not bm!7706) (not d!20293) (not d!20683) (not b!81306) (not b!82383) (not b!81918) (not d!20019) (not b!81528) (not b!82139) (not d!20163) (not b!81560) (not bm!7571) (not b!82089) (not b!81479) (not b!82509) (not b!81893) (not d!19977) (not b!82070) (not b!81249) (not b!81429) (not b_lambda!3607) (not b!82246) (not bm!7632) (not bm!7626) (not b!81511) (not b!81441) (not b!82032) (not b!81721) (not b!82122) (not b!81868) (not b!81863) (not bm!7568) (not b!82325) (not b!81276) (not b!81439) (not b!82247) (not d!20225) (not b!81783) (not b!81371) (not b!81656) (not b!81400) (not b!81910) (not d!20283) (not d!20151) (not b!81385) (not b_lambda!3659) (not b!82107) (not bm!7662) (not d!20015) (not b!81575) (not b!82273) (not d!20135) (not b!82475) (not bm!7647) (not b!82244) (not b!82140) (not d!20301) (not b_lambda!3681) (not b!81727) (not b!81219) (not mapNonEmpty!3343) (not b!81438) (not d!20671) (not d!20279) (not b!82003) (not b!81456) (not b!82110) (not b!82215) (not b!82025) (not d!20837) (not b!81927) (not b!81985) (not d!19947) (not b!81961) (not b!82079) (not b!81973) (not b!81268) (not d!20413) (not b!82001) (not bm!7680) (not d!20795) (not b!81836) (not d!20013) (not bm!7582) (not d!20285) (not d!20731) (not b!81546) (not bm!7610) (not b!81238) (not b!82106) (not b!81956) (not b!82484) (not d!20361) (not d!20733) (not b!81269) (not b!82198) (not d!20703) (not b!81631) (not d!20831) (not b!81903) (not d!20583) (not b!82222) (not d!20401) (not b!81964) (not b!82036) (not d!19943) (not b!82350) (not b!82037) (not b!82082) (not bm!7657) (not b!81428) (not d!20547) (not b!81758) (not b!81544) (not d!20287) (not b!81218) (not b!82021) (not b!81892) (not b!81568) (not b!82288) (not b!82007) (not b!82481) (not d!20745) (not b!82046) (not b!82281) (not b!81686) (not bm!7639) (not d!20515) (not b!81455) (not d!20425) (not b!81464) (not b!82076) (not b_lambda!3677) (not b!81283) (not d!20727) (not b!82408) (not b!81484) (not b!81734) (not b!82407) (not b!81514) (not d!20487) (not b!81648) (not b!82262) (not b!82119) (not b!81742) (not d!20543) (not b!81894) (not b!82502) (not b!81392) (not d!20719) (not b!81359) (not b!82471) (not d!20025) (not b!81370) (not b!81844) (not d!20031) (not b_lambda!3679) (not b!82342) (not b!82133) (not b!81945) (not b!81923) (not d!20521) (not b!82029) (not b!81924) (not d!20093) (not b!82520) (not b!82067) (not d!20265) (not b!81311) (not bm!7625) (not b!81825) (not d!20241) (not b!82047) (not b!82295) (not b!81339) (not b!81368) (not d!20033) (not b!82345) (not d!20357) (not d!20571) (not b!81720) (not b!82092) (not b!81770) b_and!5003 (not bm!7670) (not d!20051) (not b_lambda!3665) (not d!20205) (not bm!7661) (not b_lambda!3683) (not b!81741) (not b!81732) (not b!81322) (not d!20023) (not b!81217) (not b!82534) (not d!20365) (not b!82307) (not b!81760) (not b!81965) (not b!81827) (not b!81772) (not b!81859) (not b!81472) (not d!20713) (not d!19939) (not b!81905) (not d!20333) (not d!20281) (not b!82355) (not d!20431) (not d!19985) (not d!20545) (not b!81315) (not b!81491) (not d!20255) (not b!82167) (not b!81960) (not b!81888) (not bm!7658) (not d!20095) (not b!81363) (not d!20153) (not b!82362) (not b_lambda!3667) (not d!20329) (not b_lambda!3663) (not b!82071) (not b!82442) (not b!81492) (not d!20121) (not b!82269) (not b!81725) (not b!81571) (not d!20451) (not d!20419) (not d!20645) (not d!20049) (not d!20765) (not d!20081) (not d!20799) (not b!81207) (not b!82141) (not d!20569) (not b!81227) (not b!82016) (not b!82316) (not b!82166) (not b!82359) (not b!81645) (not b!81687) (not b!81735) (not d!20761) (not d!20055) (not b!82236) (not b!82212) (not b!82314) (not b!82347) (not d!20581) (not b_lambda!3629) (not bm!7595) (not d!20349) (not b!81786) (not d!19973) (not b!81383) (not bm!7629) (not b!82267) (not b!81790) (not b!82242) (not bm!7614) (not b!81332) (not b_lambda!3609) (not b!81273) (not b!81309) (not b!82156) (not d!20027) (not b!82311) (not d!20335) (not d!20159) (not b_lambda!3639) (not b!81356) (not d!20069) (not b!81278) (not b!82499) (not d!20379) (not b!82527) (not b!81697) (not b!81719) (not b!81225) (not b!81318) (not b!82264) (not b!81313) (not d!20741) (not b!81488) (not b!82399) (not b!81728) (not d!20775) (not b!81583) (not b!81409) (not d!20209) (not b!82485) (not b!82163) (not d!20343) (not b!81877) (not b!81793) (not d!19987) (not b!82368) (not bm!7621) (not d!20017) (not b!82087) (not b!81401) (not b_lambda!3671) (not d!20303) (not b!82234) (not bm!7593) (not d!20687) (not mapNonEmpty!3344) (not b!82416) (not d!20371) (not b!82309) (not d!20779) (not b!81223) (not b!81607) (not b!82317) (not d!20573) (not d!20103) (not b!81469) (not d!20305) (not d!20003) (not b!81605) (not d!19961) (not b!82319) (not bm!7683) (not b!81736) (not b!81369) (not d!20793) (not b!81819) (not bm!7566) (not d!20769) (not d!20805) (not b!81426) (not b!82526) (not b!81427) (not b!82214) (not b!81421) (not bm!7677) (not b!81621) (not bm!7618) (not d!20315) (not d!20695) (not d!20597) (not b!81372) (not bm!7652) (not d!20029) (not bm!7601) (not b!81698) (not b!81974) (not d!20691) (not b!82497) (not b!81477) (not b!82387) (not b!81567) (not bm!7685) (not b!81327) (not b!82285) (not b!82151) (not b!81407) (not bm!7615) (not d!20489) (not bm!7698) (not d!20623) (not b_lambda!3669) (not bm!7597) (not b!82075) (not d!20267) (not b!81292) (not d!20437) (not b!81777) (not d!20555) (not b!82524) (not b!82453) (not bm!7645) (not d!20735) (not b!82130) (not b!82142) (not d!20575) (not d!20263) (not bm!7664) (not b!82510) (not b!81632) (not b!81665) (not b!81337) (not b!82448) (not bm!7700) (not d!20469) (not b!81398) (not b!81874) (not d!19993) (not b!81896) (not d!20187) (not b!81775) (not b!81440) (not b!81998) (not d!20751) (not b!81954) (not d!20197) (not d!19955) (not bm!7702) (not b!81535) (not b!81691) (not b_lambda!3675) (not d!20403) (not d!20491) (not d!20119) (not d!20389) (not b!81774) (not d!20227) (not b!81755) (not b!81580) (not b!82330) (not b!82217) (not b!81976) (not bm!7650) (not b!81866) (not d!20251) (not b!81334) (not b!81320) (not d!20551) (not b!82351) (not b!81323) (not b!82020) (not b!81746) (not b!81744) (not b!82221) (not bm!7594) (not d!20637) (not b!82522) (not b!81658) (not d!20433) (not d!20821) (not b!82365) (not b!81795) (not b!81890) (not b!81702) (not d!20443) (not b!81967) (not d!20781) (not d!20277) (not bm!7660) (not b!82074) (not b!81540) (not b!81870) (not d!20649) (not b!82334) (not b!82099) (not b!81640) (not d!20339) (not b!82388) (not b!81594) (not d!20173) (not b!81902) (not d!20625) (not b!81883) (not d!19951) (not b!81730) (not d!20407) (not bm!7675) (not b!82201) (not d!20541) (not b_lambda!3597) (not b!81991) (not d!20497) (not b!81291) (not b!82445) (not b!81994) (not b!82027) (not b!81302) (not d!20507) (not d!20359) (not b!82487) (not b!82367) (not b!82080) (not b!81996) (not b!82457) (not d!20759) (not d!20747) (not d!20665) (not b!82454) (not b!81354) (not b!82049) (not b!81855) (not b!82209) (not b!82006) (not b!82477) (not b!82494) (not b!81759) (not b!81394) (not b!81493) (not b!81573) (not b!82299) (not d!20557) (not d!20215) (not b!81228) (not d!20659) (not b!81875) (not b!81524) (not b!81212) (not bm!7691) (not b!81490) (not d!20589) (not b!81423) (not d!20711) (not d!20501) (not d!20517) (not b!82248) (not d!20697) (not b!81715) (not b!81226) (not b!81596) (not b!81413) (not d!20253) (not d!20653) (not d!20377) (not b!81393) (not b!82226) (not b!81608) (not d!19959) (not b!81937) (not b!82270) (not b!81253) (not d!20493) (not b!81201) (not b!81780) (not d!20631) (not b!82179) (not b!81260) (not b!81900) (not b!81921) (not b_lambda!3627) (not bm!7673) (not d!19989) (not d!20729) (not d!20367) (not b!81661) (not d!20175) (not b!82379) (not d!20629) (not b!82377) (not d!20577) (not d!20537) (not b!81199) (not d!20177) (not b!81263) (not d!20621) (not d!20441) (not d!20603) (not b!81558) (not b!81425) (not b_lambda!3621) (not d!20307) (not b!82349) (not b!81879) (not d!20217) (not d!20297) (not b!82098) (not b!81321) (not b!81970) (not b!82005) (not d!20327) (not b!81747) (not b!81882) (not b!81689) (not d!20011) (not b!81266) (not b!81851) (not d!20599) (not b!82466) (not b!81769) (not b!81290) (not d!20771) (not d!20399) (not b!81561) (not d!20299) (not d!20363) (not bm!7636) (not b!81442) (not bm!7592) (not d!20657) (not b!82169) (not b!81705) (not b!81213) (not b!82505) (not b_lambda!3605) (not b!81435) (not b!81509) (not b!81555) (not b!81431) (not b!82382) (not d!20427) (not bm!7585) (not d!20009) (not d!20503) (not bm!7667) (not d!20191) (not b!81515) (not b!81246) (not d!20063) (not b!82298) (not d!20457) (not b!82239) (not b!82333) (not b!81666) (not b!82530) (not b!81532) (not b!81310) (not bm!7654) (not d!20331) (not b!81537) (not b!81521) (not b!82353) (not b!82258) (not bm!7580) (not b!81191) (not d!20797) (not d!20755) (not b!82290) (not b!82271) (not bm!7583) (not d!20195) (not b!82357) (not b!81210) (not b!81516) (not d!20523) (not b!81791) (not b!82500) (not b!82404) (not d!20045) (not b!82062) (not b!82261) (not bm!7697) (not b!82232) (not b!81458) (not bm!7704) (not b_next!2201) (not b!82296) (not d!20709) (not bm!7684) (not d!20239) (not d!20203) (not d!20295) (not d!20549) (not b!81788) (not d!20513) (not bm!7644) (not d!20485) (not bm!7651) (not d!20115) (not b!81688) (not b!82326) (not b!81520) (not b!81988) (not b!81578) (not b!82153) (not b!81341) (not b!81543) (not d!20035) (not b!82090) (not b_lambda!3625) (not b!81748) (not b!81826) (not b!81434) (not b!81473) (not b!82272) (not b!81403) (not b!82479) (not d!20833) (not b!81678) tp_is_empty!2517 (not b!81604) (not b!82356) (not b!81876) (not d!20471) (not b!81630) (not b!82128) (not d!20139) (not b!81443) (not b!81887) (not b!81710) (not b!82483) (not b_lambda!3623) (not d!20291) (not d!20815) (not b!81768) (not b!82034) (not b!81664) (not d!20181) (not b!82237) (not b!82245) (not b!81396) (not b!82507) (not b!82124) (not d!20005) (not b!81847) (not d!20415) (not b!82126) (not d!20679) (not b!81209) (not d!20007) (not b!81286) (not d!20323) (not d!20565) (not b!82168) (not b!81839) (not d!20609) (not b!81916) (not b_lambda!3673) (not d!20213) (not bm!7624) (not d!20245) (not b!82532) (not b!82451) (not b!81602) (not bm!7687) (not b!81706) (not b!81485) (not b!81667) (not b!82395) (not d!20477) (not b!82489) (not b!82297) (not b!81503) (not b!81653) (not b!81634) (not b!81564) (not b!81842) (not b!81581) (not b!81487) (not b!81343) (not b!82315) (not b!81592) (not bm!7627) (not b!81542) (not b!81925) (not bm!7591) (not b!82053) (not b!81962) (not b!82103) b_and!5001 (not d!20137) (not b!82313) (not b!81723) (not b!81914) (not d!20479) (not b!81729) (not d!20693) (not b!82406) (not b!81926) (not b!81726) (not d!20183) (not b!82443) (not b!81995) (not d!20465) (not b!81545) (not b!81641) (not b!82213) (not bm!7607) (not b!81881) (not d!20133) (not d!20165) (not b!81975) (not d!20275) (not b!81796) (not b!81606) (not b!82293) (not bm!7577) (not b!81857) (not b!81649) (not d!20707))
(check-sat b_and!5001 b_and!5003 (not b_next!2201) (not b_next!2203))
