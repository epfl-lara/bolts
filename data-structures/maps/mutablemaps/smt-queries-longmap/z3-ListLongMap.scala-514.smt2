; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12694 () Bool)

(assert start!12694)

(declare-fun b!109812 () Bool)

(declare-fun b_free!2561 () Bool)

(declare-fun b_next!2561 () Bool)

(assert (=> b!109812 (= b_free!2561 (not b_next!2561))))

(declare-fun tp!10022 () Bool)

(declare-fun b_and!6777 () Bool)

(assert (=> b!109812 (= tp!10022 b_and!6777)))

(declare-fun b!109809 () Bool)

(declare-fun b_free!2563 () Bool)

(declare-fun b_next!2563 () Bool)

(assert (=> b!109809 (= b_free!2563 (not b_next!2563))))

(declare-fun tp!10024 () Bool)

(declare-fun b_and!6779 () Bool)

(assert (=> b!109809 (= tp!10024 b_and!6779)))

(declare-fun res!54344 () Bool)

(declare-fun e!71462 () Bool)

(assert (=> start!12694 (=> (not res!54344) (not e!71462))))

(declare-datatypes ((V!3243 0))(
  ( (V!3244 (val!1393 Int)) )
))
(declare-datatypes ((array!4388 0))(
  ( (array!4389 (arr!2080 (Array (_ BitVec 32) (_ BitVec 64))) (size!2337 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1005 0))(
  ( (ValueCellFull!1005 (v!2928 V!3243)) (EmptyCell!1005) )
))
(declare-datatypes ((array!4390 0))(
  ( (array!4391 (arr!2081 (Array (_ BitVec 32) ValueCell!1005)) (size!2338 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!918 0))(
  ( (LongMapFixedSize!919 (defaultEntry!2627 Int) (mask!6795 (_ BitVec 32)) (extraKeys!2424 (_ BitVec 32)) (zeroValue!2498 V!3243) (minValue!2498 V!3243) (_size!508 (_ BitVec 32)) (_keys!4341 array!4388) (_values!2610 array!4390) (_vacant!508 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!718 0))(
  ( (Cell!719 (v!2929 LongMapFixedSize!918)) )
))
(declare-datatypes ((LongMap!718 0))(
  ( (LongMap!719 (underlying!370 Cell!718)) )
))
(declare-fun thiss!992 () LongMap!718)

(declare-fun valid!418 (LongMap!718) Bool)

(assert (=> start!12694 (= res!54344 (valid!418 thiss!992))))

(assert (=> start!12694 e!71462))

(declare-fun e!71449 () Bool)

(assert (=> start!12694 e!71449))

(assert (=> start!12694 true))

(declare-fun e!71455 () Bool)

(assert (=> start!12694 e!71455))

(declare-fun b!109805 () Bool)

(declare-fun res!54345 () Bool)

(assert (=> b!109805 (=> (not res!54345) (not e!71462))))

(declare-fun newMap!16 () LongMapFixedSize!918)

(declare-fun valid!419 (LongMapFixedSize!918) Bool)

(assert (=> b!109805 (= res!54345 (valid!419 newMap!16))))

(declare-fun b!109806 () Bool)

(declare-fun e!71457 () Bool)

(assert (=> b!109806 (= e!71449 e!71457)))

(declare-fun b!109807 () Bool)

(declare-fun res!54339 () Bool)

(assert (=> b!109807 (=> (not res!54339) (not e!71462))))

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!109807 (= res!54339 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!109808 () Bool)

(declare-datatypes ((Unit!3421 0))(
  ( (Unit!3422) )
))
(declare-fun e!71446 () Unit!3421)

(declare-fun Unit!3423 () Unit!3421)

(assert (=> b!109808 (= e!71446 Unit!3423)))

(declare-fun lt!56526 () Unit!3421)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!117 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) (_ BitVec 32) Int) Unit!3421)

(assert (=> b!109808 (= lt!56526 (lemmaListMapContainsThenArrayContainsFrom!117 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4388 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!109808 (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!56520 () Unit!3421)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4388 (_ BitVec 32) (_ BitVec 32)) Unit!3421)

(assert (=> b!109808 (= lt!56520 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1652 0))(
  ( (Nil!1649) (Cons!1648 (h!2247 (_ BitVec 64)) (t!5801 List!1652)) )
))
(declare-fun arrayNoDuplicates!0 (array!4388 (_ BitVec 32) List!1652) Bool)

(assert (=> b!109808 (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) from!355 Nil!1649)))

(declare-fun lt!56518 () Unit!3421)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4388 (_ BitVec 32) (_ BitVec 64) List!1652) Unit!3421)

(assert (=> b!109808 (= lt!56518 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649)))))

(assert (=> b!109808 false))

(declare-fun tp_is_empty!2697 () Bool)

(declare-fun e!71447 () Bool)

(declare-fun array_inv!1251 (array!4388) Bool)

(declare-fun array_inv!1252 (array!4390) Bool)

(assert (=> b!109809 (= e!71455 (and tp!10024 tp_is_empty!2697 (array_inv!1251 (_keys!4341 newMap!16)) (array_inv!1252 (_values!2610 newMap!16)) e!71447))))

(declare-fun b!109810 () Bool)

(declare-fun e!71460 () Bool)

(assert (=> b!109810 (= e!71460 (or (not (= (size!2338 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6795 (v!2929 (underlying!370 thiss!992)))))) (not (= (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (size!2338 (_values!2610 (v!2929 (underlying!370 thiss!992)))))) (bvslt (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun mapIsEmpty!3999 () Bool)

(declare-fun mapRes!4000 () Bool)

(assert (=> mapIsEmpty!3999 mapRes!4000))

(declare-fun b!109811 () Bool)

(declare-fun e!71454 () Bool)

(assert (=> b!109811 (= e!71462 e!71454)))

(declare-fun res!54343 () Bool)

(assert (=> b!109811 (=> (not res!54343) (not e!71454))))

(declare-datatypes ((tuple2!2428 0))(
  ( (tuple2!2429 (_1!1224 (_ BitVec 64)) (_2!1224 V!3243)) )
))
(declare-datatypes ((List!1653 0))(
  ( (Nil!1650) (Cons!1649 (h!2248 tuple2!2428) (t!5802 List!1653)) )
))
(declare-datatypes ((ListLongMap!1595 0))(
  ( (ListLongMap!1596 (toList!813 List!1653)) )
))
(declare-fun lt!56525 () ListLongMap!1595)

(declare-fun lt!56524 () ListLongMap!1595)

(assert (=> b!109811 (= res!54343 (= lt!56525 lt!56524))))

(declare-fun map!1294 (LongMapFixedSize!918) ListLongMap!1595)

(assert (=> b!109811 (= lt!56524 (map!1294 newMap!16))))

(declare-fun getCurrentListMap!489 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) Int) ListLongMap!1595)

(assert (=> b!109811 (= lt!56525 (getCurrentListMap!489 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun e!71459 () Bool)

(declare-fun e!71450 () Bool)

(assert (=> b!109812 (= e!71450 (and tp!10022 tp_is_empty!2697 (array_inv!1251 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (array_inv!1252 (_values!2610 (v!2929 (underlying!370 thiss!992)))) e!71459))))

(declare-fun b!109813 () Bool)

(declare-fun res!54341 () Bool)

(assert (=> b!109813 (=> (not res!54341) (not e!71462))))

(assert (=> b!109813 (= res!54341 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6795 newMap!16)) (_size!508 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!109814 () Bool)

(declare-fun e!71452 () Bool)

(assert (=> b!109814 (= e!71452 tp_is_empty!2697)))

(declare-fun mapNonEmpty!3999 () Bool)

(declare-fun mapRes!3999 () Bool)

(declare-fun tp!10023 () Bool)

(declare-fun e!71453 () Bool)

(assert (=> mapNonEmpty!3999 (= mapRes!3999 (and tp!10023 e!71453))))

(declare-fun mapKey!4000 () (_ BitVec 32))

(declare-fun mapValue!3999 () ValueCell!1005)

(declare-fun mapRest!4000 () (Array (_ BitVec 32) ValueCell!1005))

(assert (=> mapNonEmpty!3999 (= (arr!2081 (_values!2610 newMap!16)) (store mapRest!4000 mapKey!4000 mapValue!3999))))

(declare-fun b!109815 () Bool)

(declare-fun e!71458 () Bool)

(assert (=> b!109815 (= e!71459 (and e!71458 mapRes!4000))))

(declare-fun condMapEmpty!4000 () Bool)

(declare-fun mapDefault!3999 () ValueCell!1005)

(assert (=> b!109815 (= condMapEmpty!4000 (= (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!3999)))))

(declare-fun b!109816 () Bool)

(declare-fun e!71456 () Bool)

(assert (=> b!109816 (= e!71456 tp_is_empty!2697)))

(declare-fun b!109817 () Bool)

(assert (=> b!109817 (= e!71453 tp_is_empty!2697)))

(declare-fun b!109818 () Bool)

(declare-fun e!71445 () Bool)

(declare-fun e!71451 () Bool)

(assert (=> b!109818 (= e!71445 e!71451)))

(declare-fun res!54338 () Bool)

(assert (=> b!109818 (=> (not res!54338) (not e!71451))))

(declare-datatypes ((tuple2!2430 0))(
  ( (tuple2!2431 (_1!1225 Bool) (_2!1225 LongMapFixedSize!918)) )
))
(declare-fun lt!56521 () tuple2!2430)

(assert (=> b!109818 (= res!54338 (and (_1!1225 lt!56521) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!56519 () Unit!3421)

(assert (=> b!109818 (= lt!56519 e!71446)))

(declare-fun c!19435 () Bool)

(declare-fun contains!837 (ListLongMap!1595 (_ BitVec 64)) Bool)

(assert (=> b!109818 (= c!19435 (contains!837 lt!56524 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!56527 () V!3243)

(declare-fun update!162 (LongMapFixedSize!918 (_ BitVec 64) V!3243) tuple2!2430)

(assert (=> b!109818 (= lt!56521 (update!162 newMap!16 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))

(declare-fun b!109819 () Bool)

(assert (=> b!109819 (= e!71457 e!71450)))

(declare-fun b!109820 () Bool)

(assert (=> b!109820 (= e!71451 (not e!71460))))

(declare-fun res!54342 () Bool)

(assert (=> b!109820 (=> res!54342 e!71460)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!109820 (= res!54342 (not (validMask!0 (mask!6795 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun lt!56522 () ListLongMap!1595)

(declare-fun lt!56528 () tuple2!2428)

(declare-fun lt!56517 () tuple2!2428)

(declare-fun +!149 (ListLongMap!1595 tuple2!2428) ListLongMap!1595)

(assert (=> b!109820 (= (+!149 (+!149 lt!56522 lt!56528) lt!56517) (+!149 (+!149 lt!56522 lt!56517) lt!56528))))

(assert (=> b!109820 (= lt!56517 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))

(assert (=> b!109820 (= lt!56528 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))

(declare-fun lt!56523 () Unit!3421)

(declare-fun addCommutativeForDiffKeys!61 (ListLongMap!1595 (_ BitVec 64) V!3243 (_ BitVec 64) V!3243) Unit!3421)

(assert (=> b!109820 (= lt!56523 (addCommutativeForDiffKeys!61 lt!56522 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!116 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) Int) ListLongMap!1595)

(assert (=> b!109820 (= lt!56522 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!109821 () Bool)

(assert (=> b!109821 (= e!71458 tp_is_empty!2697)))

(declare-fun b!109822 () Bool)

(declare-fun Unit!3424 () Unit!3421)

(assert (=> b!109822 (= e!71446 Unit!3424)))

(declare-fun mapNonEmpty!4000 () Bool)

(declare-fun tp!10021 () Bool)

(assert (=> mapNonEmpty!4000 (= mapRes!4000 (and tp!10021 e!71452))))

(declare-fun mapValue!4000 () ValueCell!1005)

(declare-fun mapRest!3999 () (Array (_ BitVec 32) ValueCell!1005))

(declare-fun mapKey!3999 () (_ BitVec 32))

(assert (=> mapNonEmpty!4000 (= (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (store mapRest!3999 mapKey!3999 mapValue!4000))))

(declare-fun b!109823 () Bool)

(assert (=> b!109823 (= e!71447 (and e!71456 mapRes!3999))))

(declare-fun condMapEmpty!3999 () Bool)

(declare-fun mapDefault!4000 () ValueCell!1005)

(assert (=> b!109823 (= condMapEmpty!3999 (= (arr!2081 (_values!2610 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4000)))))

(declare-fun b!109824 () Bool)

(assert (=> b!109824 (= e!71454 e!71445)))

(declare-fun res!54340 () Bool)

(assert (=> b!109824 (=> (not res!54340) (not e!71445))))

(assert (=> b!109824 (= res!54340 (and (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1355 (ValueCell!1005 V!3243) V!3243)

(declare-fun dynLambda!392 (Int (_ BitVec 64)) V!3243)

(assert (=> b!109824 (= lt!56527 (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) from!355) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun mapIsEmpty!4000 () Bool)

(assert (=> mapIsEmpty!4000 mapRes!3999))

(assert (= (and start!12694 res!54344) b!109807))

(assert (= (and b!109807 res!54339) b!109805))

(assert (= (and b!109805 res!54345) b!109813))

(assert (= (and b!109813 res!54341) b!109811))

(assert (= (and b!109811 res!54343) b!109824))

(assert (= (and b!109824 res!54340) b!109818))

(assert (= (and b!109818 c!19435) b!109808))

(assert (= (and b!109818 (not c!19435)) b!109822))

(assert (= (and b!109818 res!54338) b!109820))

(assert (= (and b!109820 (not res!54342)) b!109810))

(assert (= (and b!109815 condMapEmpty!4000) mapIsEmpty!3999))

(assert (= (and b!109815 (not condMapEmpty!4000)) mapNonEmpty!4000))

(get-info :version)

(assert (= (and mapNonEmpty!4000 ((_ is ValueCellFull!1005) mapValue!4000)) b!109814))

(assert (= (and b!109815 ((_ is ValueCellFull!1005) mapDefault!3999)) b!109821))

(assert (= b!109812 b!109815))

(assert (= b!109819 b!109812))

(assert (= b!109806 b!109819))

(assert (= start!12694 b!109806))

(assert (= (and b!109823 condMapEmpty!3999) mapIsEmpty!4000))

(assert (= (and b!109823 (not condMapEmpty!3999)) mapNonEmpty!3999))

(assert (= (and mapNonEmpty!3999 ((_ is ValueCellFull!1005) mapValue!3999)) b!109817))

(assert (= (and b!109823 ((_ is ValueCellFull!1005) mapDefault!4000)) b!109816))

(assert (= b!109809 b!109823))

(assert (= start!12694 b!109809))

(declare-fun b_lambda!4943 () Bool)

(assert (=> (not b_lambda!4943) (not b!109824)))

(declare-fun t!5798 () Bool)

(declare-fun tb!2113 () Bool)

(assert (=> (and b!109812 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))) t!5798) tb!2113))

(declare-fun result!3535 () Bool)

(assert (=> tb!2113 (= result!3535 tp_is_empty!2697)))

(assert (=> b!109824 t!5798))

(declare-fun b_and!6781 () Bool)

(assert (= b_and!6777 (and (=> t!5798 result!3535) b_and!6781)))

(declare-fun t!5800 () Bool)

(declare-fun tb!2115 () Bool)

(assert (=> (and b!109809 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))) t!5800) tb!2115))

(declare-fun result!3539 () Bool)

(assert (= result!3539 result!3535))

(assert (=> b!109824 t!5800))

(declare-fun b_and!6783 () Bool)

(assert (= b_and!6779 (and (=> t!5800 result!3539) b_and!6783)))

(declare-fun m!124511 () Bool)

(assert (=> start!12694 m!124511))

(declare-fun m!124513 () Bool)

(assert (=> b!109820 m!124513))

(declare-fun m!124515 () Bool)

(assert (=> b!109820 m!124515))

(declare-fun m!124517 () Bool)

(assert (=> b!109820 m!124517))

(declare-fun m!124519 () Bool)

(assert (=> b!109820 m!124519))

(declare-fun m!124521 () Bool)

(assert (=> b!109820 m!124521))

(assert (=> b!109820 m!124521))

(declare-fun m!124523 () Bool)

(assert (=> b!109820 m!124523))

(declare-fun m!124525 () Bool)

(assert (=> b!109820 m!124525))

(assert (=> b!109820 m!124515))

(assert (=> b!109820 m!124519))

(declare-fun m!124527 () Bool)

(assert (=> b!109820 m!124527))

(declare-fun m!124529 () Bool)

(assert (=> mapNonEmpty!3999 m!124529))

(declare-fun m!124531 () Bool)

(assert (=> b!109805 m!124531))

(declare-fun m!124533 () Bool)

(assert (=> b!109809 m!124533))

(declare-fun m!124535 () Bool)

(assert (=> b!109809 m!124535))

(declare-fun m!124537 () Bool)

(assert (=> b!109808 m!124537))

(declare-fun m!124539 () Bool)

(assert (=> b!109808 m!124539))

(assert (=> b!109808 m!124515))

(declare-fun m!124541 () Bool)

(assert (=> b!109808 m!124541))

(assert (=> b!109808 m!124515))

(assert (=> b!109808 m!124515))

(declare-fun m!124543 () Bool)

(assert (=> b!109808 m!124543))

(assert (=> b!109808 m!124515))

(declare-fun m!124545 () Bool)

(assert (=> b!109808 m!124545))

(declare-fun m!124547 () Bool)

(assert (=> b!109811 m!124547))

(declare-fun m!124549 () Bool)

(assert (=> b!109811 m!124549))

(declare-fun m!124551 () Bool)

(assert (=> mapNonEmpty!4000 m!124551))

(declare-fun m!124553 () Bool)

(assert (=> b!109812 m!124553))

(declare-fun m!124555 () Bool)

(assert (=> b!109812 m!124555))

(assert (=> b!109824 m!124515))

(declare-fun m!124557 () Bool)

(assert (=> b!109824 m!124557))

(declare-fun m!124559 () Bool)

(assert (=> b!109824 m!124559))

(assert (=> b!109824 m!124557))

(assert (=> b!109824 m!124559))

(declare-fun m!124561 () Bool)

(assert (=> b!109824 m!124561))

(assert (=> b!109818 m!124515))

(assert (=> b!109818 m!124515))

(declare-fun m!124563 () Bool)

(assert (=> b!109818 m!124563))

(assert (=> b!109818 m!124515))

(declare-fun m!124565 () Bool)

(assert (=> b!109818 m!124565))

(check-sat tp_is_empty!2697 (not b_next!2563) (not b!109824) (not b_lambda!4943) (not b!109820) b_and!6783 (not b_next!2561) (not mapNonEmpty!3999) (not b!109805) (not b!109808) (not start!12694) (not b!109812) (not b!109811) b_and!6781 (not b!109809) (not mapNonEmpty!4000) (not b!109818))
(check-sat b_and!6781 b_and!6783 (not b_next!2561) (not b_next!2563))
(get-model)

(declare-fun b_lambda!4947 () Bool)

(assert (= b_lambda!4943 (or (and b!109812 b_free!2561) (and b!109809 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))))) b_lambda!4947)))

(check-sat tp_is_empty!2697 (not b_next!2563) (not b!109824) (not b_lambda!4947) (not b!109820) b_and!6783 (not b_next!2561) (not mapNonEmpty!3999) (not b!109805) (not b!109808) (not start!12694) (not b!109812) (not b!109811) b_and!6781 (not b!109809) (not mapNonEmpty!4000) (not b!109818))
(check-sat b_and!6781 b_and!6783 (not b_next!2561) (not b_next!2563))
(get-model)

(declare-fun d!30867 () Bool)

(assert (=> d!30867 (= (array_inv!1251 (_keys!4341 newMap!16)) (bvsge (size!2337 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109809 d!30867))

(declare-fun d!30869 () Bool)

(assert (=> d!30869 (= (array_inv!1252 (_values!2610 newMap!16)) (bvsge (size!2338 (_values!2610 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109809 d!30869))

(declare-fun d!30871 () Bool)

(declare-fun e!71521 () Bool)

(assert (=> d!30871 e!71521))

(declare-fun res!54372 () Bool)

(assert (=> d!30871 (=> res!54372 e!71521)))

(declare-fun lt!56576 () Bool)

(assert (=> d!30871 (= res!54372 (not lt!56576))))

(declare-fun lt!56573 () Bool)

(assert (=> d!30871 (= lt!56576 lt!56573)))

(declare-fun lt!56575 () Unit!3421)

(declare-fun e!71522 () Unit!3421)

(assert (=> d!30871 (= lt!56575 e!71522)))

(declare-fun c!19441 () Bool)

(assert (=> d!30871 (= c!19441 lt!56573)))

(declare-fun containsKey!161 (List!1653 (_ BitVec 64)) Bool)

(assert (=> d!30871 (= lt!56573 (containsKey!161 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30871 (= (contains!837 lt!56524 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) lt!56576)))

(declare-fun b!109895 () Bool)

(declare-fun lt!56574 () Unit!3421)

(assert (=> b!109895 (= e!71522 lt!56574)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!110 (List!1653 (_ BitVec 64)) Unit!3421)

(assert (=> b!109895 (= lt!56574 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-datatypes ((Option!163 0))(
  ( (Some!162 (v!2933 V!3243)) (None!161) )
))
(declare-fun isDefined!111 (Option!163) Bool)

(declare-fun getValueByKey!157 (List!1653 (_ BitVec 64)) Option!163)

(assert (=> b!109895 (isDefined!111 (getValueByKey!157 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!109896 () Bool)

(declare-fun Unit!3428 () Unit!3421)

(assert (=> b!109896 (= e!71522 Unit!3428)))

(declare-fun b!109897 () Bool)

(assert (=> b!109897 (= e!71521 (isDefined!111 (getValueByKey!157 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!30871 c!19441) b!109895))

(assert (= (and d!30871 (not c!19441)) b!109896))

(assert (= (and d!30871 (not res!54372)) b!109897))

(assert (=> d!30871 m!124515))

(declare-fun m!124623 () Bool)

(assert (=> d!30871 m!124623))

(assert (=> b!109895 m!124515))

(declare-fun m!124625 () Bool)

(assert (=> b!109895 m!124625))

(assert (=> b!109895 m!124515))

(declare-fun m!124627 () Bool)

(assert (=> b!109895 m!124627))

(assert (=> b!109895 m!124627))

(declare-fun m!124629 () Bool)

(assert (=> b!109895 m!124629))

(assert (=> b!109897 m!124515))

(assert (=> b!109897 m!124627))

(assert (=> b!109897 m!124627))

(assert (=> b!109897 m!124629))

(assert (=> b!109818 d!30871))

(declare-fun b!109982 () Bool)

(declare-fun e!71587 () Bool)

(declare-fun e!71584 () Bool)

(assert (=> b!109982 (= e!71587 e!71584)))

(declare-fun res!54405 () Bool)

(declare-fun call!11728 () Bool)

(assert (=> b!109982 (= res!54405 call!11728)))

(assert (=> b!109982 (=> (not res!54405) (not e!71584))))

(declare-fun b!109983 () Bool)

(declare-fun e!71569 () ListLongMap!1595)

(assert (=> b!109983 (= e!71569 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!109984 () Bool)

(declare-fun call!11726 () ListLongMap!1595)

(assert (=> b!109984 (= e!71569 call!11726)))

(declare-fun b!109985 () Bool)

(declare-fun lt!56636 () Unit!3421)

(declare-fun lt!56640 () Unit!3421)

(assert (=> b!109985 (= lt!56636 lt!56640)))

(declare-datatypes ((SeekEntryResult!271 0))(
  ( (MissingZero!271 (index!3234 (_ BitVec 32))) (Found!271 (index!3235 (_ BitVec 32))) (Intermediate!271 (undefined!1083 Bool) (index!3236 (_ BitVec 32)) (x!13959 (_ BitVec 32))) (Undefined!271) (MissingVacant!271 (index!3237 (_ BitVec 32))) )
))
(declare-fun lt!56639 () SeekEntryResult!271)

(assert (=> b!109985 (contains!837 call!11726 (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639)))))

(declare-fun lt!56647 () array!4390)

(declare-fun lemmaValidKeyInArrayIsInListMap!107 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) Int) Unit!3421)

(assert (=> b!109985 (= lt!56640 (lemmaValidKeyInArrayIsInListMap!107 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3235 lt!56639) (defaultEntry!2627 newMap!16)))))

(assert (=> b!109985 (= lt!56647 (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))))

(declare-fun lt!56643 () Unit!3421)

(declare-fun lt!56656 () Unit!3421)

(assert (=> b!109985 (= lt!56643 lt!56656)))

(declare-fun call!11718 () ListLongMap!1595)

(declare-fun call!11724 () ListLongMap!1595)

(assert (=> b!109985 (= call!11718 call!11724)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) (_ BitVec 64) V!3243 Int) Unit!3421)

(assert (=> b!109985 (= lt!56656 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3235 lt!56639) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56641 () Unit!3421)

(declare-fun e!71573 () Unit!3421)

(assert (=> b!109985 (= lt!56641 e!71573)))

(declare-fun c!19479 () Bool)

(declare-fun call!11717 () Bool)

(assert (=> b!109985 (= c!19479 call!11717)))

(declare-fun e!71582 () tuple2!2430)

(assert (=> b!109985 (= e!71582 (tuple2!2431 true (LongMapFixedSize!919 (defaultEntry!2627 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (_size!508 newMap!16) (_keys!4341 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (_vacant!508 newMap!16))))))

(declare-fun b!109986 () Bool)

(declare-fun res!54414 () Bool)

(declare-fun call!11719 () Bool)

(assert (=> b!109986 (= res!54414 call!11719)))

(declare-fun e!71580 () Bool)

(assert (=> b!109986 (=> (not res!54414) (not e!71580))))

(declare-fun b!109987 () Bool)

(declare-fun e!71577 () ListLongMap!1595)

(declare-fun call!11720 () ListLongMap!1595)

(assert (=> b!109987 (= e!71577 call!11720)))

(declare-fun b!109988 () Bool)

(declare-fun lt!56642 () SeekEntryResult!271)

(assert (=> b!109988 (= e!71587 ((_ is Undefined!271) lt!56642))))

(declare-fun bm!11705 () Bool)

(declare-fun call!11729 () Bool)

(assert (=> bm!11705 (= call!11719 call!11729)))

(declare-fun b!109989 () Bool)

(declare-fun e!71578 () Bool)

(declare-fun call!11712 () Bool)

(assert (=> b!109989 (= e!71578 (not call!11712))))

(declare-fun bm!11706 () Bool)

(declare-fun call!11713 () ListLongMap!1595)

(assert (=> bm!11706 (= call!11713 (map!1294 newMap!16))))

(declare-fun b!109990 () Bool)

(declare-fun res!54413 () Bool)

(assert (=> b!109990 (= res!54413 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3237 lt!56642)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109990 (=> (not res!54413) (not e!71584))))

(declare-fun b!109991 () Bool)

(declare-fun res!54403 () Bool)

(declare-fun lt!56645 () SeekEntryResult!271)

(assert (=> b!109991 (= res!54403 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3237 lt!56645)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109991 (=> (not res!54403) (not e!71578))))

(declare-fun bm!11707 () Bool)

(declare-fun call!11725 () SeekEntryResult!271)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4388 (_ BitVec 32)) SeekEntryResult!271)

(assert (=> bm!11707 (= call!11725 (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun c!19473 () Bool)

(declare-fun call!11716 () ListLongMap!1595)

(declare-fun bm!11708 () Bool)

(declare-fun c!19483 () Bool)

(assert (=> bm!11708 (= call!11716 (getCurrentListMap!489 (_keys!4341 newMap!16) (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!109992 () Bool)

(declare-fun e!71583 () tuple2!2430)

(assert (=> b!109992 (= e!71583 e!71582)))

(declare-fun c!19470 () Bool)

(assert (=> b!109992 (= c!19470 ((_ is MissingZero!271) lt!56639))))

(declare-fun bm!11709 () Bool)

(declare-fun call!11708 () SeekEntryResult!271)

(assert (=> bm!11709 (= call!11708 call!11725)))

(declare-fun bm!11710 () Bool)

(declare-fun call!11722 () Bool)

(declare-fun call!11710 () Bool)

(assert (=> bm!11710 (= call!11722 call!11710)))

(declare-fun b!109993 () Bool)

(declare-fun lt!56646 () SeekEntryResult!271)

(assert (=> b!109993 (= e!71580 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56646)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!30873 () Bool)

(declare-fun e!71571 () Bool)

(assert (=> d!30873 e!71571))

(declare-fun res!54411 () Bool)

(assert (=> d!30873 (=> (not res!54411) (not e!71571))))

(declare-fun lt!56657 () tuple2!2430)

(assert (=> d!30873 (= res!54411 (valid!419 (_2!1225 lt!56657)))))

(declare-fun e!71588 () tuple2!2430)

(assert (=> d!30873 (= lt!56657 e!71588)))

(assert (=> d!30873 (= c!19483 (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvneg (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!30873 (valid!419 newMap!16)))

(assert (=> d!30873 (= (update!162 newMap!16 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527) lt!56657)))

(declare-fun b!109994 () Bool)

(declare-fun res!54406 () Bool)

(declare-fun e!71574 () Bool)

(assert (=> b!109994 (=> (not res!54406) (not e!71574))))

(assert (=> b!109994 (= res!54406 call!11722)))

(declare-fun e!71585 () Bool)

(assert (=> b!109994 (= e!71585 e!71574)))

(declare-fun b!109995 () Bool)

(declare-fun e!71567 () Unit!3421)

(declare-fun Unit!3429 () Unit!3421)

(assert (=> b!109995 (= e!71567 Unit!3429)))

(declare-fun lt!56633 () Unit!3421)

(declare-fun call!11709 () Unit!3421)

(assert (=> b!109995 (= lt!56633 call!11709)))

(declare-fun lt!56634 () SeekEntryResult!271)

(declare-fun call!11711 () SeekEntryResult!271)

(assert (=> b!109995 (= lt!56634 call!11711)))

(declare-fun res!54412 () Bool)

(assert (=> b!109995 (= res!54412 ((_ is Found!271) lt!56634))))

(declare-fun e!71568 () Bool)

(assert (=> b!109995 (=> (not res!54412) (not e!71568))))

(assert (=> b!109995 e!71568))

(declare-fun lt!56637 () Unit!3421)

(assert (=> b!109995 (= lt!56637 lt!56633)))

(assert (=> b!109995 false))

(declare-fun call!11727 () Unit!3421)

(declare-fun bm!11711 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) Int) Unit!3421)

(assert (=> bm!11711 (= call!11727 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(declare-fun b!109996 () Bool)

(declare-fun e!71579 () Bool)

(assert (=> b!109996 (= e!71579 ((_ is Undefined!271) lt!56645))))

(declare-fun b!109997 () Bool)

(declare-fun lt!56650 () Unit!3421)

(assert (=> b!109997 (= e!71567 lt!56650)))

(assert (=> b!109997 (= lt!56650 call!11727)))

(assert (=> b!109997 (= lt!56645 call!11711)))

(declare-fun c!19477 () Bool)

(assert (=> b!109997 (= c!19477 ((_ is MissingZero!271) lt!56645))))

(assert (=> b!109997 e!71585))

(declare-fun b!109998 () Bool)

(declare-fun e!71575 () tuple2!2430)

(assert (=> b!109998 (= e!71588 e!71575)))

(assert (=> b!109998 (= lt!56639 (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (=> b!109998 (= c!19473 ((_ is Undefined!271) lt!56639))))

(declare-fun b!109999 () Bool)

(declare-fun res!54409 () Bool)

(assert (=> b!109999 (= res!54409 call!11710)))

(assert (=> b!109999 (=> (not res!54409) (not e!71568))))

(declare-fun b!110000 () Bool)

(assert (=> b!110000 (= e!71579 e!71578)))

(declare-fun res!54401 () Bool)

(assert (=> b!110000 (= res!54401 call!11722)))

(assert (=> b!110000 (=> (not res!54401) (not e!71578))))

(declare-fun bm!11712 () Bool)

(assert (=> bm!11712 (= call!11726 call!11716)))

(declare-fun bm!11713 () Bool)

(declare-fun call!11723 () ListLongMap!1595)

(assert (=> bm!11713 (= call!11723 call!11724)))

(declare-fun b!110001 () Bool)

(declare-fun c!19471 () Bool)

(assert (=> b!110001 (= c!19471 ((_ is MissingVacant!271) lt!56645))))

(assert (=> b!110001 (= e!71585 e!71579)))

(declare-fun b!110002 () Bool)

(declare-fun lt!56652 () Unit!3421)

(assert (=> b!110002 (= e!71573 lt!56652)))

(assert (=> b!110002 (= lt!56652 call!11709)))

(assert (=> b!110002 (= lt!56646 call!11708)))

(declare-fun res!54410 () Bool)

(assert (=> b!110002 (= res!54410 ((_ is Found!271) lt!56646))))

(assert (=> b!110002 (=> (not res!54410) (not e!71580))))

(assert (=> b!110002 e!71580))

(declare-fun bm!11714 () Bool)

(assert (=> bm!11714 (= call!11710 call!11729)))

(declare-fun b!110003 () Bool)

(declare-fun lt!56638 () Unit!3421)

(declare-fun lt!56631 () Unit!3421)

(assert (=> b!110003 (= lt!56638 lt!56631)))

(declare-fun call!11715 () ListLongMap!1595)

(assert (=> b!110003 (= call!11715 call!11723)))

(declare-fun lt!56651 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!49 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 V!3243 Int) Unit!3421)

(assert (=> b!110003 (= lt!56631 (lemmaChangeZeroKeyThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56651 (zeroValue!2498 newMap!16) lt!56527 (minValue!2498 newMap!16) (defaultEntry!2627 newMap!16)))))

(assert (=> b!110003 (= lt!56651 (bvor (extraKeys!2424 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!71586 () tuple2!2430)

(assert (=> b!110003 (= e!71586 (tuple2!2431 true (LongMapFixedSize!919 (defaultEntry!2627 newMap!16) (mask!6795 newMap!16) (bvor (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) lt!56527 (minValue!2498 newMap!16) (_size!508 newMap!16) (_keys!4341 newMap!16) (_values!2610 newMap!16) (_vacant!508 newMap!16))))))

(declare-fun b!110004 () Bool)

(declare-fun e!71581 () Bool)

(assert (=> b!110004 (= e!71571 e!71581)))

(declare-fun c!19474 () Bool)

(assert (=> b!110004 (= c!19474 (_1!1225 lt!56657))))

(declare-fun b!110005 () Bool)

(assert (=> b!110005 (= e!71588 e!71586)))

(declare-fun c!19472 () Bool)

(assert (=> b!110005 (= c!19472 (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11715 () Bool)

(declare-fun call!11721 () Bool)

(declare-fun call!11714 () Bool)

(assert (=> bm!11715 (= call!11721 call!11714)))

(declare-fun b!110006 () Bool)

(declare-fun res!54408 () Bool)

(declare-fun e!71572 () Bool)

(assert (=> b!110006 (=> (not res!54408) (not e!71572))))

(assert (=> b!110006 (= res!54408 call!11728)))

(declare-fun e!71570 () Bool)

(assert (=> b!110006 (= e!71570 e!71572)))

(declare-fun b!110007 () Bool)

(declare-fun e!71576 () Bool)

(declare-fun call!11731 () ListLongMap!1595)

(assert (=> b!110007 (= e!71576 (= call!11731 (+!149 call!11713 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!110008 () Bool)

(declare-fun c!19476 () Bool)

(assert (=> b!110008 (= c!19476 ((_ is MissingVacant!271) lt!56642))))

(assert (=> b!110008 (= e!71570 e!71587)))

(declare-fun b!110009 () Bool)

(assert (=> b!110009 (= e!71581 e!71576)))

(declare-fun res!54404 () Bool)

(assert (=> b!110009 (= res!54404 (contains!837 call!11731 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110009 (=> (not res!54404) (not e!71576))))

(declare-fun b!110010 () Bool)

(declare-fun res!54407 () Bool)

(assert (=> b!110010 (=> (not res!54407) (not e!71574))))

(assert (=> b!110010 (= res!54407 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3234 lt!56645)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!56632 () (_ BitVec 32))

(declare-fun bm!11716 () Bool)

(assert (=> bm!11716 (= call!11724 (getCurrentListMap!489 (_keys!4341 newMap!16) (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!110011 () Bool)

(declare-fun res!54402 () Bool)

(assert (=> b!110011 (=> (not res!54402) (not e!71572))))

(assert (=> b!110011 (= res!54402 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3234 lt!56642)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11717 () Bool)

(assert (=> bm!11717 (= call!11712 call!11714)))

(declare-fun b!110012 () Bool)

(declare-fun lt!56655 () tuple2!2430)

(declare-fun call!11730 () tuple2!2430)

(assert (=> b!110012 (= lt!56655 call!11730)))

(assert (=> b!110012 (= e!71582 (tuple2!2431 (_1!1225 lt!56655) (_2!1225 lt!56655)))))

(declare-fun bm!11718 () Bool)

(assert (=> bm!11718 (= call!11728 call!11719)))

(declare-fun b!110013 () Bool)

(assert (=> b!110013 (= e!71572 (not call!11721))))

(declare-fun b!110014 () Bool)

(assert (=> b!110014 (= e!71581 (= call!11731 call!11713))))

(declare-fun bm!11719 () Bool)

(assert (=> bm!11719 (= call!11718 (+!149 e!71577 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun c!19482 () Bool)

(assert (=> bm!11719 (= c!19482 c!19483)))

(declare-fun b!110015 () Bool)

(declare-fun c!19481 () Bool)

(assert (=> b!110015 (= c!19481 ((_ is MissingVacant!271) lt!56639))))

(assert (=> b!110015 (= e!71575 e!71583)))

(declare-fun bm!11720 () Bool)

(assert (=> bm!11720 (= call!11731 (map!1294 (_2!1225 lt!56657)))))

(declare-fun bm!11721 () Bool)

(assert (=> bm!11721 (= call!11711 call!11725)))

(declare-fun b!110016 () Bool)

(declare-fun lt!56649 () Unit!3421)

(assert (=> b!110016 (= lt!56649 e!71567)))

(declare-fun c!19475 () Bool)

(assert (=> b!110016 (= c!19475 call!11717)))

(assert (=> b!110016 (= e!71575 (tuple2!2431 false newMap!16))))

(declare-fun bm!11722 () Bool)

(assert (=> bm!11722 (= call!11720 call!11716)))

(declare-fun b!110017 () Bool)

(assert (=> b!110017 (= e!71574 (not call!11712))))

(declare-fun b!110018 () Bool)

(assert (=> b!110018 (= e!71568 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56634)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun bm!11723 () Bool)

(declare-fun updateHelperNewKey!49 (LongMapFixedSize!918 (_ BitVec 64) V!3243 (_ BitVec 32)) tuple2!2430)

(assert (=> bm!11723 (= call!11730 (updateHelperNewKey!49 newMap!16 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639))))))

(declare-fun bm!11724 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) Int) Unit!3421)

(assert (=> bm!11724 (= call!11709 (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(declare-fun bm!11725 () Bool)

(assert (=> bm!11725 (= call!11714 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!110019 () Bool)

(declare-fun lt!56644 () tuple2!2430)

(assert (=> b!110019 (= e!71583 (tuple2!2431 (_1!1225 lt!56644) (_2!1225 lt!56644)))))

(assert (=> b!110019 (= lt!56644 call!11730)))

(declare-fun b!110020 () Bool)

(assert (=> b!110020 (= e!71577 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!110021 () Bool)

(declare-fun Unit!3430 () Unit!3421)

(assert (=> b!110021 (= e!71573 Unit!3430)))

(declare-fun lt!56654 () Unit!3421)

(assert (=> b!110021 (= lt!56654 call!11727)))

(assert (=> b!110021 (= lt!56642 call!11708)))

(declare-fun c!19480 () Bool)

(assert (=> b!110021 (= c!19480 ((_ is MissingZero!271) lt!56642))))

(assert (=> b!110021 e!71570))

(declare-fun lt!56653 () Unit!3421)

(assert (=> b!110021 (= lt!56653 lt!56654)))

(assert (=> b!110021 false))

(declare-fun bm!11726 () Bool)

(declare-fun c!19478 () Bool)

(assert (=> bm!11726 (= c!19478 c!19473)))

(assert (=> bm!11726 (= call!11717 (contains!837 e!71569 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun bm!11727 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11727 (= call!11729 (inRange!0 (ite c!19473 (ite c!19475 (index!3235 lt!56634) (ite c!19477 (index!3234 lt!56645) (index!3237 lt!56645))) (ite c!19479 (index!3235 lt!56646) (ite c!19480 (index!3234 lt!56642) (index!3237 lt!56642)))) (mask!6795 newMap!16)))))

(declare-fun b!110022 () Bool)

(declare-fun lt!56648 () Unit!3421)

(declare-fun lt!56635 () Unit!3421)

(assert (=> b!110022 (= lt!56648 lt!56635)))

(assert (=> b!110022 (= call!11715 call!11723)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 V!3243 Int) Unit!3421)

(assert (=> b!110022 (= lt!56635 (lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56632 (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) lt!56527 (defaultEntry!2627 newMap!16)))))

(assert (=> b!110022 (= lt!56632 (bvor (extraKeys!2424 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!110022 (= e!71586 (tuple2!2431 true (LongMapFixedSize!919 (defaultEntry!2627 newMap!16) (mask!6795 newMap!16) (bvor (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) (zeroValue!2498 newMap!16) lt!56527 (_size!508 newMap!16) (_keys!4341 newMap!16) (_values!2610 newMap!16) (_vacant!508 newMap!16))))))

(declare-fun bm!11728 () Bool)

(assert (=> bm!11728 (= call!11715 call!11718)))

(declare-fun b!110023 () Bool)

(assert (=> b!110023 (= e!71584 (not call!11721))))

(assert (= (and d!30873 c!19483) b!110005))

(assert (= (and d!30873 (not c!19483)) b!109998))

(assert (= (and b!110005 c!19472) b!110003))

(assert (= (and b!110005 (not c!19472)) b!110022))

(assert (= (or b!110003 b!110022) bm!11722))

(assert (= (or b!110003 b!110022) bm!11713))

(assert (= (or b!110003 b!110022) bm!11728))

(assert (= (and b!109998 c!19473) b!110016))

(assert (= (and b!109998 (not c!19473)) b!110015))

(assert (= (and b!110016 c!19475) b!109995))

(assert (= (and b!110016 (not c!19475)) b!109997))

(assert (= (and b!109995 res!54412) b!109999))

(assert (= (and b!109999 res!54409) b!110018))

(assert (= (and b!109997 c!19477) b!109994))

(assert (= (and b!109997 (not c!19477)) b!110001))

(assert (= (and b!109994 res!54406) b!110010))

(assert (= (and b!110010 res!54407) b!110017))

(assert (= (and b!110001 c!19471) b!110000))

(assert (= (and b!110001 (not c!19471)) b!109996))

(assert (= (and b!110000 res!54401) b!109991))

(assert (= (and b!109991 res!54403) b!109989))

(assert (= (or b!109994 b!110000) bm!11710))

(assert (= (or b!110017 b!109989) bm!11717))

(assert (= (or b!109999 bm!11710) bm!11714))

(assert (= (or b!109995 b!109997) bm!11721))

(assert (= (and b!110015 c!19481) b!110019))

(assert (= (and b!110015 (not c!19481)) b!109992))

(assert (= (and b!109992 c!19470) b!110012))

(assert (= (and b!109992 (not c!19470)) b!109985))

(assert (= (and b!109985 c!19479) b!110002))

(assert (= (and b!109985 (not c!19479)) b!110021))

(assert (= (and b!110002 res!54410) b!109986))

(assert (= (and b!109986 res!54414) b!109993))

(assert (= (and b!110021 c!19480) b!110006))

(assert (= (and b!110021 (not c!19480)) b!110008))

(assert (= (and b!110006 res!54408) b!110011))

(assert (= (and b!110011 res!54402) b!110013))

(assert (= (and b!110008 c!19476) b!109982))

(assert (= (and b!110008 (not c!19476)) b!109988))

(assert (= (and b!109982 res!54405) b!109990))

(assert (= (and b!109990 res!54413) b!110023))

(assert (= (or b!110006 b!109982) bm!11718))

(assert (= (or b!110013 b!110023) bm!11715))

(assert (= (or b!109986 bm!11718) bm!11705))

(assert (= (or b!110002 b!110021) bm!11709))

(assert (= (or b!110019 b!110012) bm!11723))

(assert (= (or bm!11714 bm!11705) bm!11727))

(assert (= (or bm!11721 bm!11709) bm!11707))

(assert (= (or b!109995 b!110002) bm!11724))

(assert (= (or bm!11717 bm!11715) bm!11725))

(assert (= (or b!109997 b!110021) bm!11711))

(assert (= (or b!110016 b!109985) bm!11712))

(assert (= (or b!110016 b!109985) bm!11726))

(assert (= (and bm!11726 c!19478) b!109984))

(assert (= (and bm!11726 (not c!19478)) b!109983))

(assert (= (or bm!11713 b!109985) bm!11716))

(assert (= (or bm!11722 bm!11712) bm!11708))

(assert (= (or bm!11728 b!109985) bm!11719))

(assert (= (and bm!11719 c!19482) b!109987))

(assert (= (and bm!11719 (not c!19482)) b!110020))

(assert (= (and d!30873 res!54411) b!110004))

(assert (= (and b!110004 c!19474) b!110009))

(assert (= (and b!110004 (not c!19474)) b!110014))

(assert (= (and b!110009 res!54404) b!110007))

(assert (= (or b!110007 b!110014) bm!11706))

(assert (= (or b!110009 b!110007 b!110014) bm!11720))

(assert (=> bm!11711 m!124515))

(declare-fun m!124631 () Bool)

(assert (=> bm!11711 m!124631))

(declare-fun m!124633 () Bool)

(assert (=> bm!11708 m!124633))

(assert (=> b!110009 m!124515))

(declare-fun m!124635 () Bool)

(assert (=> b!110009 m!124635))

(declare-fun m!124637 () Bool)

(assert (=> b!110011 m!124637))

(assert (=> bm!11725 m!124515))

(declare-fun m!124639 () Bool)

(assert (=> bm!11725 m!124639))

(declare-fun m!124641 () Bool)

(assert (=> bm!11720 m!124641))

(declare-fun m!124643 () Bool)

(assert (=> bm!11727 m!124643))

(declare-fun m!124645 () Bool)

(assert (=> b!110007 m!124645))

(declare-fun m!124647 () Bool)

(assert (=> b!110003 m!124647))

(declare-fun m!124649 () Bool)

(assert (=> b!109985 m!124649))

(declare-fun m!124651 () Bool)

(assert (=> b!109985 m!124651))

(assert (=> b!109985 m!124515))

(declare-fun m!124653 () Bool)

(assert (=> b!109985 m!124653))

(declare-fun m!124655 () Bool)

(assert (=> b!109985 m!124655))

(assert (=> b!109985 m!124655))

(declare-fun m!124657 () Bool)

(assert (=> b!109985 m!124657))

(declare-fun m!124659 () Bool)

(assert (=> b!110022 m!124659))

(declare-fun m!124661 () Bool)

(assert (=> b!110010 m!124661))

(assert (=> bm!11716 m!124651))

(declare-fun m!124663 () Bool)

(assert (=> bm!11716 m!124663))

(declare-fun m!124665 () Bool)

(assert (=> b!110018 m!124665))

(declare-fun m!124667 () Bool)

(assert (=> d!30873 m!124667))

(assert (=> d!30873 m!124531))

(declare-fun m!124669 () Bool)

(assert (=> bm!11719 m!124669))

(assert (=> bm!11706 m!124547))

(assert (=> b!109998 m!124515))

(declare-fun m!124671 () Bool)

(assert (=> b!109998 m!124671))

(assert (=> bm!11726 m!124515))

(declare-fun m!124673 () Bool)

(assert (=> bm!11726 m!124673))

(declare-fun m!124675 () Bool)

(assert (=> b!109991 m!124675))

(declare-fun m!124677 () Bool)

(assert (=> b!109983 m!124677))

(assert (=> bm!11723 m!124515))

(declare-fun m!124679 () Bool)

(assert (=> bm!11723 m!124679))

(assert (=> b!110020 m!124677))

(assert (=> bm!11724 m!124515))

(declare-fun m!124681 () Bool)

(assert (=> bm!11724 m!124681))

(declare-fun m!124683 () Bool)

(assert (=> b!109990 m!124683))

(assert (=> bm!11707 m!124515))

(assert (=> bm!11707 m!124671))

(declare-fun m!124685 () Bool)

(assert (=> b!109993 m!124685))

(assert (=> b!109818 d!30873))

(declare-fun d!30875 () Bool)

(declare-fun res!54421 () Bool)

(declare-fun e!71591 () Bool)

(assert (=> d!30875 (=> (not res!54421) (not e!71591))))

(declare-fun simpleValid!75 (LongMapFixedSize!918) Bool)

(assert (=> d!30875 (= res!54421 (simpleValid!75 newMap!16))))

(assert (=> d!30875 (= (valid!419 newMap!16) e!71591)))

(declare-fun b!110030 () Bool)

(declare-fun res!54422 () Bool)

(assert (=> b!110030 (=> (not res!54422) (not e!71591))))

(declare-fun arrayCountValidKeys!0 (array!4388 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!110030 (= res!54422 (= (arrayCountValidKeys!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (_size!508 newMap!16)))))

(declare-fun b!110031 () Bool)

(declare-fun res!54423 () Bool)

(assert (=> b!110031 (=> (not res!54423) (not e!71591))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4388 (_ BitVec 32)) Bool)

(assert (=> b!110031 (= res!54423 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun b!110032 () Bool)

(assert (=> b!110032 (= e!71591 (arrayNoDuplicates!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 Nil!1649))))

(assert (= (and d!30875 res!54421) b!110030))

(assert (= (and b!110030 res!54422) b!110031))

(assert (= (and b!110031 res!54423) b!110032))

(declare-fun m!124687 () Bool)

(assert (=> d!30875 m!124687))

(declare-fun m!124689 () Bool)

(assert (=> b!110030 m!124689))

(declare-fun m!124691 () Bool)

(assert (=> b!110031 m!124691))

(declare-fun m!124693 () Bool)

(assert (=> b!110032 m!124693))

(assert (=> b!109805 d!30875))

(declare-fun d!30877 () Bool)

(declare-fun c!19486 () Bool)

(assert (=> d!30877 (= c!19486 ((_ is ValueCellFull!1005) (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!71594 () V!3243)

(assert (=> d!30877 (= (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) from!355) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71594)))

(declare-fun b!110037 () Bool)

(declare-fun get!1357 (ValueCell!1005 V!3243) V!3243)

(assert (=> b!110037 (= e!71594 (get!1357 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) from!355) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110038 () Bool)

(declare-fun get!1358 (ValueCell!1005 V!3243) V!3243)

(assert (=> b!110038 (= e!71594 (get!1358 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) from!355) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30877 c!19486) b!110037))

(assert (= (and d!30877 (not c!19486)) b!110038))

(assert (=> b!110037 m!124557))

(assert (=> b!110037 m!124559))

(declare-fun m!124695 () Bool)

(assert (=> b!110037 m!124695))

(assert (=> b!110038 m!124557))

(assert (=> b!110038 m!124559))

(declare-fun m!124697 () Bool)

(assert (=> b!110038 m!124697))

(assert (=> b!109824 d!30877))

(declare-fun b!110063 () Bool)

(declare-fun e!71615 () Bool)

(declare-fun lt!56674 () ListLongMap!1595)

(declare-fun isEmpty!381 (ListLongMap!1595) Bool)

(assert (=> b!110063 (= e!71615 (isEmpty!381 lt!56674))))

(declare-fun bm!11731 () Bool)

(declare-fun call!11734 () ListLongMap!1595)

(assert (=> bm!11731 (= call!11734 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!110064 () Bool)

(declare-fun e!71613 () ListLongMap!1595)

(assert (=> b!110064 (= e!71613 (ListLongMap!1596 Nil!1650))))

(declare-fun b!110065 () Bool)

(declare-fun e!71609 () Bool)

(assert (=> b!110065 (= e!71609 e!71615)))

(declare-fun c!19496 () Bool)

(assert (=> b!110065 (= c!19496 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110066 () Bool)

(declare-fun e!71610 () Bool)

(assert (=> b!110066 (= e!71610 e!71609)))

(declare-fun c!19498 () Bool)

(declare-fun e!71612 () Bool)

(assert (=> b!110066 (= c!19498 e!71612)))

(declare-fun res!54434 () Bool)

(assert (=> b!110066 (=> (not res!54434) (not e!71612))))

(assert (=> b!110066 (= res!54434 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110067 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!110067 (= e!71612 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110067 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!110068 () Bool)

(declare-fun res!54433 () Bool)

(assert (=> b!110068 (=> (not res!54433) (not e!71610))))

(assert (=> b!110068 (= res!54433 (not (contains!837 lt!56674 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!30879 () Bool)

(assert (=> d!30879 e!71610))

(declare-fun res!54432 () Bool)

(assert (=> d!30879 (=> (not res!54432) (not e!71610))))

(assert (=> d!30879 (= res!54432 (not (contains!837 lt!56674 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30879 (= lt!56674 e!71613)))

(declare-fun c!19497 () Bool)

(assert (=> d!30879 (= c!19497 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> d!30879 (validMask!0 (mask!6795 (v!2929 (underlying!370 thiss!992))))))

(assert (=> d!30879 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))) lt!56674)))

(declare-fun b!110069 () Bool)

(declare-fun lt!56673 () Unit!3421)

(declare-fun lt!56677 () Unit!3421)

(assert (=> b!110069 (= lt!56673 lt!56677)))

(declare-fun lt!56672 () ListLongMap!1595)

(declare-fun lt!56675 () (_ BitVec 64))

(declare-fun lt!56676 () (_ BitVec 64))

(declare-fun lt!56678 () V!3243)

(assert (=> b!110069 (not (contains!837 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)) lt!56676))))

(declare-fun addStillNotContains!50 (ListLongMap!1595 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3421)

(assert (=> b!110069 (= lt!56677 (addStillNotContains!50 lt!56672 lt!56675 lt!56678 lt!56676))))

(assert (=> b!110069 (= lt!56676 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110069 (= lt!56678 (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110069 (= lt!56675 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!110069 (= lt!56672 call!11734)))

(declare-fun e!71614 () ListLongMap!1595)

(assert (=> b!110069 (= e!71614 (+!149 call!11734 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110070 () Bool)

(assert (=> b!110070 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> b!110070 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_values!2610 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun e!71611 () Bool)

(declare-fun apply!100 (ListLongMap!1595 (_ BitVec 64)) V!3243)

(assert (=> b!110070 (= e!71611 (= (apply!100 lt!56674 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110071 () Bool)

(assert (=> b!110071 (= e!71613 e!71614)))

(declare-fun c!19495 () Bool)

(assert (=> b!110071 (= c!19495 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110072 () Bool)

(assert (=> b!110072 (= e!71609 e!71611)))

(assert (=> b!110072 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun res!54435 () Bool)

(assert (=> b!110072 (= res!54435 (contains!837 lt!56674 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110072 (=> (not res!54435) (not e!71611))))

(declare-fun b!110073 () Bool)

(assert (=> b!110073 (= e!71615 (= lt!56674 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110074 () Bool)

(assert (=> b!110074 (= e!71614 call!11734)))

(assert (= (and d!30879 c!19497) b!110064))

(assert (= (and d!30879 (not c!19497)) b!110071))

(assert (= (and b!110071 c!19495) b!110069))

(assert (= (and b!110071 (not c!19495)) b!110074))

(assert (= (or b!110069 b!110074) bm!11731))

(assert (= (and d!30879 res!54432) b!110068))

(assert (= (and b!110068 res!54433) b!110066))

(assert (= (and b!110066 res!54434) b!110067))

(assert (= (and b!110066 c!19498) b!110072))

(assert (= (and b!110066 (not c!19498)) b!110065))

(assert (= (and b!110072 res!54435) b!110070))

(assert (= (and b!110065 c!19496) b!110073))

(assert (= (and b!110065 (not c!19496)) b!110063))

(declare-fun b_lambda!4949 () Bool)

(assert (=> (not b_lambda!4949) (not b!110069)))

(assert (=> b!110069 t!5798))

(declare-fun b_and!6793 () Bool)

(assert (= b_and!6781 (and (=> t!5798 result!3535) b_and!6793)))

(assert (=> b!110069 t!5800))

(declare-fun b_and!6795 () Bool)

(assert (= b_and!6783 (and (=> t!5800 result!3539) b_and!6795)))

(declare-fun b_lambda!4951 () Bool)

(assert (=> (not b_lambda!4951) (not b!110070)))

(assert (=> b!110070 t!5798))

(declare-fun b_and!6797 () Bool)

(assert (= b_and!6793 (and (=> t!5798 result!3535) b_and!6797)))

(assert (=> b!110070 t!5800))

(declare-fun b_and!6799 () Bool)

(assert (= b_and!6795 (and (=> t!5800 result!3539) b_and!6799)))

(declare-fun m!124699 () Bool)

(assert (=> d!30879 m!124699))

(assert (=> d!30879 m!124513))

(declare-fun m!124701 () Bool)

(assert (=> b!110063 m!124701))

(declare-fun m!124703 () Bool)

(assert (=> b!110069 m!124703))

(assert (=> b!110069 m!124559))

(assert (=> b!110069 m!124703))

(declare-fun m!124705 () Bool)

(assert (=> b!110069 m!124705))

(declare-fun m!124707 () Bool)

(assert (=> b!110069 m!124707))

(declare-fun m!124709 () Bool)

(assert (=> b!110069 m!124709))

(declare-fun m!124711 () Bool)

(assert (=> b!110069 m!124711))

(declare-fun m!124713 () Bool)

(assert (=> b!110069 m!124713))

(assert (=> b!110069 m!124707))

(assert (=> b!110069 m!124559))

(declare-fun m!124715 () Bool)

(assert (=> b!110069 m!124715))

(declare-fun m!124717 () Bool)

(assert (=> bm!11731 m!124717))

(assert (=> b!110072 m!124711))

(assert (=> b!110072 m!124711))

(declare-fun m!124719 () Bool)

(assert (=> b!110072 m!124719))

(assert (=> b!110073 m!124717))

(assert (=> b!110070 m!124559))

(assert (=> b!110070 m!124711))

(assert (=> b!110070 m!124707))

(assert (=> b!110070 m!124559))

(assert (=> b!110070 m!124715))

(assert (=> b!110070 m!124711))

(declare-fun m!124721 () Bool)

(assert (=> b!110070 m!124721))

(assert (=> b!110070 m!124707))

(assert (=> b!110071 m!124711))

(assert (=> b!110071 m!124711))

(declare-fun m!124723 () Bool)

(assert (=> b!110071 m!124723))

(assert (=> b!110067 m!124711))

(assert (=> b!110067 m!124711))

(assert (=> b!110067 m!124723))

(declare-fun m!124725 () Bool)

(assert (=> b!110068 m!124725))

(assert (=> b!109820 d!30879))

(declare-fun d!30881 () Bool)

(declare-fun e!71618 () Bool)

(assert (=> d!30881 e!71618))

(declare-fun res!54440 () Bool)

(assert (=> d!30881 (=> (not res!54440) (not e!71618))))

(declare-fun lt!56687 () ListLongMap!1595)

(assert (=> d!30881 (= res!54440 (contains!837 lt!56687 (_1!1224 lt!56528)))))

(declare-fun lt!56690 () List!1653)

(assert (=> d!30881 (= lt!56687 (ListLongMap!1596 lt!56690))))

(declare-fun lt!56688 () Unit!3421)

(declare-fun lt!56689 () Unit!3421)

(assert (=> d!30881 (= lt!56688 lt!56689)))

(assert (=> d!30881 (= (getValueByKey!157 lt!56690 (_1!1224 lt!56528)) (Some!162 (_2!1224 lt!56528)))))

(declare-fun lemmaContainsTupThenGetReturnValue!75 (List!1653 (_ BitVec 64) V!3243) Unit!3421)

(assert (=> d!30881 (= lt!56689 (lemmaContainsTupThenGetReturnValue!75 lt!56690 (_1!1224 lt!56528) (_2!1224 lt!56528)))))

(declare-fun insertStrictlySorted!77 (List!1653 (_ BitVec 64) V!3243) List!1653)

(assert (=> d!30881 (= lt!56690 (insertStrictlySorted!77 (toList!813 lt!56522) (_1!1224 lt!56528) (_2!1224 lt!56528)))))

(assert (=> d!30881 (= (+!149 lt!56522 lt!56528) lt!56687)))

(declare-fun b!110079 () Bool)

(declare-fun res!54441 () Bool)

(assert (=> b!110079 (=> (not res!54441) (not e!71618))))

(assert (=> b!110079 (= res!54441 (= (getValueByKey!157 (toList!813 lt!56687) (_1!1224 lt!56528)) (Some!162 (_2!1224 lt!56528))))))

(declare-fun b!110080 () Bool)

(declare-fun contains!839 (List!1653 tuple2!2428) Bool)

(assert (=> b!110080 (= e!71618 (contains!839 (toList!813 lt!56687) lt!56528))))

(assert (= (and d!30881 res!54440) b!110079))

(assert (= (and b!110079 res!54441) b!110080))

(declare-fun m!124727 () Bool)

(assert (=> d!30881 m!124727))

(declare-fun m!124729 () Bool)

(assert (=> d!30881 m!124729))

(declare-fun m!124731 () Bool)

(assert (=> d!30881 m!124731))

(declare-fun m!124733 () Bool)

(assert (=> d!30881 m!124733))

(declare-fun m!124735 () Bool)

(assert (=> b!110079 m!124735))

(declare-fun m!124737 () Bool)

(assert (=> b!110080 m!124737))

(assert (=> b!109820 d!30881))

(declare-fun d!30883 () Bool)

(declare-fun e!71619 () Bool)

(assert (=> d!30883 e!71619))

(declare-fun res!54442 () Bool)

(assert (=> d!30883 (=> (not res!54442) (not e!71619))))

(declare-fun lt!56691 () ListLongMap!1595)

(assert (=> d!30883 (= res!54442 (contains!837 lt!56691 (_1!1224 lt!56517)))))

(declare-fun lt!56694 () List!1653)

(assert (=> d!30883 (= lt!56691 (ListLongMap!1596 lt!56694))))

(declare-fun lt!56692 () Unit!3421)

(declare-fun lt!56693 () Unit!3421)

(assert (=> d!30883 (= lt!56692 lt!56693)))

(assert (=> d!30883 (= (getValueByKey!157 lt!56694 (_1!1224 lt!56517)) (Some!162 (_2!1224 lt!56517)))))

(assert (=> d!30883 (= lt!56693 (lemmaContainsTupThenGetReturnValue!75 lt!56694 (_1!1224 lt!56517) (_2!1224 lt!56517)))))

(assert (=> d!30883 (= lt!56694 (insertStrictlySorted!77 (toList!813 lt!56522) (_1!1224 lt!56517) (_2!1224 lt!56517)))))

(assert (=> d!30883 (= (+!149 lt!56522 lt!56517) lt!56691)))

(declare-fun b!110081 () Bool)

(declare-fun res!54443 () Bool)

(assert (=> b!110081 (=> (not res!54443) (not e!71619))))

(assert (=> b!110081 (= res!54443 (= (getValueByKey!157 (toList!813 lt!56691) (_1!1224 lt!56517)) (Some!162 (_2!1224 lt!56517))))))

(declare-fun b!110082 () Bool)

(assert (=> b!110082 (= e!71619 (contains!839 (toList!813 lt!56691) lt!56517))))

(assert (= (and d!30883 res!54442) b!110081))

(assert (= (and b!110081 res!54443) b!110082))

(declare-fun m!124739 () Bool)

(assert (=> d!30883 m!124739))

(declare-fun m!124741 () Bool)

(assert (=> d!30883 m!124741))

(declare-fun m!124743 () Bool)

(assert (=> d!30883 m!124743))

(declare-fun m!124745 () Bool)

(assert (=> d!30883 m!124745))

(declare-fun m!124747 () Bool)

(assert (=> b!110081 m!124747))

(declare-fun m!124749 () Bool)

(assert (=> b!110082 m!124749))

(assert (=> b!109820 d!30883))

(declare-fun d!30885 () Bool)

(declare-fun e!71620 () Bool)

(assert (=> d!30885 e!71620))

(declare-fun res!54444 () Bool)

(assert (=> d!30885 (=> (not res!54444) (not e!71620))))

(declare-fun lt!56695 () ListLongMap!1595)

(assert (=> d!30885 (= res!54444 (contains!837 lt!56695 (_1!1224 lt!56528)))))

(declare-fun lt!56698 () List!1653)

(assert (=> d!30885 (= lt!56695 (ListLongMap!1596 lt!56698))))

(declare-fun lt!56696 () Unit!3421)

(declare-fun lt!56697 () Unit!3421)

(assert (=> d!30885 (= lt!56696 lt!56697)))

(assert (=> d!30885 (= (getValueByKey!157 lt!56698 (_1!1224 lt!56528)) (Some!162 (_2!1224 lt!56528)))))

(assert (=> d!30885 (= lt!56697 (lemmaContainsTupThenGetReturnValue!75 lt!56698 (_1!1224 lt!56528) (_2!1224 lt!56528)))))

(assert (=> d!30885 (= lt!56698 (insertStrictlySorted!77 (toList!813 (+!149 lt!56522 lt!56517)) (_1!1224 lt!56528) (_2!1224 lt!56528)))))

(assert (=> d!30885 (= (+!149 (+!149 lt!56522 lt!56517) lt!56528) lt!56695)))

(declare-fun b!110083 () Bool)

(declare-fun res!54445 () Bool)

(assert (=> b!110083 (=> (not res!54445) (not e!71620))))

(assert (=> b!110083 (= res!54445 (= (getValueByKey!157 (toList!813 lt!56695) (_1!1224 lt!56528)) (Some!162 (_2!1224 lt!56528))))))

(declare-fun b!110084 () Bool)

(assert (=> b!110084 (= e!71620 (contains!839 (toList!813 lt!56695) lt!56528))))

(assert (= (and d!30885 res!54444) b!110083))

(assert (= (and b!110083 res!54445) b!110084))

(declare-fun m!124751 () Bool)

(assert (=> d!30885 m!124751))

(declare-fun m!124753 () Bool)

(assert (=> d!30885 m!124753))

(declare-fun m!124755 () Bool)

(assert (=> d!30885 m!124755))

(declare-fun m!124757 () Bool)

(assert (=> d!30885 m!124757))

(declare-fun m!124759 () Bool)

(assert (=> b!110083 m!124759))

(declare-fun m!124761 () Bool)

(assert (=> b!110084 m!124761))

(assert (=> b!109820 d!30885))

(declare-fun d!30887 () Bool)

(assert (=> d!30887 (= (validMask!0 (mask!6795 (v!2929 (underlying!370 thiss!992)))) (and (or (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000001111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000011111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000001111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000011111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000001111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000011111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000001111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000011111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000001111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000011111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000001111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000011111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000111111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000001111111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000011111111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000111111111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000001111111111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000011111111111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000111111111111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00001111111111111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00011111111111111111111111111111) (= (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!109820 d!30887))

(declare-fun d!30889 () Bool)

(declare-fun e!71621 () Bool)

(assert (=> d!30889 e!71621))

(declare-fun res!54446 () Bool)

(assert (=> d!30889 (=> (not res!54446) (not e!71621))))

(declare-fun lt!56699 () ListLongMap!1595)

(assert (=> d!30889 (= res!54446 (contains!837 lt!56699 (_1!1224 lt!56517)))))

(declare-fun lt!56702 () List!1653)

(assert (=> d!30889 (= lt!56699 (ListLongMap!1596 lt!56702))))

(declare-fun lt!56700 () Unit!3421)

(declare-fun lt!56701 () Unit!3421)

(assert (=> d!30889 (= lt!56700 lt!56701)))

(assert (=> d!30889 (= (getValueByKey!157 lt!56702 (_1!1224 lt!56517)) (Some!162 (_2!1224 lt!56517)))))

(assert (=> d!30889 (= lt!56701 (lemmaContainsTupThenGetReturnValue!75 lt!56702 (_1!1224 lt!56517) (_2!1224 lt!56517)))))

(assert (=> d!30889 (= lt!56702 (insertStrictlySorted!77 (toList!813 (+!149 lt!56522 lt!56528)) (_1!1224 lt!56517) (_2!1224 lt!56517)))))

(assert (=> d!30889 (= (+!149 (+!149 lt!56522 lt!56528) lt!56517) lt!56699)))

(declare-fun b!110085 () Bool)

(declare-fun res!54447 () Bool)

(assert (=> b!110085 (=> (not res!54447) (not e!71621))))

(assert (=> b!110085 (= res!54447 (= (getValueByKey!157 (toList!813 lt!56699) (_1!1224 lt!56517)) (Some!162 (_2!1224 lt!56517))))))

(declare-fun b!110086 () Bool)

(assert (=> b!110086 (= e!71621 (contains!839 (toList!813 lt!56699) lt!56517))))

(assert (= (and d!30889 res!54446) b!110085))

(assert (= (and b!110085 res!54447) b!110086))

(declare-fun m!124763 () Bool)

(assert (=> d!30889 m!124763))

(declare-fun m!124765 () Bool)

(assert (=> d!30889 m!124765))

(declare-fun m!124767 () Bool)

(assert (=> d!30889 m!124767))

(declare-fun m!124769 () Bool)

(assert (=> d!30889 m!124769))

(declare-fun m!124771 () Bool)

(assert (=> b!110085 m!124771))

(declare-fun m!124773 () Bool)

(assert (=> b!110086 m!124773))

(assert (=> b!109820 d!30889))

(declare-fun d!30891 () Bool)

(assert (=> d!30891 (= (+!149 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (+!149 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(declare-fun lt!56705 () Unit!3421)

(declare-fun choose!690 (ListLongMap!1595 (_ BitVec 64) V!3243 (_ BitVec 64) V!3243) Unit!3421)

(assert (=> d!30891 (= lt!56705 (choose!690 lt!56522 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))

(assert (=> d!30891 (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30891 (= (addCommutativeForDiffKeys!61 lt!56522 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) lt!56705)))

(declare-fun bs!4524 () Bool)

(assert (= bs!4524 d!30891))

(declare-fun m!124775 () Bool)

(assert (=> bs!4524 m!124775))

(declare-fun m!124777 () Bool)

(assert (=> bs!4524 m!124777))

(assert (=> bs!4524 m!124775))

(assert (=> bs!4524 m!124515))

(declare-fun m!124779 () Bool)

(assert (=> bs!4524 m!124779))

(declare-fun m!124781 () Bool)

(assert (=> bs!4524 m!124781))

(assert (=> bs!4524 m!124781))

(declare-fun m!124783 () Bool)

(assert (=> bs!4524 m!124783))

(assert (=> b!109820 d!30891))

(declare-fun d!30893 () Bool)

(assert (=> d!30893 (= (map!1294 newMap!16) (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun bs!4525 () Bool)

(assert (= bs!4525 d!30893))

(assert (=> bs!4525 m!124677))

(assert (=> b!109811 d!30893))

(declare-fun bm!11746 () Bool)

(declare-fun call!11750 () ListLongMap!1595)

(assert (=> bm!11746 (= call!11750 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!110129 () Bool)

(declare-fun e!71651 () Bool)

(declare-fun lt!56753 () ListLongMap!1595)

(assert (=> b!110129 (= e!71651 (= (apply!100 lt!56753 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!110130 () Bool)

(declare-fun e!71654 () Unit!3421)

(declare-fun Unit!3431 () Unit!3421)

(assert (=> b!110130 (= e!71654 Unit!3431)))

(declare-fun b!110131 () Bool)

(declare-fun e!71660 () Bool)

(assert (=> b!110131 (= e!71660 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110132 () Bool)

(declare-fun e!71659 () ListLongMap!1595)

(declare-fun call!11753 () ListLongMap!1595)

(assert (=> b!110132 (= e!71659 (+!149 call!11753 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun bm!11748 () Bool)

(declare-fun call!11754 () Bool)

(assert (=> bm!11748 (= call!11754 (contains!837 lt!56753 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110133 () Bool)

(declare-fun e!71655 () Bool)

(assert (=> b!110133 (= e!71655 (= (apply!100 lt!56753 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!110134 () Bool)

(declare-fun e!71649 () Bool)

(assert (=> b!110134 (= e!71649 e!71655)))

(declare-fun res!54468 () Bool)

(declare-fun call!11755 () Bool)

(assert (=> b!110134 (= res!54468 call!11755)))

(assert (=> b!110134 (=> (not res!54468) (not e!71655))))

(declare-fun b!110135 () Bool)

(declare-fun e!71652 () Bool)

(declare-fun e!71658 () Bool)

(assert (=> b!110135 (= e!71652 e!71658)))

(declare-fun res!54473 () Bool)

(assert (=> b!110135 (=> (not res!54473) (not e!71658))))

(assert (=> b!110135 (= res!54473 (contains!837 lt!56753 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110135 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110136 () Bool)

(declare-fun e!71653 () Bool)

(assert (=> b!110136 (= e!71653 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110137 () Bool)

(declare-fun res!54469 () Bool)

(declare-fun e!71650 () Bool)

(assert (=> b!110137 (=> (not res!54469) (not e!71650))))

(assert (=> b!110137 (= res!54469 e!71649)))

(declare-fun c!19511 () Bool)

(assert (=> b!110137 (= c!19511 (not (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110138 () Bool)

(assert (=> b!110138 (= e!71649 (not call!11755))))

(declare-fun b!110139 () Bool)

(declare-fun e!71648 () ListLongMap!1595)

(declare-fun call!11752 () ListLongMap!1595)

(assert (=> b!110139 (= e!71648 call!11752)))

(declare-fun bm!11749 () Bool)

(declare-fun call!11751 () ListLongMap!1595)

(assert (=> bm!11749 (= call!11752 call!11751)))

(declare-fun bm!11750 () Bool)

(declare-fun call!11749 () ListLongMap!1595)

(assert (=> bm!11750 (= call!11749 call!11753)))

(declare-fun b!110140 () Bool)

(assert (=> b!110140 (= e!71648 call!11749)))

(declare-fun b!110141 () Bool)

(declare-fun c!19513 () Bool)

(assert (=> b!110141 (= c!19513 (and (not (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71656 () ListLongMap!1595)

(assert (=> b!110141 (= e!71656 e!71648)))

(declare-fun c!19512 () Bool)

(declare-fun c!19516 () Bool)

(declare-fun bm!11747 () Bool)

(assert (=> bm!11747 (= call!11753 (+!149 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752)) (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!30895 () Bool)

(assert (=> d!30895 e!71650))

(declare-fun res!54467 () Bool)

(assert (=> d!30895 (=> (not res!54467) (not e!71650))))

(assert (=> d!30895 (= res!54467 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun lt!56765 () ListLongMap!1595)

(assert (=> d!30895 (= lt!56753 lt!56765)))

(declare-fun lt!56766 () Unit!3421)

(assert (=> d!30895 (= lt!56766 e!71654)))

(declare-fun c!19515 () Bool)

(assert (=> d!30895 (= c!19515 e!71653)))

(declare-fun res!54466 () Bool)

(assert (=> d!30895 (=> (not res!54466) (not e!71653))))

(assert (=> d!30895 (= res!54466 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> d!30895 (= lt!56765 e!71659)))

(assert (=> d!30895 (= c!19512 (and (not (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30895 (validMask!0 (mask!6795 (v!2929 (underlying!370 thiss!992))))))

(assert (=> d!30895 (= (getCurrentListMap!489 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))) lt!56753)))

(declare-fun b!110142 () Bool)

(assert (=> b!110142 (= e!71659 e!71656)))

(assert (=> b!110142 (= c!19516 (and (not (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110143 () Bool)

(declare-fun e!71657 () Bool)

(assert (=> b!110143 (= e!71650 e!71657)))

(declare-fun c!19514 () Bool)

(assert (=> b!110143 (= c!19514 (not (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110144 () Bool)

(assert (=> b!110144 (= e!71657 e!71651)))

(declare-fun res!54470 () Bool)

(assert (=> b!110144 (= res!54470 call!11754)))

(assert (=> b!110144 (=> (not res!54470) (not e!71651))))

(declare-fun bm!11751 () Bool)

(assert (=> bm!11751 (= call!11755 (contains!837 lt!56753 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110145 () Bool)

(declare-fun lt!56769 () Unit!3421)

(assert (=> b!110145 (= e!71654 lt!56769)))

(declare-fun lt!56758 () ListLongMap!1595)

(assert (=> b!110145 (= lt!56758 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun lt!56762 () (_ BitVec 64))

(assert (=> b!110145 (= lt!56762 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56768 () (_ BitVec 64))

(assert (=> b!110145 (= lt!56768 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56767 () Unit!3421)

(declare-fun addStillContains!76 (ListLongMap!1595 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3421)

(assert (=> b!110145 (= lt!56767 (addStillContains!76 lt!56758 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56768))))

(assert (=> b!110145 (contains!837 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56768)))

(declare-fun lt!56764 () Unit!3421)

(assert (=> b!110145 (= lt!56764 lt!56767)))

(declare-fun lt!56752 () ListLongMap!1595)

(assert (=> b!110145 (= lt!56752 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun lt!56754 () (_ BitVec 64))

(assert (=> b!110145 (= lt!56754 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56755 () (_ BitVec 64))

(assert (=> b!110145 (= lt!56755 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56750 () Unit!3421)

(declare-fun addApplyDifferent!76 (ListLongMap!1595 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3421)

(assert (=> b!110145 (= lt!56750 (addApplyDifferent!76 lt!56752 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56755))))

(assert (=> b!110145 (= (apply!100 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56755) (apply!100 lt!56752 lt!56755))))

(declare-fun lt!56751 () Unit!3421)

(assert (=> b!110145 (= lt!56751 lt!56750)))

(declare-fun lt!56759 () ListLongMap!1595)

(assert (=> b!110145 (= lt!56759 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun lt!56757 () (_ BitVec 64))

(assert (=> b!110145 (= lt!56757 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56761 () (_ BitVec 64))

(assert (=> b!110145 (= lt!56761 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56760 () Unit!3421)

(assert (=> b!110145 (= lt!56760 (addApplyDifferent!76 lt!56759 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56761))))

(assert (=> b!110145 (= (apply!100 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56761) (apply!100 lt!56759 lt!56761))))

(declare-fun lt!56763 () Unit!3421)

(assert (=> b!110145 (= lt!56763 lt!56760)))

(declare-fun lt!56770 () ListLongMap!1595)

(assert (=> b!110145 (= lt!56770 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun lt!56771 () (_ BitVec 64))

(assert (=> b!110145 (= lt!56771 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56756 () (_ BitVec 64))

(assert (=> b!110145 (= lt!56756 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!110145 (= lt!56769 (addApplyDifferent!76 lt!56770 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56756))))

(assert (=> b!110145 (= (apply!100 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56756) (apply!100 lt!56770 lt!56756))))

(declare-fun b!110146 () Bool)

(declare-fun res!54472 () Bool)

(assert (=> b!110146 (=> (not res!54472) (not e!71650))))

(assert (=> b!110146 (= res!54472 e!71652)))

(declare-fun res!54474 () Bool)

(assert (=> b!110146 (=> res!54474 e!71652)))

(assert (=> b!110146 (= res!54474 (not e!71660))))

(declare-fun res!54471 () Bool)

(assert (=> b!110146 (=> (not res!54471) (not e!71660))))

(assert (=> b!110146 (= res!54471 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110147 () Bool)

(assert (=> b!110147 (= e!71656 call!11749)))

(declare-fun bm!11752 () Bool)

(assert (=> bm!11752 (= call!11751 call!11750)))

(declare-fun b!110148 () Bool)

(assert (=> b!110148 (= e!71657 (not call!11754))))

(declare-fun b!110149 () Bool)

(assert (=> b!110149 (= e!71658 (= (apply!100 lt!56753 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110149 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_values!2610 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> b!110149 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!30895 c!19512) b!110132))

(assert (= (and d!30895 (not c!19512)) b!110142))

(assert (= (and b!110142 c!19516) b!110147))

(assert (= (and b!110142 (not c!19516)) b!110141))

(assert (= (and b!110141 c!19513) b!110140))

(assert (= (and b!110141 (not c!19513)) b!110139))

(assert (= (or b!110140 b!110139) bm!11749))

(assert (= (or b!110147 bm!11749) bm!11752))

(assert (= (or b!110147 b!110140) bm!11750))

(assert (= (or b!110132 bm!11752) bm!11746))

(assert (= (or b!110132 bm!11750) bm!11747))

(assert (= (and d!30895 res!54466) b!110136))

(assert (= (and d!30895 c!19515) b!110145))

(assert (= (and d!30895 (not c!19515)) b!110130))

(assert (= (and d!30895 res!54467) b!110146))

(assert (= (and b!110146 res!54471) b!110131))

(assert (= (and b!110146 (not res!54474)) b!110135))

(assert (= (and b!110135 res!54473) b!110149))

(assert (= (and b!110146 res!54472) b!110137))

(assert (= (and b!110137 c!19511) b!110134))

(assert (= (and b!110137 (not c!19511)) b!110138))

(assert (= (and b!110134 res!54468) b!110133))

(assert (= (or b!110134 b!110138) bm!11751))

(assert (= (and b!110137 res!54469) b!110143))

(assert (= (and b!110143 c!19514) b!110144))

(assert (= (and b!110143 (not c!19514)) b!110148))

(assert (= (and b!110144 res!54470) b!110129))

(assert (= (or b!110144 b!110148) bm!11748))

(declare-fun b_lambda!4953 () Bool)

(assert (=> (not b_lambda!4953) (not b!110149)))

(assert (=> b!110149 t!5798))

(declare-fun b_and!6801 () Bool)

(assert (= b_and!6797 (and (=> t!5798 result!3535) b_and!6801)))

(assert (=> b!110149 t!5800))

(declare-fun b_and!6803 () Bool)

(assert (= b_and!6799 (and (=> t!5800 result!3539) b_and!6803)))

(declare-fun m!124785 () Bool)

(assert (=> b!110133 m!124785))

(declare-fun m!124787 () Bool)

(assert (=> b!110132 m!124787))

(assert (=> b!110135 m!124711))

(assert (=> b!110135 m!124711))

(declare-fun m!124789 () Bool)

(assert (=> b!110135 m!124789))

(declare-fun m!124791 () Bool)

(assert (=> bm!11747 m!124791))

(assert (=> d!30895 m!124513))

(declare-fun m!124793 () Bool)

(assert (=> b!110145 m!124793))

(declare-fun m!124795 () Bool)

(assert (=> b!110145 m!124795))

(declare-fun m!124797 () Bool)

(assert (=> b!110145 m!124797))

(assert (=> b!110145 m!124711))

(assert (=> b!110145 m!124525))

(declare-fun m!124799 () Bool)

(assert (=> b!110145 m!124799))

(declare-fun m!124801 () Bool)

(assert (=> b!110145 m!124801))

(assert (=> b!110145 m!124801))

(declare-fun m!124803 () Bool)

(assert (=> b!110145 m!124803))

(declare-fun m!124805 () Bool)

(assert (=> b!110145 m!124805))

(declare-fun m!124807 () Bool)

(assert (=> b!110145 m!124807))

(declare-fun m!124809 () Bool)

(assert (=> b!110145 m!124809))

(declare-fun m!124811 () Bool)

(assert (=> b!110145 m!124811))

(declare-fun m!124813 () Bool)

(assert (=> b!110145 m!124813))

(assert (=> b!110145 m!124811))

(declare-fun m!124815 () Bool)

(assert (=> b!110145 m!124815))

(declare-fun m!124817 () Bool)

(assert (=> b!110145 m!124817))

(assert (=> b!110145 m!124795))

(declare-fun m!124819 () Bool)

(assert (=> b!110145 m!124819))

(assert (=> b!110145 m!124799))

(declare-fun m!124821 () Bool)

(assert (=> b!110145 m!124821))

(assert (=> b!110131 m!124711))

(assert (=> b!110131 m!124711))

(assert (=> b!110131 m!124723))

(assert (=> bm!11746 m!124525))

(declare-fun m!124823 () Bool)

(assert (=> bm!11751 m!124823))

(assert (=> b!110136 m!124711))

(assert (=> b!110136 m!124711))

(assert (=> b!110136 m!124723))

(declare-fun m!124825 () Bool)

(assert (=> bm!11748 m!124825))

(assert (=> b!110149 m!124711))

(declare-fun m!124827 () Bool)

(assert (=> b!110149 m!124827))

(assert (=> b!110149 m!124559))

(assert (=> b!110149 m!124707))

(assert (=> b!110149 m!124559))

(assert (=> b!110149 m!124715))

(assert (=> b!110149 m!124711))

(assert (=> b!110149 m!124707))

(declare-fun m!124829 () Bool)

(assert (=> b!110129 m!124829))

(assert (=> b!109811 d!30895))

(declare-fun d!30897 () Bool)

(assert (=> d!30897 (= (array_inv!1251 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvsge (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!109812 d!30897))

(declare-fun d!30899 () Bool)

(assert (=> d!30899 (= (array_inv!1252 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvsge (size!2338 (_values!2610 (v!2929 (underlying!370 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!109812 d!30899))

(declare-fun d!30901 () Bool)

(assert (=> d!30901 (= (valid!418 thiss!992) (valid!419 (v!2929 (underlying!370 thiss!992))))))

(declare-fun bs!4526 () Bool)

(assert (= bs!4526 d!30901))

(declare-fun m!124831 () Bool)

(assert (=> bs!4526 m!124831))

(assert (=> start!12694 d!30901))

(declare-fun d!30903 () Bool)

(assert (=> d!30903 (not (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56774 () Unit!3421)

(declare-fun choose!68 (array!4388 (_ BitVec 32) (_ BitVec 64) List!1652) Unit!3421)

(assert (=> d!30903 (= lt!56774 (choose!68 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649)))))

(assert (=> d!30903 (bvslt (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!30903 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649)) lt!56774)))

(declare-fun bs!4527 () Bool)

(assert (= bs!4527 d!30903))

(assert (=> bs!4527 m!124515))

(assert (=> bs!4527 m!124543))

(assert (=> bs!4527 m!124515))

(declare-fun m!124833 () Bool)

(assert (=> bs!4527 m!124833))

(assert (=> b!109808 d!30903))

(declare-fun d!30905 () Bool)

(assert (=> d!30905 (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) from!355 Nil!1649)))

(declare-fun lt!56777 () Unit!3421)

(declare-fun choose!39 (array!4388 (_ BitVec 32) (_ BitVec 32)) Unit!3421)

(assert (=> d!30905 (= lt!56777 (choose!39 (_keys!4341 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!30905 (bvslt (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!30905 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355) lt!56777)))

(declare-fun bs!4528 () Bool)

(assert (= bs!4528 d!30905))

(assert (=> bs!4528 m!124539))

(declare-fun m!124835 () Bool)

(assert (=> bs!4528 m!124835))

(assert (=> b!109808 d!30905))

(declare-fun d!30907 () Bool)

(declare-fun res!54479 () Bool)

(declare-fun e!71665 () Bool)

(assert (=> d!30907 (=> res!54479 e!71665)))

(assert (=> d!30907 (= res!54479 (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30907 (= (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!71665)))

(declare-fun b!110154 () Bool)

(declare-fun e!71666 () Bool)

(assert (=> b!110154 (= e!71665 e!71666)))

(declare-fun res!54480 () Bool)

(assert (=> b!110154 (=> (not res!54480) (not e!71666))))

(assert (=> b!110154 (= res!54480 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110155 () Bool)

(assert (=> b!110155 (= e!71666 (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!30907 (not res!54479)) b!110154))

(assert (= (and b!110154 res!54480) b!110155))

(assert (=> d!30907 m!124711))

(assert (=> b!110155 m!124515))

(declare-fun m!124837 () Bool)

(assert (=> b!110155 m!124837))

(assert (=> b!109808 d!30907))

(declare-fun d!30909 () Bool)

(declare-fun e!71669 () Bool)

(assert (=> d!30909 e!71669))

(declare-fun c!19519 () Bool)

(assert (=> d!30909 (= c!19519 (and (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!56780 () Unit!3421)

(declare-fun choose!691 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) (_ BitVec 32) Int) Unit!3421)

(assert (=> d!30909 (= lt!56780 (choose!691 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(assert (=> d!30909 (validMask!0 (mask!6795 (v!2929 (underlying!370 thiss!992))))))

(assert (=> d!30909 (= (lemmaListMapContainsThenArrayContainsFrom!117 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))) lt!56780)))

(declare-fun b!110160 () Bool)

(assert (=> b!110160 (= e!71669 (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!110161 () Bool)

(assert (=> b!110161 (= e!71669 (ite (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!30909 c!19519) b!110160))

(assert (= (and d!30909 (not c!19519)) b!110161))

(assert (=> d!30909 m!124515))

(declare-fun m!124839 () Bool)

(assert (=> d!30909 m!124839))

(assert (=> d!30909 m!124513))

(assert (=> b!110160 m!124515))

(assert (=> b!110160 m!124543))

(assert (=> b!109808 d!30909))

(declare-fun b!110172 () Bool)

(declare-fun e!71679 () Bool)

(declare-fun e!71680 () Bool)

(assert (=> b!110172 (= e!71679 e!71680)))

(declare-fun res!54487 () Bool)

(assert (=> b!110172 (=> (not res!54487) (not e!71680))))

(declare-fun e!71678 () Bool)

(assert (=> b!110172 (= res!54487 (not e!71678))))

(declare-fun res!54488 () Bool)

(assert (=> b!110172 (=> (not res!54488) (not e!71678))))

(assert (=> b!110172 (= res!54488 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!30911 () Bool)

(declare-fun res!54489 () Bool)

(assert (=> d!30911 (=> res!54489 e!71679)))

(assert (=> d!30911 (= res!54489 (bvsge from!355 (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> d!30911 (= (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) from!355 Nil!1649) e!71679)))

(declare-fun b!110173 () Bool)

(declare-fun contains!840 (List!1652 (_ BitVec 64)) Bool)

(assert (=> b!110173 (= e!71678 (contains!840 Nil!1649 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110174 () Bool)

(declare-fun e!71681 () Bool)

(assert (=> b!110174 (= e!71680 e!71681)))

(declare-fun c!19522 () Bool)

(assert (=> b!110174 (= c!19522 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun bm!11755 () Bool)

(declare-fun call!11758 () Bool)

(assert (=> bm!11755 (= call!11758 (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)))))

(declare-fun b!110175 () Bool)

(assert (=> b!110175 (= e!71681 call!11758)))

(declare-fun b!110176 () Bool)

(assert (=> b!110176 (= e!71681 call!11758)))

(assert (= (and d!30911 (not res!54489)) b!110172))

(assert (= (and b!110172 res!54488) b!110173))

(assert (= (and b!110172 res!54487) b!110174))

(assert (= (and b!110174 c!19522) b!110176))

(assert (= (and b!110174 (not c!19522)) b!110175))

(assert (= (or b!110176 b!110175) bm!11755))

(assert (=> b!110172 m!124515))

(assert (=> b!110172 m!124515))

(declare-fun m!124841 () Bool)

(assert (=> b!110172 m!124841))

(assert (=> b!110173 m!124515))

(assert (=> b!110173 m!124515))

(declare-fun m!124843 () Bool)

(assert (=> b!110173 m!124843))

(assert (=> b!110174 m!124515))

(assert (=> b!110174 m!124515))

(assert (=> b!110174 m!124841))

(assert (=> bm!11755 m!124515))

(declare-fun m!124845 () Bool)

(assert (=> bm!11755 m!124845))

(assert (=> b!109808 d!30911))

(declare-fun b!110183 () Bool)

(declare-fun e!71687 () Bool)

(assert (=> b!110183 (= e!71687 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4009 () Bool)

(declare-fun mapRes!4009 () Bool)

(declare-fun tp!10039 () Bool)

(assert (=> mapNonEmpty!4009 (= mapRes!4009 (and tp!10039 e!71687))))

(declare-fun mapKey!4009 () (_ BitVec 32))

(declare-fun mapValue!4009 () ValueCell!1005)

(declare-fun mapRest!4009 () (Array (_ BitVec 32) ValueCell!1005))

(assert (=> mapNonEmpty!4009 (= mapRest!3999 (store mapRest!4009 mapKey!4009 mapValue!4009))))

(declare-fun mapIsEmpty!4009 () Bool)

(assert (=> mapIsEmpty!4009 mapRes!4009))

(declare-fun b!110184 () Bool)

(declare-fun e!71686 () Bool)

(assert (=> b!110184 (= e!71686 tp_is_empty!2697)))

(declare-fun condMapEmpty!4009 () Bool)

(declare-fun mapDefault!4009 () ValueCell!1005)

(assert (=> mapNonEmpty!4000 (= condMapEmpty!4009 (= mapRest!3999 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4009)))))

(assert (=> mapNonEmpty!4000 (= tp!10021 (and e!71686 mapRes!4009))))

(assert (= (and mapNonEmpty!4000 condMapEmpty!4009) mapIsEmpty!4009))

(assert (= (and mapNonEmpty!4000 (not condMapEmpty!4009)) mapNonEmpty!4009))

(assert (= (and mapNonEmpty!4009 ((_ is ValueCellFull!1005) mapValue!4009)) b!110183))

(assert (= (and mapNonEmpty!4000 ((_ is ValueCellFull!1005) mapDefault!4009)) b!110184))

(declare-fun m!124847 () Bool)

(assert (=> mapNonEmpty!4009 m!124847))

(declare-fun b!110185 () Bool)

(declare-fun e!71689 () Bool)

(assert (=> b!110185 (= e!71689 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4010 () Bool)

(declare-fun mapRes!4010 () Bool)

(declare-fun tp!10040 () Bool)

(assert (=> mapNonEmpty!4010 (= mapRes!4010 (and tp!10040 e!71689))))

(declare-fun mapValue!4010 () ValueCell!1005)

(declare-fun mapKey!4010 () (_ BitVec 32))

(declare-fun mapRest!4010 () (Array (_ BitVec 32) ValueCell!1005))

(assert (=> mapNonEmpty!4010 (= mapRest!4000 (store mapRest!4010 mapKey!4010 mapValue!4010))))

(declare-fun mapIsEmpty!4010 () Bool)

(assert (=> mapIsEmpty!4010 mapRes!4010))

(declare-fun b!110186 () Bool)

(declare-fun e!71688 () Bool)

(assert (=> b!110186 (= e!71688 tp_is_empty!2697)))

(declare-fun condMapEmpty!4010 () Bool)

(declare-fun mapDefault!4010 () ValueCell!1005)

(assert (=> mapNonEmpty!3999 (= condMapEmpty!4010 (= mapRest!4000 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4010)))))

(assert (=> mapNonEmpty!3999 (= tp!10023 (and e!71688 mapRes!4010))))

(assert (= (and mapNonEmpty!3999 condMapEmpty!4010) mapIsEmpty!4010))

(assert (= (and mapNonEmpty!3999 (not condMapEmpty!4010)) mapNonEmpty!4010))

(assert (= (and mapNonEmpty!4010 ((_ is ValueCellFull!1005) mapValue!4010)) b!110185))

(assert (= (and mapNonEmpty!3999 ((_ is ValueCellFull!1005) mapDefault!4010)) b!110186))

(declare-fun m!124849 () Bool)

(assert (=> mapNonEmpty!4010 m!124849))

(declare-fun b_lambda!4955 () Bool)

(assert (= b_lambda!4951 (or (and b!109812 b_free!2561) (and b!109809 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))))) b_lambda!4955)))

(declare-fun b_lambda!4957 () Bool)

(assert (= b_lambda!4949 (or (and b!109812 b_free!2561) (and b!109809 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))))) b_lambda!4957)))

(declare-fun b_lambda!4959 () Bool)

(assert (= b_lambda!4953 (or (and b!109812 b_free!2561) (and b!109809 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))))) b_lambda!4959)))

(check-sat (not bm!11746) (not b!110063) (not d!30903) (not b!110086) (not b!110073) (not b_lambda!4959) (not bm!11747) (not bm!11723) (not b!110003) (not b!110132) tp_is_empty!2697 (not bm!11748) (not bm!11708) (not b!110068) (not bm!11725) (not b!110020) (not bm!11731) (not b!110136) (not b!110145) (not b!110149) (not b!109998) (not b!110172) (not d!30901) (not d!30883) (not bm!11720) (not b!110030) (not b!110080) (not b_next!2563) (not b!110072) (not b!110133) (not bm!11755) (not bm!11711) (not bm!11707) (not b!110084) (not d!30881) (not bm!11751) (not mapNonEmpty!4009) (not bm!11724) (not d!30895) (not d!30879) (not d!30873) (not b!110085) (not d!30905) (not b_lambda!4947) (not bm!11719) (not d!30893) (not b!110071) (not b!109985) (not b!110155) b_and!6801 (not b_lambda!4955) (not b!110129) (not b!110131) (not b!110069) b_and!6803 (not b!110067) (not d!30909) (not b!110037) (not d!30875) (not b!110009) (not b!109983) (not d!30889) (not b!110038) (not b!110079) (not b!110173) (not b_next!2561) (not mapNonEmpty!4010) (not bm!11727) (not b!110032) (not d!30885) (not b!110174) (not b!109895) (not b!110022) (not b!110082) (not b!109897) (not b!110135) (not b_lambda!4957) (not b!110031) (not b!110160) (not bm!11726) (not bm!11716) (not b!110083) (not b!110070) (not b!110081) (not bm!11706) (not b!110007) (not d!30871) (not d!30891))
(check-sat b_and!6801 b_and!6803 (not b_next!2561) (not b_next!2563))
(get-model)

(assert (=> b!110160 d!30907))

(declare-fun b!110199 () Bool)

(declare-fun e!71697 () SeekEntryResult!271)

(declare-fun e!71696 () SeekEntryResult!271)

(assert (=> b!110199 (= e!71697 e!71696)))

(declare-fun lt!56788 () (_ BitVec 64))

(declare-fun lt!56787 () SeekEntryResult!271)

(assert (=> b!110199 (= lt!56788 (select (arr!2080 (_keys!4341 newMap!16)) (index!3236 lt!56787)))))

(declare-fun c!19530 () Bool)

(assert (=> b!110199 (= c!19530 (= lt!56788 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!56789 () SeekEntryResult!271)

(declare-fun d!30913 () Bool)

(assert (=> d!30913 (and (or ((_ is Undefined!271) lt!56789) (not ((_ is Found!271) lt!56789)) (and (bvsge (index!3235 lt!56789) #b00000000000000000000000000000000) (bvslt (index!3235 lt!56789) (size!2337 (_keys!4341 newMap!16))))) (or ((_ is Undefined!271) lt!56789) ((_ is Found!271) lt!56789) (not ((_ is MissingZero!271) lt!56789)) (and (bvsge (index!3234 lt!56789) #b00000000000000000000000000000000) (bvslt (index!3234 lt!56789) (size!2337 (_keys!4341 newMap!16))))) (or ((_ is Undefined!271) lt!56789) ((_ is Found!271) lt!56789) ((_ is MissingZero!271) lt!56789) (not ((_ is MissingVacant!271) lt!56789)) (and (bvsge (index!3237 lt!56789) #b00000000000000000000000000000000) (bvslt (index!3237 lt!56789) (size!2337 (_keys!4341 newMap!16))))) (or ((_ is Undefined!271) lt!56789) (ite ((_ is Found!271) lt!56789) (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56789)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (ite ((_ is MissingZero!271) lt!56789) (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3234 lt!56789)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!271) lt!56789) (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3237 lt!56789)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30913 (= lt!56789 e!71697)))

(declare-fun c!19531 () Bool)

(assert (=> d!30913 (= c!19531 (and ((_ is Intermediate!271) lt!56787) (undefined!1083 lt!56787)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4388 (_ BitVec 32)) SeekEntryResult!271)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!30913 (= lt!56787 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (=> d!30913 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30913 (= (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)) lt!56789)))

(declare-fun b!110200 () Bool)

(declare-fun e!71698 () SeekEntryResult!271)

(assert (=> b!110200 (= e!71698 (MissingZero!271 (index!3236 lt!56787)))))

(declare-fun b!110201 () Bool)

(declare-fun c!19529 () Bool)

(assert (=> b!110201 (= c!19529 (= lt!56788 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110201 (= e!71696 e!71698)))

(declare-fun b!110202 () Bool)

(assert (=> b!110202 (= e!71697 Undefined!271)))

(declare-fun b!110203 () Bool)

(assert (=> b!110203 (= e!71696 (Found!271 (index!3236 lt!56787)))))

(declare-fun b!110204 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4388 (_ BitVec 32)) SeekEntryResult!271)

(assert (=> b!110204 (= e!71698 (seekKeyOrZeroReturnVacant!0 (x!13959 lt!56787) (index!3236 lt!56787) (index!3236 lt!56787) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (= (and d!30913 c!19531) b!110202))

(assert (= (and d!30913 (not c!19531)) b!110199))

(assert (= (and b!110199 c!19530) b!110203))

(assert (= (and b!110199 (not c!19530)) b!110201))

(assert (= (and b!110201 c!19529) b!110200))

(assert (= (and b!110201 (not c!19529)) b!110204))

(declare-fun m!124851 () Bool)

(assert (=> b!110199 m!124851))

(declare-fun m!124853 () Bool)

(assert (=> d!30913 m!124853))

(assert (=> d!30913 m!124515))

(declare-fun m!124855 () Bool)

(assert (=> d!30913 m!124855))

(declare-fun m!124857 () Bool)

(assert (=> d!30913 m!124857))

(declare-fun m!124859 () Bool)

(assert (=> d!30913 m!124859))

(assert (=> d!30913 m!124515))

(assert (=> d!30913 m!124853))

(declare-fun m!124861 () Bool)

(assert (=> d!30913 m!124861))

(declare-fun m!124863 () Bool)

(assert (=> d!30913 m!124863))

(assert (=> b!110204 m!124515))

(declare-fun m!124865 () Bool)

(assert (=> b!110204 m!124865))

(assert (=> b!109998 d!30913))

(declare-fun d!30915 () Bool)

(assert (=> d!30915 (= (get!1357 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) from!355) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2928 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110037 d!30915))

(declare-fun d!30917 () Bool)

(declare-fun get!1359 (Option!163) V!3243)

(assert (=> d!30917 (= (apply!100 lt!56753 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1359 (getValueByKey!157 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4529 () Bool)

(assert (= bs!4529 d!30917))

(assert (=> bs!4529 m!124711))

(declare-fun m!124867 () Bool)

(assert (=> bs!4529 m!124867))

(assert (=> bs!4529 m!124867))

(declare-fun m!124869 () Bool)

(assert (=> bs!4529 m!124869))

(assert (=> b!110149 d!30917))

(declare-fun d!30919 () Bool)

(declare-fun c!19532 () Bool)

(assert (=> d!30919 (= c!19532 ((_ is ValueCellFull!1005) (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!71699 () V!3243)

(assert (=> d!30919 (= (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71699)))

(declare-fun b!110205 () Bool)

(assert (=> b!110205 (= e!71699 (get!1357 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110206 () Bool)

(assert (=> b!110206 (= e!71699 (get!1358 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30919 c!19532) b!110205))

(assert (= (and d!30919 (not c!19532)) b!110206))

(assert (=> b!110205 m!124707))

(assert (=> b!110205 m!124559))

(declare-fun m!124871 () Bool)

(assert (=> b!110205 m!124871))

(assert (=> b!110206 m!124707))

(assert (=> b!110206 m!124559))

(declare-fun m!124873 () Bool)

(assert (=> b!110206 m!124873))

(assert (=> b!110149 d!30919))

(declare-fun d!30921 () Bool)

(assert (=> d!30921 (= (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110131 d!30921))

(declare-fun d!30923 () Bool)

(declare-fun e!71702 () Bool)

(assert (=> d!30923 e!71702))

(declare-fun c!19535 () Bool)

(assert (=> d!30923 (= c!19535 (and (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!30923 true))

(declare-fun _$29!147 () Unit!3421)

(assert (=> d!30923 (= (choose!691 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))) _$29!147)))

(declare-fun b!110211 () Bool)

(assert (=> b!110211 (= e!71702 (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!110212 () Bool)

(assert (=> b!110212 (= e!71702 (ite (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!30923 c!19535) b!110211))

(assert (= (and d!30923 (not c!19535)) b!110212))

(assert (=> b!110211 m!124515))

(assert (=> b!110211 m!124543))

(assert (=> d!30909 d!30923))

(assert (=> d!30909 d!30887))

(declare-fun b!110213 () Bool)

(declare-fun e!71704 () Bool)

(declare-fun e!71705 () Bool)

(assert (=> b!110213 (= e!71704 e!71705)))

(declare-fun res!54490 () Bool)

(assert (=> b!110213 (=> (not res!54490) (not e!71705))))

(declare-fun e!71703 () Bool)

(assert (=> b!110213 (= res!54490 (not e!71703))))

(declare-fun res!54491 () Bool)

(assert (=> b!110213 (=> (not res!54491) (not e!71703))))

(assert (=> b!110213 (= res!54491 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!30925 () Bool)

(declare-fun res!54492 () Bool)

(assert (=> d!30925 (=> res!54492 e!71704)))

(assert (=> d!30925 (= res!54492 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!30925 (= (arrayNoDuplicates!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 Nil!1649) e!71704)))

(declare-fun b!110214 () Bool)

(assert (=> b!110214 (= e!71703 (contains!840 Nil!1649 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110215 () Bool)

(declare-fun e!71706 () Bool)

(assert (=> b!110215 (= e!71705 e!71706)))

(declare-fun c!19536 () Bool)

(assert (=> b!110215 (= c!19536 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11756 () Bool)

(declare-fun call!11759 () Bool)

(assert (=> bm!11756 (= call!11759 (arrayNoDuplicates!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19536 (Cons!1648 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) Nil!1649) Nil!1649)))))

(declare-fun b!110216 () Bool)

(assert (=> b!110216 (= e!71706 call!11759)))

(declare-fun b!110217 () Bool)

(assert (=> b!110217 (= e!71706 call!11759)))

(assert (= (and d!30925 (not res!54492)) b!110213))

(assert (= (and b!110213 res!54491) b!110214))

(assert (= (and b!110213 res!54490) b!110215))

(assert (= (and b!110215 c!19536) b!110217))

(assert (= (and b!110215 (not c!19536)) b!110216))

(assert (= (or b!110217 b!110216) bm!11756))

(declare-fun m!124875 () Bool)

(assert (=> b!110213 m!124875))

(assert (=> b!110213 m!124875))

(declare-fun m!124877 () Bool)

(assert (=> b!110213 m!124877))

(assert (=> b!110214 m!124875))

(assert (=> b!110214 m!124875))

(declare-fun m!124879 () Bool)

(assert (=> b!110214 m!124879))

(assert (=> b!110215 m!124875))

(assert (=> b!110215 m!124875))

(assert (=> b!110215 m!124877))

(assert (=> bm!11756 m!124875))

(declare-fun m!124881 () Bool)

(assert (=> bm!11756 m!124881))

(assert (=> b!110032 d!30925))

(declare-fun d!30927 () Bool)

(declare-fun e!71707 () Bool)

(assert (=> d!30927 e!71707))

(declare-fun res!54493 () Bool)

(assert (=> d!30927 (=> res!54493 e!71707)))

(declare-fun lt!56793 () Bool)

(assert (=> d!30927 (= res!54493 (not lt!56793))))

(declare-fun lt!56790 () Bool)

(assert (=> d!30927 (= lt!56793 lt!56790)))

(declare-fun lt!56792 () Unit!3421)

(declare-fun e!71708 () Unit!3421)

(assert (=> d!30927 (= lt!56792 e!71708)))

(declare-fun c!19537 () Bool)

(assert (=> d!30927 (= c!19537 lt!56790)))

(assert (=> d!30927 (= lt!56790 (containsKey!161 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!30927 (= (contains!837 lt!56674 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!56793)))

(declare-fun b!110218 () Bool)

(declare-fun lt!56791 () Unit!3421)

(assert (=> b!110218 (= e!71708 lt!56791)))

(assert (=> b!110218 (= lt!56791 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110218 (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110219 () Bool)

(declare-fun Unit!3432 () Unit!3421)

(assert (=> b!110219 (= e!71708 Unit!3432)))

(declare-fun b!110220 () Bool)

(assert (=> b!110220 (= e!71707 (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!30927 c!19537) b!110218))

(assert (= (and d!30927 (not c!19537)) b!110219))

(assert (= (and d!30927 (not res!54493)) b!110220))

(assert (=> d!30927 m!124711))

(declare-fun m!124883 () Bool)

(assert (=> d!30927 m!124883))

(assert (=> b!110218 m!124711))

(declare-fun m!124885 () Bool)

(assert (=> b!110218 m!124885))

(assert (=> b!110218 m!124711))

(declare-fun m!124887 () Bool)

(assert (=> b!110218 m!124887))

(assert (=> b!110218 m!124887))

(declare-fun m!124889 () Bool)

(assert (=> b!110218 m!124889))

(assert (=> b!110220 m!124711))

(assert (=> b!110220 m!124887))

(assert (=> b!110220 m!124887))

(assert (=> b!110220 m!124889))

(assert (=> b!110072 d!30927))

(declare-fun call!11761 () ListLongMap!1595)

(declare-fun bm!11757 () Bool)

(assert (=> bm!11757 (= call!11761 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun e!71712 () Bool)

(declare-fun b!110221 () Bool)

(declare-fun lt!56797 () ListLongMap!1595)

(assert (=> b!110221 (= e!71712 (= (apply!100 lt!56797 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))

(declare-fun b!110222 () Bool)

(declare-fun e!71715 () Unit!3421)

(declare-fun Unit!3433 () Unit!3421)

(assert (=> b!110222 (= e!71715 Unit!3433)))

(declare-fun b!110223 () Bool)

(declare-fun e!71721 () Bool)

(assert (=> b!110223 (= e!71721 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!71720 () ListLongMap!1595)

(declare-fun call!11764 () ListLongMap!1595)

(declare-fun b!110224 () Bool)

(assert (=> b!110224 (= e!71720 (+!149 call!11764 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))))

(declare-fun bm!11759 () Bool)

(declare-fun call!11765 () Bool)

(assert (=> bm!11759 (= call!11765 (contains!837 lt!56797 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110225 () Bool)

(declare-fun e!71716 () Bool)

(assert (=> b!110225 (= e!71716 (= (apply!100 lt!56797 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))))

(declare-fun b!110226 () Bool)

(declare-fun e!71710 () Bool)

(assert (=> b!110226 (= e!71710 e!71716)))

(declare-fun res!54496 () Bool)

(declare-fun call!11766 () Bool)

(assert (=> b!110226 (= res!54496 call!11766)))

(assert (=> b!110226 (=> (not res!54496) (not e!71716))))

(declare-fun b!110227 () Bool)

(declare-fun e!71713 () Bool)

(declare-fun e!71719 () Bool)

(assert (=> b!110227 (= e!71713 e!71719)))

(declare-fun res!54501 () Bool)

(assert (=> b!110227 (=> (not res!54501) (not e!71719))))

(assert (=> b!110227 (= res!54501 (contains!837 lt!56797 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110227 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110228 () Bool)

(declare-fun e!71714 () Bool)

(assert (=> b!110228 (= e!71714 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110229 () Bool)

(declare-fun res!54497 () Bool)

(declare-fun e!71711 () Bool)

(assert (=> b!110229 (=> (not res!54497) (not e!71711))))

(assert (=> b!110229 (= res!54497 e!71710)))

(declare-fun c!19538 () Bool)

(assert (=> b!110229 (= c!19538 (not (= (bvand (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110230 () Bool)

(assert (=> b!110230 (= e!71710 (not call!11766))))

(declare-fun b!110231 () Bool)

(declare-fun e!71709 () ListLongMap!1595)

(declare-fun call!11763 () ListLongMap!1595)

(assert (=> b!110231 (= e!71709 call!11763)))

(declare-fun bm!11760 () Bool)

(declare-fun call!11762 () ListLongMap!1595)

(assert (=> bm!11760 (= call!11763 call!11762)))

(declare-fun bm!11761 () Bool)

(declare-fun call!11760 () ListLongMap!1595)

(assert (=> bm!11761 (= call!11760 call!11764)))

(declare-fun b!110232 () Bool)

(assert (=> b!110232 (= e!71709 call!11760)))

(declare-fun b!110233 () Bool)

(declare-fun c!19540 () Bool)

(assert (=> b!110233 (= c!19540 (and (not (= (bvand (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71717 () ListLongMap!1595)

(assert (=> b!110233 (= e!71717 e!71709)))

(declare-fun c!19543 () Bool)

(declare-fun c!19539 () Bool)

(declare-fun bm!11758 () Bool)

(assert (=> bm!11758 (= call!11764 (+!149 (ite c!19539 call!11761 (ite c!19543 call!11762 call!11763)) (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(declare-fun d!30929 () Bool)

(assert (=> d!30929 e!71711))

(declare-fun res!54495 () Bool)

(assert (=> d!30929 (=> (not res!54495) (not e!71711))))

(assert (=> d!30929 (= res!54495 (or (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))))

(declare-fun lt!56809 () ListLongMap!1595)

(assert (=> d!30929 (= lt!56797 lt!56809)))

(declare-fun lt!56810 () Unit!3421)

(assert (=> d!30929 (= lt!56810 e!71715)))

(declare-fun c!19542 () Bool)

(assert (=> d!30929 (= c!19542 e!71714)))

(declare-fun res!54494 () Bool)

(assert (=> d!30929 (=> (not res!54494) (not e!71714))))

(assert (=> d!30929 (= res!54494 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!30929 (= lt!56809 e!71720)))

(assert (=> d!30929 (= c!19539 (and (not (= (bvand (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30929 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30929 (= (getCurrentListMap!489 (_keys!4341 newMap!16) (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!56797)))

(declare-fun b!110234 () Bool)

(assert (=> b!110234 (= e!71720 e!71717)))

(assert (=> b!110234 (= c!19543 (and (not (= (bvand (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110235 () Bool)

(declare-fun e!71718 () Bool)

(assert (=> b!110235 (= e!71711 e!71718)))

(declare-fun c!19541 () Bool)

(assert (=> b!110235 (= c!19541 (not (= (bvand (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110236 () Bool)

(assert (=> b!110236 (= e!71718 e!71712)))

(declare-fun res!54498 () Bool)

(assert (=> b!110236 (= res!54498 call!11765)))

(assert (=> b!110236 (=> (not res!54498) (not e!71712))))

(declare-fun bm!11762 () Bool)

(assert (=> bm!11762 (= call!11766 (contains!837 lt!56797 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110237 () Bool)

(declare-fun lt!56813 () Unit!3421)

(assert (=> b!110237 (= e!71715 lt!56813)))

(declare-fun lt!56802 () ListLongMap!1595)

(assert (=> b!110237 (= lt!56802 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56806 () (_ BitVec 64))

(assert (=> b!110237 (= lt!56806 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56812 () (_ BitVec 64))

(assert (=> b!110237 (= lt!56812 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56811 () Unit!3421)

(assert (=> b!110237 (= lt!56811 (addStillContains!76 lt!56802 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) lt!56812))))

(assert (=> b!110237 (contains!837 (+!149 lt!56802 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) lt!56812)))

(declare-fun lt!56808 () Unit!3421)

(assert (=> b!110237 (= lt!56808 lt!56811)))

(declare-fun lt!56796 () ListLongMap!1595)

(assert (=> b!110237 (= lt!56796 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56798 () (_ BitVec 64))

(assert (=> b!110237 (= lt!56798 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56799 () (_ BitVec 64))

(assert (=> b!110237 (= lt!56799 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56794 () Unit!3421)

(assert (=> b!110237 (= lt!56794 (addApplyDifferent!76 lt!56796 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) lt!56799))))

(assert (=> b!110237 (= (apply!100 (+!149 lt!56796 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) lt!56799) (apply!100 lt!56796 lt!56799))))

(declare-fun lt!56795 () Unit!3421)

(assert (=> b!110237 (= lt!56795 lt!56794)))

(declare-fun lt!56803 () ListLongMap!1595)

(assert (=> b!110237 (= lt!56803 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56801 () (_ BitVec 64))

(assert (=> b!110237 (= lt!56801 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56805 () (_ BitVec 64))

(assert (=> b!110237 (= lt!56805 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56804 () Unit!3421)

(assert (=> b!110237 (= lt!56804 (addApplyDifferent!76 lt!56803 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) lt!56805))))

(assert (=> b!110237 (= (apply!100 (+!149 lt!56803 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) lt!56805) (apply!100 lt!56803 lt!56805))))

(declare-fun lt!56807 () Unit!3421)

(assert (=> b!110237 (= lt!56807 lt!56804)))

(declare-fun lt!56814 () ListLongMap!1595)

(assert (=> b!110237 (= lt!56814 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56815 () (_ BitVec 64))

(assert (=> b!110237 (= lt!56815 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56800 () (_ BitVec 64))

(assert (=> b!110237 (= lt!56800 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110237 (= lt!56813 (addApplyDifferent!76 lt!56814 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) lt!56800))))

(assert (=> b!110237 (= (apply!100 (+!149 lt!56814 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) lt!56800) (apply!100 lt!56814 lt!56800))))

(declare-fun b!110238 () Bool)

(declare-fun res!54500 () Bool)

(assert (=> b!110238 (=> (not res!54500) (not e!71711))))

(assert (=> b!110238 (= res!54500 e!71713)))

(declare-fun res!54502 () Bool)

(assert (=> b!110238 (=> res!54502 e!71713)))

(assert (=> b!110238 (= res!54502 (not e!71721))))

(declare-fun res!54499 () Bool)

(assert (=> b!110238 (=> (not res!54499) (not e!71721))))

(assert (=> b!110238 (= res!54499 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110239 () Bool)

(assert (=> b!110239 (= e!71717 call!11760)))

(declare-fun bm!11763 () Bool)

(assert (=> bm!11763 (= call!11762 call!11761)))

(declare-fun b!110240 () Bool)

(assert (=> b!110240 (= e!71718 (not call!11765))))

(declare-fun b!110241 () Bool)

(assert (=> b!110241 (= e!71719 (= (apply!100 lt!56797 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110241 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))))))))

(assert (=> b!110241 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (= (and d!30929 c!19539) b!110224))

(assert (= (and d!30929 (not c!19539)) b!110234))

(assert (= (and b!110234 c!19543) b!110239))

(assert (= (and b!110234 (not c!19543)) b!110233))

(assert (= (and b!110233 c!19540) b!110232))

(assert (= (and b!110233 (not c!19540)) b!110231))

(assert (= (or b!110232 b!110231) bm!11760))

(assert (= (or b!110239 bm!11760) bm!11763))

(assert (= (or b!110239 b!110232) bm!11761))

(assert (= (or b!110224 bm!11763) bm!11757))

(assert (= (or b!110224 bm!11761) bm!11758))

(assert (= (and d!30929 res!54494) b!110228))

(assert (= (and d!30929 c!19542) b!110237))

(assert (= (and d!30929 (not c!19542)) b!110222))

(assert (= (and d!30929 res!54495) b!110238))

(assert (= (and b!110238 res!54499) b!110223))

(assert (= (and b!110238 (not res!54502)) b!110227))

(assert (= (and b!110227 res!54501) b!110241))

(assert (= (and b!110238 res!54500) b!110229))

(assert (= (and b!110229 c!19538) b!110226))

(assert (= (and b!110229 (not c!19538)) b!110230))

(assert (= (and b!110226 res!54496) b!110225))

(assert (= (or b!110226 b!110230) bm!11762))

(assert (= (and b!110229 res!54497) b!110235))

(assert (= (and b!110235 c!19541) b!110236))

(assert (= (and b!110235 (not c!19541)) b!110240))

(assert (= (and b!110236 res!54498) b!110221))

(assert (= (or b!110236 b!110240) bm!11759))

(declare-fun b_lambda!4961 () Bool)

(assert (=> (not b_lambda!4961) (not b!110241)))

(declare-fun t!5810 () Bool)

(declare-fun tb!2121 () Bool)

(assert (=> (and b!109812 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16)) t!5810) tb!2121))

(declare-fun result!3549 () Bool)

(assert (=> tb!2121 (= result!3549 tp_is_empty!2697)))

(assert (=> b!110241 t!5810))

(declare-fun b_and!6805 () Bool)

(assert (= b_and!6801 (and (=> t!5810 result!3549) b_and!6805)))

(declare-fun t!5812 () Bool)

(declare-fun tb!2123 () Bool)

(assert (=> (and b!109809 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 newMap!16)) t!5812) tb!2123))

(declare-fun result!3551 () Bool)

(assert (= result!3551 result!3549))

(assert (=> b!110241 t!5812))

(declare-fun b_and!6807 () Bool)

(assert (= b_and!6803 (and (=> t!5812 result!3551) b_and!6807)))

(declare-fun m!124891 () Bool)

(assert (=> b!110225 m!124891))

(declare-fun m!124893 () Bool)

(assert (=> b!110224 m!124893))

(assert (=> b!110227 m!124875))

(assert (=> b!110227 m!124875))

(declare-fun m!124895 () Bool)

(assert (=> b!110227 m!124895))

(declare-fun m!124897 () Bool)

(assert (=> bm!11758 m!124897))

(assert (=> d!30929 m!124861))

(declare-fun m!124899 () Bool)

(assert (=> b!110237 m!124899))

(declare-fun m!124901 () Bool)

(assert (=> b!110237 m!124901))

(declare-fun m!124903 () Bool)

(assert (=> b!110237 m!124903))

(assert (=> b!110237 m!124875))

(declare-fun m!124905 () Bool)

(assert (=> b!110237 m!124905))

(declare-fun m!124907 () Bool)

(assert (=> b!110237 m!124907))

(declare-fun m!124909 () Bool)

(assert (=> b!110237 m!124909))

(assert (=> b!110237 m!124909))

(declare-fun m!124911 () Bool)

(assert (=> b!110237 m!124911))

(declare-fun m!124913 () Bool)

(assert (=> b!110237 m!124913))

(declare-fun m!124915 () Bool)

(assert (=> b!110237 m!124915))

(declare-fun m!124917 () Bool)

(assert (=> b!110237 m!124917))

(declare-fun m!124919 () Bool)

(assert (=> b!110237 m!124919))

(declare-fun m!124921 () Bool)

(assert (=> b!110237 m!124921))

(assert (=> b!110237 m!124919))

(declare-fun m!124923 () Bool)

(assert (=> b!110237 m!124923))

(declare-fun m!124925 () Bool)

(assert (=> b!110237 m!124925))

(assert (=> b!110237 m!124901))

(declare-fun m!124927 () Bool)

(assert (=> b!110237 m!124927))

(assert (=> b!110237 m!124907))

(declare-fun m!124929 () Bool)

(assert (=> b!110237 m!124929))

(assert (=> b!110223 m!124875))

(assert (=> b!110223 m!124875))

(assert (=> b!110223 m!124877))

(assert (=> bm!11757 m!124905))

(declare-fun m!124931 () Bool)

(assert (=> bm!11762 m!124931))

(assert (=> b!110228 m!124875))

(assert (=> b!110228 m!124875))

(assert (=> b!110228 m!124877))

(declare-fun m!124933 () Bool)

(assert (=> bm!11759 m!124933))

(assert (=> b!110241 m!124875))

(declare-fun m!124935 () Bool)

(assert (=> b!110241 m!124935))

(declare-fun m!124937 () Bool)

(assert (=> b!110241 m!124937))

(declare-fun m!124939 () Bool)

(assert (=> b!110241 m!124939))

(assert (=> b!110241 m!124937))

(declare-fun m!124941 () Bool)

(assert (=> b!110241 m!124941))

(assert (=> b!110241 m!124875))

(assert (=> b!110241 m!124939))

(declare-fun m!124943 () Bool)

(assert (=> b!110221 m!124943))

(assert (=> bm!11716 d!30929))

(declare-fun d!30931 () Bool)

(declare-fun e!71722 () Bool)

(assert (=> d!30931 e!71722))

(declare-fun res!54503 () Bool)

(assert (=> d!30931 (=> res!54503 e!71722)))

(declare-fun lt!56819 () Bool)

(assert (=> d!30931 (= res!54503 (not lt!56819))))

(declare-fun lt!56816 () Bool)

(assert (=> d!30931 (= lt!56819 lt!56816)))

(declare-fun lt!56818 () Unit!3421)

(declare-fun e!71723 () Unit!3421)

(assert (=> d!30931 (= lt!56818 e!71723)))

(declare-fun c!19544 () Bool)

(assert (=> d!30931 (= c!19544 lt!56816)))

(assert (=> d!30931 (= lt!56816 (containsKey!161 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30931 (= (contains!837 e!71569 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) lt!56819)))

(declare-fun b!110242 () Bool)

(declare-fun lt!56817 () Unit!3421)

(assert (=> b!110242 (= e!71723 lt!56817)))

(assert (=> b!110242 (= lt!56817 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110242 (isDefined!111 (getValueByKey!157 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110243 () Bool)

(declare-fun Unit!3434 () Unit!3421)

(assert (=> b!110243 (= e!71723 Unit!3434)))

(declare-fun b!110244 () Bool)

(assert (=> b!110244 (= e!71722 (isDefined!111 (getValueByKey!157 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!30931 c!19544) b!110242))

(assert (= (and d!30931 (not c!19544)) b!110243))

(assert (= (and d!30931 (not res!54503)) b!110244))

(assert (=> d!30931 m!124515))

(declare-fun m!124945 () Bool)

(assert (=> d!30931 m!124945))

(assert (=> b!110242 m!124515))

(declare-fun m!124947 () Bool)

(assert (=> b!110242 m!124947))

(assert (=> b!110242 m!124515))

(declare-fun m!124949 () Bool)

(assert (=> b!110242 m!124949))

(assert (=> b!110242 m!124949))

(declare-fun m!124951 () Bool)

(assert (=> b!110242 m!124951))

(assert (=> b!110244 m!124515))

(assert (=> b!110244 m!124949))

(assert (=> b!110244 m!124949))

(assert (=> b!110244 m!124951))

(assert (=> bm!11726 d!30931))

(declare-fun d!30933 () Bool)

(declare-fun isEmpty!382 (Option!163) Bool)

(assert (=> d!30933 (= (isDefined!111 (getValueByKey!157 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))) (not (isEmpty!382 (getValueByKey!157 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun bs!4530 () Bool)

(assert (= bs!4530 d!30933))

(assert (=> bs!4530 m!124627))

(declare-fun m!124953 () Bool)

(assert (=> bs!4530 m!124953))

(assert (=> b!109897 d!30933))

(declare-fun e!71729 () Option!163)

(declare-fun b!110255 () Bool)

(assert (=> b!110255 (= e!71729 (getValueByKey!157 (t!5802 (toList!813 lt!56524)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!30935 () Bool)

(declare-fun c!19549 () Bool)

(assert (=> d!30935 (= c!19549 (and ((_ is Cons!1649) (toList!813 lt!56524)) (= (_1!1224 (h!2248 (toList!813 lt!56524))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(declare-fun e!71728 () Option!163)

(assert (=> d!30935 (= (getValueByKey!157 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) e!71728)))

(declare-fun b!110256 () Bool)

(assert (=> b!110256 (= e!71729 None!161)))

(declare-fun b!110254 () Bool)

(assert (=> b!110254 (= e!71728 e!71729)))

(declare-fun c!19550 () Bool)

(assert (=> b!110254 (= c!19550 (and ((_ is Cons!1649) (toList!813 lt!56524)) (not (= (_1!1224 (h!2248 (toList!813 lt!56524))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun b!110253 () Bool)

(assert (=> b!110253 (= e!71728 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56524)))))))

(assert (= (and d!30935 c!19549) b!110253))

(assert (= (and d!30935 (not c!19549)) b!110254))

(assert (= (and b!110254 c!19550) b!110255))

(assert (= (and b!110254 (not c!19550)) b!110256))

(assert (=> b!110255 m!124515))

(declare-fun m!124955 () Bool)

(assert (=> b!110255 m!124955))

(assert (=> b!109897 d!30935))

(declare-fun d!30937 () Bool)

(declare-fun lt!56822 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!112 (List!1653) (InoxSet tuple2!2428))

(assert (=> d!30937 (= lt!56822 (select (content!112 (toList!813 lt!56699)) lt!56517))))

(declare-fun e!71735 () Bool)

(assert (=> d!30937 (= lt!56822 e!71735)))

(declare-fun res!54509 () Bool)

(assert (=> d!30937 (=> (not res!54509) (not e!71735))))

(assert (=> d!30937 (= res!54509 ((_ is Cons!1649) (toList!813 lt!56699)))))

(assert (=> d!30937 (= (contains!839 (toList!813 lt!56699) lt!56517) lt!56822)))

(declare-fun b!110261 () Bool)

(declare-fun e!71734 () Bool)

(assert (=> b!110261 (= e!71735 e!71734)))

(declare-fun res!54508 () Bool)

(assert (=> b!110261 (=> res!54508 e!71734)))

(assert (=> b!110261 (= res!54508 (= (h!2248 (toList!813 lt!56699)) lt!56517))))

(declare-fun b!110262 () Bool)

(assert (=> b!110262 (= e!71734 (contains!839 (t!5802 (toList!813 lt!56699)) lt!56517))))

(assert (= (and d!30937 res!54509) b!110261))

(assert (= (and b!110261 (not res!54508)) b!110262))

(declare-fun m!124957 () Bool)

(assert (=> d!30937 m!124957))

(declare-fun m!124959 () Bool)

(assert (=> d!30937 m!124959))

(declare-fun m!124961 () Bool)

(assert (=> b!110262 m!124961))

(assert (=> b!110086 d!30937))

(assert (=> bm!11746 d!30879))

(assert (=> d!30905 d!30911))

(declare-fun d!30939 () Bool)

(assert (=> d!30939 (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) from!355 Nil!1649)))

(assert (=> d!30939 true))

(declare-fun _$71!153 () Unit!3421)

(assert (=> d!30939 (= (choose!39 (_keys!4341 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!153)))

(declare-fun bs!4531 () Bool)

(assert (= bs!4531 d!30939))

(assert (=> bs!4531 m!124539))

(assert (=> d!30905 d!30939))

(declare-fun d!30941 () Bool)

(declare-fun e!71736 () Bool)

(assert (=> d!30941 e!71736))

(declare-fun res!54510 () Bool)

(assert (=> d!30941 (=> res!54510 e!71736)))

(declare-fun lt!56826 () Bool)

(assert (=> d!30941 (= res!54510 (not lt!56826))))

(declare-fun lt!56823 () Bool)

(assert (=> d!30941 (= lt!56826 lt!56823)))

(declare-fun lt!56825 () Unit!3421)

(declare-fun e!71737 () Unit!3421)

(assert (=> d!30941 (= lt!56825 e!71737)))

(declare-fun c!19551 () Bool)

(assert (=> d!30941 (= c!19551 lt!56823)))

(assert (=> d!30941 (= lt!56823 (containsKey!161 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30941 (= (contains!837 lt!56753 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56826)))

(declare-fun b!110263 () Bool)

(declare-fun lt!56824 () Unit!3421)

(assert (=> b!110263 (= e!71737 lt!56824)))

(assert (=> b!110263 (= lt!56824 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110263 (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110264 () Bool)

(declare-fun Unit!3435 () Unit!3421)

(assert (=> b!110264 (= e!71737 Unit!3435)))

(declare-fun b!110265 () Bool)

(assert (=> b!110265 (= e!71736 (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30941 c!19551) b!110263))

(assert (= (and d!30941 (not c!19551)) b!110264))

(assert (= (and d!30941 (not res!54510)) b!110265))

(declare-fun m!124963 () Bool)

(assert (=> d!30941 m!124963))

(declare-fun m!124965 () Bool)

(assert (=> b!110263 m!124965))

(declare-fun m!124967 () Bool)

(assert (=> b!110263 m!124967))

(assert (=> b!110263 m!124967))

(declare-fun m!124969 () Bool)

(assert (=> b!110263 m!124969))

(assert (=> b!110265 m!124967))

(assert (=> b!110265 m!124967))

(assert (=> b!110265 m!124969))

(assert (=> bm!11751 d!30941))

(declare-fun d!30943 () Bool)

(assert (=> d!30943 (= (+!149 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56632 (zeroValue!2498 newMap!16) lt!56527 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56829 () Unit!3421)

(declare-fun choose!692 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 V!3243 Int) Unit!3421)

(assert (=> d!30943 (= lt!56829 (choose!692 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56632 (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) lt!56527 (defaultEntry!2627 newMap!16)))))

(assert (=> d!30943 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30943 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56632 (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) lt!56527 (defaultEntry!2627 newMap!16)) lt!56829)))

(declare-fun bs!4532 () Bool)

(assert (= bs!4532 d!30943))

(declare-fun m!124971 () Bool)

(assert (=> bs!4532 m!124971))

(assert (=> bs!4532 m!124677))

(assert (=> bs!4532 m!124677))

(declare-fun m!124973 () Bool)

(assert (=> bs!4532 m!124973))

(declare-fun m!124975 () Bool)

(assert (=> bs!4532 m!124975))

(assert (=> bs!4532 m!124861))

(assert (=> b!110022 d!30943))

(declare-fun d!30945 () Bool)

(declare-fun e!71738 () Bool)

(assert (=> d!30945 e!71738))

(declare-fun res!54511 () Bool)

(assert (=> d!30945 (=> res!54511 e!71738)))

(declare-fun lt!56833 () Bool)

(assert (=> d!30945 (= res!54511 (not lt!56833))))

(declare-fun lt!56830 () Bool)

(assert (=> d!30945 (= lt!56833 lt!56830)))

(declare-fun lt!56832 () Unit!3421)

(declare-fun e!71739 () Unit!3421)

(assert (=> d!30945 (= lt!56832 e!71739)))

(declare-fun c!19552 () Bool)

(assert (=> d!30945 (= c!19552 lt!56830)))

(assert (=> d!30945 (= lt!56830 (containsKey!161 (toList!813 lt!56687) (_1!1224 lt!56528)))))

(assert (=> d!30945 (= (contains!837 lt!56687 (_1!1224 lt!56528)) lt!56833)))

(declare-fun b!110266 () Bool)

(declare-fun lt!56831 () Unit!3421)

(assert (=> b!110266 (= e!71739 lt!56831)))

(assert (=> b!110266 (= lt!56831 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56687) (_1!1224 lt!56528)))))

(assert (=> b!110266 (isDefined!111 (getValueByKey!157 (toList!813 lt!56687) (_1!1224 lt!56528)))))

(declare-fun b!110267 () Bool)

(declare-fun Unit!3436 () Unit!3421)

(assert (=> b!110267 (= e!71739 Unit!3436)))

(declare-fun b!110268 () Bool)

(assert (=> b!110268 (= e!71738 (isDefined!111 (getValueByKey!157 (toList!813 lt!56687) (_1!1224 lt!56528))))))

(assert (= (and d!30945 c!19552) b!110266))

(assert (= (and d!30945 (not c!19552)) b!110267))

(assert (= (and d!30945 (not res!54511)) b!110268))

(declare-fun m!124977 () Bool)

(assert (=> d!30945 m!124977))

(declare-fun m!124979 () Bool)

(assert (=> b!110266 m!124979))

(assert (=> b!110266 m!124735))

(assert (=> b!110266 m!124735))

(declare-fun m!124981 () Bool)

(assert (=> b!110266 m!124981))

(assert (=> b!110268 m!124735))

(assert (=> b!110268 m!124735))

(assert (=> b!110268 m!124981))

(assert (=> d!30881 d!30945))

(declare-fun b!110271 () Bool)

(declare-fun e!71741 () Option!163)

(assert (=> b!110271 (= e!71741 (getValueByKey!157 (t!5802 lt!56690) (_1!1224 lt!56528)))))

(declare-fun d!30947 () Bool)

(declare-fun c!19553 () Bool)

(assert (=> d!30947 (= c!19553 (and ((_ is Cons!1649) lt!56690) (= (_1!1224 (h!2248 lt!56690)) (_1!1224 lt!56528))))))

(declare-fun e!71740 () Option!163)

(assert (=> d!30947 (= (getValueByKey!157 lt!56690 (_1!1224 lt!56528)) e!71740)))

(declare-fun b!110272 () Bool)

(assert (=> b!110272 (= e!71741 None!161)))

(declare-fun b!110270 () Bool)

(assert (=> b!110270 (= e!71740 e!71741)))

(declare-fun c!19554 () Bool)

(assert (=> b!110270 (= c!19554 (and ((_ is Cons!1649) lt!56690) (not (= (_1!1224 (h!2248 lt!56690)) (_1!1224 lt!56528)))))))

(declare-fun b!110269 () Bool)

(assert (=> b!110269 (= e!71740 (Some!162 (_2!1224 (h!2248 lt!56690))))))

(assert (= (and d!30947 c!19553) b!110269))

(assert (= (and d!30947 (not c!19553)) b!110270))

(assert (= (and b!110270 c!19554) b!110271))

(assert (= (and b!110270 (not c!19554)) b!110272))

(declare-fun m!124983 () Bool)

(assert (=> b!110271 m!124983))

(assert (=> d!30881 d!30947))

(declare-fun d!30949 () Bool)

(assert (=> d!30949 (= (getValueByKey!157 lt!56690 (_1!1224 lt!56528)) (Some!162 (_2!1224 lt!56528)))))

(declare-fun lt!56836 () Unit!3421)

(declare-fun choose!693 (List!1653 (_ BitVec 64) V!3243) Unit!3421)

(assert (=> d!30949 (= lt!56836 (choose!693 lt!56690 (_1!1224 lt!56528) (_2!1224 lt!56528)))))

(declare-fun e!71744 () Bool)

(assert (=> d!30949 e!71744))

(declare-fun res!54516 () Bool)

(assert (=> d!30949 (=> (not res!54516) (not e!71744))))

(declare-fun isStrictlySorted!306 (List!1653) Bool)

(assert (=> d!30949 (= res!54516 (isStrictlySorted!306 lt!56690))))

(assert (=> d!30949 (= (lemmaContainsTupThenGetReturnValue!75 lt!56690 (_1!1224 lt!56528) (_2!1224 lt!56528)) lt!56836)))

(declare-fun b!110277 () Bool)

(declare-fun res!54517 () Bool)

(assert (=> b!110277 (=> (not res!54517) (not e!71744))))

(assert (=> b!110277 (= res!54517 (containsKey!161 lt!56690 (_1!1224 lt!56528)))))

(declare-fun b!110278 () Bool)

(assert (=> b!110278 (= e!71744 (contains!839 lt!56690 (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(assert (= (and d!30949 res!54516) b!110277))

(assert (= (and b!110277 res!54517) b!110278))

(assert (=> d!30949 m!124729))

(declare-fun m!124985 () Bool)

(assert (=> d!30949 m!124985))

(declare-fun m!124987 () Bool)

(assert (=> d!30949 m!124987))

(declare-fun m!124989 () Bool)

(assert (=> b!110277 m!124989))

(declare-fun m!124991 () Bool)

(assert (=> b!110278 m!124991))

(assert (=> d!30881 d!30949))

(declare-fun c!19563 () Bool)

(declare-fun b!110299 () Bool)

(declare-fun c!19564 () Bool)

(declare-fun e!71757 () List!1653)

(assert (=> b!110299 (= e!71757 (ite c!19563 (t!5802 (toList!813 lt!56522)) (ite c!19564 (Cons!1649 (h!2248 (toList!813 lt!56522)) (t!5802 (toList!813 lt!56522))) Nil!1650)))))

(declare-fun b!110300 () Bool)

(declare-fun e!71759 () List!1653)

(declare-fun call!11775 () List!1653)

(assert (=> b!110300 (= e!71759 call!11775)))

(declare-fun c!19566 () Bool)

(declare-fun bm!11770 () Bool)

(declare-fun call!11773 () List!1653)

(declare-fun $colon$colon!82 (List!1653 tuple2!2428) List!1653)

(assert (=> bm!11770 (= call!11773 ($colon$colon!82 e!71757 (ite c!19566 (h!2248 (toList!813 lt!56522)) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528)))))))

(declare-fun c!19565 () Bool)

(assert (=> bm!11770 (= c!19565 c!19566)))

(declare-fun b!110301 () Bool)

(declare-fun e!71755 () List!1653)

(assert (=> b!110301 (= e!71755 e!71759)))

(assert (=> b!110301 (= c!19563 (and ((_ is Cons!1649) (toList!813 lt!56522)) (= (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 lt!56528))))))

(declare-fun b!110302 () Bool)

(assert (=> b!110302 (= e!71757 (insertStrictlySorted!77 (t!5802 (toList!813 lt!56522)) (_1!1224 lt!56528) (_2!1224 lt!56528)))))

(declare-fun bm!11771 () Bool)

(declare-fun call!11774 () List!1653)

(assert (=> bm!11771 (= call!11774 call!11775)))

(declare-fun d!30951 () Bool)

(declare-fun e!71758 () Bool)

(assert (=> d!30951 e!71758))

(declare-fun res!54523 () Bool)

(assert (=> d!30951 (=> (not res!54523) (not e!71758))))

(declare-fun lt!56839 () List!1653)

(assert (=> d!30951 (= res!54523 (isStrictlySorted!306 lt!56839))))

(assert (=> d!30951 (= lt!56839 e!71755)))

(assert (=> d!30951 (= c!19566 (and ((_ is Cons!1649) (toList!813 lt!56522)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 lt!56528))))))

(assert (=> d!30951 (isStrictlySorted!306 (toList!813 lt!56522))))

(assert (=> d!30951 (= (insertStrictlySorted!77 (toList!813 lt!56522) (_1!1224 lt!56528) (_2!1224 lt!56528)) lt!56839)))

(declare-fun b!110303 () Bool)

(declare-fun res!54522 () Bool)

(assert (=> b!110303 (=> (not res!54522) (not e!71758))))

(assert (=> b!110303 (= res!54522 (containsKey!161 lt!56839 (_1!1224 lt!56528)))))

(declare-fun b!110304 () Bool)

(declare-fun e!71756 () List!1653)

(assert (=> b!110304 (= e!71756 call!11774)))

(declare-fun b!110305 () Bool)

(assert (=> b!110305 (= e!71756 call!11774)))

(declare-fun b!110306 () Bool)

(assert (=> b!110306 (= e!71758 (contains!839 lt!56839 (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun b!110307 () Bool)

(assert (=> b!110307 (= e!71755 call!11773)))

(declare-fun bm!11772 () Bool)

(assert (=> bm!11772 (= call!11775 call!11773)))

(declare-fun b!110308 () Bool)

(assert (=> b!110308 (= c!19564 (and ((_ is Cons!1649) (toList!813 lt!56522)) (bvsgt (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 lt!56528))))))

(assert (=> b!110308 (= e!71759 e!71756)))

(assert (= (and d!30951 c!19566) b!110307))

(assert (= (and d!30951 (not c!19566)) b!110301))

(assert (= (and b!110301 c!19563) b!110300))

(assert (= (and b!110301 (not c!19563)) b!110308))

(assert (= (and b!110308 c!19564) b!110304))

(assert (= (and b!110308 (not c!19564)) b!110305))

(assert (= (or b!110304 b!110305) bm!11771))

(assert (= (or b!110300 bm!11771) bm!11772))

(assert (= (or b!110307 bm!11772) bm!11770))

(assert (= (and bm!11770 c!19565) b!110302))

(assert (= (and bm!11770 (not c!19565)) b!110299))

(assert (= (and d!30951 res!54523) b!110303))

(assert (= (and b!110303 res!54522) b!110306))

(declare-fun m!124993 () Bool)

(assert (=> d!30951 m!124993))

(declare-fun m!124995 () Bool)

(assert (=> d!30951 m!124995))

(declare-fun m!124997 () Bool)

(assert (=> bm!11770 m!124997))

(declare-fun m!124999 () Bool)

(assert (=> b!110306 m!124999))

(declare-fun m!125001 () Bool)

(assert (=> b!110302 m!125001))

(declare-fun m!125003 () Bool)

(assert (=> b!110303 m!125003))

(assert (=> d!30881 d!30951))

(declare-fun d!30953 () Bool)

(declare-fun e!71762 () Bool)

(assert (=> d!30953 e!71762))

(declare-fun res!54528 () Bool)

(assert (=> d!30953 (=> (not res!54528) (not e!71762))))

(declare-fun lt!56844 () SeekEntryResult!271)

(assert (=> d!30953 (= res!54528 ((_ is Found!271) lt!56844))))

(assert (=> d!30953 (= lt!56844 (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun lt!56845 () Unit!3421)

(declare-fun choose!694 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) Int) Unit!3421)

(assert (=> d!30953 (= lt!56845 (choose!694 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(assert (=> d!30953 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30953 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)) lt!56845)))

(declare-fun b!110313 () Bool)

(declare-fun res!54529 () Bool)

(assert (=> b!110313 (=> (not res!54529) (not e!71762))))

(assert (=> b!110313 (= res!54529 (inRange!0 (index!3235 lt!56844) (mask!6795 newMap!16)))))

(declare-fun b!110314 () Bool)

(assert (=> b!110314 (= e!71762 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56844)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110314 (and (bvsge (index!3235 lt!56844) #b00000000000000000000000000000000) (bvslt (index!3235 lt!56844) (size!2337 (_keys!4341 newMap!16))))))

(assert (= (and d!30953 res!54528) b!110313))

(assert (= (and b!110313 res!54529) b!110314))

(assert (=> d!30953 m!124515))

(assert (=> d!30953 m!124671))

(assert (=> d!30953 m!124515))

(declare-fun m!125005 () Bool)

(assert (=> d!30953 m!125005))

(assert (=> d!30953 m!124861))

(declare-fun m!125007 () Bool)

(assert (=> b!110313 m!125007))

(declare-fun m!125009 () Bool)

(assert (=> b!110314 m!125009))

(assert (=> bm!11724 d!30953))

(assert (=> b!110067 d!30921))

(declare-fun bm!11773 () Bool)

(declare-fun call!11777 () ListLongMap!1595)

(assert (=> bm!11773 (= call!11777 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!110315 () Bool)

(declare-fun e!71766 () Bool)

(declare-fun lt!56849 () ListLongMap!1595)

(assert (=> b!110315 (= e!71766 (= (apply!100 lt!56849 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun b!110316 () Bool)

(declare-fun e!71769 () Unit!3421)

(declare-fun Unit!3437 () Unit!3421)

(assert (=> b!110316 (= e!71769 Unit!3437)))

(declare-fun b!110317 () Bool)

(declare-fun e!71775 () Bool)

(assert (=> b!110317 (= e!71775 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110318 () Bool)

(declare-fun e!71774 () ListLongMap!1595)

(declare-fun call!11780 () ListLongMap!1595)

(assert (=> b!110318 (= e!71774 (+!149 call!11780 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun bm!11775 () Bool)

(declare-fun call!11781 () Bool)

(assert (=> bm!11775 (= call!11781 (contains!837 lt!56849 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110319 () Bool)

(declare-fun e!71770 () Bool)

(assert (=> b!110319 (= e!71770 (= (apply!100 lt!56849 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!110320 () Bool)

(declare-fun e!71764 () Bool)

(assert (=> b!110320 (= e!71764 e!71770)))

(declare-fun res!54532 () Bool)

(declare-fun call!11782 () Bool)

(assert (=> b!110320 (= res!54532 call!11782)))

(assert (=> b!110320 (=> (not res!54532) (not e!71770))))

(declare-fun b!110321 () Bool)

(declare-fun e!71767 () Bool)

(declare-fun e!71773 () Bool)

(assert (=> b!110321 (= e!71767 e!71773)))

(declare-fun res!54537 () Bool)

(assert (=> b!110321 (=> (not res!54537) (not e!71773))))

(assert (=> b!110321 (= res!54537 (contains!837 lt!56849 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110321 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110322 () Bool)

(declare-fun e!71768 () Bool)

(assert (=> b!110322 (= e!71768 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110323 () Bool)

(declare-fun res!54533 () Bool)

(declare-fun e!71765 () Bool)

(assert (=> b!110323 (=> (not res!54533) (not e!71765))))

(assert (=> b!110323 (= res!54533 e!71764)))

(declare-fun c!19567 () Bool)

(assert (=> b!110323 (= c!19567 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110324 () Bool)

(assert (=> b!110324 (= e!71764 (not call!11782))))

(declare-fun b!110325 () Bool)

(declare-fun e!71763 () ListLongMap!1595)

(declare-fun call!11779 () ListLongMap!1595)

(assert (=> b!110325 (= e!71763 call!11779)))

(declare-fun bm!11776 () Bool)

(declare-fun call!11778 () ListLongMap!1595)

(assert (=> bm!11776 (= call!11779 call!11778)))

(declare-fun bm!11777 () Bool)

(declare-fun call!11776 () ListLongMap!1595)

(assert (=> bm!11777 (= call!11776 call!11780)))

(declare-fun b!110326 () Bool)

(assert (=> b!110326 (= e!71763 call!11776)))

(declare-fun b!110327 () Bool)

(declare-fun c!19569 () Bool)

(assert (=> b!110327 (= c!19569 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71771 () ListLongMap!1595)

(assert (=> b!110327 (= e!71771 e!71763)))

(declare-fun c!19572 () Bool)

(declare-fun bm!11774 () Bool)

(declare-fun c!19568 () Bool)

(assert (=> bm!11774 (= call!11780 (+!149 (ite c!19568 call!11777 (ite c!19572 call!11778 call!11779)) (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun d!30955 () Bool)

(assert (=> d!30955 e!71765))

(declare-fun res!54531 () Bool)

(assert (=> d!30955 (=> (not res!54531) (not e!71765))))

(assert (=> d!30955 (= res!54531 (or (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))))

(declare-fun lt!56861 () ListLongMap!1595)

(assert (=> d!30955 (= lt!56849 lt!56861)))

(declare-fun lt!56862 () Unit!3421)

(assert (=> d!30955 (= lt!56862 e!71769)))

(declare-fun c!19571 () Bool)

(assert (=> d!30955 (= c!19571 e!71768)))

(declare-fun res!54530 () Bool)

(assert (=> d!30955 (=> (not res!54530) (not e!71768))))

(assert (=> d!30955 (= res!54530 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!30955 (= lt!56861 e!71774)))

(assert (=> d!30955 (= c!19568 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30955 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30955 (= (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!56849)))

(declare-fun b!110328 () Bool)

(assert (=> b!110328 (= e!71774 e!71771)))

(assert (=> b!110328 (= c!19572 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110329 () Bool)

(declare-fun e!71772 () Bool)

(assert (=> b!110329 (= e!71765 e!71772)))

(declare-fun c!19570 () Bool)

(assert (=> b!110329 (= c!19570 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110330 () Bool)

(assert (=> b!110330 (= e!71772 e!71766)))

(declare-fun res!54534 () Bool)

(assert (=> b!110330 (= res!54534 call!11781)))

(assert (=> b!110330 (=> (not res!54534) (not e!71766))))

(declare-fun bm!11778 () Bool)

(assert (=> bm!11778 (= call!11782 (contains!837 lt!56849 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110331 () Bool)

(declare-fun lt!56865 () Unit!3421)

(assert (=> b!110331 (= e!71769 lt!56865)))

(declare-fun lt!56854 () ListLongMap!1595)

(assert (=> b!110331 (= lt!56854 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56858 () (_ BitVec 64))

(assert (=> b!110331 (= lt!56858 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56864 () (_ BitVec 64))

(assert (=> b!110331 (= lt!56864 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56863 () Unit!3421)

(assert (=> b!110331 (= lt!56863 (addStillContains!76 lt!56854 lt!56858 (zeroValue!2498 newMap!16) lt!56864))))

(assert (=> b!110331 (contains!837 (+!149 lt!56854 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16))) lt!56864)))

(declare-fun lt!56860 () Unit!3421)

(assert (=> b!110331 (= lt!56860 lt!56863)))

(declare-fun lt!56848 () ListLongMap!1595)

(assert (=> b!110331 (= lt!56848 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56850 () (_ BitVec 64))

(assert (=> b!110331 (= lt!56850 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56851 () (_ BitVec 64))

(assert (=> b!110331 (= lt!56851 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56846 () Unit!3421)

(assert (=> b!110331 (= lt!56846 (addApplyDifferent!76 lt!56848 lt!56850 (minValue!2498 newMap!16) lt!56851))))

(assert (=> b!110331 (= (apply!100 (+!149 lt!56848 (tuple2!2429 lt!56850 (minValue!2498 newMap!16))) lt!56851) (apply!100 lt!56848 lt!56851))))

(declare-fun lt!56847 () Unit!3421)

(assert (=> b!110331 (= lt!56847 lt!56846)))

(declare-fun lt!56855 () ListLongMap!1595)

(assert (=> b!110331 (= lt!56855 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56853 () (_ BitVec 64))

(assert (=> b!110331 (= lt!56853 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56857 () (_ BitVec 64))

(assert (=> b!110331 (= lt!56857 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56856 () Unit!3421)

(assert (=> b!110331 (= lt!56856 (addApplyDifferent!76 lt!56855 lt!56853 (zeroValue!2498 newMap!16) lt!56857))))

(assert (=> b!110331 (= (apply!100 (+!149 lt!56855 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16))) lt!56857) (apply!100 lt!56855 lt!56857))))

(declare-fun lt!56859 () Unit!3421)

(assert (=> b!110331 (= lt!56859 lt!56856)))

(declare-fun lt!56866 () ListLongMap!1595)

(assert (=> b!110331 (= lt!56866 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56867 () (_ BitVec 64))

(assert (=> b!110331 (= lt!56867 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56852 () (_ BitVec 64))

(assert (=> b!110331 (= lt!56852 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110331 (= lt!56865 (addApplyDifferent!76 lt!56866 lt!56867 (minValue!2498 newMap!16) lt!56852))))

(assert (=> b!110331 (= (apply!100 (+!149 lt!56866 (tuple2!2429 lt!56867 (minValue!2498 newMap!16))) lt!56852) (apply!100 lt!56866 lt!56852))))

(declare-fun b!110332 () Bool)

(declare-fun res!54536 () Bool)

(assert (=> b!110332 (=> (not res!54536) (not e!71765))))

(assert (=> b!110332 (= res!54536 e!71767)))

(declare-fun res!54538 () Bool)

(assert (=> b!110332 (=> res!54538 e!71767)))

(assert (=> b!110332 (= res!54538 (not e!71775))))

(declare-fun res!54535 () Bool)

(assert (=> b!110332 (=> (not res!54535) (not e!71775))))

(assert (=> b!110332 (= res!54535 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110333 () Bool)

(assert (=> b!110333 (= e!71771 call!11776)))

(declare-fun bm!11779 () Bool)

(assert (=> bm!11779 (= call!11778 call!11777)))

(declare-fun b!110334 () Bool)

(assert (=> b!110334 (= e!71772 (not call!11781))))

(declare-fun b!110335 () Bool)

(assert (=> b!110335 (= e!71773 (= (apply!100 lt!56849 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110335 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_values!2610 newMap!16))))))

(assert (=> b!110335 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (= (and d!30955 c!19568) b!110318))

(assert (= (and d!30955 (not c!19568)) b!110328))

(assert (= (and b!110328 c!19572) b!110333))

(assert (= (and b!110328 (not c!19572)) b!110327))

(assert (= (and b!110327 c!19569) b!110326))

(assert (= (and b!110327 (not c!19569)) b!110325))

(assert (= (or b!110326 b!110325) bm!11776))

(assert (= (or b!110333 bm!11776) bm!11779))

(assert (= (or b!110333 b!110326) bm!11777))

(assert (= (or b!110318 bm!11779) bm!11773))

(assert (= (or b!110318 bm!11777) bm!11774))

(assert (= (and d!30955 res!54530) b!110322))

(assert (= (and d!30955 c!19571) b!110331))

(assert (= (and d!30955 (not c!19571)) b!110316))

(assert (= (and d!30955 res!54531) b!110332))

(assert (= (and b!110332 res!54535) b!110317))

(assert (= (and b!110332 (not res!54538)) b!110321))

(assert (= (and b!110321 res!54537) b!110335))

(assert (= (and b!110332 res!54536) b!110323))

(assert (= (and b!110323 c!19567) b!110320))

(assert (= (and b!110323 (not c!19567)) b!110324))

(assert (= (and b!110320 res!54532) b!110319))

(assert (= (or b!110320 b!110324) bm!11778))

(assert (= (and b!110323 res!54533) b!110329))

(assert (= (and b!110329 c!19570) b!110330))

(assert (= (and b!110329 (not c!19570)) b!110334))

(assert (= (and b!110330 res!54534) b!110315))

(assert (= (or b!110330 b!110334) bm!11775))

(declare-fun b_lambda!4963 () Bool)

(assert (=> (not b_lambda!4963) (not b!110335)))

(assert (=> b!110335 t!5810))

(declare-fun b_and!6809 () Bool)

(assert (= b_and!6805 (and (=> t!5810 result!3549) b_and!6809)))

(assert (=> b!110335 t!5812))

(declare-fun b_and!6811 () Bool)

(assert (= b_and!6807 (and (=> t!5812 result!3551) b_and!6811)))

(declare-fun m!125011 () Bool)

(assert (=> b!110319 m!125011))

(declare-fun m!125013 () Bool)

(assert (=> b!110318 m!125013))

(assert (=> b!110321 m!124875))

(assert (=> b!110321 m!124875))

(declare-fun m!125015 () Bool)

(assert (=> b!110321 m!125015))

(declare-fun m!125017 () Bool)

(assert (=> bm!11774 m!125017))

(assert (=> d!30955 m!124861))

(declare-fun m!125019 () Bool)

(assert (=> b!110331 m!125019))

(declare-fun m!125021 () Bool)

(assert (=> b!110331 m!125021))

(declare-fun m!125023 () Bool)

(assert (=> b!110331 m!125023))

(assert (=> b!110331 m!124875))

(declare-fun m!125025 () Bool)

(assert (=> b!110331 m!125025))

(declare-fun m!125027 () Bool)

(assert (=> b!110331 m!125027))

(declare-fun m!125029 () Bool)

(assert (=> b!110331 m!125029))

(assert (=> b!110331 m!125029))

(declare-fun m!125031 () Bool)

(assert (=> b!110331 m!125031))

(declare-fun m!125033 () Bool)

(assert (=> b!110331 m!125033))

(declare-fun m!125035 () Bool)

(assert (=> b!110331 m!125035))

(declare-fun m!125037 () Bool)

(assert (=> b!110331 m!125037))

(declare-fun m!125039 () Bool)

(assert (=> b!110331 m!125039))

(declare-fun m!125041 () Bool)

(assert (=> b!110331 m!125041))

(assert (=> b!110331 m!125039))

(declare-fun m!125043 () Bool)

(assert (=> b!110331 m!125043))

(declare-fun m!125045 () Bool)

(assert (=> b!110331 m!125045))

(assert (=> b!110331 m!125021))

(declare-fun m!125047 () Bool)

(assert (=> b!110331 m!125047))

(assert (=> b!110331 m!125027))

(declare-fun m!125049 () Bool)

(assert (=> b!110331 m!125049))

(assert (=> b!110317 m!124875))

(assert (=> b!110317 m!124875))

(assert (=> b!110317 m!124877))

(assert (=> bm!11773 m!125025))

(declare-fun m!125051 () Bool)

(assert (=> bm!11778 m!125051))

(assert (=> b!110322 m!124875))

(assert (=> b!110322 m!124875))

(assert (=> b!110322 m!124877))

(declare-fun m!125053 () Bool)

(assert (=> bm!11775 m!125053))

(assert (=> b!110335 m!124875))

(declare-fun m!125055 () Bool)

(assert (=> b!110335 m!125055))

(assert (=> b!110335 m!124937))

(declare-fun m!125057 () Bool)

(assert (=> b!110335 m!125057))

(assert (=> b!110335 m!124937))

(declare-fun m!125059 () Bool)

(assert (=> b!110335 m!125059))

(assert (=> b!110335 m!124875))

(assert (=> b!110335 m!125057))

(declare-fun m!125061 () Bool)

(assert (=> b!110315 m!125061))

(assert (=> d!30893 d!30955))

(assert (=> bm!11707 d!30913))

(declare-fun b!110344 () Bool)

(declare-fun res!54550 () Bool)

(declare-fun e!71778 () Bool)

(assert (=> b!110344 (=> (not res!54550) (not e!71778))))

(assert (=> b!110344 (= res!54550 (and (= (size!2338 (_values!2610 newMap!16)) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001)) (= (size!2337 (_keys!4341 newMap!16)) (size!2338 (_values!2610 newMap!16))) (bvsge (_size!508 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!508 newMap!16) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!110346 () Bool)

(declare-fun res!54548 () Bool)

(assert (=> b!110346 (=> (not res!54548) (not e!71778))))

(declare-fun size!2341 (LongMapFixedSize!918) (_ BitVec 32))

(assert (=> b!110346 (= res!54548 (= (size!2341 newMap!16) (bvadd (_size!508 newMap!16) (bvsdiv (bvadd (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!110345 () Bool)

(declare-fun res!54547 () Bool)

(assert (=> b!110345 (=> (not res!54547) (not e!71778))))

(assert (=> b!110345 (= res!54547 (bvsge (size!2341 newMap!16) (_size!508 newMap!16)))))

(declare-fun b!110347 () Bool)

(assert (=> b!110347 (= e!71778 (and (bvsge (extraKeys!2424 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2424 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!508 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!30957 () Bool)

(declare-fun res!54549 () Bool)

(assert (=> d!30957 (=> (not res!54549) (not e!71778))))

(assert (=> d!30957 (= res!54549 (validMask!0 (mask!6795 newMap!16)))))

(assert (=> d!30957 (= (simpleValid!75 newMap!16) e!71778)))

(assert (= (and d!30957 res!54549) b!110344))

(assert (= (and b!110344 res!54550) b!110345))

(assert (= (and b!110345 res!54547) b!110346))

(assert (= (and b!110346 res!54548) b!110347))

(declare-fun m!125063 () Bool)

(assert (=> b!110346 m!125063))

(assert (=> b!110345 m!125063))

(assert (=> d!30957 m!124861))

(assert (=> d!30875 d!30957))

(assert (=> b!110069 d!30919))

(declare-fun d!30959 () Bool)

(assert (=> d!30959 (not (contains!837 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)) lt!56676))))

(declare-fun lt!56870 () Unit!3421)

(declare-fun choose!695 (ListLongMap!1595 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3421)

(assert (=> d!30959 (= lt!56870 (choose!695 lt!56672 lt!56675 lt!56678 lt!56676))))

(declare-fun e!71781 () Bool)

(assert (=> d!30959 e!71781))

(declare-fun res!54553 () Bool)

(assert (=> d!30959 (=> (not res!54553) (not e!71781))))

(assert (=> d!30959 (= res!54553 (not (contains!837 lt!56672 lt!56676)))))

(assert (=> d!30959 (= (addStillNotContains!50 lt!56672 lt!56675 lt!56678 lt!56676) lt!56870)))

(declare-fun b!110351 () Bool)

(assert (=> b!110351 (= e!71781 (not (= lt!56675 lt!56676)))))

(assert (= (and d!30959 res!54553) b!110351))

(assert (=> d!30959 m!124703))

(assert (=> d!30959 m!124703))

(assert (=> d!30959 m!124705))

(declare-fun m!125065 () Bool)

(assert (=> d!30959 m!125065))

(declare-fun m!125067 () Bool)

(assert (=> d!30959 m!125067))

(assert (=> b!110069 d!30959))

(declare-fun d!30961 () Bool)

(declare-fun e!71782 () Bool)

(assert (=> d!30961 e!71782))

(declare-fun res!54554 () Bool)

(assert (=> d!30961 (=> res!54554 e!71782)))

(declare-fun lt!56874 () Bool)

(assert (=> d!30961 (= res!54554 (not lt!56874))))

(declare-fun lt!56871 () Bool)

(assert (=> d!30961 (= lt!56874 lt!56871)))

(declare-fun lt!56873 () Unit!3421)

(declare-fun e!71783 () Unit!3421)

(assert (=> d!30961 (= lt!56873 e!71783)))

(declare-fun c!19573 () Bool)

(assert (=> d!30961 (= c!19573 lt!56871)))

(assert (=> d!30961 (= lt!56871 (containsKey!161 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676))))

(assert (=> d!30961 (= (contains!837 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)) lt!56676) lt!56874)))

(declare-fun b!110352 () Bool)

(declare-fun lt!56872 () Unit!3421)

(assert (=> b!110352 (= e!71783 lt!56872)))

(assert (=> b!110352 (= lt!56872 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676))))

(assert (=> b!110352 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676))))

(declare-fun b!110353 () Bool)

(declare-fun Unit!3438 () Unit!3421)

(assert (=> b!110353 (= e!71783 Unit!3438)))

(declare-fun b!110354 () Bool)

(assert (=> b!110354 (= e!71782 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676)))))

(assert (= (and d!30961 c!19573) b!110352))

(assert (= (and d!30961 (not c!19573)) b!110353))

(assert (= (and d!30961 (not res!54554)) b!110354))

(declare-fun m!125069 () Bool)

(assert (=> d!30961 m!125069))

(declare-fun m!125071 () Bool)

(assert (=> b!110352 m!125071))

(declare-fun m!125073 () Bool)

(assert (=> b!110352 m!125073))

(assert (=> b!110352 m!125073))

(declare-fun m!125075 () Bool)

(assert (=> b!110352 m!125075))

(assert (=> b!110354 m!125073))

(assert (=> b!110354 m!125073))

(assert (=> b!110354 m!125075))

(assert (=> b!110069 d!30961))

(declare-fun d!30963 () Bool)

(declare-fun e!71784 () Bool)

(assert (=> d!30963 e!71784))

(declare-fun res!54555 () Bool)

(assert (=> d!30963 (=> (not res!54555) (not e!71784))))

(declare-fun lt!56875 () ListLongMap!1595)

(assert (=> d!30963 (= res!54555 (contains!837 lt!56875 (_1!1224 (tuple2!2429 lt!56675 lt!56678))))))

(declare-fun lt!56878 () List!1653)

(assert (=> d!30963 (= lt!56875 (ListLongMap!1596 lt!56878))))

(declare-fun lt!56876 () Unit!3421)

(declare-fun lt!56877 () Unit!3421)

(assert (=> d!30963 (= lt!56876 lt!56877)))

(assert (=> d!30963 (= (getValueByKey!157 lt!56878 (_1!1224 (tuple2!2429 lt!56675 lt!56678))) (Some!162 (_2!1224 (tuple2!2429 lt!56675 lt!56678))))))

(assert (=> d!30963 (= lt!56877 (lemmaContainsTupThenGetReturnValue!75 lt!56878 (_1!1224 (tuple2!2429 lt!56675 lt!56678)) (_2!1224 (tuple2!2429 lt!56675 lt!56678))))))

(assert (=> d!30963 (= lt!56878 (insertStrictlySorted!77 (toList!813 lt!56672) (_1!1224 (tuple2!2429 lt!56675 lt!56678)) (_2!1224 (tuple2!2429 lt!56675 lt!56678))))))

(assert (=> d!30963 (= (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)) lt!56875)))

(declare-fun b!110355 () Bool)

(declare-fun res!54556 () Bool)

(assert (=> b!110355 (=> (not res!54556) (not e!71784))))

(assert (=> b!110355 (= res!54556 (= (getValueByKey!157 (toList!813 lt!56875) (_1!1224 (tuple2!2429 lt!56675 lt!56678))) (Some!162 (_2!1224 (tuple2!2429 lt!56675 lt!56678)))))))

(declare-fun b!110356 () Bool)

(assert (=> b!110356 (= e!71784 (contains!839 (toList!813 lt!56875) (tuple2!2429 lt!56675 lt!56678)))))

(assert (= (and d!30963 res!54555) b!110355))

(assert (= (and b!110355 res!54556) b!110356))

(declare-fun m!125077 () Bool)

(assert (=> d!30963 m!125077))

(declare-fun m!125079 () Bool)

(assert (=> d!30963 m!125079))

(declare-fun m!125081 () Bool)

(assert (=> d!30963 m!125081))

(declare-fun m!125083 () Bool)

(assert (=> d!30963 m!125083))

(declare-fun m!125085 () Bool)

(assert (=> b!110355 m!125085))

(declare-fun m!125087 () Bool)

(assert (=> b!110356 m!125087))

(assert (=> b!110069 d!30963))

(declare-fun d!30965 () Bool)

(declare-fun e!71785 () Bool)

(assert (=> d!30965 e!71785))

(declare-fun res!54557 () Bool)

(assert (=> d!30965 (=> (not res!54557) (not e!71785))))

(declare-fun lt!56879 () ListLongMap!1595)

(assert (=> d!30965 (= res!54557 (contains!837 lt!56879 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!56882 () List!1653)

(assert (=> d!30965 (= lt!56879 (ListLongMap!1596 lt!56882))))

(declare-fun lt!56880 () Unit!3421)

(declare-fun lt!56881 () Unit!3421)

(assert (=> d!30965 (= lt!56880 lt!56881)))

(assert (=> d!30965 (= (getValueByKey!157 lt!56882 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30965 (= lt!56881 (lemmaContainsTupThenGetReturnValue!75 lt!56882 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30965 (= lt!56882 (insertStrictlySorted!77 (toList!813 call!11734) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30965 (= (+!149 call!11734 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!56879)))

(declare-fun b!110357 () Bool)

(declare-fun res!54558 () Bool)

(assert (=> b!110357 (=> (not res!54558) (not e!71785))))

(assert (=> b!110357 (= res!54558 (= (getValueByKey!157 (toList!813 lt!56879) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!110358 () Bool)

(assert (=> b!110358 (= e!71785 (contains!839 (toList!813 lt!56879) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30965 res!54557) b!110357))

(assert (= (and b!110357 res!54558) b!110358))

(declare-fun m!125089 () Bool)

(assert (=> d!30965 m!125089))

(declare-fun m!125091 () Bool)

(assert (=> d!30965 m!125091))

(declare-fun m!125093 () Bool)

(assert (=> d!30965 m!125093))

(declare-fun m!125095 () Bool)

(assert (=> d!30965 m!125095))

(declare-fun m!125097 () Bool)

(assert (=> b!110357 m!125097))

(declare-fun m!125099 () Bool)

(assert (=> b!110358 m!125099))

(assert (=> b!110069 d!30965))

(declare-fun d!30967 () Bool)

(declare-fun lt!56883 () Bool)

(assert (=> d!30967 (= lt!56883 (select (content!112 (toList!813 lt!56687)) lt!56528))))

(declare-fun e!71787 () Bool)

(assert (=> d!30967 (= lt!56883 e!71787)))

(declare-fun res!54560 () Bool)

(assert (=> d!30967 (=> (not res!54560) (not e!71787))))

(assert (=> d!30967 (= res!54560 ((_ is Cons!1649) (toList!813 lt!56687)))))

(assert (=> d!30967 (= (contains!839 (toList!813 lt!56687) lt!56528) lt!56883)))

(declare-fun b!110359 () Bool)

(declare-fun e!71786 () Bool)

(assert (=> b!110359 (= e!71787 e!71786)))

(declare-fun res!54559 () Bool)

(assert (=> b!110359 (=> res!54559 e!71786)))

(assert (=> b!110359 (= res!54559 (= (h!2248 (toList!813 lt!56687)) lt!56528))))

(declare-fun b!110360 () Bool)

(assert (=> b!110360 (= e!71786 (contains!839 (t!5802 (toList!813 lt!56687)) lt!56528))))

(assert (= (and d!30967 res!54560) b!110359))

(assert (= (and b!110359 (not res!54559)) b!110360))

(declare-fun m!125101 () Bool)

(assert (=> d!30967 m!125101))

(declare-fun m!125103 () Bool)

(assert (=> d!30967 m!125103))

(declare-fun m!125105 () Bool)

(assert (=> b!110360 m!125105))

(assert (=> b!110080 d!30967))

(declare-fun d!30969 () Bool)

(declare-fun res!54561 () Bool)

(declare-fun e!71788 () Bool)

(assert (=> d!30969 (=> (not res!54561) (not e!71788))))

(assert (=> d!30969 (= res!54561 (simpleValid!75 (_2!1225 lt!56657)))))

(assert (=> d!30969 (= (valid!419 (_2!1225 lt!56657)) e!71788)))

(declare-fun b!110361 () Bool)

(declare-fun res!54562 () Bool)

(assert (=> b!110361 (=> (not res!54562) (not e!71788))))

(assert (=> b!110361 (= res!54562 (= (arrayCountValidKeys!0 (_keys!4341 (_2!1225 lt!56657)) #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))) (_size!508 (_2!1225 lt!56657))))))

(declare-fun b!110362 () Bool)

(declare-fun res!54563 () Bool)

(assert (=> b!110362 (=> (not res!54563) (not e!71788))))

(assert (=> b!110362 (= res!54563 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 (_2!1225 lt!56657)) (mask!6795 (_2!1225 lt!56657))))))

(declare-fun b!110363 () Bool)

(assert (=> b!110363 (= e!71788 (arrayNoDuplicates!0 (_keys!4341 (_2!1225 lt!56657)) #b00000000000000000000000000000000 Nil!1649))))

(assert (= (and d!30969 res!54561) b!110361))

(assert (= (and b!110361 res!54562) b!110362))

(assert (= (and b!110362 res!54563) b!110363))

(declare-fun m!125107 () Bool)

(assert (=> d!30969 m!125107))

(declare-fun m!125109 () Bool)

(assert (=> b!110361 m!125109))

(declare-fun m!125111 () Bool)

(assert (=> b!110362 m!125111))

(declare-fun m!125113 () Bool)

(assert (=> b!110363 m!125113))

(assert (=> d!30873 d!30969))

(assert (=> d!30873 d!30875))

(declare-fun d!30971 () Bool)

(declare-fun e!71789 () Bool)

(assert (=> d!30971 e!71789))

(declare-fun res!54564 () Bool)

(assert (=> d!30971 (=> res!54564 e!71789)))

(declare-fun lt!56887 () Bool)

(assert (=> d!30971 (= res!54564 (not lt!56887))))

(declare-fun lt!56884 () Bool)

(assert (=> d!30971 (= lt!56887 lt!56884)))

(declare-fun lt!56886 () Unit!3421)

(declare-fun e!71790 () Unit!3421)

(assert (=> d!30971 (= lt!56886 e!71790)))

(declare-fun c!19574 () Bool)

(assert (=> d!30971 (= c!19574 lt!56884)))

(assert (=> d!30971 (= lt!56884 (containsKey!161 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30971 (= (contains!837 lt!56753 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56887)))

(declare-fun b!110364 () Bool)

(declare-fun lt!56885 () Unit!3421)

(assert (=> b!110364 (= e!71790 lt!56885)))

(assert (=> b!110364 (= lt!56885 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110364 (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110365 () Bool)

(declare-fun Unit!3439 () Unit!3421)

(assert (=> b!110365 (= e!71790 Unit!3439)))

(declare-fun b!110366 () Bool)

(assert (=> b!110366 (= e!71789 (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30971 c!19574) b!110364))

(assert (= (and d!30971 (not c!19574)) b!110365))

(assert (= (and d!30971 (not res!54564)) b!110366))

(declare-fun m!125115 () Bool)

(assert (=> d!30971 m!125115))

(declare-fun m!125117 () Bool)

(assert (=> b!110364 m!125117))

(declare-fun m!125119 () Bool)

(assert (=> b!110364 m!125119))

(assert (=> b!110364 m!125119))

(declare-fun m!125121 () Bool)

(assert (=> b!110364 m!125121))

(assert (=> b!110366 m!125119))

(assert (=> b!110366 m!125119))

(assert (=> b!110366 m!125121))

(assert (=> bm!11748 d!30971))

(declare-fun d!30973 () Bool)

(assert (=> d!30973 (= (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (and (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110174 d!30973))

(declare-fun d!30975 () Bool)

(declare-fun lt!56888 () Bool)

(assert (=> d!30975 (= lt!56888 (select (content!112 (toList!813 lt!56695)) lt!56528))))

(declare-fun e!71792 () Bool)

(assert (=> d!30975 (= lt!56888 e!71792)))

(declare-fun res!54566 () Bool)

(assert (=> d!30975 (=> (not res!54566) (not e!71792))))

(assert (=> d!30975 (= res!54566 ((_ is Cons!1649) (toList!813 lt!56695)))))

(assert (=> d!30975 (= (contains!839 (toList!813 lt!56695) lt!56528) lt!56888)))

(declare-fun b!110367 () Bool)

(declare-fun e!71791 () Bool)

(assert (=> b!110367 (= e!71792 e!71791)))

(declare-fun res!54565 () Bool)

(assert (=> b!110367 (=> res!54565 e!71791)))

(assert (=> b!110367 (= res!54565 (= (h!2248 (toList!813 lt!56695)) lt!56528))))

(declare-fun b!110368 () Bool)

(assert (=> b!110368 (= e!71791 (contains!839 (t!5802 (toList!813 lt!56695)) lt!56528))))

(assert (= (and d!30975 res!54566) b!110367))

(assert (= (and b!110367 (not res!54565)) b!110368))

(declare-fun m!125123 () Bool)

(assert (=> d!30975 m!125123))

(declare-fun m!125125 () Bool)

(assert (=> d!30975 m!125125))

(declare-fun m!125127 () Bool)

(assert (=> b!110368 m!125127))

(assert (=> b!110084 d!30975))

(assert (=> b!110136 d!30921))

(declare-fun d!30977 () Bool)

(declare-fun e!71793 () Bool)

(assert (=> d!30977 e!71793))

(declare-fun res!54567 () Bool)

(assert (=> d!30977 (=> (not res!54567) (not e!71793))))

(declare-fun lt!56889 () ListLongMap!1595)

(assert (=> d!30977 (= res!54567 (contains!837 lt!56889 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!56892 () List!1653)

(assert (=> d!30977 (= lt!56889 (ListLongMap!1596 lt!56892))))

(declare-fun lt!56890 () Unit!3421)

(declare-fun lt!56891 () Unit!3421)

(assert (=> d!30977 (= lt!56890 lt!56891)))

(assert (=> d!30977 (= (getValueByKey!157 lt!56892 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!30977 (= lt!56891 (lemmaContainsTupThenGetReturnValue!75 lt!56892 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!30977 (= lt!56892 (insertStrictlySorted!77 (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!30977 (= (+!149 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56889)))

(declare-fun b!110369 () Bool)

(declare-fun res!54568 () Bool)

(assert (=> b!110369 (=> (not res!54568) (not e!71793))))

(assert (=> b!110369 (= res!54568 (= (getValueByKey!157 (toList!813 lt!56889) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!110370 () Bool)

(assert (=> b!110370 (= e!71793 (contains!839 (toList!813 lt!56889) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!30977 res!54567) b!110369))

(assert (= (and b!110369 res!54568) b!110370))

(declare-fun m!125129 () Bool)

(assert (=> d!30977 m!125129))

(declare-fun m!125131 () Bool)

(assert (=> d!30977 m!125131))

(declare-fun m!125133 () Bool)

(assert (=> d!30977 m!125133))

(declare-fun m!125135 () Bool)

(assert (=> d!30977 m!125135))

(declare-fun m!125137 () Bool)

(assert (=> b!110369 m!125137))

(declare-fun m!125139 () Bool)

(assert (=> b!110370 m!125139))

(assert (=> d!30891 d!30977))

(declare-fun d!30979 () Bool)

(assert (=> d!30979 (= (+!149 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (+!149 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(assert (=> d!30979 true))

(declare-fun _$28!167 () Unit!3421)

(assert (=> d!30979 (= (choose!690 lt!56522 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) _$28!167)))

(declare-fun bs!4533 () Bool)

(assert (= bs!4533 d!30979))

(assert (=> bs!4533 m!124781))

(assert (=> bs!4533 m!124781))

(assert (=> bs!4533 m!124783))

(assert (=> bs!4533 m!124775))

(assert (=> bs!4533 m!124775))

(assert (=> bs!4533 m!124777))

(assert (=> d!30891 d!30979))

(declare-fun d!30981 () Bool)

(declare-fun e!71794 () Bool)

(assert (=> d!30981 e!71794))

(declare-fun res!54569 () Bool)

(assert (=> d!30981 (=> (not res!54569) (not e!71794))))

(declare-fun lt!56893 () ListLongMap!1595)

(assert (=> d!30981 (= res!54569 (contains!837 lt!56893 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!56896 () List!1653)

(assert (=> d!30981 (= lt!56893 (ListLongMap!1596 lt!56896))))

(declare-fun lt!56894 () Unit!3421)

(declare-fun lt!56895 () Unit!3421)

(assert (=> d!30981 (= lt!56894 lt!56895)))

(assert (=> d!30981 (= (getValueByKey!157 lt!56896 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!30981 (= lt!56895 (lemmaContainsTupThenGetReturnValue!75 lt!56896 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!30981 (= lt!56896 (insertStrictlySorted!77 (toList!813 lt!56522) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!30981 (= (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56893)))

(declare-fun b!110371 () Bool)

(declare-fun res!54570 () Bool)

(assert (=> b!110371 (=> (not res!54570) (not e!71794))))

(assert (=> b!110371 (= res!54570 (= (getValueByKey!157 (toList!813 lt!56893) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!110372 () Bool)

(assert (=> b!110372 (= e!71794 (contains!839 (toList!813 lt!56893) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!30981 res!54569) b!110371))

(assert (= (and b!110371 res!54570) b!110372))

(declare-fun m!125141 () Bool)

(assert (=> d!30981 m!125141))

(declare-fun m!125143 () Bool)

(assert (=> d!30981 m!125143))

(declare-fun m!125145 () Bool)

(assert (=> d!30981 m!125145))

(declare-fun m!125147 () Bool)

(assert (=> d!30981 m!125147))

(declare-fun m!125149 () Bool)

(assert (=> b!110371 m!125149))

(declare-fun m!125151 () Bool)

(assert (=> b!110372 m!125151))

(assert (=> d!30891 d!30981))

(declare-fun d!30983 () Bool)

(declare-fun e!71795 () Bool)

(assert (=> d!30983 e!71795))

(declare-fun res!54571 () Bool)

(assert (=> d!30983 (=> (not res!54571) (not e!71795))))

(declare-fun lt!56897 () ListLongMap!1595)

(assert (=> d!30983 (= res!54571 (contains!837 lt!56897 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun lt!56900 () List!1653)

(assert (=> d!30983 (= lt!56897 (ListLongMap!1596 lt!56900))))

(declare-fun lt!56898 () Unit!3421)

(declare-fun lt!56899 () Unit!3421)

(assert (=> d!30983 (= lt!56898 lt!56899)))

(assert (=> d!30983 (= (getValueByKey!157 lt!56900 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!30983 (= lt!56899 (lemmaContainsTupThenGetReturnValue!75 lt!56900 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!30983 (= lt!56900 (insertStrictlySorted!77 (toList!813 lt!56522) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!30983 (= (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) lt!56897)))

(declare-fun b!110373 () Bool)

(declare-fun res!54572 () Bool)

(assert (=> b!110373 (=> (not res!54572) (not e!71795))))

(assert (=> b!110373 (= res!54572 (= (getValueByKey!157 (toList!813 lt!56897) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!110374 () Bool)

(assert (=> b!110374 (= e!71795 (contains!839 (toList!813 lt!56897) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(assert (= (and d!30983 res!54571) b!110373))

(assert (= (and b!110373 res!54572) b!110374))

(declare-fun m!125153 () Bool)

(assert (=> d!30983 m!125153))

(declare-fun m!125155 () Bool)

(assert (=> d!30983 m!125155))

(declare-fun m!125157 () Bool)

(assert (=> d!30983 m!125157))

(declare-fun m!125159 () Bool)

(assert (=> d!30983 m!125159))

(declare-fun m!125161 () Bool)

(assert (=> b!110373 m!125161))

(declare-fun m!125163 () Bool)

(assert (=> b!110374 m!125163))

(assert (=> d!30891 d!30983))

(declare-fun d!30985 () Bool)

(declare-fun e!71796 () Bool)

(assert (=> d!30985 e!71796))

(declare-fun res!54573 () Bool)

(assert (=> d!30985 (=> (not res!54573) (not e!71796))))

(declare-fun lt!56901 () ListLongMap!1595)

(assert (=> d!30985 (= res!54573 (contains!837 lt!56901 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun lt!56904 () List!1653)

(assert (=> d!30985 (= lt!56901 (ListLongMap!1596 lt!56904))))

(declare-fun lt!56902 () Unit!3421)

(declare-fun lt!56903 () Unit!3421)

(assert (=> d!30985 (= lt!56902 lt!56903)))

(assert (=> d!30985 (= (getValueByKey!157 lt!56904 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!30985 (= lt!56903 (lemmaContainsTupThenGetReturnValue!75 lt!56904 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!30985 (= lt!56904 (insertStrictlySorted!77 (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!30985 (= (+!149 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) lt!56901)))

(declare-fun b!110375 () Bool)

(declare-fun res!54574 () Bool)

(assert (=> b!110375 (=> (not res!54574) (not e!71796))))

(assert (=> b!110375 (= res!54574 (= (getValueByKey!157 (toList!813 lt!56901) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!110376 () Bool)

(assert (=> b!110376 (= e!71796 (contains!839 (toList!813 lt!56901) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(assert (= (and d!30985 res!54573) b!110375))

(assert (= (and b!110375 res!54574) b!110376))

(declare-fun m!125165 () Bool)

(assert (=> d!30985 m!125165))

(declare-fun m!125167 () Bool)

(assert (=> d!30985 m!125167))

(declare-fun m!125169 () Bool)

(assert (=> d!30985 m!125169))

(declare-fun m!125171 () Bool)

(assert (=> d!30985 m!125171))

(declare-fun m!125173 () Bool)

(assert (=> b!110375 m!125173))

(declare-fun m!125175 () Bool)

(assert (=> b!110376 m!125175))

(assert (=> d!30891 d!30985))

(declare-fun d!30987 () Bool)

(declare-fun lt!56905 () Bool)

(assert (=> d!30987 (= lt!56905 (select (content!112 (toList!813 lt!56691)) lt!56517))))

(declare-fun e!71798 () Bool)

(assert (=> d!30987 (= lt!56905 e!71798)))

(declare-fun res!54576 () Bool)

(assert (=> d!30987 (=> (not res!54576) (not e!71798))))

(assert (=> d!30987 (= res!54576 ((_ is Cons!1649) (toList!813 lt!56691)))))

(assert (=> d!30987 (= (contains!839 (toList!813 lt!56691) lt!56517) lt!56905)))

(declare-fun b!110377 () Bool)

(declare-fun e!71797 () Bool)

(assert (=> b!110377 (= e!71798 e!71797)))

(declare-fun res!54575 () Bool)

(assert (=> b!110377 (=> res!54575 e!71797)))

(assert (=> b!110377 (= res!54575 (= (h!2248 (toList!813 lt!56691)) lt!56517))))

(declare-fun b!110378 () Bool)

(assert (=> b!110378 (= e!71797 (contains!839 (t!5802 (toList!813 lt!56691)) lt!56517))))

(assert (= (and d!30987 res!54576) b!110377))

(assert (= (and b!110377 (not res!54575)) b!110378))

(declare-fun m!125177 () Bool)

(assert (=> d!30987 m!125177))

(declare-fun m!125179 () Bool)

(assert (=> d!30987 m!125179))

(declare-fun m!125181 () Bool)

(assert (=> b!110378 m!125181))

(assert (=> b!110082 d!30987))

(declare-fun d!30989 () Bool)

(assert (=> d!30989 (= (+!149 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56651 lt!56527 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56908 () Unit!3421)

(declare-fun choose!696 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 V!3243 Int) Unit!3421)

(assert (=> d!30989 (= lt!56908 (choose!696 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56651 (zeroValue!2498 newMap!16) lt!56527 (minValue!2498 newMap!16) (defaultEntry!2627 newMap!16)))))

(assert (=> d!30989 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30989 (= (lemmaChangeZeroKeyThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56651 (zeroValue!2498 newMap!16) lt!56527 (minValue!2498 newMap!16) (defaultEntry!2627 newMap!16)) lt!56908)))

(declare-fun bs!4534 () Bool)

(assert (= bs!4534 d!30989))

(declare-fun m!125183 () Bool)

(assert (=> bs!4534 m!125183))

(assert (=> bs!4534 m!124677))

(declare-fun m!125185 () Bool)

(assert (=> bs!4534 m!125185))

(declare-fun m!125187 () Bool)

(assert (=> bs!4534 m!125187))

(assert (=> bs!4534 m!124861))

(assert (=> bs!4534 m!124677))

(assert (=> b!110003 d!30989))

(assert (=> b!110172 d!30973))

(declare-fun d!30991 () Bool)

(declare-fun e!71799 () Bool)

(assert (=> d!30991 e!71799))

(declare-fun res!54577 () Bool)

(assert (=> d!30991 (=> res!54577 e!71799)))

(declare-fun lt!56912 () Bool)

(assert (=> d!30991 (= res!54577 (not lt!56912))))

(declare-fun lt!56909 () Bool)

(assert (=> d!30991 (= lt!56912 lt!56909)))

(declare-fun lt!56911 () Unit!3421)

(declare-fun e!71800 () Unit!3421)

(assert (=> d!30991 (= lt!56911 e!71800)))

(declare-fun c!19575 () Bool)

(assert (=> d!30991 (= c!19575 lt!56909)))

(assert (=> d!30991 (= lt!56909 (containsKey!161 (toList!813 lt!56699) (_1!1224 lt!56517)))))

(assert (=> d!30991 (= (contains!837 lt!56699 (_1!1224 lt!56517)) lt!56912)))

(declare-fun b!110379 () Bool)

(declare-fun lt!56910 () Unit!3421)

(assert (=> b!110379 (= e!71800 lt!56910)))

(assert (=> b!110379 (= lt!56910 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56699) (_1!1224 lt!56517)))))

(assert (=> b!110379 (isDefined!111 (getValueByKey!157 (toList!813 lt!56699) (_1!1224 lt!56517)))))

(declare-fun b!110380 () Bool)

(declare-fun Unit!3440 () Unit!3421)

(assert (=> b!110380 (= e!71800 Unit!3440)))

(declare-fun b!110381 () Bool)

(assert (=> b!110381 (= e!71799 (isDefined!111 (getValueByKey!157 (toList!813 lt!56699) (_1!1224 lt!56517))))))

(assert (= (and d!30991 c!19575) b!110379))

(assert (= (and d!30991 (not c!19575)) b!110380))

(assert (= (and d!30991 (not res!54577)) b!110381))

(declare-fun m!125189 () Bool)

(assert (=> d!30991 m!125189))

(declare-fun m!125191 () Bool)

(assert (=> b!110379 m!125191))

(assert (=> b!110379 m!124771))

(assert (=> b!110379 m!124771))

(declare-fun m!125193 () Bool)

(assert (=> b!110379 m!125193))

(assert (=> b!110381 m!124771))

(assert (=> b!110381 m!124771))

(assert (=> b!110381 m!125193))

(assert (=> d!30889 d!30991))

(declare-fun b!110384 () Bool)

(declare-fun e!71802 () Option!163)

(assert (=> b!110384 (= e!71802 (getValueByKey!157 (t!5802 lt!56702) (_1!1224 lt!56517)))))

(declare-fun d!30993 () Bool)

(declare-fun c!19576 () Bool)

(assert (=> d!30993 (= c!19576 (and ((_ is Cons!1649) lt!56702) (= (_1!1224 (h!2248 lt!56702)) (_1!1224 lt!56517))))))

(declare-fun e!71801 () Option!163)

(assert (=> d!30993 (= (getValueByKey!157 lt!56702 (_1!1224 lt!56517)) e!71801)))

(declare-fun b!110385 () Bool)

(assert (=> b!110385 (= e!71802 None!161)))

(declare-fun b!110383 () Bool)

(assert (=> b!110383 (= e!71801 e!71802)))

(declare-fun c!19577 () Bool)

(assert (=> b!110383 (= c!19577 (and ((_ is Cons!1649) lt!56702) (not (= (_1!1224 (h!2248 lt!56702)) (_1!1224 lt!56517)))))))

(declare-fun b!110382 () Bool)

(assert (=> b!110382 (= e!71801 (Some!162 (_2!1224 (h!2248 lt!56702))))))

(assert (= (and d!30993 c!19576) b!110382))

(assert (= (and d!30993 (not c!19576)) b!110383))

(assert (= (and b!110383 c!19577) b!110384))

(assert (= (and b!110383 (not c!19577)) b!110385))

(declare-fun m!125195 () Bool)

(assert (=> b!110384 m!125195))

(assert (=> d!30889 d!30993))

(declare-fun d!30995 () Bool)

(assert (=> d!30995 (= (getValueByKey!157 lt!56702 (_1!1224 lt!56517)) (Some!162 (_2!1224 lt!56517)))))

(declare-fun lt!56913 () Unit!3421)

(assert (=> d!30995 (= lt!56913 (choose!693 lt!56702 (_1!1224 lt!56517) (_2!1224 lt!56517)))))

(declare-fun e!71803 () Bool)

(assert (=> d!30995 e!71803))

(declare-fun res!54578 () Bool)

(assert (=> d!30995 (=> (not res!54578) (not e!71803))))

(assert (=> d!30995 (= res!54578 (isStrictlySorted!306 lt!56702))))

(assert (=> d!30995 (= (lemmaContainsTupThenGetReturnValue!75 lt!56702 (_1!1224 lt!56517) (_2!1224 lt!56517)) lt!56913)))

(declare-fun b!110386 () Bool)

(declare-fun res!54579 () Bool)

(assert (=> b!110386 (=> (not res!54579) (not e!71803))))

(assert (=> b!110386 (= res!54579 (containsKey!161 lt!56702 (_1!1224 lt!56517)))))

(declare-fun b!110387 () Bool)

(assert (=> b!110387 (= e!71803 (contains!839 lt!56702 (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(assert (= (and d!30995 res!54578) b!110386))

(assert (= (and b!110386 res!54579) b!110387))

(assert (=> d!30995 m!124765))

(declare-fun m!125197 () Bool)

(assert (=> d!30995 m!125197))

(declare-fun m!125199 () Bool)

(assert (=> d!30995 m!125199))

(declare-fun m!125201 () Bool)

(assert (=> b!110386 m!125201))

(declare-fun m!125203 () Bool)

(assert (=> b!110387 m!125203))

(assert (=> d!30889 d!30995))

(declare-fun c!19579 () Bool)

(declare-fun b!110388 () Bool)

(declare-fun c!19578 () Bool)

(declare-fun e!71806 () List!1653)

(assert (=> b!110388 (= e!71806 (ite c!19578 (t!5802 (toList!813 (+!149 lt!56522 lt!56528))) (ite c!19579 (Cons!1649 (h!2248 (toList!813 (+!149 lt!56522 lt!56528))) (t!5802 (toList!813 (+!149 lt!56522 lt!56528)))) Nil!1650)))))

(declare-fun b!110389 () Bool)

(declare-fun e!71808 () List!1653)

(declare-fun call!11785 () List!1653)

(assert (=> b!110389 (= e!71808 call!11785)))

(declare-fun call!11783 () List!1653)

(declare-fun bm!11780 () Bool)

(declare-fun c!19581 () Bool)

(assert (=> bm!11780 (= call!11783 ($colon$colon!82 e!71806 (ite c!19581 (h!2248 (toList!813 (+!149 lt!56522 lt!56528))) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517)))))))

(declare-fun c!19580 () Bool)

(assert (=> bm!11780 (= c!19580 c!19581)))

(declare-fun b!110390 () Bool)

(declare-fun e!71804 () List!1653)

(assert (=> b!110390 (= e!71804 e!71808)))

(assert (=> b!110390 (= c!19578 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 lt!56528))) (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 lt!56528)))) (_1!1224 lt!56517))))))

(declare-fun b!110391 () Bool)

(assert (=> b!110391 (= e!71806 (insertStrictlySorted!77 (t!5802 (toList!813 (+!149 lt!56522 lt!56528))) (_1!1224 lt!56517) (_2!1224 lt!56517)))))

(declare-fun bm!11781 () Bool)

(declare-fun call!11784 () List!1653)

(assert (=> bm!11781 (= call!11784 call!11785)))

(declare-fun d!30997 () Bool)

(declare-fun e!71807 () Bool)

(assert (=> d!30997 e!71807))

(declare-fun res!54581 () Bool)

(assert (=> d!30997 (=> (not res!54581) (not e!71807))))

(declare-fun lt!56914 () List!1653)

(assert (=> d!30997 (= res!54581 (isStrictlySorted!306 lt!56914))))

(assert (=> d!30997 (= lt!56914 e!71804)))

(assert (=> d!30997 (= c!19581 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 lt!56528))) (bvslt (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 lt!56528)))) (_1!1224 lt!56517))))))

(assert (=> d!30997 (isStrictlySorted!306 (toList!813 (+!149 lt!56522 lt!56528)))))

(assert (=> d!30997 (= (insertStrictlySorted!77 (toList!813 (+!149 lt!56522 lt!56528)) (_1!1224 lt!56517) (_2!1224 lt!56517)) lt!56914)))

(declare-fun b!110392 () Bool)

(declare-fun res!54580 () Bool)

(assert (=> b!110392 (=> (not res!54580) (not e!71807))))

(assert (=> b!110392 (= res!54580 (containsKey!161 lt!56914 (_1!1224 lt!56517)))))

(declare-fun b!110393 () Bool)

(declare-fun e!71805 () List!1653)

(assert (=> b!110393 (= e!71805 call!11784)))

(declare-fun b!110394 () Bool)

(assert (=> b!110394 (= e!71805 call!11784)))

(declare-fun b!110395 () Bool)

(assert (=> b!110395 (= e!71807 (contains!839 lt!56914 (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun b!110396 () Bool)

(assert (=> b!110396 (= e!71804 call!11783)))

(declare-fun bm!11782 () Bool)

(assert (=> bm!11782 (= call!11785 call!11783)))

(declare-fun b!110397 () Bool)

(assert (=> b!110397 (= c!19579 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 lt!56528))) (bvsgt (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 lt!56528)))) (_1!1224 lt!56517))))))

(assert (=> b!110397 (= e!71808 e!71805)))

(assert (= (and d!30997 c!19581) b!110396))

(assert (= (and d!30997 (not c!19581)) b!110390))

(assert (= (and b!110390 c!19578) b!110389))

(assert (= (and b!110390 (not c!19578)) b!110397))

(assert (= (and b!110397 c!19579) b!110393))

(assert (= (and b!110397 (not c!19579)) b!110394))

(assert (= (or b!110393 b!110394) bm!11781))

(assert (= (or b!110389 bm!11781) bm!11782))

(assert (= (or b!110396 bm!11782) bm!11780))

(assert (= (and bm!11780 c!19580) b!110391))

(assert (= (and bm!11780 (not c!19580)) b!110388))

(assert (= (and d!30997 res!54581) b!110392))

(assert (= (and b!110392 res!54580) b!110395))

(declare-fun m!125205 () Bool)

(assert (=> d!30997 m!125205))

(declare-fun m!125207 () Bool)

(assert (=> d!30997 m!125207))

(declare-fun m!125209 () Bool)

(assert (=> bm!11780 m!125209))

(declare-fun m!125211 () Bool)

(assert (=> b!110395 m!125211))

(declare-fun m!125213 () Bool)

(assert (=> b!110391 m!125213))

(declare-fun m!125215 () Bool)

(assert (=> b!110392 m!125215))

(assert (=> d!30889 d!30997))

(declare-fun b!110398 () Bool)

(declare-fun e!71815 () Bool)

(declare-fun lt!56917 () ListLongMap!1595)

(assert (=> b!110398 (= e!71815 (isEmpty!381 lt!56917))))

(declare-fun bm!11783 () Bool)

(declare-fun call!11786 () ListLongMap!1595)

(assert (=> bm!11783 (= call!11786 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!110399 () Bool)

(declare-fun e!71813 () ListLongMap!1595)

(assert (=> b!110399 (= e!71813 (ListLongMap!1596 Nil!1650))))

(declare-fun b!110400 () Bool)

(declare-fun e!71809 () Bool)

(assert (=> b!110400 (= e!71809 e!71815)))

(declare-fun c!19583 () Bool)

(assert (=> b!110400 (= c!19583 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110401 () Bool)

(declare-fun e!71810 () Bool)

(assert (=> b!110401 (= e!71810 e!71809)))

(declare-fun c!19585 () Bool)

(declare-fun e!71812 () Bool)

(assert (=> b!110401 (= c!19585 e!71812)))

(declare-fun res!54584 () Bool)

(assert (=> b!110401 (=> (not res!54584) (not e!71812))))

(assert (=> b!110401 (= res!54584 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110402 () Bool)

(assert (=> b!110402 (= e!71812 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!110402 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!110403 () Bool)

(declare-fun res!54583 () Bool)

(assert (=> b!110403 (=> (not res!54583) (not e!71810))))

(assert (=> b!110403 (= res!54583 (not (contains!837 lt!56917 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!30999 () Bool)

(assert (=> d!30999 e!71810))

(declare-fun res!54582 () Bool)

(assert (=> d!30999 (=> (not res!54582) (not e!71810))))

(assert (=> d!30999 (= res!54582 (not (contains!837 lt!56917 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30999 (= lt!56917 e!71813)))

(declare-fun c!19584 () Bool)

(assert (=> d!30999 (= c!19584 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> d!30999 (validMask!0 (mask!6795 (v!2929 (underlying!370 thiss!992))))))

(assert (=> d!30999 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))) lt!56917)))

(declare-fun b!110404 () Bool)

(declare-fun lt!56916 () Unit!3421)

(declare-fun lt!56920 () Unit!3421)

(assert (=> b!110404 (= lt!56916 lt!56920)))

(declare-fun lt!56918 () (_ BitVec 64))

(declare-fun lt!56919 () (_ BitVec 64))

(declare-fun lt!56915 () ListLongMap!1595)

(declare-fun lt!56921 () V!3243)

(assert (=> b!110404 (not (contains!837 (+!149 lt!56915 (tuple2!2429 lt!56918 lt!56921)) lt!56919))))

(assert (=> b!110404 (= lt!56920 (addStillNotContains!50 lt!56915 lt!56918 lt!56921 lt!56919))))

(assert (=> b!110404 (= lt!56919 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110404 (= lt!56921 (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110404 (= lt!56918 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!110404 (= lt!56915 call!11786)))

(declare-fun e!71814 () ListLongMap!1595)

(assert (=> b!110404 (= e!71814 (+!149 call!11786 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110405 () Bool)

(assert (=> b!110405 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> b!110405 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2338 (_values!2610 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun e!71811 () Bool)

(assert (=> b!110405 (= e!71811 (= (apply!100 lt!56917 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110406 () Bool)

(assert (=> b!110406 (= e!71813 e!71814)))

(declare-fun c!19582 () Bool)

(assert (=> b!110406 (= c!19582 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!110407 () Bool)

(assert (=> b!110407 (= e!71809 e!71811)))

(assert (=> b!110407 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun res!54585 () Bool)

(assert (=> b!110407 (= res!54585 (contains!837 lt!56917 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!110407 (=> (not res!54585) (not e!71811))))

(declare-fun b!110408 () Bool)

(assert (=> b!110408 (= e!71815 (= lt!56917 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110409 () Bool)

(assert (=> b!110409 (= e!71814 call!11786)))

(assert (= (and d!30999 c!19584) b!110399))

(assert (= (and d!30999 (not c!19584)) b!110406))

(assert (= (and b!110406 c!19582) b!110404))

(assert (= (and b!110406 (not c!19582)) b!110409))

(assert (= (or b!110404 b!110409) bm!11783))

(assert (= (and d!30999 res!54582) b!110403))

(assert (= (and b!110403 res!54583) b!110401))

(assert (= (and b!110401 res!54584) b!110402))

(assert (= (and b!110401 c!19585) b!110407))

(assert (= (and b!110401 (not c!19585)) b!110400))

(assert (= (and b!110407 res!54585) b!110405))

(assert (= (and b!110400 c!19583) b!110408))

(assert (= (and b!110400 (not c!19583)) b!110398))

(declare-fun b_lambda!4965 () Bool)

(assert (=> (not b_lambda!4965) (not b!110404)))

(assert (=> b!110404 t!5798))

(declare-fun b_and!6813 () Bool)

(assert (= b_and!6809 (and (=> t!5798 result!3535) b_and!6813)))

(assert (=> b!110404 t!5800))

(declare-fun b_and!6815 () Bool)

(assert (= b_and!6811 (and (=> t!5800 result!3539) b_and!6815)))

(declare-fun b_lambda!4967 () Bool)

(assert (=> (not b_lambda!4967) (not b!110405)))

(assert (=> b!110405 t!5798))

(declare-fun b_and!6817 () Bool)

(assert (= b_and!6813 (and (=> t!5798 result!3535) b_and!6817)))

(assert (=> b!110405 t!5800))

(declare-fun b_and!6819 () Bool)

(assert (= b_and!6815 (and (=> t!5800 result!3539) b_and!6819)))

(declare-fun m!125217 () Bool)

(assert (=> d!30999 m!125217))

(assert (=> d!30999 m!124513))

(declare-fun m!125219 () Bool)

(assert (=> b!110398 m!125219))

(declare-fun m!125221 () Bool)

(assert (=> b!110404 m!125221))

(assert (=> b!110404 m!124559))

(assert (=> b!110404 m!125221))

(declare-fun m!125223 () Bool)

(assert (=> b!110404 m!125223))

(declare-fun m!125225 () Bool)

(assert (=> b!110404 m!125225))

(declare-fun m!125227 () Bool)

(assert (=> b!110404 m!125227))

(declare-fun m!125229 () Bool)

(assert (=> b!110404 m!125229))

(declare-fun m!125231 () Bool)

(assert (=> b!110404 m!125231))

(assert (=> b!110404 m!125225))

(assert (=> b!110404 m!124559))

(declare-fun m!125233 () Bool)

(assert (=> b!110404 m!125233))

(declare-fun m!125235 () Bool)

(assert (=> bm!11783 m!125235))

(assert (=> b!110407 m!125229))

(assert (=> b!110407 m!125229))

(declare-fun m!125237 () Bool)

(assert (=> b!110407 m!125237))

(assert (=> b!110408 m!125235))

(assert (=> b!110405 m!124559))

(assert (=> b!110405 m!125229))

(assert (=> b!110405 m!125225))

(assert (=> b!110405 m!124559))

(assert (=> b!110405 m!125233))

(assert (=> b!110405 m!125229))

(declare-fun m!125239 () Bool)

(assert (=> b!110405 m!125239))

(assert (=> b!110405 m!125225))

(assert (=> b!110406 m!125229))

(assert (=> b!110406 m!125229))

(declare-fun m!125241 () Bool)

(assert (=> b!110406 m!125241))

(assert (=> b!110402 m!125229))

(assert (=> b!110402 m!125229))

(assert (=> b!110402 m!125241))

(declare-fun m!125243 () Bool)

(assert (=> b!110403 m!125243))

(assert (=> bm!11731 d!30999))

(declare-fun d!31001 () Bool)

(declare-fun e!71816 () Bool)

(assert (=> d!31001 e!71816))

(declare-fun res!54586 () Bool)

(assert (=> d!31001 (=> (not res!54586) (not e!71816))))

(declare-fun lt!56922 () ListLongMap!1595)

(assert (=> d!31001 (= res!54586 (contains!837 lt!56922 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun lt!56925 () List!1653)

(assert (=> d!31001 (= lt!56922 (ListLongMap!1596 lt!56925))))

(declare-fun lt!56923 () Unit!3421)

(declare-fun lt!56924 () Unit!3421)

(assert (=> d!31001 (= lt!56923 lt!56924)))

(assert (=> d!31001 (= (getValueByKey!157 lt!56925 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) (Some!162 (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31001 (= lt!56924 (lemmaContainsTupThenGetReturnValue!75 lt!56925 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31001 (= lt!56925 (insertStrictlySorted!77 (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752))) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31001 (= (+!149 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752)) (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56922)))

(declare-fun b!110410 () Bool)

(declare-fun res!54587 () Bool)

(assert (=> b!110410 (=> (not res!54587) (not e!71816))))

(assert (=> b!110410 (= res!54587 (= (getValueByKey!157 (toList!813 lt!56922) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) (Some!162 (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!110411 () Bool)

(assert (=> b!110411 (= e!71816 (contains!839 (toList!813 lt!56922) (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (= (and d!31001 res!54586) b!110410))

(assert (= (and b!110410 res!54587) b!110411))

(declare-fun m!125245 () Bool)

(assert (=> d!31001 m!125245))

(declare-fun m!125247 () Bool)

(assert (=> d!31001 m!125247))

(declare-fun m!125249 () Bool)

(assert (=> d!31001 m!125249))

(declare-fun m!125251 () Bool)

(assert (=> d!31001 m!125251))

(declare-fun m!125253 () Bool)

(assert (=> b!110410 m!125253))

(declare-fun m!125255 () Bool)

(assert (=> b!110411 m!125255))

(assert (=> bm!11747 d!31001))

(declare-fun d!31003 () Bool)

(declare-fun e!71817 () Bool)

(assert (=> d!31003 e!71817))

(declare-fun res!54588 () Bool)

(assert (=> d!31003 (=> res!54588 e!71817)))

(declare-fun lt!56929 () Bool)

(assert (=> d!31003 (= res!54588 (not lt!56929))))

(declare-fun lt!56926 () Bool)

(assert (=> d!31003 (= lt!56929 lt!56926)))

(declare-fun lt!56928 () Unit!3421)

(declare-fun e!71818 () Unit!3421)

(assert (=> d!31003 (= lt!56928 e!71818)))

(declare-fun c!19586 () Bool)

(assert (=> d!31003 (= c!19586 lt!56926)))

(assert (=> d!31003 (= lt!56926 (containsKey!161 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(assert (=> d!31003 (= (contains!837 call!11726 (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))) lt!56929)))

(declare-fun b!110412 () Bool)

(declare-fun lt!56927 () Unit!3421)

(assert (=> b!110412 (= e!71818 lt!56927)))

(assert (=> b!110412 (= lt!56927 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(assert (=> b!110412 (isDefined!111 (getValueByKey!157 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(declare-fun b!110413 () Bool)

(declare-fun Unit!3441 () Unit!3421)

(assert (=> b!110413 (= e!71818 Unit!3441)))

(declare-fun b!110414 () Bool)

(assert (=> b!110414 (= e!71817 (isDefined!111 (getValueByKey!157 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639)))))))

(assert (= (and d!31003 c!19586) b!110412))

(assert (= (and d!31003 (not c!19586)) b!110413))

(assert (= (and d!31003 (not res!54588)) b!110414))

(assert (=> d!31003 m!124655))

(declare-fun m!125257 () Bool)

(assert (=> d!31003 m!125257))

(assert (=> b!110412 m!124655))

(declare-fun m!125259 () Bool)

(assert (=> b!110412 m!125259))

(assert (=> b!110412 m!124655))

(declare-fun m!125261 () Bool)

(assert (=> b!110412 m!125261))

(assert (=> b!110412 m!125261))

(declare-fun m!125263 () Bool)

(assert (=> b!110412 m!125263))

(assert (=> b!110414 m!124655))

(assert (=> b!110414 m!125261))

(assert (=> b!110414 m!125261))

(assert (=> b!110414 m!125263))

(assert (=> b!109985 d!31003))

(declare-fun d!31005 () Bool)

(declare-fun e!71821 () Bool)

(assert (=> d!31005 e!71821))

(declare-fun res!54591 () Bool)

(assert (=> d!31005 (=> (not res!54591) (not e!71821))))

(assert (=> d!31005 (= res!54591 (and (bvsge (index!3235 lt!56639) #b00000000000000000000000000000000) (bvslt (index!3235 lt!56639) (size!2337 (_keys!4341 newMap!16)))))))

(declare-fun lt!56932 () Unit!3421)

(declare-fun choose!697 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) Int) Unit!3421)

(assert (=> d!31005 (= lt!56932 (choose!697 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3235 lt!56639) (defaultEntry!2627 newMap!16)))))

(assert (=> d!31005 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31005 (= (lemmaValidKeyInArrayIsInListMap!107 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3235 lt!56639) (defaultEntry!2627 newMap!16)) lt!56932)))

(declare-fun b!110417 () Bool)

(assert (=> b!110417 (= e!71821 (contains!837 (getCurrentListMap!489 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(assert (= (and d!31005 res!54591) b!110417))

(declare-fun m!125265 () Bool)

(assert (=> d!31005 m!125265))

(assert (=> d!31005 m!124861))

(declare-fun m!125267 () Bool)

(assert (=> b!110417 m!125267))

(assert (=> b!110417 m!124655))

(assert (=> b!110417 m!125267))

(assert (=> b!110417 m!124655))

(declare-fun m!125269 () Bool)

(assert (=> b!110417 m!125269))

(assert (=> b!109985 d!31005))

(declare-fun d!31007 () Bool)

(declare-fun e!71824 () Bool)

(assert (=> d!31007 e!71824))

(declare-fun res!54594 () Bool)

(assert (=> d!31007 (=> (not res!54594) (not e!71824))))

(assert (=> d!31007 (= res!54594 (and (bvsge (index!3235 lt!56639) #b00000000000000000000000000000000) (bvslt (index!3235 lt!56639) (size!2338 (_values!2610 newMap!16)))))))

(declare-fun lt!56935 () Unit!3421)

(declare-fun choose!698 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) (_ BitVec 64) V!3243 Int) Unit!3421)

(assert (=> d!31007 (= lt!56935 (choose!698 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3235 lt!56639) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 (defaultEntry!2627 newMap!16)))))

(assert (=> d!31007 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31007 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3235 lt!56639) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 (defaultEntry!2627 newMap!16)) lt!56935)))

(declare-fun b!110420 () Bool)

(assert (=> b!110420 (= e!71824 (= (+!149 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (getCurrentListMap!489 (_keys!4341 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))))))

(assert (= (and d!31007 res!54594) b!110420))

(assert (=> d!31007 m!124515))

(declare-fun m!125271 () Bool)

(assert (=> d!31007 m!125271))

(assert (=> d!31007 m!124861))

(assert (=> b!110420 m!124677))

(assert (=> b!110420 m!124677))

(declare-fun m!125273 () Bool)

(assert (=> b!110420 m!125273))

(assert (=> b!110420 m!124651))

(declare-fun m!125275 () Bool)

(assert (=> b!110420 m!125275))

(assert (=> b!109985 d!31007))

(declare-fun d!31009 () Bool)

(declare-fun e!71825 () Bool)

(assert (=> d!31009 e!71825))

(declare-fun res!54595 () Bool)

(assert (=> d!31009 (=> res!54595 e!71825)))

(declare-fun lt!56939 () Bool)

(assert (=> d!31009 (= res!54595 (not lt!56939))))

(declare-fun lt!56936 () Bool)

(assert (=> d!31009 (= lt!56939 lt!56936)))

(declare-fun lt!56938 () Unit!3421)

(declare-fun e!71826 () Unit!3421)

(assert (=> d!31009 (= lt!56938 e!71826)))

(declare-fun c!19587 () Bool)

(assert (=> d!31009 (= c!19587 lt!56936)))

(assert (=> d!31009 (= lt!56936 (containsKey!161 (toList!813 lt!56695) (_1!1224 lt!56528)))))

(assert (=> d!31009 (= (contains!837 lt!56695 (_1!1224 lt!56528)) lt!56939)))

(declare-fun b!110421 () Bool)

(declare-fun lt!56937 () Unit!3421)

(assert (=> b!110421 (= e!71826 lt!56937)))

(assert (=> b!110421 (= lt!56937 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56695) (_1!1224 lt!56528)))))

(assert (=> b!110421 (isDefined!111 (getValueByKey!157 (toList!813 lt!56695) (_1!1224 lt!56528)))))

(declare-fun b!110422 () Bool)

(declare-fun Unit!3442 () Unit!3421)

(assert (=> b!110422 (= e!71826 Unit!3442)))

(declare-fun b!110423 () Bool)

(assert (=> b!110423 (= e!71825 (isDefined!111 (getValueByKey!157 (toList!813 lt!56695) (_1!1224 lt!56528))))))

(assert (= (and d!31009 c!19587) b!110421))

(assert (= (and d!31009 (not c!19587)) b!110422))

(assert (= (and d!31009 (not res!54595)) b!110423))

(declare-fun m!125277 () Bool)

(assert (=> d!31009 m!125277))

(declare-fun m!125279 () Bool)

(assert (=> b!110421 m!125279))

(assert (=> b!110421 m!124759))

(assert (=> b!110421 m!124759))

(declare-fun m!125281 () Bool)

(assert (=> b!110421 m!125281))

(assert (=> b!110423 m!124759))

(assert (=> b!110423 m!124759))

(assert (=> b!110423 m!125281))

(assert (=> d!30885 d!31009))

(declare-fun b!110426 () Bool)

(declare-fun e!71828 () Option!163)

(assert (=> b!110426 (= e!71828 (getValueByKey!157 (t!5802 lt!56698) (_1!1224 lt!56528)))))

(declare-fun d!31011 () Bool)

(declare-fun c!19588 () Bool)

(assert (=> d!31011 (= c!19588 (and ((_ is Cons!1649) lt!56698) (= (_1!1224 (h!2248 lt!56698)) (_1!1224 lt!56528))))))

(declare-fun e!71827 () Option!163)

(assert (=> d!31011 (= (getValueByKey!157 lt!56698 (_1!1224 lt!56528)) e!71827)))

(declare-fun b!110427 () Bool)

(assert (=> b!110427 (= e!71828 None!161)))

(declare-fun b!110425 () Bool)

(assert (=> b!110425 (= e!71827 e!71828)))

(declare-fun c!19589 () Bool)

(assert (=> b!110425 (= c!19589 (and ((_ is Cons!1649) lt!56698) (not (= (_1!1224 (h!2248 lt!56698)) (_1!1224 lt!56528)))))))

(declare-fun b!110424 () Bool)

(assert (=> b!110424 (= e!71827 (Some!162 (_2!1224 (h!2248 lt!56698))))))

(assert (= (and d!31011 c!19588) b!110424))

(assert (= (and d!31011 (not c!19588)) b!110425))

(assert (= (and b!110425 c!19589) b!110426))

(assert (= (and b!110425 (not c!19589)) b!110427))

(declare-fun m!125283 () Bool)

(assert (=> b!110426 m!125283))

(assert (=> d!30885 d!31011))

(declare-fun d!31013 () Bool)

(assert (=> d!31013 (= (getValueByKey!157 lt!56698 (_1!1224 lt!56528)) (Some!162 (_2!1224 lt!56528)))))

(declare-fun lt!56940 () Unit!3421)

(assert (=> d!31013 (= lt!56940 (choose!693 lt!56698 (_1!1224 lt!56528) (_2!1224 lt!56528)))))

(declare-fun e!71829 () Bool)

(assert (=> d!31013 e!71829))

(declare-fun res!54596 () Bool)

(assert (=> d!31013 (=> (not res!54596) (not e!71829))))

(assert (=> d!31013 (= res!54596 (isStrictlySorted!306 lt!56698))))

(assert (=> d!31013 (= (lemmaContainsTupThenGetReturnValue!75 lt!56698 (_1!1224 lt!56528) (_2!1224 lt!56528)) lt!56940)))

(declare-fun b!110428 () Bool)

(declare-fun res!54597 () Bool)

(assert (=> b!110428 (=> (not res!54597) (not e!71829))))

(assert (=> b!110428 (= res!54597 (containsKey!161 lt!56698 (_1!1224 lt!56528)))))

(declare-fun b!110429 () Bool)

(assert (=> b!110429 (= e!71829 (contains!839 lt!56698 (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(assert (= (and d!31013 res!54596) b!110428))

(assert (= (and b!110428 res!54597) b!110429))

(assert (=> d!31013 m!124753))

(declare-fun m!125285 () Bool)

(assert (=> d!31013 m!125285))

(declare-fun m!125287 () Bool)

(assert (=> d!31013 m!125287))

(declare-fun m!125289 () Bool)

(assert (=> b!110428 m!125289))

(declare-fun m!125291 () Bool)

(assert (=> b!110429 m!125291))

(assert (=> d!30885 d!31013))

(declare-fun c!19591 () Bool)

(declare-fun b!110430 () Bool)

(declare-fun e!71832 () List!1653)

(declare-fun c!19590 () Bool)

(assert (=> b!110430 (= e!71832 (ite c!19590 (t!5802 (toList!813 (+!149 lt!56522 lt!56517))) (ite c!19591 (Cons!1649 (h!2248 (toList!813 (+!149 lt!56522 lt!56517))) (t!5802 (toList!813 (+!149 lt!56522 lt!56517)))) Nil!1650)))))

(declare-fun b!110431 () Bool)

(declare-fun e!71834 () List!1653)

(declare-fun call!11789 () List!1653)

(assert (=> b!110431 (= e!71834 call!11789)))

(declare-fun call!11787 () List!1653)

(declare-fun c!19593 () Bool)

(declare-fun bm!11784 () Bool)

(assert (=> bm!11784 (= call!11787 ($colon$colon!82 e!71832 (ite c!19593 (h!2248 (toList!813 (+!149 lt!56522 lt!56517))) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528)))))))

(declare-fun c!19592 () Bool)

(assert (=> bm!11784 (= c!19592 c!19593)))

(declare-fun b!110432 () Bool)

(declare-fun e!71830 () List!1653)

(assert (=> b!110432 (= e!71830 e!71834)))

(assert (=> b!110432 (= c!19590 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 lt!56517))) (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 lt!56517)))) (_1!1224 lt!56528))))))

(declare-fun b!110433 () Bool)

(assert (=> b!110433 (= e!71832 (insertStrictlySorted!77 (t!5802 (toList!813 (+!149 lt!56522 lt!56517))) (_1!1224 lt!56528) (_2!1224 lt!56528)))))

(declare-fun bm!11785 () Bool)

(declare-fun call!11788 () List!1653)

(assert (=> bm!11785 (= call!11788 call!11789)))

(declare-fun d!31015 () Bool)

(declare-fun e!71833 () Bool)

(assert (=> d!31015 e!71833))

(declare-fun res!54599 () Bool)

(assert (=> d!31015 (=> (not res!54599) (not e!71833))))

(declare-fun lt!56941 () List!1653)

(assert (=> d!31015 (= res!54599 (isStrictlySorted!306 lt!56941))))

(assert (=> d!31015 (= lt!56941 e!71830)))

(assert (=> d!31015 (= c!19593 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 lt!56517))) (bvslt (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 lt!56517)))) (_1!1224 lt!56528))))))

(assert (=> d!31015 (isStrictlySorted!306 (toList!813 (+!149 lt!56522 lt!56517)))))

(assert (=> d!31015 (= (insertStrictlySorted!77 (toList!813 (+!149 lt!56522 lt!56517)) (_1!1224 lt!56528) (_2!1224 lt!56528)) lt!56941)))

(declare-fun b!110434 () Bool)

(declare-fun res!54598 () Bool)

(assert (=> b!110434 (=> (not res!54598) (not e!71833))))

(assert (=> b!110434 (= res!54598 (containsKey!161 lt!56941 (_1!1224 lt!56528)))))

(declare-fun b!110435 () Bool)

(declare-fun e!71831 () List!1653)

(assert (=> b!110435 (= e!71831 call!11788)))

(declare-fun b!110436 () Bool)

(assert (=> b!110436 (= e!71831 call!11788)))

(declare-fun b!110437 () Bool)

(assert (=> b!110437 (= e!71833 (contains!839 lt!56941 (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun b!110438 () Bool)

(assert (=> b!110438 (= e!71830 call!11787)))

(declare-fun bm!11786 () Bool)

(assert (=> bm!11786 (= call!11789 call!11787)))

(declare-fun b!110439 () Bool)

(assert (=> b!110439 (= c!19591 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 lt!56517))) (bvsgt (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 lt!56517)))) (_1!1224 lt!56528))))))

(assert (=> b!110439 (= e!71834 e!71831)))

(assert (= (and d!31015 c!19593) b!110438))

(assert (= (and d!31015 (not c!19593)) b!110432))

(assert (= (and b!110432 c!19590) b!110431))

(assert (= (and b!110432 (not c!19590)) b!110439))

(assert (= (and b!110439 c!19591) b!110435))

(assert (= (and b!110439 (not c!19591)) b!110436))

(assert (= (or b!110435 b!110436) bm!11785))

(assert (= (or b!110431 bm!11785) bm!11786))

(assert (= (or b!110438 bm!11786) bm!11784))

(assert (= (and bm!11784 c!19592) b!110433))

(assert (= (and bm!11784 (not c!19592)) b!110430))

(assert (= (and d!31015 res!54599) b!110434))

(assert (= (and b!110434 res!54598) b!110437))

(declare-fun m!125293 () Bool)

(assert (=> d!31015 m!125293))

(declare-fun m!125295 () Bool)

(assert (=> d!31015 m!125295))

(declare-fun m!125297 () Bool)

(assert (=> bm!11784 m!125297))

(declare-fun m!125299 () Bool)

(assert (=> b!110437 m!125299))

(declare-fun m!125301 () Bool)

(assert (=> b!110433 m!125301))

(declare-fun m!125303 () Bool)

(assert (=> b!110434 m!125303))

(assert (=> d!30885 d!31015))

(declare-fun d!31017 () Bool)

(declare-fun res!54604 () Bool)

(declare-fun e!71839 () Bool)

(assert (=> d!31017 (=> res!54604 e!71839)))

(assert (=> d!31017 (= res!54604 (and ((_ is Cons!1649) (toList!813 lt!56524)) (= (_1!1224 (h!2248 (toList!813 lt!56524))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31017 (= (containsKey!161 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) e!71839)))

(declare-fun b!110444 () Bool)

(declare-fun e!71840 () Bool)

(assert (=> b!110444 (= e!71839 e!71840)))

(declare-fun res!54605 () Bool)

(assert (=> b!110444 (=> (not res!54605) (not e!71840))))

(assert (=> b!110444 (= res!54605 (and (or (not ((_ is Cons!1649) (toList!813 lt!56524))) (bvsle (_1!1224 (h!2248 (toList!813 lt!56524))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1649) (toList!813 lt!56524)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56524))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!110445 () Bool)

(assert (=> b!110445 (= e!71840 (containsKey!161 (t!5802 (toList!813 lt!56524)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31017 (not res!54604)) b!110444))

(assert (= (and b!110444 res!54605) b!110445))

(assert (=> b!110445 m!124515))

(declare-fun m!125305 () Bool)

(assert (=> b!110445 m!125305))

(assert (=> d!30871 d!31017))

(declare-fun d!31019 () Bool)

(assert (=> d!31019 (= (get!1358 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) from!355) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110038 d!31019))

(declare-fun d!31021 () Bool)

(assert (=> d!31021 (= (apply!100 lt!56770 lt!56756) (get!1359 (getValueByKey!157 (toList!813 lt!56770) lt!56756)))))

(declare-fun bs!4535 () Bool)

(assert (= bs!4535 d!31021))

(declare-fun m!125307 () Bool)

(assert (=> bs!4535 m!125307))

(assert (=> bs!4535 m!125307))

(declare-fun m!125309 () Bool)

(assert (=> bs!4535 m!125309))

(assert (=> b!110145 d!31021))

(declare-fun d!31023 () Bool)

(declare-fun e!71841 () Bool)

(assert (=> d!31023 e!71841))

(declare-fun res!54606 () Bool)

(assert (=> d!31023 (=> (not res!54606) (not e!71841))))

(declare-fun lt!56942 () ListLongMap!1595)

(assert (=> d!31023 (= res!54606 (contains!837 lt!56942 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!56945 () List!1653)

(assert (=> d!31023 (= lt!56942 (ListLongMap!1596 lt!56945))))

(declare-fun lt!56943 () Unit!3421)

(declare-fun lt!56944 () Unit!3421)

(assert (=> d!31023 (= lt!56943 lt!56944)))

(assert (=> d!31023 (= (getValueByKey!157 lt!56945 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31023 (= lt!56944 (lemmaContainsTupThenGetReturnValue!75 lt!56945 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31023 (= lt!56945 (insertStrictlySorted!77 (toList!813 lt!56770) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31023 (= (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56942)))

(declare-fun b!110446 () Bool)

(declare-fun res!54607 () Bool)

(assert (=> b!110446 (=> (not res!54607) (not e!71841))))

(assert (=> b!110446 (= res!54607 (= (getValueByKey!157 (toList!813 lt!56942) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!110447 () Bool)

(assert (=> b!110447 (= e!71841 (contains!839 (toList!813 lt!56942) (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31023 res!54606) b!110446))

(assert (= (and b!110446 res!54607) b!110447))

(declare-fun m!125311 () Bool)

(assert (=> d!31023 m!125311))

(declare-fun m!125313 () Bool)

(assert (=> d!31023 m!125313))

(declare-fun m!125315 () Bool)

(assert (=> d!31023 m!125315))

(declare-fun m!125317 () Bool)

(assert (=> d!31023 m!125317))

(declare-fun m!125319 () Bool)

(assert (=> b!110446 m!125319))

(declare-fun m!125321 () Bool)

(assert (=> b!110447 m!125321))

(assert (=> b!110145 d!31023))

(declare-fun d!31025 () Bool)

(assert (=> d!31025 (= (apply!100 lt!56759 lt!56761) (get!1359 (getValueByKey!157 (toList!813 lt!56759) lt!56761)))))

(declare-fun bs!4536 () Bool)

(assert (= bs!4536 d!31025))

(declare-fun m!125323 () Bool)

(assert (=> bs!4536 m!125323))

(assert (=> bs!4536 m!125323))

(declare-fun m!125325 () Bool)

(assert (=> bs!4536 m!125325))

(assert (=> b!110145 d!31025))

(declare-fun d!31027 () Bool)

(declare-fun e!71842 () Bool)

(assert (=> d!31027 e!71842))

(declare-fun res!54608 () Bool)

(assert (=> d!31027 (=> (not res!54608) (not e!71842))))

(declare-fun lt!56946 () ListLongMap!1595)

(assert (=> d!31027 (= res!54608 (contains!837 lt!56946 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!56949 () List!1653)

(assert (=> d!31027 (= lt!56946 (ListLongMap!1596 lt!56949))))

(declare-fun lt!56947 () Unit!3421)

(declare-fun lt!56948 () Unit!3421)

(assert (=> d!31027 (= lt!56947 lt!56948)))

(assert (=> d!31027 (= (getValueByKey!157 lt!56949 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31027 (= lt!56948 (lemmaContainsTupThenGetReturnValue!75 lt!56949 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31027 (= lt!56949 (insertStrictlySorted!77 (toList!813 lt!56759) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31027 (= (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56946)))

(declare-fun b!110448 () Bool)

(declare-fun res!54609 () Bool)

(assert (=> b!110448 (=> (not res!54609) (not e!71842))))

(assert (=> b!110448 (= res!54609 (= (getValueByKey!157 (toList!813 lt!56946) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!110449 () Bool)

(assert (=> b!110449 (= e!71842 (contains!839 (toList!813 lt!56946) (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31027 res!54608) b!110448))

(assert (= (and b!110448 res!54609) b!110449))

(declare-fun m!125327 () Bool)

(assert (=> d!31027 m!125327))

(declare-fun m!125329 () Bool)

(assert (=> d!31027 m!125329))

(declare-fun m!125331 () Bool)

(assert (=> d!31027 m!125331))

(declare-fun m!125333 () Bool)

(assert (=> d!31027 m!125333))

(declare-fun m!125335 () Bool)

(assert (=> b!110448 m!125335))

(declare-fun m!125337 () Bool)

(assert (=> b!110449 m!125337))

(assert (=> b!110145 d!31027))

(declare-fun d!31029 () Bool)

(declare-fun e!71843 () Bool)

(assert (=> d!31029 e!71843))

(declare-fun res!54610 () Bool)

(assert (=> d!31029 (=> res!54610 e!71843)))

(declare-fun lt!56953 () Bool)

(assert (=> d!31029 (= res!54610 (not lt!56953))))

(declare-fun lt!56950 () Bool)

(assert (=> d!31029 (= lt!56953 lt!56950)))

(declare-fun lt!56952 () Unit!3421)

(declare-fun e!71844 () Unit!3421)

(assert (=> d!31029 (= lt!56952 e!71844)))

(declare-fun c!19594 () Bool)

(assert (=> d!31029 (= c!19594 lt!56950)))

(assert (=> d!31029 (= lt!56950 (containsKey!161 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768))))

(assert (=> d!31029 (= (contains!837 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56768) lt!56953)))

(declare-fun b!110450 () Bool)

(declare-fun lt!56951 () Unit!3421)

(assert (=> b!110450 (= e!71844 lt!56951)))

(assert (=> b!110450 (= lt!56951 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768))))

(assert (=> b!110450 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768))))

(declare-fun b!110451 () Bool)

(declare-fun Unit!3443 () Unit!3421)

(assert (=> b!110451 (= e!71844 Unit!3443)))

(declare-fun b!110452 () Bool)

(assert (=> b!110452 (= e!71843 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768)))))

(assert (= (and d!31029 c!19594) b!110450))

(assert (= (and d!31029 (not c!19594)) b!110451))

(assert (= (and d!31029 (not res!54610)) b!110452))

(declare-fun m!125339 () Bool)

(assert (=> d!31029 m!125339))

(declare-fun m!125341 () Bool)

(assert (=> b!110450 m!125341))

(declare-fun m!125343 () Bool)

(assert (=> b!110450 m!125343))

(assert (=> b!110450 m!125343))

(declare-fun m!125345 () Bool)

(assert (=> b!110450 m!125345))

(assert (=> b!110452 m!125343))

(assert (=> b!110452 m!125343))

(assert (=> b!110452 m!125345))

(assert (=> b!110145 d!31029))

(declare-fun d!31031 () Bool)

(assert (=> d!31031 (= (apply!100 lt!56752 lt!56755) (get!1359 (getValueByKey!157 (toList!813 lt!56752) lt!56755)))))

(declare-fun bs!4537 () Bool)

(assert (= bs!4537 d!31031))

(declare-fun m!125347 () Bool)

(assert (=> bs!4537 m!125347))

(assert (=> bs!4537 m!125347))

(declare-fun m!125349 () Bool)

(assert (=> bs!4537 m!125349))

(assert (=> b!110145 d!31031))

(declare-fun d!31033 () Bool)

(assert (=> d!31033 (= (apply!100 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56756) (apply!100 lt!56770 lt!56756))))

(declare-fun lt!56956 () Unit!3421)

(declare-fun choose!699 (ListLongMap!1595 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3421)

(assert (=> d!31033 (= lt!56956 (choose!699 lt!56770 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56756))))

(declare-fun e!71847 () Bool)

(assert (=> d!31033 e!71847))

(declare-fun res!54613 () Bool)

(assert (=> d!31033 (=> (not res!54613) (not e!71847))))

(assert (=> d!31033 (= res!54613 (contains!837 lt!56770 lt!56756))))

(assert (=> d!31033 (= (addApplyDifferent!76 lt!56770 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56756) lt!56956)))

(declare-fun b!110456 () Bool)

(assert (=> b!110456 (= e!71847 (not (= lt!56756 lt!56771)))))

(assert (= (and d!31033 res!54613) b!110456))

(assert (=> d!31033 m!124795))

(assert (=> d!31033 m!124819))

(assert (=> d!31033 m!124809))

(declare-fun m!125351 () Bool)

(assert (=> d!31033 m!125351))

(declare-fun m!125353 () Bool)

(assert (=> d!31033 m!125353))

(assert (=> d!31033 m!124795))

(assert (=> b!110145 d!31033))

(declare-fun d!31035 () Bool)

(assert (=> d!31035 (= (apply!100 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56756) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56756)))))

(declare-fun bs!4538 () Bool)

(assert (= bs!4538 d!31035))

(declare-fun m!125355 () Bool)

(assert (=> bs!4538 m!125355))

(assert (=> bs!4538 m!125355))

(declare-fun m!125357 () Bool)

(assert (=> bs!4538 m!125357))

(assert (=> b!110145 d!31035))

(declare-fun d!31037 () Bool)

(declare-fun e!71848 () Bool)

(assert (=> d!31037 e!71848))

(declare-fun res!54614 () Bool)

(assert (=> d!31037 (=> (not res!54614) (not e!71848))))

(declare-fun lt!56957 () ListLongMap!1595)

(assert (=> d!31037 (= res!54614 (contains!837 lt!56957 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!56960 () List!1653)

(assert (=> d!31037 (= lt!56957 (ListLongMap!1596 lt!56960))))

(declare-fun lt!56958 () Unit!3421)

(declare-fun lt!56959 () Unit!3421)

(assert (=> d!31037 (= lt!56958 lt!56959)))

(assert (=> d!31037 (= (getValueByKey!157 lt!56960 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31037 (= lt!56959 (lemmaContainsTupThenGetReturnValue!75 lt!56960 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31037 (= lt!56960 (insertStrictlySorted!77 (toList!813 lt!56752) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31037 (= (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56957)))

(declare-fun b!110457 () Bool)

(declare-fun res!54615 () Bool)

(assert (=> b!110457 (=> (not res!54615) (not e!71848))))

(assert (=> b!110457 (= res!54615 (= (getValueByKey!157 (toList!813 lt!56957) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!110458 () Bool)

(assert (=> b!110458 (= e!71848 (contains!839 (toList!813 lt!56957) (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31037 res!54614) b!110457))

(assert (= (and b!110457 res!54615) b!110458))

(declare-fun m!125359 () Bool)

(assert (=> d!31037 m!125359))

(declare-fun m!125361 () Bool)

(assert (=> d!31037 m!125361))

(declare-fun m!125363 () Bool)

(assert (=> d!31037 m!125363))

(declare-fun m!125365 () Bool)

(assert (=> d!31037 m!125365))

(declare-fun m!125367 () Bool)

(assert (=> b!110457 m!125367))

(declare-fun m!125369 () Bool)

(assert (=> b!110458 m!125369))

(assert (=> b!110145 d!31037))

(declare-fun d!31039 () Bool)

(declare-fun e!71849 () Bool)

(assert (=> d!31039 e!71849))

(declare-fun res!54616 () Bool)

(assert (=> d!31039 (=> (not res!54616) (not e!71849))))

(declare-fun lt!56961 () ListLongMap!1595)

(assert (=> d!31039 (= res!54616 (contains!837 lt!56961 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!56964 () List!1653)

(assert (=> d!31039 (= lt!56961 (ListLongMap!1596 lt!56964))))

(declare-fun lt!56962 () Unit!3421)

(declare-fun lt!56963 () Unit!3421)

(assert (=> d!31039 (= lt!56962 lt!56963)))

(assert (=> d!31039 (= (getValueByKey!157 lt!56964 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31039 (= lt!56963 (lemmaContainsTupThenGetReturnValue!75 lt!56964 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31039 (= lt!56964 (insertStrictlySorted!77 (toList!813 lt!56758) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31039 (= (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56961)))

(declare-fun b!110459 () Bool)

(declare-fun res!54617 () Bool)

(assert (=> b!110459 (=> (not res!54617) (not e!71849))))

(assert (=> b!110459 (= res!54617 (= (getValueByKey!157 (toList!813 lt!56961) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!110460 () Bool)

(assert (=> b!110460 (= e!71849 (contains!839 (toList!813 lt!56961) (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31039 res!54616) b!110459))

(assert (= (and b!110459 res!54617) b!110460))

(declare-fun m!125371 () Bool)

(assert (=> d!31039 m!125371))

(declare-fun m!125373 () Bool)

(assert (=> d!31039 m!125373))

(declare-fun m!125375 () Bool)

(assert (=> d!31039 m!125375))

(declare-fun m!125377 () Bool)

(assert (=> d!31039 m!125377))

(declare-fun m!125379 () Bool)

(assert (=> b!110459 m!125379))

(declare-fun m!125381 () Bool)

(assert (=> b!110460 m!125381))

(assert (=> b!110145 d!31039))

(assert (=> b!110145 d!30879))

(declare-fun d!31041 () Bool)

(assert (=> d!31041 (= (apply!100 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56761) (apply!100 lt!56759 lt!56761))))

(declare-fun lt!56965 () Unit!3421)

(assert (=> d!31041 (= lt!56965 (choose!699 lt!56759 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56761))))

(declare-fun e!71850 () Bool)

(assert (=> d!31041 e!71850))

(declare-fun res!54618 () Bool)

(assert (=> d!31041 (=> (not res!54618) (not e!71850))))

(assert (=> d!31041 (= res!54618 (contains!837 lt!56759 lt!56761))))

(assert (=> d!31041 (= (addApplyDifferent!76 lt!56759 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56761) lt!56965)))

(declare-fun b!110461 () Bool)

(assert (=> b!110461 (= e!71850 (not (= lt!56761 lt!56757)))))

(assert (= (and d!31041 res!54618) b!110461))

(assert (=> d!31041 m!124801))

(assert (=> d!31041 m!124803))

(assert (=> d!31041 m!124793))

(declare-fun m!125383 () Bool)

(assert (=> d!31041 m!125383))

(declare-fun m!125385 () Bool)

(assert (=> d!31041 m!125385))

(assert (=> d!31041 m!124801))

(assert (=> b!110145 d!31041))

(declare-fun d!31043 () Bool)

(assert (=> d!31043 (= (apply!100 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56755) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56755)))))

(declare-fun bs!4539 () Bool)

(assert (= bs!4539 d!31043))

(declare-fun m!125387 () Bool)

(assert (=> bs!4539 m!125387))

(assert (=> bs!4539 m!125387))

(declare-fun m!125389 () Bool)

(assert (=> bs!4539 m!125389))

(assert (=> b!110145 d!31043))

(declare-fun d!31045 () Bool)

(assert (=> d!31045 (= (apply!100 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56755) (apply!100 lt!56752 lt!56755))))

(declare-fun lt!56966 () Unit!3421)

(assert (=> d!31045 (= lt!56966 (choose!699 lt!56752 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56755))))

(declare-fun e!71851 () Bool)

(assert (=> d!31045 e!71851))

(declare-fun res!54619 () Bool)

(assert (=> d!31045 (=> (not res!54619) (not e!71851))))

(assert (=> d!31045 (= res!54619 (contains!837 lt!56752 lt!56755))))

(assert (=> d!31045 (= (addApplyDifferent!76 lt!56752 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56755) lt!56966)))

(declare-fun b!110462 () Bool)

(assert (=> b!110462 (= e!71851 (not (= lt!56755 lt!56754)))))

(assert (= (and d!31045 res!54619) b!110462))

(assert (=> d!31045 m!124799))

(assert (=> d!31045 m!124821))

(assert (=> d!31045 m!124797))

(declare-fun m!125391 () Bool)

(assert (=> d!31045 m!125391))

(declare-fun m!125393 () Bool)

(assert (=> d!31045 m!125393))

(assert (=> d!31045 m!124799))

(assert (=> b!110145 d!31045))

(declare-fun d!31047 () Bool)

(assert (=> d!31047 (contains!837 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56768)))

(declare-fun lt!56969 () Unit!3421)

(declare-fun choose!700 (ListLongMap!1595 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3421)

(assert (=> d!31047 (= lt!56969 (choose!700 lt!56758 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56768))))

(assert (=> d!31047 (contains!837 lt!56758 lt!56768)))

(assert (=> d!31047 (= (addStillContains!76 lt!56758 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56768) lt!56969)))

(declare-fun bs!4540 () Bool)

(assert (= bs!4540 d!31047))

(assert (=> bs!4540 m!124811))

(assert (=> bs!4540 m!124811))

(assert (=> bs!4540 m!124815))

(declare-fun m!125395 () Bool)

(assert (=> bs!4540 m!125395))

(declare-fun m!125397 () Bool)

(assert (=> bs!4540 m!125397))

(assert (=> b!110145 d!31047))

(declare-fun d!31049 () Bool)

(assert (=> d!31049 (= (apply!100 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56761) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56761)))))

(declare-fun bs!4541 () Bool)

(assert (= bs!4541 d!31049))

(declare-fun m!125399 () Bool)

(assert (=> bs!4541 m!125399))

(assert (=> bs!4541 m!125399))

(declare-fun m!125401 () Bool)

(assert (=> bs!4541 m!125401))

(assert (=> b!110145 d!31049))

(declare-fun d!31051 () Bool)

(assert (=> d!31051 (= (apply!100 lt!56753 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1359 (getValueByKey!157 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4542 () Bool)

(assert (= bs!4542 d!31051))

(assert (=> bs!4542 m!125119))

(assert (=> bs!4542 m!125119))

(declare-fun m!125403 () Bool)

(assert (=> bs!4542 m!125403))

(assert (=> b!110129 d!31051))

(declare-fun d!31053 () Bool)

(assert (=> d!31053 (= (map!1294 (_2!1225 lt!56657)) (getCurrentListMap!489 (_keys!4341 (_2!1225 lt!56657)) (_values!2610 (_2!1225 lt!56657)) (mask!6795 (_2!1225 lt!56657)) (extraKeys!2424 (_2!1225 lt!56657)) (zeroValue!2498 (_2!1225 lt!56657)) (minValue!2498 (_2!1225 lt!56657)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1225 lt!56657))))))

(declare-fun bs!4543 () Bool)

(assert (= bs!4543 d!31053))

(declare-fun m!125405 () Bool)

(assert (=> bs!4543 m!125405))

(assert (=> bm!11720 d!31053))

(declare-fun d!31055 () Bool)

(declare-fun e!71852 () Bool)

(assert (=> d!31055 e!71852))

(declare-fun res!54620 () Bool)

(assert (=> d!31055 (=> (not res!54620) (not e!71852))))

(declare-fun lt!56970 () ListLongMap!1595)

(assert (=> d!31055 (= res!54620 (contains!837 lt!56970 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!56973 () List!1653)

(assert (=> d!31055 (= lt!56970 (ListLongMap!1596 lt!56973))))

(declare-fun lt!56971 () Unit!3421)

(declare-fun lt!56972 () Unit!3421)

(assert (=> d!31055 (= lt!56971 lt!56972)))

(assert (=> d!31055 (= (getValueByKey!157 lt!56973 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31055 (= lt!56972 (lemmaContainsTupThenGetReturnValue!75 lt!56973 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31055 (= lt!56973 (insertStrictlySorted!77 (toList!813 call!11753) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31055 (= (+!149 call!11753 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56970)))

(declare-fun b!110464 () Bool)

(declare-fun res!54621 () Bool)

(assert (=> b!110464 (=> (not res!54621) (not e!71852))))

(assert (=> b!110464 (= res!54621 (= (getValueByKey!157 (toList!813 lt!56970) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!110465 () Bool)

(assert (=> b!110465 (= e!71852 (contains!839 (toList!813 lt!56970) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31055 res!54620) b!110464))

(assert (= (and b!110464 res!54621) b!110465))

(declare-fun m!125407 () Bool)

(assert (=> d!31055 m!125407))

(declare-fun m!125409 () Bool)

(assert (=> d!31055 m!125409))

(declare-fun m!125411 () Bool)

(assert (=> d!31055 m!125411))

(declare-fun m!125413 () Bool)

(assert (=> d!31055 m!125413))

(declare-fun m!125415 () Bool)

(assert (=> b!110464 m!125415))

(declare-fun m!125417 () Bool)

(assert (=> b!110465 m!125417))

(assert (=> b!110132 d!31055))

(declare-fun d!31057 () Bool)

(declare-fun e!71853 () Bool)

(assert (=> d!31057 e!71853))

(declare-fun res!54622 () Bool)

(assert (=> d!31057 (=> (not res!54622) (not e!71853))))

(declare-fun lt!56974 () ListLongMap!1595)

(assert (=> d!31057 (= res!54622 (contains!837 lt!56974 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun lt!56977 () List!1653)

(assert (=> d!31057 (= lt!56974 (ListLongMap!1596 lt!56977))))

(declare-fun lt!56975 () Unit!3421)

(declare-fun lt!56976 () Unit!3421)

(assert (=> d!31057 (= lt!56975 lt!56976)))

(assert (=> d!31057 (= (getValueByKey!157 lt!56977 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) (Some!162 (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (=> d!31057 (= lt!56976 (lemmaContainsTupThenGetReturnValue!75 lt!56977 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (=> d!31057 (= lt!56977 (insertStrictlySorted!77 (toList!813 e!71577) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (=> d!31057 (= (+!149 e!71577 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) lt!56974)))

(declare-fun b!110466 () Bool)

(declare-fun res!54623 () Bool)

(assert (=> b!110466 (=> (not res!54623) (not e!71853))))

(assert (=> b!110466 (= res!54623 (= (getValueByKey!157 (toList!813 lt!56974) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) (Some!162 (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun b!110467 () Bool)

(assert (=> b!110467 (= e!71853 (contains!839 (toList!813 lt!56974) (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (= (and d!31057 res!54622) b!110466))

(assert (= (and b!110466 res!54623) b!110467))

(declare-fun m!125419 () Bool)

(assert (=> d!31057 m!125419))

(declare-fun m!125421 () Bool)

(assert (=> d!31057 m!125421))

(declare-fun m!125423 () Bool)

(assert (=> d!31057 m!125423))

(declare-fun m!125425 () Bool)

(assert (=> d!31057 m!125425))

(declare-fun m!125427 () Bool)

(assert (=> b!110466 m!125427))

(declare-fun m!125429 () Bool)

(assert (=> b!110467 m!125429))

(assert (=> bm!11719 d!31057))

(declare-fun d!31059 () Bool)

(assert (=> d!31059 (= (inRange!0 (ite c!19473 (ite c!19475 (index!3235 lt!56634) (ite c!19477 (index!3234 lt!56645) (index!3237 lt!56645))) (ite c!19479 (index!3235 lt!56646) (ite c!19480 (index!3234 lt!56642) (index!3237 lt!56642)))) (mask!6795 newMap!16)) (and (bvsge (ite c!19473 (ite c!19475 (index!3235 lt!56634) (ite c!19477 (index!3234 lt!56645) (index!3237 lt!56645))) (ite c!19479 (index!3235 lt!56646) (ite c!19480 (index!3234 lt!56642) (index!3237 lt!56642)))) #b00000000000000000000000000000000) (bvslt (ite c!19473 (ite c!19475 (index!3235 lt!56634) (ite c!19477 (index!3234 lt!56645) (index!3237 lt!56645))) (ite c!19479 (index!3235 lt!56646) (ite c!19480 (index!3234 lt!56642) (index!3237 lt!56642)))) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11727 d!31059))

(assert (=> b!110073 d!30999))

(assert (=> d!30895 d!30887))

(declare-fun b!110476 () Bool)

(declare-fun e!71862 () Bool)

(declare-fun call!11792 () Bool)

(assert (=> b!110476 (= e!71862 call!11792)))

(declare-fun b!110477 () Bool)

(declare-fun e!71861 () Bool)

(assert (=> b!110477 (= e!71861 e!71862)))

(declare-fun lt!56986 () (_ BitVec 64))

(assert (=> b!110477 (= lt!56986 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56984 () Unit!3421)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4388 (_ BitVec 64) (_ BitVec 32)) Unit!3421)

(assert (=> b!110477 (= lt!56984 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4341 newMap!16) lt!56986 #b00000000000000000000000000000000))))

(assert (=> b!110477 (arrayContainsKey!0 (_keys!4341 newMap!16) lt!56986 #b00000000000000000000000000000000)))

(declare-fun lt!56985 () Unit!3421)

(assert (=> b!110477 (= lt!56985 lt!56984)))

(declare-fun res!54629 () Bool)

(assert (=> b!110477 (= res!54629 (= (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (_keys!4341 newMap!16) (mask!6795 newMap!16)) (Found!271 #b00000000000000000000000000000000)))))

(assert (=> b!110477 (=> (not res!54629) (not e!71862))))

(declare-fun bm!11789 () Bool)

(assert (=> bm!11789 (= call!11792 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun b!110478 () Bool)

(declare-fun e!71860 () Bool)

(assert (=> b!110478 (= e!71860 e!71861)))

(declare-fun c!19597 () Bool)

(assert (=> b!110478 (= c!19597 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!31061 () Bool)

(declare-fun res!54628 () Bool)

(assert (=> d!31061 (=> res!54628 e!71860)))

(assert (=> d!31061 (= res!54628 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31061 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 newMap!16) (mask!6795 newMap!16)) e!71860)))

(declare-fun b!110479 () Bool)

(assert (=> b!110479 (= e!71861 call!11792)))

(assert (= (and d!31061 (not res!54628)) b!110478))

(assert (= (and b!110478 c!19597) b!110477))

(assert (= (and b!110478 (not c!19597)) b!110479))

(assert (= (and b!110477 res!54629) b!110476))

(assert (= (or b!110476 b!110479) bm!11789))

(assert (=> b!110477 m!124875))

(declare-fun m!125431 () Bool)

(assert (=> b!110477 m!125431))

(declare-fun m!125433 () Bool)

(assert (=> b!110477 m!125433))

(assert (=> b!110477 m!124875))

(declare-fun m!125435 () Bool)

(assert (=> b!110477 m!125435))

(declare-fun m!125437 () Bool)

(assert (=> bm!11789 m!125437))

(assert (=> b!110478 m!124875))

(assert (=> b!110478 m!124875))

(assert (=> b!110478 m!124877))

(assert (=> b!110031 d!31061))

(declare-fun b!110482 () Bool)

(declare-fun e!71864 () Option!163)

(assert (=> b!110482 (= e!71864 (getValueByKey!157 (t!5802 (toList!813 lt!56699)) (_1!1224 lt!56517)))))

(declare-fun d!31063 () Bool)

(declare-fun c!19598 () Bool)

(assert (=> d!31063 (= c!19598 (and ((_ is Cons!1649) (toList!813 lt!56699)) (= (_1!1224 (h!2248 (toList!813 lt!56699))) (_1!1224 lt!56517))))))

(declare-fun e!71863 () Option!163)

(assert (=> d!31063 (= (getValueByKey!157 (toList!813 lt!56699) (_1!1224 lt!56517)) e!71863)))

(declare-fun b!110483 () Bool)

(assert (=> b!110483 (= e!71864 None!161)))

(declare-fun b!110481 () Bool)

(assert (=> b!110481 (= e!71863 e!71864)))

(declare-fun c!19599 () Bool)

(assert (=> b!110481 (= c!19599 (and ((_ is Cons!1649) (toList!813 lt!56699)) (not (= (_1!1224 (h!2248 (toList!813 lt!56699))) (_1!1224 lt!56517)))))))

(declare-fun b!110480 () Bool)

(assert (=> b!110480 (= e!71863 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56699)))))))

(assert (= (and d!31063 c!19598) b!110480))

(assert (= (and d!31063 (not c!19598)) b!110481))

(assert (= (and b!110481 c!19599) b!110482))

(assert (= (and b!110481 (not c!19599)) b!110483))

(declare-fun m!125439 () Bool)

(assert (=> b!110482 m!125439))

(assert (=> b!110085 d!31063))

(assert (=> b!110071 d!30921))

(assert (=> b!109983 d!30955))

(declare-fun d!31065 () Bool)

(declare-fun e!71865 () Bool)

(assert (=> d!31065 e!71865))

(declare-fun res!54630 () Bool)

(assert (=> d!31065 (=> res!54630 e!71865)))

(declare-fun lt!56990 () Bool)

(assert (=> d!31065 (= res!54630 (not lt!56990))))

(declare-fun lt!56987 () Bool)

(assert (=> d!31065 (= lt!56990 lt!56987)))

(declare-fun lt!56989 () Unit!3421)

(declare-fun e!71866 () Unit!3421)

(assert (=> d!31065 (= lt!56989 e!71866)))

(declare-fun c!19600 () Bool)

(assert (=> d!31065 (= c!19600 lt!56987)))

(assert (=> d!31065 (= lt!56987 (containsKey!161 (toList!813 lt!56691) (_1!1224 lt!56517)))))

(assert (=> d!31065 (= (contains!837 lt!56691 (_1!1224 lt!56517)) lt!56990)))

(declare-fun b!110484 () Bool)

(declare-fun lt!56988 () Unit!3421)

(assert (=> b!110484 (= e!71866 lt!56988)))

(assert (=> b!110484 (= lt!56988 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56691) (_1!1224 lt!56517)))))

(assert (=> b!110484 (isDefined!111 (getValueByKey!157 (toList!813 lt!56691) (_1!1224 lt!56517)))))

(declare-fun b!110485 () Bool)

(declare-fun Unit!3444 () Unit!3421)

(assert (=> b!110485 (= e!71866 Unit!3444)))

(declare-fun b!110486 () Bool)

(assert (=> b!110486 (= e!71865 (isDefined!111 (getValueByKey!157 (toList!813 lt!56691) (_1!1224 lt!56517))))))

(assert (= (and d!31065 c!19600) b!110484))

(assert (= (and d!31065 (not c!19600)) b!110485))

(assert (= (and d!31065 (not res!54630)) b!110486))

(declare-fun m!125441 () Bool)

(assert (=> d!31065 m!125441))

(declare-fun m!125443 () Bool)

(assert (=> b!110484 m!125443))

(assert (=> b!110484 m!124747))

(assert (=> b!110484 m!124747))

(declare-fun m!125445 () Bool)

(assert (=> b!110484 m!125445))

(assert (=> b!110486 m!124747))

(assert (=> b!110486 m!124747))

(assert (=> b!110486 m!125445))

(assert (=> d!30883 d!31065))

(declare-fun b!110489 () Bool)

(declare-fun e!71868 () Option!163)

(assert (=> b!110489 (= e!71868 (getValueByKey!157 (t!5802 lt!56694) (_1!1224 lt!56517)))))

(declare-fun d!31067 () Bool)

(declare-fun c!19601 () Bool)

(assert (=> d!31067 (= c!19601 (and ((_ is Cons!1649) lt!56694) (= (_1!1224 (h!2248 lt!56694)) (_1!1224 lt!56517))))))

(declare-fun e!71867 () Option!163)

(assert (=> d!31067 (= (getValueByKey!157 lt!56694 (_1!1224 lt!56517)) e!71867)))

(declare-fun b!110490 () Bool)

(assert (=> b!110490 (= e!71868 None!161)))

(declare-fun b!110488 () Bool)

(assert (=> b!110488 (= e!71867 e!71868)))

(declare-fun c!19602 () Bool)

(assert (=> b!110488 (= c!19602 (and ((_ is Cons!1649) lt!56694) (not (= (_1!1224 (h!2248 lt!56694)) (_1!1224 lt!56517)))))))

(declare-fun b!110487 () Bool)

(assert (=> b!110487 (= e!71867 (Some!162 (_2!1224 (h!2248 lt!56694))))))

(assert (= (and d!31067 c!19601) b!110487))

(assert (= (and d!31067 (not c!19601)) b!110488))

(assert (= (and b!110488 c!19602) b!110489))

(assert (= (and b!110488 (not c!19602)) b!110490))

(declare-fun m!125447 () Bool)

(assert (=> b!110489 m!125447))

(assert (=> d!30883 d!31067))

(declare-fun d!31069 () Bool)

(assert (=> d!31069 (= (getValueByKey!157 lt!56694 (_1!1224 lt!56517)) (Some!162 (_2!1224 lt!56517)))))

(declare-fun lt!56991 () Unit!3421)

(assert (=> d!31069 (= lt!56991 (choose!693 lt!56694 (_1!1224 lt!56517) (_2!1224 lt!56517)))))

(declare-fun e!71869 () Bool)

(assert (=> d!31069 e!71869))

(declare-fun res!54631 () Bool)

(assert (=> d!31069 (=> (not res!54631) (not e!71869))))

(assert (=> d!31069 (= res!54631 (isStrictlySorted!306 lt!56694))))

(assert (=> d!31069 (= (lemmaContainsTupThenGetReturnValue!75 lt!56694 (_1!1224 lt!56517) (_2!1224 lt!56517)) lt!56991)))

(declare-fun b!110491 () Bool)

(declare-fun res!54632 () Bool)

(assert (=> b!110491 (=> (not res!54632) (not e!71869))))

(assert (=> b!110491 (= res!54632 (containsKey!161 lt!56694 (_1!1224 lt!56517)))))

(declare-fun b!110492 () Bool)

(assert (=> b!110492 (= e!71869 (contains!839 lt!56694 (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(assert (= (and d!31069 res!54631) b!110491))

(assert (= (and b!110491 res!54632) b!110492))

(assert (=> d!31069 m!124741))

(declare-fun m!125449 () Bool)

(assert (=> d!31069 m!125449))

(declare-fun m!125451 () Bool)

(assert (=> d!31069 m!125451))

(declare-fun m!125453 () Bool)

(assert (=> b!110491 m!125453))

(declare-fun m!125455 () Bool)

(assert (=> b!110492 m!125455))

(assert (=> d!30883 d!31069))

(declare-fun c!19604 () Bool)

(declare-fun c!19603 () Bool)

(declare-fun b!110493 () Bool)

(declare-fun e!71872 () List!1653)

(assert (=> b!110493 (= e!71872 (ite c!19603 (t!5802 (toList!813 lt!56522)) (ite c!19604 (Cons!1649 (h!2248 (toList!813 lt!56522)) (t!5802 (toList!813 lt!56522))) Nil!1650)))))

(declare-fun b!110494 () Bool)

(declare-fun e!71874 () List!1653)

(declare-fun call!11795 () List!1653)

(assert (=> b!110494 (= e!71874 call!11795)))

(declare-fun call!11793 () List!1653)

(declare-fun bm!11790 () Bool)

(declare-fun c!19606 () Bool)

(assert (=> bm!11790 (= call!11793 ($colon$colon!82 e!71872 (ite c!19606 (h!2248 (toList!813 lt!56522)) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517)))))))

(declare-fun c!19605 () Bool)

(assert (=> bm!11790 (= c!19605 c!19606)))

(declare-fun b!110495 () Bool)

(declare-fun e!71870 () List!1653)

(assert (=> b!110495 (= e!71870 e!71874)))

(assert (=> b!110495 (= c!19603 (and ((_ is Cons!1649) (toList!813 lt!56522)) (= (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 lt!56517))))))

(declare-fun b!110496 () Bool)

(assert (=> b!110496 (= e!71872 (insertStrictlySorted!77 (t!5802 (toList!813 lt!56522)) (_1!1224 lt!56517) (_2!1224 lt!56517)))))

(declare-fun bm!11791 () Bool)

(declare-fun call!11794 () List!1653)

(assert (=> bm!11791 (= call!11794 call!11795)))

(declare-fun d!31071 () Bool)

(declare-fun e!71873 () Bool)

(assert (=> d!31071 e!71873))

(declare-fun res!54634 () Bool)

(assert (=> d!31071 (=> (not res!54634) (not e!71873))))

(declare-fun lt!56992 () List!1653)

(assert (=> d!31071 (= res!54634 (isStrictlySorted!306 lt!56992))))

(assert (=> d!31071 (= lt!56992 e!71870)))

(assert (=> d!31071 (= c!19606 (and ((_ is Cons!1649) (toList!813 lt!56522)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 lt!56517))))))

(assert (=> d!31071 (isStrictlySorted!306 (toList!813 lt!56522))))

(assert (=> d!31071 (= (insertStrictlySorted!77 (toList!813 lt!56522) (_1!1224 lt!56517) (_2!1224 lt!56517)) lt!56992)))

(declare-fun b!110497 () Bool)

(declare-fun res!54633 () Bool)

(assert (=> b!110497 (=> (not res!54633) (not e!71873))))

(assert (=> b!110497 (= res!54633 (containsKey!161 lt!56992 (_1!1224 lt!56517)))))

(declare-fun b!110498 () Bool)

(declare-fun e!71871 () List!1653)

(assert (=> b!110498 (= e!71871 call!11794)))

(declare-fun b!110499 () Bool)

(assert (=> b!110499 (= e!71871 call!11794)))

(declare-fun b!110500 () Bool)

(assert (=> b!110500 (= e!71873 (contains!839 lt!56992 (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun b!110501 () Bool)

(assert (=> b!110501 (= e!71870 call!11793)))

(declare-fun bm!11792 () Bool)

(assert (=> bm!11792 (= call!11795 call!11793)))

(declare-fun b!110502 () Bool)

(assert (=> b!110502 (= c!19604 (and ((_ is Cons!1649) (toList!813 lt!56522)) (bvsgt (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 lt!56517))))))

(assert (=> b!110502 (= e!71874 e!71871)))

(assert (= (and d!31071 c!19606) b!110501))

(assert (= (and d!31071 (not c!19606)) b!110495))

(assert (= (and b!110495 c!19603) b!110494))

(assert (= (and b!110495 (not c!19603)) b!110502))

(assert (= (and b!110502 c!19604) b!110498))

(assert (= (and b!110502 (not c!19604)) b!110499))

(assert (= (or b!110498 b!110499) bm!11791))

(assert (= (or b!110494 bm!11791) bm!11792))

(assert (= (or b!110501 bm!11792) bm!11790))

(assert (= (and bm!11790 c!19605) b!110496))

(assert (= (and bm!11790 (not c!19605)) b!110493))

(assert (= (and d!31071 res!54634) b!110497))

(assert (= (and b!110497 res!54633) b!110500))

(declare-fun m!125457 () Bool)

(assert (=> d!31071 m!125457))

(assert (=> d!31071 m!124995))

(declare-fun m!125459 () Bool)

(assert (=> bm!11790 m!125459))

(declare-fun m!125461 () Bool)

(assert (=> b!110500 m!125461))

(declare-fun m!125463 () Bool)

(assert (=> b!110496 m!125463))

(declare-fun m!125465 () Bool)

(assert (=> b!110497 m!125465))

(assert (=> d!30883 d!31071))

(declare-fun d!31073 () Bool)

(declare-fun res!54635 () Bool)

(declare-fun e!71875 () Bool)

(assert (=> d!31073 (=> (not res!54635) (not e!71875))))

(assert (=> d!31073 (= res!54635 (simpleValid!75 (v!2929 (underlying!370 thiss!992))))))

(assert (=> d!31073 (= (valid!419 (v!2929 (underlying!370 thiss!992))) e!71875)))

(declare-fun b!110503 () Bool)

(declare-fun res!54636 () Bool)

(assert (=> b!110503 (=> (not res!54636) (not e!71875))))

(assert (=> b!110503 (= res!54636 (= (arrayCountValidKeys!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000 (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))) (_size!508 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!110504 () Bool)

(declare-fun res!54637 () Bool)

(assert (=> b!110504 (=> (not res!54637) (not e!71875))))

(assert (=> b!110504 (= res!54637 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!110505 () Bool)

(assert (=> b!110505 (= e!71875 (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000 Nil!1649))))

(assert (= (and d!31073 res!54635) b!110503))

(assert (= (and b!110503 res!54636) b!110504))

(assert (= (and b!110504 res!54637) b!110505))

(declare-fun m!125467 () Bool)

(assert (=> d!31073 m!125467))

(declare-fun m!125469 () Bool)

(assert (=> b!110503 m!125469))

(declare-fun m!125471 () Bool)

(assert (=> b!110504 m!125471))

(declare-fun m!125473 () Bool)

(assert (=> b!110505 m!125473))

(assert (=> d!30901 d!31073))

(declare-fun b!110522 () Bool)

(declare-fun res!54648 () Bool)

(declare-fun e!71885 () Bool)

(assert (=> b!110522 (=> (not res!54648) (not e!71885))))

(declare-fun lt!56997 () SeekEntryResult!271)

(assert (=> b!110522 (= res!54648 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3237 lt!56997)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110522 (and (bvsge (index!3237 lt!56997) #b00000000000000000000000000000000) (bvslt (index!3237 lt!56997) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110523 () Bool)

(declare-fun e!71886 () Bool)

(declare-fun e!71884 () Bool)

(assert (=> b!110523 (= e!71886 e!71884)))

(declare-fun c!19612 () Bool)

(assert (=> b!110523 (= c!19612 ((_ is MissingVacant!271) lt!56997))))

(declare-fun b!110524 () Bool)

(declare-fun e!71887 () Bool)

(declare-fun call!11800 () Bool)

(assert (=> b!110524 (= e!71887 (not call!11800))))

(declare-fun d!31075 () Bool)

(assert (=> d!31075 e!71886))

(declare-fun c!19611 () Bool)

(assert (=> d!31075 (= c!19611 ((_ is MissingZero!271) lt!56997))))

(assert (=> d!31075 (= lt!56997 (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun lt!56998 () Unit!3421)

(declare-fun choose!701 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) Int) Unit!3421)

(assert (=> d!31075 (= lt!56998 (choose!701 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(assert (=> d!31075 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31075 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)) lt!56998)))

(declare-fun b!110525 () Bool)

(assert (=> b!110525 (= e!71884 ((_ is Undefined!271) lt!56997))))

(declare-fun b!110526 () Bool)

(declare-fun res!54646 () Bool)

(assert (=> b!110526 (=> (not res!54646) (not e!71885))))

(declare-fun call!11801 () Bool)

(assert (=> b!110526 (= res!54646 call!11801)))

(assert (=> b!110526 (= e!71884 e!71885)))

(declare-fun b!110527 () Bool)

(assert (=> b!110527 (= e!71886 e!71887)))

(declare-fun res!54649 () Bool)

(assert (=> b!110527 (= res!54649 call!11801)))

(assert (=> b!110527 (=> (not res!54649) (not e!71887))))

(declare-fun bm!11797 () Bool)

(assert (=> bm!11797 (= call!11801 (inRange!0 (ite c!19611 (index!3234 lt!56997) (index!3237 lt!56997)) (mask!6795 newMap!16)))))

(declare-fun bm!11798 () Bool)

(assert (=> bm!11798 (= call!11800 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!110528 () Bool)

(assert (=> b!110528 (and (bvsge (index!3234 lt!56997) #b00000000000000000000000000000000) (bvslt (index!3234 lt!56997) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun res!54647 () Bool)

(assert (=> b!110528 (= res!54647 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3234 lt!56997)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110528 (=> (not res!54647) (not e!71887))))

(declare-fun b!110529 () Bool)

(assert (=> b!110529 (= e!71885 (not call!11800))))

(assert (= (and d!31075 c!19611) b!110527))

(assert (= (and d!31075 (not c!19611)) b!110523))

(assert (= (and b!110527 res!54649) b!110528))

(assert (= (and b!110528 res!54647) b!110524))

(assert (= (and b!110523 c!19612) b!110526))

(assert (= (and b!110523 (not c!19612)) b!110525))

(assert (= (and b!110526 res!54646) b!110522))

(assert (= (and b!110522 res!54648) b!110529))

(assert (= (or b!110527 b!110526) bm!11797))

(assert (= (or b!110524 b!110529) bm!11798))

(declare-fun m!125475 () Bool)

(assert (=> b!110528 m!125475))

(declare-fun m!125477 () Bool)

(assert (=> bm!11797 m!125477))

(assert (=> d!31075 m!124515))

(assert (=> d!31075 m!124671))

(assert (=> d!31075 m!124515))

(declare-fun m!125479 () Bool)

(assert (=> d!31075 m!125479))

(assert (=> d!31075 m!124861))

(assert (=> bm!11798 m!124515))

(assert (=> bm!11798 m!124639))

(declare-fun m!125481 () Bool)

(assert (=> b!110522 m!125481))

(assert (=> bm!11711 d!31075))

(declare-fun d!31077 () Bool)

(declare-fun res!54650 () Bool)

(declare-fun e!71888 () Bool)

(assert (=> d!31077 (=> res!54650 e!71888)))

(assert (=> d!31077 (= res!54650 (= (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31077 (= (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000) e!71888)))

(declare-fun b!110530 () Bool)

(declare-fun e!71889 () Bool)

(assert (=> b!110530 (= e!71888 e!71889)))

(declare-fun res!54651 () Bool)

(assert (=> b!110530 (=> (not res!54651) (not e!71889))))

(assert (=> b!110530 (= res!54651 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110531 () Bool)

(assert (=> b!110531 (= e!71889 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!31077 (not res!54650)) b!110530))

(assert (= (and b!110530 res!54651) b!110531))

(assert (=> d!31077 m!124875))

(assert (=> b!110531 m!124515))

(declare-fun m!125483 () Bool)

(assert (=> b!110531 m!125483))

(assert (=> bm!11725 d!31077))

(declare-fun call!11803 () ListLongMap!1595)

(declare-fun bm!11799 () Bool)

(assert (=> bm!11799 (= call!11803 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!110532 () Bool)

(declare-fun e!71893 () Bool)

(declare-fun lt!57002 () ListLongMap!1595)

(assert (=> b!110532 (= e!71893 (= (apply!100 lt!57002 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun b!110533 () Bool)

(declare-fun e!71896 () Unit!3421)

(declare-fun Unit!3445 () Unit!3421)

(assert (=> b!110533 (= e!71896 Unit!3445)))

(declare-fun b!110534 () Bool)

(declare-fun e!71902 () Bool)

(assert (=> b!110534 (= e!71902 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110535 () Bool)

(declare-fun e!71901 () ListLongMap!1595)

(declare-fun call!11806 () ListLongMap!1595)

(assert (=> b!110535 (= e!71901 (+!149 call!11806 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun bm!11801 () Bool)

(declare-fun call!11807 () Bool)

(assert (=> bm!11801 (= call!11807 (contains!837 lt!57002 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110536 () Bool)

(declare-fun e!71897 () Bool)

(assert (=> b!110536 (= e!71897 (= (apply!100 lt!57002 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!110537 () Bool)

(declare-fun e!71891 () Bool)

(assert (=> b!110537 (= e!71891 e!71897)))

(declare-fun res!54654 () Bool)

(declare-fun call!11808 () Bool)

(assert (=> b!110537 (= res!54654 call!11808)))

(assert (=> b!110537 (=> (not res!54654) (not e!71897))))

(declare-fun b!110538 () Bool)

(declare-fun e!71894 () Bool)

(declare-fun e!71900 () Bool)

(assert (=> b!110538 (= e!71894 e!71900)))

(declare-fun res!54659 () Bool)

(assert (=> b!110538 (=> (not res!54659) (not e!71900))))

(assert (=> b!110538 (= res!54659 (contains!837 lt!57002 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110538 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110539 () Bool)

(declare-fun e!71895 () Bool)

(assert (=> b!110539 (= e!71895 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110540 () Bool)

(declare-fun res!54655 () Bool)

(declare-fun e!71892 () Bool)

(assert (=> b!110540 (=> (not res!54655) (not e!71892))))

(assert (=> b!110540 (= res!54655 e!71891)))

(declare-fun c!19613 () Bool)

(assert (=> b!110540 (= c!19613 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110541 () Bool)

(assert (=> b!110541 (= e!71891 (not call!11808))))

(declare-fun b!110542 () Bool)

(declare-fun e!71890 () ListLongMap!1595)

(declare-fun call!11805 () ListLongMap!1595)

(assert (=> b!110542 (= e!71890 call!11805)))

(declare-fun bm!11802 () Bool)

(declare-fun call!11804 () ListLongMap!1595)

(assert (=> bm!11802 (= call!11805 call!11804)))

(declare-fun bm!11803 () Bool)

(declare-fun call!11802 () ListLongMap!1595)

(assert (=> bm!11803 (= call!11802 call!11806)))

(declare-fun b!110543 () Bool)

(assert (=> b!110543 (= e!71890 call!11802)))

(declare-fun b!110544 () Bool)

(declare-fun c!19615 () Bool)

(assert (=> b!110544 (= c!19615 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71898 () ListLongMap!1595)

(assert (=> b!110544 (= e!71898 e!71890)))

(declare-fun bm!11800 () Bool)

(declare-fun c!19618 () Bool)

(declare-fun c!19614 () Bool)

(assert (=> bm!11800 (= call!11806 (+!149 (ite c!19614 call!11803 (ite c!19618 call!11804 call!11805)) (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun d!31079 () Bool)

(assert (=> d!31079 e!71892))

(declare-fun res!54653 () Bool)

(assert (=> d!31079 (=> (not res!54653) (not e!71892))))

(assert (=> d!31079 (= res!54653 (or (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))))

(declare-fun lt!57014 () ListLongMap!1595)

(assert (=> d!31079 (= lt!57002 lt!57014)))

(declare-fun lt!57015 () Unit!3421)

(assert (=> d!31079 (= lt!57015 e!71896)))

(declare-fun c!19617 () Bool)

(assert (=> d!31079 (= c!19617 e!71895)))

(declare-fun res!54652 () Bool)

(assert (=> d!31079 (=> (not res!54652) (not e!71895))))

(assert (=> d!31079 (= res!54652 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31079 (= lt!57014 e!71901)))

(assert (=> d!31079 (= c!19614 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31079 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31079 (= (getCurrentListMap!489 (_keys!4341 newMap!16) (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57002)))

(declare-fun b!110545 () Bool)

(assert (=> b!110545 (= e!71901 e!71898)))

(assert (=> b!110545 (= c!19618 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110546 () Bool)

(declare-fun e!71899 () Bool)

(assert (=> b!110546 (= e!71892 e!71899)))

(declare-fun c!19616 () Bool)

(assert (=> b!110546 (= c!19616 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110547 () Bool)

(assert (=> b!110547 (= e!71899 e!71893)))

(declare-fun res!54656 () Bool)

(assert (=> b!110547 (= res!54656 call!11807)))

(assert (=> b!110547 (=> (not res!54656) (not e!71893))))

(declare-fun bm!11804 () Bool)

(assert (=> bm!11804 (= call!11808 (contains!837 lt!57002 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110548 () Bool)

(declare-fun lt!57018 () Unit!3421)

(assert (=> b!110548 (= e!71896 lt!57018)))

(declare-fun lt!57007 () ListLongMap!1595)

(assert (=> b!110548 (= lt!57007 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57011 () (_ BitVec 64))

(assert (=> b!110548 (= lt!57011 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57017 () (_ BitVec 64))

(assert (=> b!110548 (= lt!57017 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57016 () Unit!3421)

(assert (=> b!110548 (= lt!57016 (addStillContains!76 lt!57007 lt!57011 (zeroValue!2498 newMap!16) lt!57017))))

(assert (=> b!110548 (contains!837 (+!149 lt!57007 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16))) lt!57017)))

(declare-fun lt!57013 () Unit!3421)

(assert (=> b!110548 (= lt!57013 lt!57016)))

(declare-fun lt!57001 () ListLongMap!1595)

(assert (=> b!110548 (= lt!57001 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57003 () (_ BitVec 64))

(assert (=> b!110548 (= lt!57003 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57004 () (_ BitVec 64))

(assert (=> b!110548 (= lt!57004 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56999 () Unit!3421)

(assert (=> b!110548 (= lt!56999 (addApplyDifferent!76 lt!57001 lt!57003 (minValue!2498 newMap!16) lt!57004))))

(assert (=> b!110548 (= (apply!100 (+!149 lt!57001 (tuple2!2429 lt!57003 (minValue!2498 newMap!16))) lt!57004) (apply!100 lt!57001 lt!57004))))

(declare-fun lt!57000 () Unit!3421)

(assert (=> b!110548 (= lt!57000 lt!56999)))

(declare-fun lt!57008 () ListLongMap!1595)

(assert (=> b!110548 (= lt!57008 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57006 () (_ BitVec 64))

(assert (=> b!110548 (= lt!57006 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57010 () (_ BitVec 64))

(assert (=> b!110548 (= lt!57010 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57009 () Unit!3421)

(assert (=> b!110548 (= lt!57009 (addApplyDifferent!76 lt!57008 lt!57006 (zeroValue!2498 newMap!16) lt!57010))))

(assert (=> b!110548 (= (apply!100 (+!149 lt!57008 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16))) lt!57010) (apply!100 lt!57008 lt!57010))))

(declare-fun lt!57012 () Unit!3421)

(assert (=> b!110548 (= lt!57012 lt!57009)))

(declare-fun lt!57019 () ListLongMap!1595)

(assert (=> b!110548 (= lt!57019 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57020 () (_ BitVec 64))

(assert (=> b!110548 (= lt!57020 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57005 () (_ BitVec 64))

(assert (=> b!110548 (= lt!57005 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110548 (= lt!57018 (addApplyDifferent!76 lt!57019 lt!57020 (minValue!2498 newMap!16) lt!57005))))

(assert (=> b!110548 (= (apply!100 (+!149 lt!57019 (tuple2!2429 lt!57020 (minValue!2498 newMap!16))) lt!57005) (apply!100 lt!57019 lt!57005))))

(declare-fun b!110549 () Bool)

(declare-fun res!54658 () Bool)

(assert (=> b!110549 (=> (not res!54658) (not e!71892))))

(assert (=> b!110549 (= res!54658 e!71894)))

(declare-fun res!54660 () Bool)

(assert (=> b!110549 (=> res!54660 e!71894)))

(assert (=> b!110549 (= res!54660 (not e!71902))))

(declare-fun res!54657 () Bool)

(assert (=> b!110549 (=> (not res!54657) (not e!71902))))

(assert (=> b!110549 (= res!54657 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110550 () Bool)

(assert (=> b!110550 (= e!71898 call!11802)))

(declare-fun bm!11805 () Bool)

(assert (=> bm!11805 (= call!11804 call!11803)))

(declare-fun b!110551 () Bool)

(assert (=> b!110551 (= e!71899 (not call!11807))))

(declare-fun b!110552 () Bool)

(assert (=> b!110552 (= e!71900 (= (apply!100 lt!57002 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110552 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647))))))

(assert (=> b!110552 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (= (and d!31079 c!19614) b!110535))

(assert (= (and d!31079 (not c!19614)) b!110545))

(assert (= (and b!110545 c!19618) b!110550))

(assert (= (and b!110545 (not c!19618)) b!110544))

(assert (= (and b!110544 c!19615) b!110543))

(assert (= (and b!110544 (not c!19615)) b!110542))

(assert (= (or b!110543 b!110542) bm!11802))

(assert (= (or b!110550 bm!11802) bm!11805))

(assert (= (or b!110550 b!110543) bm!11803))

(assert (= (or b!110535 bm!11805) bm!11799))

(assert (= (or b!110535 bm!11803) bm!11800))

(assert (= (and d!31079 res!54652) b!110539))

(assert (= (and d!31079 c!19617) b!110548))

(assert (= (and d!31079 (not c!19617)) b!110533))

(assert (= (and d!31079 res!54653) b!110549))

(assert (= (and b!110549 res!54657) b!110534))

(assert (= (and b!110549 (not res!54660)) b!110538))

(assert (= (and b!110538 res!54659) b!110552))

(assert (= (and b!110549 res!54658) b!110540))

(assert (= (and b!110540 c!19613) b!110537))

(assert (= (and b!110540 (not c!19613)) b!110541))

(assert (= (and b!110537 res!54654) b!110536))

(assert (= (or b!110537 b!110541) bm!11804))

(assert (= (and b!110540 res!54655) b!110546))

(assert (= (and b!110546 c!19616) b!110547))

(assert (= (and b!110546 (not c!19616)) b!110551))

(assert (= (and b!110547 res!54656) b!110532))

(assert (= (or b!110547 b!110551) bm!11801))

(declare-fun b_lambda!4969 () Bool)

(assert (=> (not b_lambda!4969) (not b!110552)))

(assert (=> b!110552 t!5810))

(declare-fun b_and!6821 () Bool)

(assert (= b_and!6817 (and (=> t!5810 result!3549) b_and!6821)))

(assert (=> b!110552 t!5812))

(declare-fun b_and!6823 () Bool)

(assert (= b_and!6819 (and (=> t!5812 result!3551) b_and!6823)))

(declare-fun m!125485 () Bool)

(assert (=> b!110536 m!125485))

(declare-fun m!125487 () Bool)

(assert (=> b!110535 m!125487))

(assert (=> b!110538 m!124875))

(assert (=> b!110538 m!124875))

(declare-fun m!125489 () Bool)

(assert (=> b!110538 m!125489))

(declare-fun m!125491 () Bool)

(assert (=> bm!11800 m!125491))

(assert (=> d!31079 m!124861))

(declare-fun m!125493 () Bool)

(assert (=> b!110548 m!125493))

(declare-fun m!125495 () Bool)

(assert (=> b!110548 m!125495))

(declare-fun m!125497 () Bool)

(assert (=> b!110548 m!125497))

(assert (=> b!110548 m!124875))

(declare-fun m!125499 () Bool)

(assert (=> b!110548 m!125499))

(declare-fun m!125501 () Bool)

(assert (=> b!110548 m!125501))

(declare-fun m!125503 () Bool)

(assert (=> b!110548 m!125503))

(assert (=> b!110548 m!125503))

(declare-fun m!125505 () Bool)

(assert (=> b!110548 m!125505))

(declare-fun m!125507 () Bool)

(assert (=> b!110548 m!125507))

(declare-fun m!125509 () Bool)

(assert (=> b!110548 m!125509))

(declare-fun m!125511 () Bool)

(assert (=> b!110548 m!125511))

(declare-fun m!125513 () Bool)

(assert (=> b!110548 m!125513))

(declare-fun m!125515 () Bool)

(assert (=> b!110548 m!125515))

(assert (=> b!110548 m!125513))

(declare-fun m!125517 () Bool)

(assert (=> b!110548 m!125517))

(declare-fun m!125519 () Bool)

(assert (=> b!110548 m!125519))

(assert (=> b!110548 m!125495))

(declare-fun m!125521 () Bool)

(assert (=> b!110548 m!125521))

(assert (=> b!110548 m!125501))

(declare-fun m!125523 () Bool)

(assert (=> b!110548 m!125523))

(assert (=> b!110534 m!124875))

(assert (=> b!110534 m!124875))

(assert (=> b!110534 m!124877))

(assert (=> bm!11799 m!125499))

(declare-fun m!125525 () Bool)

(assert (=> bm!11804 m!125525))

(assert (=> b!110539 m!124875))

(assert (=> b!110539 m!124875))

(assert (=> b!110539 m!124877))

(declare-fun m!125527 () Bool)

(assert (=> bm!11801 m!125527))

(assert (=> b!110552 m!124875))

(declare-fun m!125529 () Bool)

(assert (=> b!110552 m!125529))

(assert (=> b!110552 m!124937))

(declare-fun m!125531 () Bool)

(assert (=> b!110552 m!125531))

(assert (=> b!110552 m!124937))

(declare-fun m!125533 () Bool)

(assert (=> b!110552 m!125533))

(assert (=> b!110552 m!124875))

(assert (=> b!110552 m!125531))

(declare-fun m!125535 () Bool)

(assert (=> b!110532 m!125535))

(assert (=> bm!11708 d!31079))

(declare-fun b!110587 () Bool)

(declare-fun c!19629 () Bool)

(declare-fun lt!57101 () SeekEntryResult!271)

(assert (=> b!110587 (= c!19629 ((_ is MissingVacant!271) lt!57101))))

(declare-fun e!71920 () Bool)

(declare-fun e!71923 () Bool)

(assert (=> b!110587 (= e!71920 e!71923)))

(declare-fun call!11817 () Bool)

(declare-fun bm!11814 () Bool)

(assert (=> bm!11814 (= call!11817 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!110588 () Bool)

(declare-fun e!71925 () Bool)

(assert (=> b!110588 (= e!71925 (not call!11817))))

(declare-fun b!110589 () Bool)

(declare-fun e!71926 () Unit!3421)

(declare-fun Unit!3446 () Unit!3421)

(assert (=> b!110589 (= e!71926 Unit!3446)))

(declare-fun lt!57106 () Unit!3421)

(assert (=> b!110589 (= lt!57106 (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57110 () SeekEntryResult!271)

(declare-fun call!11820 () SeekEntryResult!271)

(assert (=> b!110589 (= lt!57110 call!11820)))

(declare-fun res!54679 () Bool)

(assert (=> b!110589 (= res!54679 ((_ is Found!271) lt!57110))))

(declare-fun e!71922 () Bool)

(assert (=> b!110589 (=> (not res!54679) (not e!71922))))

(assert (=> b!110589 e!71922))

(declare-fun lt!57085 () Unit!3421)

(assert (=> b!110589 (= lt!57085 lt!57106)))

(assert (=> b!110589 false))

(declare-fun lt!57097 () tuple2!2430)

(declare-fun e!71921 () Bool)

(declare-fun b!110590 () Bool)

(assert (=> b!110590 (= e!71921 (= (map!1294 (_2!1225 lt!57097)) (+!149 (map!1294 newMap!16) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!110591 () Bool)

(declare-fun res!54683 () Bool)

(assert (=> b!110591 (=> (not res!54683) (not e!71921))))

(assert (=> b!110591 (= res!54683 (contains!837 (map!1294 (_2!1225 lt!57097)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110592 () Bool)

(declare-fun e!71919 () Unit!3421)

(declare-fun Unit!3447 () Unit!3421)

(assert (=> b!110592 (= e!71919 Unit!3447)))

(declare-fun lt!57102 () Unit!3421)

(declare-fun lemmaArrayContainsKeyThenInListMap!32 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) (_ BitVec 32) Int) Unit!3421)

(assert (=> b!110592 (= lt!57102 (lemmaArrayContainsKeyThenInListMap!32 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(assert (=> b!110592 (contains!837 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))

(declare-fun lt!57086 () Unit!3421)

(assert (=> b!110592 (= lt!57086 lt!57102)))

(assert (=> b!110592 false))

(declare-fun call!11818 () Bool)

(declare-fun c!19630 () Bool)

(declare-fun c!19628 () Bool)

(declare-fun bm!11815 () Bool)

(assert (=> bm!11815 (= call!11818 (inRange!0 (ite c!19628 (index!3235 lt!57110) (ite c!19630 (index!3234 lt!57101) (index!3237 lt!57101))) (mask!6795 newMap!16)))))

(declare-fun b!110593 () Bool)

(declare-fun res!54682 () Bool)

(assert (=> b!110593 (= res!54682 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3237 lt!57101)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71924 () Bool)

(assert (=> b!110593 (=> (not res!54682) (not e!71924))))

(declare-fun b!110594 () Bool)

(assert (=> b!110594 (= e!71922 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!57110)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110595 () Bool)

(assert (=> b!110595 (= e!71924 (not call!11817))))

(declare-fun d!31081 () Bool)

(assert (=> d!31081 e!71921))

(declare-fun res!54686 () Bool)

(assert (=> d!31081 (=> (not res!54686) (not e!71921))))

(assert (=> d!31081 (= res!54686 (_1!1225 lt!57097))))

(assert (=> d!31081 (= lt!57097 (tuple2!2431 true (LongMapFixedSize!919 (defaultEntry!2627 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (bvadd (_size!508 newMap!16) #b00000000000000000000000000000001) (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (_vacant!508 newMap!16))))))

(declare-fun lt!57096 () Unit!3421)

(declare-fun lt!57099 () Unit!3421)

(assert (=> d!31081 (= lt!57096 lt!57099)))

(declare-fun lt!57089 () array!4390)

(declare-fun lt!57087 () array!4388)

(assert (=> d!31081 (contains!837 (getCurrentListMap!489 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639))))))

(assert (=> d!31081 (= lt!57099 (lemmaValidKeyInArrayIsInListMap!107 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (defaultEntry!2627 newMap!16)))))

(assert (=> d!31081 (= lt!57089 (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))))

(assert (=> d!31081 (= lt!57087 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun lt!57081 () Unit!3421)

(declare-fun lt!57083 () Unit!3421)

(assert (=> d!31081 (= lt!57081 lt!57083)))

(declare-fun lt!57103 () array!4388)

(assert (=> d!31081 (= (arrayCountValidKeys!0 lt!57103 (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (bvadd (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4388 (_ BitVec 32)) Unit!3421)

(assert (=> d!31081 (= lt!57083 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!57103 (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639))))))

(assert (=> d!31081 (= lt!57103 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun lt!57105 () Unit!3421)

(declare-fun lt!57107 () Unit!3421)

(assert (=> d!31081 (= lt!57105 lt!57107)))

(declare-fun lt!57109 () array!4388)

(assert (=> d!31081 (arrayContainsKey!0 lt!57109 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!31081 (= lt!57107 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!57109 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639))))))

(assert (=> d!31081 (= lt!57109 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun lt!57095 () Unit!3421)

(declare-fun lt!57090 () Unit!3421)

(assert (=> d!31081 (= lt!57095 lt!57090)))

(assert (=> d!31081 (= (+!149 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (getCurrentListMap!489 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!32 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) (_ BitVec 64) V!3243 Int) Unit!3421)

(assert (=> d!31081 (= lt!57090 (lemmaAddValidKeyToArrayThenAddPairToListMap!32 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57082 () Unit!3421)

(declare-fun lt!57092 () Unit!3421)

(assert (=> d!31081 (= lt!57082 lt!57092)))

(assert (=> d!31081 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (mask!6795 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4388 (_ BitVec 32) (_ BitVec 32)) Unit!3421)

(assert (=> d!31081 (= lt!57092 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (mask!6795 newMap!16)))))

(declare-fun lt!57088 () Unit!3421)

(declare-fun lt!57084 () Unit!3421)

(assert (=> d!31081 (= lt!57088 lt!57084)))

(assert (=> d!31081 (= (arrayCountValidKeys!0 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4388 (_ BitVec 32) (_ BitVec 64)) Unit!3421)

(assert (=> d!31081 (= lt!57084 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4341 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!57093 () Unit!3421)

(declare-fun lt!57098 () Unit!3421)

(assert (=> d!31081 (= lt!57093 lt!57098)))

(declare-fun lt!57104 () List!1652)

(declare-fun lt!57108 () (_ BitVec 32))

(assert (=> d!31081 (arrayNoDuplicates!0 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) lt!57108 lt!57104)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4388 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1652) Unit!3421)

(assert (=> d!31081 (= lt!57098 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) lt!57108 lt!57104))))

(assert (=> d!31081 (= lt!57104 Nil!1649)))

(assert (=> d!31081 (= lt!57108 #b00000000000000000000000000000000)))

(declare-fun lt!57094 () Unit!3421)

(assert (=> d!31081 (= lt!57094 e!71919)))

(declare-fun c!19627 () Bool)

(assert (=> d!31081 (= c!19627 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!57100 () Unit!3421)

(assert (=> d!31081 (= lt!57100 e!71926)))

(assert (=> d!31081 (= c!19628 (contains!837 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31081 (valid!419 newMap!16)))

(assert (=> d!31081 (= (updateHelperNewKey!49 newMap!16 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639))) lt!57097)))

(declare-fun b!110596 () Bool)

(declare-fun Unit!3448 () Unit!3421)

(assert (=> b!110596 (= e!71919 Unit!3448)))

(declare-fun bm!11816 () Bool)

(assert (=> bm!11816 (= call!11820 (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun b!110597 () Bool)

(assert (=> b!110597 (= e!71923 e!71924)))

(declare-fun res!54685 () Bool)

(declare-fun call!11819 () Bool)

(assert (=> b!110597 (= res!54685 call!11819)))

(assert (=> b!110597 (=> (not res!54685) (not e!71924))))

(declare-fun bm!11817 () Bool)

(assert (=> bm!11817 (= call!11819 call!11818)))

(declare-fun b!110598 () Bool)

(assert (=> b!110598 (= e!71923 ((_ is Undefined!271) lt!57101))))

(declare-fun b!110599 () Bool)

(declare-fun res!54680 () Bool)

(assert (=> b!110599 (=> (not res!54680) (not e!71925))))

(assert (=> b!110599 (= res!54680 call!11819)))

(assert (=> b!110599 (= e!71920 e!71925)))

(declare-fun b!110600 () Bool)

(declare-fun res!54684 () Bool)

(assert (=> b!110600 (=> (not res!54684) (not e!71925))))

(assert (=> b!110600 (= res!54684 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3234 lt!57101)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110601 () Bool)

(declare-fun res!54687 () Bool)

(assert (=> b!110601 (= res!54687 call!11818)))

(assert (=> b!110601 (=> (not res!54687) (not e!71922))))

(declare-fun b!110602 () Bool)

(declare-fun lt!57091 () Unit!3421)

(assert (=> b!110602 (= e!71926 lt!57091)))

(assert (=> b!110602 (= lt!57091 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(assert (=> b!110602 (= lt!57101 call!11820)))

(assert (=> b!110602 (= c!19630 ((_ is MissingZero!271) lt!57101))))

(assert (=> b!110602 e!71920))

(declare-fun b!110603 () Bool)

(declare-fun res!54681 () Bool)

(assert (=> b!110603 (=> (not res!54681) (not e!71921))))

(assert (=> b!110603 (= res!54681 (valid!419 (_2!1225 lt!57097)))))

(assert (= (and d!31081 c!19628) b!110589))

(assert (= (and d!31081 (not c!19628)) b!110602))

(assert (= (and b!110589 res!54679) b!110601))

(assert (= (and b!110601 res!54687) b!110594))

(assert (= (and b!110602 c!19630) b!110599))

(assert (= (and b!110602 (not c!19630)) b!110587))

(assert (= (and b!110599 res!54680) b!110600))

(assert (= (and b!110600 res!54684) b!110588))

(assert (= (and b!110587 c!19629) b!110597))

(assert (= (and b!110587 (not c!19629)) b!110598))

(assert (= (and b!110597 res!54685) b!110593))

(assert (= (and b!110593 res!54682) b!110595))

(assert (= (or b!110599 b!110597) bm!11817))

(assert (= (or b!110588 b!110595) bm!11814))

(assert (= (or b!110601 bm!11817) bm!11815))

(assert (= (or b!110589 b!110602) bm!11816))

(assert (= (and d!31081 c!19627) b!110592))

(assert (= (and d!31081 (not c!19627)) b!110596))

(assert (= (and d!31081 res!54686) b!110603))

(assert (= (and b!110603 res!54681) b!110591))

(assert (= (and b!110591 res!54683) b!110590))

(declare-fun m!125537 () Bool)

(assert (=> bm!11815 m!125537))

(declare-fun m!125539 () Bool)

(assert (=> b!110593 m!125539))

(assert (=> d!31081 m!124531))

(assert (=> d!31081 m!124515))

(declare-fun m!125541 () Bool)

(assert (=> d!31081 m!125541))

(declare-fun m!125543 () Bool)

(assert (=> d!31081 m!125543))

(assert (=> d!31081 m!124677))

(declare-fun m!125545 () Bool)

(assert (=> d!31081 m!125545))

(declare-fun m!125547 () Bool)

(assert (=> d!31081 m!125547))

(declare-fun m!125549 () Bool)

(assert (=> d!31081 m!125549))

(declare-fun m!125551 () Bool)

(assert (=> d!31081 m!125551))

(assert (=> d!31081 m!124515))

(declare-fun m!125553 () Bool)

(assert (=> d!31081 m!125553))

(declare-fun m!125555 () Bool)

(assert (=> d!31081 m!125555))

(declare-fun m!125557 () Bool)

(assert (=> d!31081 m!125557))

(assert (=> d!31081 m!124677))

(assert (=> d!31081 m!124515))

(declare-fun m!125559 () Bool)

(assert (=> d!31081 m!125559))

(declare-fun m!125561 () Bool)

(assert (=> d!31081 m!125561))

(assert (=> d!31081 m!125547))

(declare-fun m!125563 () Bool)

(assert (=> d!31081 m!125563))

(assert (=> d!31081 m!124677))

(assert (=> d!31081 m!125273))

(assert (=> d!31081 m!124515))

(declare-fun m!125565 () Bool)

(assert (=> d!31081 m!125565))

(declare-fun m!125567 () Bool)

(assert (=> d!31081 m!125567))

(declare-fun m!125569 () Bool)

(assert (=> d!31081 m!125569))

(assert (=> d!31081 m!124515))

(declare-fun m!125571 () Bool)

(assert (=> d!31081 m!125571))

(assert (=> d!31081 m!124689))

(assert (=> d!31081 m!124515))

(declare-fun m!125573 () Bool)

(assert (=> d!31081 m!125573))

(declare-fun m!125575 () Bool)

(assert (=> d!31081 m!125575))

(assert (=> d!31081 m!124515))

(assert (=> d!31081 m!124639))

(assert (=> d!31081 m!125545))

(assert (=> d!31081 m!124515))

(declare-fun m!125577 () Bool)

(assert (=> d!31081 m!125577))

(assert (=> b!110589 m!124515))

(assert (=> b!110589 m!124681))

(assert (=> b!110602 m!124515))

(assert (=> b!110602 m!124631))

(declare-fun m!125579 () Bool)

(assert (=> b!110594 m!125579))

(assert (=> bm!11814 m!124515))

(assert (=> bm!11814 m!124639))

(declare-fun m!125581 () Bool)

(assert (=> b!110590 m!125581))

(assert (=> b!110590 m!124547))

(assert (=> b!110590 m!124547))

(declare-fun m!125583 () Bool)

(assert (=> b!110590 m!125583))

(assert (=> b!110592 m!124515))

(declare-fun m!125585 () Bool)

(assert (=> b!110592 m!125585))

(assert (=> b!110592 m!124677))

(assert (=> b!110592 m!124677))

(assert (=> b!110592 m!124515))

(assert (=> b!110592 m!125559))

(assert (=> bm!11816 m!124515))

(assert (=> bm!11816 m!124671))

(declare-fun m!125587 () Bool)

(assert (=> b!110600 m!125587))

(declare-fun m!125589 () Bool)

(assert (=> b!110603 m!125589))

(assert (=> b!110591 m!125581))

(assert (=> b!110591 m!125581))

(assert (=> b!110591 m!124515))

(declare-fun m!125591 () Bool)

(assert (=> b!110591 m!125591))

(assert (=> bm!11723 d!31081))

(declare-fun b!110604 () Bool)

(declare-fun e!71928 () Bool)

(declare-fun e!71929 () Bool)

(assert (=> b!110604 (= e!71928 e!71929)))

(declare-fun res!54688 () Bool)

(assert (=> b!110604 (=> (not res!54688) (not e!71929))))

(declare-fun e!71927 () Bool)

(assert (=> b!110604 (= res!54688 (not e!71927))))

(declare-fun res!54689 () Bool)

(assert (=> b!110604 (=> (not res!54689) (not e!71927))))

(assert (=> b!110604 (= res!54689 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!31083 () Bool)

(declare-fun res!54690 () Bool)

(assert (=> d!31083 (=> res!54690 e!71928)))

(assert (=> d!31083 (= res!54690 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> d!31083 (= (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)) e!71928)))

(declare-fun b!110605 () Bool)

(assert (=> b!110605 (= e!71927 (contains!840 (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!110606 () Bool)

(declare-fun e!71930 () Bool)

(assert (=> b!110606 (= e!71929 e!71930)))

(declare-fun c!19631 () Bool)

(assert (=> b!110606 (= c!19631 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun call!11821 () Bool)

(declare-fun bm!11818 () Bool)

(assert (=> bm!11818 (= call!11821 (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19631 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649))))))

(declare-fun b!110607 () Bool)

(assert (=> b!110607 (= e!71930 call!11821)))

(declare-fun b!110608 () Bool)

(assert (=> b!110608 (= e!71930 call!11821)))

(assert (= (and d!31083 (not res!54690)) b!110604))

(assert (= (and b!110604 res!54689) b!110605))

(assert (= (and b!110604 res!54688) b!110606))

(assert (= (and b!110606 c!19631) b!110608))

(assert (= (and b!110606 (not c!19631)) b!110607))

(assert (= (or b!110608 b!110607) bm!11818))

(declare-fun m!125593 () Bool)

(assert (=> b!110604 m!125593))

(assert (=> b!110604 m!125593))

(declare-fun m!125595 () Bool)

(assert (=> b!110604 m!125595))

(assert (=> b!110605 m!125593))

(assert (=> b!110605 m!125593))

(declare-fun m!125597 () Bool)

(assert (=> b!110605 m!125597))

(assert (=> b!110606 m!125593))

(assert (=> b!110606 m!125593))

(assert (=> b!110606 m!125595))

(assert (=> bm!11818 m!125593))

(declare-fun m!125599 () Bool)

(assert (=> bm!11818 m!125599))

(assert (=> bm!11755 d!31083))

(declare-fun bm!11821 () Bool)

(declare-fun call!11824 () (_ BitVec 32))

(assert (=> bm!11821 (= call!11824 (arrayCountValidKeys!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110617 () Bool)

(declare-fun e!71936 () (_ BitVec 32))

(assert (=> b!110617 (= e!71936 #b00000000000000000000000000000000)))

(declare-fun b!110618 () Bool)

(declare-fun e!71935 () (_ BitVec 32))

(assert (=> b!110618 (= e!71935 call!11824)))

(declare-fun d!31085 () Bool)

(declare-fun lt!57113 () (_ BitVec 32))

(assert (=> d!31085 (and (bvsge lt!57113 #b00000000000000000000000000000000) (bvsle lt!57113 (bvsub (size!2337 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31085 (= lt!57113 e!71936)))

(declare-fun c!19636 () Bool)

(assert (=> d!31085 (= c!19636 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31085 (and (bvsle #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2337 (_keys!4341 newMap!16)) (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31085 (= (arrayCountValidKeys!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) lt!57113)))

(declare-fun b!110619 () Bool)

(assert (=> b!110619 (= e!71936 e!71935)))

(declare-fun c!19637 () Bool)

(assert (=> b!110619 (= c!19637 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110620 () Bool)

(assert (=> b!110620 (= e!71935 (bvadd #b00000000000000000000000000000001 call!11824))))

(assert (= (and d!31085 c!19636) b!110617))

(assert (= (and d!31085 (not c!19636)) b!110619))

(assert (= (and b!110619 c!19637) b!110620))

(assert (= (and b!110619 (not c!19637)) b!110618))

(assert (= (or b!110620 b!110618) bm!11821))

(declare-fun m!125601 () Bool)

(assert (=> bm!11821 m!125601))

(assert (=> b!110619 m!124875))

(assert (=> b!110619 m!124875))

(assert (=> b!110619 m!124877))

(assert (=> b!110030 d!31085))

(declare-fun d!31087 () Bool)

(assert (=> d!31087 (= (apply!100 lt!56674 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1359 (getValueByKey!157 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4544 () Bool)

(assert (= bs!4544 d!31087))

(assert (=> bs!4544 m!124711))

(assert (=> bs!4544 m!124887))

(assert (=> bs!4544 m!124887))

(declare-fun m!125603 () Bool)

(assert (=> bs!4544 m!125603))

(assert (=> b!110070 d!31087))

(assert (=> b!110070 d!30919))

(declare-fun d!31089 () Bool)

(declare-fun e!71937 () Bool)

(assert (=> d!31089 e!71937))

(declare-fun res!54691 () Bool)

(assert (=> d!31089 (=> res!54691 e!71937)))

(declare-fun lt!57117 () Bool)

(assert (=> d!31089 (= res!54691 (not lt!57117))))

(declare-fun lt!57114 () Bool)

(assert (=> d!31089 (= lt!57117 lt!57114)))

(declare-fun lt!57116 () Unit!3421)

(declare-fun e!71938 () Unit!3421)

(assert (=> d!31089 (= lt!57116 e!71938)))

(declare-fun c!19638 () Bool)

(assert (=> d!31089 (= c!19638 lt!57114)))

(assert (=> d!31089 (= lt!57114 (containsKey!161 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31089 (= (contains!837 call!11731 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) lt!57117)))

(declare-fun b!110621 () Bool)

(declare-fun lt!57115 () Unit!3421)

(assert (=> b!110621 (= e!71938 lt!57115)))

(assert (=> b!110621 (= lt!57115 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110621 (isDefined!111 (getValueByKey!157 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110622 () Bool)

(declare-fun Unit!3449 () Unit!3421)

(assert (=> b!110622 (= e!71938 Unit!3449)))

(declare-fun b!110623 () Bool)

(assert (=> b!110623 (= e!71937 (isDefined!111 (getValueByKey!157 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!31089 c!19638) b!110621))

(assert (= (and d!31089 (not c!19638)) b!110622))

(assert (= (and d!31089 (not res!54691)) b!110623))

(assert (=> d!31089 m!124515))

(declare-fun m!125605 () Bool)

(assert (=> d!31089 m!125605))

(assert (=> b!110621 m!124515))

(declare-fun m!125607 () Bool)

(assert (=> b!110621 m!125607))

(assert (=> b!110621 m!124515))

(declare-fun m!125609 () Bool)

(assert (=> b!110621 m!125609))

(assert (=> b!110621 m!125609))

(declare-fun m!125611 () Bool)

(assert (=> b!110621 m!125611))

(assert (=> b!110623 m!124515))

(assert (=> b!110623 m!125609))

(assert (=> b!110623 m!125609))

(assert (=> b!110623 m!125611))

(assert (=> b!110009 d!31089))

(assert (=> b!110020 d!30955))

(declare-fun d!31091 () Bool)

(assert (=> d!31091 (isDefined!111 (getValueByKey!157 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!57120 () Unit!3421)

(declare-fun choose!702 (List!1653 (_ BitVec 64)) Unit!3421)

(assert (=> d!31091 (= lt!57120 (choose!702 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!71941 () Bool)

(assert (=> d!31091 e!71941))

(declare-fun res!54694 () Bool)

(assert (=> d!31091 (=> (not res!54694) (not e!71941))))

(assert (=> d!31091 (= res!54694 (isStrictlySorted!306 (toList!813 lt!56524)))))

(assert (=> d!31091 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) lt!57120)))

(declare-fun b!110626 () Bool)

(assert (=> b!110626 (= e!71941 (containsKey!161 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31091 res!54694) b!110626))

(assert (=> d!31091 m!124515))

(assert (=> d!31091 m!124627))

(assert (=> d!31091 m!124627))

(assert (=> d!31091 m!124629))

(assert (=> d!31091 m!124515))

(declare-fun m!125613 () Bool)

(assert (=> d!31091 m!125613))

(declare-fun m!125615 () Bool)

(assert (=> d!31091 m!125615))

(assert (=> b!110626 m!124515))

(assert (=> b!110626 m!124623))

(assert (=> b!109895 d!31091))

(assert (=> b!109895 d!30933))

(assert (=> b!109895 d!30935))

(declare-fun d!31093 () Bool)

(declare-fun res!54695 () Bool)

(declare-fun e!71942 () Bool)

(assert (=> d!31093 (=> res!54695 e!71942)))

(assert (=> d!31093 (= res!54695 (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31093 (= (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!71942)))

(declare-fun b!110627 () Bool)

(declare-fun e!71943 () Bool)

(assert (=> b!110627 (= e!71942 e!71943)))

(declare-fun res!54696 () Bool)

(assert (=> b!110627 (=> (not res!54696) (not e!71943))))

(assert (=> b!110627 (= res!54696 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110628 () Bool)

(assert (=> b!110628 (= e!71943 (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!31093 (not res!54695)) b!110627))

(assert (= (and b!110627 res!54696) b!110628))

(assert (=> d!31093 m!125229))

(assert (=> b!110628 m!124515))

(declare-fun m!125617 () Bool)

(assert (=> b!110628 m!125617))

(assert (=> b!110155 d!31093))

(declare-fun d!31095 () Bool)

(declare-fun e!71944 () Bool)

(assert (=> d!31095 e!71944))

(declare-fun res!54697 () Bool)

(assert (=> d!31095 (=> res!54697 e!71944)))

(declare-fun lt!57124 () Bool)

(assert (=> d!31095 (= res!54697 (not lt!57124))))

(declare-fun lt!57121 () Bool)

(assert (=> d!31095 (= lt!57124 lt!57121)))

(declare-fun lt!57123 () Unit!3421)

(declare-fun e!71945 () Unit!3421)

(assert (=> d!31095 (= lt!57123 e!71945)))

(declare-fun c!19639 () Bool)

(assert (=> d!31095 (= c!19639 lt!57121)))

(assert (=> d!31095 (= lt!57121 (containsKey!161 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31095 (= (contains!837 lt!56674 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57124)))

(declare-fun b!110629 () Bool)

(declare-fun lt!57122 () Unit!3421)

(assert (=> b!110629 (= e!71945 lt!57122)))

(assert (=> b!110629 (= lt!57122 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110629 (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110630 () Bool)

(declare-fun Unit!3450 () Unit!3421)

(assert (=> b!110630 (= e!71945 Unit!3450)))

(declare-fun b!110631 () Bool)

(assert (=> b!110631 (= e!71944 (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31095 c!19639) b!110629))

(assert (= (and d!31095 (not c!19639)) b!110630))

(assert (= (and d!31095 (not res!54697)) b!110631))

(declare-fun m!125619 () Bool)

(assert (=> d!31095 m!125619))

(declare-fun m!125621 () Bool)

(assert (=> b!110629 m!125621))

(declare-fun m!125623 () Bool)

(assert (=> b!110629 m!125623))

(assert (=> b!110629 m!125623))

(declare-fun m!125625 () Bool)

(assert (=> b!110629 m!125625))

(assert (=> b!110631 m!125623))

(assert (=> b!110631 m!125623))

(assert (=> b!110631 m!125625))

(assert (=> b!110068 d!31095))

(declare-fun d!31097 () Bool)

(declare-fun e!71946 () Bool)

(assert (=> d!31097 e!71946))

(declare-fun res!54698 () Bool)

(assert (=> d!31097 (=> (not res!54698) (not e!71946))))

(declare-fun lt!57125 () ListLongMap!1595)

(assert (=> d!31097 (= res!54698 (contains!837 lt!57125 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun lt!57128 () List!1653)

(assert (=> d!31097 (= lt!57125 (ListLongMap!1596 lt!57128))))

(declare-fun lt!57126 () Unit!3421)

(declare-fun lt!57127 () Unit!3421)

(assert (=> d!31097 (= lt!57126 lt!57127)))

(assert (=> d!31097 (= (getValueByKey!157 lt!57128 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31097 (= lt!57127 (lemmaContainsTupThenGetReturnValue!75 lt!57128 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31097 (= lt!57128 (insertStrictlySorted!77 (toList!813 call!11713) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31097 (= (+!149 call!11713 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) lt!57125)))

(declare-fun b!110632 () Bool)

(declare-fun res!54699 () Bool)

(assert (=> b!110632 (=> (not res!54699) (not e!71946))))

(assert (=> b!110632 (= res!54699 (= (getValueByKey!157 (toList!813 lt!57125) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!110633 () Bool)

(assert (=> b!110633 (= e!71946 (contains!839 (toList!813 lt!57125) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(assert (= (and d!31097 res!54698) b!110632))

(assert (= (and b!110632 res!54699) b!110633))

(declare-fun m!125627 () Bool)

(assert (=> d!31097 m!125627))

(declare-fun m!125629 () Bool)

(assert (=> d!31097 m!125629))

(declare-fun m!125631 () Bool)

(assert (=> d!31097 m!125631))

(declare-fun m!125633 () Bool)

(assert (=> d!31097 m!125633))

(declare-fun m!125635 () Bool)

(assert (=> b!110632 m!125635))

(declare-fun m!125637 () Bool)

(assert (=> b!110633 m!125637))

(assert (=> b!110007 d!31097))

(assert (=> bm!11706 d!30893))

(declare-fun d!31099 () Bool)

(declare-fun isEmpty!383 (List!1653) Bool)

(assert (=> d!31099 (= (isEmpty!381 lt!56674) (isEmpty!383 (toList!813 lt!56674)))))

(declare-fun bs!4545 () Bool)

(assert (= bs!4545 d!31099))

(declare-fun m!125639 () Bool)

(assert (=> bs!4545 m!125639))

(assert (=> b!110063 d!31099))

(declare-fun b!110636 () Bool)

(declare-fun e!71948 () Option!163)

(assert (=> b!110636 (= e!71948 (getValueByKey!157 (t!5802 (toList!813 lt!56691)) (_1!1224 lt!56517)))))

(declare-fun d!31101 () Bool)

(declare-fun c!19640 () Bool)

(assert (=> d!31101 (= c!19640 (and ((_ is Cons!1649) (toList!813 lt!56691)) (= (_1!1224 (h!2248 (toList!813 lt!56691))) (_1!1224 lt!56517))))))

(declare-fun e!71947 () Option!163)

(assert (=> d!31101 (= (getValueByKey!157 (toList!813 lt!56691) (_1!1224 lt!56517)) e!71947)))

(declare-fun b!110637 () Bool)

(assert (=> b!110637 (= e!71948 None!161)))

(declare-fun b!110635 () Bool)

(assert (=> b!110635 (= e!71947 e!71948)))

(declare-fun c!19641 () Bool)

(assert (=> b!110635 (= c!19641 (and ((_ is Cons!1649) (toList!813 lt!56691)) (not (= (_1!1224 (h!2248 (toList!813 lt!56691))) (_1!1224 lt!56517)))))))

(declare-fun b!110634 () Bool)

(assert (=> b!110634 (= e!71947 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56691)))))))

(assert (= (and d!31101 c!19640) b!110634))

(assert (= (and d!31101 (not c!19640)) b!110635))

(assert (= (and b!110635 c!19641) b!110636))

(assert (= (and b!110635 (not c!19641)) b!110637))

(declare-fun m!125641 () Bool)

(assert (=> b!110636 m!125641))

(assert (=> b!110081 d!31101))

(assert (=> d!30903 d!30907))

(declare-fun d!31103 () Bool)

(assert (=> d!31103 (not (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!31103 true))

(declare-fun _$68!112 () Unit!3421)

(assert (=> d!31103 (= (choose!68 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649)) _$68!112)))

(declare-fun bs!4546 () Bool)

(assert (= bs!4546 d!31103))

(assert (=> bs!4546 m!124515))

(assert (=> bs!4546 m!124543))

(assert (=> d!30903 d!31103))

(declare-fun d!31105 () Bool)

(declare-fun e!71949 () Bool)

(assert (=> d!31105 e!71949))

(declare-fun res!54700 () Bool)

(assert (=> d!31105 (=> res!54700 e!71949)))

(declare-fun lt!57132 () Bool)

(assert (=> d!31105 (= res!54700 (not lt!57132))))

(declare-fun lt!57129 () Bool)

(assert (=> d!31105 (= lt!57132 lt!57129)))

(declare-fun lt!57131 () Unit!3421)

(declare-fun e!71950 () Unit!3421)

(assert (=> d!31105 (= lt!57131 e!71950)))

(declare-fun c!19642 () Bool)

(assert (=> d!31105 (= c!19642 lt!57129)))

(assert (=> d!31105 (= lt!57129 (containsKey!161 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31105 (= (contains!837 lt!56674 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57132)))

(declare-fun b!110638 () Bool)

(declare-fun lt!57130 () Unit!3421)

(assert (=> b!110638 (= e!71950 lt!57130)))

(assert (=> b!110638 (= lt!57130 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110638 (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110639 () Bool)

(declare-fun Unit!3451 () Unit!3421)

(assert (=> b!110639 (= e!71950 Unit!3451)))

(declare-fun b!110640 () Bool)

(assert (=> b!110640 (= e!71949 (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31105 c!19642) b!110638))

(assert (= (and d!31105 (not c!19642)) b!110639))

(assert (= (and d!31105 (not res!54700)) b!110640))

(declare-fun m!125643 () Bool)

(assert (=> d!31105 m!125643))

(declare-fun m!125645 () Bool)

(assert (=> b!110638 m!125645))

(declare-fun m!125647 () Bool)

(assert (=> b!110638 m!125647))

(assert (=> b!110638 m!125647))

(declare-fun m!125649 () Bool)

(assert (=> b!110638 m!125649))

(assert (=> b!110640 m!125647))

(assert (=> b!110640 m!125647))

(assert (=> b!110640 m!125649))

(assert (=> d!30879 d!31105))

(assert (=> d!30879 d!30887))

(declare-fun b!110643 () Bool)

(declare-fun e!71952 () Option!163)

(assert (=> b!110643 (= e!71952 (getValueByKey!157 (t!5802 (toList!813 lt!56687)) (_1!1224 lt!56528)))))

(declare-fun d!31107 () Bool)

(declare-fun c!19643 () Bool)

(assert (=> d!31107 (= c!19643 (and ((_ is Cons!1649) (toList!813 lt!56687)) (= (_1!1224 (h!2248 (toList!813 lt!56687))) (_1!1224 lt!56528))))))

(declare-fun e!71951 () Option!163)

(assert (=> d!31107 (= (getValueByKey!157 (toList!813 lt!56687) (_1!1224 lt!56528)) e!71951)))

(declare-fun b!110644 () Bool)

(assert (=> b!110644 (= e!71952 None!161)))

(declare-fun b!110642 () Bool)

(assert (=> b!110642 (= e!71951 e!71952)))

(declare-fun c!19644 () Bool)

(assert (=> b!110642 (= c!19644 (and ((_ is Cons!1649) (toList!813 lt!56687)) (not (= (_1!1224 (h!2248 (toList!813 lt!56687))) (_1!1224 lt!56528)))))))

(declare-fun b!110641 () Bool)

(assert (=> b!110641 (= e!71951 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56687)))))))

(assert (= (and d!31107 c!19643) b!110641))

(assert (= (and d!31107 (not c!19643)) b!110642))

(assert (= (and b!110642 c!19644) b!110643))

(assert (= (and b!110642 (not c!19644)) b!110644))

(declare-fun m!125651 () Bool)

(assert (=> b!110643 m!125651))

(assert (=> b!110079 d!31107))

(declare-fun d!31109 () Bool)

(assert (=> d!31109 (= (apply!100 lt!56753 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1359 (getValueByKey!157 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4547 () Bool)

(assert (= bs!4547 d!31109))

(assert (=> bs!4547 m!124967))

(assert (=> bs!4547 m!124967))

(declare-fun m!125653 () Bool)

(assert (=> bs!4547 m!125653))

(assert (=> b!110133 d!31109))

(declare-fun b!110647 () Bool)

(declare-fun e!71954 () Option!163)

(assert (=> b!110647 (= e!71954 (getValueByKey!157 (t!5802 (toList!813 lt!56695)) (_1!1224 lt!56528)))))

(declare-fun d!31111 () Bool)

(declare-fun c!19645 () Bool)

(assert (=> d!31111 (= c!19645 (and ((_ is Cons!1649) (toList!813 lt!56695)) (= (_1!1224 (h!2248 (toList!813 lt!56695))) (_1!1224 lt!56528))))))

(declare-fun e!71953 () Option!163)

(assert (=> d!31111 (= (getValueByKey!157 (toList!813 lt!56695) (_1!1224 lt!56528)) e!71953)))

(declare-fun b!110648 () Bool)

(assert (=> b!110648 (= e!71954 None!161)))

(declare-fun b!110646 () Bool)

(assert (=> b!110646 (= e!71953 e!71954)))

(declare-fun c!19646 () Bool)

(assert (=> b!110646 (= c!19646 (and ((_ is Cons!1649) (toList!813 lt!56695)) (not (= (_1!1224 (h!2248 (toList!813 lt!56695))) (_1!1224 lt!56528)))))))

(declare-fun b!110645 () Bool)

(assert (=> b!110645 (= e!71953 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56695)))))))

(assert (= (and d!31111 c!19645) b!110645))

(assert (= (and d!31111 (not c!19645)) b!110646))

(assert (= (and b!110646 c!19646) b!110647))

(assert (= (and b!110646 (not c!19646)) b!110648))

(declare-fun m!125655 () Bool)

(assert (=> b!110647 m!125655))

(assert (=> b!110083 d!31111))

(declare-fun d!31113 () Bool)

(declare-fun lt!57135 () Bool)

(declare-fun content!113 (List!1652) (InoxSet (_ BitVec 64)))

(assert (=> d!31113 (= lt!57135 (select (content!113 Nil!1649) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!71959 () Bool)

(assert (=> d!31113 (= lt!57135 e!71959)))

(declare-fun res!54705 () Bool)

(assert (=> d!31113 (=> (not res!54705) (not e!71959))))

(assert (=> d!31113 (= res!54705 ((_ is Cons!1648) Nil!1649))))

(assert (=> d!31113 (= (contains!840 Nil!1649 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) lt!57135)))

(declare-fun b!110653 () Bool)

(declare-fun e!71960 () Bool)

(assert (=> b!110653 (= e!71959 e!71960)))

(declare-fun res!54706 () Bool)

(assert (=> b!110653 (=> res!54706 e!71960)))

(assert (=> b!110653 (= res!54706 (= (h!2247 Nil!1649) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110654 () Bool)

(assert (=> b!110654 (= e!71960 (contains!840 (t!5801 Nil!1649) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31113 res!54705) b!110653))

(assert (= (and b!110653 (not res!54706)) b!110654))

(declare-fun m!125657 () Bool)

(assert (=> d!31113 m!125657))

(assert (=> d!31113 m!124515))

(declare-fun m!125659 () Bool)

(assert (=> d!31113 m!125659))

(assert (=> b!110654 m!124515))

(declare-fun m!125661 () Bool)

(assert (=> b!110654 m!125661))

(assert (=> b!110173 d!31113))

(declare-fun d!31115 () Bool)

(declare-fun e!71961 () Bool)

(assert (=> d!31115 e!71961))

(declare-fun res!54707 () Bool)

(assert (=> d!31115 (=> res!54707 e!71961)))

(declare-fun lt!57139 () Bool)

(assert (=> d!31115 (= res!54707 (not lt!57139))))

(declare-fun lt!57136 () Bool)

(assert (=> d!31115 (= lt!57139 lt!57136)))

(declare-fun lt!57138 () Unit!3421)

(declare-fun e!71962 () Unit!3421)

(assert (=> d!31115 (= lt!57138 e!71962)))

(declare-fun c!19647 () Bool)

(assert (=> d!31115 (= c!19647 lt!57136)))

(assert (=> d!31115 (= lt!57136 (containsKey!161 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!31115 (= (contains!837 lt!56753 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!57139)))

(declare-fun b!110655 () Bool)

(declare-fun lt!57137 () Unit!3421)

(assert (=> b!110655 (= e!71962 lt!57137)))

(assert (=> b!110655 (= lt!57137 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110655 (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110656 () Bool)

(declare-fun Unit!3452 () Unit!3421)

(assert (=> b!110656 (= e!71962 Unit!3452)))

(declare-fun b!110657 () Bool)

(assert (=> b!110657 (= e!71961 (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!31115 c!19647) b!110655))

(assert (= (and d!31115 (not c!19647)) b!110656))

(assert (= (and d!31115 (not res!54707)) b!110657))

(assert (=> d!31115 m!124711))

(declare-fun m!125663 () Bool)

(assert (=> d!31115 m!125663))

(assert (=> b!110655 m!124711))

(declare-fun m!125665 () Bool)

(assert (=> b!110655 m!125665))

(assert (=> b!110655 m!124711))

(assert (=> b!110655 m!124867))

(assert (=> b!110655 m!124867))

(declare-fun m!125667 () Bool)

(assert (=> b!110655 m!125667))

(assert (=> b!110657 m!124711))

(assert (=> b!110657 m!124867))

(assert (=> b!110657 m!124867))

(assert (=> b!110657 m!125667))

(assert (=> b!110135 d!31115))

(declare-fun b!110658 () Bool)

(declare-fun e!71964 () Bool)

(assert (=> b!110658 (= e!71964 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4011 () Bool)

(declare-fun mapRes!4011 () Bool)

(declare-fun tp!10041 () Bool)

(assert (=> mapNonEmpty!4011 (= mapRes!4011 (and tp!10041 e!71964))))

(declare-fun mapKey!4011 () (_ BitVec 32))

(declare-fun mapValue!4011 () ValueCell!1005)

(declare-fun mapRest!4011 () (Array (_ BitVec 32) ValueCell!1005))

(assert (=> mapNonEmpty!4011 (= mapRest!4010 (store mapRest!4011 mapKey!4011 mapValue!4011))))

(declare-fun mapIsEmpty!4011 () Bool)

(assert (=> mapIsEmpty!4011 mapRes!4011))

(declare-fun b!110659 () Bool)

(declare-fun e!71963 () Bool)

(assert (=> b!110659 (= e!71963 tp_is_empty!2697)))

(declare-fun condMapEmpty!4011 () Bool)

(declare-fun mapDefault!4011 () ValueCell!1005)

(assert (=> mapNonEmpty!4010 (= condMapEmpty!4011 (= mapRest!4010 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4011)))))

(assert (=> mapNonEmpty!4010 (= tp!10040 (and e!71963 mapRes!4011))))

(assert (= (and mapNonEmpty!4010 condMapEmpty!4011) mapIsEmpty!4011))

(assert (= (and mapNonEmpty!4010 (not condMapEmpty!4011)) mapNonEmpty!4011))

(assert (= (and mapNonEmpty!4011 ((_ is ValueCellFull!1005) mapValue!4011)) b!110658))

(assert (= (and mapNonEmpty!4010 ((_ is ValueCellFull!1005) mapDefault!4011)) b!110659))

(declare-fun m!125669 () Bool)

(assert (=> mapNonEmpty!4011 m!125669))

(declare-fun b!110660 () Bool)

(declare-fun e!71966 () Bool)

(assert (=> b!110660 (= e!71966 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4012 () Bool)

(declare-fun mapRes!4012 () Bool)

(declare-fun tp!10042 () Bool)

(assert (=> mapNonEmpty!4012 (= mapRes!4012 (and tp!10042 e!71966))))

(declare-fun mapRest!4012 () (Array (_ BitVec 32) ValueCell!1005))

(declare-fun mapKey!4012 () (_ BitVec 32))

(declare-fun mapValue!4012 () ValueCell!1005)

(assert (=> mapNonEmpty!4012 (= mapRest!4009 (store mapRest!4012 mapKey!4012 mapValue!4012))))

(declare-fun mapIsEmpty!4012 () Bool)

(assert (=> mapIsEmpty!4012 mapRes!4012))

(declare-fun b!110661 () Bool)

(declare-fun e!71965 () Bool)

(assert (=> b!110661 (= e!71965 tp_is_empty!2697)))

(declare-fun condMapEmpty!4012 () Bool)

(declare-fun mapDefault!4012 () ValueCell!1005)

(assert (=> mapNonEmpty!4009 (= condMapEmpty!4012 (= mapRest!4009 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4012)))))

(assert (=> mapNonEmpty!4009 (= tp!10039 (and e!71965 mapRes!4012))))

(assert (= (and mapNonEmpty!4009 condMapEmpty!4012) mapIsEmpty!4012))

(assert (= (and mapNonEmpty!4009 (not condMapEmpty!4012)) mapNonEmpty!4012))

(assert (= (and mapNonEmpty!4012 ((_ is ValueCellFull!1005) mapValue!4012)) b!110660))

(assert (= (and mapNonEmpty!4009 ((_ is ValueCellFull!1005) mapDefault!4012)) b!110661))

(declare-fun m!125671 () Bool)

(assert (=> mapNonEmpty!4012 m!125671))

(declare-fun b_lambda!4971 () Bool)

(assert (= b_lambda!4963 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!4971)))

(declare-fun b_lambda!4973 () Bool)

(assert (= b_lambda!4965 (or (and b!109812 b_free!2561) (and b!109809 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))))) b_lambda!4973)))

(declare-fun b_lambda!4975 () Bool)

(assert (= b_lambda!4969 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!4975)))

(declare-fun b_lambda!4977 () Bool)

(assert (= b_lambda!4967 (or (and b!109812 b_free!2561) (and b!109809 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))))) b_lambda!4977)))

(declare-fun b_lambda!4979 () Bool)

(assert (= b_lambda!4961 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!4979)))

(check-sat (not d!31073) (not d!31007) (not b!110206) (not b!110403) (not d!31069) (not bm!11798) (not b_lambda!4959) (not b!110271) (not d!30917) (not b!110621) (not b!110373) (not bm!11797) (not d!30957) (not b!110354) (not b!110632) (not d!31023) (not b!110357) (not b!110420) (not bm!11818) (not d!30991) (not d!31057) (not b!110538) (not b!110426) (not b!110398) (not b!110655) (not b!110445) (not b!110414) (not b!110638) (not b!110392) (not b!110386) tp_is_empty!2697 (not b!110364) (not d!31003) (not b!110322) (not b!110331) (not b!110423) (not b!110224) (not d!31013) (not b!110491) (not b!110464) (not b!110379) (not b!110460) (not b!110421) (not b!110227) (not d!30949) (not d!30961) (not b!110623) (not d!31091) (not d!31079) (not bm!11774) (not b!110345) (not b!110387) (not b!110366) (not b!110449) (not b!110262) (not bm!11778) (not bm!11758) (not b!110352) (not b!110362) (not bm!11759) (not d!31051) (not bm!11762) (not d!31027) (not b!110552) (not b!110374) (not d!31071) (not b!110211) (not d!31005) (not b!110503) (not d!31109) (not d!30969) (not b!110218) (not d!31031) (not b!110619) (not b!110369) (not b!110361) (not d!31065) (not b!110657) (not b!110486) (not d!31053) (not b!110346) (not b!110405) (not b!110214) (not b_next!2563) (not b!110497) (not b!110220) (not b!110412) (not d!30995) (not d!31021) (not d!30933) (not d!30951) b_and!6823 (not d!30945) (not d!30989) (not b!110410) (not b!110318) (not bm!11821) (not b!110496) (not b!110446) (not bm!11784) (not b!110303) (not b!110477) (not b!110590) (not b!110204) (not b!110605) (not b!110406) (not d!30955) (not bm!11775) (not b!110255) (not b!110213) (not bm!11804) (not b!110532) (not d!30953) (not b!110378) (not d!31115) (not d!31075) (not b!110459) (not d!30939) (not b!110539) (not d!30983) (not b!110221) (not b!110244) (not b!110633) (not d!31055) (not d!30965) (not b!110604) (not b_lambda!4979) (not d!31041) (not b!110263) (not d!31089) (not b!110407) (not b!110447) (not b!110467) (not bm!11756) (not b!110591) (not d!30959) b_and!6821 (not b!110457) (not d!31035) (not d!30929) (not d!31049) (not b_lambda!4947) (not b!110241) (not b!110277) (not b!110411) (not b!110640) (not b!110428) (not d!31113) (not d!30941) (not b!110391) (not b!110371) (not b!110376) (not b!110636) (not d!31015) (not b_lambda!4955) (not b!110375) (not bm!11757) (not d!30979) (not b!110603) (not b!110492) (not b!110237) (not b!110629) (not d!30981) (not b!110643) (not b!110534) (not d!30977) (not b!110205) (not mapNonEmpty!4012) (not d!31097) (not b!110482) (not d!31033) (not bm!11799) (not b!110606) (not d!31043) (not b!110381) (not b!110402) (not b!110395) (not d!31047) (not b!110306) (not b!110531) (not b!110417) (not d!30971) (not b!110302) (not b!110592) (not b!110536) (not bm!11815) (not b_lambda!4975) (not b!110363) (not b!110384) (not d!30999) (not bm!11773) (not b_lambda!4971) (not d!30987) (not b!110466) (not bm!11789) (not d!31095) (not d!31105) (not b!110465) (not b!110548) (not b!110370) (not b!110215) (not b!110360) (not b_lambda!4977) (not d!30927) (not d!31025) (not b!110437) (not b!110225) (not d!30967) (not b_next!2561) (not d!31001) (not b!110317) (not b!110489) (not b!110321) (not bm!11780) (not d!30943) (not d!31009) (not b!110478) (not d!31037) (not b!110450) (not b!110265) (not d!31099) (not d!31103) (not d!30975) (not b!110242) (not b!110228) (not b!110484) (not b!110368) (not bm!11790) (not b!110372) (not b!110404) (not b!110278) (not d!31045) (not b!110434) (not b!110500) (not d!31081) (not d!31039) (not b!110654) (not b!110433) (not d!31087) (not b!110335) (not b_lambda!4957) (not d!30963) (not b!110458) (not b!110535) (not bm!11801) (not d!30931) (not b!110628) (not b!110429) (not b!110631) (not b!110589) (not d!31029) (not mapNonEmpty!4011) (not d!30985) (not b!110448) (not d!30913) (not bm!11783) (not b!110602) (not b!110355) (not b!110358) (not b!110313) (not bm!11816) (not d!30937) (not b_lambda!4973) (not b!110408) (not b!110505) (not bm!11770) (not b!110356) (not b!110268) (not b!110315) (not bm!11814) (not b!110266) (not b!110223) (not b!110504) (not b!110647) (not bm!11800) (not d!30997) (not b!110319) (not b!110626) (not b!110452))
(check-sat b_and!6821 b_and!6823 (not b_next!2561) (not b_next!2563))
(get-model)

(declare-fun d!31117 () Bool)

(assert (=> d!31117 (isDefined!111 (getValueByKey!157 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(declare-fun lt!57140 () Unit!3421)

(assert (=> d!31117 (= lt!57140 (choose!702 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(declare-fun e!71967 () Bool)

(assert (=> d!31117 e!71967))

(declare-fun res!54708 () Bool)

(assert (=> d!31117 (=> (not res!54708) (not e!71967))))

(assert (=> d!31117 (= res!54708 (isStrictlySorted!306 (toList!813 call!11726)))))

(assert (=> d!31117 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))) lt!57140)))

(declare-fun b!110662 () Bool)

(assert (=> b!110662 (= e!71967 (containsKey!161 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(assert (= (and d!31117 res!54708) b!110662))

(assert (=> d!31117 m!124655))

(assert (=> d!31117 m!125261))

(assert (=> d!31117 m!125261))

(assert (=> d!31117 m!125263))

(assert (=> d!31117 m!124655))

(declare-fun m!125673 () Bool)

(assert (=> d!31117 m!125673))

(declare-fun m!125675 () Bool)

(assert (=> d!31117 m!125675))

(assert (=> b!110662 m!124655))

(assert (=> b!110662 m!125257))

(assert (=> b!110412 d!31117))

(declare-fun d!31119 () Bool)

(assert (=> d!31119 (= (isDefined!111 (getValueByKey!157 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639)))) (not (isEmpty!382 (getValueByKey!157 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))))

(declare-fun bs!4548 () Bool)

(assert (= bs!4548 d!31119))

(assert (=> bs!4548 m!125261))

(declare-fun m!125677 () Bool)

(assert (=> bs!4548 m!125677))

(assert (=> b!110412 d!31119))

(declare-fun b!110665 () Bool)

(declare-fun e!71969 () Option!163)

(assert (=> b!110665 (= e!71969 (getValueByKey!157 (t!5802 (toList!813 call!11726)) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(declare-fun d!31121 () Bool)

(declare-fun c!19648 () Bool)

(assert (=> d!31121 (= c!19648 (and ((_ is Cons!1649) (toList!813 call!11726)) (= (_1!1224 (h!2248 (toList!813 call!11726))) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639)))))))

(declare-fun e!71968 () Option!163)

(assert (=> d!31121 (= (getValueByKey!157 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))) e!71968)))

(declare-fun b!110666 () Bool)

(assert (=> b!110666 (= e!71969 None!161)))

(declare-fun b!110664 () Bool)

(assert (=> b!110664 (= e!71968 e!71969)))

(declare-fun c!19649 () Bool)

(assert (=> b!110664 (= c!19649 (and ((_ is Cons!1649) (toList!813 call!11726)) (not (= (_1!1224 (h!2248 (toList!813 call!11726))) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))))

(declare-fun b!110663 () Bool)

(assert (=> b!110663 (= e!71968 (Some!162 (_2!1224 (h!2248 (toList!813 call!11726)))))))

(assert (= (and d!31121 c!19648) b!110663))

(assert (= (and d!31121 (not c!19648)) b!110664))

(assert (= (and b!110664 c!19649) b!110665))

(assert (= (and b!110664 (not c!19649)) b!110666))

(assert (=> b!110665 m!124655))

(declare-fun m!125679 () Bool)

(assert (=> b!110665 m!125679))

(assert (=> b!110412 d!31121))

(declare-fun d!31123 () Bool)

(declare-fun res!54709 () Bool)

(declare-fun e!71970 () Bool)

(assert (=> d!31123 (=> res!54709 e!71970)))

(assert (=> d!31123 (= res!54709 (= (select (arr!2080 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31123 (= (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!71970)))

(declare-fun b!110667 () Bool)

(declare-fun e!71971 () Bool)

(assert (=> b!110667 (= e!71970 e!71971)))

(declare-fun res!54710 () Bool)

(assert (=> b!110667 (=> (not res!54710) (not e!71971))))

(assert (=> b!110667 (= res!54710 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110668 () Bool)

(assert (=> b!110668 (= e!71971 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!31123 (not res!54709)) b!110667))

(assert (= (and b!110667 res!54710) b!110668))

(declare-fun m!125681 () Bool)

(assert (=> d!31123 m!125681))

(assert (=> b!110668 m!124515))

(declare-fun m!125683 () Bool)

(assert (=> b!110668 m!125683))

(assert (=> b!110531 d!31123))

(assert (=> d!30979 d!30977))

(assert (=> d!30979 d!30983))

(assert (=> d!30979 d!30985))

(assert (=> d!30979 d!30981))

(declare-fun d!31125 () Bool)

(declare-fun lt!57141 () Bool)

(assert (=> d!31125 (= lt!57141 (select (content!112 (toList!813 lt!57125)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(declare-fun e!71973 () Bool)

(assert (=> d!31125 (= lt!57141 e!71973)))

(declare-fun res!54712 () Bool)

(assert (=> d!31125 (=> (not res!54712) (not e!71973))))

(assert (=> d!31125 (= res!54712 ((_ is Cons!1649) (toList!813 lt!57125)))))

(assert (=> d!31125 (= (contains!839 (toList!813 lt!57125) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) lt!57141)))

(declare-fun b!110669 () Bool)

(declare-fun e!71972 () Bool)

(assert (=> b!110669 (= e!71973 e!71972)))

(declare-fun res!54711 () Bool)

(assert (=> b!110669 (=> res!54711 e!71972)))

(assert (=> b!110669 (= res!54711 (= (h!2248 (toList!813 lt!57125)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(declare-fun b!110670 () Bool)

(assert (=> b!110670 (= e!71972 (contains!839 (t!5802 (toList!813 lt!57125)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(assert (= (and d!31125 res!54712) b!110669))

(assert (= (and b!110669 (not res!54711)) b!110670))

(declare-fun m!125685 () Bool)

(assert (=> d!31125 m!125685))

(declare-fun m!125687 () Bool)

(assert (=> d!31125 m!125687))

(declare-fun m!125689 () Bool)

(assert (=> b!110670 m!125689))

(assert (=> b!110633 d!31125))

(declare-fun d!31127 () Bool)

(declare-fun res!54713 () Bool)

(declare-fun e!71974 () Bool)

(assert (=> d!31127 (=> res!54713 e!71974)))

(assert (=> d!31127 (= res!54713 (and ((_ is Cons!1649) (toList!813 lt!56674)) (= (_1!1224 (h!2248 (toList!813 lt!56674))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31127 (= (containsKey!161 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!71974)))

(declare-fun b!110671 () Bool)

(declare-fun e!71975 () Bool)

(assert (=> b!110671 (= e!71974 e!71975)))

(declare-fun res!54714 () Bool)

(assert (=> b!110671 (=> (not res!54714) (not e!71975))))

(assert (=> b!110671 (= res!54714 (and (or (not ((_ is Cons!1649) (toList!813 lt!56674))) (bvsle (_1!1224 (h!2248 (toList!813 lt!56674))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1649) (toList!813 lt!56674)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56674))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!110672 () Bool)

(assert (=> b!110672 (= e!71975 (containsKey!161 (t!5802 (toList!813 lt!56674)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31127 (not res!54713)) b!110671))

(assert (= (and b!110671 res!54714) b!110672))

(assert (=> b!110672 m!124711))

(declare-fun m!125691 () Bool)

(assert (=> b!110672 m!125691))

(assert (=> d!30927 d!31127))

(declare-fun d!31129 () Bool)

(assert (=> d!31129 (isDefined!111 (getValueByKey!157 (toList!813 lt!56695) (_1!1224 lt!56528)))))

(declare-fun lt!57142 () Unit!3421)

(assert (=> d!31129 (= lt!57142 (choose!702 (toList!813 lt!56695) (_1!1224 lt!56528)))))

(declare-fun e!71976 () Bool)

(assert (=> d!31129 e!71976))

(declare-fun res!54715 () Bool)

(assert (=> d!31129 (=> (not res!54715) (not e!71976))))

(assert (=> d!31129 (= res!54715 (isStrictlySorted!306 (toList!813 lt!56695)))))

(assert (=> d!31129 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56695) (_1!1224 lt!56528)) lt!57142)))

(declare-fun b!110673 () Bool)

(assert (=> b!110673 (= e!71976 (containsKey!161 (toList!813 lt!56695) (_1!1224 lt!56528)))))

(assert (= (and d!31129 res!54715) b!110673))

(assert (=> d!31129 m!124759))

(assert (=> d!31129 m!124759))

(assert (=> d!31129 m!125281))

(declare-fun m!125693 () Bool)

(assert (=> d!31129 m!125693))

(declare-fun m!125695 () Bool)

(assert (=> d!31129 m!125695))

(assert (=> b!110673 m!125277))

(assert (=> b!110421 d!31129))

(declare-fun d!31131 () Bool)

(assert (=> d!31131 (= (isDefined!111 (getValueByKey!157 (toList!813 lt!56695) (_1!1224 lt!56528))) (not (isEmpty!382 (getValueByKey!157 (toList!813 lt!56695) (_1!1224 lt!56528)))))))

(declare-fun bs!4549 () Bool)

(assert (= bs!4549 d!31131))

(assert (=> bs!4549 m!124759))

(declare-fun m!125697 () Bool)

(assert (=> bs!4549 m!125697))

(assert (=> b!110421 d!31131))

(assert (=> b!110421 d!31111))

(declare-fun d!31133 () Bool)

(assert (=> d!31133 (= (apply!100 (+!149 lt!57008 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16))) lt!57010) (apply!100 lt!57008 lt!57010))))

(declare-fun lt!57143 () Unit!3421)

(assert (=> d!31133 (= lt!57143 (choose!699 lt!57008 lt!57006 (zeroValue!2498 newMap!16) lt!57010))))

(declare-fun e!71977 () Bool)

(assert (=> d!31133 e!71977))

(declare-fun res!54716 () Bool)

(assert (=> d!31133 (=> (not res!54716) (not e!71977))))

(assert (=> d!31133 (= res!54716 (contains!837 lt!57008 lt!57010))))

(assert (=> d!31133 (= (addApplyDifferent!76 lt!57008 lt!57006 (zeroValue!2498 newMap!16) lt!57010) lt!57143)))

(declare-fun b!110674 () Bool)

(assert (=> b!110674 (= e!71977 (not (= lt!57010 lt!57006)))))

(assert (= (and d!31133 res!54716) b!110674))

(assert (=> d!31133 m!125503))

(assert (=> d!31133 m!125505))

(assert (=> d!31133 m!125493))

(declare-fun m!125699 () Bool)

(assert (=> d!31133 m!125699))

(declare-fun m!125701 () Bool)

(assert (=> d!31133 m!125701))

(assert (=> d!31133 m!125503))

(assert (=> b!110548 d!31133))

(declare-fun d!31135 () Bool)

(declare-fun e!71978 () Bool)

(assert (=> d!31135 e!71978))

(declare-fun res!54717 () Bool)

(assert (=> d!31135 (=> (not res!54717) (not e!71978))))

(declare-fun lt!57144 () ListLongMap!1595)

(assert (=> d!31135 (= res!54717 (contains!837 lt!57144 (_1!1224 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16)))))))

(declare-fun lt!57147 () List!1653)

(assert (=> d!31135 (= lt!57144 (ListLongMap!1596 lt!57147))))

(declare-fun lt!57145 () Unit!3421)

(declare-fun lt!57146 () Unit!3421)

(assert (=> d!31135 (= lt!57145 lt!57146)))

(assert (=> d!31135 (= (getValueByKey!157 lt!57147 (_1!1224 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31135 (= lt!57146 (lemmaContainsTupThenGetReturnValue!75 lt!57147 (_1!1224 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31135 (= lt!57147 (insertStrictlySorted!77 (toList!813 lt!57008) (_1!1224 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31135 (= (+!149 lt!57008 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16))) lt!57144)))

(declare-fun b!110675 () Bool)

(declare-fun res!54718 () Bool)

(assert (=> b!110675 (=> (not res!54718) (not e!71978))))

(assert (=> b!110675 (= res!54718 (= (getValueByKey!157 (toList!813 lt!57144) (_1!1224 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16))))))))

(declare-fun b!110676 () Bool)

(assert (=> b!110676 (= e!71978 (contains!839 (toList!813 lt!57144) (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16))))))

(assert (= (and d!31135 res!54717) b!110675))

(assert (= (and b!110675 res!54718) b!110676))

(declare-fun m!125703 () Bool)

(assert (=> d!31135 m!125703))

(declare-fun m!125705 () Bool)

(assert (=> d!31135 m!125705))

(declare-fun m!125707 () Bool)

(assert (=> d!31135 m!125707))

(declare-fun m!125709 () Bool)

(assert (=> d!31135 m!125709))

(declare-fun m!125711 () Bool)

(assert (=> b!110675 m!125711))

(declare-fun m!125713 () Bool)

(assert (=> b!110676 m!125713))

(assert (=> b!110548 d!31135))

(declare-fun d!31137 () Bool)

(assert (=> d!31137 (= (apply!100 (+!149 lt!57019 (tuple2!2429 lt!57020 (minValue!2498 newMap!16))) lt!57005) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!57019 (tuple2!2429 lt!57020 (minValue!2498 newMap!16)))) lt!57005)))))

(declare-fun bs!4550 () Bool)

(assert (= bs!4550 d!31137))

(declare-fun m!125715 () Bool)

(assert (=> bs!4550 m!125715))

(assert (=> bs!4550 m!125715))

(declare-fun m!125717 () Bool)

(assert (=> bs!4550 m!125717))

(assert (=> b!110548 d!31137))

(declare-fun d!31139 () Bool)

(assert (=> d!31139 (= (apply!100 (+!149 lt!57019 (tuple2!2429 lt!57020 (minValue!2498 newMap!16))) lt!57005) (apply!100 lt!57019 lt!57005))))

(declare-fun lt!57148 () Unit!3421)

(assert (=> d!31139 (= lt!57148 (choose!699 lt!57019 lt!57020 (minValue!2498 newMap!16) lt!57005))))

(declare-fun e!71979 () Bool)

(assert (=> d!31139 e!71979))

(declare-fun res!54719 () Bool)

(assert (=> d!31139 (=> (not res!54719) (not e!71979))))

(assert (=> d!31139 (= res!54719 (contains!837 lt!57019 lt!57005))))

(assert (=> d!31139 (= (addApplyDifferent!76 lt!57019 lt!57020 (minValue!2498 newMap!16) lt!57005) lt!57148)))

(declare-fun b!110677 () Bool)

(assert (=> b!110677 (= e!71979 (not (= lt!57005 lt!57020)))))

(assert (= (and d!31139 res!54719) b!110677))

(assert (=> d!31139 m!125495))

(assert (=> d!31139 m!125521))

(assert (=> d!31139 m!125511))

(declare-fun m!125719 () Bool)

(assert (=> d!31139 m!125719))

(declare-fun m!125721 () Bool)

(assert (=> d!31139 m!125721))

(assert (=> d!31139 m!125495))

(assert (=> b!110548 d!31139))

(declare-fun d!31141 () Bool)

(assert (=> d!31141 (= (apply!100 (+!149 lt!57001 (tuple2!2429 lt!57003 (minValue!2498 newMap!16))) lt!57004) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!57001 (tuple2!2429 lt!57003 (minValue!2498 newMap!16)))) lt!57004)))))

(declare-fun bs!4551 () Bool)

(assert (= bs!4551 d!31141))

(declare-fun m!125723 () Bool)

(assert (=> bs!4551 m!125723))

(assert (=> bs!4551 m!125723))

(declare-fun m!125725 () Bool)

(assert (=> bs!4551 m!125725))

(assert (=> b!110548 d!31141))

(declare-fun d!31143 () Bool)

(assert (=> d!31143 (= (apply!100 lt!57001 lt!57004) (get!1359 (getValueByKey!157 (toList!813 lt!57001) lt!57004)))))

(declare-fun bs!4552 () Bool)

(assert (= bs!4552 d!31143))

(declare-fun m!125727 () Bool)

(assert (=> bs!4552 m!125727))

(assert (=> bs!4552 m!125727))

(declare-fun m!125729 () Bool)

(assert (=> bs!4552 m!125729))

(assert (=> b!110548 d!31143))

(declare-fun b!110678 () Bool)

(declare-fun e!71986 () Bool)

(declare-fun lt!57151 () ListLongMap!1595)

(assert (=> b!110678 (= e!71986 (isEmpty!381 lt!57151))))

(declare-fun call!11825 () ListLongMap!1595)

(declare-fun bm!11822 () Bool)

(assert (=> bm!11822 (= call!11825 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16)))))

(declare-fun b!110679 () Bool)

(declare-fun e!71984 () ListLongMap!1595)

(assert (=> b!110679 (= e!71984 (ListLongMap!1596 Nil!1650))))

(declare-fun b!110680 () Bool)

(declare-fun e!71980 () Bool)

(assert (=> b!110680 (= e!71980 e!71986)))

(declare-fun c!19651 () Bool)

(assert (=> b!110680 (= c!19651 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110681 () Bool)

(declare-fun e!71981 () Bool)

(assert (=> b!110681 (= e!71981 e!71980)))

(declare-fun c!19653 () Bool)

(declare-fun e!71983 () Bool)

(assert (=> b!110681 (= c!19653 e!71983)))

(declare-fun res!54722 () Bool)

(assert (=> b!110681 (=> (not res!54722) (not e!71983))))

(assert (=> b!110681 (= res!54722 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110682 () Bool)

(assert (=> b!110682 (= e!71983 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110682 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!110683 () Bool)

(declare-fun res!54721 () Bool)

(assert (=> b!110683 (=> (not res!54721) (not e!71981))))

(assert (=> b!110683 (= res!54721 (not (contains!837 lt!57151 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!31145 () Bool)

(assert (=> d!31145 e!71981))

(declare-fun res!54720 () Bool)

(assert (=> d!31145 (=> (not res!54720) (not e!71981))))

(assert (=> d!31145 (= res!54720 (not (contains!837 lt!57151 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31145 (= lt!57151 e!71984)))

(declare-fun c!19652 () Bool)

(assert (=> d!31145 (= c!19652 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31145 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31145 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57151)))

(declare-fun b!110684 () Bool)

(declare-fun lt!57150 () Unit!3421)

(declare-fun lt!57154 () Unit!3421)

(assert (=> b!110684 (= lt!57150 lt!57154)))

(declare-fun lt!57152 () (_ BitVec 64))

(declare-fun lt!57149 () ListLongMap!1595)

(declare-fun lt!57155 () V!3243)

(declare-fun lt!57153 () (_ BitVec 64))

(assert (=> b!110684 (not (contains!837 (+!149 lt!57149 (tuple2!2429 lt!57152 lt!57155)) lt!57153))))

(assert (=> b!110684 (= lt!57154 (addStillNotContains!50 lt!57149 lt!57152 lt!57155 lt!57153))))

(assert (=> b!110684 (= lt!57153 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110684 (= lt!57155 (get!1355 (select (arr!2081 (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110684 (= lt!57152 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110684 (= lt!57149 call!11825)))

(declare-fun e!71985 () ListLongMap!1595)

(assert (=> b!110684 (= e!71985 (+!149 call!11825 (tuple2!2429 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (get!1355 (select (arr!2081 (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110685 () Bool)

(assert (=> b!110685 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> b!110685 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647))))))

(declare-fun e!71982 () Bool)

(assert (=> b!110685 (= e!71982 (= (apply!100 lt!57151 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110686 () Bool)

(assert (=> b!110686 (= e!71984 e!71985)))

(declare-fun c!19650 () Bool)

(assert (=> b!110686 (= c!19650 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110687 () Bool)

(assert (=> b!110687 (= e!71980 e!71982)))

(assert (=> b!110687 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun res!54723 () Bool)

(assert (=> b!110687 (= res!54723 (contains!837 lt!57151 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110687 (=> (not res!54723) (not e!71982))))

(declare-fun b!110688 () Bool)

(assert (=> b!110688 (= e!71986 (= lt!57151 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16))))))

(declare-fun b!110689 () Bool)

(assert (=> b!110689 (= e!71985 call!11825)))

(assert (= (and d!31145 c!19652) b!110679))

(assert (= (and d!31145 (not c!19652)) b!110686))

(assert (= (and b!110686 c!19650) b!110684))

(assert (= (and b!110686 (not c!19650)) b!110689))

(assert (= (or b!110684 b!110689) bm!11822))

(assert (= (and d!31145 res!54720) b!110683))

(assert (= (and b!110683 res!54721) b!110681))

(assert (= (and b!110681 res!54722) b!110682))

(assert (= (and b!110681 c!19653) b!110687))

(assert (= (and b!110681 (not c!19653)) b!110680))

(assert (= (and b!110687 res!54723) b!110685))

(assert (= (and b!110680 c!19651) b!110688))

(assert (= (and b!110680 (not c!19651)) b!110678))

(declare-fun b_lambda!4981 () Bool)

(assert (=> (not b_lambda!4981) (not b!110684)))

(assert (=> b!110684 t!5810))

(declare-fun b_and!6825 () Bool)

(assert (= b_and!6821 (and (=> t!5810 result!3549) b_and!6825)))

(assert (=> b!110684 t!5812))

(declare-fun b_and!6827 () Bool)

(assert (= b_and!6823 (and (=> t!5812 result!3551) b_and!6827)))

(declare-fun b_lambda!4983 () Bool)

(assert (=> (not b_lambda!4983) (not b!110685)))

(assert (=> b!110685 t!5810))

(declare-fun b_and!6829 () Bool)

(assert (= b_and!6825 (and (=> t!5810 result!3549) b_and!6829)))

(assert (=> b!110685 t!5812))

(declare-fun b_and!6831 () Bool)

(assert (= b_and!6827 (and (=> t!5812 result!3551) b_and!6831)))

(declare-fun m!125731 () Bool)

(assert (=> d!31145 m!125731))

(assert (=> d!31145 m!124861))

(declare-fun m!125733 () Bool)

(assert (=> b!110678 m!125733))

(declare-fun m!125735 () Bool)

(assert (=> b!110684 m!125735))

(assert (=> b!110684 m!124937))

(assert (=> b!110684 m!125735))

(declare-fun m!125737 () Bool)

(assert (=> b!110684 m!125737))

(assert (=> b!110684 m!125531))

(declare-fun m!125739 () Bool)

(assert (=> b!110684 m!125739))

(assert (=> b!110684 m!124875))

(declare-fun m!125741 () Bool)

(assert (=> b!110684 m!125741))

(assert (=> b!110684 m!125531))

(assert (=> b!110684 m!124937))

(assert (=> b!110684 m!125533))

(declare-fun m!125743 () Bool)

(assert (=> bm!11822 m!125743))

(assert (=> b!110687 m!124875))

(assert (=> b!110687 m!124875))

(declare-fun m!125745 () Bool)

(assert (=> b!110687 m!125745))

(assert (=> b!110688 m!125743))

(assert (=> b!110685 m!124937))

(assert (=> b!110685 m!124875))

(assert (=> b!110685 m!125531))

(assert (=> b!110685 m!124937))

(assert (=> b!110685 m!125533))

(assert (=> b!110685 m!124875))

(declare-fun m!125747 () Bool)

(assert (=> b!110685 m!125747))

(assert (=> b!110685 m!125531))

(assert (=> b!110686 m!124875))

(assert (=> b!110686 m!124875))

(assert (=> b!110686 m!124877))

(assert (=> b!110682 m!124875))

(assert (=> b!110682 m!124875))

(assert (=> b!110682 m!124877))

(declare-fun m!125749 () Bool)

(assert (=> b!110683 m!125749))

(assert (=> b!110548 d!31145))

(declare-fun d!31147 () Bool)

(declare-fun e!71987 () Bool)

(assert (=> d!31147 e!71987))

(declare-fun res!54724 () Bool)

(assert (=> d!31147 (=> res!54724 e!71987)))

(declare-fun lt!57159 () Bool)

(assert (=> d!31147 (= res!54724 (not lt!57159))))

(declare-fun lt!57156 () Bool)

(assert (=> d!31147 (= lt!57159 lt!57156)))

(declare-fun lt!57158 () Unit!3421)

(declare-fun e!71988 () Unit!3421)

(assert (=> d!31147 (= lt!57158 e!71988)))

(declare-fun c!19654 () Bool)

(assert (=> d!31147 (= c!19654 lt!57156)))

(assert (=> d!31147 (= lt!57156 (containsKey!161 (toList!813 (+!149 lt!57007 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16)))) lt!57017))))

(assert (=> d!31147 (= (contains!837 (+!149 lt!57007 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16))) lt!57017) lt!57159)))

(declare-fun b!110690 () Bool)

(declare-fun lt!57157 () Unit!3421)

(assert (=> b!110690 (= e!71988 lt!57157)))

(assert (=> b!110690 (= lt!57157 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (+!149 lt!57007 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16)))) lt!57017))))

(assert (=> b!110690 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!57007 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16)))) lt!57017))))

(declare-fun b!110691 () Bool)

(declare-fun Unit!3453 () Unit!3421)

(assert (=> b!110691 (= e!71988 Unit!3453)))

(declare-fun b!110692 () Bool)

(assert (=> b!110692 (= e!71987 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!57007 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16)))) lt!57017)))))

(assert (= (and d!31147 c!19654) b!110690))

(assert (= (and d!31147 (not c!19654)) b!110691))

(assert (= (and d!31147 (not res!54724)) b!110692))

(declare-fun m!125751 () Bool)

(assert (=> d!31147 m!125751))

(declare-fun m!125753 () Bool)

(assert (=> b!110690 m!125753))

(declare-fun m!125755 () Bool)

(assert (=> b!110690 m!125755))

(assert (=> b!110690 m!125755))

(declare-fun m!125757 () Bool)

(assert (=> b!110690 m!125757))

(assert (=> b!110692 m!125755))

(assert (=> b!110692 m!125755))

(assert (=> b!110692 m!125757))

(assert (=> b!110548 d!31147))

(declare-fun d!31149 () Bool)

(declare-fun e!71989 () Bool)

(assert (=> d!31149 e!71989))

(declare-fun res!54725 () Bool)

(assert (=> d!31149 (=> (not res!54725) (not e!71989))))

(declare-fun lt!57160 () ListLongMap!1595)

(assert (=> d!31149 (= res!54725 (contains!837 lt!57160 (_1!1224 (tuple2!2429 lt!57020 (minValue!2498 newMap!16)))))))

(declare-fun lt!57163 () List!1653)

(assert (=> d!31149 (= lt!57160 (ListLongMap!1596 lt!57163))))

(declare-fun lt!57161 () Unit!3421)

(declare-fun lt!57162 () Unit!3421)

(assert (=> d!31149 (= lt!57161 lt!57162)))

(assert (=> d!31149 (= (getValueByKey!157 lt!57163 (_1!1224 (tuple2!2429 lt!57020 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!57020 (minValue!2498 newMap!16)))))))

(assert (=> d!31149 (= lt!57162 (lemmaContainsTupThenGetReturnValue!75 lt!57163 (_1!1224 (tuple2!2429 lt!57020 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!57020 (minValue!2498 newMap!16)))))))

(assert (=> d!31149 (= lt!57163 (insertStrictlySorted!77 (toList!813 lt!57019) (_1!1224 (tuple2!2429 lt!57020 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!57020 (minValue!2498 newMap!16)))))))

(assert (=> d!31149 (= (+!149 lt!57019 (tuple2!2429 lt!57020 (minValue!2498 newMap!16))) lt!57160)))

(declare-fun b!110693 () Bool)

(declare-fun res!54726 () Bool)

(assert (=> b!110693 (=> (not res!54726) (not e!71989))))

(assert (=> b!110693 (= res!54726 (= (getValueByKey!157 (toList!813 lt!57160) (_1!1224 (tuple2!2429 lt!57020 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!57020 (minValue!2498 newMap!16))))))))

(declare-fun b!110694 () Bool)

(assert (=> b!110694 (= e!71989 (contains!839 (toList!813 lt!57160) (tuple2!2429 lt!57020 (minValue!2498 newMap!16))))))

(assert (= (and d!31149 res!54725) b!110693))

(assert (= (and b!110693 res!54726) b!110694))

(declare-fun m!125759 () Bool)

(assert (=> d!31149 m!125759))

(declare-fun m!125761 () Bool)

(assert (=> d!31149 m!125761))

(declare-fun m!125763 () Bool)

(assert (=> d!31149 m!125763))

(declare-fun m!125765 () Bool)

(assert (=> d!31149 m!125765))

(declare-fun m!125767 () Bool)

(assert (=> b!110693 m!125767))

(declare-fun m!125769 () Bool)

(assert (=> b!110694 m!125769))

(assert (=> b!110548 d!31149))

(declare-fun d!31151 () Bool)

(assert (=> d!31151 (contains!837 (+!149 lt!57007 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16))) lt!57017)))

(declare-fun lt!57164 () Unit!3421)

(assert (=> d!31151 (= lt!57164 (choose!700 lt!57007 lt!57011 (zeroValue!2498 newMap!16) lt!57017))))

(assert (=> d!31151 (contains!837 lt!57007 lt!57017)))

(assert (=> d!31151 (= (addStillContains!76 lt!57007 lt!57011 (zeroValue!2498 newMap!16) lt!57017) lt!57164)))

(declare-fun bs!4553 () Bool)

(assert (= bs!4553 d!31151))

(assert (=> bs!4553 m!125513))

(assert (=> bs!4553 m!125513))

(assert (=> bs!4553 m!125517))

(declare-fun m!125771 () Bool)

(assert (=> bs!4553 m!125771))

(declare-fun m!125773 () Bool)

(assert (=> bs!4553 m!125773))

(assert (=> b!110548 d!31151))

(declare-fun d!31153 () Bool)

(assert (=> d!31153 (= (apply!100 (+!149 lt!57008 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16))) lt!57010) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!57008 (tuple2!2429 lt!57006 (zeroValue!2498 newMap!16)))) lt!57010)))))

(declare-fun bs!4554 () Bool)

(assert (= bs!4554 d!31153))

(declare-fun m!125775 () Bool)

(assert (=> bs!4554 m!125775))

(assert (=> bs!4554 m!125775))

(declare-fun m!125777 () Bool)

(assert (=> bs!4554 m!125777))

(assert (=> b!110548 d!31153))

(declare-fun d!31155 () Bool)

(assert (=> d!31155 (= (apply!100 lt!57008 lt!57010) (get!1359 (getValueByKey!157 (toList!813 lt!57008) lt!57010)))))

(declare-fun bs!4555 () Bool)

(assert (= bs!4555 d!31155))

(declare-fun m!125779 () Bool)

(assert (=> bs!4555 m!125779))

(assert (=> bs!4555 m!125779))

(declare-fun m!125781 () Bool)

(assert (=> bs!4555 m!125781))

(assert (=> b!110548 d!31155))

(declare-fun d!31157 () Bool)

(assert (=> d!31157 (= (apply!100 lt!57019 lt!57005) (get!1359 (getValueByKey!157 (toList!813 lt!57019) lt!57005)))))

(declare-fun bs!4556 () Bool)

(assert (= bs!4556 d!31157))

(declare-fun m!125783 () Bool)

(assert (=> bs!4556 m!125783))

(assert (=> bs!4556 m!125783))

(declare-fun m!125785 () Bool)

(assert (=> bs!4556 m!125785))

(assert (=> b!110548 d!31157))

(declare-fun d!31159 () Bool)

(assert (=> d!31159 (= (apply!100 (+!149 lt!57001 (tuple2!2429 lt!57003 (minValue!2498 newMap!16))) lt!57004) (apply!100 lt!57001 lt!57004))))

(declare-fun lt!57165 () Unit!3421)

(assert (=> d!31159 (= lt!57165 (choose!699 lt!57001 lt!57003 (minValue!2498 newMap!16) lt!57004))))

(declare-fun e!71990 () Bool)

(assert (=> d!31159 e!71990))

(declare-fun res!54727 () Bool)

(assert (=> d!31159 (=> (not res!54727) (not e!71990))))

(assert (=> d!31159 (= res!54727 (contains!837 lt!57001 lt!57004))))

(assert (=> d!31159 (= (addApplyDifferent!76 lt!57001 lt!57003 (minValue!2498 newMap!16) lt!57004) lt!57165)))

(declare-fun b!110695 () Bool)

(assert (=> b!110695 (= e!71990 (not (= lt!57004 lt!57003)))))

(assert (= (and d!31159 res!54727) b!110695))

(assert (=> d!31159 m!125501))

(assert (=> d!31159 m!125523))

(assert (=> d!31159 m!125497))

(declare-fun m!125787 () Bool)

(assert (=> d!31159 m!125787))

(declare-fun m!125789 () Bool)

(assert (=> d!31159 m!125789))

(assert (=> d!31159 m!125501))

(assert (=> b!110548 d!31159))

(declare-fun d!31161 () Bool)

(declare-fun e!71991 () Bool)

(assert (=> d!31161 e!71991))

(declare-fun res!54728 () Bool)

(assert (=> d!31161 (=> (not res!54728) (not e!71991))))

(declare-fun lt!57166 () ListLongMap!1595)

(assert (=> d!31161 (= res!54728 (contains!837 lt!57166 (_1!1224 (tuple2!2429 lt!57003 (minValue!2498 newMap!16)))))))

(declare-fun lt!57169 () List!1653)

(assert (=> d!31161 (= lt!57166 (ListLongMap!1596 lt!57169))))

(declare-fun lt!57167 () Unit!3421)

(declare-fun lt!57168 () Unit!3421)

(assert (=> d!31161 (= lt!57167 lt!57168)))

(assert (=> d!31161 (= (getValueByKey!157 lt!57169 (_1!1224 (tuple2!2429 lt!57003 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!57003 (minValue!2498 newMap!16)))))))

(assert (=> d!31161 (= lt!57168 (lemmaContainsTupThenGetReturnValue!75 lt!57169 (_1!1224 (tuple2!2429 lt!57003 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!57003 (minValue!2498 newMap!16)))))))

(assert (=> d!31161 (= lt!57169 (insertStrictlySorted!77 (toList!813 lt!57001) (_1!1224 (tuple2!2429 lt!57003 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!57003 (minValue!2498 newMap!16)))))))

(assert (=> d!31161 (= (+!149 lt!57001 (tuple2!2429 lt!57003 (minValue!2498 newMap!16))) lt!57166)))

(declare-fun b!110696 () Bool)

(declare-fun res!54729 () Bool)

(assert (=> b!110696 (=> (not res!54729) (not e!71991))))

(assert (=> b!110696 (= res!54729 (= (getValueByKey!157 (toList!813 lt!57166) (_1!1224 (tuple2!2429 lt!57003 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!57003 (minValue!2498 newMap!16))))))))

(declare-fun b!110697 () Bool)

(assert (=> b!110697 (= e!71991 (contains!839 (toList!813 lt!57166) (tuple2!2429 lt!57003 (minValue!2498 newMap!16))))))

(assert (= (and d!31161 res!54728) b!110696))

(assert (= (and b!110696 res!54729) b!110697))

(declare-fun m!125791 () Bool)

(assert (=> d!31161 m!125791))

(declare-fun m!125793 () Bool)

(assert (=> d!31161 m!125793))

(declare-fun m!125795 () Bool)

(assert (=> d!31161 m!125795))

(declare-fun m!125797 () Bool)

(assert (=> d!31161 m!125797))

(declare-fun m!125799 () Bool)

(assert (=> b!110696 m!125799))

(declare-fun m!125801 () Bool)

(assert (=> b!110697 m!125801))

(assert (=> b!110548 d!31161))

(declare-fun d!31163 () Bool)

(declare-fun e!71992 () Bool)

(assert (=> d!31163 e!71992))

(declare-fun res!54730 () Bool)

(assert (=> d!31163 (=> (not res!54730) (not e!71992))))

(declare-fun lt!57170 () ListLongMap!1595)

(assert (=> d!31163 (= res!54730 (contains!837 lt!57170 (_1!1224 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16)))))))

(declare-fun lt!57173 () List!1653)

(assert (=> d!31163 (= lt!57170 (ListLongMap!1596 lt!57173))))

(declare-fun lt!57171 () Unit!3421)

(declare-fun lt!57172 () Unit!3421)

(assert (=> d!31163 (= lt!57171 lt!57172)))

(assert (=> d!31163 (= (getValueByKey!157 lt!57173 (_1!1224 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31163 (= lt!57172 (lemmaContainsTupThenGetReturnValue!75 lt!57173 (_1!1224 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31163 (= lt!57173 (insertStrictlySorted!77 (toList!813 lt!57007) (_1!1224 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31163 (= (+!149 lt!57007 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16))) lt!57170)))

(declare-fun b!110698 () Bool)

(declare-fun res!54731 () Bool)

(assert (=> b!110698 (=> (not res!54731) (not e!71992))))

(assert (=> b!110698 (= res!54731 (= (getValueByKey!157 (toList!813 lt!57170) (_1!1224 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16))))))))

(declare-fun b!110699 () Bool)

(assert (=> b!110699 (= e!71992 (contains!839 (toList!813 lt!57170) (tuple2!2429 lt!57011 (zeroValue!2498 newMap!16))))))

(assert (= (and d!31163 res!54730) b!110698))

(assert (= (and b!110698 res!54731) b!110699))

(declare-fun m!125803 () Bool)

(assert (=> d!31163 m!125803))

(declare-fun m!125805 () Bool)

(assert (=> d!31163 m!125805))

(declare-fun m!125807 () Bool)

(assert (=> d!31163 m!125807))

(declare-fun m!125809 () Bool)

(assert (=> d!31163 m!125809))

(declare-fun m!125811 () Bool)

(assert (=> b!110698 m!125811))

(declare-fun m!125813 () Bool)

(assert (=> b!110699 m!125813))

(assert (=> b!110548 d!31163))

(declare-fun d!31165 () Bool)

(assert (=> d!31165 (isDefined!111 (getValueByKey!157 (toList!813 lt!56691) (_1!1224 lt!56517)))))

(declare-fun lt!57174 () Unit!3421)

(assert (=> d!31165 (= lt!57174 (choose!702 (toList!813 lt!56691) (_1!1224 lt!56517)))))

(declare-fun e!71993 () Bool)

(assert (=> d!31165 e!71993))

(declare-fun res!54732 () Bool)

(assert (=> d!31165 (=> (not res!54732) (not e!71993))))

(assert (=> d!31165 (= res!54732 (isStrictlySorted!306 (toList!813 lt!56691)))))

(assert (=> d!31165 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56691) (_1!1224 lt!56517)) lt!57174)))

(declare-fun b!110700 () Bool)

(assert (=> b!110700 (= e!71993 (containsKey!161 (toList!813 lt!56691) (_1!1224 lt!56517)))))

(assert (= (and d!31165 res!54732) b!110700))

(assert (=> d!31165 m!124747))

(assert (=> d!31165 m!124747))

(assert (=> d!31165 m!125445))

(declare-fun m!125815 () Bool)

(assert (=> d!31165 m!125815))

(declare-fun m!125817 () Bool)

(assert (=> d!31165 m!125817))

(assert (=> b!110700 m!125441))

(assert (=> b!110484 d!31165))

(declare-fun d!31167 () Bool)

(assert (=> d!31167 (= (isDefined!111 (getValueByKey!157 (toList!813 lt!56691) (_1!1224 lt!56517))) (not (isEmpty!382 (getValueByKey!157 (toList!813 lt!56691) (_1!1224 lt!56517)))))))

(declare-fun bs!4557 () Bool)

(assert (= bs!4557 d!31167))

(assert (=> bs!4557 m!124747))

(declare-fun m!125819 () Bool)

(assert (=> bs!4557 m!125819))

(assert (=> b!110484 d!31167))

(assert (=> b!110484 d!31101))

(declare-fun d!31169 () Bool)

(assert (=> d!31169 (= (+!149 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (getCurrentListMap!489 (_keys!4341 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(assert (=> d!31169 true))

(declare-fun _$5!116 () Unit!3421)

(assert (=> d!31169 (= (choose!698 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3235 lt!56639) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 (defaultEntry!2627 newMap!16)) _$5!116)))

(declare-fun bs!4558 () Bool)

(assert (= bs!4558 d!31169))

(assert (=> bs!4558 m!124677))

(assert (=> bs!4558 m!124677))

(assert (=> bs!4558 m!125273))

(assert (=> bs!4558 m!124651))

(assert (=> bs!4558 m!125275))

(assert (=> d!31007 d!31169))

(declare-fun d!31171 () Bool)

(assert (=> d!31171 (= (validMask!0 (mask!6795 newMap!16)) (and (or (= (mask!6795 newMap!16) #b00000000000000000000000000000111) (= (mask!6795 newMap!16) #b00000000000000000000000000001111) (= (mask!6795 newMap!16) #b00000000000000000000000000011111) (= (mask!6795 newMap!16) #b00000000000000000000000000111111) (= (mask!6795 newMap!16) #b00000000000000000000000001111111) (= (mask!6795 newMap!16) #b00000000000000000000000011111111) (= (mask!6795 newMap!16) #b00000000000000000000000111111111) (= (mask!6795 newMap!16) #b00000000000000000000001111111111) (= (mask!6795 newMap!16) #b00000000000000000000011111111111) (= (mask!6795 newMap!16) #b00000000000000000000111111111111) (= (mask!6795 newMap!16) #b00000000000000000001111111111111) (= (mask!6795 newMap!16) #b00000000000000000011111111111111) (= (mask!6795 newMap!16) #b00000000000000000111111111111111) (= (mask!6795 newMap!16) #b00000000000000001111111111111111) (= (mask!6795 newMap!16) #b00000000000000011111111111111111) (= (mask!6795 newMap!16) #b00000000000000111111111111111111) (= (mask!6795 newMap!16) #b00000000000001111111111111111111) (= (mask!6795 newMap!16) #b00000000000011111111111111111111) (= (mask!6795 newMap!16) #b00000000000111111111111111111111) (= (mask!6795 newMap!16) #b00000000001111111111111111111111) (= (mask!6795 newMap!16) #b00000000011111111111111111111111) (= (mask!6795 newMap!16) #b00000000111111111111111111111111) (= (mask!6795 newMap!16) #b00000001111111111111111111111111) (= (mask!6795 newMap!16) #b00000011111111111111111111111111) (= (mask!6795 newMap!16) #b00000111111111111111111111111111) (= (mask!6795 newMap!16) #b00001111111111111111111111111111) (= (mask!6795 newMap!16) #b00011111111111111111111111111111) (= (mask!6795 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6795 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!31007 d!31171))

(declare-fun d!31173 () Bool)

(assert (=> d!31173 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676))))

(declare-fun lt!57175 () Unit!3421)

(assert (=> d!31173 (= lt!57175 (choose!702 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676))))

(declare-fun e!71994 () Bool)

(assert (=> d!31173 e!71994))

(declare-fun res!54733 () Bool)

(assert (=> d!31173 (=> (not res!54733) (not e!71994))))

(assert (=> d!31173 (= res!54733 (isStrictlySorted!306 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)))))))

(assert (=> d!31173 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676) lt!57175)))

(declare-fun b!110701 () Bool)

(assert (=> b!110701 (= e!71994 (containsKey!161 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676))))

(assert (= (and d!31173 res!54733) b!110701))

(assert (=> d!31173 m!125073))

(assert (=> d!31173 m!125073))

(assert (=> d!31173 m!125075))

(declare-fun m!125821 () Bool)

(assert (=> d!31173 m!125821))

(declare-fun m!125823 () Bool)

(assert (=> d!31173 m!125823))

(assert (=> b!110701 m!125069))

(assert (=> b!110352 d!31173))

(declare-fun d!31175 () Bool)

(assert (=> d!31175 (= (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676)) (not (isEmpty!382 (getValueByKey!157 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676))))))

(declare-fun bs!4559 () Bool)

(assert (= bs!4559 d!31175))

(assert (=> bs!4559 m!125073))

(declare-fun m!125825 () Bool)

(assert (=> bs!4559 m!125825))

(assert (=> b!110352 d!31175))

(declare-fun e!71996 () Option!163)

(declare-fun b!110704 () Bool)

(assert (=> b!110704 (= e!71996 (getValueByKey!157 (t!5802 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)))) lt!56676))))

(declare-fun c!19655 () Bool)

(declare-fun d!31177 () Bool)

(assert (=> d!31177 (= c!19655 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)))) (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))))) lt!56676)))))

(declare-fun e!71995 () Option!163)

(assert (=> d!31177 (= (getValueByKey!157 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676) e!71995)))

(declare-fun b!110705 () Bool)

(assert (=> b!110705 (= e!71996 None!161)))

(declare-fun b!110703 () Bool)

(assert (=> b!110703 (= e!71995 e!71996)))

(declare-fun c!19656 () Bool)

(assert (=> b!110703 (= c!19656 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)))) (not (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))))) lt!56676))))))

(declare-fun b!110702 () Bool)

(assert (=> b!110702 (= e!71995 (Some!162 (_2!1224 (h!2248 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)))))))))

(assert (= (and d!31177 c!19655) b!110702))

(assert (= (and d!31177 (not c!19655)) b!110703))

(assert (= (and b!110703 c!19656) b!110704))

(assert (= (and b!110703 (not c!19656)) b!110705))

(declare-fun m!125827 () Bool)

(assert (=> b!110704 m!125827))

(assert (=> b!110352 d!31177))

(declare-fun d!31179 () Bool)

(assert (=> d!31179 (= (get!1359 (getValueByKey!157 (toList!813 lt!56752) lt!56755)) (v!2933 (getValueByKey!157 (toList!813 lt!56752) lt!56755)))))

(assert (=> d!31031 d!31179))

(declare-fun b!110708 () Bool)

(declare-fun e!71998 () Option!163)

(assert (=> b!110708 (= e!71998 (getValueByKey!157 (t!5802 (toList!813 lt!56752)) lt!56755))))

(declare-fun d!31181 () Bool)

(declare-fun c!19657 () Bool)

(assert (=> d!31181 (= c!19657 (and ((_ is Cons!1649) (toList!813 lt!56752)) (= (_1!1224 (h!2248 (toList!813 lt!56752))) lt!56755)))))

(declare-fun e!71997 () Option!163)

(assert (=> d!31181 (= (getValueByKey!157 (toList!813 lt!56752) lt!56755) e!71997)))

(declare-fun b!110709 () Bool)

(assert (=> b!110709 (= e!71998 None!161)))

(declare-fun b!110707 () Bool)

(assert (=> b!110707 (= e!71997 e!71998)))

(declare-fun c!19658 () Bool)

(assert (=> b!110707 (= c!19658 (and ((_ is Cons!1649) (toList!813 lt!56752)) (not (= (_1!1224 (h!2248 (toList!813 lt!56752))) lt!56755))))))

(declare-fun b!110706 () Bool)

(assert (=> b!110706 (= e!71997 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56752)))))))

(assert (= (and d!31181 c!19657) b!110706))

(assert (= (and d!31181 (not c!19657)) b!110707))

(assert (= (and b!110707 c!19658) b!110708))

(assert (= (and b!110707 (not c!19658)) b!110709))

(declare-fun m!125829 () Bool)

(assert (=> b!110708 m!125829))

(assert (=> d!31031 d!31181))

(assert (=> d!30995 d!30993))

(declare-fun d!31183 () Bool)

(assert (=> d!31183 (= (getValueByKey!157 lt!56702 (_1!1224 lt!56517)) (Some!162 (_2!1224 lt!56517)))))

(assert (=> d!31183 true))

(declare-fun _$22!445 () Unit!3421)

(assert (=> d!31183 (= (choose!693 lt!56702 (_1!1224 lt!56517) (_2!1224 lt!56517)) _$22!445)))

(declare-fun bs!4560 () Bool)

(assert (= bs!4560 d!31183))

(assert (=> bs!4560 m!124765))

(assert (=> d!30995 d!31183))

(declare-fun d!31185 () Bool)

(declare-fun res!54738 () Bool)

(declare-fun e!72003 () Bool)

(assert (=> d!31185 (=> res!54738 e!72003)))

(assert (=> d!31185 (= res!54738 (or ((_ is Nil!1650) lt!56702) ((_ is Nil!1650) (t!5802 lt!56702))))))

(assert (=> d!31185 (= (isStrictlySorted!306 lt!56702) e!72003)))

(declare-fun b!110714 () Bool)

(declare-fun e!72004 () Bool)

(assert (=> b!110714 (= e!72003 e!72004)))

(declare-fun res!54739 () Bool)

(assert (=> b!110714 (=> (not res!54739) (not e!72004))))

(assert (=> b!110714 (= res!54739 (bvslt (_1!1224 (h!2248 lt!56702)) (_1!1224 (h!2248 (t!5802 lt!56702)))))))

(declare-fun b!110715 () Bool)

(assert (=> b!110715 (= e!72004 (isStrictlySorted!306 (t!5802 lt!56702)))))

(assert (= (and d!31185 (not res!54738)) b!110714))

(assert (= (and b!110714 res!54739) b!110715))

(declare-fun m!125831 () Bool)

(assert (=> b!110715 m!125831))

(assert (=> d!30995 d!31185))

(declare-fun d!31187 () Bool)

(declare-fun e!72005 () Bool)

(assert (=> d!31187 e!72005))

(declare-fun res!54740 () Bool)

(assert (=> d!31187 (=> (not res!54740) (not e!72005))))

(declare-fun lt!57176 () ListLongMap!1595)

(assert (=> d!31187 (= res!54740 (contains!837 lt!57176 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun lt!57179 () List!1653)

(assert (=> d!31187 (= lt!57176 (ListLongMap!1596 lt!57179))))

(declare-fun lt!57177 () Unit!3421)

(declare-fun lt!57178 () Unit!3421)

(assert (=> d!31187 (= lt!57177 lt!57178)))

(assert (=> d!31187 (= (getValueByKey!157 lt!57179 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31187 (= lt!57178 (lemmaContainsTupThenGetReturnValue!75 lt!57179 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31187 (= lt!57179 (insertStrictlySorted!77 (toList!813 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31187 (= (+!149 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) lt!57176)))

(declare-fun b!110716 () Bool)

(declare-fun res!54741 () Bool)

(assert (=> b!110716 (=> (not res!54741) (not e!72005))))

(assert (=> b!110716 (= res!54741 (= (getValueByKey!157 (toList!813 lt!57176) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!110717 () Bool)

(assert (=> b!110717 (= e!72005 (contains!839 (toList!813 lt!57176) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(assert (= (and d!31187 res!54740) b!110716))

(assert (= (and b!110716 res!54741) b!110717))

(declare-fun m!125833 () Bool)

(assert (=> d!31187 m!125833))

(declare-fun m!125835 () Bool)

(assert (=> d!31187 m!125835))

(declare-fun m!125837 () Bool)

(assert (=> d!31187 m!125837))

(declare-fun m!125839 () Bool)

(assert (=> d!31187 m!125839))

(declare-fun m!125841 () Bool)

(assert (=> b!110716 m!125841))

(declare-fun m!125843 () Bool)

(assert (=> b!110717 m!125843))

(assert (=> b!110420 d!31187))

(assert (=> b!110420 d!30955))

(declare-fun call!11827 () ListLongMap!1595)

(declare-fun bm!11823 () Bool)

(assert (=> bm!11823 (= call!11827 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!110718 () Bool)

(declare-fun e!72009 () Bool)

(declare-fun lt!57183 () ListLongMap!1595)

(assert (=> b!110718 (= e!72009 (= (apply!100 lt!57183 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun b!110719 () Bool)

(declare-fun e!72012 () Unit!3421)

(declare-fun Unit!3454 () Unit!3421)

(assert (=> b!110719 (= e!72012 Unit!3454)))

(declare-fun b!110720 () Bool)

(declare-fun e!72018 () Bool)

(assert (=> b!110720 (= e!72018 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110721 () Bool)

(declare-fun e!72017 () ListLongMap!1595)

(declare-fun call!11830 () ListLongMap!1595)

(assert (=> b!110721 (= e!72017 (+!149 call!11830 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun bm!11825 () Bool)

(declare-fun call!11831 () Bool)

(assert (=> bm!11825 (= call!11831 (contains!837 lt!57183 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110722 () Bool)

(declare-fun e!72013 () Bool)

(assert (=> b!110722 (= e!72013 (= (apply!100 lt!57183 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!110723 () Bool)

(declare-fun e!72007 () Bool)

(assert (=> b!110723 (= e!72007 e!72013)))

(declare-fun res!54744 () Bool)

(declare-fun call!11832 () Bool)

(assert (=> b!110723 (= res!54744 call!11832)))

(assert (=> b!110723 (=> (not res!54744) (not e!72013))))

(declare-fun b!110724 () Bool)

(declare-fun e!72010 () Bool)

(declare-fun e!72016 () Bool)

(assert (=> b!110724 (= e!72010 e!72016)))

(declare-fun res!54749 () Bool)

(assert (=> b!110724 (=> (not res!54749) (not e!72016))))

(assert (=> b!110724 (= res!54749 (contains!837 lt!57183 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110724 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110725 () Bool)

(declare-fun e!72011 () Bool)

(assert (=> b!110725 (= e!72011 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110726 () Bool)

(declare-fun res!54745 () Bool)

(declare-fun e!72008 () Bool)

(assert (=> b!110726 (=> (not res!54745) (not e!72008))))

(assert (=> b!110726 (= res!54745 e!72007)))

(declare-fun c!19659 () Bool)

(assert (=> b!110726 (= c!19659 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110727 () Bool)

(assert (=> b!110727 (= e!72007 (not call!11832))))

(declare-fun b!110728 () Bool)

(declare-fun e!72006 () ListLongMap!1595)

(declare-fun call!11829 () ListLongMap!1595)

(assert (=> b!110728 (= e!72006 call!11829)))

(declare-fun bm!11826 () Bool)

(declare-fun call!11828 () ListLongMap!1595)

(assert (=> bm!11826 (= call!11829 call!11828)))

(declare-fun bm!11827 () Bool)

(declare-fun call!11826 () ListLongMap!1595)

(assert (=> bm!11827 (= call!11826 call!11830)))

(declare-fun b!110729 () Bool)

(assert (=> b!110729 (= e!72006 call!11826)))

(declare-fun b!110730 () Bool)

(declare-fun c!19661 () Bool)

(assert (=> b!110730 (= c!19661 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72014 () ListLongMap!1595)

(assert (=> b!110730 (= e!72014 e!72006)))

(declare-fun c!19664 () Bool)

(declare-fun c!19660 () Bool)

(declare-fun bm!11824 () Bool)

(assert (=> bm!11824 (= call!11830 (+!149 (ite c!19660 call!11827 (ite c!19664 call!11828 call!11829)) (ite (or c!19660 c!19664) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun d!31189 () Bool)

(assert (=> d!31189 e!72008))

(declare-fun res!54743 () Bool)

(assert (=> d!31189 (=> (not res!54743) (not e!72008))))

(assert (=> d!31189 (= res!54743 (or (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))))

(declare-fun lt!57195 () ListLongMap!1595)

(assert (=> d!31189 (= lt!57183 lt!57195)))

(declare-fun lt!57196 () Unit!3421)

(assert (=> d!31189 (= lt!57196 e!72012)))

(declare-fun c!19663 () Bool)

(assert (=> d!31189 (= c!19663 e!72011)))

(declare-fun res!54742 () Bool)

(assert (=> d!31189 (=> (not res!54742) (not e!72011))))

(assert (=> d!31189 (= res!54742 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31189 (= lt!57195 e!72017)))

(assert (=> d!31189 (= c!19660 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31189 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31189 (= (getCurrentListMap!489 (_keys!4341 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57183)))

(declare-fun b!110731 () Bool)

(assert (=> b!110731 (= e!72017 e!72014)))

(assert (=> b!110731 (= c!19664 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110732 () Bool)

(declare-fun e!72015 () Bool)

(assert (=> b!110732 (= e!72008 e!72015)))

(declare-fun c!19662 () Bool)

(assert (=> b!110732 (= c!19662 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110733 () Bool)

(assert (=> b!110733 (= e!72015 e!72009)))

(declare-fun res!54746 () Bool)

(assert (=> b!110733 (= res!54746 call!11831)))

(assert (=> b!110733 (=> (not res!54746) (not e!72009))))

(declare-fun bm!11828 () Bool)

(assert (=> bm!11828 (= call!11832 (contains!837 lt!57183 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110734 () Bool)

(declare-fun lt!57199 () Unit!3421)

(assert (=> b!110734 (= e!72012 lt!57199)))

(declare-fun lt!57188 () ListLongMap!1595)

(assert (=> b!110734 (= lt!57188 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57192 () (_ BitVec 64))

(assert (=> b!110734 (= lt!57192 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57198 () (_ BitVec 64))

(assert (=> b!110734 (= lt!57198 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57197 () Unit!3421)

(assert (=> b!110734 (= lt!57197 (addStillContains!76 lt!57188 lt!57192 (zeroValue!2498 newMap!16) lt!57198))))

(assert (=> b!110734 (contains!837 (+!149 lt!57188 (tuple2!2429 lt!57192 (zeroValue!2498 newMap!16))) lt!57198)))

(declare-fun lt!57194 () Unit!3421)

(assert (=> b!110734 (= lt!57194 lt!57197)))

(declare-fun lt!57182 () ListLongMap!1595)

(assert (=> b!110734 (= lt!57182 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57184 () (_ BitVec 64))

(assert (=> b!110734 (= lt!57184 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57185 () (_ BitVec 64))

(assert (=> b!110734 (= lt!57185 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57180 () Unit!3421)

(assert (=> b!110734 (= lt!57180 (addApplyDifferent!76 lt!57182 lt!57184 (minValue!2498 newMap!16) lt!57185))))

(assert (=> b!110734 (= (apply!100 (+!149 lt!57182 (tuple2!2429 lt!57184 (minValue!2498 newMap!16))) lt!57185) (apply!100 lt!57182 lt!57185))))

(declare-fun lt!57181 () Unit!3421)

(assert (=> b!110734 (= lt!57181 lt!57180)))

(declare-fun lt!57189 () ListLongMap!1595)

(assert (=> b!110734 (= lt!57189 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57187 () (_ BitVec 64))

(assert (=> b!110734 (= lt!57187 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57191 () (_ BitVec 64))

(assert (=> b!110734 (= lt!57191 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57190 () Unit!3421)

(assert (=> b!110734 (= lt!57190 (addApplyDifferent!76 lt!57189 lt!57187 (zeroValue!2498 newMap!16) lt!57191))))

(assert (=> b!110734 (= (apply!100 (+!149 lt!57189 (tuple2!2429 lt!57187 (zeroValue!2498 newMap!16))) lt!57191) (apply!100 lt!57189 lt!57191))))

(declare-fun lt!57193 () Unit!3421)

(assert (=> b!110734 (= lt!57193 lt!57190)))

(declare-fun lt!57200 () ListLongMap!1595)

(assert (=> b!110734 (= lt!57200 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57201 () (_ BitVec 64))

(assert (=> b!110734 (= lt!57201 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57186 () (_ BitVec 64))

(assert (=> b!110734 (= lt!57186 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110734 (= lt!57199 (addApplyDifferent!76 lt!57200 lt!57201 (minValue!2498 newMap!16) lt!57186))))

(assert (=> b!110734 (= (apply!100 (+!149 lt!57200 (tuple2!2429 lt!57201 (minValue!2498 newMap!16))) lt!57186) (apply!100 lt!57200 lt!57186))))

(declare-fun b!110735 () Bool)

(declare-fun res!54748 () Bool)

(assert (=> b!110735 (=> (not res!54748) (not e!72008))))

(assert (=> b!110735 (= res!54748 e!72010)))

(declare-fun res!54750 () Bool)

(assert (=> b!110735 (=> res!54750 e!72010)))

(assert (=> b!110735 (= res!54750 (not e!72018))))

(declare-fun res!54747 () Bool)

(assert (=> b!110735 (=> (not res!54747) (not e!72018))))

(assert (=> b!110735 (= res!54747 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110736 () Bool)

(assert (=> b!110736 (= e!72014 call!11826)))

(declare-fun bm!11829 () Bool)

(assert (=> bm!11829 (= call!11828 call!11827)))

(declare-fun b!110737 () Bool)

(assert (=> b!110737 (= e!72015 (not call!11831))))

(declare-fun b!110738 () Bool)

(assert (=> b!110738 (= e!72016 (= (apply!100 lt!57183 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110738 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))))))

(assert (=> b!110738 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (= (and d!31189 c!19660) b!110721))

(assert (= (and d!31189 (not c!19660)) b!110731))

(assert (= (and b!110731 c!19664) b!110736))

(assert (= (and b!110731 (not c!19664)) b!110730))

(assert (= (and b!110730 c!19661) b!110729))

(assert (= (and b!110730 (not c!19661)) b!110728))

(assert (= (or b!110729 b!110728) bm!11826))

(assert (= (or b!110736 bm!11826) bm!11829))

(assert (= (or b!110736 b!110729) bm!11827))

(assert (= (or b!110721 bm!11829) bm!11823))

(assert (= (or b!110721 bm!11827) bm!11824))

(assert (= (and d!31189 res!54742) b!110725))

(assert (= (and d!31189 c!19663) b!110734))

(assert (= (and d!31189 (not c!19663)) b!110719))

(assert (= (and d!31189 res!54743) b!110735))

(assert (= (and b!110735 res!54747) b!110720))

(assert (= (and b!110735 (not res!54750)) b!110724))

(assert (= (and b!110724 res!54749) b!110738))

(assert (= (and b!110735 res!54748) b!110726))

(assert (= (and b!110726 c!19659) b!110723))

(assert (= (and b!110726 (not c!19659)) b!110727))

(assert (= (and b!110723 res!54744) b!110722))

(assert (= (or b!110723 b!110727) bm!11828))

(assert (= (and b!110726 res!54745) b!110732))

(assert (= (and b!110732 c!19662) b!110733))

(assert (= (and b!110732 (not c!19662)) b!110737))

(assert (= (and b!110733 res!54746) b!110718))

(assert (= (or b!110733 b!110737) bm!11825))

(declare-fun b_lambda!4985 () Bool)

(assert (=> (not b_lambda!4985) (not b!110738)))

(assert (=> b!110738 t!5810))

(declare-fun b_and!6833 () Bool)

(assert (= b_and!6829 (and (=> t!5810 result!3549) b_and!6833)))

(assert (=> b!110738 t!5812))

(declare-fun b_and!6835 () Bool)

(assert (= b_and!6831 (and (=> t!5812 result!3551) b_and!6835)))

(declare-fun m!125845 () Bool)

(assert (=> b!110722 m!125845))

(declare-fun m!125847 () Bool)

(assert (=> b!110721 m!125847))

(assert (=> b!110724 m!124875))

(assert (=> b!110724 m!124875))

(declare-fun m!125849 () Bool)

(assert (=> b!110724 m!125849))

(declare-fun m!125851 () Bool)

(assert (=> bm!11824 m!125851))

(assert (=> d!31189 m!124861))

(declare-fun m!125853 () Bool)

(assert (=> b!110734 m!125853))

(declare-fun m!125855 () Bool)

(assert (=> b!110734 m!125855))

(declare-fun m!125857 () Bool)

(assert (=> b!110734 m!125857))

(assert (=> b!110734 m!124875))

(declare-fun m!125859 () Bool)

(assert (=> b!110734 m!125859))

(declare-fun m!125861 () Bool)

(assert (=> b!110734 m!125861))

(declare-fun m!125863 () Bool)

(assert (=> b!110734 m!125863))

(assert (=> b!110734 m!125863))

(declare-fun m!125865 () Bool)

(assert (=> b!110734 m!125865))

(declare-fun m!125867 () Bool)

(assert (=> b!110734 m!125867))

(declare-fun m!125869 () Bool)

(assert (=> b!110734 m!125869))

(declare-fun m!125871 () Bool)

(assert (=> b!110734 m!125871))

(declare-fun m!125873 () Bool)

(assert (=> b!110734 m!125873))

(declare-fun m!125875 () Bool)

(assert (=> b!110734 m!125875))

(assert (=> b!110734 m!125873))

(declare-fun m!125877 () Bool)

(assert (=> b!110734 m!125877))

(declare-fun m!125879 () Bool)

(assert (=> b!110734 m!125879))

(assert (=> b!110734 m!125855))

(declare-fun m!125881 () Bool)

(assert (=> b!110734 m!125881))

(assert (=> b!110734 m!125861))

(declare-fun m!125883 () Bool)

(assert (=> b!110734 m!125883))

(assert (=> b!110720 m!124875))

(assert (=> b!110720 m!124875))

(assert (=> b!110720 m!124877))

(assert (=> bm!11823 m!125859))

(declare-fun m!125885 () Bool)

(assert (=> bm!11828 m!125885))

(assert (=> b!110725 m!124875))

(assert (=> b!110725 m!124875))

(assert (=> b!110725 m!124877))

(declare-fun m!125887 () Bool)

(assert (=> bm!11825 m!125887))

(assert (=> b!110738 m!124875))

(declare-fun m!125889 () Bool)

(assert (=> b!110738 m!125889))

(assert (=> b!110738 m!124937))

(declare-fun m!125891 () Bool)

(assert (=> b!110738 m!125891))

(assert (=> b!110738 m!124937))

(declare-fun m!125893 () Bool)

(assert (=> b!110738 m!125893))

(assert (=> b!110738 m!124875))

(assert (=> b!110738 m!125891))

(declare-fun m!125895 () Bool)

(assert (=> b!110718 m!125895))

(assert (=> b!110420 d!31189))

(declare-fun d!31191 () Bool)

(declare-fun e!72019 () Bool)

(assert (=> d!31191 e!72019))

(declare-fun res!54751 () Bool)

(assert (=> d!31191 (=> (not res!54751) (not e!72019))))

(declare-fun lt!57202 () ListLongMap!1595)

(assert (=> d!31191 (= res!54751 (contains!837 lt!57202 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun lt!57205 () List!1653)

(assert (=> d!31191 (= lt!57202 (ListLongMap!1596 lt!57205))))

(declare-fun lt!57203 () Unit!3421)

(declare-fun lt!57204 () Unit!3421)

(assert (=> d!31191 (= lt!57203 lt!57204)))

(assert (=> d!31191 (= (getValueByKey!157 lt!57205 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31191 (= lt!57204 (lemmaContainsTupThenGetReturnValue!75 lt!57205 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31191 (= lt!57205 (insertStrictlySorted!77 (toList!813 call!11806) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31191 (= (+!149 call!11806 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) lt!57202)))

(declare-fun b!110739 () Bool)

(declare-fun res!54752 () Bool)

(assert (=> b!110739 (=> (not res!54752) (not e!72019))))

(assert (=> b!110739 (= res!54752 (= (getValueByKey!157 (toList!813 lt!57202) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(declare-fun b!110740 () Bool)

(assert (=> b!110740 (= e!72019 (contains!839 (toList!813 lt!57202) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(assert (= (and d!31191 res!54751) b!110739))

(assert (= (and b!110739 res!54752) b!110740))

(declare-fun m!125897 () Bool)

(assert (=> d!31191 m!125897))

(declare-fun m!125899 () Bool)

(assert (=> d!31191 m!125899))

(declare-fun m!125901 () Bool)

(assert (=> d!31191 m!125901))

(declare-fun m!125903 () Bool)

(assert (=> d!31191 m!125903))

(declare-fun m!125905 () Bool)

(assert (=> b!110739 m!125905))

(declare-fun m!125907 () Bool)

(assert (=> b!110740 m!125907))

(assert (=> b!110535 d!31191))

(declare-fun b!110743 () Bool)

(declare-fun e!72021 () Option!163)

(assert (=> b!110743 (= e!72021 (getValueByKey!157 (t!5802 (t!5802 lt!56694)) (_1!1224 lt!56517)))))

(declare-fun d!31193 () Bool)

(declare-fun c!19665 () Bool)

(assert (=> d!31193 (= c!19665 (and ((_ is Cons!1649) (t!5802 lt!56694)) (= (_1!1224 (h!2248 (t!5802 lt!56694))) (_1!1224 lt!56517))))))

(declare-fun e!72020 () Option!163)

(assert (=> d!31193 (= (getValueByKey!157 (t!5802 lt!56694) (_1!1224 lt!56517)) e!72020)))

(declare-fun b!110744 () Bool)

(assert (=> b!110744 (= e!72021 None!161)))

(declare-fun b!110742 () Bool)

(assert (=> b!110742 (= e!72020 e!72021)))

(declare-fun c!19666 () Bool)

(assert (=> b!110742 (= c!19666 (and ((_ is Cons!1649) (t!5802 lt!56694)) (not (= (_1!1224 (h!2248 (t!5802 lt!56694))) (_1!1224 lt!56517)))))))

(declare-fun b!110741 () Bool)

(assert (=> b!110741 (= e!72020 (Some!162 (_2!1224 (h!2248 (t!5802 lt!56694)))))))

(assert (= (and d!31193 c!19665) b!110741))

(assert (= (and d!31193 (not c!19665)) b!110742))

(assert (= (and b!110742 c!19666) b!110743))

(assert (= (and b!110742 (not c!19666)) b!110744))

(declare-fun m!125909 () Bool)

(assert (=> b!110743 m!125909))

(assert (=> b!110489 d!31193))

(declare-fun d!31195 () Bool)

(assert (=> d!31195 (= (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!382 (getValueByKey!157 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4561 () Bool)

(assert (= bs!4561 d!31195))

(assert (=> bs!4561 m!125119))

(declare-fun m!125911 () Bool)

(assert (=> bs!4561 m!125911))

(assert (=> b!110366 d!31195))

(declare-fun b!110747 () Bool)

(declare-fun e!72023 () Option!163)

(assert (=> b!110747 (= e!72023 (getValueByKey!157 (t!5802 (toList!813 lt!56753)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31197 () Bool)

(declare-fun c!19667 () Bool)

(assert (=> d!31197 (= c!19667 (and ((_ is Cons!1649) (toList!813 lt!56753)) (= (_1!1224 (h!2248 (toList!813 lt!56753))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!72022 () Option!163)

(assert (=> d!31197 (= (getValueByKey!157 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000) e!72022)))

(declare-fun b!110748 () Bool)

(assert (=> b!110748 (= e!72023 None!161)))

(declare-fun b!110746 () Bool)

(assert (=> b!110746 (= e!72022 e!72023)))

(declare-fun c!19668 () Bool)

(assert (=> b!110746 (= c!19668 (and ((_ is Cons!1649) (toList!813 lt!56753)) (not (= (_1!1224 (h!2248 (toList!813 lt!56753))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110745 () Bool)

(assert (=> b!110745 (= e!72022 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56753)))))))

(assert (= (and d!31197 c!19667) b!110745))

(assert (= (and d!31197 (not c!19667)) b!110746))

(assert (= (and b!110746 c!19668) b!110747))

(assert (= (and b!110746 (not c!19668)) b!110748))

(declare-fun m!125913 () Bool)

(assert (=> b!110747 m!125913))

(assert (=> b!110366 d!31197))

(declare-fun d!31199 () Bool)

(assert (=> d!31199 (contains!837 (+!149 lt!56802 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) lt!56812)))

(declare-fun lt!57206 () Unit!3421)

(assert (=> d!31199 (= lt!57206 (choose!700 lt!56802 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) lt!56812))))

(assert (=> d!31199 (contains!837 lt!56802 lt!56812)))

(assert (=> d!31199 (= (addStillContains!76 lt!56802 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) lt!56812) lt!57206)))

(declare-fun bs!4562 () Bool)

(assert (= bs!4562 d!31199))

(assert (=> bs!4562 m!124919))

(assert (=> bs!4562 m!124919))

(assert (=> bs!4562 m!124923))

(declare-fun m!125915 () Bool)

(assert (=> bs!4562 m!125915))

(declare-fun m!125917 () Bool)

(assert (=> bs!4562 m!125917))

(assert (=> b!110237 d!31199))

(declare-fun d!31201 () Bool)

(assert (=> d!31201 (= (apply!100 (+!149 lt!56803 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) lt!56805) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56803 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))) lt!56805)))))

(declare-fun bs!4563 () Bool)

(assert (= bs!4563 d!31201))

(declare-fun m!125919 () Bool)

(assert (=> bs!4563 m!125919))

(assert (=> bs!4563 m!125919))

(declare-fun m!125921 () Bool)

(assert (=> bs!4563 m!125921))

(assert (=> b!110237 d!31201))

(declare-fun d!31203 () Bool)

(declare-fun e!72024 () Bool)

(assert (=> d!31203 e!72024))

(declare-fun res!54753 () Bool)

(assert (=> d!31203 (=> res!54753 e!72024)))

(declare-fun lt!57210 () Bool)

(assert (=> d!31203 (= res!54753 (not lt!57210))))

(declare-fun lt!57207 () Bool)

(assert (=> d!31203 (= lt!57210 lt!57207)))

(declare-fun lt!57209 () Unit!3421)

(declare-fun e!72025 () Unit!3421)

(assert (=> d!31203 (= lt!57209 e!72025)))

(declare-fun c!19669 () Bool)

(assert (=> d!31203 (= c!19669 lt!57207)))

(assert (=> d!31203 (= lt!57207 (containsKey!161 (toList!813 (+!149 lt!56802 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))) lt!56812))))

(assert (=> d!31203 (= (contains!837 (+!149 lt!56802 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) lt!56812) lt!57210)))

(declare-fun b!110749 () Bool)

(declare-fun lt!57208 () Unit!3421)

(assert (=> b!110749 (= e!72025 lt!57208)))

(assert (=> b!110749 (= lt!57208 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (+!149 lt!56802 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))) lt!56812))))

(assert (=> b!110749 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56802 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))) lt!56812))))

(declare-fun b!110750 () Bool)

(declare-fun Unit!3455 () Unit!3421)

(assert (=> b!110750 (= e!72025 Unit!3455)))

(declare-fun b!110751 () Bool)

(assert (=> b!110751 (= e!72024 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56802 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))) lt!56812)))))

(assert (= (and d!31203 c!19669) b!110749))

(assert (= (and d!31203 (not c!19669)) b!110750))

(assert (= (and d!31203 (not res!54753)) b!110751))

(declare-fun m!125923 () Bool)

(assert (=> d!31203 m!125923))

(declare-fun m!125925 () Bool)

(assert (=> b!110749 m!125925))

(declare-fun m!125927 () Bool)

(assert (=> b!110749 m!125927))

(assert (=> b!110749 m!125927))

(declare-fun m!125929 () Bool)

(assert (=> b!110749 m!125929))

(assert (=> b!110751 m!125927))

(assert (=> b!110751 m!125927))

(assert (=> b!110751 m!125929))

(assert (=> b!110237 d!31203))

(declare-fun d!31205 () Bool)

(declare-fun e!72026 () Bool)

(assert (=> d!31205 e!72026))

(declare-fun res!54754 () Bool)

(assert (=> d!31205 (=> (not res!54754) (not e!72026))))

(declare-fun lt!57211 () ListLongMap!1595)

(assert (=> d!31205 (= res!54754 (contains!837 lt!57211 (_1!1224 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))))))

(declare-fun lt!57214 () List!1653)

(assert (=> d!31205 (= lt!57211 (ListLongMap!1596 lt!57214))))

(declare-fun lt!57212 () Unit!3421)

(declare-fun lt!57213 () Unit!3421)

(assert (=> d!31205 (= lt!57212 lt!57213)))

(assert (=> d!31205 (= (getValueByKey!157 lt!57214 (_1!1224 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))) (Some!162 (_2!1224 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31205 (= lt!57213 (lemmaContainsTupThenGetReturnValue!75 lt!57214 (_1!1224 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) (_2!1224 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31205 (= lt!57214 (insertStrictlySorted!77 (toList!813 lt!56803) (_1!1224 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) (_2!1224 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31205 (= (+!149 lt!56803 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) lt!57211)))

(declare-fun b!110752 () Bool)

(declare-fun res!54755 () Bool)

(assert (=> b!110752 (=> (not res!54755) (not e!72026))))

(assert (=> b!110752 (= res!54755 (= (getValueByKey!157 (toList!813 lt!57211) (_1!1224 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))) (Some!162 (_2!1224 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))))))))

(declare-fun b!110753 () Bool)

(assert (=> b!110753 (= e!72026 (contains!839 (toList!813 lt!57211) (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))))))

(assert (= (and d!31205 res!54754) b!110752))

(assert (= (and b!110752 res!54755) b!110753))

(declare-fun m!125931 () Bool)

(assert (=> d!31205 m!125931))

(declare-fun m!125933 () Bool)

(assert (=> d!31205 m!125933))

(declare-fun m!125935 () Bool)

(assert (=> d!31205 m!125935))

(declare-fun m!125937 () Bool)

(assert (=> d!31205 m!125937))

(declare-fun m!125939 () Bool)

(assert (=> b!110752 m!125939))

(declare-fun m!125941 () Bool)

(assert (=> b!110753 m!125941))

(assert (=> b!110237 d!31205))

(declare-fun d!31207 () Bool)

(assert (=> d!31207 (= (apply!100 (+!149 lt!56796 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) lt!56799) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56796 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))) lt!56799)))))

(declare-fun bs!4564 () Bool)

(assert (= bs!4564 d!31207))

(declare-fun m!125943 () Bool)

(assert (=> bs!4564 m!125943))

(assert (=> bs!4564 m!125943))

(declare-fun m!125945 () Bool)

(assert (=> bs!4564 m!125945))

(assert (=> b!110237 d!31207))

(declare-fun d!31209 () Bool)

(assert (=> d!31209 (= (apply!100 lt!56803 lt!56805) (get!1359 (getValueByKey!157 (toList!813 lt!56803) lt!56805)))))

(declare-fun bs!4565 () Bool)

(assert (= bs!4565 d!31209))

(declare-fun m!125947 () Bool)

(assert (=> bs!4565 m!125947))

(assert (=> bs!4565 m!125947))

(declare-fun m!125949 () Bool)

(assert (=> bs!4565 m!125949))

(assert (=> b!110237 d!31209))

(declare-fun d!31211 () Bool)

(assert (=> d!31211 (= (apply!100 (+!149 lt!56814 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) lt!56800) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56814 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))) lt!56800)))))

(declare-fun bs!4566 () Bool)

(assert (= bs!4566 d!31211))

(declare-fun m!125951 () Bool)

(assert (=> bs!4566 m!125951))

(assert (=> bs!4566 m!125951))

(declare-fun m!125953 () Bool)

(assert (=> bs!4566 m!125953))

(assert (=> b!110237 d!31211))

(declare-fun d!31213 () Bool)

(assert (=> d!31213 (= (apply!100 (+!149 lt!56796 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) lt!56799) (apply!100 lt!56796 lt!56799))))

(declare-fun lt!57215 () Unit!3421)

(assert (=> d!31213 (= lt!57215 (choose!699 lt!56796 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) lt!56799))))

(declare-fun e!72027 () Bool)

(assert (=> d!31213 e!72027))

(declare-fun res!54756 () Bool)

(assert (=> d!31213 (=> (not res!54756) (not e!72027))))

(assert (=> d!31213 (= res!54756 (contains!837 lt!56796 lt!56799))))

(assert (=> d!31213 (= (addApplyDifferent!76 lt!56796 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) lt!56799) lt!57215)))

(declare-fun b!110754 () Bool)

(assert (=> b!110754 (= e!72027 (not (= lt!56799 lt!56798)))))

(assert (= (and d!31213 res!54756) b!110754))

(assert (=> d!31213 m!124907))

(assert (=> d!31213 m!124929))

(assert (=> d!31213 m!124903))

(declare-fun m!125955 () Bool)

(assert (=> d!31213 m!125955))

(declare-fun m!125957 () Bool)

(assert (=> d!31213 m!125957))

(assert (=> d!31213 m!124907))

(assert (=> b!110237 d!31213))

(declare-fun d!31215 () Bool)

(assert (=> d!31215 (= (apply!100 lt!56814 lt!56800) (get!1359 (getValueByKey!157 (toList!813 lt!56814) lt!56800)))))

(declare-fun bs!4567 () Bool)

(assert (= bs!4567 d!31215))

(declare-fun m!125959 () Bool)

(assert (=> bs!4567 m!125959))

(assert (=> bs!4567 m!125959))

(declare-fun m!125961 () Bool)

(assert (=> bs!4567 m!125961))

(assert (=> b!110237 d!31215))

(declare-fun d!31217 () Bool)

(assert (=> d!31217 (= (apply!100 (+!149 lt!56814 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) lt!56800) (apply!100 lt!56814 lt!56800))))

(declare-fun lt!57216 () Unit!3421)

(assert (=> d!31217 (= lt!57216 (choose!699 lt!56814 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) lt!56800))))

(declare-fun e!72028 () Bool)

(assert (=> d!31217 e!72028))

(declare-fun res!54757 () Bool)

(assert (=> d!31217 (=> (not res!54757) (not e!72028))))

(assert (=> d!31217 (= res!54757 (contains!837 lt!56814 lt!56800))))

(assert (=> d!31217 (= (addApplyDifferent!76 lt!56814 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) lt!56800) lt!57216)))

(declare-fun b!110755 () Bool)

(assert (=> b!110755 (= e!72028 (not (= lt!56800 lt!56815)))))

(assert (= (and d!31217 res!54757) b!110755))

(assert (=> d!31217 m!124901))

(assert (=> d!31217 m!124927))

(assert (=> d!31217 m!124917))

(declare-fun m!125963 () Bool)

(assert (=> d!31217 m!125963))

(declare-fun m!125965 () Bool)

(assert (=> d!31217 m!125965))

(assert (=> d!31217 m!124901))

(assert (=> b!110237 d!31217))

(declare-fun d!31219 () Bool)

(assert (=> d!31219 (= (apply!100 lt!56796 lt!56799) (get!1359 (getValueByKey!157 (toList!813 lt!56796) lt!56799)))))

(declare-fun bs!4568 () Bool)

(assert (= bs!4568 d!31219))

(declare-fun m!125967 () Bool)

(assert (=> bs!4568 m!125967))

(assert (=> bs!4568 m!125967))

(declare-fun m!125969 () Bool)

(assert (=> bs!4568 m!125969))

(assert (=> b!110237 d!31219))

(declare-fun d!31221 () Bool)

(assert (=> d!31221 (= (apply!100 (+!149 lt!56803 (tuple2!2429 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) lt!56805) (apply!100 lt!56803 lt!56805))))

(declare-fun lt!57217 () Unit!3421)

(assert (=> d!31221 (= lt!57217 (choose!699 lt!56803 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) lt!56805))))

(declare-fun e!72029 () Bool)

(assert (=> d!31221 e!72029))

(declare-fun res!54758 () Bool)

(assert (=> d!31221 (=> (not res!54758) (not e!72029))))

(assert (=> d!31221 (= res!54758 (contains!837 lt!56803 lt!56805))))

(assert (=> d!31221 (= (addApplyDifferent!76 lt!56803 lt!56801 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) lt!56805) lt!57217)))

(declare-fun b!110756 () Bool)

(assert (=> b!110756 (= e!72029 (not (= lt!56805 lt!56801)))))

(assert (= (and d!31221 res!54758) b!110756))

(assert (=> d!31221 m!124909))

(assert (=> d!31221 m!124911))

(assert (=> d!31221 m!124899))

(declare-fun m!125971 () Bool)

(assert (=> d!31221 m!125971))

(declare-fun m!125973 () Bool)

(assert (=> d!31221 m!125973))

(assert (=> d!31221 m!124909))

(assert (=> b!110237 d!31221))

(declare-fun b!110757 () Bool)

(declare-fun e!72036 () Bool)

(declare-fun lt!57220 () ListLongMap!1595)

(assert (=> b!110757 (= e!72036 (isEmpty!381 lt!57220))))

(declare-fun call!11833 () ListLongMap!1595)

(declare-fun bm!11830 () Bool)

(assert (=> bm!11830 (= call!11833 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16)))))

(declare-fun b!110758 () Bool)

(declare-fun e!72034 () ListLongMap!1595)

(assert (=> b!110758 (= e!72034 (ListLongMap!1596 Nil!1650))))

(declare-fun b!110759 () Bool)

(declare-fun e!72030 () Bool)

(assert (=> b!110759 (= e!72030 e!72036)))

(declare-fun c!19671 () Bool)

(assert (=> b!110759 (= c!19671 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110760 () Bool)

(declare-fun e!72031 () Bool)

(assert (=> b!110760 (= e!72031 e!72030)))

(declare-fun c!19673 () Bool)

(declare-fun e!72033 () Bool)

(assert (=> b!110760 (= c!19673 e!72033)))

(declare-fun res!54761 () Bool)

(assert (=> b!110760 (=> (not res!54761) (not e!72033))))

(assert (=> b!110760 (= res!54761 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110761 () Bool)

(assert (=> b!110761 (= e!72033 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110761 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!110762 () Bool)

(declare-fun res!54760 () Bool)

(assert (=> b!110762 (=> (not res!54760) (not e!72031))))

(assert (=> b!110762 (= res!54760 (not (contains!837 lt!57220 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!31223 () Bool)

(assert (=> d!31223 e!72031))

(declare-fun res!54759 () Bool)

(assert (=> d!31223 (=> (not res!54759) (not e!72031))))

(assert (=> d!31223 (= res!54759 (not (contains!837 lt!57220 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31223 (= lt!57220 e!72034)))

(declare-fun c!19672 () Bool)

(assert (=> d!31223 (= c!19672 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31223 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31223 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57220)))

(declare-fun b!110763 () Bool)

(declare-fun lt!57219 () Unit!3421)

(declare-fun lt!57223 () Unit!3421)

(assert (=> b!110763 (= lt!57219 lt!57223)))

(declare-fun lt!57222 () (_ BitVec 64))

(declare-fun lt!57224 () V!3243)

(declare-fun lt!57221 () (_ BitVec 64))

(declare-fun lt!57218 () ListLongMap!1595)

(assert (=> b!110763 (not (contains!837 (+!149 lt!57218 (tuple2!2429 lt!57221 lt!57224)) lt!57222))))

(assert (=> b!110763 (= lt!57223 (addStillNotContains!50 lt!57218 lt!57221 lt!57224 lt!57222))))

(assert (=> b!110763 (= lt!57222 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110763 (= lt!57224 (get!1355 (select (arr!2081 (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110763 (= lt!57221 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110763 (= lt!57218 call!11833)))

(declare-fun e!72035 () ListLongMap!1595)

(assert (=> b!110763 (= e!72035 (+!149 call!11833 (tuple2!2429 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (get!1355 (select (arr!2081 (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110764 () Bool)

(assert (=> b!110764 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> b!110764 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))))))))

(declare-fun e!72032 () Bool)

(assert (=> b!110764 (= e!72032 (= (apply!100 lt!57220 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110765 () Bool)

(assert (=> b!110765 (= e!72034 e!72035)))

(declare-fun c!19670 () Bool)

(assert (=> b!110765 (= c!19670 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110766 () Bool)

(assert (=> b!110766 (= e!72030 e!72032)))

(assert (=> b!110766 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun res!54762 () Bool)

(assert (=> b!110766 (= res!54762 (contains!837 lt!57220 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110766 (=> (not res!54762) (not e!72032))))

(declare-fun b!110767 () Bool)

(assert (=> b!110767 (= e!72036 (= lt!57220 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19483 (ite c!19472 lt!56651 lt!56632) (extraKeys!2424 newMap!16)) (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)) (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16))))))

(declare-fun b!110768 () Bool)

(assert (=> b!110768 (= e!72035 call!11833)))

(assert (= (and d!31223 c!19672) b!110758))

(assert (= (and d!31223 (not c!19672)) b!110765))

(assert (= (and b!110765 c!19670) b!110763))

(assert (= (and b!110765 (not c!19670)) b!110768))

(assert (= (or b!110763 b!110768) bm!11830))

(assert (= (and d!31223 res!54759) b!110762))

(assert (= (and b!110762 res!54760) b!110760))

(assert (= (and b!110760 res!54761) b!110761))

(assert (= (and b!110760 c!19673) b!110766))

(assert (= (and b!110760 (not c!19673)) b!110759))

(assert (= (and b!110766 res!54762) b!110764))

(assert (= (and b!110759 c!19671) b!110767))

(assert (= (and b!110759 (not c!19671)) b!110757))

(declare-fun b_lambda!4987 () Bool)

(assert (=> (not b_lambda!4987) (not b!110763)))

(assert (=> b!110763 t!5810))

(declare-fun b_and!6837 () Bool)

(assert (= b_and!6833 (and (=> t!5810 result!3549) b_and!6837)))

(assert (=> b!110763 t!5812))

(declare-fun b_and!6839 () Bool)

(assert (= b_and!6835 (and (=> t!5812 result!3551) b_and!6839)))

(declare-fun b_lambda!4989 () Bool)

(assert (=> (not b_lambda!4989) (not b!110764)))

(assert (=> b!110764 t!5810))

(declare-fun b_and!6841 () Bool)

(assert (= b_and!6837 (and (=> t!5810 result!3549) b_and!6841)))

(assert (=> b!110764 t!5812))

(declare-fun b_and!6843 () Bool)

(assert (= b_and!6839 (and (=> t!5812 result!3551) b_and!6843)))

(declare-fun m!125975 () Bool)

(assert (=> d!31223 m!125975))

(assert (=> d!31223 m!124861))

(declare-fun m!125977 () Bool)

(assert (=> b!110757 m!125977))

(declare-fun m!125979 () Bool)

(assert (=> b!110763 m!125979))

(assert (=> b!110763 m!124937))

(assert (=> b!110763 m!125979))

(declare-fun m!125981 () Bool)

(assert (=> b!110763 m!125981))

(assert (=> b!110763 m!124939))

(declare-fun m!125983 () Bool)

(assert (=> b!110763 m!125983))

(assert (=> b!110763 m!124875))

(declare-fun m!125985 () Bool)

(assert (=> b!110763 m!125985))

(assert (=> b!110763 m!124939))

(assert (=> b!110763 m!124937))

(assert (=> b!110763 m!124941))

(declare-fun m!125987 () Bool)

(assert (=> bm!11830 m!125987))

(assert (=> b!110766 m!124875))

(assert (=> b!110766 m!124875))

(declare-fun m!125989 () Bool)

(assert (=> b!110766 m!125989))

(assert (=> b!110767 m!125987))

(assert (=> b!110764 m!124937))

(assert (=> b!110764 m!124875))

(assert (=> b!110764 m!124939))

(assert (=> b!110764 m!124937))

(assert (=> b!110764 m!124941))

(assert (=> b!110764 m!124875))

(declare-fun m!125991 () Bool)

(assert (=> b!110764 m!125991))

(assert (=> b!110764 m!124939))

(assert (=> b!110765 m!124875))

(assert (=> b!110765 m!124875))

(assert (=> b!110765 m!124877))

(assert (=> b!110761 m!124875))

(assert (=> b!110761 m!124875))

(assert (=> b!110761 m!124877))

(declare-fun m!125993 () Bool)

(assert (=> b!110762 m!125993))

(assert (=> b!110237 d!31223))

(declare-fun d!31225 () Bool)

(declare-fun e!72037 () Bool)

(assert (=> d!31225 e!72037))

(declare-fun res!54763 () Bool)

(assert (=> d!31225 (=> (not res!54763) (not e!72037))))

(declare-fun lt!57225 () ListLongMap!1595)

(assert (=> d!31225 (= res!54763 (contains!837 lt!57225 (_1!1224 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))))))

(declare-fun lt!57228 () List!1653)

(assert (=> d!31225 (= lt!57225 (ListLongMap!1596 lt!57228))))

(declare-fun lt!57226 () Unit!3421)

(declare-fun lt!57227 () Unit!3421)

(assert (=> d!31225 (= lt!57226 lt!57227)))

(assert (=> d!31225 (= (getValueByKey!157 lt!57228 (_1!1224 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))) (Some!162 (_2!1224 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31225 (= lt!57227 (lemmaContainsTupThenGetReturnValue!75 lt!57228 (_1!1224 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) (_2!1224 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31225 (= lt!57228 (insertStrictlySorted!77 (toList!813 lt!56802) (_1!1224 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) (_2!1224 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31225 (= (+!149 lt!56802 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))) lt!57225)))

(declare-fun b!110769 () Bool)

(declare-fun res!54764 () Bool)

(assert (=> b!110769 (=> (not res!54764) (not e!72037))))

(assert (=> b!110769 (= res!54764 (= (getValueByKey!157 (toList!813 lt!57225) (_1!1224 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))))) (Some!162 (_2!1224 (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))))))))

(declare-fun b!110770 () Bool)

(assert (=> b!110770 (= e!72037 (contains!839 (toList!813 lt!57225) (tuple2!2429 lt!56806 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16)))))))

(assert (= (and d!31225 res!54763) b!110769))

(assert (= (and b!110769 res!54764) b!110770))

(declare-fun m!125995 () Bool)

(assert (=> d!31225 m!125995))

(declare-fun m!125997 () Bool)

(assert (=> d!31225 m!125997))

(declare-fun m!125999 () Bool)

(assert (=> d!31225 m!125999))

(declare-fun m!126001 () Bool)

(assert (=> d!31225 m!126001))

(declare-fun m!126003 () Bool)

(assert (=> b!110769 m!126003))

(declare-fun m!126005 () Bool)

(assert (=> b!110770 m!126005))

(assert (=> b!110237 d!31225))

(declare-fun d!31227 () Bool)

(declare-fun e!72038 () Bool)

(assert (=> d!31227 e!72038))

(declare-fun res!54765 () Bool)

(assert (=> d!31227 (=> (not res!54765) (not e!72038))))

(declare-fun lt!57229 () ListLongMap!1595)

(assert (=> d!31227 (= res!54765 (contains!837 lt!57229 (_1!1224 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(declare-fun lt!57232 () List!1653)

(assert (=> d!31227 (= lt!57229 (ListLongMap!1596 lt!57232))))

(declare-fun lt!57230 () Unit!3421)

(declare-fun lt!57231 () Unit!3421)

(assert (=> d!31227 (= lt!57230 lt!57231)))

(assert (=> d!31227 (= (getValueByKey!157 lt!57232 (_1!1224 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))) (Some!162 (_2!1224 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(assert (=> d!31227 (= lt!57231 (lemmaContainsTupThenGetReturnValue!75 lt!57232 (_1!1224 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) (_2!1224 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(assert (=> d!31227 (= lt!57232 (insertStrictlySorted!77 (toList!813 lt!56814) (_1!1224 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) (_2!1224 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(assert (=> d!31227 (= (+!149 lt!56814 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) lt!57229)))

(declare-fun b!110771 () Bool)

(declare-fun res!54766 () Bool)

(assert (=> b!110771 (=> (not res!54766) (not e!72038))))

(assert (=> b!110771 (= res!54766 (= (getValueByKey!157 (toList!813 lt!57229) (_1!1224 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))) (Some!162 (_2!1224 (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))))))

(declare-fun b!110772 () Bool)

(assert (=> b!110772 (= e!72038 (contains!839 (toList!813 lt!57229) (tuple2!2429 lt!56815 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))))

(assert (= (and d!31227 res!54765) b!110771))

(assert (= (and b!110771 res!54766) b!110772))

(declare-fun m!126007 () Bool)

(assert (=> d!31227 m!126007))

(declare-fun m!126009 () Bool)

(assert (=> d!31227 m!126009))

(declare-fun m!126011 () Bool)

(assert (=> d!31227 m!126011))

(declare-fun m!126013 () Bool)

(assert (=> d!31227 m!126013))

(declare-fun m!126015 () Bool)

(assert (=> b!110771 m!126015))

(declare-fun m!126017 () Bool)

(assert (=> b!110772 m!126017))

(assert (=> b!110237 d!31227))

(declare-fun d!31229 () Bool)

(declare-fun e!72039 () Bool)

(assert (=> d!31229 e!72039))

(declare-fun res!54767 () Bool)

(assert (=> d!31229 (=> (not res!54767) (not e!72039))))

(declare-fun lt!57233 () ListLongMap!1595)

(assert (=> d!31229 (= res!54767 (contains!837 lt!57233 (_1!1224 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(declare-fun lt!57236 () List!1653)

(assert (=> d!31229 (= lt!57233 (ListLongMap!1596 lt!57236))))

(declare-fun lt!57234 () Unit!3421)

(declare-fun lt!57235 () Unit!3421)

(assert (=> d!31229 (= lt!57234 lt!57235)))

(assert (=> d!31229 (= (getValueByKey!157 lt!57236 (_1!1224 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))) (Some!162 (_2!1224 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(assert (=> d!31229 (= lt!57235 (lemmaContainsTupThenGetReturnValue!75 lt!57236 (_1!1224 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) (_2!1224 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(assert (=> d!31229 (= lt!57236 (insertStrictlySorted!77 (toList!813 lt!56796) (_1!1224 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) (_2!1224 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(assert (=> d!31229 (= (+!149 lt!56796 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) lt!57233)))

(declare-fun b!110773 () Bool)

(declare-fun res!54768 () Bool)

(assert (=> b!110773 (=> (not res!54768) (not e!72039))))

(assert (=> b!110773 (= res!54768 (= (getValueByKey!157 (toList!813 lt!57233) (_1!1224 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))) (Some!162 (_2!1224 (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))))))

(declare-fun b!110774 () Bool)

(assert (=> b!110774 (= e!72039 (contains!839 (toList!813 lt!57233) (tuple2!2429 lt!56798 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))))

(assert (= (and d!31229 res!54767) b!110773))

(assert (= (and b!110773 res!54768) b!110774))

(declare-fun m!126019 () Bool)

(assert (=> d!31229 m!126019))

(declare-fun m!126021 () Bool)

(assert (=> d!31229 m!126021))

(declare-fun m!126023 () Bool)

(assert (=> d!31229 m!126023))

(declare-fun m!126025 () Bool)

(assert (=> d!31229 m!126025))

(declare-fun m!126027 () Bool)

(assert (=> b!110773 m!126027))

(declare-fun m!126029 () Bool)

(assert (=> b!110774 m!126029))

(assert (=> b!110237 d!31229))

(declare-fun d!31231 () Bool)

(assert (=> d!31231 (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57237 () Unit!3421)

(assert (=> d!31231 (= lt!57237 (choose!702 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72040 () Bool)

(assert (=> d!31231 e!72040))

(declare-fun res!54769 () Bool)

(assert (=> d!31231 (=> (not res!54769) (not e!72040))))

(assert (=> d!31231 (= res!54769 (isStrictlySorted!306 (toList!813 lt!56753)))))

(assert (=> d!31231 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000) lt!57237)))

(declare-fun b!110775 () Bool)

(assert (=> b!110775 (= e!72040 (containsKey!161 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31231 res!54769) b!110775))

(assert (=> d!31231 m!124967))

(assert (=> d!31231 m!124967))

(assert (=> d!31231 m!124969))

(declare-fun m!126031 () Bool)

(assert (=> d!31231 m!126031))

(declare-fun m!126033 () Bool)

(assert (=> d!31231 m!126033))

(assert (=> b!110775 m!124963))

(assert (=> b!110263 d!31231))

(declare-fun d!31233 () Bool)

(assert (=> d!31233 (= (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!382 (getValueByKey!157 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4569 () Bool)

(assert (= bs!4569 d!31233))

(assert (=> bs!4569 m!124967))

(declare-fun m!126035 () Bool)

(assert (=> bs!4569 m!126035))

(assert (=> b!110263 d!31233))

(declare-fun b!110778 () Bool)

(declare-fun e!72042 () Option!163)

(assert (=> b!110778 (= e!72042 (getValueByKey!157 (t!5802 (toList!813 lt!56753)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31235 () Bool)

(declare-fun c!19674 () Bool)

(assert (=> d!31235 (= c!19674 (and ((_ is Cons!1649) (toList!813 lt!56753)) (= (_1!1224 (h!2248 (toList!813 lt!56753))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!72041 () Option!163)

(assert (=> d!31235 (= (getValueByKey!157 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000) e!72041)))

(declare-fun b!110779 () Bool)

(assert (=> b!110779 (= e!72042 None!161)))

(declare-fun b!110777 () Bool)

(assert (=> b!110777 (= e!72041 e!72042)))

(declare-fun c!19675 () Bool)

(assert (=> b!110777 (= c!19675 (and ((_ is Cons!1649) (toList!813 lt!56753)) (not (= (_1!1224 (h!2248 (toList!813 lt!56753))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110776 () Bool)

(assert (=> b!110776 (= e!72041 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56753)))))))

(assert (= (and d!31235 c!19674) b!110776))

(assert (= (and d!31235 (not c!19674)) b!110777))

(assert (= (and b!110777 c!19675) b!110778))

(assert (= (and b!110777 (not c!19675)) b!110779))

(declare-fun m!126037 () Bool)

(assert (=> b!110778 m!126037))

(assert (=> b!110263 d!31235))

(assert (=> d!31045 d!31037))

(assert (=> d!31045 d!31043))

(declare-fun d!31237 () Bool)

(assert (=> d!31237 (= (apply!100 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56755) (apply!100 lt!56752 lt!56755))))

(assert (=> d!31237 true))

(declare-fun _$34!903 () Unit!3421)

(assert (=> d!31237 (= (choose!699 lt!56752 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56755) _$34!903)))

(declare-fun bs!4570 () Bool)

(assert (= bs!4570 d!31237))

(assert (=> bs!4570 m!124799))

(assert (=> bs!4570 m!124799))

(assert (=> bs!4570 m!124821))

(assert (=> bs!4570 m!124797))

(assert (=> d!31045 d!31237))

(assert (=> d!31045 d!31031))

(declare-fun d!31239 () Bool)

(declare-fun e!72043 () Bool)

(assert (=> d!31239 e!72043))

(declare-fun res!54770 () Bool)

(assert (=> d!31239 (=> res!54770 e!72043)))

(declare-fun lt!57241 () Bool)

(assert (=> d!31239 (= res!54770 (not lt!57241))))

(declare-fun lt!57238 () Bool)

(assert (=> d!31239 (= lt!57241 lt!57238)))

(declare-fun lt!57240 () Unit!3421)

(declare-fun e!72044 () Unit!3421)

(assert (=> d!31239 (= lt!57240 e!72044)))

(declare-fun c!19676 () Bool)

(assert (=> d!31239 (= c!19676 lt!57238)))

(assert (=> d!31239 (= lt!57238 (containsKey!161 (toList!813 lt!56752) lt!56755))))

(assert (=> d!31239 (= (contains!837 lt!56752 lt!56755) lt!57241)))

(declare-fun b!110781 () Bool)

(declare-fun lt!57239 () Unit!3421)

(assert (=> b!110781 (= e!72044 lt!57239)))

(assert (=> b!110781 (= lt!57239 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56752) lt!56755))))

(assert (=> b!110781 (isDefined!111 (getValueByKey!157 (toList!813 lt!56752) lt!56755))))

(declare-fun b!110782 () Bool)

(declare-fun Unit!3456 () Unit!3421)

(assert (=> b!110782 (= e!72044 Unit!3456)))

(declare-fun b!110783 () Bool)

(assert (=> b!110783 (= e!72043 (isDefined!111 (getValueByKey!157 (toList!813 lt!56752) lt!56755)))))

(assert (= (and d!31239 c!19676) b!110781))

(assert (= (and d!31239 (not c!19676)) b!110782))

(assert (= (and d!31239 (not res!54770)) b!110783))

(declare-fun m!126039 () Bool)

(assert (=> d!31239 m!126039))

(declare-fun m!126041 () Bool)

(assert (=> b!110781 m!126041))

(assert (=> b!110781 m!125347))

(assert (=> b!110781 m!125347))

(declare-fun m!126043 () Bool)

(assert (=> b!110781 m!126043))

(assert (=> b!110783 m!125347))

(assert (=> b!110783 m!125347))

(assert (=> b!110783 m!126043))

(assert (=> d!31045 d!31239))

(declare-fun d!31241 () Bool)

(assert (=> d!31241 (= ($colon$colon!82 e!71806 (ite c!19581 (h!2248 (toList!813 (+!149 lt!56522 lt!56528))) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517)))) (Cons!1649 (ite c!19581 (h!2248 (toList!813 (+!149 lt!56522 lt!56528))) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))) e!71806))))

(assert (=> bm!11780 d!31241))

(declare-fun b!110786 () Bool)

(declare-fun e!72046 () Option!163)

(assert (=> b!110786 (= e!72046 (getValueByKey!157 (t!5802 (t!5802 lt!56698)) (_1!1224 lt!56528)))))

(declare-fun d!31243 () Bool)

(declare-fun c!19677 () Bool)

(assert (=> d!31243 (= c!19677 (and ((_ is Cons!1649) (t!5802 lt!56698)) (= (_1!1224 (h!2248 (t!5802 lt!56698))) (_1!1224 lt!56528))))))

(declare-fun e!72045 () Option!163)

(assert (=> d!31243 (= (getValueByKey!157 (t!5802 lt!56698) (_1!1224 lt!56528)) e!72045)))

(declare-fun b!110787 () Bool)

(assert (=> b!110787 (= e!72046 None!161)))

(declare-fun b!110785 () Bool)

(assert (=> b!110785 (= e!72045 e!72046)))

(declare-fun c!19678 () Bool)

(assert (=> b!110785 (= c!19678 (and ((_ is Cons!1649) (t!5802 lt!56698)) (not (= (_1!1224 (h!2248 (t!5802 lt!56698))) (_1!1224 lt!56528)))))))

(declare-fun b!110784 () Bool)

(assert (=> b!110784 (= e!72045 (Some!162 (_2!1224 (h!2248 (t!5802 lt!56698)))))))

(assert (= (and d!31243 c!19677) b!110784))

(assert (= (and d!31243 (not c!19677)) b!110785))

(assert (= (and b!110785 c!19678) b!110786))

(assert (= (and b!110785 (not c!19678)) b!110787))

(declare-fun m!126045 () Bool)

(assert (=> b!110786 m!126045))

(assert (=> b!110426 d!31243))

(declare-fun d!31245 () Bool)

(declare-fun e!72047 () Bool)

(assert (=> d!31245 e!72047))

(declare-fun res!54771 () Bool)

(assert (=> d!31245 (=> (not res!54771) (not e!72047))))

(declare-fun lt!57242 () ListLongMap!1595)

(assert (=> d!31245 (= res!54771 (contains!837 lt!57242 (_1!1224 (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(declare-fun lt!57245 () List!1653)

(assert (=> d!31245 (= lt!57242 (ListLongMap!1596 lt!57245))))

(declare-fun lt!57243 () Unit!3421)

(declare-fun lt!57244 () Unit!3421)

(assert (=> d!31245 (= lt!57243 lt!57244)))

(assert (=> d!31245 (= (getValueByKey!157 lt!57245 (_1!1224 (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))) (Some!162 (_2!1224 (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31245 (= lt!57244 (lemmaContainsTupThenGetReturnValue!75 lt!57245 (_1!1224 (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (_2!1224 (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31245 (= lt!57245 (insertStrictlySorted!77 (toList!813 (ite c!19568 call!11777 (ite c!19572 call!11778 call!11779))) (_1!1224 (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (_2!1224 (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31245 (= (+!149 (ite c!19568 call!11777 (ite c!19572 call!11778 call!11779)) (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) lt!57242)))

(declare-fun b!110788 () Bool)

(declare-fun res!54772 () Bool)

(assert (=> b!110788 (=> (not res!54772) (not e!72047))))

(assert (=> b!110788 (= res!54772 (= (getValueByKey!157 (toList!813 lt!57242) (_1!1224 (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))) (Some!162 (_2!1224 (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))))

(declare-fun b!110789 () Bool)

(assert (=> b!110789 (= e!72047 (contains!839 (toList!813 lt!57242) (ite (or c!19568 c!19572) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (= (and d!31245 res!54771) b!110788))

(assert (= (and b!110788 res!54772) b!110789))

(declare-fun m!126047 () Bool)

(assert (=> d!31245 m!126047))

(declare-fun m!126049 () Bool)

(assert (=> d!31245 m!126049))

(declare-fun m!126051 () Bool)

(assert (=> d!31245 m!126051))

(declare-fun m!126053 () Bool)

(assert (=> d!31245 m!126053))

(declare-fun m!126055 () Bool)

(assert (=> b!110788 m!126055))

(declare-fun m!126057 () Bool)

(assert (=> b!110789 m!126057))

(assert (=> bm!11774 d!31245))

(declare-fun d!31247 () Bool)

(declare-fun e!72048 () Bool)

(assert (=> d!31247 e!72048))

(declare-fun res!54773 () Bool)

(assert (=> d!31247 (=> (not res!54773) (not e!72048))))

(declare-fun lt!57246 () ListLongMap!1595)

(assert (=> d!31247 (= res!54773 (contains!837 lt!57246 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(declare-fun lt!57249 () List!1653)

(assert (=> d!31247 (= lt!57246 (ListLongMap!1596 lt!57249))))

(declare-fun lt!57247 () Unit!3421)

(declare-fun lt!57248 () Unit!3421)

(assert (=> d!31247 (= lt!57247 lt!57248)))

(assert (=> d!31247 (= (getValueByKey!157 lt!57249 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))) (Some!162 (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(assert (=> d!31247 (= lt!57248 (lemmaContainsTupThenGetReturnValue!75 lt!57249 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(assert (=> d!31247 (= lt!57249 (insertStrictlySorted!77 (toList!813 call!11764) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(assert (=> d!31247 (= (+!149 call!11764 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))) lt!57246)))

(declare-fun b!110790 () Bool)

(declare-fun res!54774 () Bool)

(assert (=> b!110790 (=> (not res!54774) (not e!72048))))

(assert (=> b!110790 (= res!54774 (= (getValueByKey!157 (toList!813 lt!57246) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))) (Some!162 (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))))))

(declare-fun b!110791 () Bool)

(assert (=> b!110791 (= e!72048 (contains!839 (toList!813 lt!57246) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))))

(assert (= (and d!31247 res!54773) b!110790))

(assert (= (and b!110790 res!54774) b!110791))

(declare-fun m!126059 () Bool)

(assert (=> d!31247 m!126059))

(declare-fun m!126061 () Bool)

(assert (=> d!31247 m!126061))

(declare-fun m!126063 () Bool)

(assert (=> d!31247 m!126063))

(declare-fun m!126065 () Bool)

(assert (=> d!31247 m!126065))

(declare-fun m!126067 () Bool)

(assert (=> b!110790 m!126067))

(declare-fun m!126069 () Bool)

(assert (=> b!110791 m!126069))

(assert (=> b!110224 d!31247))

(declare-fun b!110792 () Bool)

(declare-fun e!72051 () Bool)

(declare-fun call!11834 () Bool)

(assert (=> b!110792 (= e!72051 call!11834)))

(declare-fun b!110793 () Bool)

(declare-fun e!72050 () Bool)

(assert (=> b!110793 (= e!72050 e!72051)))

(declare-fun lt!57252 () (_ BitVec 64))

(assert (=> b!110793 (= lt!57252 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!57250 () Unit!3421)

(assert (=> b!110793 (= lt!57250 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) lt!57252 #b00000000000000000000000000000000))))

(assert (=> b!110793 (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) lt!57252 #b00000000000000000000000000000000)))

(declare-fun lt!57251 () Unit!3421)

(assert (=> b!110793 (= lt!57251 lt!57250)))

(declare-fun res!54776 () Bool)

(assert (=> b!110793 (= res!54776 (= (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b00000000000000000000000000000000) (_keys!4341 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992)))) (Found!271 #b00000000000000000000000000000000)))))

(assert (=> b!110793 (=> (not res!54776) (not e!72051))))

(declare-fun bm!11831 () Bool)

(assert (=> bm!11831 (= call!11834 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4341 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!110794 () Bool)

(declare-fun e!72049 () Bool)

(assert (=> b!110794 (= e!72049 e!72050)))

(declare-fun c!19679 () Bool)

(assert (=> b!110794 (= c!19679 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!31249 () Bool)

(declare-fun res!54775 () Bool)

(assert (=> d!31249 (=> res!54775 e!72049)))

(assert (=> d!31249 (= res!54775 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> d!31249 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992)))) e!72049)))

(declare-fun b!110795 () Bool)

(assert (=> b!110795 (= e!72050 call!11834)))

(assert (= (and d!31249 (not res!54775)) b!110794))

(assert (= (and b!110794 c!19679) b!110793))

(assert (= (and b!110794 (not c!19679)) b!110795))

(assert (= (and b!110793 res!54776) b!110792))

(assert (= (or b!110792 b!110795) bm!11831))

(declare-fun m!126071 () Bool)

(assert (=> b!110793 m!126071))

(declare-fun m!126073 () Bool)

(assert (=> b!110793 m!126073))

(declare-fun m!126075 () Bool)

(assert (=> b!110793 m!126075))

(assert (=> b!110793 m!126071))

(declare-fun m!126077 () Bool)

(assert (=> b!110793 m!126077))

(declare-fun m!126079 () Bool)

(assert (=> bm!11831 m!126079))

(assert (=> b!110794 m!126071))

(assert (=> b!110794 m!126071))

(declare-fun m!126081 () Bool)

(assert (=> b!110794 m!126081))

(assert (=> b!110504 d!31249))

(assert (=> d!31041 d!31025))

(declare-fun d!31251 () Bool)

(declare-fun e!72052 () Bool)

(assert (=> d!31251 e!72052))

(declare-fun res!54777 () Bool)

(assert (=> d!31251 (=> res!54777 e!72052)))

(declare-fun lt!57256 () Bool)

(assert (=> d!31251 (= res!54777 (not lt!57256))))

(declare-fun lt!57253 () Bool)

(assert (=> d!31251 (= lt!57256 lt!57253)))

(declare-fun lt!57255 () Unit!3421)

(declare-fun e!72053 () Unit!3421)

(assert (=> d!31251 (= lt!57255 e!72053)))

(declare-fun c!19680 () Bool)

(assert (=> d!31251 (= c!19680 lt!57253)))

(assert (=> d!31251 (= lt!57253 (containsKey!161 (toList!813 lt!56759) lt!56761))))

(assert (=> d!31251 (= (contains!837 lt!56759 lt!56761) lt!57256)))

(declare-fun b!110796 () Bool)

(declare-fun lt!57254 () Unit!3421)

(assert (=> b!110796 (= e!72053 lt!57254)))

(assert (=> b!110796 (= lt!57254 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56759) lt!56761))))

(assert (=> b!110796 (isDefined!111 (getValueByKey!157 (toList!813 lt!56759) lt!56761))))

(declare-fun b!110797 () Bool)

(declare-fun Unit!3457 () Unit!3421)

(assert (=> b!110797 (= e!72053 Unit!3457)))

(declare-fun b!110798 () Bool)

(assert (=> b!110798 (= e!72052 (isDefined!111 (getValueByKey!157 (toList!813 lt!56759) lt!56761)))))

(assert (= (and d!31251 c!19680) b!110796))

(assert (= (and d!31251 (not c!19680)) b!110797))

(assert (= (and d!31251 (not res!54777)) b!110798))

(declare-fun m!126083 () Bool)

(assert (=> d!31251 m!126083))

(declare-fun m!126085 () Bool)

(assert (=> b!110796 m!126085))

(assert (=> b!110796 m!125323))

(assert (=> b!110796 m!125323))

(declare-fun m!126087 () Bool)

(assert (=> b!110796 m!126087))

(assert (=> b!110798 m!125323))

(assert (=> b!110798 m!125323))

(assert (=> b!110798 m!126087))

(assert (=> d!31041 d!31251))

(assert (=> d!31041 d!31027))

(declare-fun d!31253 () Bool)

(assert (=> d!31253 (= (apply!100 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56761) (apply!100 lt!56759 lt!56761))))

(assert (=> d!31253 true))

(declare-fun _$34!904 () Unit!3421)

(assert (=> d!31253 (= (choose!699 lt!56759 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56761) _$34!904)))

(declare-fun bs!4571 () Bool)

(assert (= bs!4571 d!31253))

(assert (=> bs!4571 m!124801))

(assert (=> bs!4571 m!124801))

(assert (=> bs!4571 m!124803))

(assert (=> bs!4571 m!124793))

(assert (=> d!31041 d!31253))

(assert (=> d!31041 d!31049))

(assert (=> d!30957 d!31171))

(declare-fun d!31255 () Bool)

(declare-fun e!72054 () Bool)

(assert (=> d!31255 e!72054))

(declare-fun res!54778 () Bool)

(assert (=> d!31255 (=> res!54778 e!72054)))

(declare-fun lt!57260 () Bool)

(assert (=> d!31255 (= res!54778 (not lt!57260))))

(declare-fun lt!57257 () Bool)

(assert (=> d!31255 (= lt!57260 lt!57257)))

(declare-fun lt!57259 () Unit!3421)

(declare-fun e!72055 () Unit!3421)

(assert (=> d!31255 (= lt!57259 e!72055)))

(declare-fun c!19681 () Bool)

(assert (=> d!31255 (= c!19681 lt!57257)))

(assert (=> d!31255 (= lt!57257 (containsKey!161 (toList!813 lt!56901) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31255 (= (contains!837 lt!56901 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) lt!57260)))

(declare-fun b!110799 () Bool)

(declare-fun lt!57258 () Unit!3421)

(assert (=> b!110799 (= e!72055 lt!57258)))

(assert (=> b!110799 (= lt!57258 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56901) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> b!110799 (isDefined!111 (getValueByKey!157 (toList!813 lt!56901) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!110800 () Bool)

(declare-fun Unit!3458 () Unit!3421)

(assert (=> b!110800 (= e!72055 Unit!3458)))

(declare-fun b!110801 () Bool)

(assert (=> b!110801 (= e!72054 (isDefined!111 (getValueByKey!157 (toList!813 lt!56901) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (= (and d!31255 c!19681) b!110799))

(assert (= (and d!31255 (not c!19681)) b!110800))

(assert (= (and d!31255 (not res!54778)) b!110801))

(declare-fun m!126089 () Bool)

(assert (=> d!31255 m!126089))

(declare-fun m!126091 () Bool)

(assert (=> b!110799 m!126091))

(assert (=> b!110799 m!125173))

(assert (=> b!110799 m!125173))

(declare-fun m!126093 () Bool)

(assert (=> b!110799 m!126093))

(assert (=> b!110801 m!125173))

(assert (=> b!110801 m!125173))

(assert (=> b!110801 m!126093))

(assert (=> d!30985 d!31255))

(declare-fun b!110804 () Bool)

(declare-fun e!72057 () Option!163)

(assert (=> b!110804 (= e!72057 (getValueByKey!157 (t!5802 lt!56904) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun c!19682 () Bool)

(declare-fun d!31257 () Bool)

(assert (=> d!31257 (= c!19682 (and ((_ is Cons!1649) lt!56904) (= (_1!1224 (h!2248 lt!56904)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun e!72056 () Option!163)

(assert (=> d!31257 (= (getValueByKey!157 lt!56904 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) e!72056)))

(declare-fun b!110805 () Bool)

(assert (=> b!110805 (= e!72057 None!161)))

(declare-fun b!110803 () Bool)

(assert (=> b!110803 (= e!72056 e!72057)))

(declare-fun c!19683 () Bool)

(assert (=> b!110803 (= c!19683 (and ((_ is Cons!1649) lt!56904) (not (= (_1!1224 (h!2248 lt!56904)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun b!110802 () Bool)

(assert (=> b!110802 (= e!72056 (Some!162 (_2!1224 (h!2248 lt!56904))))))

(assert (= (and d!31257 c!19682) b!110802))

(assert (= (and d!31257 (not c!19682)) b!110803))

(assert (= (and b!110803 c!19683) b!110804))

(assert (= (and b!110803 (not c!19683)) b!110805))

(declare-fun m!126095 () Bool)

(assert (=> b!110804 m!126095))

(assert (=> d!30985 d!31257))

(declare-fun d!31259 () Bool)

(assert (=> d!31259 (= (getValueByKey!157 lt!56904 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun lt!57261 () Unit!3421)

(assert (=> d!31259 (= lt!57261 (choose!693 lt!56904 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun e!72058 () Bool)

(assert (=> d!31259 e!72058))

(declare-fun res!54779 () Bool)

(assert (=> d!31259 (=> (not res!54779) (not e!72058))))

(assert (=> d!31259 (= res!54779 (isStrictlySorted!306 lt!56904))))

(assert (=> d!31259 (= (lemmaContainsTupThenGetReturnValue!75 lt!56904 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) lt!57261)))

(declare-fun b!110806 () Bool)

(declare-fun res!54780 () Bool)

(assert (=> b!110806 (=> (not res!54780) (not e!72058))))

(assert (=> b!110806 (= res!54780 (containsKey!161 lt!56904 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!110807 () Bool)

(assert (=> b!110807 (= e!72058 (contains!839 lt!56904 (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (= (and d!31259 res!54779) b!110806))

(assert (= (and b!110806 res!54780) b!110807))

(assert (=> d!31259 m!125167))

(declare-fun m!126097 () Bool)

(assert (=> d!31259 m!126097))

(declare-fun m!126099 () Bool)

(assert (=> d!31259 m!126099))

(declare-fun m!126101 () Bool)

(assert (=> b!110806 m!126101))

(declare-fun m!126103 () Bool)

(assert (=> b!110807 m!126103))

(assert (=> d!30985 d!31259))

(declare-fun c!19684 () Bool)

(declare-fun e!72061 () List!1653)

(declare-fun b!110808 () Bool)

(declare-fun c!19685 () Bool)

(assert (=> b!110808 (= e!72061 (ite c!19684 (t!5802 (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (ite c!19685 (Cons!1649 (h!2248 (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (t!5802 (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) Nil!1650)))))

(declare-fun b!110809 () Bool)

(declare-fun e!72063 () List!1653)

(declare-fun call!11837 () List!1653)

(assert (=> b!110809 (= e!72063 call!11837)))

(declare-fun c!19687 () Bool)

(declare-fun bm!11832 () Bool)

(declare-fun call!11835 () List!1653)

(assert (=> bm!11832 (= call!11835 ($colon$colon!82 e!72061 (ite c!19687 (h!2248 (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun c!19686 () Bool)

(assert (=> bm!11832 (= c!19686 c!19687)))

(declare-fun b!110810 () Bool)

(declare-fun e!72059 () List!1653)

(assert (=> b!110810 (= e!72059 e!72063)))

(assert (=> b!110810 (= c!19684 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!110811 () Bool)

(assert (=> b!110811 (= e!72061 (insertStrictlySorted!77 (t!5802 (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun bm!11833 () Bool)

(declare-fun call!11836 () List!1653)

(assert (=> bm!11833 (= call!11836 call!11837)))

(declare-fun d!31261 () Bool)

(declare-fun e!72062 () Bool)

(assert (=> d!31261 e!72062))

(declare-fun res!54782 () Bool)

(assert (=> d!31261 (=> (not res!54782) (not e!72062))))

(declare-fun lt!57262 () List!1653)

(assert (=> d!31261 (= res!54782 (isStrictlySorted!306 lt!57262))))

(assert (=> d!31261 (= lt!57262 e!72059)))

(assert (=> d!31261 (= c!19687 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (bvslt (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (=> d!31261 (isStrictlySorted!306 (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31261 (= (insertStrictlySorted!77 (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) lt!57262)))

(declare-fun b!110812 () Bool)

(declare-fun res!54781 () Bool)

(assert (=> b!110812 (=> (not res!54781) (not e!72062))))

(assert (=> b!110812 (= res!54781 (containsKey!161 lt!57262 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!110813 () Bool)

(declare-fun e!72060 () List!1653)

(assert (=> b!110813 (= e!72060 call!11836)))

(declare-fun b!110814 () Bool)

(assert (=> b!110814 (= e!72060 call!11836)))

(declare-fun b!110815 () Bool)

(assert (=> b!110815 (= e!72062 (contains!839 lt!57262 (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!110816 () Bool)

(assert (=> b!110816 (= e!72059 call!11835)))

(declare-fun bm!11834 () Bool)

(assert (=> bm!11834 (= call!11837 call!11835)))

(declare-fun b!110817 () Bool)

(assert (=> b!110817 (= c!19685 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (bvsgt (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (=> b!110817 (= e!72063 e!72060)))

(assert (= (and d!31261 c!19687) b!110816))

(assert (= (and d!31261 (not c!19687)) b!110810))

(assert (= (and b!110810 c!19684) b!110809))

(assert (= (and b!110810 (not c!19684)) b!110817))

(assert (= (and b!110817 c!19685) b!110813))

(assert (= (and b!110817 (not c!19685)) b!110814))

(assert (= (or b!110813 b!110814) bm!11833))

(assert (= (or b!110809 bm!11833) bm!11834))

(assert (= (or b!110816 bm!11834) bm!11832))

(assert (= (and bm!11832 c!19686) b!110811))

(assert (= (and bm!11832 (not c!19686)) b!110808))

(assert (= (and d!31261 res!54782) b!110812))

(assert (= (and b!110812 res!54781) b!110815))

(declare-fun m!126105 () Bool)

(assert (=> d!31261 m!126105))

(declare-fun m!126107 () Bool)

(assert (=> d!31261 m!126107))

(declare-fun m!126109 () Bool)

(assert (=> bm!11832 m!126109))

(declare-fun m!126111 () Bool)

(assert (=> b!110815 m!126111))

(declare-fun m!126113 () Bool)

(assert (=> b!110811 m!126113))

(declare-fun m!126115 () Bool)

(assert (=> b!110812 m!126115))

(assert (=> d!30985 d!31261))

(declare-fun d!31263 () Bool)

(declare-fun res!54783 () Bool)

(declare-fun e!72064 () Bool)

(assert (=> d!31263 (=> res!54783 e!72064)))

(assert (=> d!31263 (= res!54783 (and ((_ is Cons!1649) (toList!813 lt!56695)) (= (_1!1224 (h!2248 (toList!813 lt!56695))) (_1!1224 lt!56528))))))

(assert (=> d!31263 (= (containsKey!161 (toList!813 lt!56695) (_1!1224 lt!56528)) e!72064)))

(declare-fun b!110818 () Bool)

(declare-fun e!72065 () Bool)

(assert (=> b!110818 (= e!72064 e!72065)))

(declare-fun res!54784 () Bool)

(assert (=> b!110818 (=> (not res!54784) (not e!72065))))

(assert (=> b!110818 (= res!54784 (and (or (not ((_ is Cons!1649) (toList!813 lt!56695))) (bvsle (_1!1224 (h!2248 (toList!813 lt!56695))) (_1!1224 lt!56528))) ((_ is Cons!1649) (toList!813 lt!56695)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56695))) (_1!1224 lt!56528))))))

(declare-fun b!110819 () Bool)

(assert (=> b!110819 (= e!72065 (containsKey!161 (t!5802 (toList!813 lt!56695)) (_1!1224 lt!56528)))))

(assert (= (and d!31263 (not res!54783)) b!110818))

(assert (= (and b!110818 res!54784) b!110819))

(declare-fun m!126117 () Bool)

(assert (=> b!110819 m!126117))

(assert (=> d!31009 d!31263))

(declare-fun d!31265 () Bool)

(declare-fun res!54785 () Bool)

(declare-fun e!72066 () Bool)

(assert (=> d!31265 (=> res!54785 e!72066)))

(assert (=> d!31265 (= res!54785 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)))) (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))))) lt!56676)))))

(assert (=> d!31265 (= (containsKey!161 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))) lt!56676) e!72066)))

(declare-fun b!110820 () Bool)

(declare-fun e!72067 () Bool)

(assert (=> b!110820 (= e!72066 e!72067)))

(declare-fun res!54786 () Bool)

(assert (=> b!110820 (=> (not res!54786) (not e!72067))))

(assert (=> b!110820 (= res!54786 (and (or (not ((_ is Cons!1649) (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))))) (bvsle (_1!1224 (h!2248 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))))) lt!56676)) ((_ is Cons!1649) (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)))) (bvslt (_1!1224 (h!2248 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678))))) lt!56676)))))

(declare-fun b!110821 () Bool)

(assert (=> b!110821 (= e!72067 (containsKey!161 (t!5802 (toList!813 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)))) lt!56676))))

(assert (= (and d!31265 (not res!54785)) b!110820))

(assert (= (and b!110820 res!54786) b!110821))

(declare-fun m!126119 () Bool)

(assert (=> b!110821 m!126119))

(assert (=> d!30961 d!31265))

(declare-fun d!31267 () Bool)

(declare-fun res!54787 () Bool)

(declare-fun e!72068 () Bool)

(assert (=> d!31267 (=> res!54787 e!72068)))

(assert (=> d!31267 (= res!54787 (and ((_ is Cons!1649) (toList!813 lt!56691)) (= (_1!1224 (h!2248 (toList!813 lt!56691))) (_1!1224 lt!56517))))))

(assert (=> d!31267 (= (containsKey!161 (toList!813 lt!56691) (_1!1224 lt!56517)) e!72068)))

(declare-fun b!110822 () Bool)

(declare-fun e!72069 () Bool)

(assert (=> b!110822 (= e!72068 e!72069)))

(declare-fun res!54788 () Bool)

(assert (=> b!110822 (=> (not res!54788) (not e!72069))))

(assert (=> b!110822 (= res!54788 (and (or (not ((_ is Cons!1649) (toList!813 lt!56691))) (bvsle (_1!1224 (h!2248 (toList!813 lt!56691))) (_1!1224 lt!56517))) ((_ is Cons!1649) (toList!813 lt!56691)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56691))) (_1!1224 lt!56517))))))

(declare-fun b!110823 () Bool)

(assert (=> b!110823 (= e!72069 (containsKey!161 (t!5802 (toList!813 lt!56691)) (_1!1224 lt!56517)))))

(assert (= (and d!31267 (not res!54787)) b!110822))

(assert (= (and b!110822 res!54788) b!110823))

(declare-fun m!126121 () Bool)

(assert (=> b!110823 m!126121))

(assert (=> d!31065 d!31267))

(declare-fun d!31269 () Bool)

(declare-fun e!72070 () Bool)

(assert (=> d!31269 e!72070))

(declare-fun res!54789 () Bool)

(assert (=> d!31269 (=> res!54789 e!72070)))

(declare-fun lt!57266 () Bool)

(assert (=> d!31269 (= res!54789 (not lt!57266))))

(declare-fun lt!57263 () Bool)

(assert (=> d!31269 (= lt!57266 lt!57263)))

(declare-fun lt!57265 () Unit!3421)

(declare-fun e!72071 () Unit!3421)

(assert (=> d!31269 (= lt!57265 e!72071)))

(declare-fun c!19688 () Bool)

(assert (=> d!31269 (= c!19688 lt!57263)))

(assert (=> d!31269 (= lt!57263 (containsKey!161 (toList!813 lt!56917) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!31269 (= (contains!837 lt!56917 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!57266)))

(declare-fun b!110824 () Bool)

(declare-fun lt!57264 () Unit!3421)

(assert (=> b!110824 (= e!72071 lt!57264)))

(assert (=> b!110824 (= lt!57264 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56917) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!110824 (isDefined!111 (getValueByKey!157 (toList!813 lt!56917) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!110825 () Bool)

(declare-fun Unit!3459 () Unit!3421)

(assert (=> b!110825 (= e!72071 Unit!3459)))

(declare-fun b!110826 () Bool)

(assert (=> b!110826 (= e!72070 (isDefined!111 (getValueByKey!157 (toList!813 lt!56917) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!31269 c!19688) b!110824))

(assert (= (and d!31269 (not c!19688)) b!110825))

(assert (= (and d!31269 (not res!54789)) b!110826))

(assert (=> d!31269 m!125229))

(declare-fun m!126123 () Bool)

(assert (=> d!31269 m!126123))

(assert (=> b!110824 m!125229))

(declare-fun m!126125 () Bool)

(assert (=> b!110824 m!126125))

(assert (=> b!110824 m!125229))

(declare-fun m!126127 () Bool)

(assert (=> b!110824 m!126127))

(assert (=> b!110824 m!126127))

(declare-fun m!126129 () Bool)

(assert (=> b!110824 m!126129))

(assert (=> b!110826 m!125229))

(assert (=> b!110826 m!126127))

(assert (=> b!110826 m!126127))

(assert (=> b!110826 m!126129))

(assert (=> b!110407 d!31269))

(declare-fun d!31271 () Bool)

(declare-fun e!72072 () Bool)

(assert (=> d!31271 e!72072))

(declare-fun res!54790 () Bool)

(assert (=> d!31271 (=> res!54790 e!72072)))

(declare-fun lt!57270 () Bool)

(assert (=> d!31271 (= res!54790 (not lt!57270))))

(declare-fun lt!57267 () Bool)

(assert (=> d!31271 (= lt!57270 lt!57267)))

(declare-fun lt!57269 () Unit!3421)

(declare-fun e!72073 () Unit!3421)

(assert (=> d!31271 (= lt!57269 e!72073)))

(declare-fun c!19689 () Bool)

(assert (=> d!31271 (= c!19689 lt!57267)))

(assert (=> d!31271 (= lt!57267 (containsKey!161 (toList!813 lt!57125) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31271 (= (contains!837 lt!57125 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) lt!57270)))

(declare-fun b!110827 () Bool)

(declare-fun lt!57268 () Unit!3421)

(assert (=> b!110827 (= e!72073 lt!57268)))

(assert (=> b!110827 (= lt!57268 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!57125) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> b!110827 (isDefined!111 (getValueByKey!157 (toList!813 lt!57125) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!110828 () Bool)

(declare-fun Unit!3460 () Unit!3421)

(assert (=> b!110828 (= e!72073 Unit!3460)))

(declare-fun b!110829 () Bool)

(assert (=> b!110829 (= e!72072 (isDefined!111 (getValueByKey!157 (toList!813 lt!57125) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (= (and d!31271 c!19689) b!110827))

(assert (= (and d!31271 (not c!19689)) b!110828))

(assert (= (and d!31271 (not res!54790)) b!110829))

(declare-fun m!126131 () Bool)

(assert (=> d!31271 m!126131))

(declare-fun m!126133 () Bool)

(assert (=> b!110827 m!126133))

(assert (=> b!110827 m!125635))

(assert (=> b!110827 m!125635))

(declare-fun m!126135 () Bool)

(assert (=> b!110827 m!126135))

(assert (=> b!110829 m!125635))

(assert (=> b!110829 m!125635))

(assert (=> b!110829 m!126135))

(assert (=> d!31097 d!31271))

(declare-fun e!72075 () Option!163)

(declare-fun b!110832 () Bool)

(assert (=> b!110832 (= e!72075 (getValueByKey!157 (t!5802 lt!57128) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun c!19690 () Bool)

(declare-fun d!31273 () Bool)

(assert (=> d!31273 (= c!19690 (and ((_ is Cons!1649) lt!57128) (= (_1!1224 (h!2248 lt!57128)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun e!72074 () Option!163)

(assert (=> d!31273 (= (getValueByKey!157 lt!57128 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) e!72074)))

(declare-fun b!110833 () Bool)

(assert (=> b!110833 (= e!72075 None!161)))

(declare-fun b!110831 () Bool)

(assert (=> b!110831 (= e!72074 e!72075)))

(declare-fun c!19691 () Bool)

(assert (=> b!110831 (= c!19691 (and ((_ is Cons!1649) lt!57128) (not (= (_1!1224 (h!2248 lt!57128)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun b!110830 () Bool)

(assert (=> b!110830 (= e!72074 (Some!162 (_2!1224 (h!2248 lt!57128))))))

(assert (= (and d!31273 c!19690) b!110830))

(assert (= (and d!31273 (not c!19690)) b!110831))

(assert (= (and b!110831 c!19691) b!110832))

(assert (= (and b!110831 (not c!19691)) b!110833))

(declare-fun m!126137 () Bool)

(assert (=> b!110832 m!126137))

(assert (=> d!31097 d!31273))

(declare-fun d!31275 () Bool)

(assert (=> d!31275 (= (getValueByKey!157 lt!57128 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun lt!57271 () Unit!3421)

(assert (=> d!31275 (= lt!57271 (choose!693 lt!57128 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun e!72076 () Bool)

(assert (=> d!31275 e!72076))

(declare-fun res!54791 () Bool)

(assert (=> d!31275 (=> (not res!54791) (not e!72076))))

(assert (=> d!31275 (= res!54791 (isStrictlySorted!306 lt!57128))))

(assert (=> d!31275 (= (lemmaContainsTupThenGetReturnValue!75 lt!57128 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) lt!57271)))

(declare-fun b!110834 () Bool)

(declare-fun res!54792 () Bool)

(assert (=> b!110834 (=> (not res!54792) (not e!72076))))

(assert (=> b!110834 (= res!54792 (containsKey!161 lt!57128 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!110835 () Bool)

(assert (=> b!110835 (= e!72076 (contains!839 lt!57128 (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (= (and d!31275 res!54791) b!110834))

(assert (= (and b!110834 res!54792) b!110835))

(assert (=> d!31275 m!125629))

(declare-fun m!126139 () Bool)

(assert (=> d!31275 m!126139))

(declare-fun m!126141 () Bool)

(assert (=> d!31275 m!126141))

(declare-fun m!126143 () Bool)

(assert (=> b!110834 m!126143))

(declare-fun m!126145 () Bool)

(assert (=> b!110835 m!126145))

(assert (=> d!31097 d!31275))

(declare-fun c!19693 () Bool)

(declare-fun e!72079 () List!1653)

(declare-fun c!19692 () Bool)

(declare-fun b!110836 () Bool)

(assert (=> b!110836 (= e!72079 (ite c!19692 (t!5802 (toList!813 call!11713)) (ite c!19693 (Cons!1649 (h!2248 (toList!813 call!11713)) (t!5802 (toList!813 call!11713))) Nil!1650)))))

(declare-fun b!110837 () Bool)

(declare-fun e!72081 () List!1653)

(declare-fun call!11840 () List!1653)

(assert (=> b!110837 (= e!72081 call!11840)))

(declare-fun call!11838 () List!1653)

(declare-fun bm!11835 () Bool)

(declare-fun c!19695 () Bool)

(assert (=> bm!11835 (= call!11838 ($colon$colon!82 e!72079 (ite c!19695 (h!2248 (toList!813 call!11713)) (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun c!19694 () Bool)

(assert (=> bm!11835 (= c!19694 c!19695)))

(declare-fun b!110838 () Bool)

(declare-fun e!72077 () List!1653)

(assert (=> b!110838 (= e!72077 e!72081)))

(assert (=> b!110838 (= c!19692 (and ((_ is Cons!1649) (toList!813 call!11713)) (= (_1!1224 (h!2248 (toList!813 call!11713))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!110839 () Bool)

(assert (=> b!110839 (= e!72079 (insertStrictlySorted!77 (t!5802 (toList!813 call!11713)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun bm!11836 () Bool)

(declare-fun call!11839 () List!1653)

(assert (=> bm!11836 (= call!11839 call!11840)))

(declare-fun d!31277 () Bool)

(declare-fun e!72080 () Bool)

(assert (=> d!31277 e!72080))

(declare-fun res!54794 () Bool)

(assert (=> d!31277 (=> (not res!54794) (not e!72080))))

(declare-fun lt!57272 () List!1653)

(assert (=> d!31277 (= res!54794 (isStrictlySorted!306 lt!57272))))

(assert (=> d!31277 (= lt!57272 e!72077)))

(assert (=> d!31277 (= c!19695 (and ((_ is Cons!1649) (toList!813 call!11713)) (bvslt (_1!1224 (h!2248 (toList!813 call!11713))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (=> d!31277 (isStrictlySorted!306 (toList!813 call!11713))))

(assert (=> d!31277 (= (insertStrictlySorted!77 (toList!813 call!11713) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) lt!57272)))

(declare-fun b!110840 () Bool)

(declare-fun res!54793 () Bool)

(assert (=> b!110840 (=> (not res!54793) (not e!72080))))

(assert (=> b!110840 (= res!54793 (containsKey!161 lt!57272 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!110841 () Bool)

(declare-fun e!72078 () List!1653)

(assert (=> b!110841 (= e!72078 call!11839)))

(declare-fun b!110842 () Bool)

(assert (=> b!110842 (= e!72078 call!11839)))

(declare-fun b!110843 () Bool)

(assert (=> b!110843 (= e!72080 (contains!839 lt!57272 (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!110844 () Bool)

(assert (=> b!110844 (= e!72077 call!11838)))

(declare-fun bm!11837 () Bool)

(assert (=> bm!11837 (= call!11840 call!11838)))

(declare-fun b!110845 () Bool)

(assert (=> b!110845 (= c!19693 (and ((_ is Cons!1649) (toList!813 call!11713)) (bvsgt (_1!1224 (h!2248 (toList!813 call!11713))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (=> b!110845 (= e!72081 e!72078)))

(assert (= (and d!31277 c!19695) b!110844))

(assert (= (and d!31277 (not c!19695)) b!110838))

(assert (= (and b!110838 c!19692) b!110837))

(assert (= (and b!110838 (not c!19692)) b!110845))

(assert (= (and b!110845 c!19693) b!110841))

(assert (= (and b!110845 (not c!19693)) b!110842))

(assert (= (or b!110841 b!110842) bm!11836))

(assert (= (or b!110837 bm!11836) bm!11837))

(assert (= (or b!110844 bm!11837) bm!11835))

(assert (= (and bm!11835 c!19694) b!110839))

(assert (= (and bm!11835 (not c!19694)) b!110836))

(assert (= (and d!31277 res!54794) b!110840))

(assert (= (and b!110840 res!54793) b!110843))

(declare-fun m!126147 () Bool)

(assert (=> d!31277 m!126147))

(declare-fun m!126149 () Bool)

(assert (=> d!31277 m!126149))

(declare-fun m!126151 () Bool)

(assert (=> bm!11835 m!126151))

(declare-fun m!126153 () Bool)

(assert (=> b!110843 m!126153))

(declare-fun m!126155 () Bool)

(assert (=> b!110839 m!126155))

(declare-fun m!126157 () Bool)

(assert (=> b!110840 m!126157))

(assert (=> d!31097 d!31277))

(declare-fun d!31279 () Bool)

(declare-fun e!72082 () Bool)

(assert (=> d!31279 e!72082))

(declare-fun res!54795 () Bool)

(assert (=> d!31279 (=> res!54795 e!72082)))

(declare-fun lt!57276 () Bool)

(assert (=> d!31279 (= res!54795 (not lt!57276))))

(declare-fun lt!57273 () Bool)

(assert (=> d!31279 (= lt!57276 lt!57273)))

(declare-fun lt!57275 () Unit!3421)

(declare-fun e!72083 () Unit!3421)

(assert (=> d!31279 (= lt!57275 e!72083)))

(declare-fun c!19696 () Bool)

(assert (=> d!31279 (= c!19696 lt!57273)))

(assert (=> d!31279 (= lt!57273 (containsKey!161 (toList!813 lt!56797) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31279 (= (contains!837 lt!56797 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57276)))

(declare-fun b!110846 () Bool)

(declare-fun lt!57274 () Unit!3421)

(assert (=> b!110846 (= e!72083 lt!57274)))

(assert (=> b!110846 (= lt!57274 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56797) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110846 (isDefined!111 (getValueByKey!157 (toList!813 lt!56797) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110847 () Bool)

(declare-fun Unit!3461 () Unit!3421)

(assert (=> b!110847 (= e!72083 Unit!3461)))

(declare-fun b!110848 () Bool)

(assert (=> b!110848 (= e!72082 (isDefined!111 (getValueByKey!157 (toList!813 lt!56797) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31279 c!19696) b!110846))

(assert (= (and d!31279 (not c!19696)) b!110847))

(assert (= (and d!31279 (not res!54795)) b!110848))

(declare-fun m!126159 () Bool)

(assert (=> d!31279 m!126159))

(declare-fun m!126161 () Bool)

(assert (=> b!110846 m!126161))

(declare-fun m!126163 () Bool)

(assert (=> b!110846 m!126163))

(assert (=> b!110846 m!126163))

(declare-fun m!126165 () Bool)

(assert (=> b!110846 m!126165))

(assert (=> b!110848 m!126163))

(assert (=> b!110848 m!126163))

(assert (=> b!110848 m!126165))

(assert (=> bm!11762 d!31279))

(declare-fun d!31281 () Bool)

(assert (=> d!31281 (= (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110619 d!31281))

(declare-fun e!72086 () List!1653)

(declare-fun c!19698 () Bool)

(declare-fun c!19697 () Bool)

(declare-fun b!110849 () Bool)

(assert (=> b!110849 (= e!72086 (ite c!19697 (t!5802 (t!5802 (toList!813 (+!149 lt!56522 lt!56517)))) (ite c!19698 (Cons!1649 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56517)))) (t!5802 (t!5802 (toList!813 (+!149 lt!56522 lt!56517))))) Nil!1650)))))

(declare-fun b!110850 () Bool)

(declare-fun e!72088 () List!1653)

(declare-fun call!11843 () List!1653)

(assert (=> b!110850 (= e!72088 call!11843)))

(declare-fun c!19700 () Bool)

(declare-fun call!11841 () List!1653)

(declare-fun bm!11838 () Bool)

(assert (=> bm!11838 (= call!11841 ($colon$colon!82 e!72086 (ite c!19700 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56517)))) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528)))))))

(declare-fun c!19699 () Bool)

(assert (=> bm!11838 (= c!19699 c!19700)))

(declare-fun b!110851 () Bool)

(declare-fun e!72084 () List!1653)

(assert (=> b!110851 (= e!72084 e!72088)))

(assert (=> b!110851 (= c!19697 (and ((_ is Cons!1649) (t!5802 (toList!813 (+!149 lt!56522 lt!56517)))) (= (_1!1224 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56517))))) (_1!1224 lt!56528))))))

(declare-fun b!110852 () Bool)

(assert (=> b!110852 (= e!72086 (insertStrictlySorted!77 (t!5802 (t!5802 (toList!813 (+!149 lt!56522 lt!56517)))) (_1!1224 lt!56528) (_2!1224 lt!56528)))))

(declare-fun bm!11839 () Bool)

(declare-fun call!11842 () List!1653)

(assert (=> bm!11839 (= call!11842 call!11843)))

(declare-fun d!31283 () Bool)

(declare-fun e!72087 () Bool)

(assert (=> d!31283 e!72087))

(declare-fun res!54797 () Bool)

(assert (=> d!31283 (=> (not res!54797) (not e!72087))))

(declare-fun lt!57277 () List!1653)

(assert (=> d!31283 (= res!54797 (isStrictlySorted!306 lt!57277))))

(assert (=> d!31283 (= lt!57277 e!72084)))

(assert (=> d!31283 (= c!19700 (and ((_ is Cons!1649) (t!5802 (toList!813 (+!149 lt!56522 lt!56517)))) (bvslt (_1!1224 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56517))))) (_1!1224 lt!56528))))))

(assert (=> d!31283 (isStrictlySorted!306 (t!5802 (toList!813 (+!149 lt!56522 lt!56517))))))

(assert (=> d!31283 (= (insertStrictlySorted!77 (t!5802 (toList!813 (+!149 lt!56522 lt!56517))) (_1!1224 lt!56528) (_2!1224 lt!56528)) lt!57277)))

(declare-fun b!110853 () Bool)

(declare-fun res!54796 () Bool)

(assert (=> b!110853 (=> (not res!54796) (not e!72087))))

(assert (=> b!110853 (= res!54796 (containsKey!161 lt!57277 (_1!1224 lt!56528)))))

(declare-fun b!110854 () Bool)

(declare-fun e!72085 () List!1653)

(assert (=> b!110854 (= e!72085 call!11842)))

(declare-fun b!110855 () Bool)

(assert (=> b!110855 (= e!72085 call!11842)))

(declare-fun b!110856 () Bool)

(assert (=> b!110856 (= e!72087 (contains!839 lt!57277 (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun b!110857 () Bool)

(assert (=> b!110857 (= e!72084 call!11841)))

(declare-fun bm!11840 () Bool)

(assert (=> bm!11840 (= call!11843 call!11841)))

(declare-fun b!110858 () Bool)

(assert (=> b!110858 (= c!19698 (and ((_ is Cons!1649) (t!5802 (toList!813 (+!149 lt!56522 lt!56517)))) (bvsgt (_1!1224 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56517))))) (_1!1224 lt!56528))))))

(assert (=> b!110858 (= e!72088 e!72085)))

(assert (= (and d!31283 c!19700) b!110857))

(assert (= (and d!31283 (not c!19700)) b!110851))

(assert (= (and b!110851 c!19697) b!110850))

(assert (= (and b!110851 (not c!19697)) b!110858))

(assert (= (and b!110858 c!19698) b!110854))

(assert (= (and b!110858 (not c!19698)) b!110855))

(assert (= (or b!110854 b!110855) bm!11839))

(assert (= (or b!110850 bm!11839) bm!11840))

(assert (= (or b!110857 bm!11840) bm!11838))

(assert (= (and bm!11838 c!19699) b!110852))

(assert (= (and bm!11838 (not c!19699)) b!110849))

(assert (= (and d!31283 res!54797) b!110853))

(assert (= (and b!110853 res!54796) b!110856))

(declare-fun m!126167 () Bool)

(assert (=> d!31283 m!126167))

(declare-fun m!126169 () Bool)

(assert (=> d!31283 m!126169))

(declare-fun m!126171 () Bool)

(assert (=> bm!11838 m!126171))

(declare-fun m!126173 () Bool)

(assert (=> b!110856 m!126173))

(declare-fun m!126175 () Bool)

(assert (=> b!110852 m!126175))

(declare-fun m!126177 () Bool)

(assert (=> b!110853 m!126177))

(assert (=> b!110433 d!31283))

(declare-fun d!31285 () Bool)

(declare-fun res!54798 () Bool)

(declare-fun e!72089 () Bool)

(assert (=> d!31285 (=> res!54798 e!72089)))

(assert (=> d!31285 (= res!54798 (and ((_ is Cons!1649) (toList!813 call!11726)) (= (_1!1224 (h!2248 (toList!813 call!11726))) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639)))))))

(assert (=> d!31285 (= (containsKey!161 (toList!813 call!11726) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))) e!72089)))

(declare-fun b!110859 () Bool)

(declare-fun e!72090 () Bool)

(assert (=> b!110859 (= e!72089 e!72090)))

(declare-fun res!54799 () Bool)

(assert (=> b!110859 (=> (not res!54799) (not e!72090))))

(assert (=> b!110859 (= res!54799 (and (or (not ((_ is Cons!1649) (toList!813 call!11726))) (bvsle (_1!1224 (h!2248 (toList!813 call!11726))) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639)))) ((_ is Cons!1649) (toList!813 call!11726)) (bvslt (_1!1224 (h!2248 (toList!813 call!11726))) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639)))))))

(declare-fun b!110860 () Bool)

(assert (=> b!110860 (= e!72090 (containsKey!161 (t!5802 (toList!813 call!11726)) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(assert (= (and d!31285 (not res!54798)) b!110859))

(assert (= (and b!110859 res!54799) b!110860))

(assert (=> b!110860 m!124655))

(declare-fun m!126179 () Bool)

(assert (=> b!110860 m!126179))

(assert (=> d!31003 d!31285))

(declare-fun d!31287 () Bool)

(assert (=> d!31287 (= (get!1359 (getValueByKey!157 (toList!813 lt!56759) lt!56761)) (v!2933 (getValueByKey!157 (toList!813 lt!56759) lt!56761)))))

(assert (=> d!31025 d!31287))

(declare-fun b!110863 () Bool)

(declare-fun e!72092 () Option!163)

(assert (=> b!110863 (= e!72092 (getValueByKey!157 (t!5802 (toList!813 lt!56759)) lt!56761))))

(declare-fun d!31289 () Bool)

(declare-fun c!19701 () Bool)

(assert (=> d!31289 (= c!19701 (and ((_ is Cons!1649) (toList!813 lt!56759)) (= (_1!1224 (h!2248 (toList!813 lt!56759))) lt!56761)))))

(declare-fun e!72091 () Option!163)

(assert (=> d!31289 (= (getValueByKey!157 (toList!813 lt!56759) lt!56761) e!72091)))

(declare-fun b!110864 () Bool)

(assert (=> b!110864 (= e!72092 None!161)))

(declare-fun b!110862 () Bool)

(assert (=> b!110862 (= e!72091 e!72092)))

(declare-fun c!19702 () Bool)

(assert (=> b!110862 (= c!19702 (and ((_ is Cons!1649) (toList!813 lt!56759)) (not (= (_1!1224 (h!2248 (toList!813 lt!56759))) lt!56761))))))

(declare-fun b!110861 () Bool)

(assert (=> b!110861 (= e!72091 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56759)))))))

(assert (= (and d!31289 c!19701) b!110861))

(assert (= (and d!31289 (not c!19701)) b!110862))

(assert (= (and b!110862 c!19702) b!110863))

(assert (= (and b!110862 (not c!19702)) b!110864))

(declare-fun m!126181 () Bool)

(assert (=> b!110863 m!126181))

(assert (=> d!31025 d!31289))

(declare-fun d!31291 () Bool)

(assert (=> d!31291 (= (get!1359 (getValueByKey!157 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2933 (getValueByKey!157 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31051 d!31291))

(assert (=> d!31051 d!31197))

(declare-fun e!72094 () Option!163)

(declare-fun b!110867 () Bool)

(assert (=> b!110867 (= e!72094 (getValueByKey!157 (t!5802 (toList!813 lt!56901)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun c!19703 () Bool)

(declare-fun d!31293 () Bool)

(assert (=> d!31293 (= c!19703 (and ((_ is Cons!1649) (toList!813 lt!56901)) (= (_1!1224 (h!2248 (toList!813 lt!56901))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun e!72093 () Option!163)

(assert (=> d!31293 (= (getValueByKey!157 (toList!813 lt!56901) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) e!72093)))

(declare-fun b!110868 () Bool)

(assert (=> b!110868 (= e!72094 None!161)))

(declare-fun b!110866 () Bool)

(assert (=> b!110866 (= e!72093 e!72094)))

(declare-fun c!19704 () Bool)

(assert (=> b!110866 (= c!19704 (and ((_ is Cons!1649) (toList!813 lt!56901)) (not (= (_1!1224 (h!2248 (toList!813 lt!56901))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun b!110865 () Bool)

(assert (=> b!110865 (= e!72093 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56901)))))))

(assert (= (and d!31293 c!19703) b!110865))

(assert (= (and d!31293 (not c!19703)) b!110866))

(assert (= (and b!110866 c!19704) b!110867))

(assert (= (and b!110866 (not c!19704)) b!110868))

(declare-fun m!126183 () Bool)

(assert (=> b!110867 m!126183))

(assert (=> b!110375 d!31293))

(declare-fun d!31295 () Bool)

(declare-fun lt!57278 () Bool)

(assert (=> d!31295 (= lt!57278 (select (content!112 (toList!813 lt!56974)) (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun e!72096 () Bool)

(assert (=> d!31295 (= lt!57278 e!72096)))

(declare-fun res!54801 () Bool)

(assert (=> d!31295 (=> (not res!54801) (not e!72096))))

(assert (=> d!31295 (= res!54801 ((_ is Cons!1649) (toList!813 lt!56974)))))

(assert (=> d!31295 (= (contains!839 (toList!813 lt!56974) (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) lt!57278)))

(declare-fun b!110869 () Bool)

(declare-fun e!72095 () Bool)

(assert (=> b!110869 (= e!72096 e!72095)))

(declare-fun res!54800 () Bool)

(assert (=> b!110869 (=> res!54800 e!72095)))

(assert (=> b!110869 (= res!54800 (= (h!2248 (toList!813 lt!56974)) (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!110870 () Bool)

(assert (=> b!110870 (= e!72095 (contains!839 (t!5802 (toList!813 lt!56974)) (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (= (and d!31295 res!54801) b!110869))

(assert (= (and b!110869 (not res!54800)) b!110870))

(declare-fun m!126185 () Bool)

(assert (=> d!31295 m!126185))

(declare-fun m!126187 () Bool)

(assert (=> d!31295 m!126187))

(declare-fun m!126189 () Bool)

(assert (=> b!110870 m!126189))

(assert (=> b!110467 d!31295))

(declare-fun d!31297 () Bool)

(assert (=> d!31297 (= (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110606 d!31297))

(declare-fun d!31299 () Bool)

(assert (=> d!31299 (arrayContainsKey!0 (_keys!4341 newMap!16) lt!56986 #b00000000000000000000000000000000)))

(declare-fun lt!57281 () Unit!3421)

(declare-fun choose!13 (array!4388 (_ BitVec 64) (_ BitVec 32)) Unit!3421)

(assert (=> d!31299 (= lt!57281 (choose!13 (_keys!4341 newMap!16) lt!56986 #b00000000000000000000000000000000))))

(assert (=> d!31299 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!31299 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4341 newMap!16) lt!56986 #b00000000000000000000000000000000) lt!57281)))

(declare-fun bs!4572 () Bool)

(assert (= bs!4572 d!31299))

(assert (=> bs!4572 m!125433))

(declare-fun m!126191 () Bool)

(assert (=> bs!4572 m!126191))

(assert (=> b!110477 d!31299))

(declare-fun d!31301 () Bool)

(declare-fun res!54802 () Bool)

(declare-fun e!72097 () Bool)

(assert (=> d!31301 (=> res!54802 e!72097)))

(assert (=> d!31301 (= res!54802 (= (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) lt!56986))))

(assert (=> d!31301 (= (arrayContainsKey!0 (_keys!4341 newMap!16) lt!56986 #b00000000000000000000000000000000) e!72097)))

(declare-fun b!110871 () Bool)

(declare-fun e!72098 () Bool)

(assert (=> b!110871 (= e!72097 e!72098)))

(declare-fun res!54803 () Bool)

(assert (=> b!110871 (=> (not res!54803) (not e!72098))))

(assert (=> b!110871 (= res!54803 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!110872 () Bool)

(assert (=> b!110872 (= e!72098 (arrayContainsKey!0 (_keys!4341 newMap!16) lt!56986 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!31301 (not res!54802)) b!110871))

(assert (= (and b!110871 res!54803) b!110872))

(assert (=> d!31301 m!124875))

(declare-fun m!126193 () Bool)

(assert (=> b!110872 m!126193))

(assert (=> b!110477 d!31301))

(declare-fun b!110873 () Bool)

(declare-fun e!72100 () SeekEntryResult!271)

(declare-fun e!72099 () SeekEntryResult!271)

(assert (=> b!110873 (= e!72100 e!72099)))

(declare-fun lt!57283 () (_ BitVec 64))

(declare-fun lt!57282 () SeekEntryResult!271)

(assert (=> b!110873 (= lt!57283 (select (arr!2080 (_keys!4341 newMap!16)) (index!3236 lt!57282)))))

(declare-fun c!19706 () Bool)

(assert (=> b!110873 (= c!19706 (= lt!57283 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!31303 () Bool)

(declare-fun lt!57284 () SeekEntryResult!271)

(assert (=> d!31303 (and (or ((_ is Undefined!271) lt!57284) (not ((_ is Found!271) lt!57284)) (and (bvsge (index!3235 lt!57284) #b00000000000000000000000000000000) (bvslt (index!3235 lt!57284) (size!2337 (_keys!4341 newMap!16))))) (or ((_ is Undefined!271) lt!57284) ((_ is Found!271) lt!57284) (not ((_ is MissingZero!271) lt!57284)) (and (bvsge (index!3234 lt!57284) #b00000000000000000000000000000000) (bvslt (index!3234 lt!57284) (size!2337 (_keys!4341 newMap!16))))) (or ((_ is Undefined!271) lt!57284) ((_ is Found!271) lt!57284) ((_ is MissingZero!271) lt!57284) (not ((_ is MissingVacant!271) lt!57284)) (and (bvsge (index!3237 lt!57284) #b00000000000000000000000000000000) (bvslt (index!3237 lt!57284) (size!2337 (_keys!4341 newMap!16))))) (or ((_ is Undefined!271) lt!57284) (ite ((_ is Found!271) lt!57284) (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!57284)) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!271) lt!57284) (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3234 lt!57284)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!271) lt!57284) (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3237 lt!57284)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31303 (= lt!57284 e!72100)))

(declare-fun c!19707 () Bool)

(assert (=> d!31303 (= c!19707 (and ((_ is Intermediate!271) lt!57282) (undefined!1083 lt!57282)))))

(assert (=> d!31303 (= lt!57282 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (mask!6795 newMap!16)) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (=> d!31303 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31303 (= (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (_keys!4341 newMap!16) (mask!6795 newMap!16)) lt!57284)))

(declare-fun b!110874 () Bool)

(declare-fun e!72101 () SeekEntryResult!271)

(assert (=> b!110874 (= e!72101 (MissingZero!271 (index!3236 lt!57282)))))

(declare-fun b!110875 () Bool)

(declare-fun c!19705 () Bool)

(assert (=> b!110875 (= c!19705 (= lt!57283 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110875 (= e!72099 e!72101)))

(declare-fun b!110876 () Bool)

(assert (=> b!110876 (= e!72100 Undefined!271)))

(declare-fun b!110877 () Bool)

(assert (=> b!110877 (= e!72099 (Found!271 (index!3236 lt!57282)))))

(declare-fun b!110878 () Bool)

(assert (=> b!110878 (= e!72101 (seekKeyOrZeroReturnVacant!0 (x!13959 lt!57282) (index!3236 lt!57282) (index!3236 lt!57282) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (= (and d!31303 c!19707) b!110876))

(assert (= (and d!31303 (not c!19707)) b!110873))

(assert (= (and b!110873 c!19706) b!110877))

(assert (= (and b!110873 (not c!19706)) b!110875))

(assert (= (and b!110875 c!19705) b!110874))

(assert (= (and b!110875 (not c!19705)) b!110878))

(declare-fun m!126195 () Bool)

(assert (=> b!110873 m!126195))

(declare-fun m!126197 () Bool)

(assert (=> d!31303 m!126197))

(assert (=> d!31303 m!124875))

(declare-fun m!126199 () Bool)

(assert (=> d!31303 m!126199))

(declare-fun m!126201 () Bool)

(assert (=> d!31303 m!126201))

(declare-fun m!126203 () Bool)

(assert (=> d!31303 m!126203))

(assert (=> d!31303 m!124875))

(assert (=> d!31303 m!126197))

(assert (=> d!31303 m!124861))

(declare-fun m!126205 () Bool)

(assert (=> d!31303 m!126205))

(assert (=> b!110878 m!124875))

(declare-fun m!126207 () Bool)

(assert (=> b!110878 m!126207))

(assert (=> b!110477 d!31303))

(declare-fun d!31305 () Bool)

(declare-fun res!54804 () Bool)

(declare-fun e!72102 () Bool)

(assert (=> d!31305 (=> res!54804 e!72102)))

(assert (=> d!31305 (= res!54804 (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31305 (= (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!72102)))

(declare-fun b!110879 () Bool)

(declare-fun e!72103 () Bool)

(assert (=> b!110879 (= e!72102 e!72103)))

(declare-fun res!54805 () Bool)

(assert (=> b!110879 (=> (not res!54805) (not e!72103))))

(assert (=> b!110879 (= res!54805 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110880 () Bool)

(assert (=> b!110880 (= e!72103 (arrayContainsKey!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!31305 (not res!54804)) b!110879))

(assert (= (and b!110879 res!54805) b!110880))

(declare-fun m!126209 () Bool)

(assert (=> d!31305 m!126209))

(assert (=> b!110880 m!124515))

(declare-fun m!126211 () Bool)

(assert (=> b!110880 m!126211))

(assert (=> b!110628 d!31305))

(declare-fun d!31307 () Bool)

(assert (=> d!31307 (= (isEmpty!382 (getValueByKey!157 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))) (not ((_ is Some!162) (getValueByKey!157 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))))

(assert (=> d!30933 d!31307))

(declare-fun d!31309 () Bool)

(assert (=> d!31309 (contains!837 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))

(declare-fun lt!57287 () Unit!3421)

(declare-fun choose!703 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) (_ BitVec 32) Int) Unit!3421)

(assert (=> d!31309 (= lt!57287 (choose!703 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(assert (=> d!31309 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31309 (= (lemmaArrayContainsKeyThenInListMap!32 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57287)))

(declare-fun bs!4573 () Bool)

(assert (= bs!4573 d!31309))

(assert (=> bs!4573 m!124677))

(assert (=> bs!4573 m!124677))

(assert (=> bs!4573 m!124515))

(assert (=> bs!4573 m!125559))

(assert (=> bs!4573 m!124515))

(declare-fun m!126213 () Bool)

(assert (=> bs!4573 m!126213))

(assert (=> bs!4573 m!124861))

(assert (=> b!110592 d!31309))

(declare-fun d!31311 () Bool)

(declare-fun e!72104 () Bool)

(assert (=> d!31311 e!72104))

(declare-fun res!54806 () Bool)

(assert (=> d!31311 (=> res!54806 e!72104)))

(declare-fun lt!57291 () Bool)

(assert (=> d!31311 (= res!54806 (not lt!57291))))

(declare-fun lt!57288 () Bool)

(assert (=> d!31311 (= lt!57291 lt!57288)))

(declare-fun lt!57290 () Unit!3421)

(declare-fun e!72105 () Unit!3421)

(assert (=> d!31311 (= lt!57290 e!72105)))

(declare-fun c!19708 () Bool)

(assert (=> d!31311 (= c!19708 lt!57288)))

(assert (=> d!31311 (= lt!57288 (containsKey!161 (toList!813 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31311 (= (contains!837 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) lt!57291)))

(declare-fun b!110881 () Bool)

(declare-fun lt!57289 () Unit!3421)

(assert (=> b!110881 (= e!72105 lt!57289)))

(assert (=> b!110881 (= lt!57289 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110881 (isDefined!111 (getValueByKey!157 (toList!813 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110882 () Bool)

(declare-fun Unit!3462 () Unit!3421)

(assert (=> b!110882 (= e!72105 Unit!3462)))

(declare-fun b!110883 () Bool)

(assert (=> b!110883 (= e!72104 (isDefined!111 (getValueByKey!157 (toList!813 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!31311 c!19708) b!110881))

(assert (= (and d!31311 (not c!19708)) b!110882))

(assert (= (and d!31311 (not res!54806)) b!110883))

(assert (=> d!31311 m!124515))

(declare-fun m!126215 () Bool)

(assert (=> d!31311 m!126215))

(assert (=> b!110881 m!124515))

(declare-fun m!126217 () Bool)

(assert (=> b!110881 m!126217))

(assert (=> b!110881 m!124515))

(declare-fun m!126219 () Bool)

(assert (=> b!110881 m!126219))

(assert (=> b!110881 m!126219))

(declare-fun m!126221 () Bool)

(assert (=> b!110881 m!126221))

(assert (=> b!110883 m!124515))

(assert (=> b!110883 m!126219))

(assert (=> b!110883 m!126219))

(assert (=> b!110883 m!126221))

(assert (=> b!110592 d!31311))

(assert (=> b!110592 d!30955))

(declare-fun d!31313 () Bool)

(declare-fun res!54807 () Bool)

(declare-fun e!72106 () Bool)

(assert (=> d!31313 (=> res!54807 e!72106)))

(assert (=> d!31313 (= res!54807 (and ((_ is Cons!1649) (toList!813 lt!56753)) (= (_1!1224 (h!2248 (toList!813 lt!56753))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31313 (= (containsKey!161 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000) e!72106)))

(declare-fun b!110884 () Bool)

(declare-fun e!72107 () Bool)

(assert (=> b!110884 (= e!72106 e!72107)))

(declare-fun res!54808 () Bool)

(assert (=> b!110884 (=> (not res!54808) (not e!72107))))

(assert (=> b!110884 (= res!54808 (and (or (not ((_ is Cons!1649) (toList!813 lt!56753))) (bvsle (_1!1224 (h!2248 (toList!813 lt!56753))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1649) (toList!813 lt!56753)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56753))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110885 () Bool)

(assert (=> b!110885 (= e!72107 (containsKey!161 (t!5802 (toList!813 lt!56753)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31313 (not res!54807)) b!110884))

(assert (= (and b!110884 res!54808) b!110885))

(declare-fun m!126223 () Bool)

(assert (=> b!110885 m!126223))

(assert (=> d!30941 d!31313))

(declare-fun d!31315 () Bool)

(assert (=> d!31315 (= (apply!100 lt!56849 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1359 (getValueByKey!157 (toList!813 lt!56849) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4574 () Bool)

(assert (= bs!4574 d!31315))

(assert (=> bs!4574 m!124875))

(declare-fun m!126225 () Bool)

(assert (=> bs!4574 m!126225))

(assert (=> bs!4574 m!126225))

(declare-fun m!126227 () Bool)

(assert (=> bs!4574 m!126227))

(assert (=> b!110335 d!31315))

(declare-fun d!31317 () Bool)

(declare-fun c!19709 () Bool)

(assert (=> d!31317 (= c!19709 ((_ is ValueCellFull!1005) (select (arr!2081 (_values!2610 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!72108 () V!3243)

(assert (=> d!31317 (= (get!1355 (select (arr!2081 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72108)))

(declare-fun b!110886 () Bool)

(assert (=> b!110886 (= e!72108 (get!1357 (select (arr!2081 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110887 () Bool)

(assert (=> b!110887 (= e!72108 (get!1358 (select (arr!2081 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31317 c!19709) b!110886))

(assert (= (and d!31317 (not c!19709)) b!110887))

(assert (=> b!110886 m!125057))

(assert (=> b!110886 m!124937))

(declare-fun m!126229 () Bool)

(assert (=> b!110886 m!126229))

(assert (=> b!110887 m!125057))

(assert (=> b!110887 m!124937))

(declare-fun m!126231 () Bool)

(assert (=> b!110887 m!126231))

(assert (=> b!110335 d!31317))

(declare-fun b!110888 () Bool)

(declare-fun e!72115 () Bool)

(declare-fun lt!57294 () ListLongMap!1595)

(assert (=> b!110888 (= e!72115 (isEmpty!381 lt!57294))))

(declare-fun bm!11841 () Bool)

(declare-fun call!11844 () ListLongMap!1595)

(assert (=> bm!11841 (= call!11844 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!110889 () Bool)

(declare-fun e!72113 () ListLongMap!1595)

(assert (=> b!110889 (= e!72113 (ListLongMap!1596 Nil!1650))))

(declare-fun b!110890 () Bool)

(declare-fun e!72109 () Bool)

(assert (=> b!110890 (= e!72109 e!72115)))

(declare-fun c!19711 () Bool)

(assert (=> b!110890 (= c!19711 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110891 () Bool)

(declare-fun e!72110 () Bool)

(assert (=> b!110891 (= e!72110 e!72109)))

(declare-fun c!19713 () Bool)

(declare-fun e!72112 () Bool)

(assert (=> b!110891 (= c!19713 e!72112)))

(declare-fun res!54811 () Bool)

(assert (=> b!110891 (=> (not res!54811) (not e!72112))))

(assert (=> b!110891 (= res!54811 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110892 () Bool)

(assert (=> b!110892 (= e!72112 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!110892 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!110893 () Bool)

(declare-fun res!54810 () Bool)

(assert (=> b!110893 (=> (not res!54810) (not e!72110))))

(assert (=> b!110893 (= res!54810 (not (contains!837 lt!57294 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!31319 () Bool)

(assert (=> d!31319 e!72110))

(declare-fun res!54809 () Bool)

(assert (=> d!31319 (=> (not res!54809) (not e!72110))))

(assert (=> d!31319 (= res!54809 (not (contains!837 lt!57294 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31319 (= lt!57294 e!72113)))

(declare-fun c!19712 () Bool)

(assert (=> d!31319 (= c!19712 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> d!31319 (validMask!0 (mask!6795 (v!2929 (underlying!370 thiss!992))))))

(assert (=> d!31319 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992)))) lt!57294)))

(declare-fun b!110894 () Bool)

(declare-fun lt!57293 () Unit!3421)

(declare-fun lt!57297 () Unit!3421)

(assert (=> b!110894 (= lt!57293 lt!57297)))

(declare-fun lt!57292 () ListLongMap!1595)

(declare-fun lt!57296 () (_ BitVec 64))

(declare-fun lt!57298 () V!3243)

(declare-fun lt!57295 () (_ BitVec 64))

(assert (=> b!110894 (not (contains!837 (+!149 lt!57292 (tuple2!2429 lt!57295 lt!57298)) lt!57296))))

(assert (=> b!110894 (= lt!57297 (addStillNotContains!50 lt!57292 lt!57295 lt!57298 lt!57296))))

(assert (=> b!110894 (= lt!57296 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110894 (= lt!57298 (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110894 (= lt!57295 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!110894 (= lt!57292 call!11844)))

(declare-fun e!72114 () ListLongMap!1595)

(assert (=> b!110894 (= e!72114 (+!149 call!11844 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110895 () Bool)

(assert (=> b!110895 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> b!110895 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2338 (_values!2610 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun e!72111 () Bool)

(assert (=> b!110895 (= e!72111 (= (apply!100 lt!57294 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110896 () Bool)

(assert (=> b!110896 (= e!72113 e!72114)))

(declare-fun c!19710 () Bool)

(assert (=> b!110896 (= c!19710 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!110897 () Bool)

(assert (=> b!110897 (= e!72109 e!72111)))

(assert (=> b!110897 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun res!54812 () Bool)

(assert (=> b!110897 (= res!54812 (contains!837 lt!57294 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!110897 (=> (not res!54812) (not e!72111))))

(declare-fun b!110898 () Bool)

(assert (=> b!110898 (= e!72115 (= lt!57294 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (_values!2610 (v!2929 (underlying!370 thiss!992))) (mask!6795 (v!2929 (underlying!370 thiss!992))) (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) (minValue!2498 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110899 () Bool)

(assert (=> b!110899 (= e!72114 call!11844)))

(assert (= (and d!31319 c!19712) b!110889))

(assert (= (and d!31319 (not c!19712)) b!110896))

(assert (= (and b!110896 c!19710) b!110894))

(assert (= (and b!110896 (not c!19710)) b!110899))

(assert (= (or b!110894 b!110899) bm!11841))

(assert (= (and d!31319 res!54809) b!110893))

(assert (= (and b!110893 res!54810) b!110891))

(assert (= (and b!110891 res!54811) b!110892))

(assert (= (and b!110891 c!19713) b!110897))

(assert (= (and b!110891 (not c!19713)) b!110890))

(assert (= (and b!110897 res!54812) b!110895))

(assert (= (and b!110890 c!19711) b!110898))

(assert (= (and b!110890 (not c!19711)) b!110888))

(declare-fun b_lambda!4991 () Bool)

(assert (=> (not b_lambda!4991) (not b!110894)))

(assert (=> b!110894 t!5798))

(declare-fun b_and!6845 () Bool)

(assert (= b_and!6841 (and (=> t!5798 result!3535) b_and!6845)))

(assert (=> b!110894 t!5800))

(declare-fun b_and!6847 () Bool)

(assert (= b_and!6843 (and (=> t!5800 result!3539) b_and!6847)))

(declare-fun b_lambda!4993 () Bool)

(assert (=> (not b_lambda!4993) (not b!110895)))

(assert (=> b!110895 t!5798))

(declare-fun b_and!6849 () Bool)

(assert (= b_and!6845 (and (=> t!5798 result!3535) b_and!6849)))

(assert (=> b!110895 t!5800))

(declare-fun b_and!6851 () Bool)

(assert (= b_and!6847 (and (=> t!5800 result!3539) b_and!6851)))

(declare-fun m!126233 () Bool)

(assert (=> d!31319 m!126233))

(assert (=> d!31319 m!124513))

(declare-fun m!126235 () Bool)

(assert (=> b!110888 m!126235))

(declare-fun m!126237 () Bool)

(assert (=> b!110894 m!126237))

(assert (=> b!110894 m!124559))

(assert (=> b!110894 m!126237))

(declare-fun m!126239 () Bool)

(assert (=> b!110894 m!126239))

(declare-fun m!126241 () Bool)

(assert (=> b!110894 m!126241))

(declare-fun m!126243 () Bool)

(assert (=> b!110894 m!126243))

(assert (=> b!110894 m!126209))

(declare-fun m!126245 () Bool)

(assert (=> b!110894 m!126245))

(assert (=> b!110894 m!126241))

(assert (=> b!110894 m!124559))

(declare-fun m!126247 () Bool)

(assert (=> b!110894 m!126247))

(declare-fun m!126249 () Bool)

(assert (=> bm!11841 m!126249))

(assert (=> b!110897 m!126209))

(assert (=> b!110897 m!126209))

(declare-fun m!126251 () Bool)

(assert (=> b!110897 m!126251))

(assert (=> b!110898 m!126249))

(assert (=> b!110895 m!124559))

(assert (=> b!110895 m!126209))

(assert (=> b!110895 m!126241))

(assert (=> b!110895 m!124559))

(assert (=> b!110895 m!126247))

(assert (=> b!110895 m!126209))

(declare-fun m!126253 () Bool)

(assert (=> b!110895 m!126253))

(assert (=> b!110895 m!126241))

(assert (=> b!110896 m!126209))

(assert (=> b!110896 m!126209))

(declare-fun m!126255 () Bool)

(assert (=> b!110896 m!126255))

(assert (=> b!110892 m!126209))

(assert (=> b!110892 m!126209))

(assert (=> b!110892 m!126255))

(declare-fun m!126257 () Bool)

(assert (=> b!110893 m!126257))

(assert (=> bm!11783 d!31319))

(declare-fun d!31321 () Bool)

(declare-fun lt!57299 () Bool)

(assert (=> d!31321 (= lt!57299 (select (content!112 lt!56914) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun e!72117 () Bool)

(assert (=> d!31321 (= lt!57299 e!72117)))

(declare-fun res!54814 () Bool)

(assert (=> d!31321 (=> (not res!54814) (not e!72117))))

(assert (=> d!31321 (= res!54814 ((_ is Cons!1649) lt!56914))))

(assert (=> d!31321 (= (contains!839 lt!56914 (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))) lt!57299)))

(declare-fun b!110900 () Bool)

(declare-fun e!72116 () Bool)

(assert (=> b!110900 (= e!72117 e!72116)))

(declare-fun res!54813 () Bool)

(assert (=> b!110900 (=> res!54813 e!72116)))

(assert (=> b!110900 (= res!54813 (= (h!2248 lt!56914) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun b!110901 () Bool)

(assert (=> b!110901 (= e!72116 (contains!839 (t!5802 lt!56914) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(assert (= (and d!31321 res!54814) b!110900))

(assert (= (and b!110900 (not res!54813)) b!110901))

(declare-fun m!126259 () Bool)

(assert (=> d!31321 m!126259))

(declare-fun m!126261 () Bool)

(assert (=> d!31321 m!126261))

(declare-fun m!126263 () Bool)

(assert (=> b!110901 m!126263))

(assert (=> b!110395 d!31321))

(assert (=> bm!11798 d!31077))

(assert (=> b!110534 d!31281))

(declare-fun c!19715 () Bool)

(declare-fun c!19714 () Bool)

(declare-fun b!110902 () Bool)

(declare-fun e!72120 () List!1653)

(assert (=> b!110902 (= e!72120 (ite c!19714 (t!5802 (t!5802 (toList!813 lt!56522))) (ite c!19715 (Cons!1649 (h!2248 (t!5802 (toList!813 lt!56522))) (t!5802 (t!5802 (toList!813 lt!56522)))) Nil!1650)))))

(declare-fun b!110903 () Bool)

(declare-fun e!72122 () List!1653)

(declare-fun call!11847 () List!1653)

(assert (=> b!110903 (= e!72122 call!11847)))

(declare-fun c!19717 () Bool)

(declare-fun bm!11842 () Bool)

(declare-fun call!11845 () List!1653)

(assert (=> bm!11842 (= call!11845 ($colon$colon!82 e!72120 (ite c!19717 (h!2248 (t!5802 (toList!813 lt!56522))) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517)))))))

(declare-fun c!19716 () Bool)

(assert (=> bm!11842 (= c!19716 c!19717)))

(declare-fun b!110904 () Bool)

(declare-fun e!72118 () List!1653)

(assert (=> b!110904 (= e!72118 e!72122)))

(assert (=> b!110904 (= c!19714 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56522))) (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56522)))) (_1!1224 lt!56517))))))

(declare-fun b!110905 () Bool)

(assert (=> b!110905 (= e!72120 (insertStrictlySorted!77 (t!5802 (t!5802 (toList!813 lt!56522))) (_1!1224 lt!56517) (_2!1224 lt!56517)))))

(declare-fun bm!11843 () Bool)

(declare-fun call!11846 () List!1653)

(assert (=> bm!11843 (= call!11846 call!11847)))

(declare-fun d!31323 () Bool)

(declare-fun e!72121 () Bool)

(assert (=> d!31323 e!72121))

(declare-fun res!54816 () Bool)

(assert (=> d!31323 (=> (not res!54816) (not e!72121))))

(declare-fun lt!57300 () List!1653)

(assert (=> d!31323 (= res!54816 (isStrictlySorted!306 lt!57300))))

(assert (=> d!31323 (= lt!57300 e!72118)))

(assert (=> d!31323 (= c!19717 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56522))) (bvslt (_1!1224 (h!2248 (t!5802 (toList!813 lt!56522)))) (_1!1224 lt!56517))))))

(assert (=> d!31323 (isStrictlySorted!306 (t!5802 (toList!813 lt!56522)))))

(assert (=> d!31323 (= (insertStrictlySorted!77 (t!5802 (toList!813 lt!56522)) (_1!1224 lt!56517) (_2!1224 lt!56517)) lt!57300)))

(declare-fun b!110906 () Bool)

(declare-fun res!54815 () Bool)

(assert (=> b!110906 (=> (not res!54815) (not e!72121))))

(assert (=> b!110906 (= res!54815 (containsKey!161 lt!57300 (_1!1224 lt!56517)))))

(declare-fun b!110907 () Bool)

(declare-fun e!72119 () List!1653)

(assert (=> b!110907 (= e!72119 call!11846)))

(declare-fun b!110908 () Bool)

(assert (=> b!110908 (= e!72119 call!11846)))

(declare-fun b!110909 () Bool)

(assert (=> b!110909 (= e!72121 (contains!839 lt!57300 (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun b!110910 () Bool)

(assert (=> b!110910 (= e!72118 call!11845)))

(declare-fun bm!11844 () Bool)

(assert (=> bm!11844 (= call!11847 call!11845)))

(declare-fun b!110911 () Bool)

(assert (=> b!110911 (= c!19715 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56522))) (bvsgt (_1!1224 (h!2248 (t!5802 (toList!813 lt!56522)))) (_1!1224 lt!56517))))))

(assert (=> b!110911 (= e!72122 e!72119)))

(assert (= (and d!31323 c!19717) b!110910))

(assert (= (and d!31323 (not c!19717)) b!110904))

(assert (= (and b!110904 c!19714) b!110903))

(assert (= (and b!110904 (not c!19714)) b!110911))

(assert (= (and b!110911 c!19715) b!110907))

(assert (= (and b!110911 (not c!19715)) b!110908))

(assert (= (or b!110907 b!110908) bm!11843))

(assert (= (or b!110903 bm!11843) bm!11844))

(assert (= (or b!110910 bm!11844) bm!11842))

(assert (= (and bm!11842 c!19716) b!110905))

(assert (= (and bm!11842 (not c!19716)) b!110902))

(assert (= (and d!31323 res!54816) b!110906))

(assert (= (and b!110906 res!54815) b!110909))

(declare-fun m!126265 () Bool)

(assert (=> d!31323 m!126265))

(declare-fun m!126267 () Bool)

(assert (=> d!31323 m!126267))

(declare-fun m!126269 () Bool)

(assert (=> bm!11842 m!126269))

(declare-fun m!126271 () Bool)

(assert (=> b!110909 m!126271))

(declare-fun m!126273 () Bool)

(assert (=> b!110905 m!126273))

(declare-fun m!126275 () Bool)

(assert (=> b!110906 m!126275))

(assert (=> b!110496 d!31323))

(declare-fun d!31325 () Bool)

(declare-fun c!19720 () Bool)

(assert (=> d!31325 (= c!19720 ((_ is Nil!1650) (toList!813 lt!56687)))))

(declare-fun e!72125 () (InoxSet tuple2!2428))

(assert (=> d!31325 (= (content!112 (toList!813 lt!56687)) e!72125)))

(declare-fun b!110916 () Bool)

(assert (=> b!110916 (= e!72125 ((as const (Array tuple2!2428 Bool)) false))))

(declare-fun b!110917 () Bool)

(assert (=> b!110917 (= e!72125 ((_ map or) (store ((as const (Array tuple2!2428 Bool)) false) (h!2248 (toList!813 lt!56687)) true) (content!112 (t!5802 (toList!813 lt!56687)))))))

(assert (= (and d!31325 c!19720) b!110916))

(assert (= (and d!31325 (not c!19720)) b!110917))

(declare-fun m!126277 () Bool)

(assert (=> b!110917 m!126277))

(declare-fun m!126279 () Bool)

(assert (=> b!110917 m!126279))

(assert (=> d!30967 d!31325))

(declare-fun d!31327 () Bool)

(declare-fun res!54817 () Bool)

(declare-fun e!72126 () Bool)

(assert (=> d!31327 (=> res!54817 e!72126)))

(assert (=> d!31327 (= res!54817 (or ((_ is Nil!1650) lt!56914) ((_ is Nil!1650) (t!5802 lt!56914))))))

(assert (=> d!31327 (= (isStrictlySorted!306 lt!56914) e!72126)))

(declare-fun b!110918 () Bool)

(declare-fun e!72127 () Bool)

(assert (=> b!110918 (= e!72126 e!72127)))

(declare-fun res!54818 () Bool)

(assert (=> b!110918 (=> (not res!54818) (not e!72127))))

(assert (=> b!110918 (= res!54818 (bvslt (_1!1224 (h!2248 lt!56914)) (_1!1224 (h!2248 (t!5802 lt!56914)))))))

(declare-fun b!110919 () Bool)

(assert (=> b!110919 (= e!72127 (isStrictlySorted!306 (t!5802 lt!56914)))))

(assert (= (and d!31327 (not res!54817)) b!110918))

(assert (= (and b!110918 res!54818) b!110919))

(declare-fun m!126281 () Bool)

(assert (=> b!110919 m!126281))

(assert (=> d!30997 d!31327))

(declare-fun d!31329 () Bool)

(declare-fun res!54819 () Bool)

(declare-fun e!72128 () Bool)

(assert (=> d!31329 (=> res!54819 e!72128)))

(assert (=> d!31329 (= res!54819 (or ((_ is Nil!1650) (toList!813 (+!149 lt!56522 lt!56528))) ((_ is Nil!1650) (t!5802 (toList!813 (+!149 lt!56522 lt!56528))))))))

(assert (=> d!31329 (= (isStrictlySorted!306 (toList!813 (+!149 lt!56522 lt!56528))) e!72128)))

(declare-fun b!110920 () Bool)

(declare-fun e!72129 () Bool)

(assert (=> b!110920 (= e!72128 e!72129)))

(declare-fun res!54820 () Bool)

(assert (=> b!110920 (=> (not res!54820) (not e!72129))))

(assert (=> b!110920 (= res!54820 (bvslt (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 lt!56528)))) (_1!1224 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56528)))))))))

(declare-fun b!110921 () Bool)

(assert (=> b!110921 (= e!72129 (isStrictlySorted!306 (t!5802 (toList!813 (+!149 lt!56522 lt!56528)))))))

(assert (= (and d!31329 (not res!54819)) b!110920))

(assert (= (and b!110920 res!54820) b!110921))

(declare-fun m!126283 () Bool)

(assert (=> b!110921 m!126283))

(assert (=> d!30997 d!31329))

(declare-fun d!31331 () Bool)

(declare-fun e!72130 () Bool)

(assert (=> d!31331 e!72130))

(declare-fun res!54821 () Bool)

(assert (=> d!31331 (=> res!54821 e!72130)))

(declare-fun lt!57304 () Bool)

(assert (=> d!31331 (= res!54821 (not lt!57304))))

(declare-fun lt!57301 () Bool)

(assert (=> d!31331 (= lt!57304 lt!57301)))

(declare-fun lt!57303 () Unit!3421)

(declare-fun e!72131 () Unit!3421)

(assert (=> d!31331 (= lt!57303 e!72131)))

(declare-fun c!19721 () Bool)

(assert (=> d!31331 (= c!19721 lt!57301)))

(assert (=> d!31331 (= lt!57301 (containsKey!161 (toList!813 lt!57002) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31331 (= (contains!837 lt!57002 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57304)))

(declare-fun b!110922 () Bool)

(declare-fun lt!57302 () Unit!3421)

(assert (=> b!110922 (= e!72131 lt!57302)))

(assert (=> b!110922 (= lt!57302 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!57002) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110922 (isDefined!111 (getValueByKey!157 (toList!813 lt!57002) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110923 () Bool)

(declare-fun Unit!3463 () Unit!3421)

(assert (=> b!110923 (= e!72131 Unit!3463)))

(declare-fun b!110924 () Bool)

(assert (=> b!110924 (= e!72130 (isDefined!111 (getValueByKey!157 (toList!813 lt!57002) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31331 c!19721) b!110922))

(assert (= (and d!31331 (not c!19721)) b!110923))

(assert (= (and d!31331 (not res!54821)) b!110924))

(declare-fun m!126285 () Bool)

(assert (=> d!31331 m!126285))

(declare-fun m!126287 () Bool)

(assert (=> b!110922 m!126287))

(declare-fun m!126289 () Bool)

(assert (=> b!110922 m!126289))

(assert (=> b!110922 m!126289))

(declare-fun m!126291 () Bool)

(assert (=> b!110922 m!126291))

(assert (=> b!110924 m!126289))

(assert (=> b!110924 m!126289))

(assert (=> b!110924 m!126291))

(assert (=> bm!11804 d!31331))

(assert (=> d!30949 d!30947))

(declare-fun d!31333 () Bool)

(assert (=> d!31333 (= (getValueByKey!157 lt!56690 (_1!1224 lt!56528)) (Some!162 (_2!1224 lt!56528)))))

(assert (=> d!31333 true))

(declare-fun _$22!446 () Unit!3421)

(assert (=> d!31333 (= (choose!693 lt!56690 (_1!1224 lt!56528) (_2!1224 lt!56528)) _$22!446)))

(declare-fun bs!4575 () Bool)

(assert (= bs!4575 d!31333))

(assert (=> bs!4575 m!124729))

(assert (=> d!30949 d!31333))

(declare-fun d!31335 () Bool)

(declare-fun res!54822 () Bool)

(declare-fun e!72132 () Bool)

(assert (=> d!31335 (=> res!54822 e!72132)))

(assert (=> d!31335 (= res!54822 (or ((_ is Nil!1650) lt!56690) ((_ is Nil!1650) (t!5802 lt!56690))))))

(assert (=> d!31335 (= (isStrictlySorted!306 lt!56690) e!72132)))

(declare-fun b!110925 () Bool)

(declare-fun e!72133 () Bool)

(assert (=> b!110925 (= e!72132 e!72133)))

(declare-fun res!54823 () Bool)

(assert (=> b!110925 (=> (not res!54823) (not e!72133))))

(assert (=> b!110925 (= res!54823 (bvslt (_1!1224 (h!2248 lt!56690)) (_1!1224 (h!2248 (t!5802 lt!56690)))))))

(declare-fun b!110926 () Bool)

(assert (=> b!110926 (= e!72133 (isStrictlySorted!306 (t!5802 lt!56690)))))

(assert (= (and d!31335 (not res!54822)) b!110925))

(assert (= (and b!110925 res!54823) b!110926))

(declare-fun m!126293 () Bool)

(assert (=> b!110926 m!126293))

(assert (=> d!30949 d!31335))

(declare-fun d!31337 () Bool)

(declare-fun e!72134 () Bool)

(assert (=> d!31337 e!72134))

(declare-fun res!54824 () Bool)

(assert (=> d!31337 (=> res!54824 e!72134)))

(declare-fun lt!57308 () Bool)

(assert (=> d!31337 (= res!54824 (not lt!57308))))

(declare-fun lt!57305 () Bool)

(assert (=> d!31337 (= lt!57308 lt!57305)))

(declare-fun lt!57307 () Unit!3421)

(declare-fun e!72135 () Unit!3421)

(assert (=> d!31337 (= lt!57307 e!72135)))

(declare-fun c!19722 () Bool)

(assert (=> d!31337 (= c!19722 lt!57305)))

(assert (=> d!31337 (= lt!57305 (containsKey!161 (toList!813 lt!56974) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (=> d!31337 (= (contains!837 lt!56974 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) lt!57308)))

(declare-fun b!110927 () Bool)

(declare-fun lt!57306 () Unit!3421)

(assert (=> b!110927 (= e!72135 lt!57306)))

(assert (=> b!110927 (= lt!57306 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56974) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (=> b!110927 (isDefined!111 (getValueByKey!157 (toList!813 lt!56974) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!110928 () Bool)

(declare-fun Unit!3464 () Unit!3421)

(assert (=> b!110928 (= e!72135 Unit!3464)))

(declare-fun b!110929 () Bool)

(assert (=> b!110929 (= e!72134 (isDefined!111 (getValueByKey!157 (toList!813 lt!56974) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(assert (= (and d!31337 c!19722) b!110927))

(assert (= (and d!31337 (not c!19722)) b!110928))

(assert (= (and d!31337 (not res!54824)) b!110929))

(declare-fun m!126295 () Bool)

(assert (=> d!31337 m!126295))

(declare-fun m!126297 () Bool)

(assert (=> b!110927 m!126297))

(assert (=> b!110927 m!125427))

(assert (=> b!110927 m!125427))

(declare-fun m!126299 () Bool)

(assert (=> b!110927 m!126299))

(assert (=> b!110929 m!125427))

(assert (=> b!110929 m!125427))

(assert (=> b!110929 m!126299))

(assert (=> d!31057 d!31337))

(declare-fun b!110932 () Bool)

(declare-fun e!72137 () Option!163)

(assert (=> b!110932 (= e!72137 (getValueByKey!157 (t!5802 lt!56977) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun d!31339 () Bool)

(declare-fun c!19723 () Bool)

(assert (=> d!31339 (= c!19723 (and ((_ is Cons!1649) lt!56977) (= (_1!1224 (h!2248 lt!56977)) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun e!72136 () Option!163)

(assert (=> d!31339 (= (getValueByKey!157 lt!56977 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) e!72136)))

(declare-fun b!110933 () Bool)

(assert (=> b!110933 (= e!72137 None!161)))

(declare-fun b!110931 () Bool)

(assert (=> b!110931 (= e!72136 e!72137)))

(declare-fun c!19724 () Bool)

(assert (=> b!110931 (= c!19724 (and ((_ is Cons!1649) lt!56977) (not (= (_1!1224 (h!2248 lt!56977)) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))))

(declare-fun b!110930 () Bool)

(assert (=> b!110930 (= e!72136 (Some!162 (_2!1224 (h!2248 lt!56977))))))

(assert (= (and d!31339 c!19723) b!110930))

(assert (= (and d!31339 (not c!19723)) b!110931))

(assert (= (and b!110931 c!19724) b!110932))

(assert (= (and b!110931 (not c!19724)) b!110933))

(declare-fun m!126301 () Bool)

(assert (=> b!110932 m!126301))

(assert (=> d!31057 d!31339))

(declare-fun d!31341 () Bool)

(assert (=> d!31341 (= (getValueByKey!157 lt!56977 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) (Some!162 (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun lt!57309 () Unit!3421)

(assert (=> d!31341 (= lt!57309 (choose!693 lt!56977 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun e!72138 () Bool)

(assert (=> d!31341 e!72138))

(declare-fun res!54825 () Bool)

(assert (=> d!31341 (=> (not res!54825) (not e!72138))))

(assert (=> d!31341 (= res!54825 (isStrictlySorted!306 lt!56977))))

(assert (=> d!31341 (= (lemmaContainsTupThenGetReturnValue!75 lt!56977 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) lt!57309)))

(declare-fun b!110934 () Bool)

(declare-fun res!54826 () Bool)

(assert (=> b!110934 (=> (not res!54826) (not e!72138))))

(assert (=> b!110934 (= res!54826 (containsKey!161 lt!56977 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!110935 () Bool)

(assert (=> b!110935 (= e!72138 (contains!839 lt!56977 (tuple2!2429 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(assert (= (and d!31341 res!54825) b!110934))

(assert (= (and b!110934 res!54826) b!110935))

(assert (=> d!31341 m!125421))

(declare-fun m!126303 () Bool)

(assert (=> d!31341 m!126303))

(declare-fun m!126305 () Bool)

(assert (=> d!31341 m!126305))

(declare-fun m!126307 () Bool)

(assert (=> b!110934 m!126307))

(declare-fun m!126309 () Bool)

(assert (=> b!110935 m!126309))

(assert (=> d!31057 d!31341))

(declare-fun e!72141 () List!1653)

(declare-fun c!19726 () Bool)

(declare-fun c!19725 () Bool)

(declare-fun b!110936 () Bool)

(assert (=> b!110936 (= e!72141 (ite c!19725 (t!5802 (toList!813 e!71577)) (ite c!19726 (Cons!1649 (h!2248 (toList!813 e!71577)) (t!5802 (toList!813 e!71577))) Nil!1650)))))

(declare-fun b!110937 () Bool)

(declare-fun e!72143 () List!1653)

(declare-fun call!11850 () List!1653)

(assert (=> b!110937 (= e!72143 call!11850)))

(declare-fun call!11848 () List!1653)

(declare-fun bm!11845 () Bool)

(declare-fun c!19728 () Bool)

(assert (=> bm!11845 (= call!11848 ($colon$colon!82 e!72141 (ite c!19728 (h!2248 (toList!813 e!71577)) (tuple2!2429 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))))

(declare-fun c!19727 () Bool)

(assert (=> bm!11845 (= c!19727 c!19728)))

(declare-fun b!110938 () Bool)

(declare-fun e!72139 () List!1653)

(assert (=> b!110938 (= e!72139 e!72143)))

(assert (=> b!110938 (= c!19725 (and ((_ is Cons!1649) (toList!813 e!71577)) (= (_1!1224 (h!2248 (toList!813 e!71577))) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun b!110939 () Bool)

(assert (=> b!110939 (= e!72141 (insertStrictlySorted!77 (t!5802 (toList!813 e!71577)) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun bm!11846 () Bool)

(declare-fun call!11849 () List!1653)

(assert (=> bm!11846 (= call!11849 call!11850)))

(declare-fun d!31343 () Bool)

(declare-fun e!72142 () Bool)

(assert (=> d!31343 e!72142))

(declare-fun res!54828 () Bool)

(assert (=> d!31343 (=> (not res!54828) (not e!72142))))

(declare-fun lt!57310 () List!1653)

(assert (=> d!31343 (= res!54828 (isStrictlySorted!306 lt!57310))))

(assert (=> d!31343 (= lt!57310 e!72139)))

(assert (=> d!31343 (= c!19728 (and ((_ is Cons!1649) (toList!813 e!71577)) (bvslt (_1!1224 (h!2248 (toList!813 e!71577))) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(assert (=> d!31343 (isStrictlySorted!306 (toList!813 e!71577))))

(assert (=> d!31343 (= (insertStrictlySorted!77 (toList!813 e!71577) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) lt!57310)))

(declare-fun b!110940 () Bool)

(declare-fun res!54827 () Bool)

(assert (=> b!110940 (=> (not res!54827) (not e!72142))))

(assert (=> b!110940 (= res!54827 (containsKey!161 lt!57310 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!110941 () Bool)

(declare-fun e!72140 () List!1653)

(assert (=> b!110941 (= e!72140 call!11849)))

(declare-fun b!110942 () Bool)

(assert (=> b!110942 (= e!72140 call!11849)))

(declare-fun b!110943 () Bool)

(assert (=> b!110943 (= e!72142 (contains!839 lt!57310 (tuple2!2429 (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (_2!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun b!110944 () Bool)

(assert (=> b!110944 (= e!72139 call!11848)))

(declare-fun bm!11847 () Bool)

(assert (=> bm!11847 (= call!11850 call!11848)))

(declare-fun b!110945 () Bool)

(assert (=> b!110945 (= c!19726 (and ((_ is Cons!1649) (toList!813 e!71577)) (bvsgt (_1!1224 (h!2248 (toList!813 e!71577))) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(assert (=> b!110945 (= e!72143 e!72140)))

(assert (= (and d!31343 c!19728) b!110944))

(assert (= (and d!31343 (not c!19728)) b!110938))

(assert (= (and b!110938 c!19725) b!110937))

(assert (= (and b!110938 (not c!19725)) b!110945))

(assert (= (and b!110945 c!19726) b!110941))

(assert (= (and b!110945 (not c!19726)) b!110942))

(assert (= (or b!110941 b!110942) bm!11846))

(assert (= (or b!110937 bm!11846) bm!11847))

(assert (= (or b!110944 bm!11847) bm!11845))

(assert (= (and bm!11845 c!19727) b!110939))

(assert (= (and bm!11845 (not c!19727)) b!110936))

(assert (= (and d!31343 res!54828) b!110940))

(assert (= (and b!110940 res!54827) b!110943))

(declare-fun m!126311 () Bool)

(assert (=> d!31343 m!126311))

(declare-fun m!126313 () Bool)

(assert (=> d!31343 m!126313))

(declare-fun m!126315 () Bool)

(assert (=> bm!11845 m!126315))

(declare-fun m!126317 () Bool)

(assert (=> b!110943 m!126317))

(declare-fun m!126319 () Bool)

(assert (=> b!110939 m!126319))

(declare-fun m!126321 () Bool)

(assert (=> b!110940 m!126321))

(assert (=> d!31057 d!31343))

(declare-fun e!72145 () Option!163)

(declare-fun b!110948 () Bool)

(assert (=> b!110948 (= e!72145 (getValueByKey!157 (t!5802 (toList!813 lt!57125)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun c!19729 () Bool)

(declare-fun d!31345 () Bool)

(assert (=> d!31345 (= c!19729 (and ((_ is Cons!1649) (toList!813 lt!57125)) (= (_1!1224 (h!2248 (toList!813 lt!57125))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun e!72144 () Option!163)

(assert (=> d!31345 (= (getValueByKey!157 (toList!813 lt!57125) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) e!72144)))

(declare-fun b!110949 () Bool)

(assert (=> b!110949 (= e!72145 None!161)))

(declare-fun b!110947 () Bool)

(assert (=> b!110947 (= e!72144 e!72145)))

(declare-fun c!19730 () Bool)

(assert (=> b!110947 (= c!19730 (and ((_ is Cons!1649) (toList!813 lt!57125)) (not (= (_1!1224 (h!2248 (toList!813 lt!57125))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun b!110946 () Bool)

(assert (=> b!110946 (= e!72144 (Some!162 (_2!1224 (h!2248 (toList!813 lt!57125)))))))

(assert (= (and d!31345 c!19729) b!110946))

(assert (= (and d!31345 (not c!19729)) b!110947))

(assert (= (and b!110947 c!19730) b!110948))

(assert (= (and b!110947 (not c!19730)) b!110949))

(declare-fun m!126323 () Bool)

(assert (=> b!110948 m!126323))

(assert (=> b!110632 d!31345))

(declare-fun d!31347 () Bool)

(declare-fun e!72146 () Bool)

(assert (=> d!31347 e!72146))

(declare-fun res!54829 () Bool)

(assert (=> d!31347 (=> res!54829 e!72146)))

(declare-fun lt!57314 () Bool)

(assert (=> d!31347 (= res!54829 (not lt!57314))))

(declare-fun lt!57311 () Bool)

(assert (=> d!31347 (= lt!57314 lt!57311)))

(declare-fun lt!57313 () Unit!3421)

(declare-fun e!72147 () Unit!3421)

(assert (=> d!31347 (= lt!57313 e!72147)))

(declare-fun c!19731 () Bool)

(assert (=> d!31347 (= c!19731 lt!57311)))

(assert (=> d!31347 (= lt!57311 (containsKey!161 (toList!813 lt!56917) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31347 (= (contains!837 lt!56917 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57314)))

(declare-fun b!110950 () Bool)

(declare-fun lt!57312 () Unit!3421)

(assert (=> b!110950 (= e!72147 lt!57312)))

(assert (=> b!110950 (= lt!57312 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56917) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110950 (isDefined!111 (getValueByKey!157 (toList!813 lt!56917) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110951 () Bool)

(declare-fun Unit!3465 () Unit!3421)

(assert (=> b!110951 (= e!72147 Unit!3465)))

(declare-fun b!110952 () Bool)

(assert (=> b!110952 (= e!72146 (isDefined!111 (getValueByKey!157 (toList!813 lt!56917) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31347 c!19731) b!110950))

(assert (= (and d!31347 (not c!19731)) b!110951))

(assert (= (and d!31347 (not res!54829)) b!110952))

(declare-fun m!126325 () Bool)

(assert (=> d!31347 m!126325))

(declare-fun m!126327 () Bool)

(assert (=> b!110950 m!126327))

(declare-fun m!126329 () Bool)

(assert (=> b!110950 m!126329))

(assert (=> b!110950 m!126329))

(declare-fun m!126331 () Bool)

(assert (=> b!110950 m!126331))

(assert (=> b!110952 m!126329))

(assert (=> b!110952 m!126329))

(assert (=> b!110952 m!126331))

(assert (=> d!30999 d!31347))

(assert (=> d!30999 d!30887))

(assert (=> b!110223 d!31281))

(declare-fun bm!11848 () Bool)

(declare-fun call!11851 () (_ BitVec 32))

(assert (=> bm!11848 (= call!11851 (arrayCountValidKeys!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110953 () Bool)

(declare-fun e!72149 () (_ BitVec 32))

(assert (=> b!110953 (= e!72149 #b00000000000000000000000000000000)))

(declare-fun b!110954 () Bool)

(declare-fun e!72148 () (_ BitVec 32))

(assert (=> b!110954 (= e!72148 call!11851)))

(declare-fun d!31349 () Bool)

(declare-fun lt!57315 () (_ BitVec 32))

(assert (=> d!31349 (and (bvsge lt!57315 #b00000000000000000000000000000000) (bvsle lt!57315 (bvsub (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!31349 (= lt!57315 e!72149)))

(declare-fun c!19732 () Bool)

(assert (=> d!31349 (= c!19732 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> d!31349 (and (bvsle #b00000000000000000000000000000000 (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> d!31349 (= (arrayCountValidKeys!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000 (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))) lt!57315)))

(declare-fun b!110955 () Bool)

(assert (=> b!110955 (= e!72149 e!72148)))

(declare-fun c!19733 () Bool)

(assert (=> b!110955 (= c!19733 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!110956 () Bool)

(assert (=> b!110956 (= e!72148 (bvadd #b00000000000000000000000000000001 call!11851))))

(assert (= (and d!31349 c!19732) b!110953))

(assert (= (and d!31349 (not c!19732)) b!110955))

(assert (= (and b!110955 c!19733) b!110956))

(assert (= (and b!110955 (not c!19733)) b!110954))

(assert (= (or b!110956 b!110954) bm!11848))

(declare-fun m!126333 () Bool)

(assert (=> bm!11848 m!126333))

(assert (=> b!110955 m!126071))

(assert (=> b!110955 m!126071))

(assert (=> b!110955 m!126081))

(assert (=> b!110503 d!31349))

(declare-fun d!31351 () Bool)

(assert (=> d!31351 (= (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768)) (not (isEmpty!382 (getValueByKey!157 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768))))))

(declare-fun bs!4576 () Bool)

(assert (= bs!4576 d!31351))

(assert (=> bs!4576 m!125343))

(declare-fun m!126335 () Bool)

(assert (=> bs!4576 m!126335))

(assert (=> b!110452 d!31351))

(declare-fun e!72151 () Option!163)

(declare-fun b!110959 () Bool)

(assert (=> b!110959 (= e!72151 (getValueByKey!157 (t!5802 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) lt!56768))))

(declare-fun d!31353 () Bool)

(declare-fun c!19734 () Bool)

(assert (=> d!31353 (= c!19734 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) lt!56768)))))

(declare-fun e!72150 () Option!163)

(assert (=> d!31353 (= (getValueByKey!157 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768) e!72150)))

(declare-fun b!110960 () Bool)

(assert (=> b!110960 (= e!72151 None!161)))

(declare-fun b!110958 () Bool)

(assert (=> b!110958 (= e!72150 e!72151)))

(declare-fun c!19735 () Bool)

(assert (=> b!110958 (= c!19735 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (not (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) lt!56768))))))

(declare-fun b!110957 () Bool)

(assert (=> b!110957 (= e!72150 (Some!162 (_2!1224 (h!2248 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))))

(assert (= (and d!31353 c!19734) b!110957))

(assert (= (and d!31353 (not c!19734)) b!110958))

(assert (= (and b!110958 c!19735) b!110959))

(assert (= (and b!110958 (not c!19735)) b!110960))

(declare-fun m!126337 () Bool)

(assert (=> b!110959 m!126337))

(assert (=> b!110452 d!31353))

(declare-fun d!31355 () Bool)

(assert (=> d!31355 (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57316 () Unit!3421)

(assert (=> d!31355 (= lt!57316 (choose!702 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72152 () Bool)

(assert (=> d!31355 e!72152))

(declare-fun res!54830 () Bool)

(assert (=> d!31355 (=> (not res!54830) (not e!72152))))

(assert (=> d!31355 (= res!54830 (isStrictlySorted!306 (toList!813 lt!56753)))))

(assert (=> d!31355 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000) lt!57316)))

(declare-fun b!110961 () Bool)

(assert (=> b!110961 (= e!72152 (containsKey!161 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31355 res!54830) b!110961))

(assert (=> d!31355 m!125119))

(assert (=> d!31355 m!125119))

(assert (=> d!31355 m!125121))

(declare-fun m!126339 () Bool)

(assert (=> d!31355 m!126339))

(assert (=> d!31355 m!126033))

(assert (=> b!110961 m!125115))

(assert (=> b!110364 d!31355))

(assert (=> b!110364 d!31195))

(assert (=> b!110364 d!31197))

(declare-fun d!31357 () Bool)

(assert (=> d!31357 (= (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!382 (getValueByKey!157 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4577 () Bool)

(assert (= bs!4577 d!31357))

(assert (=> bs!4577 m!125647))

(declare-fun m!126341 () Bool)

(assert (=> bs!4577 m!126341))

(assert (=> b!110640 d!31357))

(declare-fun b!110964 () Bool)

(declare-fun e!72154 () Option!163)

(assert (=> b!110964 (= e!72154 (getValueByKey!157 (t!5802 (toList!813 lt!56674)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31359 () Bool)

(declare-fun c!19736 () Bool)

(assert (=> d!31359 (= c!19736 (and ((_ is Cons!1649) (toList!813 lt!56674)) (= (_1!1224 (h!2248 (toList!813 lt!56674))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!72153 () Option!163)

(assert (=> d!31359 (= (getValueByKey!157 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000) e!72153)))

(declare-fun b!110965 () Bool)

(assert (=> b!110965 (= e!72154 None!161)))

(declare-fun b!110963 () Bool)

(assert (=> b!110963 (= e!72153 e!72154)))

(declare-fun c!19737 () Bool)

(assert (=> b!110963 (= c!19737 (and ((_ is Cons!1649) (toList!813 lt!56674)) (not (= (_1!1224 (h!2248 (toList!813 lt!56674))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110962 () Bool)

(assert (=> b!110962 (= e!72153 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56674)))))))

(assert (= (and d!31359 c!19736) b!110962))

(assert (= (and d!31359 (not c!19736)) b!110963))

(assert (= (and b!110963 c!19737) b!110964))

(assert (= (and b!110963 (not c!19737)) b!110965))

(declare-fun m!126343 () Bool)

(assert (=> b!110964 m!126343))

(assert (=> b!110640 d!31359))

(declare-fun b!110968 () Bool)

(declare-fun e!72156 () Option!163)

(assert (=> b!110968 (= e!72156 (getValueByKey!157 (t!5802 (t!5802 (toList!813 lt!56695))) (_1!1224 lt!56528)))))

(declare-fun d!31361 () Bool)

(declare-fun c!19738 () Bool)

(assert (=> d!31361 (= c!19738 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56695))) (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56695)))) (_1!1224 lt!56528))))))

(declare-fun e!72155 () Option!163)

(assert (=> d!31361 (= (getValueByKey!157 (t!5802 (toList!813 lt!56695)) (_1!1224 lt!56528)) e!72155)))

(declare-fun b!110969 () Bool)

(assert (=> b!110969 (= e!72156 None!161)))

(declare-fun b!110967 () Bool)

(assert (=> b!110967 (= e!72155 e!72156)))

(declare-fun c!19739 () Bool)

(assert (=> b!110967 (= c!19739 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56695))) (not (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56695)))) (_1!1224 lt!56528)))))))

(declare-fun b!110966 () Bool)

(assert (=> b!110966 (= e!72155 (Some!162 (_2!1224 (h!2248 (t!5802 (toList!813 lt!56695))))))))

(assert (= (and d!31361 c!19738) b!110966))

(assert (= (and d!31361 (not c!19738)) b!110967))

(assert (= (and b!110967 c!19739) b!110968))

(assert (= (and b!110967 (not c!19739)) b!110969))

(declare-fun m!126345 () Bool)

(assert (=> b!110968 m!126345))

(assert (=> b!110647 d!31361))

(declare-fun lt!57317 () Bool)

(declare-fun d!31363 () Bool)

(assert (=> d!31363 (= lt!57317 (select (content!113 (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!72157 () Bool)

(assert (=> d!31363 (= lt!57317 e!72157)))

(declare-fun res!54831 () Bool)

(assert (=> d!31363 (=> (not res!54831) (not e!72157))))

(assert (=> d!31363 (= res!54831 ((_ is Cons!1648) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)))))

(assert (=> d!31363 (= (contains!840 (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!57317)))

(declare-fun b!110970 () Bool)

(declare-fun e!72158 () Bool)

(assert (=> b!110970 (= e!72157 e!72158)))

(declare-fun res!54832 () Bool)

(assert (=> b!110970 (=> res!54832 e!72158)))

(assert (=> b!110970 (= res!54832 (= (h!2247 (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!110971 () Bool)

(assert (=> b!110971 (= e!72158 (contains!840 (t!5801 (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!31363 res!54831) b!110970))

(assert (= (and b!110970 (not res!54832)) b!110971))

(declare-fun m!126347 () Bool)

(assert (=> d!31363 m!126347))

(assert (=> d!31363 m!125593))

(declare-fun m!126349 () Bool)

(assert (=> d!31363 m!126349))

(assert (=> b!110971 m!125593))

(declare-fun m!126351 () Bool)

(assert (=> b!110971 m!126351))

(assert (=> b!110605 d!31363))

(declare-fun b!110974 () Bool)

(declare-fun e!72160 () Option!163)

(assert (=> b!110974 (= e!72160 (getValueByKey!157 (t!5802 (toList!813 lt!56974)) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun d!31365 () Bool)

(declare-fun c!19740 () Bool)

(assert (=> d!31365 (= c!19740 (and ((_ is Cons!1649) (toList!813 lt!56974)) (= (_1!1224 (h!2248 (toList!813 lt!56974))) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun e!72159 () Option!163)

(assert (=> d!31365 (= (getValueByKey!157 (toList!813 lt!56974) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) e!72159)))

(declare-fun b!110975 () Bool)

(assert (=> b!110975 (= e!72160 None!161)))

(declare-fun b!110973 () Bool)

(assert (=> b!110973 (= e!72159 e!72160)))

(declare-fun c!19741 () Bool)

(assert (=> b!110973 (= c!19741 (and ((_ is Cons!1649) (toList!813 lt!56974)) (not (= (_1!1224 (h!2248 (toList!813 lt!56974))) (_1!1224 (ite c!19483 (ite c!19472 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))))

(declare-fun b!110972 () Bool)

(assert (=> b!110972 (= e!72159 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56974)))))))

(assert (= (and d!31365 c!19740) b!110972))

(assert (= (and d!31365 (not c!19740)) b!110973))

(assert (= (and b!110973 c!19741) b!110974))

(assert (= (and b!110973 (not c!19741)) b!110975))

(declare-fun m!126353 () Bool)

(assert (=> b!110974 m!126353))

(assert (=> b!110466 d!31365))

(declare-fun d!31367 () Bool)

(declare-fun e!72161 () Bool)

(assert (=> d!31367 e!72161))

(declare-fun res!54833 () Bool)

(assert (=> d!31367 (=> res!54833 e!72161)))

(declare-fun lt!57321 () Bool)

(assert (=> d!31367 (= res!54833 (not lt!57321))))

(declare-fun lt!57318 () Bool)

(assert (=> d!31367 (= lt!57321 lt!57318)))

(declare-fun lt!57320 () Unit!3421)

(declare-fun e!72162 () Unit!3421)

(assert (=> d!31367 (= lt!57320 e!72162)))

(declare-fun c!19742 () Bool)

(assert (=> d!31367 (= c!19742 lt!57318)))

(assert (=> d!31367 (= lt!57318 (containsKey!161 (toList!813 (map!1294 (_2!1225 lt!57097))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31367 (= (contains!837 (map!1294 (_2!1225 lt!57097)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) lt!57321)))

(declare-fun b!110976 () Bool)

(declare-fun lt!57319 () Unit!3421)

(assert (=> b!110976 (= e!72162 lt!57319)))

(assert (=> b!110976 (= lt!57319 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (map!1294 (_2!1225 lt!57097))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110976 (isDefined!111 (getValueByKey!157 (toList!813 (map!1294 (_2!1225 lt!57097))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110977 () Bool)

(declare-fun Unit!3466 () Unit!3421)

(assert (=> b!110977 (= e!72162 Unit!3466)))

(declare-fun b!110978 () Bool)

(assert (=> b!110978 (= e!72161 (isDefined!111 (getValueByKey!157 (toList!813 (map!1294 (_2!1225 lt!57097))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!31367 c!19742) b!110976))

(assert (= (and d!31367 (not c!19742)) b!110977))

(assert (= (and d!31367 (not res!54833)) b!110978))

(assert (=> d!31367 m!124515))

(declare-fun m!126355 () Bool)

(assert (=> d!31367 m!126355))

(assert (=> b!110976 m!124515))

(declare-fun m!126357 () Bool)

(assert (=> b!110976 m!126357))

(assert (=> b!110976 m!124515))

(declare-fun m!126359 () Bool)

(assert (=> b!110976 m!126359))

(assert (=> b!110976 m!126359))

(declare-fun m!126361 () Bool)

(assert (=> b!110976 m!126361))

(assert (=> b!110978 m!124515))

(assert (=> b!110978 m!126359))

(assert (=> b!110978 m!126359))

(assert (=> b!110978 m!126361))

(assert (=> b!110591 d!31367))

(declare-fun d!31369 () Bool)

(assert (=> d!31369 (= (map!1294 (_2!1225 lt!57097)) (getCurrentListMap!489 (_keys!4341 (_2!1225 lt!57097)) (_values!2610 (_2!1225 lt!57097)) (mask!6795 (_2!1225 lt!57097)) (extraKeys!2424 (_2!1225 lt!57097)) (zeroValue!2498 (_2!1225 lt!57097)) (minValue!2498 (_2!1225 lt!57097)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1225 lt!57097))))))

(declare-fun bs!4578 () Bool)

(assert (= bs!4578 d!31369))

(declare-fun m!126363 () Bool)

(assert (=> bs!4578 m!126363))

(assert (=> b!110591 d!31369))

(assert (=> b!110322 d!31281))

(declare-fun d!31371 () Bool)

(declare-fun res!54834 () Bool)

(declare-fun e!72163 () Bool)

(assert (=> d!31371 (=> res!54834 e!72163)))

(assert (=> d!31371 (= res!54834 (or ((_ is Nil!1650) lt!56839) ((_ is Nil!1650) (t!5802 lt!56839))))))

(assert (=> d!31371 (= (isStrictlySorted!306 lt!56839) e!72163)))

(declare-fun b!110979 () Bool)

(declare-fun e!72164 () Bool)

(assert (=> b!110979 (= e!72163 e!72164)))

(declare-fun res!54835 () Bool)

(assert (=> b!110979 (=> (not res!54835) (not e!72164))))

(assert (=> b!110979 (= res!54835 (bvslt (_1!1224 (h!2248 lt!56839)) (_1!1224 (h!2248 (t!5802 lt!56839)))))))

(declare-fun b!110980 () Bool)

(assert (=> b!110980 (= e!72164 (isStrictlySorted!306 (t!5802 lt!56839)))))

(assert (= (and d!31371 (not res!54834)) b!110979))

(assert (= (and b!110979 res!54835) b!110980))

(declare-fun m!126365 () Bool)

(assert (=> b!110980 m!126365))

(assert (=> d!30951 d!31371))

(declare-fun d!31373 () Bool)

(declare-fun res!54836 () Bool)

(declare-fun e!72165 () Bool)

(assert (=> d!31373 (=> res!54836 e!72165)))

(assert (=> d!31373 (= res!54836 (or ((_ is Nil!1650) (toList!813 lt!56522)) ((_ is Nil!1650) (t!5802 (toList!813 lt!56522)))))))

(assert (=> d!31373 (= (isStrictlySorted!306 (toList!813 lt!56522)) e!72165)))

(declare-fun b!110981 () Bool)

(declare-fun e!72166 () Bool)

(assert (=> b!110981 (= e!72165 e!72166)))

(declare-fun res!54837 () Bool)

(assert (=> b!110981 (=> (not res!54837) (not e!72166))))

(assert (=> b!110981 (= res!54837 (bvslt (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 (h!2248 (t!5802 (toList!813 lt!56522))))))))

(declare-fun b!110982 () Bool)

(assert (=> b!110982 (= e!72166 (isStrictlySorted!306 (t!5802 (toList!813 lt!56522))))))

(assert (= (and d!31373 (not res!54836)) b!110981))

(assert (= (and b!110981 res!54837) b!110982))

(assert (=> b!110982 m!126267))

(assert (=> d!30951 d!31373))

(declare-fun d!31375 () Bool)

(assert (=> d!31375 (= (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110406 d!31375))

(assert (=> d!31033 d!31021))

(assert (=> d!31033 d!31023))

(assert (=> d!31033 d!31035))

(declare-fun d!31377 () Bool)

(declare-fun e!72167 () Bool)

(assert (=> d!31377 e!72167))

(declare-fun res!54838 () Bool)

(assert (=> d!31377 (=> res!54838 e!72167)))

(declare-fun lt!57325 () Bool)

(assert (=> d!31377 (= res!54838 (not lt!57325))))

(declare-fun lt!57322 () Bool)

(assert (=> d!31377 (= lt!57325 lt!57322)))

(declare-fun lt!57324 () Unit!3421)

(declare-fun e!72168 () Unit!3421)

(assert (=> d!31377 (= lt!57324 e!72168)))

(declare-fun c!19743 () Bool)

(assert (=> d!31377 (= c!19743 lt!57322)))

(assert (=> d!31377 (= lt!57322 (containsKey!161 (toList!813 lt!56770) lt!56756))))

(assert (=> d!31377 (= (contains!837 lt!56770 lt!56756) lt!57325)))

(declare-fun b!110983 () Bool)

(declare-fun lt!57323 () Unit!3421)

(assert (=> b!110983 (= e!72168 lt!57323)))

(assert (=> b!110983 (= lt!57323 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56770) lt!56756))))

(assert (=> b!110983 (isDefined!111 (getValueByKey!157 (toList!813 lt!56770) lt!56756))))

(declare-fun b!110984 () Bool)

(declare-fun Unit!3467 () Unit!3421)

(assert (=> b!110984 (= e!72168 Unit!3467)))

(declare-fun b!110985 () Bool)

(assert (=> b!110985 (= e!72167 (isDefined!111 (getValueByKey!157 (toList!813 lt!56770) lt!56756)))))

(assert (= (and d!31377 c!19743) b!110983))

(assert (= (and d!31377 (not c!19743)) b!110984))

(assert (= (and d!31377 (not res!54838)) b!110985))

(declare-fun m!126367 () Bool)

(assert (=> d!31377 m!126367))

(declare-fun m!126369 () Bool)

(assert (=> b!110983 m!126369))

(assert (=> b!110983 m!125307))

(assert (=> b!110983 m!125307))

(declare-fun m!126371 () Bool)

(assert (=> b!110983 m!126371))

(assert (=> b!110985 m!125307))

(assert (=> b!110985 m!125307))

(assert (=> b!110985 m!126371))

(assert (=> d!31033 d!31377))

(declare-fun d!31379 () Bool)

(assert (=> d!31379 (= (apply!100 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56756) (apply!100 lt!56770 lt!56756))))

(assert (=> d!31379 true))

(declare-fun _$34!905 () Unit!3421)

(assert (=> d!31379 (= (choose!699 lt!56770 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56756) _$34!905)))

(declare-fun bs!4579 () Bool)

(assert (= bs!4579 d!31379))

(assert (=> bs!4579 m!124795))

(assert (=> bs!4579 m!124795))

(assert (=> bs!4579 m!124819))

(assert (=> bs!4579 m!124809))

(assert (=> d!31033 d!31379))

(declare-fun b!110988 () Bool)

(declare-fun e!72170 () Option!163)

(assert (=> b!110988 (= e!72170 (getValueByKey!157 (t!5802 (t!5802 (toList!813 lt!56687))) (_1!1224 lt!56528)))))

(declare-fun d!31381 () Bool)

(declare-fun c!19744 () Bool)

(assert (=> d!31381 (= c!19744 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56687))) (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56687)))) (_1!1224 lt!56528))))))

(declare-fun e!72169 () Option!163)

(assert (=> d!31381 (= (getValueByKey!157 (t!5802 (toList!813 lt!56687)) (_1!1224 lt!56528)) e!72169)))

(declare-fun b!110989 () Bool)

(assert (=> b!110989 (= e!72170 None!161)))

(declare-fun b!110987 () Bool)

(assert (=> b!110987 (= e!72169 e!72170)))

(declare-fun c!19745 () Bool)

(assert (=> b!110987 (= c!19745 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56687))) (not (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56687)))) (_1!1224 lt!56528)))))))

(declare-fun b!110986 () Bool)

(assert (=> b!110986 (= e!72169 (Some!162 (_2!1224 (h!2248 (t!5802 (toList!813 lt!56687))))))))

(assert (= (and d!31381 c!19744) b!110986))

(assert (= (and d!31381 (not c!19744)) b!110987))

(assert (= (and b!110987 c!19745) b!110988))

(assert (= (and b!110987 (not c!19745)) b!110989))

(declare-fun m!126373 () Bool)

(assert (=> b!110988 m!126373))

(assert (=> b!110643 d!31381))

(declare-fun d!31383 () Bool)

(declare-fun lt!57326 () Bool)

(assert (=> d!31383 (= lt!57326 (select (content!112 (toList!813 lt!56946)) (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun e!72172 () Bool)

(assert (=> d!31383 (= lt!57326 e!72172)))

(declare-fun res!54840 () Bool)

(assert (=> d!31383 (=> (not res!54840) (not e!72172))))

(assert (=> d!31383 (= res!54840 ((_ is Cons!1649) (toList!813 lt!56946)))))

(assert (=> d!31383 (= (contains!839 (toList!813 lt!56946) (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!57326)))

(declare-fun b!110990 () Bool)

(declare-fun e!72171 () Bool)

(assert (=> b!110990 (= e!72172 e!72171)))

(declare-fun res!54839 () Bool)

(assert (=> b!110990 (=> res!54839 e!72171)))

(assert (=> b!110990 (= res!54839 (= (h!2248 (toList!813 lt!56946)) (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!110991 () Bool)

(assert (=> b!110991 (= e!72171 (contains!839 (t!5802 (toList!813 lt!56946)) (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31383 res!54840) b!110990))

(assert (= (and b!110990 (not res!54839)) b!110991))

(declare-fun m!126375 () Bool)

(assert (=> d!31383 m!126375))

(declare-fun m!126377 () Bool)

(assert (=> d!31383 m!126377))

(declare-fun m!126379 () Bool)

(assert (=> b!110991 m!126379))

(assert (=> b!110449 d!31383))

(declare-fun d!31385 () Bool)

(declare-fun lt!57327 () Bool)

(assert (=> d!31385 (= lt!57327 (select (content!112 (t!5802 (toList!813 lt!56687))) lt!56528))))

(declare-fun e!72174 () Bool)

(assert (=> d!31385 (= lt!57327 e!72174)))

(declare-fun res!54842 () Bool)

(assert (=> d!31385 (=> (not res!54842) (not e!72174))))

(assert (=> d!31385 (= res!54842 ((_ is Cons!1649) (t!5802 (toList!813 lt!56687))))))

(assert (=> d!31385 (= (contains!839 (t!5802 (toList!813 lt!56687)) lt!56528) lt!57327)))

(declare-fun b!110992 () Bool)

(declare-fun e!72173 () Bool)

(assert (=> b!110992 (= e!72174 e!72173)))

(declare-fun res!54841 () Bool)

(assert (=> b!110992 (=> res!54841 e!72173)))

(assert (=> b!110992 (= res!54841 (= (h!2248 (t!5802 (toList!813 lt!56687))) lt!56528))))

(declare-fun b!110993 () Bool)

(assert (=> b!110993 (= e!72173 (contains!839 (t!5802 (t!5802 (toList!813 lt!56687))) lt!56528))))

(assert (= (and d!31385 res!54842) b!110992))

(assert (= (and b!110992 (not res!54841)) b!110993))

(assert (=> d!31385 m!126279))

(declare-fun m!126381 () Bool)

(assert (=> d!31385 m!126381))

(declare-fun m!126383 () Bool)

(assert (=> b!110993 m!126383))

(assert (=> b!110360 d!31385))

(assert (=> d!30955 d!31171))

(declare-fun d!31387 () Bool)

(assert (=> d!31387 (= (isEmpty!381 lt!56917) (isEmpty!383 (toList!813 lt!56917)))))

(declare-fun bs!4580 () Bool)

(assert (= bs!4580 d!31387))

(declare-fun m!126385 () Bool)

(assert (=> bs!4580 m!126385))

(assert (=> b!110398 d!31387))

(assert (=> d!31081 d!31187))

(declare-fun d!31389 () Bool)

(declare-fun e!72177 () Bool)

(assert (=> d!31389 e!72177))

(declare-fun res!54845 () Bool)

(assert (=> d!31389 (=> (not res!54845) (not e!72177))))

(assert (=> d!31389 (= res!54845 (and (bvsge (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000000) (bvslt (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (size!2337 (_keys!4341 newMap!16)))))))

(declare-fun lt!57330 () Unit!3421)

(declare-fun choose!102 ((_ BitVec 64) array!4388 (_ BitVec 32) (_ BitVec 32)) Unit!3421)

(assert (=> d!31389 (= lt!57330 (choose!102 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (mask!6795 newMap!16)))))

(assert (=> d!31389 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31389 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (mask!6795 newMap!16)) lt!57330)))

(declare-fun b!110996 () Bool)

(assert (=> b!110996 (= e!72177 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (mask!6795 newMap!16)))))

(assert (= (and d!31389 res!54845) b!110996))

(assert (=> d!31389 m!124515))

(declare-fun m!126387 () Bool)

(assert (=> d!31389 m!126387))

(assert (=> d!31389 m!124861))

(assert (=> b!110996 m!125567))

(assert (=> b!110996 m!125543))

(assert (=> d!31081 d!31389))

(declare-fun call!11853 () ListLongMap!1595)

(declare-fun bm!11849 () Bool)

(assert (=> bm!11849 (= call!11853 (getCurrentListMapNoExtraKeys!116 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!110997 () Bool)

(declare-fun e!72181 () Bool)

(declare-fun lt!57334 () ListLongMap!1595)

(assert (=> b!110997 (= e!72181 (= (apply!100 lt!57334 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun b!110998 () Bool)

(declare-fun e!72184 () Unit!3421)

(declare-fun Unit!3468 () Unit!3421)

(assert (=> b!110998 (= e!72184 Unit!3468)))

(declare-fun b!110999 () Bool)

(declare-fun e!72190 () Bool)

(assert (=> b!110999 (= e!72190 (validKeyInArray!0 (select (arr!2080 lt!57087) #b00000000000000000000000000000000)))))

(declare-fun b!111000 () Bool)

(declare-fun e!72189 () ListLongMap!1595)

(declare-fun call!11856 () ListLongMap!1595)

(assert (=> b!111000 (= e!72189 (+!149 call!11856 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun bm!11851 () Bool)

(declare-fun call!11857 () Bool)

(assert (=> bm!11851 (= call!11857 (contains!837 lt!57334 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111001 () Bool)

(declare-fun e!72185 () Bool)

(assert (=> b!111001 (= e!72185 (= (apply!100 lt!57334 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!111002 () Bool)

(declare-fun e!72179 () Bool)

(assert (=> b!111002 (= e!72179 e!72185)))

(declare-fun res!54848 () Bool)

(declare-fun call!11858 () Bool)

(assert (=> b!111002 (= res!54848 call!11858)))

(assert (=> b!111002 (=> (not res!54848) (not e!72185))))

(declare-fun b!111003 () Bool)

(declare-fun e!72182 () Bool)

(declare-fun e!72188 () Bool)

(assert (=> b!111003 (= e!72182 e!72188)))

(declare-fun res!54853 () Bool)

(assert (=> b!111003 (=> (not res!54853) (not e!72188))))

(assert (=> b!111003 (= res!54853 (contains!837 lt!57334 (select (arr!2080 lt!57087) #b00000000000000000000000000000000)))))

(assert (=> b!111003 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 lt!57087)))))

(declare-fun b!111004 () Bool)

(declare-fun e!72183 () Bool)

(assert (=> b!111004 (= e!72183 (validKeyInArray!0 (select (arr!2080 lt!57087) #b00000000000000000000000000000000)))))

(declare-fun b!111005 () Bool)

(declare-fun res!54849 () Bool)

(declare-fun e!72180 () Bool)

(assert (=> b!111005 (=> (not res!54849) (not e!72180))))

(assert (=> b!111005 (= res!54849 e!72179)))

(declare-fun c!19746 () Bool)

(assert (=> b!111005 (= c!19746 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111006 () Bool)

(assert (=> b!111006 (= e!72179 (not call!11858))))

(declare-fun b!111007 () Bool)

(declare-fun e!72178 () ListLongMap!1595)

(declare-fun call!11855 () ListLongMap!1595)

(assert (=> b!111007 (= e!72178 call!11855)))

(declare-fun bm!11852 () Bool)

(declare-fun call!11854 () ListLongMap!1595)

(assert (=> bm!11852 (= call!11855 call!11854)))

(declare-fun bm!11853 () Bool)

(declare-fun call!11852 () ListLongMap!1595)

(assert (=> bm!11853 (= call!11852 call!11856)))

(declare-fun b!111008 () Bool)

(assert (=> b!111008 (= e!72178 call!11852)))

(declare-fun b!111009 () Bool)

(declare-fun c!19748 () Bool)

(assert (=> b!111009 (= c!19748 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72186 () ListLongMap!1595)

(assert (=> b!111009 (= e!72186 e!72178)))

(declare-fun c!19747 () Bool)

(declare-fun c!19751 () Bool)

(declare-fun bm!11850 () Bool)

(assert (=> bm!11850 (= call!11856 (+!149 (ite c!19747 call!11853 (ite c!19751 call!11854 call!11855)) (ite (or c!19747 c!19751) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun d!31391 () Bool)

(assert (=> d!31391 e!72180))

(declare-fun res!54847 () Bool)

(assert (=> d!31391 (=> (not res!54847) (not e!72180))))

(assert (=> d!31391 (= res!54847 (or (bvsge #b00000000000000000000000000000000 (size!2337 lt!57087)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 lt!57087)))))))

(declare-fun lt!57346 () ListLongMap!1595)

(assert (=> d!31391 (= lt!57334 lt!57346)))

(declare-fun lt!57347 () Unit!3421)

(assert (=> d!31391 (= lt!57347 e!72184)))

(declare-fun c!19750 () Bool)

(assert (=> d!31391 (= c!19750 e!72183)))

(declare-fun res!54846 () Bool)

(assert (=> d!31391 (=> (not res!54846) (not e!72183))))

(assert (=> d!31391 (= res!54846 (bvslt #b00000000000000000000000000000000 (size!2337 lt!57087)))))

(assert (=> d!31391 (= lt!57346 e!72189)))

(assert (=> d!31391 (= c!19747 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31391 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31391 (= (getCurrentListMap!489 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57334)))

(declare-fun b!111010 () Bool)

(assert (=> b!111010 (= e!72189 e!72186)))

(assert (=> b!111010 (= c!19751 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111011 () Bool)

(declare-fun e!72187 () Bool)

(assert (=> b!111011 (= e!72180 e!72187)))

(declare-fun c!19749 () Bool)

(assert (=> b!111011 (= c!19749 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111012 () Bool)

(assert (=> b!111012 (= e!72187 e!72181)))

(declare-fun res!54850 () Bool)

(assert (=> b!111012 (= res!54850 call!11857)))

(assert (=> b!111012 (=> (not res!54850) (not e!72181))))

(declare-fun bm!11854 () Bool)

(assert (=> bm!11854 (= call!11858 (contains!837 lt!57334 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111013 () Bool)

(declare-fun lt!57350 () Unit!3421)

(assert (=> b!111013 (= e!72184 lt!57350)))

(declare-fun lt!57339 () ListLongMap!1595)

(assert (=> b!111013 (= lt!57339 (getCurrentListMapNoExtraKeys!116 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57343 () (_ BitVec 64))

(assert (=> b!111013 (= lt!57343 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57349 () (_ BitVec 64))

(assert (=> b!111013 (= lt!57349 (select (arr!2080 lt!57087) #b00000000000000000000000000000000))))

(declare-fun lt!57348 () Unit!3421)

(assert (=> b!111013 (= lt!57348 (addStillContains!76 lt!57339 lt!57343 (zeroValue!2498 newMap!16) lt!57349))))

(assert (=> b!111013 (contains!837 (+!149 lt!57339 (tuple2!2429 lt!57343 (zeroValue!2498 newMap!16))) lt!57349)))

(declare-fun lt!57345 () Unit!3421)

(assert (=> b!111013 (= lt!57345 lt!57348)))

(declare-fun lt!57333 () ListLongMap!1595)

(assert (=> b!111013 (= lt!57333 (getCurrentListMapNoExtraKeys!116 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57335 () (_ BitVec 64))

(assert (=> b!111013 (= lt!57335 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57336 () (_ BitVec 64))

(assert (=> b!111013 (= lt!57336 (select (arr!2080 lt!57087) #b00000000000000000000000000000000))))

(declare-fun lt!57331 () Unit!3421)

(assert (=> b!111013 (= lt!57331 (addApplyDifferent!76 lt!57333 lt!57335 (minValue!2498 newMap!16) lt!57336))))

(assert (=> b!111013 (= (apply!100 (+!149 lt!57333 (tuple2!2429 lt!57335 (minValue!2498 newMap!16))) lt!57336) (apply!100 lt!57333 lt!57336))))

(declare-fun lt!57332 () Unit!3421)

(assert (=> b!111013 (= lt!57332 lt!57331)))

(declare-fun lt!57340 () ListLongMap!1595)

(assert (=> b!111013 (= lt!57340 (getCurrentListMapNoExtraKeys!116 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57338 () (_ BitVec 64))

(assert (=> b!111013 (= lt!57338 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57342 () (_ BitVec 64))

(assert (=> b!111013 (= lt!57342 (select (arr!2080 lt!57087) #b00000000000000000000000000000000))))

(declare-fun lt!57341 () Unit!3421)

(assert (=> b!111013 (= lt!57341 (addApplyDifferent!76 lt!57340 lt!57338 (zeroValue!2498 newMap!16) lt!57342))))

(assert (=> b!111013 (= (apply!100 (+!149 lt!57340 (tuple2!2429 lt!57338 (zeroValue!2498 newMap!16))) lt!57342) (apply!100 lt!57340 lt!57342))))

(declare-fun lt!57344 () Unit!3421)

(assert (=> b!111013 (= lt!57344 lt!57341)))

(declare-fun lt!57351 () ListLongMap!1595)

(assert (=> b!111013 (= lt!57351 (getCurrentListMapNoExtraKeys!116 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57352 () (_ BitVec 64))

(assert (=> b!111013 (= lt!57352 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57337 () (_ BitVec 64))

(assert (=> b!111013 (= lt!57337 (select (arr!2080 lt!57087) #b00000000000000000000000000000000))))

(assert (=> b!111013 (= lt!57350 (addApplyDifferent!76 lt!57351 lt!57352 (minValue!2498 newMap!16) lt!57337))))

(assert (=> b!111013 (= (apply!100 (+!149 lt!57351 (tuple2!2429 lt!57352 (minValue!2498 newMap!16))) lt!57337) (apply!100 lt!57351 lt!57337))))

(declare-fun b!111014 () Bool)

(declare-fun res!54852 () Bool)

(assert (=> b!111014 (=> (not res!54852) (not e!72180))))

(assert (=> b!111014 (= res!54852 e!72182)))

(declare-fun res!54854 () Bool)

(assert (=> b!111014 (=> res!54854 e!72182)))

(assert (=> b!111014 (= res!54854 (not e!72190))))

(declare-fun res!54851 () Bool)

(assert (=> b!111014 (=> (not res!54851) (not e!72190))))

(assert (=> b!111014 (= res!54851 (bvslt #b00000000000000000000000000000000 (size!2337 lt!57087)))))

(declare-fun b!111015 () Bool)

(assert (=> b!111015 (= e!72186 call!11852)))

(declare-fun bm!11855 () Bool)

(assert (=> bm!11855 (= call!11854 call!11853)))

(declare-fun b!111016 () Bool)

(assert (=> b!111016 (= e!72187 (not call!11857))))

(declare-fun b!111017 () Bool)

(assert (=> b!111017 (= e!72188 (= (apply!100 lt!57334 (select (arr!2080 lt!57087) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 lt!57089) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111017 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 lt!57089)))))

(assert (=> b!111017 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 lt!57087)))))

(assert (= (and d!31391 c!19747) b!111000))

(assert (= (and d!31391 (not c!19747)) b!111010))

(assert (= (and b!111010 c!19751) b!111015))

(assert (= (and b!111010 (not c!19751)) b!111009))

(assert (= (and b!111009 c!19748) b!111008))

(assert (= (and b!111009 (not c!19748)) b!111007))

(assert (= (or b!111008 b!111007) bm!11852))

(assert (= (or b!111015 bm!11852) bm!11855))

(assert (= (or b!111015 b!111008) bm!11853))

(assert (= (or b!111000 bm!11855) bm!11849))

(assert (= (or b!111000 bm!11853) bm!11850))

(assert (= (and d!31391 res!54846) b!111004))

(assert (= (and d!31391 c!19750) b!111013))

(assert (= (and d!31391 (not c!19750)) b!110998))

(assert (= (and d!31391 res!54847) b!111014))

(assert (= (and b!111014 res!54851) b!110999))

(assert (= (and b!111014 (not res!54854)) b!111003))

(assert (= (and b!111003 res!54853) b!111017))

(assert (= (and b!111014 res!54852) b!111005))

(assert (= (and b!111005 c!19746) b!111002))

(assert (= (and b!111005 (not c!19746)) b!111006))

(assert (= (and b!111002 res!54848) b!111001))

(assert (= (or b!111002 b!111006) bm!11854))

(assert (= (and b!111005 res!54849) b!111011))

(assert (= (and b!111011 c!19749) b!111012))

(assert (= (and b!111011 (not c!19749)) b!111016))

(assert (= (and b!111012 res!54850) b!110997))

(assert (= (or b!111012 b!111016) bm!11851))

(declare-fun b_lambda!4995 () Bool)

(assert (=> (not b_lambda!4995) (not b!111017)))

(assert (=> b!111017 t!5810))

(declare-fun b_and!6853 () Bool)

(assert (= b_and!6849 (and (=> t!5810 result!3549) b_and!6853)))

(assert (=> b!111017 t!5812))

(declare-fun b_and!6855 () Bool)

(assert (= b_and!6851 (and (=> t!5812 result!3551) b_and!6855)))

(declare-fun m!126389 () Bool)

(assert (=> b!111001 m!126389))

(declare-fun m!126391 () Bool)

(assert (=> b!111000 m!126391))

(declare-fun m!126393 () Bool)

(assert (=> b!111003 m!126393))

(assert (=> b!111003 m!126393))

(declare-fun m!126395 () Bool)

(assert (=> b!111003 m!126395))

(declare-fun m!126397 () Bool)

(assert (=> bm!11850 m!126397))

(assert (=> d!31391 m!124861))

(declare-fun m!126399 () Bool)

(assert (=> b!111013 m!126399))

(declare-fun m!126401 () Bool)

(assert (=> b!111013 m!126401))

(declare-fun m!126403 () Bool)

(assert (=> b!111013 m!126403))

(assert (=> b!111013 m!126393))

(declare-fun m!126405 () Bool)

(assert (=> b!111013 m!126405))

(declare-fun m!126407 () Bool)

(assert (=> b!111013 m!126407))

(declare-fun m!126409 () Bool)

(assert (=> b!111013 m!126409))

(assert (=> b!111013 m!126409))

(declare-fun m!126411 () Bool)

(assert (=> b!111013 m!126411))

(declare-fun m!126413 () Bool)

(assert (=> b!111013 m!126413))

(declare-fun m!126415 () Bool)

(assert (=> b!111013 m!126415))

(declare-fun m!126417 () Bool)

(assert (=> b!111013 m!126417))

(declare-fun m!126419 () Bool)

(assert (=> b!111013 m!126419))

(declare-fun m!126421 () Bool)

(assert (=> b!111013 m!126421))

(assert (=> b!111013 m!126419))

(declare-fun m!126423 () Bool)

(assert (=> b!111013 m!126423))

(declare-fun m!126425 () Bool)

(assert (=> b!111013 m!126425))

(assert (=> b!111013 m!126401))

(declare-fun m!126427 () Bool)

(assert (=> b!111013 m!126427))

(assert (=> b!111013 m!126407))

(declare-fun m!126429 () Bool)

(assert (=> b!111013 m!126429))

(assert (=> b!110999 m!126393))

(assert (=> b!110999 m!126393))

(declare-fun m!126431 () Bool)

(assert (=> b!110999 m!126431))

(assert (=> bm!11849 m!126405))

(declare-fun m!126433 () Bool)

(assert (=> bm!11854 m!126433))

(assert (=> b!111004 m!126393))

(assert (=> b!111004 m!126393))

(assert (=> b!111004 m!126431))

(declare-fun m!126435 () Bool)

(assert (=> bm!11851 m!126435))

(assert (=> b!111017 m!126393))

(declare-fun m!126437 () Bool)

(assert (=> b!111017 m!126437))

(assert (=> b!111017 m!124937))

(declare-fun m!126439 () Bool)

(assert (=> b!111017 m!126439))

(assert (=> b!111017 m!124937))

(declare-fun m!126441 () Bool)

(assert (=> b!111017 m!126441))

(assert (=> b!111017 m!126393))

(assert (=> b!111017 m!126439))

(declare-fun m!126443 () Bool)

(assert (=> b!110997 m!126443))

(assert (=> d!31081 d!31391))

(declare-fun d!31393 () Bool)

(assert (=> d!31393 (arrayContainsKey!0 lt!57109 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!57353 () Unit!3421)

(assert (=> d!31393 (= lt!57353 (choose!13 lt!57109 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639))))))

(assert (=> d!31393 (bvsge (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000000)))

(assert (=> d!31393 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!57109 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639))) lt!57353)))

(declare-fun bs!4581 () Bool)

(assert (= bs!4581 d!31393))

(assert (=> bs!4581 m!124515))

(assert (=> bs!4581 m!125573))

(assert (=> bs!4581 m!124515))

(declare-fun m!126445 () Bool)

(assert (=> bs!4581 m!126445))

(assert (=> d!31081 d!31393))

(assert (=> d!31081 d!30955))

(assert (=> d!31081 d!30875))

(declare-fun b!111028 () Bool)

(declare-fun e!72195 () Bool)

(assert (=> b!111028 (= e!72195 (bvslt (size!2337 (_keys!4341 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!111027 () Bool)

(declare-fun res!54864 () Bool)

(assert (=> b!111027 (=> (not res!54864) (not e!72195))))

(assert (=> b!111027 (= res!54864 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!31395 () Bool)

(declare-fun e!72196 () Bool)

(assert (=> d!31395 e!72196))

(declare-fun res!54865 () Bool)

(assert (=> d!31395 (=> (not res!54865) (not e!72196))))

(assert (=> d!31395 (= res!54865 (and (bvsge (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000000) (bvslt (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (size!2337 (_keys!4341 newMap!16)))))))

(declare-fun lt!57356 () Unit!3421)

(declare-fun choose!1 (array!4388 (_ BitVec 32) (_ BitVec 64)) Unit!3421)

(assert (=> d!31395 (= lt!57356 (choose!1 (_keys!4341 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31395 e!72195))

(declare-fun res!54866 () Bool)

(assert (=> d!31395 (=> (not res!54866) (not e!72195))))

(assert (=> d!31395 (= res!54866 (and (bvsge (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000000) (bvslt (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (size!2337 (_keys!4341 newMap!16)))))))

(assert (=> d!31395 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4341 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) lt!57356)))

(declare-fun b!111026 () Bool)

(declare-fun res!54863 () Bool)

(assert (=> b!111026 (=> (not res!54863) (not e!72195))))

(assert (=> b!111026 (= res!54863 (not (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639))))))))

(declare-fun b!111029 () Bool)

(assert (=> b!111029 (= e!72196 (= (arrayCountValidKeys!0 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!31395 res!54866) b!111026))

(assert (= (and b!111026 res!54863) b!111027))

(assert (= (and b!111027 res!54864) b!111028))

(assert (= (and d!31395 res!54865) b!111029))

(assert (=> b!111027 m!124515))

(assert (=> b!111027 m!124841))

(assert (=> d!31395 m!124515))

(declare-fun m!126447 () Bool)

(assert (=> d!31395 m!126447))

(declare-fun m!126449 () Bool)

(assert (=> b!111026 m!126449))

(assert (=> b!111026 m!126449))

(declare-fun m!126451 () Bool)

(assert (=> b!111026 m!126451))

(assert (=> b!111029 m!125567))

(assert (=> b!111029 m!125561))

(assert (=> b!111029 m!124689))

(assert (=> d!31081 d!31395))

(declare-fun d!31397 () Bool)

(declare-fun e!72197 () Bool)

(assert (=> d!31397 e!72197))

(declare-fun res!54867 () Bool)

(assert (=> d!31397 (=> (not res!54867) (not e!72197))))

(assert (=> d!31397 (= res!54867 (and (bvsge (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000000) (bvslt (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (size!2337 lt!57087))))))

(declare-fun lt!57357 () Unit!3421)

(assert (=> d!31397 (= lt!57357 (choose!697 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (defaultEntry!2627 newMap!16)))))

(assert (=> d!31397 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31397 (= (lemmaValidKeyInArrayIsInListMap!107 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (defaultEntry!2627 newMap!16)) lt!57357)))

(declare-fun b!111030 () Bool)

(assert (=> b!111030 (= e!72197 (contains!837 (getCurrentListMap!489 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2080 lt!57087) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)))))))

(assert (= (and d!31397 res!54867) b!111030))

(declare-fun m!126453 () Bool)

(assert (=> d!31397 m!126453))

(assert (=> d!31397 m!124861))

(assert (=> b!111030 m!125545))

(declare-fun m!126455 () Bool)

(assert (=> b!111030 m!126455))

(assert (=> b!111030 m!125545))

(assert (=> b!111030 m!126455))

(declare-fun m!126457 () Bool)

(assert (=> b!111030 m!126457))

(assert (=> d!31081 d!31397))

(declare-fun b!111031 () Bool)

(declare-fun e!72200 () Bool)

(declare-fun call!11859 () Bool)

(assert (=> b!111031 (= e!72200 call!11859)))

(declare-fun b!111032 () Bool)

(declare-fun e!72199 () Bool)

(assert (=> b!111032 (= e!72199 e!72200)))

(declare-fun lt!57360 () (_ BitVec 64))

(assert (=> b!111032 (= lt!57360 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57358 () Unit!3421)

(assert (=> b!111032 (= lt!57358 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) lt!57360 #b00000000000000000000000000000000))))

(assert (=> b!111032 (arrayContainsKey!0 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) lt!57360 #b00000000000000000000000000000000)))

(declare-fun lt!57359 () Unit!3421)

(assert (=> b!111032 (= lt!57359 lt!57358)))

(declare-fun res!54869 () Bool)

(assert (=> b!111032 (= res!54869 (= (seekEntryOrOpen!0 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000) (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (mask!6795 newMap!16)) (Found!271 #b00000000000000000000000000000000)))))

(assert (=> b!111032 (=> (not res!54869) (not e!72200))))

(declare-fun bm!11856 () Bool)

(assert (=> bm!11856 (= call!11859 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (mask!6795 newMap!16)))))

(declare-fun b!111033 () Bool)

(declare-fun e!72198 () Bool)

(assert (=> b!111033 (= e!72198 e!72199)))

(declare-fun c!19752 () Bool)

(assert (=> b!111033 (= c!19752 (validKeyInArray!0 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!31399 () Bool)

(declare-fun res!54868 () Bool)

(assert (=> d!31399 (=> res!54868 e!72198)))

(assert (=> d!31399 (= res!54868 (bvsge #b00000000000000000000000000000000 (size!2337 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))))))

(assert (=> d!31399 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (mask!6795 newMap!16)) e!72198)))

(declare-fun b!111034 () Bool)

(assert (=> b!111034 (= e!72199 call!11859)))

(assert (= (and d!31399 (not res!54868)) b!111033))

(assert (= (and b!111033 c!19752) b!111032))

(assert (= (and b!111033 (not c!19752)) b!111034))

(assert (= (and b!111032 res!54869) b!111031))

(assert (= (or b!111031 b!111034) bm!11856))

(declare-fun m!126459 () Bool)

(assert (=> b!111032 m!126459))

(declare-fun m!126461 () Bool)

(assert (=> b!111032 m!126461))

(declare-fun m!126463 () Bool)

(assert (=> b!111032 m!126463))

(assert (=> b!111032 m!126459))

(declare-fun m!126465 () Bool)

(assert (=> b!111032 m!126465))

(declare-fun m!126467 () Bool)

(assert (=> bm!11856 m!126467))

(assert (=> b!111033 m!126459))

(assert (=> b!111033 m!126459))

(declare-fun m!126469 () Bool)

(assert (=> b!111033 m!126469))

(assert (=> d!31081 d!31399))

(declare-fun d!31401 () Bool)

(declare-fun e!72203 () Bool)

(assert (=> d!31401 e!72203))

(declare-fun res!54872 () Bool)

(assert (=> d!31401 (=> (not res!54872) (not e!72203))))

(assert (=> d!31401 (= res!54872 (and (bvsge (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000000) (bvslt (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (size!2337 (_keys!4341 newMap!16)))))))

(declare-fun lt!57363 () Unit!3421)

(declare-fun choose!41 (array!4388 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1652) Unit!3421)

(assert (=> d!31401 (= lt!57363 (choose!41 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) lt!57108 lt!57104))))

(assert (=> d!31401 (bvslt (size!2337 (_keys!4341 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!31401 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) lt!57108 lt!57104) lt!57363)))

(declare-fun b!111037 () Bool)

(assert (=> b!111037 (= e!72203 (arrayNoDuplicates!0 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) lt!57108 lt!57104))))

(assert (= (and d!31401 res!54872) b!111037))

(assert (=> d!31401 m!124515))

(declare-fun m!126471 () Bool)

(assert (=> d!31401 m!126471))

(assert (=> b!111037 m!125567))

(assert (=> b!111037 m!125569))

(assert (=> d!31081 d!31401))

(declare-fun d!31403 () Bool)

(assert (=> d!31403 (= (arrayCountValidKeys!0 lt!57103 (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (bvadd (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!57366 () Unit!3421)

(declare-fun choose!2 (array!4388 (_ BitVec 32)) Unit!3421)

(assert (=> d!31403 (= lt!57366 (choose!2 lt!57103 (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639))))))

(declare-fun e!72206 () Bool)

(assert (=> d!31403 e!72206))

(declare-fun res!54877 () Bool)

(assert (=> d!31403 (=> (not res!54877) (not e!72206))))

(assert (=> d!31403 (= res!54877 (and (bvsge (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000000) (bvslt (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (size!2337 lt!57103))))))

(assert (=> d!31403 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!57103 (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639))) lt!57366)))

(declare-fun b!111042 () Bool)

(declare-fun res!54878 () Bool)

(assert (=> b!111042 (=> (not res!54878) (not e!72206))))

(assert (=> b!111042 (= res!54878 (validKeyInArray!0 (select (arr!2080 lt!57103) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)))))))

(declare-fun b!111043 () Bool)

(assert (=> b!111043 (= e!72206 (bvslt (size!2337 lt!57103) #b01111111111111111111111111111111))))

(assert (= (and d!31403 res!54877) b!111042))

(assert (= (and b!111042 res!54878) b!111043))

(assert (=> d!31403 m!125555))

(declare-fun m!126473 () Bool)

(assert (=> d!31403 m!126473))

(declare-fun m!126475 () Bool)

(assert (=> b!111042 m!126475))

(assert (=> b!111042 m!126475))

(declare-fun m!126477 () Bool)

(assert (=> b!111042 m!126477))

(assert (=> d!31081 d!31403))

(declare-fun d!31405 () Bool)

(declare-fun res!54879 () Bool)

(declare-fun e!72207 () Bool)

(assert (=> d!31405 (=> res!54879 e!72207)))

(assert (=> d!31405 (= res!54879 (= (select (arr!2080 lt!57109) #b00000000000000000000000000000000) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31405 (= (arrayContainsKey!0 lt!57109 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000) e!72207)))

(declare-fun b!111044 () Bool)

(declare-fun e!72208 () Bool)

(assert (=> b!111044 (= e!72207 e!72208)))

(declare-fun res!54880 () Bool)

(assert (=> b!111044 (=> (not res!54880) (not e!72208))))

(assert (=> b!111044 (= res!54880 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 lt!57109)))))

(declare-fun b!111045 () Bool)

(assert (=> b!111045 (= e!72208 (arrayContainsKey!0 lt!57109 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!31405 (not res!54879)) b!111044))

(assert (= (and b!111044 res!54880) b!111045))

(declare-fun m!126479 () Bool)

(assert (=> d!31405 m!126479))

(assert (=> b!111045 m!124515))

(declare-fun m!126481 () Bool)

(assert (=> b!111045 m!126481))

(assert (=> d!31081 d!31405))

(declare-fun b!111046 () Bool)

(declare-fun e!72210 () Bool)

(declare-fun e!72211 () Bool)

(assert (=> b!111046 (= e!72210 e!72211)))

(declare-fun res!54881 () Bool)

(assert (=> b!111046 (=> (not res!54881) (not e!72211))))

(declare-fun e!72209 () Bool)

(assert (=> b!111046 (= res!54881 (not e!72209))))

(declare-fun res!54882 () Bool)

(assert (=> b!111046 (=> (not res!54882) (not e!72209))))

(assert (=> b!111046 (= res!54882 (validKeyInArray!0 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) lt!57108)))))

(declare-fun d!31407 () Bool)

(declare-fun res!54883 () Bool)

(assert (=> d!31407 (=> res!54883 e!72210)))

(assert (=> d!31407 (= res!54883 (bvsge lt!57108 (size!2337 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))))))

(assert (=> d!31407 (= (arrayNoDuplicates!0 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) lt!57108 lt!57104) e!72210)))

(declare-fun b!111047 () Bool)

(assert (=> b!111047 (= e!72209 (contains!840 lt!57104 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) lt!57108)))))

(declare-fun b!111048 () Bool)

(declare-fun e!72212 () Bool)

(assert (=> b!111048 (= e!72211 e!72212)))

(declare-fun c!19753 () Bool)

(assert (=> b!111048 (= c!19753 (validKeyInArray!0 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) lt!57108)))))

(declare-fun call!11860 () Bool)

(declare-fun bm!11857 () Bool)

(assert (=> bm!11857 (= call!11860 (arrayNoDuplicates!0 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (bvadd lt!57108 #b00000000000000000000000000000001) (ite c!19753 (Cons!1648 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) lt!57108) lt!57104) lt!57104)))))

(declare-fun b!111049 () Bool)

(assert (=> b!111049 (= e!72212 call!11860)))

(declare-fun b!111050 () Bool)

(assert (=> b!111050 (= e!72212 call!11860)))

(assert (= (and d!31407 (not res!54883)) b!111046))

(assert (= (and b!111046 res!54882) b!111047))

(assert (= (and b!111046 res!54881) b!111048))

(assert (= (and b!111048 c!19753) b!111050))

(assert (= (and b!111048 (not c!19753)) b!111049))

(assert (= (or b!111050 b!111049) bm!11857))

(declare-fun m!126483 () Bool)

(assert (=> b!111046 m!126483))

(assert (=> b!111046 m!126483))

(declare-fun m!126485 () Bool)

(assert (=> b!111046 m!126485))

(assert (=> b!111047 m!126483))

(assert (=> b!111047 m!126483))

(declare-fun m!126487 () Bool)

(assert (=> b!111047 m!126487))

(assert (=> b!111048 m!126483))

(assert (=> b!111048 m!126483))

(assert (=> b!111048 m!126485))

(assert (=> bm!11857 m!126483))

(declare-fun m!126489 () Bool)

(assert (=> bm!11857 m!126489))

(assert (=> d!31081 d!31407))

(assert (=> d!31081 d!31311))

(declare-fun bm!11858 () Bool)

(declare-fun call!11861 () (_ BitVec 32))

(assert (=> bm!11858 (= call!11861 (arrayCountValidKeys!0 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!111051 () Bool)

(declare-fun e!72214 () (_ BitVec 32))

(assert (=> b!111051 (= e!72214 #b00000000000000000000000000000000)))

(declare-fun b!111052 () Bool)

(declare-fun e!72213 () (_ BitVec 32))

(assert (=> b!111052 (= e!72213 call!11861)))

(declare-fun lt!57367 () (_ BitVec 32))

(declare-fun d!31409 () Bool)

(assert (=> d!31409 (and (bvsge lt!57367 #b00000000000000000000000000000000) (bvsle lt!57367 (bvsub (size!2337 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!31409 (= lt!57367 e!72214)))

(declare-fun c!19754 () Bool)

(assert (=> d!31409 (= c!19754 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31409 (and (bvsle #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2337 (_keys!4341 newMap!16)) (size!2337 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))))))

(assert (=> d!31409 (= (arrayCountValidKeys!0 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) lt!57367)))

(declare-fun b!111053 () Bool)

(assert (=> b!111053 (= e!72214 e!72213)))

(declare-fun c!19755 () Bool)

(assert (=> b!111053 (= c!19755 (validKeyInArray!0 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!111054 () Bool)

(assert (=> b!111054 (= e!72213 (bvadd #b00000000000000000000000000000001 call!11861))))

(assert (= (and d!31409 c!19754) b!111051))

(assert (= (and d!31409 (not c!19754)) b!111053))

(assert (= (and b!111053 c!19755) b!111054))

(assert (= (and b!111053 (not c!19755)) b!111052))

(assert (= (or b!111054 b!111052) bm!11858))

(declare-fun m!126491 () Bool)

(assert (=> bm!11858 m!126491))

(assert (=> b!111053 m!126459))

(assert (=> b!111053 m!126459))

(assert (=> b!111053 m!126469))

(assert (=> d!31081 d!31409))

(assert (=> d!31081 d!31077))

(declare-fun call!11862 () (_ BitVec 32))

(declare-fun bm!11859 () Bool)

(assert (=> bm!11859 (= call!11862 (arrayCountValidKeys!0 lt!57103 (bvadd (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000001) (bvadd (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000001)))))

(declare-fun b!111055 () Bool)

(declare-fun e!72216 () (_ BitVec 32))

(assert (=> b!111055 (= e!72216 #b00000000000000000000000000000000)))

(declare-fun b!111056 () Bool)

(declare-fun e!72215 () (_ BitVec 32))

(assert (=> b!111056 (= e!72215 call!11862)))

(declare-fun d!31411 () Bool)

(declare-fun lt!57368 () (_ BitVec 32))

(assert (=> d!31411 (and (bvsge lt!57368 #b00000000000000000000000000000000) (bvsle lt!57368 (bvsub (size!2337 lt!57103) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)))))))

(assert (=> d!31411 (= lt!57368 e!72216)))

(declare-fun c!19756 () Bool)

(assert (=> d!31411 (= c!19756 (bvsge (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (bvadd (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000001)))))

(assert (=> d!31411 (and (bvsle (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (bvadd (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000001)) (bvsge (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000001) (size!2337 lt!57103)))))

(assert (=> d!31411 (= (arrayCountValidKeys!0 lt!57103 (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (bvadd (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000001)) lt!57368)))

(declare-fun b!111057 () Bool)

(assert (=> b!111057 (= e!72216 e!72215)))

(declare-fun c!19757 () Bool)

(assert (=> b!111057 (= c!19757 (validKeyInArray!0 (select (arr!2080 lt!57103) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)))))))

(declare-fun b!111058 () Bool)

(assert (=> b!111058 (= e!72215 (bvadd #b00000000000000000000000000000001 call!11862))))

(assert (= (and d!31411 c!19756) b!111055))

(assert (= (and d!31411 (not c!19756)) b!111057))

(assert (= (and b!111057 c!19757) b!111058))

(assert (= (and b!111057 (not c!19757)) b!111056))

(assert (= (or b!111058 b!111056) bm!11859))

(declare-fun m!126493 () Bool)

(assert (=> bm!11859 m!126493))

(assert (=> b!111057 m!126475))

(assert (=> b!111057 m!126475))

(assert (=> b!111057 m!126477))

(assert (=> d!31081 d!31411))

(assert (=> d!31081 d!31085))

(declare-fun d!31413 () Bool)

(declare-fun e!72217 () Bool)

(assert (=> d!31413 e!72217))

(declare-fun res!54884 () Bool)

(assert (=> d!31413 (=> res!54884 e!72217)))

(declare-fun lt!57372 () Bool)

(assert (=> d!31413 (= res!54884 (not lt!57372))))

(declare-fun lt!57369 () Bool)

(assert (=> d!31413 (= lt!57372 lt!57369)))

(declare-fun lt!57371 () Unit!3421)

(declare-fun e!72218 () Unit!3421)

(assert (=> d!31413 (= lt!57371 e!72218)))

(declare-fun c!19758 () Bool)

(assert (=> d!31413 (= c!19758 lt!57369)))

(assert (=> d!31413 (= lt!57369 (containsKey!161 (toList!813 (getCurrentListMap!489 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)))))))

(assert (=> d!31413 (= (contains!837 (getCurrentListMap!489 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)))) lt!57372)))

(declare-fun b!111059 () Bool)

(declare-fun lt!57370 () Unit!3421)

(assert (=> b!111059 (= e!72218 lt!57370)))

(assert (=> b!111059 (= lt!57370 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (getCurrentListMap!489 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)))))))

(assert (=> b!111059 (isDefined!111 (getValueByKey!157 (toList!813 (getCurrentListMap!489 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)))))))

(declare-fun b!111060 () Bool)

(declare-fun Unit!3469 () Unit!3421)

(assert (=> b!111060 (= e!72218 Unit!3469)))

(declare-fun b!111061 () Bool)

(assert (=> b!111061 (= e!72217 (isDefined!111 (getValueByKey!157 (toList!813 (getCurrentListMap!489 lt!57087 lt!57089 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639))))))))

(assert (= (and d!31413 c!19758) b!111059))

(assert (= (and d!31413 (not c!19758)) b!111060))

(assert (= (and d!31413 (not res!54884)) b!111061))

(assert (=> d!31413 m!125547))

(declare-fun m!126495 () Bool)

(assert (=> d!31413 m!126495))

(assert (=> b!111059 m!125547))

(declare-fun m!126497 () Bool)

(assert (=> b!111059 m!126497))

(assert (=> b!111059 m!125547))

(declare-fun m!126499 () Bool)

(assert (=> b!111059 m!126499))

(assert (=> b!111059 m!126499))

(declare-fun m!126501 () Bool)

(assert (=> b!111059 m!126501))

(assert (=> b!111061 m!125547))

(assert (=> b!111061 m!126499))

(assert (=> b!111061 m!126499))

(assert (=> b!111061 m!126501))

(assert (=> d!31081 d!31413))

(declare-fun d!31415 () Bool)

(declare-fun e!72221 () Bool)

(assert (=> d!31415 e!72221))

(declare-fun res!54887 () Bool)

(assert (=> d!31415 (=> (not res!54887) (not e!72221))))

(assert (=> d!31415 (= res!54887 (and (bvsge (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) #b00000000000000000000000000000000) (bvslt (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (size!2337 (_keys!4341 newMap!16))) (bvslt (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (size!2338 (_values!2610 newMap!16)))))))

(declare-fun lt!57375 () Unit!3421)

(declare-fun choose!704 (array!4388 array!4390 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) (_ BitVec 64) V!3243 Int) Unit!3421)

(assert (=> d!31415 (= lt!57375 (choose!704 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 (defaultEntry!2627 newMap!16)))))

(assert (=> d!31415 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31415 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!32 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527 (defaultEntry!2627 newMap!16)) lt!57375)))

(declare-fun b!111064 () Bool)

(assert (=> b!111064 (= e!72221 (= (+!149 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (getCurrentListMap!489 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))))))

(assert (= (and d!31415 res!54887) b!111064))

(assert (=> d!31415 m!124515))

(declare-fun m!126503 () Bool)

(assert (=> d!31415 m!126503))

(assert (=> d!31415 m!124861))

(assert (=> b!111064 m!125567))

(assert (=> b!111064 m!124677))

(assert (=> b!111064 m!125575))

(assert (=> b!111064 m!125557))

(assert (=> b!111064 m!124677))

(assert (=> b!111064 m!125273))

(assert (=> d!31081 d!31415))

(declare-fun bm!11860 () Bool)

(declare-fun call!11864 () ListLongMap!1595)

(assert (=> bm!11860 (= call!11864 (getCurrentListMapNoExtraKeys!116 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!111065 () Bool)

(declare-fun e!72225 () Bool)

(declare-fun lt!57379 () ListLongMap!1595)

(assert (=> b!111065 (= e!72225 (= (apply!100 lt!57379 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun b!111066 () Bool)

(declare-fun e!72228 () Unit!3421)

(declare-fun Unit!3470 () Unit!3421)

(assert (=> b!111066 (= e!72228 Unit!3470)))

(declare-fun b!111067 () Bool)

(declare-fun e!72234 () Bool)

(assert (=> b!111067 (= e!72234 (validKeyInArray!0 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!111068 () Bool)

(declare-fun e!72233 () ListLongMap!1595)

(declare-fun call!11867 () ListLongMap!1595)

(assert (=> b!111068 (= e!72233 (+!149 call!11867 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun bm!11862 () Bool)

(declare-fun call!11868 () Bool)

(assert (=> bm!11862 (= call!11868 (contains!837 lt!57379 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111069 () Bool)

(declare-fun e!72229 () Bool)

(assert (=> b!111069 (= e!72229 (= (apply!100 lt!57379 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!111070 () Bool)

(declare-fun e!72223 () Bool)

(assert (=> b!111070 (= e!72223 e!72229)))

(declare-fun res!54890 () Bool)

(declare-fun call!11869 () Bool)

(assert (=> b!111070 (= res!54890 call!11869)))

(assert (=> b!111070 (=> (not res!54890) (not e!72229))))

(declare-fun b!111071 () Bool)

(declare-fun e!72226 () Bool)

(declare-fun e!72232 () Bool)

(assert (=> b!111071 (= e!72226 e!72232)))

(declare-fun res!54895 () Bool)

(assert (=> b!111071 (=> (not res!54895) (not e!72232))))

(assert (=> b!111071 (= res!54895 (contains!837 lt!57379 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!111071 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))))))

(declare-fun b!111072 () Bool)

(declare-fun e!72227 () Bool)

(assert (=> b!111072 (= e!72227 (validKeyInArray!0 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!111073 () Bool)

(declare-fun res!54891 () Bool)

(declare-fun e!72224 () Bool)

(assert (=> b!111073 (=> (not res!54891) (not e!72224))))

(assert (=> b!111073 (= res!54891 e!72223)))

(declare-fun c!19759 () Bool)

(assert (=> b!111073 (= c!19759 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111074 () Bool)

(assert (=> b!111074 (= e!72223 (not call!11869))))

(declare-fun b!111075 () Bool)

(declare-fun e!72222 () ListLongMap!1595)

(declare-fun call!11866 () ListLongMap!1595)

(assert (=> b!111075 (= e!72222 call!11866)))

(declare-fun bm!11863 () Bool)

(declare-fun call!11865 () ListLongMap!1595)

(assert (=> bm!11863 (= call!11866 call!11865)))

(declare-fun bm!11864 () Bool)

(declare-fun call!11863 () ListLongMap!1595)

(assert (=> bm!11864 (= call!11863 call!11867)))

(declare-fun b!111076 () Bool)

(assert (=> b!111076 (= e!72222 call!11863)))

(declare-fun b!111077 () Bool)

(declare-fun c!19761 () Bool)

(assert (=> b!111077 (= c!19761 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72230 () ListLongMap!1595)

(assert (=> b!111077 (= e!72230 e!72222)))

(declare-fun bm!11861 () Bool)

(declare-fun c!19764 () Bool)

(declare-fun c!19760 () Bool)

(assert (=> bm!11861 (= call!11867 (+!149 (ite c!19760 call!11864 (ite c!19764 call!11865 call!11866)) (ite (or c!19760 c!19764) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun d!31417 () Bool)

(assert (=> d!31417 e!72224))

(declare-fun res!54889 () Bool)

(assert (=> d!31417 (=> (not res!54889) (not e!72224))))

(assert (=> d!31417 (= res!54889 (or (bvsge #b00000000000000000000000000000000 (size!2337 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))))))))

(declare-fun lt!57391 () ListLongMap!1595)

(assert (=> d!31417 (= lt!57379 lt!57391)))

(declare-fun lt!57392 () Unit!3421)

(assert (=> d!31417 (= lt!57392 e!72228)))

(declare-fun c!19763 () Bool)

(assert (=> d!31417 (= c!19763 e!72227)))

(declare-fun res!54888 () Bool)

(assert (=> d!31417 (=> (not res!54888) (not e!72227))))

(assert (=> d!31417 (= res!54888 (bvslt #b00000000000000000000000000000000 (size!2337 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))))))

(assert (=> d!31417 (= lt!57391 e!72233)))

(assert (=> d!31417 (= c!19760 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31417 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31417 (= (getCurrentListMap!489 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57379)))

(declare-fun b!111078 () Bool)

(assert (=> b!111078 (= e!72233 e!72230)))

(assert (=> b!111078 (= c!19764 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111079 () Bool)

(declare-fun e!72231 () Bool)

(assert (=> b!111079 (= e!72224 e!72231)))

(declare-fun c!19762 () Bool)

(assert (=> b!111079 (= c!19762 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111080 () Bool)

(assert (=> b!111080 (= e!72231 e!72225)))

(declare-fun res!54892 () Bool)

(assert (=> b!111080 (= res!54892 call!11868)))

(assert (=> b!111080 (=> (not res!54892) (not e!72225))))

(declare-fun bm!11865 () Bool)

(assert (=> bm!11865 (= call!11869 (contains!837 lt!57379 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111081 () Bool)

(declare-fun lt!57395 () Unit!3421)

(assert (=> b!111081 (= e!72228 lt!57395)))

(declare-fun lt!57384 () ListLongMap!1595)

(assert (=> b!111081 (= lt!57384 (getCurrentListMapNoExtraKeys!116 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57388 () (_ BitVec 64))

(assert (=> b!111081 (= lt!57388 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57394 () (_ BitVec 64))

(assert (=> b!111081 (= lt!57394 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57393 () Unit!3421)

(assert (=> b!111081 (= lt!57393 (addStillContains!76 lt!57384 lt!57388 (zeroValue!2498 newMap!16) lt!57394))))

(assert (=> b!111081 (contains!837 (+!149 lt!57384 (tuple2!2429 lt!57388 (zeroValue!2498 newMap!16))) lt!57394)))

(declare-fun lt!57390 () Unit!3421)

(assert (=> b!111081 (= lt!57390 lt!57393)))

(declare-fun lt!57378 () ListLongMap!1595)

(assert (=> b!111081 (= lt!57378 (getCurrentListMapNoExtraKeys!116 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57380 () (_ BitVec 64))

(assert (=> b!111081 (= lt!57380 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57381 () (_ BitVec 64))

(assert (=> b!111081 (= lt!57381 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57376 () Unit!3421)

(assert (=> b!111081 (= lt!57376 (addApplyDifferent!76 lt!57378 lt!57380 (minValue!2498 newMap!16) lt!57381))))

(assert (=> b!111081 (= (apply!100 (+!149 lt!57378 (tuple2!2429 lt!57380 (minValue!2498 newMap!16))) lt!57381) (apply!100 lt!57378 lt!57381))))

(declare-fun lt!57377 () Unit!3421)

(assert (=> b!111081 (= lt!57377 lt!57376)))

(declare-fun lt!57385 () ListLongMap!1595)

(assert (=> b!111081 (= lt!57385 (getCurrentListMapNoExtraKeys!116 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57383 () (_ BitVec 64))

(assert (=> b!111081 (= lt!57383 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57387 () (_ BitVec 64))

(assert (=> b!111081 (= lt!57387 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57386 () Unit!3421)

(assert (=> b!111081 (= lt!57386 (addApplyDifferent!76 lt!57385 lt!57383 (zeroValue!2498 newMap!16) lt!57387))))

(assert (=> b!111081 (= (apply!100 (+!149 lt!57385 (tuple2!2429 lt!57383 (zeroValue!2498 newMap!16))) lt!57387) (apply!100 lt!57385 lt!57387))))

(declare-fun lt!57389 () Unit!3421)

(assert (=> b!111081 (= lt!57389 lt!57386)))

(declare-fun lt!57396 () ListLongMap!1595)

(assert (=> b!111081 (= lt!57396 (getCurrentListMapNoExtraKeys!116 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57397 () (_ BitVec 64))

(assert (=> b!111081 (= lt!57397 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57382 () (_ BitVec 64))

(assert (=> b!111081 (= lt!57382 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!111081 (= lt!57395 (addApplyDifferent!76 lt!57396 lt!57397 (minValue!2498 newMap!16) lt!57382))))

(assert (=> b!111081 (= (apply!100 (+!149 lt!57396 (tuple2!2429 lt!57397 (minValue!2498 newMap!16))) lt!57382) (apply!100 lt!57396 lt!57382))))

(declare-fun b!111082 () Bool)

(declare-fun res!54894 () Bool)

(assert (=> b!111082 (=> (not res!54894) (not e!72224))))

(assert (=> b!111082 (= res!54894 e!72226)))

(declare-fun res!54896 () Bool)

(assert (=> b!111082 (=> res!54896 e!72226)))

(assert (=> b!111082 (= res!54896 (not e!72234))))

(declare-fun res!54893 () Bool)

(assert (=> b!111082 (=> (not res!54893) (not e!72234))))

(assert (=> b!111082 (= res!54893 (bvslt #b00000000000000000000000000000000 (size!2337 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))))))

(declare-fun b!111083 () Bool)

(assert (=> b!111083 (= e!72230 call!11863)))

(declare-fun bm!11866 () Bool)

(assert (=> bm!11866 (= call!11865 call!11864)))

(declare-fun b!111084 () Bool)

(assert (=> b!111084 (= e!72231 (not call!11868))))

(declare-fun b!111085 () Bool)

(assert (=> b!111085 (= e!72232 (= (apply!100 lt!57379 (select (arr!2080 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111085 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))))))

(assert (=> b!111085 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (array!4389 (store (arr!2080 (_keys!4341 newMap!16)) (ite c!19481 (index!3237 lt!56639) (index!3234 lt!56639)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (size!2337 (_keys!4341 newMap!16))))))))

(assert (= (and d!31417 c!19760) b!111068))

(assert (= (and d!31417 (not c!19760)) b!111078))

(assert (= (and b!111078 c!19764) b!111083))

(assert (= (and b!111078 (not c!19764)) b!111077))

(assert (= (and b!111077 c!19761) b!111076))

(assert (= (and b!111077 (not c!19761)) b!111075))

(assert (= (or b!111076 b!111075) bm!11863))

(assert (= (or b!111083 bm!11863) bm!11866))

(assert (= (or b!111083 b!111076) bm!11864))

(assert (= (or b!111068 bm!11866) bm!11860))

(assert (= (or b!111068 bm!11864) bm!11861))

(assert (= (and d!31417 res!54888) b!111072))

(assert (= (and d!31417 c!19763) b!111081))

(assert (= (and d!31417 (not c!19763)) b!111066))

(assert (= (and d!31417 res!54889) b!111082))

(assert (= (and b!111082 res!54893) b!111067))

(assert (= (and b!111082 (not res!54896)) b!111071))

(assert (= (and b!111071 res!54895) b!111085))

(assert (= (and b!111082 res!54894) b!111073))

(assert (= (and b!111073 c!19759) b!111070))

(assert (= (and b!111073 (not c!19759)) b!111074))

(assert (= (and b!111070 res!54890) b!111069))

(assert (= (or b!111070 b!111074) bm!11865))

(assert (= (and b!111073 res!54891) b!111079))

(assert (= (and b!111079 c!19762) b!111080))

(assert (= (and b!111079 (not c!19762)) b!111084))

(assert (= (and b!111080 res!54892) b!111065))

(assert (= (or b!111080 b!111084) bm!11862))

(declare-fun b_lambda!4997 () Bool)

(assert (=> (not b_lambda!4997) (not b!111085)))

(assert (=> b!111085 t!5810))

(declare-fun b_and!6857 () Bool)

(assert (= b_and!6853 (and (=> t!5810 result!3549) b_and!6857)))

(assert (=> b!111085 t!5812))

(declare-fun b_and!6859 () Bool)

(assert (= b_and!6855 (and (=> t!5812 result!3551) b_and!6859)))

(declare-fun m!126505 () Bool)

(assert (=> b!111069 m!126505))

(declare-fun m!126507 () Bool)

(assert (=> b!111068 m!126507))

(assert (=> b!111071 m!126459))

(assert (=> b!111071 m!126459))

(declare-fun m!126509 () Bool)

(assert (=> b!111071 m!126509))

(declare-fun m!126511 () Bool)

(assert (=> bm!11861 m!126511))

(assert (=> d!31417 m!124861))

(declare-fun m!126513 () Bool)

(assert (=> b!111081 m!126513))

(declare-fun m!126515 () Bool)

(assert (=> b!111081 m!126515))

(declare-fun m!126517 () Bool)

(assert (=> b!111081 m!126517))

(assert (=> b!111081 m!126459))

(declare-fun m!126519 () Bool)

(assert (=> b!111081 m!126519))

(declare-fun m!126521 () Bool)

(assert (=> b!111081 m!126521))

(declare-fun m!126523 () Bool)

(assert (=> b!111081 m!126523))

(assert (=> b!111081 m!126523))

(declare-fun m!126525 () Bool)

(assert (=> b!111081 m!126525))

(declare-fun m!126527 () Bool)

(assert (=> b!111081 m!126527))

(declare-fun m!126529 () Bool)

(assert (=> b!111081 m!126529))

(declare-fun m!126531 () Bool)

(assert (=> b!111081 m!126531))

(declare-fun m!126533 () Bool)

(assert (=> b!111081 m!126533))

(declare-fun m!126535 () Bool)

(assert (=> b!111081 m!126535))

(assert (=> b!111081 m!126533))

(declare-fun m!126537 () Bool)

(assert (=> b!111081 m!126537))

(declare-fun m!126539 () Bool)

(assert (=> b!111081 m!126539))

(assert (=> b!111081 m!126515))

(declare-fun m!126541 () Bool)

(assert (=> b!111081 m!126541))

(assert (=> b!111081 m!126521))

(declare-fun m!126543 () Bool)

(assert (=> b!111081 m!126543))

(assert (=> b!111067 m!126459))

(assert (=> b!111067 m!126459))

(assert (=> b!111067 m!126469))

(assert (=> bm!11860 m!126519))

(declare-fun m!126545 () Bool)

(assert (=> bm!11865 m!126545))

(assert (=> b!111072 m!126459))

(assert (=> b!111072 m!126459))

(assert (=> b!111072 m!126469))

(declare-fun m!126547 () Bool)

(assert (=> bm!11862 m!126547))

(assert (=> b!111085 m!126459))

(declare-fun m!126549 () Bool)

(assert (=> b!111085 m!126549))

(assert (=> b!111085 m!124937))

(declare-fun m!126551 () Bool)

(assert (=> b!111085 m!126551))

(assert (=> b!111085 m!124937))

(declare-fun m!126553 () Bool)

(assert (=> b!111085 m!126553))

(assert (=> b!111085 m!126459))

(assert (=> b!111085 m!126551))

(declare-fun m!126555 () Bool)

(assert (=> b!111065 m!126555))

(assert (=> d!31081 d!31417))

(declare-fun d!31419 () Bool)

(assert (=> d!31419 (= (inRange!0 (ite c!19611 (index!3234 lt!56997) (index!3237 lt!56997)) (mask!6795 newMap!16)) (and (bvsge (ite c!19611 (index!3234 lt!56997) (index!3237 lt!56997)) #b00000000000000000000000000000000) (bvslt (ite c!19611 (index!3234 lt!56997) (index!3237 lt!56997)) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11797 d!31419))

(declare-fun lt!57402 () SeekEntryResult!271)

(declare-fun d!31421 () Bool)

(assert (=> d!31421 (and (or ((_ is Undefined!271) lt!57402) (not ((_ is Found!271) lt!57402)) (and (bvsge (index!3235 lt!57402) #b00000000000000000000000000000000) (bvslt (index!3235 lt!57402) (size!2337 (_keys!4341 newMap!16))))) (or ((_ is Undefined!271) lt!57402) ((_ is Found!271) lt!57402) (not ((_ is MissingVacant!271) lt!57402)) (not (= (index!3237 lt!57402) (index!3236 lt!56787))) (and (bvsge (index!3237 lt!57402) #b00000000000000000000000000000000) (bvslt (index!3237 lt!57402) (size!2337 (_keys!4341 newMap!16))))) (or ((_ is Undefined!271) lt!57402) (ite ((_ is Found!271) lt!57402) (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!57402)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (and ((_ is MissingVacant!271) lt!57402) (= (index!3237 lt!57402) (index!3236 lt!56787)) (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3237 lt!57402)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!72241 () SeekEntryResult!271)

(assert (=> d!31421 (= lt!57402 e!72241)))

(declare-fun c!19773 () Bool)

(assert (=> d!31421 (= c!19773 (bvsge (x!13959 lt!56787) #b01111111111111111111111111111110))))

(declare-fun lt!57403 () (_ BitVec 64))

(assert (=> d!31421 (= lt!57403 (select (arr!2080 (_keys!4341 newMap!16)) (index!3236 lt!56787)))))

(assert (=> d!31421 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31421 (= (seekKeyOrZeroReturnVacant!0 (x!13959 lt!56787) (index!3236 lt!56787) (index!3236 lt!56787) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)) lt!57402)))

(declare-fun b!111098 () Bool)

(declare-fun c!19772 () Bool)

(assert (=> b!111098 (= c!19772 (= lt!57403 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72242 () SeekEntryResult!271)

(declare-fun e!72243 () SeekEntryResult!271)

(assert (=> b!111098 (= e!72242 e!72243)))

(declare-fun b!111099 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!111099 (= e!72243 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13959 lt!56787) #b00000000000000000000000000000001) (nextIndex!0 (index!3236 lt!56787) (x!13959 lt!56787) (mask!6795 newMap!16)) (index!3236 lt!56787) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun b!111100 () Bool)

(assert (=> b!111100 (= e!72241 e!72242)))

(declare-fun c!19771 () Bool)

(assert (=> b!111100 (= c!19771 (= lt!57403 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!111101 () Bool)

(assert (=> b!111101 (= e!72242 (Found!271 (index!3236 lt!56787)))))

(declare-fun b!111102 () Bool)

(assert (=> b!111102 (= e!72241 Undefined!271)))

(declare-fun b!111103 () Bool)

(assert (=> b!111103 (= e!72243 (MissingVacant!271 (index!3236 lt!56787)))))

(assert (= (and d!31421 c!19773) b!111102))

(assert (= (and d!31421 (not c!19773)) b!111100))

(assert (= (and b!111100 c!19771) b!111101))

(assert (= (and b!111100 (not c!19771)) b!111098))

(assert (= (and b!111098 c!19772) b!111103))

(assert (= (and b!111098 (not c!19772)) b!111099))

(declare-fun m!126557 () Bool)

(assert (=> d!31421 m!126557))

(declare-fun m!126559 () Bool)

(assert (=> d!31421 m!126559))

(assert (=> d!31421 m!124851))

(assert (=> d!31421 m!124861))

(declare-fun m!126561 () Bool)

(assert (=> b!111099 m!126561))

(assert (=> b!111099 m!126561))

(assert (=> b!111099 m!124515))

(declare-fun m!126563 () Bool)

(assert (=> b!111099 m!126563))

(assert (=> b!110204 d!31421))

(declare-fun d!31423 () Bool)

(declare-fun e!72244 () Bool)

(assert (=> d!31423 e!72244))

(declare-fun res!54897 () Bool)

(assert (=> d!31423 (=> res!54897 e!72244)))

(declare-fun lt!57407 () Bool)

(assert (=> d!31423 (= res!54897 (not lt!57407))))

(declare-fun lt!57404 () Bool)

(assert (=> d!31423 (= lt!57407 lt!57404)))

(declare-fun lt!57406 () Unit!3421)

(declare-fun e!72245 () Unit!3421)

(assert (=> d!31423 (= lt!57406 e!72245)))

(declare-fun c!19774 () Bool)

(assert (=> d!31423 (= c!19774 lt!57404)))

(assert (=> d!31423 (= lt!57404 (containsKey!161 (toList!813 lt!56849) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31423 (= (contains!837 lt!56849 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) lt!57407)))

(declare-fun b!111104 () Bool)

(declare-fun lt!57405 () Unit!3421)

(assert (=> b!111104 (= e!72245 lt!57405)))

(assert (=> b!111104 (= lt!57405 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56849) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111104 (isDefined!111 (getValueByKey!157 (toList!813 lt!56849) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111105 () Bool)

(declare-fun Unit!3471 () Unit!3421)

(assert (=> b!111105 (= e!72245 Unit!3471)))

(declare-fun b!111106 () Bool)

(assert (=> b!111106 (= e!72244 (isDefined!111 (getValueByKey!157 (toList!813 lt!56849) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31423 c!19774) b!111104))

(assert (= (and d!31423 (not c!19774)) b!111105))

(assert (= (and d!31423 (not res!54897)) b!111106))

(assert (=> d!31423 m!124875))

(declare-fun m!126565 () Bool)

(assert (=> d!31423 m!126565))

(assert (=> b!111104 m!124875))

(declare-fun m!126567 () Bool)

(assert (=> b!111104 m!126567))

(assert (=> b!111104 m!124875))

(assert (=> b!111104 m!126225))

(assert (=> b!111104 m!126225))

(declare-fun m!126569 () Bool)

(assert (=> b!111104 m!126569))

(assert (=> b!111106 m!124875))

(assert (=> b!111106 m!126225))

(assert (=> b!111106 m!126225))

(assert (=> b!111106 m!126569))

(assert (=> b!110321 d!31423))

(declare-fun d!31425 () Bool)

(assert (=> d!31425 (= (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!382 (getValueByKey!157 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4582 () Bool)

(assert (= bs!4582 d!31425))

(assert (=> bs!4582 m!125623))

(declare-fun m!126571 () Bool)

(assert (=> bs!4582 m!126571))

(assert (=> b!110631 d!31425))

(declare-fun b!111109 () Bool)

(declare-fun e!72247 () Option!163)

(assert (=> b!111109 (= e!72247 (getValueByKey!157 (t!5802 (toList!813 lt!56674)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31427 () Bool)

(declare-fun c!19775 () Bool)

(assert (=> d!31427 (= c!19775 (and ((_ is Cons!1649) (toList!813 lt!56674)) (= (_1!1224 (h!2248 (toList!813 lt!56674))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!72246 () Option!163)

(assert (=> d!31427 (= (getValueByKey!157 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000) e!72246)))

(declare-fun b!111110 () Bool)

(assert (=> b!111110 (= e!72247 None!161)))

(declare-fun b!111108 () Bool)

(assert (=> b!111108 (= e!72246 e!72247)))

(declare-fun c!19776 () Bool)

(assert (=> b!111108 (= c!19776 (and ((_ is Cons!1649) (toList!813 lt!56674)) (not (= (_1!1224 (h!2248 (toList!813 lt!56674))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!111107 () Bool)

(assert (=> b!111107 (= e!72246 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56674)))))))

(assert (= (and d!31427 c!19775) b!111107))

(assert (= (and d!31427 (not c!19775)) b!111108))

(assert (= (and b!111108 c!19776) b!111109))

(assert (= (and b!111108 (not c!19776)) b!111110))

(declare-fun m!126573 () Bool)

(assert (=> b!111109 m!126573))

(assert (=> b!110631 d!31427))

(declare-fun d!31429 () Bool)

(declare-fun e!72248 () Bool)

(assert (=> d!31429 e!72248))

(declare-fun res!54898 () Bool)

(assert (=> d!31429 (=> (not res!54898) (not e!72248))))

(declare-fun lt!57408 () ListLongMap!1595)

(assert (=> d!31429 (= res!54898 (contains!837 lt!57408 (_1!1224 (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(declare-fun lt!57411 () List!1653)

(assert (=> d!31429 (= lt!57408 (ListLongMap!1596 lt!57411))))

(declare-fun lt!57409 () Unit!3421)

(declare-fun lt!57410 () Unit!3421)

(assert (=> d!31429 (= lt!57409 lt!57410)))

(assert (=> d!31429 (= (getValueByKey!157 lt!57411 (_1!1224 (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))) (Some!162 (_2!1224 (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31429 (= lt!57410 (lemmaContainsTupThenGetReturnValue!75 lt!57411 (_1!1224 (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (_2!1224 (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31429 (= lt!57411 (insertStrictlySorted!77 (toList!813 (ite c!19614 call!11803 (ite c!19618 call!11804 call!11805))) (_1!1224 (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (_2!1224 (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31429 (= (+!149 (ite c!19614 call!11803 (ite c!19618 call!11804 call!11805)) (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) lt!57408)))

(declare-fun b!111111 () Bool)

(declare-fun res!54899 () Bool)

(assert (=> b!111111 (=> (not res!54899) (not e!72248))))

(assert (=> b!111111 (= res!54899 (= (getValueByKey!157 (toList!813 lt!57408) (_1!1224 (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))) (Some!162 (_2!1224 (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))))

(declare-fun b!111112 () Bool)

(assert (=> b!111112 (= e!72248 (contains!839 (toList!813 lt!57408) (ite (or c!19614 c!19618) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (= (and d!31429 res!54898) b!111111))

(assert (= (and b!111111 res!54899) b!111112))

(declare-fun m!126575 () Bool)

(assert (=> d!31429 m!126575))

(declare-fun m!126577 () Bool)

(assert (=> d!31429 m!126577))

(declare-fun m!126579 () Bool)

(assert (=> d!31429 m!126579))

(declare-fun m!126581 () Bool)

(assert (=> d!31429 m!126581))

(declare-fun m!126583 () Bool)

(assert (=> b!111111 m!126583))

(declare-fun m!126585 () Bool)

(assert (=> b!111112 m!126585))

(assert (=> bm!11800 d!31429))

(assert (=> b!110604 d!31297))

(declare-fun d!31431 () Bool)

(assert (=> d!31431 (= (apply!100 lt!56849 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1359 (getValueByKey!157 (toList!813 lt!56849) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4583 () Bool)

(assert (= bs!4583 d!31431))

(declare-fun m!126587 () Bool)

(assert (=> bs!4583 m!126587))

(assert (=> bs!4583 m!126587))

(declare-fun m!126589 () Bool)

(assert (=> bs!4583 m!126589))

(assert (=> b!110315 d!31431))

(declare-fun d!31433 () Bool)

(declare-fun e!72249 () Bool)

(assert (=> d!31433 e!72249))

(declare-fun res!54900 () Bool)

(assert (=> d!31433 (=> (not res!54900) (not e!72249))))

(declare-fun lt!57412 () ListLongMap!1595)

(assert (=> d!31433 (= res!54900 (contains!837 lt!57412 (_1!1224 (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))))))

(declare-fun lt!57415 () List!1653)

(assert (=> d!31433 (= lt!57412 (ListLongMap!1596 lt!57415))))

(declare-fun lt!57413 () Unit!3421)

(declare-fun lt!57414 () Unit!3421)

(assert (=> d!31433 (= lt!57413 lt!57414)))

(assert (=> d!31433 (= (getValueByKey!157 lt!57415 (_1!1224 (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))) (Some!162 (_2!1224 (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))))))

(assert (=> d!31433 (= lt!57414 (lemmaContainsTupThenGetReturnValue!75 lt!57415 (_1!1224 (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))) (_2!1224 (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))))))

(assert (=> d!31433 (= lt!57415 (insertStrictlySorted!77 (toList!813 (ite c!19539 call!11761 (ite c!19543 call!11762 call!11763))) (_1!1224 (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))) (_2!1224 (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))))))

(assert (=> d!31433 (= (+!149 (ite c!19539 call!11761 (ite c!19543 call!11762 call!11763)) (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))) lt!57412)))

(declare-fun b!111113 () Bool)

(declare-fun res!54901 () Bool)

(assert (=> b!111113 (=> (not res!54901) (not e!72249))))

(assert (=> b!111113 (= res!54901 (= (getValueByKey!157 (toList!813 lt!57412) (_1!1224 (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16)))))) (Some!162 (_2!1224 (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))))

(declare-fun b!111114 () Bool)

(assert (=> b!111114 (= e!72249 (contains!839 (toList!813 lt!57412) (ite (or c!19539 c!19543) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19483 c!19472) lt!56527 (zeroValue!2498 newMap!16))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19483 (ite c!19472 (minValue!2498 newMap!16) lt!56527) (minValue!2498 newMap!16))))))))

(assert (= (and d!31433 res!54900) b!111113))

(assert (= (and b!111113 res!54901) b!111114))

(declare-fun m!126591 () Bool)

(assert (=> d!31433 m!126591))

(declare-fun m!126593 () Bool)

(assert (=> d!31433 m!126593))

(declare-fun m!126595 () Bool)

(assert (=> d!31433 m!126595))

(declare-fun m!126597 () Bool)

(assert (=> d!31433 m!126597))

(declare-fun m!126599 () Bool)

(assert (=> b!111113 m!126599))

(declare-fun m!126601 () Bool)

(assert (=> b!111114 m!126601))

(assert (=> bm!11758 d!31433))

(declare-fun d!31435 () Bool)

(declare-fun c!19777 () Bool)

(assert (=> d!31435 (= c!19777 ((_ is Nil!1650) (toList!813 lt!56691)))))

(declare-fun e!72250 () (InoxSet tuple2!2428))

(assert (=> d!31435 (= (content!112 (toList!813 lt!56691)) e!72250)))

(declare-fun b!111115 () Bool)

(assert (=> b!111115 (= e!72250 ((as const (Array tuple2!2428 Bool)) false))))

(declare-fun b!111116 () Bool)

(assert (=> b!111116 (= e!72250 ((_ map or) (store ((as const (Array tuple2!2428 Bool)) false) (h!2248 (toList!813 lt!56691)) true) (content!112 (t!5802 (toList!813 lt!56691)))))))

(assert (= (and d!31435 c!19777) b!111115))

(assert (= (and d!31435 (not c!19777)) b!111116))

(declare-fun m!126603 () Bool)

(assert (=> b!111116 m!126603))

(declare-fun m!126605 () Bool)

(assert (=> b!111116 m!126605))

(assert (=> d!30987 d!31435))

(declare-fun d!31437 () Bool)

(assert (=> d!31437 (= (isDefined!111 (getValueByKey!157 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))) (not (isEmpty!382 (getValueByKey!157 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun bs!4584 () Bool)

(assert (= bs!4584 d!31437))

(assert (=> bs!4584 m!124949))

(declare-fun m!126607 () Bool)

(assert (=> bs!4584 m!126607))

(assert (=> b!110244 d!31437))

(declare-fun e!72252 () Option!163)

(declare-fun b!111119 () Bool)

(assert (=> b!111119 (= e!72252 (getValueByKey!157 (t!5802 (toList!813 e!71569)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!31439 () Bool)

(declare-fun c!19778 () Bool)

(assert (=> d!31439 (= c!19778 (and ((_ is Cons!1649) (toList!813 e!71569)) (= (_1!1224 (h!2248 (toList!813 e!71569))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(declare-fun e!72251 () Option!163)

(assert (=> d!31439 (= (getValueByKey!157 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) e!72251)))

(declare-fun b!111120 () Bool)

(assert (=> b!111120 (= e!72252 None!161)))

(declare-fun b!111118 () Bool)

(assert (=> b!111118 (= e!72251 e!72252)))

(declare-fun c!19779 () Bool)

(assert (=> b!111118 (= c!19779 (and ((_ is Cons!1649) (toList!813 e!71569)) (not (= (_1!1224 (h!2248 (toList!813 e!71569))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun b!111117 () Bool)

(assert (=> b!111117 (= e!72251 (Some!162 (_2!1224 (h!2248 (toList!813 e!71569)))))))

(assert (= (and d!31439 c!19778) b!111117))

(assert (= (and d!31439 (not c!19778)) b!111118))

(assert (= (and b!111118 c!19779) b!111119))

(assert (= (and b!111118 (not c!19779)) b!111120))

(assert (=> b!111119 m!124515))

(declare-fun m!126609 () Bool)

(assert (=> b!111119 m!126609))

(assert (=> b!110244 d!31439))

(declare-fun d!31441 () Bool)

(declare-fun e!72253 () Bool)

(assert (=> d!31441 e!72253))

(declare-fun res!54902 () Bool)

(assert (=> d!31441 (=> res!54902 e!72253)))

(declare-fun lt!57419 () Bool)

(assert (=> d!31441 (= res!54902 (not lt!57419))))

(declare-fun lt!57416 () Bool)

(assert (=> d!31441 (= lt!57419 lt!57416)))

(declare-fun lt!57418 () Unit!3421)

(declare-fun e!72254 () Unit!3421)

(assert (=> d!31441 (= lt!57418 e!72254)))

(declare-fun c!19780 () Bool)

(assert (=> d!31441 (= c!19780 lt!57416)))

(assert (=> d!31441 (= lt!57416 (containsKey!161 (toList!813 lt!56946) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31441 (= (contains!837 lt!56946 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57419)))

(declare-fun b!111121 () Bool)

(declare-fun lt!57417 () Unit!3421)

(assert (=> b!111121 (= e!72254 lt!57417)))

(assert (=> b!111121 (= lt!57417 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56946) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> b!111121 (isDefined!111 (getValueByKey!157 (toList!813 lt!56946) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111122 () Bool)

(declare-fun Unit!3472 () Unit!3421)

(assert (=> b!111122 (= e!72254 Unit!3472)))

(declare-fun b!111123 () Bool)

(assert (=> b!111123 (= e!72253 (isDefined!111 (getValueByKey!157 (toList!813 lt!56946) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31441 c!19780) b!111121))

(assert (= (and d!31441 (not c!19780)) b!111122))

(assert (= (and d!31441 (not res!54902)) b!111123))

(declare-fun m!126611 () Bool)

(assert (=> d!31441 m!126611))

(declare-fun m!126613 () Bool)

(assert (=> b!111121 m!126613))

(assert (=> b!111121 m!125335))

(assert (=> b!111121 m!125335))

(declare-fun m!126615 () Bool)

(assert (=> b!111121 m!126615))

(assert (=> b!111123 m!125335))

(assert (=> b!111123 m!125335))

(assert (=> b!111123 m!126615))

(assert (=> d!31027 d!31441))

(declare-fun b!111126 () Bool)

(declare-fun e!72256 () Option!163)

(assert (=> b!111126 (= e!72256 (getValueByKey!157 (t!5802 lt!56949) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!31443 () Bool)

(declare-fun c!19781 () Bool)

(assert (=> d!31443 (= c!19781 (and ((_ is Cons!1649) lt!56949) (= (_1!1224 (h!2248 lt!56949)) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72255 () Option!163)

(assert (=> d!31443 (= (getValueByKey!157 lt!56949 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72255)))

(declare-fun b!111127 () Bool)

(assert (=> b!111127 (= e!72256 None!161)))

(declare-fun b!111125 () Bool)

(assert (=> b!111125 (= e!72255 e!72256)))

(declare-fun c!19782 () Bool)

(assert (=> b!111125 (= c!19782 (and ((_ is Cons!1649) lt!56949) (not (= (_1!1224 (h!2248 lt!56949)) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111124 () Bool)

(assert (=> b!111124 (= e!72255 (Some!162 (_2!1224 (h!2248 lt!56949))))))

(assert (= (and d!31443 c!19781) b!111124))

(assert (= (and d!31443 (not c!19781)) b!111125))

(assert (= (and b!111125 c!19782) b!111126))

(assert (= (and b!111125 (not c!19782)) b!111127))

(declare-fun m!126617 () Bool)

(assert (=> b!111126 m!126617))

(assert (=> d!31027 d!31443))

(declare-fun d!31445 () Bool)

(assert (=> d!31445 (= (getValueByKey!157 lt!56949 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!57420 () Unit!3421)

(assert (=> d!31445 (= lt!57420 (choose!693 lt!56949 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun e!72257 () Bool)

(assert (=> d!31445 e!72257))

(declare-fun res!54903 () Bool)

(assert (=> d!31445 (=> (not res!54903) (not e!72257))))

(assert (=> d!31445 (= res!54903 (isStrictlySorted!306 lt!56949))))

(assert (=> d!31445 (= (lemmaContainsTupThenGetReturnValue!75 lt!56949 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57420)))

(declare-fun b!111128 () Bool)

(declare-fun res!54904 () Bool)

(assert (=> b!111128 (=> (not res!54904) (not e!72257))))

(assert (=> b!111128 (= res!54904 (containsKey!161 lt!56949 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111129 () Bool)

(assert (=> b!111129 (= e!72257 (contains!839 lt!56949 (tuple2!2429 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31445 res!54903) b!111128))

(assert (= (and b!111128 res!54904) b!111129))

(assert (=> d!31445 m!125329))

(declare-fun m!126619 () Bool)

(assert (=> d!31445 m!126619))

(declare-fun m!126621 () Bool)

(assert (=> d!31445 m!126621))

(declare-fun m!126623 () Bool)

(assert (=> b!111128 m!126623))

(declare-fun m!126625 () Bool)

(assert (=> b!111129 m!126625))

(assert (=> d!31027 d!31445))

(declare-fun c!19784 () Bool)

(declare-fun e!72260 () List!1653)

(declare-fun c!19783 () Bool)

(declare-fun b!111130 () Bool)

(assert (=> b!111130 (= e!72260 (ite c!19783 (t!5802 (toList!813 lt!56759)) (ite c!19784 (Cons!1649 (h!2248 (toList!813 lt!56759)) (t!5802 (toList!813 lt!56759))) Nil!1650)))))

(declare-fun b!111131 () Bool)

(declare-fun e!72262 () List!1653)

(declare-fun call!11872 () List!1653)

(assert (=> b!111131 (= e!72262 call!11872)))

(declare-fun call!11870 () List!1653)

(declare-fun c!19786 () Bool)

(declare-fun bm!11867 () Bool)

(assert (=> bm!11867 (= call!11870 ($colon$colon!82 e!72260 (ite c!19786 (h!2248 (toList!813 lt!56759)) (tuple2!2429 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun c!19785 () Bool)

(assert (=> bm!11867 (= c!19785 c!19786)))

(declare-fun b!111132 () Bool)

(declare-fun e!72258 () List!1653)

(assert (=> b!111132 (= e!72258 e!72262)))

(assert (=> b!111132 (= c!19783 (and ((_ is Cons!1649) (toList!813 lt!56759)) (= (_1!1224 (h!2248 (toList!813 lt!56759))) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111133 () Bool)

(assert (=> b!111133 (= e!72260 (insertStrictlySorted!77 (t!5802 (toList!813 lt!56759)) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun bm!11868 () Bool)

(declare-fun call!11871 () List!1653)

(assert (=> bm!11868 (= call!11871 call!11872)))

(declare-fun d!31447 () Bool)

(declare-fun e!72261 () Bool)

(assert (=> d!31447 e!72261))

(declare-fun res!54906 () Bool)

(assert (=> d!31447 (=> (not res!54906) (not e!72261))))

(declare-fun lt!57421 () List!1653)

(assert (=> d!31447 (= res!54906 (isStrictlySorted!306 lt!57421))))

(assert (=> d!31447 (= lt!57421 e!72258)))

(assert (=> d!31447 (= c!19786 (and ((_ is Cons!1649) (toList!813 lt!56759)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56759))) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31447 (isStrictlySorted!306 (toList!813 lt!56759))))

(assert (=> d!31447 (= (insertStrictlySorted!77 (toList!813 lt!56759) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57421)))

(declare-fun b!111134 () Bool)

(declare-fun res!54905 () Bool)

(assert (=> b!111134 (=> (not res!54905) (not e!72261))))

(assert (=> b!111134 (= res!54905 (containsKey!161 lt!57421 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111135 () Bool)

(declare-fun e!72259 () List!1653)

(assert (=> b!111135 (= e!72259 call!11871)))

(declare-fun b!111136 () Bool)

(assert (=> b!111136 (= e!72259 call!11871)))

(declare-fun b!111137 () Bool)

(assert (=> b!111137 (= e!72261 (contains!839 lt!57421 (tuple2!2429 (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111138 () Bool)

(assert (=> b!111138 (= e!72258 call!11870)))

(declare-fun bm!11869 () Bool)

(assert (=> bm!11869 (= call!11872 call!11870)))

(declare-fun b!111139 () Bool)

(assert (=> b!111139 (= c!19784 (and ((_ is Cons!1649) (toList!813 lt!56759)) (bvsgt (_1!1224 (h!2248 (toList!813 lt!56759))) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> b!111139 (= e!72262 e!72259)))

(assert (= (and d!31447 c!19786) b!111138))

(assert (= (and d!31447 (not c!19786)) b!111132))

(assert (= (and b!111132 c!19783) b!111131))

(assert (= (and b!111132 (not c!19783)) b!111139))

(assert (= (and b!111139 c!19784) b!111135))

(assert (= (and b!111139 (not c!19784)) b!111136))

(assert (= (or b!111135 b!111136) bm!11868))

(assert (= (or b!111131 bm!11868) bm!11869))

(assert (= (or b!111138 bm!11869) bm!11867))

(assert (= (and bm!11867 c!19785) b!111133))

(assert (= (and bm!11867 (not c!19785)) b!111130))

(assert (= (and d!31447 res!54906) b!111134))

(assert (= (and b!111134 res!54905) b!111137))

(declare-fun m!126627 () Bool)

(assert (=> d!31447 m!126627))

(declare-fun m!126629 () Bool)

(assert (=> d!31447 m!126629))

(declare-fun m!126631 () Bool)

(assert (=> bm!11867 m!126631))

(declare-fun m!126633 () Bool)

(assert (=> b!111137 m!126633))

(declare-fun m!126635 () Bool)

(assert (=> b!111133 m!126635))

(declare-fun m!126637 () Bool)

(assert (=> b!111134 m!126637))

(assert (=> d!31027 d!31447))

(declare-fun d!31449 () Bool)

(assert (=> d!31449 (= (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56756)) (v!2933 (getValueByKey!157 (toList!813 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56756)))))

(assert (=> d!31035 d!31449))

(declare-fun e!72264 () Option!163)

(declare-fun b!111142 () Bool)

(assert (=> b!111142 (= e!72264 (getValueByKey!157 (t!5802 (toList!813 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) lt!56756))))

(declare-fun c!19787 () Bool)

(declare-fun d!31451 () Bool)

(assert (=> d!31451 (= c!19787 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))) lt!56756)))))

(declare-fun e!72263 () Option!163)

(assert (=> d!31451 (= (getValueByKey!157 (toList!813 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56756) e!72263)))

(declare-fun b!111143 () Bool)

(assert (=> b!111143 (= e!72264 None!161)))

(declare-fun b!111141 () Bool)

(assert (=> b!111141 (= e!72263 e!72264)))

(declare-fun c!19788 () Bool)

(assert (=> b!111141 (= c!19788 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) (not (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))) lt!56756))))))

(declare-fun b!111140 () Bool)

(assert (=> b!111140 (= e!72263 (Some!162 (_2!1224 (h!2248 (toList!813 (+!149 lt!56770 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))))

(assert (= (and d!31451 c!19787) b!111140))

(assert (= (and d!31451 (not c!19787)) b!111141))

(assert (= (and b!111141 c!19788) b!111142))

(assert (= (and b!111141 (not c!19788)) b!111143))

(declare-fun m!126639 () Bool)

(assert (=> b!111142 m!126639))

(assert (=> d!31035 d!31451))

(declare-fun d!31453 () Bool)

(assert (=> d!31453 (= (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!382 (getValueByKey!157 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4585 () Bool)

(assert (= bs!4585 d!31453))

(assert (=> bs!4585 m!124867))

(declare-fun m!126641 () Bool)

(assert (=> bs!4585 m!126641))

(assert (=> b!110657 d!31453))

(declare-fun b!111146 () Bool)

(declare-fun e!72266 () Option!163)

(assert (=> b!111146 (= e!72266 (getValueByKey!157 (t!5802 (toList!813 lt!56753)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!19789 () Bool)

(declare-fun d!31455 () Bool)

(assert (=> d!31455 (= c!19789 (and ((_ is Cons!1649) (toList!813 lt!56753)) (= (_1!1224 (h!2248 (toList!813 lt!56753))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!72265 () Option!163)

(assert (=> d!31455 (= (getValueByKey!157 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!72265)))

(declare-fun b!111147 () Bool)

(assert (=> b!111147 (= e!72266 None!161)))

(declare-fun b!111145 () Bool)

(assert (=> b!111145 (= e!72265 e!72266)))

(declare-fun c!19790 () Bool)

(assert (=> b!111145 (= c!19790 (and ((_ is Cons!1649) (toList!813 lt!56753)) (not (= (_1!1224 (h!2248 (toList!813 lt!56753))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!111144 () Bool)

(assert (=> b!111144 (= e!72265 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56753)))))))

(assert (= (and d!31455 c!19789) b!111144))

(assert (= (and d!31455 (not c!19789)) b!111145))

(assert (= (and b!111145 c!19790) b!111146))

(assert (= (and b!111145 (not c!19790)) b!111147))

(assert (=> b!111146 m!124711))

(declare-fun m!126643 () Bool)

(assert (=> b!111146 m!126643))

(assert (=> b!110657 d!31455))

(assert (=> b!110211 d!30907))

(declare-fun d!31457 () Bool)

(assert (=> d!31457 (= (isEmpty!383 (toList!813 lt!56674)) ((_ is Nil!1650) (toList!813 lt!56674)))))

(assert (=> d!31099 d!31457))

(assert (=> bm!11816 d!30913))

(declare-fun d!31459 () Bool)

(assert (=> d!31459 (= ($colon$colon!82 e!71832 (ite c!19593 (h!2248 (toList!813 (+!149 lt!56522 lt!56517))) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528)))) (Cons!1649 (ite c!19593 (h!2248 (toList!813 (+!149 lt!56522 lt!56517))) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))) e!71832))))

(assert (=> bm!11784 d!31459))

(declare-fun d!31461 () Bool)

(assert (=> d!31461 (= (inRange!0 (index!3235 lt!56844) (mask!6795 newMap!16)) (and (bvsge (index!3235 lt!56844) #b00000000000000000000000000000000) (bvslt (index!3235 lt!56844) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!110313 d!31461))

(declare-fun d!31463 () Bool)

(assert (=> d!31463 (= ($colon$colon!82 e!71872 (ite c!19606 (h!2248 (toList!813 lt!56522)) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517)))) (Cons!1649 (ite c!19606 (h!2248 (toList!813 lt!56522)) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))) e!71872))))

(assert (=> bm!11790 d!31463))

(declare-fun d!31465 () Bool)

(declare-fun res!54907 () Bool)

(declare-fun e!72267 () Bool)

(assert (=> d!31465 (=> res!54907 e!72267)))

(assert (=> d!31465 (= res!54907 (and ((_ is Cons!1649) lt!56839) (= (_1!1224 (h!2248 lt!56839)) (_1!1224 lt!56528))))))

(assert (=> d!31465 (= (containsKey!161 lt!56839 (_1!1224 lt!56528)) e!72267)))

(declare-fun b!111148 () Bool)

(declare-fun e!72268 () Bool)

(assert (=> b!111148 (= e!72267 e!72268)))

(declare-fun res!54908 () Bool)

(assert (=> b!111148 (=> (not res!54908) (not e!72268))))

(assert (=> b!111148 (= res!54908 (and (or (not ((_ is Cons!1649) lt!56839)) (bvsle (_1!1224 (h!2248 lt!56839)) (_1!1224 lt!56528))) ((_ is Cons!1649) lt!56839) (bvslt (_1!1224 (h!2248 lt!56839)) (_1!1224 lt!56528))))))

(declare-fun b!111149 () Bool)

(assert (=> b!111149 (= e!72268 (containsKey!161 (t!5802 lt!56839) (_1!1224 lt!56528)))))

(assert (= (and d!31465 (not res!54907)) b!111148))

(assert (= (and b!111148 res!54908) b!111149))

(declare-fun m!126645 () Bool)

(assert (=> b!111149 m!126645))

(assert (=> b!110303 d!31465))

(declare-fun d!31467 () Bool)

(declare-fun c!19791 () Bool)

(assert (=> d!31467 (= c!19791 ((_ is Nil!1650) (toList!813 lt!56699)))))

(declare-fun e!72269 () (InoxSet tuple2!2428))

(assert (=> d!31467 (= (content!112 (toList!813 lt!56699)) e!72269)))

(declare-fun b!111150 () Bool)

(assert (=> b!111150 (= e!72269 ((as const (Array tuple2!2428 Bool)) false))))

(declare-fun b!111151 () Bool)

(assert (=> b!111151 (= e!72269 ((_ map or) (store ((as const (Array tuple2!2428 Bool)) false) (h!2248 (toList!813 lt!56699)) true) (content!112 (t!5802 (toList!813 lt!56699)))))))

(assert (= (and d!31467 c!19791) b!111150))

(assert (= (and d!31467 (not c!19791)) b!111151))

(declare-fun m!126647 () Bool)

(assert (=> b!111151 m!126647))

(declare-fun m!126649 () Bool)

(assert (=> b!111151 m!126649))

(assert (=> d!30937 d!31467))

(assert (=> b!110590 d!31369))

(declare-fun d!31469 () Bool)

(declare-fun e!72270 () Bool)

(assert (=> d!31469 e!72270))

(declare-fun res!54909 () Bool)

(assert (=> d!31469 (=> (not res!54909) (not e!72270))))

(declare-fun lt!57422 () ListLongMap!1595)

(assert (=> d!31469 (= res!54909 (contains!837 lt!57422 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun lt!57425 () List!1653)

(assert (=> d!31469 (= lt!57422 (ListLongMap!1596 lt!57425))))

(declare-fun lt!57423 () Unit!3421)

(declare-fun lt!57424 () Unit!3421)

(assert (=> d!31469 (= lt!57423 lt!57424)))

(assert (=> d!31469 (= (getValueByKey!157 lt!57425 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31469 (= lt!57424 (lemmaContainsTupThenGetReturnValue!75 lt!57425 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31469 (= lt!57425 (insertStrictlySorted!77 (toList!813 (map!1294 newMap!16)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31469 (= (+!149 (map!1294 newMap!16) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) lt!57422)))

(declare-fun b!111152 () Bool)

(declare-fun res!54910 () Bool)

(assert (=> b!111152 (=> (not res!54910) (not e!72270))))

(assert (=> b!111152 (= res!54910 (= (getValueByKey!157 (toList!813 lt!57422) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!111153 () Bool)

(assert (=> b!111153 (= e!72270 (contains!839 (toList!813 lt!57422) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(assert (= (and d!31469 res!54909) b!111152))

(assert (= (and b!111152 res!54910) b!111153))

(declare-fun m!126651 () Bool)

(assert (=> d!31469 m!126651))

(declare-fun m!126653 () Bool)

(assert (=> d!31469 m!126653))

(declare-fun m!126655 () Bool)

(assert (=> d!31469 m!126655))

(declare-fun m!126657 () Bool)

(assert (=> d!31469 m!126657))

(declare-fun m!126659 () Bool)

(assert (=> b!111152 m!126659))

(declare-fun m!126661 () Bool)

(assert (=> b!111153 m!126661))

(assert (=> b!110590 d!31469))

(assert (=> b!110590 d!30893))

(declare-fun b!111156 () Bool)

(declare-fun e!72272 () Option!163)

(assert (=> b!111156 (= e!72272 (getValueByKey!157 (t!5802 (toList!813 lt!56946)) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!31471 () Bool)

(declare-fun c!19792 () Bool)

(assert (=> d!31471 (= c!19792 (and ((_ is Cons!1649) (toList!813 lt!56946)) (= (_1!1224 (h!2248 (toList!813 lt!56946))) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72271 () Option!163)

(assert (=> d!31471 (= (getValueByKey!157 (toList!813 lt!56946) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72271)))

(declare-fun b!111157 () Bool)

(assert (=> b!111157 (= e!72272 None!161)))

(declare-fun b!111155 () Bool)

(assert (=> b!111155 (= e!72271 e!72272)))

(declare-fun c!19793 () Bool)

(assert (=> b!111155 (= c!19793 (and ((_ is Cons!1649) (toList!813 lt!56946)) (not (= (_1!1224 (h!2248 (toList!813 lt!56946))) (_1!1224 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111154 () Bool)

(assert (=> b!111154 (= e!72271 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56946)))))))

(assert (= (and d!31471 c!19792) b!111154))

(assert (= (and d!31471 (not c!19792)) b!111155))

(assert (= (and b!111155 c!19793) b!111156))

(assert (= (and b!111155 (not c!19793)) b!111157))

(declare-fun m!126663 () Bool)

(assert (=> b!111156 m!126663))

(assert (=> b!110448 d!31471))

(declare-fun d!31473 () Bool)

(declare-fun res!54911 () Bool)

(declare-fun e!72273 () Bool)

(assert (=> d!31473 (=> res!54911 e!72273)))

(assert (=> d!31473 (= res!54911 (and ((_ is Cons!1649) (toList!813 lt!56753)) (= (_1!1224 (h!2248 (toList!813 lt!56753))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31473 (= (containsKey!161 (toList!813 lt!56753) #b1000000000000000000000000000000000000000000000000000000000000000) e!72273)))

(declare-fun b!111158 () Bool)

(declare-fun e!72274 () Bool)

(assert (=> b!111158 (= e!72273 e!72274)))

(declare-fun res!54912 () Bool)

(assert (=> b!111158 (=> (not res!54912) (not e!72274))))

(assert (=> b!111158 (= res!54912 (and (or (not ((_ is Cons!1649) (toList!813 lt!56753))) (bvsle (_1!1224 (h!2248 (toList!813 lt!56753))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1649) (toList!813 lt!56753)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56753))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111159 () Bool)

(assert (=> b!111159 (= e!72274 (containsKey!161 (t!5802 (toList!813 lt!56753)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31473 (not res!54911)) b!111158))

(assert (= (and b!111158 res!54912) b!111159))

(declare-fun m!126665 () Bool)

(assert (=> b!111159 m!126665))

(assert (=> d!30971 d!31473))

(declare-fun b!111160 () Bool)

(declare-fun res!54916 () Bool)

(declare-fun e!72275 () Bool)

(assert (=> b!111160 (=> (not res!54916) (not e!72275))))

(assert (=> b!111160 (= res!54916 (and (= (size!2338 (_values!2610 (_2!1225 lt!56657))) (bvadd (mask!6795 (_2!1225 lt!56657)) #b00000000000000000000000000000001)) (= (size!2337 (_keys!4341 (_2!1225 lt!56657))) (size!2338 (_values!2610 (_2!1225 lt!56657)))) (bvsge (_size!508 (_2!1225 lt!56657)) #b00000000000000000000000000000000) (bvsle (_size!508 (_2!1225 lt!56657)) (bvadd (mask!6795 (_2!1225 lt!56657)) #b00000000000000000000000000000001))))))

(declare-fun b!111162 () Bool)

(declare-fun res!54914 () Bool)

(assert (=> b!111162 (=> (not res!54914) (not e!72275))))

(assert (=> b!111162 (= res!54914 (= (size!2341 (_2!1225 lt!56657)) (bvadd (_size!508 (_2!1225 lt!56657)) (bvsdiv (bvadd (extraKeys!2424 (_2!1225 lt!56657)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!111161 () Bool)

(declare-fun res!54913 () Bool)

(assert (=> b!111161 (=> (not res!54913) (not e!72275))))

(assert (=> b!111161 (= res!54913 (bvsge (size!2341 (_2!1225 lt!56657)) (_size!508 (_2!1225 lt!56657))))))

(declare-fun b!111163 () Bool)

(assert (=> b!111163 (= e!72275 (and (bvsge (extraKeys!2424 (_2!1225 lt!56657)) #b00000000000000000000000000000000) (bvsle (extraKeys!2424 (_2!1225 lt!56657)) #b00000000000000000000000000000011) (bvsge (_vacant!508 (_2!1225 lt!56657)) #b00000000000000000000000000000000)))))

(declare-fun d!31475 () Bool)

(declare-fun res!54915 () Bool)

(assert (=> d!31475 (=> (not res!54915) (not e!72275))))

(assert (=> d!31475 (= res!54915 (validMask!0 (mask!6795 (_2!1225 lt!56657))))))

(assert (=> d!31475 (= (simpleValid!75 (_2!1225 lt!56657)) e!72275)))

(assert (= (and d!31475 res!54915) b!111160))

(assert (= (and b!111160 res!54916) b!111161))

(assert (= (and b!111161 res!54913) b!111162))

(assert (= (and b!111162 res!54914) b!111163))

(declare-fun m!126667 () Bool)

(assert (=> b!111162 m!126667))

(assert (=> b!111161 m!126667))

(declare-fun m!126669 () Bool)

(assert (=> d!31475 m!126669))

(assert (=> d!30969 d!31475))

(declare-fun d!31477 () Bool)

(declare-fun lt!57426 () Bool)

(assert (=> d!31477 (= lt!57426 (select (content!112 (t!5802 (toList!813 lt!56699))) lt!56517))))

(declare-fun e!72277 () Bool)

(assert (=> d!31477 (= lt!57426 e!72277)))

(declare-fun res!54918 () Bool)

(assert (=> d!31477 (=> (not res!54918) (not e!72277))))

(assert (=> d!31477 (= res!54918 ((_ is Cons!1649) (t!5802 (toList!813 lt!56699))))))

(assert (=> d!31477 (= (contains!839 (t!5802 (toList!813 lt!56699)) lt!56517) lt!57426)))

(declare-fun b!111164 () Bool)

(declare-fun e!72276 () Bool)

(assert (=> b!111164 (= e!72277 e!72276)))

(declare-fun res!54917 () Bool)

(assert (=> b!111164 (=> res!54917 e!72276)))

(assert (=> b!111164 (= res!54917 (= (h!2248 (t!5802 (toList!813 lt!56699))) lt!56517))))

(declare-fun b!111165 () Bool)

(assert (=> b!111165 (= e!72276 (contains!839 (t!5802 (t!5802 (toList!813 lt!56699))) lt!56517))))

(assert (= (and d!31477 res!54918) b!111164))

(assert (= (and b!111164 (not res!54917)) b!111165))

(assert (=> d!31477 m!126649))

(declare-fun m!126671 () Bool)

(assert (=> d!31477 m!126671))

(declare-fun m!126673 () Bool)

(assert (=> b!111165 m!126673))

(assert (=> b!110262 d!31477))

(declare-fun d!31479 () Bool)

(declare-fun lt!57427 () Bool)

(assert (=> d!31479 (= lt!57427 (select (content!112 lt!56702) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun e!72279 () Bool)

(assert (=> d!31479 (= lt!57427 e!72279)))

(declare-fun res!54920 () Bool)

(assert (=> d!31479 (=> (not res!54920) (not e!72279))))

(assert (=> d!31479 (= res!54920 ((_ is Cons!1649) lt!56702))))

(assert (=> d!31479 (= (contains!839 lt!56702 (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))) lt!57427)))

(declare-fun b!111166 () Bool)

(declare-fun e!72278 () Bool)

(assert (=> b!111166 (= e!72279 e!72278)))

(declare-fun res!54919 () Bool)

(assert (=> b!111166 (=> res!54919 e!72278)))

(assert (=> b!111166 (= res!54919 (= (h!2248 lt!56702) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun b!111167 () Bool)

(assert (=> b!111167 (= e!72278 (contains!839 (t!5802 lt!56702) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(assert (= (and d!31479 res!54920) b!111166))

(assert (= (and b!111166 (not res!54919)) b!111167))

(declare-fun m!126675 () Bool)

(assert (=> d!31479 m!126675))

(declare-fun m!126677 () Bool)

(assert (=> d!31479 m!126677))

(declare-fun m!126679 () Bool)

(assert (=> b!111167 m!126679))

(assert (=> b!110387 d!31479))

(declare-fun d!31481 () Bool)

(assert (=> d!31481 (= (apply!100 lt!56917 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1359 (getValueByKey!157 (toList!813 lt!56917) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4586 () Bool)

(assert (= bs!4586 d!31481))

(assert (=> bs!4586 m!125229))

(assert (=> bs!4586 m!126127))

(assert (=> bs!4586 m!126127))

(declare-fun m!126681 () Bool)

(assert (=> bs!4586 m!126681))

(assert (=> b!110405 d!31481))

(declare-fun d!31483 () Bool)

(declare-fun c!19794 () Bool)

(assert (=> d!31483 (= c!19794 ((_ is ValueCellFull!1005) (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!72280 () V!3243)

(assert (=> d!31483 (= (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72280)))

(declare-fun b!111168 () Bool)

(assert (=> b!111168 (= e!72280 (get!1357 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111169 () Bool)

(assert (=> b!111169 (= e!72280 (get!1358 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31483 c!19794) b!111168))

(assert (= (and d!31483 (not c!19794)) b!111169))

(assert (=> b!111168 m!125225))

(assert (=> b!111168 m!124559))

(declare-fun m!126683 () Bool)

(assert (=> b!111168 m!126683))

(assert (=> b!111169 m!125225))

(assert (=> b!111169 m!124559))

(declare-fun m!126685 () Bool)

(assert (=> b!111169 m!126685))

(assert (=> b!110405 d!31483))

(assert (=> d!31069 d!31067))

(declare-fun d!31485 () Bool)

(assert (=> d!31485 (= (getValueByKey!157 lt!56694 (_1!1224 lt!56517)) (Some!162 (_2!1224 lt!56517)))))

(assert (=> d!31485 true))

(declare-fun _$22!447 () Unit!3421)

(assert (=> d!31485 (= (choose!693 lt!56694 (_1!1224 lt!56517) (_2!1224 lt!56517)) _$22!447)))

(declare-fun bs!4587 () Bool)

(assert (= bs!4587 d!31485))

(assert (=> bs!4587 m!124741))

(assert (=> d!31069 d!31485))

(declare-fun d!31487 () Bool)

(declare-fun res!54921 () Bool)

(declare-fun e!72281 () Bool)

(assert (=> d!31487 (=> res!54921 e!72281)))

(assert (=> d!31487 (= res!54921 (or ((_ is Nil!1650) lt!56694) ((_ is Nil!1650) (t!5802 lt!56694))))))

(assert (=> d!31487 (= (isStrictlySorted!306 lt!56694) e!72281)))

(declare-fun b!111170 () Bool)

(declare-fun e!72282 () Bool)

(assert (=> b!111170 (= e!72281 e!72282)))

(declare-fun res!54922 () Bool)

(assert (=> b!111170 (=> (not res!54922) (not e!72282))))

(assert (=> b!111170 (= res!54922 (bvslt (_1!1224 (h!2248 lt!56694)) (_1!1224 (h!2248 (t!5802 lt!56694)))))))

(declare-fun b!111171 () Bool)

(assert (=> b!111171 (= e!72282 (isStrictlySorted!306 (t!5802 lt!56694)))))

(assert (= (and d!31487 (not res!54921)) b!111170))

(assert (= (and b!111170 res!54922) b!111171))

(declare-fun m!126687 () Bool)

(assert (=> b!111171 m!126687))

(assert (=> d!31069 d!31487))

(declare-fun d!31489 () Bool)

(declare-fun res!54923 () Bool)

(declare-fun e!72283 () Bool)

(assert (=> d!31489 (=> (not res!54923) (not e!72283))))

(assert (=> d!31489 (= res!54923 (simpleValid!75 (_2!1225 lt!57097)))))

(assert (=> d!31489 (= (valid!419 (_2!1225 lt!57097)) e!72283)))

(declare-fun b!111172 () Bool)

(declare-fun res!54924 () Bool)

(assert (=> b!111172 (=> (not res!54924) (not e!72283))))

(assert (=> b!111172 (= res!54924 (= (arrayCountValidKeys!0 (_keys!4341 (_2!1225 lt!57097)) #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!57097)))) (_size!508 (_2!1225 lt!57097))))))

(declare-fun b!111173 () Bool)

(declare-fun res!54925 () Bool)

(assert (=> b!111173 (=> (not res!54925) (not e!72283))))

(assert (=> b!111173 (= res!54925 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 (_2!1225 lt!57097)) (mask!6795 (_2!1225 lt!57097))))))

(declare-fun b!111174 () Bool)

(assert (=> b!111174 (= e!72283 (arrayNoDuplicates!0 (_keys!4341 (_2!1225 lt!57097)) #b00000000000000000000000000000000 Nil!1649))))

(assert (= (and d!31489 res!54923) b!111172))

(assert (= (and b!111172 res!54924) b!111173))

(assert (= (and b!111173 res!54925) b!111174))

(declare-fun m!126689 () Bool)

(assert (=> d!31489 m!126689))

(declare-fun m!126691 () Bool)

(assert (=> b!111172 m!126691))

(declare-fun m!126693 () Bool)

(assert (=> b!111173 m!126693))

(declare-fun m!126695 () Bool)

(assert (=> b!111174 m!126695))

(assert (=> b!110603 d!31489))

(assert (=> d!31091 d!30933))

(assert (=> d!31091 d!30935))

(declare-fun d!31491 () Bool)

(assert (=> d!31491 (isDefined!111 (getValueByKey!157 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31491 true))

(declare-fun _$12!359 () Unit!3421)

(assert (=> d!31491 (= (choose!702 (toList!813 lt!56524) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) _$12!359)))

(declare-fun bs!4588 () Bool)

(assert (= bs!4588 d!31491))

(assert (=> bs!4588 m!124515))

(assert (=> bs!4588 m!124627))

(assert (=> bs!4588 m!124627))

(assert (=> bs!4588 m!124629))

(assert (=> d!31091 d!31491))

(declare-fun d!31493 () Bool)

(declare-fun res!54926 () Bool)

(declare-fun e!72284 () Bool)

(assert (=> d!31493 (=> res!54926 e!72284)))

(assert (=> d!31493 (= res!54926 (or ((_ is Nil!1650) (toList!813 lt!56524)) ((_ is Nil!1650) (t!5802 (toList!813 lt!56524)))))))

(assert (=> d!31493 (= (isStrictlySorted!306 (toList!813 lt!56524)) e!72284)))

(declare-fun b!111175 () Bool)

(declare-fun e!72285 () Bool)

(assert (=> b!111175 (= e!72284 e!72285)))

(declare-fun res!54927 () Bool)

(assert (=> b!111175 (=> (not res!54927) (not e!72285))))

(assert (=> b!111175 (= res!54927 (bvslt (_1!1224 (h!2248 (toList!813 lt!56524))) (_1!1224 (h!2248 (t!5802 (toList!813 lt!56524))))))))

(declare-fun b!111176 () Bool)

(assert (=> b!111176 (= e!72285 (isStrictlySorted!306 (t!5802 (toList!813 lt!56524))))))

(assert (= (and d!31493 (not res!54926)) b!111175))

(assert (= (and b!111175 res!54927) b!111176))

(declare-fun m!126697 () Bool)

(assert (=> b!111176 m!126697))

(assert (=> d!31091 d!31493))

(assert (=> d!31013 d!31011))

(declare-fun d!31495 () Bool)

(assert (=> d!31495 (= (getValueByKey!157 lt!56698 (_1!1224 lt!56528)) (Some!162 (_2!1224 lt!56528)))))

(assert (=> d!31495 true))

(declare-fun _$22!448 () Unit!3421)

(assert (=> d!31495 (= (choose!693 lt!56698 (_1!1224 lt!56528) (_2!1224 lt!56528)) _$22!448)))

(declare-fun bs!4589 () Bool)

(assert (= bs!4589 d!31495))

(assert (=> bs!4589 m!124753))

(assert (=> d!31013 d!31495))

(declare-fun d!31497 () Bool)

(declare-fun res!54928 () Bool)

(declare-fun e!72286 () Bool)

(assert (=> d!31497 (=> res!54928 e!72286)))

(assert (=> d!31497 (= res!54928 (or ((_ is Nil!1650) lt!56698) ((_ is Nil!1650) (t!5802 lt!56698))))))

(assert (=> d!31497 (= (isStrictlySorted!306 lt!56698) e!72286)))

(declare-fun b!111177 () Bool)

(declare-fun e!72287 () Bool)

(assert (=> b!111177 (= e!72286 e!72287)))

(declare-fun res!54929 () Bool)

(assert (=> b!111177 (=> (not res!54929) (not e!72287))))

(assert (=> b!111177 (= res!54929 (bvslt (_1!1224 (h!2248 lt!56698)) (_1!1224 (h!2248 (t!5802 lt!56698)))))))

(declare-fun b!111178 () Bool)

(assert (=> b!111178 (= e!72287 (isStrictlySorted!306 (t!5802 lt!56698)))))

(assert (= (and d!31497 (not res!54928)) b!111177))

(assert (= (and b!111177 res!54929) b!111178))

(declare-fun m!126699 () Bool)

(assert (=> b!111178 m!126699))

(assert (=> d!31013 d!31497))

(assert (=> b!110228 d!31281))

(declare-fun d!31499 () Bool)

(declare-fun lt!57428 () Bool)

(assert (=> d!31499 (= lt!57428 (select (content!112 (toList!813 lt!56893)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun e!72289 () Bool)

(assert (=> d!31499 (= lt!57428 e!72289)))

(declare-fun res!54931 () Bool)

(assert (=> d!31499 (=> (not res!54931) (not e!72289))))

(assert (=> d!31499 (= res!54931 ((_ is Cons!1649) (toList!813 lt!56893)))))

(assert (=> d!31499 (= (contains!839 (toList!813 lt!56893) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!57428)))

(declare-fun b!111179 () Bool)

(declare-fun e!72288 () Bool)

(assert (=> b!111179 (= e!72289 e!72288)))

(declare-fun res!54930 () Bool)

(assert (=> b!111179 (=> res!54930 e!72288)))

(assert (=> b!111179 (= res!54930 (= (h!2248 (toList!813 lt!56893)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!111180 () Bool)

(assert (=> b!111180 (= e!72288 (contains!839 (t!5802 (toList!813 lt!56893)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31499 res!54931) b!111179))

(assert (= (and b!111179 (not res!54930)) b!111180))

(declare-fun m!126701 () Bool)

(assert (=> d!31499 m!126701))

(declare-fun m!126703 () Bool)

(assert (=> d!31499 m!126703))

(declare-fun m!126705 () Bool)

(assert (=> b!111180 m!126705))

(assert (=> b!110372 d!31499))

(assert (=> b!110589 d!30953))

(declare-fun b!111181 () Bool)

(declare-fun e!72296 () Bool)

(declare-fun lt!57431 () ListLongMap!1595)

(assert (=> b!111181 (= e!72296 (isEmpty!381 lt!57431))))

(declare-fun bm!11870 () Bool)

(declare-fun call!11873 () ListLongMap!1595)

(assert (=> bm!11870 (= call!11873 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16)))))

(declare-fun b!111182 () Bool)

(declare-fun e!72294 () ListLongMap!1595)

(assert (=> b!111182 (= e!72294 (ListLongMap!1596 Nil!1650))))

(declare-fun b!111183 () Bool)

(declare-fun e!72290 () Bool)

(assert (=> b!111183 (= e!72290 e!72296)))

(declare-fun c!19796 () Bool)

(assert (=> b!111183 (= c!19796 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!111184 () Bool)

(declare-fun e!72291 () Bool)

(assert (=> b!111184 (= e!72291 e!72290)))

(declare-fun c!19798 () Bool)

(declare-fun e!72293 () Bool)

(assert (=> b!111184 (= c!19798 e!72293)))

(declare-fun res!54934 () Bool)

(assert (=> b!111184 (=> (not res!54934) (not e!72293))))

(assert (=> b!111184 (= res!54934 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!111185 () Bool)

(assert (=> b!111185 (= e!72293 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111185 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!111186 () Bool)

(declare-fun res!54933 () Bool)

(assert (=> b!111186 (=> (not res!54933) (not e!72291))))

(assert (=> b!111186 (= res!54933 (not (contains!837 lt!57431 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!31501 () Bool)

(assert (=> d!31501 e!72291))

(declare-fun res!54932 () Bool)

(assert (=> d!31501 (=> (not res!54932) (not e!72291))))

(assert (=> d!31501 (= res!54932 (not (contains!837 lt!57431 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31501 (= lt!57431 e!72294)))

(declare-fun c!19797 () Bool)

(assert (=> d!31501 (= c!19797 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31501 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31501 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57431)))

(declare-fun b!111187 () Bool)

(declare-fun lt!57430 () Unit!3421)

(declare-fun lt!57434 () Unit!3421)

(assert (=> b!111187 (= lt!57430 lt!57434)))

(declare-fun lt!57433 () (_ BitVec 64))

(declare-fun lt!57435 () V!3243)

(declare-fun lt!57432 () (_ BitVec 64))

(declare-fun lt!57429 () ListLongMap!1595)

(assert (=> b!111187 (not (contains!837 (+!149 lt!57429 (tuple2!2429 lt!57432 lt!57435)) lt!57433))))

(assert (=> b!111187 (= lt!57434 (addStillNotContains!50 lt!57429 lt!57432 lt!57435 lt!57433))))

(assert (=> b!111187 (= lt!57433 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!111187 (= lt!57435 (get!1355 (select (arr!2081 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!111187 (= lt!57432 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111187 (= lt!57429 call!11873)))

(declare-fun e!72295 () ListLongMap!1595)

(assert (=> b!111187 (= e!72295 (+!149 call!11873 (tuple2!2429 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (get!1355 (select (arr!2081 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!111188 () Bool)

(assert (=> b!111188 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> b!111188 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_values!2610 newMap!16))))))

(declare-fun e!72292 () Bool)

(assert (=> b!111188 (= e!72292 (= (apply!100 lt!57431 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!111189 () Bool)

(assert (=> b!111189 (= e!72294 e!72295)))

(declare-fun c!19795 () Bool)

(assert (=> b!111189 (= c!19795 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111190 () Bool)

(assert (=> b!111190 (= e!72290 e!72292)))

(assert (=> b!111190 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun res!54935 () Bool)

(assert (=> b!111190 (= res!54935 (contains!837 lt!57431 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111190 (=> (not res!54935) (not e!72292))))

(declare-fun b!111191 () Bool)

(assert (=> b!111191 (= e!72296 (= lt!57431 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16))))))

(declare-fun b!111192 () Bool)

(assert (=> b!111192 (= e!72295 call!11873)))

(assert (= (and d!31501 c!19797) b!111182))

(assert (= (and d!31501 (not c!19797)) b!111189))

(assert (= (and b!111189 c!19795) b!111187))

(assert (= (and b!111189 (not c!19795)) b!111192))

(assert (= (or b!111187 b!111192) bm!11870))

(assert (= (and d!31501 res!54932) b!111186))

(assert (= (and b!111186 res!54933) b!111184))

(assert (= (and b!111184 res!54934) b!111185))

(assert (= (and b!111184 c!19798) b!111190))

(assert (= (and b!111184 (not c!19798)) b!111183))

(assert (= (and b!111190 res!54935) b!111188))

(assert (= (and b!111183 c!19796) b!111191))

(assert (= (and b!111183 (not c!19796)) b!111181))

(declare-fun b_lambda!4999 () Bool)

(assert (=> (not b_lambda!4999) (not b!111187)))

(assert (=> b!111187 t!5810))

(declare-fun b_and!6861 () Bool)

(assert (= b_and!6857 (and (=> t!5810 result!3549) b_and!6861)))

(assert (=> b!111187 t!5812))

(declare-fun b_and!6863 () Bool)

(assert (= b_and!6859 (and (=> t!5812 result!3551) b_and!6863)))

(declare-fun b_lambda!5001 () Bool)

(assert (=> (not b_lambda!5001) (not b!111188)))

(assert (=> b!111188 t!5810))

(declare-fun b_and!6865 () Bool)

(assert (= b_and!6861 (and (=> t!5810 result!3549) b_and!6865)))

(assert (=> b!111188 t!5812))

(declare-fun b_and!6867 () Bool)

(assert (= b_and!6863 (and (=> t!5812 result!3551) b_and!6867)))

(declare-fun m!126707 () Bool)

(assert (=> d!31501 m!126707))

(assert (=> d!31501 m!124861))

(declare-fun m!126709 () Bool)

(assert (=> b!111181 m!126709))

(declare-fun m!126711 () Bool)

(assert (=> b!111187 m!126711))

(assert (=> b!111187 m!124937))

(assert (=> b!111187 m!126711))

(declare-fun m!126713 () Bool)

(assert (=> b!111187 m!126713))

(assert (=> b!111187 m!125057))

(declare-fun m!126715 () Bool)

(assert (=> b!111187 m!126715))

(assert (=> b!111187 m!124875))

(declare-fun m!126717 () Bool)

(assert (=> b!111187 m!126717))

(assert (=> b!111187 m!125057))

(assert (=> b!111187 m!124937))

(assert (=> b!111187 m!125059))

(declare-fun m!126719 () Bool)

(assert (=> bm!11870 m!126719))

(assert (=> b!111190 m!124875))

(assert (=> b!111190 m!124875))

(declare-fun m!126721 () Bool)

(assert (=> b!111190 m!126721))

(assert (=> b!111191 m!126719))

(assert (=> b!111188 m!124937))

(assert (=> b!111188 m!124875))

(assert (=> b!111188 m!125057))

(assert (=> b!111188 m!124937))

(assert (=> b!111188 m!125059))

(assert (=> b!111188 m!124875))

(declare-fun m!126723 () Bool)

(assert (=> b!111188 m!126723))

(assert (=> b!111188 m!125057))

(assert (=> b!111189 m!124875))

(assert (=> b!111189 m!124875))

(assert (=> b!111189 m!124877))

(assert (=> b!111185 m!124875))

(assert (=> b!111185 m!124875))

(assert (=> b!111185 m!124877))

(declare-fun m!126725 () Bool)

(assert (=> b!111186 m!126725))

(assert (=> bm!11773 d!31501))

(assert (=> d!30939 d!30911))

(declare-fun d!31503 () Bool)

(assert (=> d!31503 (= (apply!100 lt!56797 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1359 (getValueByKey!157 (toList!813 lt!56797) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4590 () Bool)

(assert (= bs!4590 d!31503))

(assert (=> bs!4590 m!124875))

(declare-fun m!126727 () Bool)

(assert (=> bs!4590 m!126727))

(assert (=> bs!4590 m!126727))

(declare-fun m!126729 () Bool)

(assert (=> bs!4590 m!126729))

(assert (=> b!110241 d!31503))

(declare-fun c!19799 () Bool)

(declare-fun d!31505 () Bool)

(assert (=> d!31505 (= c!19799 ((_ is ValueCellFull!1005) (select (arr!2081 (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!72297 () V!3243)

(assert (=> d!31505 (= (get!1355 (select (arr!2081 (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72297)))

(declare-fun b!111193 () Bool)

(assert (=> b!111193 (= e!72297 (get!1357 (select (arr!2081 (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111194 () Bool)

(assert (=> b!111194 (= e!72297 (get!1358 (select (arr!2081 (ite c!19483 (_values!2610 newMap!16) (array!4391 (store (arr!2081 (_values!2610 newMap!16)) (index!3235 lt!56639) (ValueCellFull!1005 lt!56527)) (size!2338 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31505 c!19799) b!111193))

(assert (= (and d!31505 (not c!19799)) b!111194))

(assert (=> b!111193 m!124939))

(assert (=> b!111193 m!124937))

(declare-fun m!126731 () Bool)

(assert (=> b!111193 m!126731))

(assert (=> b!111194 m!124939))

(assert (=> b!111194 m!124937))

(declare-fun m!126733 () Bool)

(assert (=> b!111194 m!126733))

(assert (=> b!110241 d!31505))

(declare-fun d!31507 () Bool)

(declare-fun lt!57436 () Bool)

(assert (=> d!31507 (= lt!57436 (select (content!112 lt!56690) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun e!72299 () Bool)

(assert (=> d!31507 (= lt!57436 e!72299)))

(declare-fun res!54937 () Bool)

(assert (=> d!31507 (=> (not res!54937) (not e!72299))))

(assert (=> d!31507 (= res!54937 ((_ is Cons!1649) lt!56690))))

(assert (=> d!31507 (= (contains!839 lt!56690 (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))) lt!57436)))

(declare-fun b!111195 () Bool)

(declare-fun e!72298 () Bool)

(assert (=> b!111195 (= e!72299 e!72298)))

(declare-fun res!54936 () Bool)

(assert (=> b!111195 (=> res!54936 e!72298)))

(assert (=> b!111195 (= res!54936 (= (h!2248 lt!56690) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun b!111196 () Bool)

(assert (=> b!111196 (= e!72298 (contains!839 (t!5802 lt!56690) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(assert (= (and d!31507 res!54937) b!111195))

(assert (= (and b!111195 (not res!54936)) b!111196))

(declare-fun m!126735 () Bool)

(assert (=> d!31507 m!126735))

(declare-fun m!126737 () Bool)

(assert (=> d!31507 m!126737))

(declare-fun m!126739 () Bool)

(assert (=> b!111196 m!126739))

(assert (=> b!110278 d!31507))

(declare-fun bm!11871 () Bool)

(declare-fun call!11875 () ListLongMap!1595)

(assert (=> bm!11871 (= call!11875 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (_2!1225 lt!56657)) (_values!2610 (_2!1225 lt!56657)) (mask!6795 (_2!1225 lt!56657)) (extraKeys!2424 (_2!1225 lt!56657)) (zeroValue!2498 (_2!1225 lt!56657)) (minValue!2498 (_2!1225 lt!56657)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1225 lt!56657))))))

(declare-fun b!111197 () Bool)

(declare-fun e!72303 () Bool)

(declare-fun lt!57440 () ListLongMap!1595)

(assert (=> b!111197 (= e!72303 (= (apply!100 lt!57440 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 (_2!1225 lt!56657))))))

(declare-fun b!111198 () Bool)

(declare-fun e!72306 () Unit!3421)

(declare-fun Unit!3473 () Unit!3421)

(assert (=> b!111198 (= e!72306 Unit!3473)))

(declare-fun b!111199 () Bool)

(declare-fun e!72312 () Bool)

(assert (=> b!111199 (= e!72312 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000)))))

(declare-fun b!111200 () Bool)

(declare-fun e!72311 () ListLongMap!1595)

(declare-fun call!11878 () ListLongMap!1595)

(assert (=> b!111200 (= e!72311 (+!149 call!11878 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (_2!1225 lt!56657)))))))

(declare-fun bm!11873 () Bool)

(declare-fun call!11879 () Bool)

(assert (=> bm!11873 (= call!11879 (contains!837 lt!57440 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111201 () Bool)

(declare-fun e!72307 () Bool)

(assert (=> b!111201 (= e!72307 (= (apply!100 lt!57440 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 (_2!1225 lt!56657))))))

(declare-fun b!111202 () Bool)

(declare-fun e!72301 () Bool)

(assert (=> b!111202 (= e!72301 e!72307)))

(declare-fun res!54940 () Bool)

(declare-fun call!11880 () Bool)

(assert (=> b!111202 (= res!54940 call!11880)))

(assert (=> b!111202 (=> (not res!54940) (not e!72307))))

(declare-fun b!111203 () Bool)

(declare-fun e!72304 () Bool)

(declare-fun e!72310 () Bool)

(assert (=> b!111203 (= e!72304 e!72310)))

(declare-fun res!54945 () Bool)

(assert (=> b!111203 (=> (not res!54945) (not e!72310))))

(assert (=> b!111203 (= res!54945 (contains!837 lt!57440 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000)))))

(assert (=> b!111203 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))))))

(declare-fun b!111204 () Bool)

(declare-fun e!72305 () Bool)

(assert (=> b!111204 (= e!72305 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000)))))

(declare-fun b!111205 () Bool)

(declare-fun res!54941 () Bool)

(declare-fun e!72302 () Bool)

(assert (=> b!111205 (=> (not res!54941) (not e!72302))))

(assert (=> b!111205 (= res!54941 e!72301)))

(declare-fun c!19800 () Bool)

(assert (=> b!111205 (= c!19800 (not (= (bvand (extraKeys!2424 (_2!1225 lt!56657)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111206 () Bool)

(assert (=> b!111206 (= e!72301 (not call!11880))))

(declare-fun b!111207 () Bool)

(declare-fun e!72300 () ListLongMap!1595)

(declare-fun call!11877 () ListLongMap!1595)

(assert (=> b!111207 (= e!72300 call!11877)))

(declare-fun bm!11874 () Bool)

(declare-fun call!11876 () ListLongMap!1595)

(assert (=> bm!11874 (= call!11877 call!11876)))

(declare-fun bm!11875 () Bool)

(declare-fun call!11874 () ListLongMap!1595)

(assert (=> bm!11875 (= call!11874 call!11878)))

(declare-fun b!111208 () Bool)

(assert (=> b!111208 (= e!72300 call!11874)))

(declare-fun b!111209 () Bool)

(declare-fun c!19802 () Bool)

(assert (=> b!111209 (= c!19802 (and (not (= (bvand (extraKeys!2424 (_2!1225 lt!56657)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 (_2!1225 lt!56657)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72308 () ListLongMap!1595)

(assert (=> b!111209 (= e!72308 e!72300)))

(declare-fun c!19801 () Bool)

(declare-fun bm!11872 () Bool)

(declare-fun c!19805 () Bool)

(assert (=> bm!11872 (= call!11878 (+!149 (ite c!19801 call!11875 (ite c!19805 call!11876 call!11877)) (ite (or c!19801 c!19805) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (_2!1225 lt!56657))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (_2!1225 lt!56657))))))))

(declare-fun d!31509 () Bool)

(assert (=> d!31509 e!72302))

(declare-fun res!54939 () Bool)

(assert (=> d!31509 (=> (not res!54939) (not e!72302))))

(assert (=> d!31509 (= res!54939 (or (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))))))))

(declare-fun lt!57452 () ListLongMap!1595)

(assert (=> d!31509 (= lt!57440 lt!57452)))

(declare-fun lt!57453 () Unit!3421)

(assert (=> d!31509 (= lt!57453 e!72306)))

(declare-fun c!19804 () Bool)

(assert (=> d!31509 (= c!19804 e!72305)))

(declare-fun res!54938 () Bool)

(assert (=> d!31509 (=> (not res!54938) (not e!72305))))

(assert (=> d!31509 (= res!54938 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))))))

(assert (=> d!31509 (= lt!57452 e!72311)))

(assert (=> d!31509 (= c!19801 (and (not (= (bvand (extraKeys!2424 (_2!1225 lt!56657)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 (_2!1225 lt!56657)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31509 (validMask!0 (mask!6795 (_2!1225 lt!56657)))))

(assert (=> d!31509 (= (getCurrentListMap!489 (_keys!4341 (_2!1225 lt!56657)) (_values!2610 (_2!1225 lt!56657)) (mask!6795 (_2!1225 lt!56657)) (extraKeys!2424 (_2!1225 lt!56657)) (zeroValue!2498 (_2!1225 lt!56657)) (minValue!2498 (_2!1225 lt!56657)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1225 lt!56657))) lt!57440)))

(declare-fun b!111210 () Bool)

(assert (=> b!111210 (= e!72311 e!72308)))

(assert (=> b!111210 (= c!19805 (and (not (= (bvand (extraKeys!2424 (_2!1225 lt!56657)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 (_2!1225 lt!56657)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111211 () Bool)

(declare-fun e!72309 () Bool)

(assert (=> b!111211 (= e!72302 e!72309)))

(declare-fun c!19803 () Bool)

(assert (=> b!111211 (= c!19803 (not (= (bvand (extraKeys!2424 (_2!1225 lt!56657)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111212 () Bool)

(assert (=> b!111212 (= e!72309 e!72303)))

(declare-fun res!54942 () Bool)

(assert (=> b!111212 (= res!54942 call!11879)))

(assert (=> b!111212 (=> (not res!54942) (not e!72303))))

(declare-fun bm!11876 () Bool)

(assert (=> bm!11876 (= call!11880 (contains!837 lt!57440 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111213 () Bool)

(declare-fun lt!57456 () Unit!3421)

(assert (=> b!111213 (= e!72306 lt!57456)))

(declare-fun lt!57445 () ListLongMap!1595)

(assert (=> b!111213 (= lt!57445 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (_2!1225 lt!56657)) (_values!2610 (_2!1225 lt!56657)) (mask!6795 (_2!1225 lt!56657)) (extraKeys!2424 (_2!1225 lt!56657)) (zeroValue!2498 (_2!1225 lt!56657)) (minValue!2498 (_2!1225 lt!56657)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1225 lt!56657))))))

(declare-fun lt!57449 () (_ BitVec 64))

(assert (=> b!111213 (= lt!57449 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57455 () (_ BitVec 64))

(assert (=> b!111213 (= lt!57455 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000))))

(declare-fun lt!57454 () Unit!3421)

(assert (=> b!111213 (= lt!57454 (addStillContains!76 lt!57445 lt!57449 (zeroValue!2498 (_2!1225 lt!56657)) lt!57455))))

(assert (=> b!111213 (contains!837 (+!149 lt!57445 (tuple2!2429 lt!57449 (zeroValue!2498 (_2!1225 lt!56657)))) lt!57455)))

(declare-fun lt!57451 () Unit!3421)

(assert (=> b!111213 (= lt!57451 lt!57454)))

(declare-fun lt!57439 () ListLongMap!1595)

(assert (=> b!111213 (= lt!57439 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (_2!1225 lt!56657)) (_values!2610 (_2!1225 lt!56657)) (mask!6795 (_2!1225 lt!56657)) (extraKeys!2424 (_2!1225 lt!56657)) (zeroValue!2498 (_2!1225 lt!56657)) (minValue!2498 (_2!1225 lt!56657)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1225 lt!56657))))))

(declare-fun lt!57441 () (_ BitVec 64))

(assert (=> b!111213 (= lt!57441 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57442 () (_ BitVec 64))

(assert (=> b!111213 (= lt!57442 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000))))

(declare-fun lt!57437 () Unit!3421)

(assert (=> b!111213 (= lt!57437 (addApplyDifferent!76 lt!57439 lt!57441 (minValue!2498 (_2!1225 lt!56657)) lt!57442))))

(assert (=> b!111213 (= (apply!100 (+!149 lt!57439 (tuple2!2429 lt!57441 (minValue!2498 (_2!1225 lt!56657)))) lt!57442) (apply!100 lt!57439 lt!57442))))

(declare-fun lt!57438 () Unit!3421)

(assert (=> b!111213 (= lt!57438 lt!57437)))

(declare-fun lt!57446 () ListLongMap!1595)

(assert (=> b!111213 (= lt!57446 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (_2!1225 lt!56657)) (_values!2610 (_2!1225 lt!56657)) (mask!6795 (_2!1225 lt!56657)) (extraKeys!2424 (_2!1225 lt!56657)) (zeroValue!2498 (_2!1225 lt!56657)) (minValue!2498 (_2!1225 lt!56657)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1225 lt!56657))))))

(declare-fun lt!57444 () (_ BitVec 64))

(assert (=> b!111213 (= lt!57444 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57448 () (_ BitVec 64))

(assert (=> b!111213 (= lt!57448 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000))))

(declare-fun lt!57447 () Unit!3421)

(assert (=> b!111213 (= lt!57447 (addApplyDifferent!76 lt!57446 lt!57444 (zeroValue!2498 (_2!1225 lt!56657)) lt!57448))))

(assert (=> b!111213 (= (apply!100 (+!149 lt!57446 (tuple2!2429 lt!57444 (zeroValue!2498 (_2!1225 lt!56657)))) lt!57448) (apply!100 lt!57446 lt!57448))))

(declare-fun lt!57450 () Unit!3421)

(assert (=> b!111213 (= lt!57450 lt!57447)))

(declare-fun lt!57457 () ListLongMap!1595)

(assert (=> b!111213 (= lt!57457 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (_2!1225 lt!56657)) (_values!2610 (_2!1225 lt!56657)) (mask!6795 (_2!1225 lt!56657)) (extraKeys!2424 (_2!1225 lt!56657)) (zeroValue!2498 (_2!1225 lt!56657)) (minValue!2498 (_2!1225 lt!56657)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1225 lt!56657))))))

(declare-fun lt!57458 () (_ BitVec 64))

(assert (=> b!111213 (= lt!57458 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57443 () (_ BitVec 64))

(assert (=> b!111213 (= lt!57443 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000))))

(assert (=> b!111213 (= lt!57456 (addApplyDifferent!76 lt!57457 lt!57458 (minValue!2498 (_2!1225 lt!56657)) lt!57443))))

(assert (=> b!111213 (= (apply!100 (+!149 lt!57457 (tuple2!2429 lt!57458 (minValue!2498 (_2!1225 lt!56657)))) lt!57443) (apply!100 lt!57457 lt!57443))))

(declare-fun b!111214 () Bool)

(declare-fun res!54944 () Bool)

(assert (=> b!111214 (=> (not res!54944) (not e!72302))))

(assert (=> b!111214 (= res!54944 e!72304)))

(declare-fun res!54946 () Bool)

(assert (=> b!111214 (=> res!54946 e!72304)))

(assert (=> b!111214 (= res!54946 (not e!72312))))

(declare-fun res!54943 () Bool)

(assert (=> b!111214 (=> (not res!54943) (not e!72312))))

(assert (=> b!111214 (= res!54943 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))))))

(declare-fun b!111215 () Bool)

(assert (=> b!111215 (= e!72308 call!11874)))

(declare-fun bm!11877 () Bool)

(assert (=> bm!11877 (= call!11876 call!11875)))

(declare-fun b!111216 () Bool)

(assert (=> b!111216 (= e!72309 (not call!11879))))

(declare-fun b!111217 () Bool)

(assert (=> b!111217 (= e!72310 (= (apply!100 lt!57440 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 (_values!2610 (_2!1225 lt!56657))) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 (_2!1225 lt!56657)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111217 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_values!2610 (_2!1225 lt!56657)))))))

(assert (=> b!111217 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))))))

(assert (= (and d!31509 c!19801) b!111200))

(assert (= (and d!31509 (not c!19801)) b!111210))

(assert (= (and b!111210 c!19805) b!111215))

(assert (= (and b!111210 (not c!19805)) b!111209))

(assert (= (and b!111209 c!19802) b!111208))

(assert (= (and b!111209 (not c!19802)) b!111207))

(assert (= (or b!111208 b!111207) bm!11874))

(assert (= (or b!111215 bm!11874) bm!11877))

(assert (= (or b!111215 b!111208) bm!11875))

(assert (= (or b!111200 bm!11877) bm!11871))

(assert (= (or b!111200 bm!11875) bm!11872))

(assert (= (and d!31509 res!54938) b!111204))

(assert (= (and d!31509 c!19804) b!111213))

(assert (= (and d!31509 (not c!19804)) b!111198))

(assert (= (and d!31509 res!54939) b!111214))

(assert (= (and b!111214 res!54943) b!111199))

(assert (= (and b!111214 (not res!54946)) b!111203))

(assert (= (and b!111203 res!54945) b!111217))

(assert (= (and b!111214 res!54944) b!111205))

(assert (= (and b!111205 c!19800) b!111202))

(assert (= (and b!111205 (not c!19800)) b!111206))

(assert (= (and b!111202 res!54940) b!111201))

(assert (= (or b!111202 b!111206) bm!11876))

(assert (= (and b!111205 res!54941) b!111211))

(assert (= (and b!111211 c!19803) b!111212))

(assert (= (and b!111211 (not c!19803)) b!111216))

(assert (= (and b!111212 res!54942) b!111197))

(assert (= (or b!111212 b!111216) bm!11873))

(declare-fun b_lambda!5003 () Bool)

(assert (=> (not b_lambda!5003) (not b!111217)))

(declare-fun t!5815 () Bool)

(declare-fun tb!2125 () Bool)

(assert (=> (and b!109812 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 (_2!1225 lt!56657))) t!5815) tb!2125))

(declare-fun result!3553 () Bool)

(assert (=> tb!2125 (= result!3553 tp_is_empty!2697)))

(assert (=> b!111217 t!5815))

(declare-fun b_and!6869 () Bool)

(assert (= b_and!6865 (and (=> t!5815 result!3553) b_and!6869)))

(declare-fun tb!2127 () Bool)

(declare-fun t!5817 () Bool)

(assert (=> (and b!109809 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (_2!1225 lt!56657))) t!5817) tb!2127))

(declare-fun result!3555 () Bool)

(assert (= result!3555 result!3553))

(assert (=> b!111217 t!5817))

(declare-fun b_and!6871 () Bool)

(assert (= b_and!6867 (and (=> t!5817 result!3555) b_and!6871)))

(declare-fun m!126741 () Bool)

(assert (=> b!111201 m!126741))

(declare-fun m!126743 () Bool)

(assert (=> b!111200 m!126743))

(declare-fun m!126745 () Bool)

(assert (=> b!111203 m!126745))

(assert (=> b!111203 m!126745))

(declare-fun m!126747 () Bool)

(assert (=> b!111203 m!126747))

(declare-fun m!126749 () Bool)

(assert (=> bm!11872 m!126749))

(assert (=> d!31509 m!126669))

(declare-fun m!126751 () Bool)

(assert (=> b!111213 m!126751))

(declare-fun m!126753 () Bool)

(assert (=> b!111213 m!126753))

(declare-fun m!126755 () Bool)

(assert (=> b!111213 m!126755))

(assert (=> b!111213 m!126745))

(declare-fun m!126757 () Bool)

(assert (=> b!111213 m!126757))

(declare-fun m!126759 () Bool)

(assert (=> b!111213 m!126759))

(declare-fun m!126761 () Bool)

(assert (=> b!111213 m!126761))

(assert (=> b!111213 m!126761))

(declare-fun m!126763 () Bool)

(assert (=> b!111213 m!126763))

(declare-fun m!126765 () Bool)

(assert (=> b!111213 m!126765))

(declare-fun m!126767 () Bool)

(assert (=> b!111213 m!126767))

(declare-fun m!126769 () Bool)

(assert (=> b!111213 m!126769))

(declare-fun m!126771 () Bool)

(assert (=> b!111213 m!126771))

(declare-fun m!126773 () Bool)

(assert (=> b!111213 m!126773))

(assert (=> b!111213 m!126771))

(declare-fun m!126775 () Bool)

(assert (=> b!111213 m!126775))

(declare-fun m!126777 () Bool)

(assert (=> b!111213 m!126777))

(assert (=> b!111213 m!126753))

(declare-fun m!126779 () Bool)

(assert (=> b!111213 m!126779))

(assert (=> b!111213 m!126759))

(declare-fun m!126781 () Bool)

(assert (=> b!111213 m!126781))

(assert (=> b!111199 m!126745))

(assert (=> b!111199 m!126745))

(declare-fun m!126783 () Bool)

(assert (=> b!111199 m!126783))

(assert (=> bm!11871 m!126757))

(declare-fun m!126785 () Bool)

(assert (=> bm!11876 m!126785))

(assert (=> b!111204 m!126745))

(assert (=> b!111204 m!126745))

(assert (=> b!111204 m!126783))

(declare-fun m!126787 () Bool)

(assert (=> bm!11873 m!126787))

(assert (=> b!111217 m!126745))

(declare-fun m!126789 () Bool)

(assert (=> b!111217 m!126789))

(declare-fun m!126791 () Bool)

(assert (=> b!111217 m!126791))

(declare-fun m!126793 () Bool)

(assert (=> b!111217 m!126793))

(assert (=> b!111217 m!126791))

(declare-fun m!126795 () Bool)

(assert (=> b!111217 m!126795))

(assert (=> b!111217 m!126745))

(assert (=> b!111217 m!126793))

(declare-fun m!126797 () Bool)

(assert (=> b!111197 m!126797))

(assert (=> d!31053 d!31509))

(declare-fun bm!11878 () Bool)

(declare-fun call!11881 () (_ BitVec 32))

(assert (=> bm!11878 (= call!11881 (arrayCountValidKeys!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!111218 () Bool)

(declare-fun e!72314 () (_ BitVec 32))

(assert (=> b!111218 (= e!72314 #b00000000000000000000000000000000)))

(declare-fun b!111219 () Bool)

(declare-fun e!72313 () (_ BitVec 32))

(assert (=> b!111219 (= e!72313 call!11881)))

(declare-fun d!31511 () Bool)

(declare-fun lt!57459 () (_ BitVec 32))

(assert (=> d!31511 (and (bvsge lt!57459 #b00000000000000000000000000000000) (bvsle lt!57459 (bvsub (size!2337 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!31511 (= lt!57459 e!72314)))

(declare-fun c!19806 () Bool)

(assert (=> d!31511 (= c!19806 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31511 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 (_keys!4341 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2337 (_keys!4341 newMap!16)) (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31511 (= (arrayCountValidKeys!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 (_keys!4341 newMap!16))) lt!57459)))

(declare-fun b!111220 () Bool)

(assert (=> b!111220 (= e!72314 e!72313)))

(declare-fun c!19807 () Bool)

(assert (=> b!111220 (= c!19807 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!111221 () Bool)

(assert (=> b!111221 (= e!72313 (bvadd #b00000000000000000000000000000001 call!11881))))

(assert (= (and d!31511 c!19806) b!111218))

(assert (= (and d!31511 (not c!19806)) b!111220))

(assert (= (and b!111220 c!19807) b!111221))

(assert (= (and b!111220 (not c!19807)) b!111219))

(assert (= (or b!111221 b!111219) bm!11878))

(declare-fun m!126799 () Bool)

(assert (=> bm!11878 m!126799))

(assert (=> b!111220 m!125681))

(assert (=> b!111220 m!125681))

(declare-fun m!126801 () Bool)

(assert (=> b!111220 m!126801))

(assert (=> bm!11821 d!31511))

(declare-fun d!31513 () Bool)

(assert (=> d!31513 (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57460 () Unit!3421)

(assert (=> d!31513 (= lt!57460 (choose!702 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72315 () Bool)

(assert (=> d!31513 e!72315))

(declare-fun res!54947 () Bool)

(assert (=> d!31513 (=> (not res!54947) (not e!72315))))

(assert (=> d!31513 (= res!54947 (isStrictlySorted!306 (toList!813 lt!56674)))))

(assert (=> d!31513 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000) lt!57460)))

(declare-fun b!111222 () Bool)

(assert (=> b!111222 (= e!72315 (containsKey!161 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31513 res!54947) b!111222))

(assert (=> d!31513 m!125647))

(assert (=> d!31513 m!125647))

(assert (=> d!31513 m!125649))

(declare-fun m!126803 () Bool)

(assert (=> d!31513 m!126803))

(declare-fun m!126805 () Bool)

(assert (=> d!31513 m!126805))

(assert (=> b!111222 m!125643))

(assert (=> b!110638 d!31513))

(assert (=> b!110638 d!31357))

(assert (=> b!110638 d!31359))

(declare-fun d!31515 () Bool)

(declare-fun e!72316 () Bool)

(assert (=> d!31515 e!72316))

(declare-fun res!54948 () Bool)

(assert (=> d!31515 (=> res!54948 e!72316)))

(declare-fun lt!57464 () Bool)

(assert (=> d!31515 (= res!54948 (not lt!57464))))

(declare-fun lt!57461 () Bool)

(assert (=> d!31515 (= lt!57464 lt!57461)))

(declare-fun lt!57463 () Unit!3421)

(declare-fun e!72317 () Unit!3421)

(assert (=> d!31515 (= lt!57463 e!72317)))

(declare-fun c!19808 () Bool)

(assert (=> d!31515 (= c!19808 lt!57461)))

(assert (=> d!31515 (= lt!57461 (containsKey!161 (toList!813 lt!56893) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31515 (= (contains!837 lt!56893 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57464)))

(declare-fun b!111223 () Bool)

(declare-fun lt!57462 () Unit!3421)

(assert (=> b!111223 (= e!72317 lt!57462)))

(assert (=> b!111223 (= lt!57462 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56893) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> b!111223 (isDefined!111 (getValueByKey!157 (toList!813 lt!56893) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111224 () Bool)

(declare-fun Unit!3474 () Unit!3421)

(assert (=> b!111224 (= e!72317 Unit!3474)))

(declare-fun b!111225 () Bool)

(assert (=> b!111225 (= e!72316 (isDefined!111 (getValueByKey!157 (toList!813 lt!56893) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31515 c!19808) b!111223))

(assert (= (and d!31515 (not c!19808)) b!111224))

(assert (= (and d!31515 (not res!54948)) b!111225))

(declare-fun m!126807 () Bool)

(assert (=> d!31515 m!126807))

(declare-fun m!126809 () Bool)

(assert (=> b!111223 m!126809))

(assert (=> b!111223 m!125149))

(assert (=> b!111223 m!125149))

(declare-fun m!126811 () Bool)

(assert (=> b!111223 m!126811))

(assert (=> b!111225 m!125149))

(assert (=> b!111225 m!125149))

(assert (=> b!111225 m!126811))

(assert (=> d!30981 d!31515))

(declare-fun b!111228 () Bool)

(declare-fun e!72319 () Option!163)

(assert (=> b!111228 (= e!72319 (getValueByKey!157 (t!5802 lt!56896) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!31517 () Bool)

(declare-fun c!19809 () Bool)

(assert (=> d!31517 (= c!19809 (and ((_ is Cons!1649) lt!56896) (= (_1!1224 (h!2248 lt!56896)) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72318 () Option!163)

(assert (=> d!31517 (= (getValueByKey!157 lt!56896 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72318)))

(declare-fun b!111229 () Bool)

(assert (=> b!111229 (= e!72319 None!161)))

(declare-fun b!111227 () Bool)

(assert (=> b!111227 (= e!72318 e!72319)))

(declare-fun c!19810 () Bool)

(assert (=> b!111227 (= c!19810 (and ((_ is Cons!1649) lt!56896) (not (= (_1!1224 (h!2248 lt!56896)) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111226 () Bool)

(assert (=> b!111226 (= e!72318 (Some!162 (_2!1224 (h!2248 lt!56896))))))

(assert (= (and d!31517 c!19809) b!111226))

(assert (= (and d!31517 (not c!19809)) b!111227))

(assert (= (and b!111227 c!19810) b!111228))

(assert (= (and b!111227 (not c!19810)) b!111229))

(declare-fun m!126813 () Bool)

(assert (=> b!111228 m!126813))

(assert (=> d!30981 d!31517))

(declare-fun d!31519 () Bool)

(assert (=> d!31519 (= (getValueByKey!157 lt!56896 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!57465 () Unit!3421)

(assert (=> d!31519 (= lt!57465 (choose!693 lt!56896 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun e!72320 () Bool)

(assert (=> d!31519 e!72320))

(declare-fun res!54949 () Bool)

(assert (=> d!31519 (=> (not res!54949) (not e!72320))))

(assert (=> d!31519 (= res!54949 (isStrictlySorted!306 lt!56896))))

(assert (=> d!31519 (= (lemmaContainsTupThenGetReturnValue!75 lt!56896 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57465)))

(declare-fun b!111230 () Bool)

(declare-fun res!54950 () Bool)

(assert (=> b!111230 (=> (not res!54950) (not e!72320))))

(assert (=> b!111230 (= res!54950 (containsKey!161 lt!56896 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111231 () Bool)

(assert (=> b!111231 (= e!72320 (contains!839 lt!56896 (tuple2!2429 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31519 res!54949) b!111230))

(assert (= (and b!111230 res!54950) b!111231))

(assert (=> d!31519 m!125143))

(declare-fun m!126815 () Bool)

(assert (=> d!31519 m!126815))

(declare-fun m!126817 () Bool)

(assert (=> d!31519 m!126817))

(declare-fun m!126819 () Bool)

(assert (=> b!111230 m!126819))

(declare-fun m!126821 () Bool)

(assert (=> b!111231 m!126821))

(assert (=> d!30981 d!31519))

(declare-fun c!19811 () Bool)

(declare-fun c!19812 () Bool)

(declare-fun b!111232 () Bool)

(declare-fun e!72323 () List!1653)

(assert (=> b!111232 (= e!72323 (ite c!19811 (t!5802 (toList!813 lt!56522)) (ite c!19812 (Cons!1649 (h!2248 (toList!813 lt!56522)) (t!5802 (toList!813 lt!56522))) Nil!1650)))))

(declare-fun b!111233 () Bool)

(declare-fun e!72325 () List!1653)

(declare-fun call!11884 () List!1653)

(assert (=> b!111233 (= e!72325 call!11884)))

(declare-fun c!19814 () Bool)

(declare-fun bm!11879 () Bool)

(declare-fun call!11882 () List!1653)

(assert (=> bm!11879 (= call!11882 ($colon$colon!82 e!72323 (ite c!19814 (h!2248 (toList!813 lt!56522)) (tuple2!2429 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun c!19813 () Bool)

(assert (=> bm!11879 (= c!19813 c!19814)))

(declare-fun b!111234 () Bool)

(declare-fun e!72321 () List!1653)

(assert (=> b!111234 (= e!72321 e!72325)))

(assert (=> b!111234 (= c!19811 (and ((_ is Cons!1649) (toList!813 lt!56522)) (= (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111235 () Bool)

(assert (=> b!111235 (= e!72323 (insertStrictlySorted!77 (t!5802 (toList!813 lt!56522)) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun bm!11880 () Bool)

(declare-fun call!11883 () List!1653)

(assert (=> bm!11880 (= call!11883 call!11884)))

(declare-fun d!31521 () Bool)

(declare-fun e!72324 () Bool)

(assert (=> d!31521 e!72324))

(declare-fun res!54952 () Bool)

(assert (=> d!31521 (=> (not res!54952) (not e!72324))))

(declare-fun lt!57466 () List!1653)

(assert (=> d!31521 (= res!54952 (isStrictlySorted!306 lt!57466))))

(assert (=> d!31521 (= lt!57466 e!72321)))

(assert (=> d!31521 (= c!19814 (and ((_ is Cons!1649) (toList!813 lt!56522)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31521 (isStrictlySorted!306 (toList!813 lt!56522))))

(assert (=> d!31521 (= (insertStrictlySorted!77 (toList!813 lt!56522) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57466)))

(declare-fun b!111236 () Bool)

(declare-fun res!54951 () Bool)

(assert (=> b!111236 (=> (not res!54951) (not e!72324))))

(assert (=> b!111236 (= res!54951 (containsKey!161 lt!57466 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111237 () Bool)

(declare-fun e!72322 () List!1653)

(assert (=> b!111237 (= e!72322 call!11883)))

(declare-fun b!111238 () Bool)

(assert (=> b!111238 (= e!72322 call!11883)))

(declare-fun b!111239 () Bool)

(assert (=> b!111239 (= e!72324 (contains!839 lt!57466 (tuple2!2429 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111240 () Bool)

(assert (=> b!111240 (= e!72321 call!11882)))

(declare-fun bm!11881 () Bool)

(assert (=> bm!11881 (= call!11884 call!11882)))

(declare-fun b!111241 () Bool)

(assert (=> b!111241 (= c!19812 (and ((_ is Cons!1649) (toList!813 lt!56522)) (bvsgt (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> b!111241 (= e!72325 e!72322)))

(assert (= (and d!31521 c!19814) b!111240))

(assert (= (and d!31521 (not c!19814)) b!111234))

(assert (= (and b!111234 c!19811) b!111233))

(assert (= (and b!111234 (not c!19811)) b!111241))

(assert (= (and b!111241 c!19812) b!111237))

(assert (= (and b!111241 (not c!19812)) b!111238))

(assert (= (or b!111237 b!111238) bm!11880))

(assert (= (or b!111233 bm!11880) bm!11881))

(assert (= (or b!111240 bm!11881) bm!11879))

(assert (= (and bm!11879 c!19813) b!111235))

(assert (= (and bm!11879 (not c!19813)) b!111232))

(assert (= (and d!31521 res!54952) b!111236))

(assert (= (and b!111236 res!54951) b!111239))

(declare-fun m!126823 () Bool)

(assert (=> d!31521 m!126823))

(assert (=> d!31521 m!124995))

(declare-fun m!126825 () Bool)

(assert (=> bm!11879 m!126825))

(declare-fun m!126827 () Bool)

(assert (=> b!111239 m!126827))

(declare-fun m!126829 () Bool)

(assert (=> b!111235 m!126829))

(declare-fun m!126831 () Bool)

(assert (=> b!111236 m!126831))

(assert (=> d!30981 d!31521))

(assert (=> d!30989 d!30955))

(declare-fun bm!11882 () Bool)

(declare-fun call!11886 () ListLongMap!1595)

(assert (=> bm!11882 (= call!11886 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56651 lt!56527 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!111242 () Bool)

(declare-fun e!72329 () Bool)

(declare-fun lt!57470 () ListLongMap!1595)

(assert (=> b!111242 (= e!72329 (= (apply!100 lt!57470 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun b!111243 () Bool)

(declare-fun e!72332 () Unit!3421)

(declare-fun Unit!3475 () Unit!3421)

(assert (=> b!111243 (= e!72332 Unit!3475)))

(declare-fun b!111244 () Bool)

(declare-fun e!72338 () Bool)

(assert (=> b!111244 (= e!72338 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111245 () Bool)

(declare-fun e!72337 () ListLongMap!1595)

(declare-fun call!11889 () ListLongMap!1595)

(assert (=> b!111245 (= e!72337 (+!149 call!11889 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun bm!11884 () Bool)

(declare-fun call!11890 () Bool)

(assert (=> bm!11884 (= call!11890 (contains!837 lt!57470 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111246 () Bool)

(declare-fun e!72333 () Bool)

(assert (=> b!111246 (= e!72333 (= (apply!100 lt!57470 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56527))))

(declare-fun b!111247 () Bool)

(declare-fun e!72327 () Bool)

(assert (=> b!111247 (= e!72327 e!72333)))

(declare-fun res!54955 () Bool)

(declare-fun call!11891 () Bool)

(assert (=> b!111247 (= res!54955 call!11891)))

(assert (=> b!111247 (=> (not res!54955) (not e!72333))))

(declare-fun b!111248 () Bool)

(declare-fun e!72330 () Bool)

(declare-fun e!72336 () Bool)

(assert (=> b!111248 (= e!72330 e!72336)))

(declare-fun res!54960 () Bool)

(assert (=> b!111248 (=> (not res!54960) (not e!72336))))

(assert (=> b!111248 (= res!54960 (contains!837 lt!57470 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111248 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!111249 () Bool)

(declare-fun e!72331 () Bool)

(assert (=> b!111249 (= e!72331 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111250 () Bool)

(declare-fun res!54956 () Bool)

(declare-fun e!72328 () Bool)

(assert (=> b!111250 (=> (not res!54956) (not e!72328))))

(assert (=> b!111250 (= res!54956 e!72327)))

(declare-fun c!19815 () Bool)

(assert (=> b!111250 (= c!19815 (not (= (bvand lt!56651 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111251 () Bool)

(assert (=> b!111251 (= e!72327 (not call!11891))))

(declare-fun b!111252 () Bool)

(declare-fun e!72326 () ListLongMap!1595)

(declare-fun call!11888 () ListLongMap!1595)

(assert (=> b!111252 (= e!72326 call!11888)))

(declare-fun bm!11885 () Bool)

(declare-fun call!11887 () ListLongMap!1595)

(assert (=> bm!11885 (= call!11888 call!11887)))

(declare-fun bm!11886 () Bool)

(declare-fun call!11885 () ListLongMap!1595)

(assert (=> bm!11886 (= call!11885 call!11889)))

(declare-fun b!111253 () Bool)

(assert (=> b!111253 (= e!72326 call!11885)))

(declare-fun b!111254 () Bool)

(declare-fun c!19817 () Bool)

(assert (=> b!111254 (= c!19817 (and (not (= (bvand lt!56651 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!56651 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72334 () ListLongMap!1595)

(assert (=> b!111254 (= e!72334 e!72326)))

(declare-fun c!19816 () Bool)

(declare-fun bm!11883 () Bool)

(declare-fun c!19820 () Bool)

(assert (=> bm!11883 (= call!11889 (+!149 (ite c!19816 call!11886 (ite c!19820 call!11887 call!11888)) (ite (or c!19816 c!19820) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun d!31523 () Bool)

(assert (=> d!31523 e!72328))

(declare-fun res!54954 () Bool)

(assert (=> d!31523 (=> (not res!54954) (not e!72328))))

(assert (=> d!31523 (= res!54954 (or (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))))

(declare-fun lt!57482 () ListLongMap!1595)

(assert (=> d!31523 (= lt!57470 lt!57482)))

(declare-fun lt!57483 () Unit!3421)

(assert (=> d!31523 (= lt!57483 e!72332)))

(declare-fun c!19819 () Bool)

(assert (=> d!31523 (= c!19819 e!72331)))

(declare-fun res!54953 () Bool)

(assert (=> d!31523 (=> (not res!54953) (not e!72331))))

(assert (=> d!31523 (= res!54953 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31523 (= lt!57482 e!72337)))

(assert (=> d!31523 (= c!19816 (and (not (= (bvand lt!56651 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!56651 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31523 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31523 (= (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56651 lt!56527 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57470)))

(declare-fun b!111255 () Bool)

(assert (=> b!111255 (= e!72337 e!72334)))

(assert (=> b!111255 (= c!19820 (and (not (= (bvand lt!56651 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!56651 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111256 () Bool)

(declare-fun e!72335 () Bool)

(assert (=> b!111256 (= e!72328 e!72335)))

(declare-fun c!19818 () Bool)

(assert (=> b!111256 (= c!19818 (not (= (bvand lt!56651 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111257 () Bool)

(assert (=> b!111257 (= e!72335 e!72329)))

(declare-fun res!54957 () Bool)

(assert (=> b!111257 (= res!54957 call!11890)))

(assert (=> b!111257 (=> (not res!54957) (not e!72329))))

(declare-fun bm!11887 () Bool)

(assert (=> bm!11887 (= call!11891 (contains!837 lt!57470 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111258 () Bool)

(declare-fun lt!57486 () Unit!3421)

(assert (=> b!111258 (= e!72332 lt!57486)))

(declare-fun lt!57475 () ListLongMap!1595)

(assert (=> b!111258 (= lt!57475 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56651 lt!56527 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57479 () (_ BitVec 64))

(assert (=> b!111258 (= lt!57479 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57485 () (_ BitVec 64))

(assert (=> b!111258 (= lt!57485 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57484 () Unit!3421)

(assert (=> b!111258 (= lt!57484 (addStillContains!76 lt!57475 lt!57479 lt!56527 lt!57485))))

(assert (=> b!111258 (contains!837 (+!149 lt!57475 (tuple2!2429 lt!57479 lt!56527)) lt!57485)))

(declare-fun lt!57481 () Unit!3421)

(assert (=> b!111258 (= lt!57481 lt!57484)))

(declare-fun lt!57469 () ListLongMap!1595)

(assert (=> b!111258 (= lt!57469 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56651 lt!56527 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57471 () (_ BitVec 64))

(assert (=> b!111258 (= lt!57471 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57472 () (_ BitVec 64))

(assert (=> b!111258 (= lt!57472 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57467 () Unit!3421)

(assert (=> b!111258 (= lt!57467 (addApplyDifferent!76 lt!57469 lt!57471 (minValue!2498 newMap!16) lt!57472))))

(assert (=> b!111258 (= (apply!100 (+!149 lt!57469 (tuple2!2429 lt!57471 (minValue!2498 newMap!16))) lt!57472) (apply!100 lt!57469 lt!57472))))

(declare-fun lt!57468 () Unit!3421)

(assert (=> b!111258 (= lt!57468 lt!57467)))

(declare-fun lt!57476 () ListLongMap!1595)

(assert (=> b!111258 (= lt!57476 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56651 lt!56527 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57474 () (_ BitVec 64))

(assert (=> b!111258 (= lt!57474 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57478 () (_ BitVec 64))

(assert (=> b!111258 (= lt!57478 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57477 () Unit!3421)

(assert (=> b!111258 (= lt!57477 (addApplyDifferent!76 lt!57476 lt!57474 lt!56527 lt!57478))))

(assert (=> b!111258 (= (apply!100 (+!149 lt!57476 (tuple2!2429 lt!57474 lt!56527)) lt!57478) (apply!100 lt!57476 lt!57478))))

(declare-fun lt!57480 () Unit!3421)

(assert (=> b!111258 (= lt!57480 lt!57477)))

(declare-fun lt!57487 () ListLongMap!1595)

(assert (=> b!111258 (= lt!57487 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56651 lt!56527 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57488 () (_ BitVec 64))

(assert (=> b!111258 (= lt!57488 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57473 () (_ BitVec 64))

(assert (=> b!111258 (= lt!57473 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111258 (= lt!57486 (addApplyDifferent!76 lt!57487 lt!57488 (minValue!2498 newMap!16) lt!57473))))

(assert (=> b!111258 (= (apply!100 (+!149 lt!57487 (tuple2!2429 lt!57488 (minValue!2498 newMap!16))) lt!57473) (apply!100 lt!57487 lt!57473))))

(declare-fun b!111259 () Bool)

(declare-fun res!54959 () Bool)

(assert (=> b!111259 (=> (not res!54959) (not e!72328))))

(assert (=> b!111259 (= res!54959 e!72330)))

(declare-fun res!54961 () Bool)

(assert (=> b!111259 (=> res!54961 e!72330)))

(assert (=> b!111259 (= res!54961 (not e!72338))))

(declare-fun res!54958 () Bool)

(assert (=> b!111259 (=> (not res!54958) (not e!72338))))

(assert (=> b!111259 (= res!54958 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!111260 () Bool)

(assert (=> b!111260 (= e!72334 call!11885)))

(declare-fun bm!11888 () Bool)

(assert (=> bm!11888 (= call!11887 call!11886)))

(declare-fun b!111261 () Bool)

(assert (=> b!111261 (= e!72335 (not call!11890))))

(declare-fun b!111262 () Bool)

(assert (=> b!111262 (= e!72336 (= (apply!100 lt!57470 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111262 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_values!2610 newMap!16))))))

(assert (=> b!111262 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (= (and d!31523 c!19816) b!111245))

(assert (= (and d!31523 (not c!19816)) b!111255))

(assert (= (and b!111255 c!19820) b!111260))

(assert (= (and b!111255 (not c!19820)) b!111254))

(assert (= (and b!111254 c!19817) b!111253))

(assert (= (and b!111254 (not c!19817)) b!111252))

(assert (= (or b!111253 b!111252) bm!11885))

(assert (= (or b!111260 bm!11885) bm!11888))

(assert (= (or b!111260 b!111253) bm!11886))

(assert (= (or b!111245 bm!11888) bm!11882))

(assert (= (or b!111245 bm!11886) bm!11883))

(assert (= (and d!31523 res!54953) b!111249))

(assert (= (and d!31523 c!19819) b!111258))

(assert (= (and d!31523 (not c!19819)) b!111243))

(assert (= (and d!31523 res!54954) b!111259))

(assert (= (and b!111259 res!54958) b!111244))

(assert (= (and b!111259 (not res!54961)) b!111248))

(assert (= (and b!111248 res!54960) b!111262))

(assert (= (and b!111259 res!54959) b!111250))

(assert (= (and b!111250 c!19815) b!111247))

(assert (= (and b!111250 (not c!19815)) b!111251))

(assert (= (and b!111247 res!54955) b!111246))

(assert (= (or b!111247 b!111251) bm!11887))

(assert (= (and b!111250 res!54956) b!111256))

(assert (= (and b!111256 c!19818) b!111257))

(assert (= (and b!111256 (not c!19818)) b!111261))

(assert (= (and b!111257 res!54957) b!111242))

(assert (= (or b!111257 b!111261) bm!11884))

(declare-fun b_lambda!5005 () Bool)

(assert (=> (not b_lambda!5005) (not b!111262)))

(assert (=> b!111262 t!5810))

(declare-fun b_and!6873 () Bool)

(assert (= b_and!6869 (and (=> t!5810 result!3549) b_and!6873)))

(assert (=> b!111262 t!5812))

(declare-fun b_and!6875 () Bool)

(assert (= b_and!6871 (and (=> t!5812 result!3551) b_and!6875)))

(declare-fun m!126833 () Bool)

(assert (=> b!111246 m!126833))

(declare-fun m!126835 () Bool)

(assert (=> b!111245 m!126835))

(assert (=> b!111248 m!124875))

(assert (=> b!111248 m!124875))

(declare-fun m!126837 () Bool)

(assert (=> b!111248 m!126837))

(declare-fun m!126839 () Bool)

(assert (=> bm!11883 m!126839))

(assert (=> d!31523 m!124861))

(declare-fun m!126841 () Bool)

(assert (=> b!111258 m!126841))

(declare-fun m!126843 () Bool)

(assert (=> b!111258 m!126843))

(declare-fun m!126845 () Bool)

(assert (=> b!111258 m!126845))

(assert (=> b!111258 m!124875))

(declare-fun m!126847 () Bool)

(assert (=> b!111258 m!126847))

(declare-fun m!126849 () Bool)

(assert (=> b!111258 m!126849))

(declare-fun m!126851 () Bool)

(assert (=> b!111258 m!126851))

(assert (=> b!111258 m!126851))

(declare-fun m!126853 () Bool)

(assert (=> b!111258 m!126853))

(declare-fun m!126855 () Bool)

(assert (=> b!111258 m!126855))

(declare-fun m!126857 () Bool)

(assert (=> b!111258 m!126857))

(declare-fun m!126859 () Bool)

(assert (=> b!111258 m!126859))

(declare-fun m!126861 () Bool)

(assert (=> b!111258 m!126861))

(declare-fun m!126863 () Bool)

(assert (=> b!111258 m!126863))

(assert (=> b!111258 m!126861))

(declare-fun m!126865 () Bool)

(assert (=> b!111258 m!126865))

(declare-fun m!126867 () Bool)

(assert (=> b!111258 m!126867))

(assert (=> b!111258 m!126843))

(declare-fun m!126869 () Bool)

(assert (=> b!111258 m!126869))

(assert (=> b!111258 m!126849))

(declare-fun m!126871 () Bool)

(assert (=> b!111258 m!126871))

(assert (=> b!111244 m!124875))

(assert (=> b!111244 m!124875))

(assert (=> b!111244 m!124877))

(assert (=> bm!11882 m!126847))

(declare-fun m!126873 () Bool)

(assert (=> bm!11887 m!126873))

(assert (=> b!111249 m!124875))

(assert (=> b!111249 m!124875))

(assert (=> b!111249 m!124877))

(declare-fun m!126875 () Bool)

(assert (=> bm!11884 m!126875))

(assert (=> b!111262 m!124875))

(declare-fun m!126877 () Bool)

(assert (=> b!111262 m!126877))

(assert (=> b!111262 m!124937))

(assert (=> b!111262 m!125057))

(assert (=> b!111262 m!124937))

(assert (=> b!111262 m!125059))

(assert (=> b!111262 m!124875))

(assert (=> b!111262 m!125057))

(declare-fun m!126879 () Bool)

(assert (=> b!111242 m!126879))

(assert (=> d!30989 d!31523))

(assert (=> d!30989 d!31171))

(declare-fun d!31525 () Bool)

(declare-fun e!72339 () Bool)

(assert (=> d!31525 e!72339))

(declare-fun res!54962 () Bool)

(assert (=> d!31525 (=> (not res!54962) (not e!72339))))

(declare-fun lt!57489 () ListLongMap!1595)

(assert (=> d!31525 (= res!54962 (contains!837 lt!57489 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527))))))

(declare-fun lt!57492 () List!1653)

(assert (=> d!31525 (= lt!57489 (ListLongMap!1596 lt!57492))))

(declare-fun lt!57490 () Unit!3421)

(declare-fun lt!57491 () Unit!3421)

(assert (=> d!31525 (= lt!57490 lt!57491)))

(assert (=> d!31525 (= (getValueByKey!157 lt!57492 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527))) (Some!162 (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527))))))

(assert (=> d!31525 (= lt!57491 (lemmaContainsTupThenGetReturnValue!75 lt!57492 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527))))))

(assert (=> d!31525 (= lt!57492 (insertStrictlySorted!77 (toList!813 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527))))))

(assert (=> d!31525 (= (+!149 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527)) lt!57489)))

(declare-fun b!111263 () Bool)

(declare-fun res!54963 () Bool)

(assert (=> b!111263 (=> (not res!54963) (not e!72339))))

(assert (=> b!111263 (= res!54963 (= (getValueByKey!157 (toList!813 lt!57489) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527))) (Some!162 (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527)))))))

(declare-fun b!111264 () Bool)

(assert (=> b!111264 (= e!72339 (contains!839 (toList!813 lt!57489) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527)))))

(assert (= (and d!31525 res!54962) b!111263))

(assert (= (and b!111263 res!54963) b!111264))

(declare-fun m!126881 () Bool)

(assert (=> d!31525 m!126881))

(declare-fun m!126883 () Bool)

(assert (=> d!31525 m!126883))

(declare-fun m!126885 () Bool)

(assert (=> d!31525 m!126885))

(declare-fun m!126887 () Bool)

(assert (=> d!31525 m!126887))

(declare-fun m!126889 () Bool)

(assert (=> b!111263 m!126889))

(declare-fun m!126891 () Bool)

(assert (=> b!111264 m!126891))

(assert (=> d!30989 d!31525))

(declare-fun d!31527 () Bool)

(assert (=> d!31527 (= (+!149 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56651 lt!56527 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(assert (=> d!31527 true))

(declare-fun _$7!98 () Unit!3421)

(assert (=> d!31527 (= (choose!696 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56651 (zeroValue!2498 newMap!16) lt!56527 (minValue!2498 newMap!16) (defaultEntry!2627 newMap!16)) _$7!98)))

(declare-fun bs!4591 () Bool)

(assert (= bs!4591 d!31527))

(assert (=> bs!4591 m!124677))

(assert (=> bs!4591 m!124677))

(assert (=> bs!4591 m!125185))

(assert (=> bs!4591 m!125187))

(assert (=> d!30989 d!31527))

(declare-fun d!31529 () Bool)

(assert (=> d!31529 (= (get!1359 (getValueByKey!157 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2933 (getValueByKey!157 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30917 d!31529))

(assert (=> d!30917 d!31455))

(assert (=> b!110404 d!31483))

(declare-fun d!31531 () Bool)

(assert (=> d!31531 (not (contains!837 (+!149 lt!56915 (tuple2!2429 lt!56918 lt!56921)) lt!56919))))

(declare-fun lt!57493 () Unit!3421)

(assert (=> d!31531 (= lt!57493 (choose!695 lt!56915 lt!56918 lt!56921 lt!56919))))

(declare-fun e!72340 () Bool)

(assert (=> d!31531 e!72340))

(declare-fun res!54964 () Bool)

(assert (=> d!31531 (=> (not res!54964) (not e!72340))))

(assert (=> d!31531 (= res!54964 (not (contains!837 lt!56915 lt!56919)))))

(assert (=> d!31531 (= (addStillNotContains!50 lt!56915 lt!56918 lt!56921 lt!56919) lt!57493)))

(declare-fun b!111265 () Bool)

(assert (=> b!111265 (= e!72340 (not (= lt!56918 lt!56919)))))

(assert (= (and d!31531 res!54964) b!111265))

(assert (=> d!31531 m!125221))

(assert (=> d!31531 m!125221))

(assert (=> d!31531 m!125223))

(declare-fun m!126893 () Bool)

(assert (=> d!31531 m!126893))

(declare-fun m!126895 () Bool)

(assert (=> d!31531 m!126895))

(assert (=> b!110404 d!31531))

(declare-fun d!31533 () Bool)

(declare-fun e!72341 () Bool)

(assert (=> d!31533 e!72341))

(declare-fun res!54965 () Bool)

(assert (=> d!31533 (=> (not res!54965) (not e!72341))))

(declare-fun lt!57494 () ListLongMap!1595)

(assert (=> d!31533 (= res!54965 (contains!837 lt!57494 (_1!1224 (tuple2!2429 lt!56918 lt!56921))))))

(declare-fun lt!57497 () List!1653)

(assert (=> d!31533 (= lt!57494 (ListLongMap!1596 lt!57497))))

(declare-fun lt!57495 () Unit!3421)

(declare-fun lt!57496 () Unit!3421)

(assert (=> d!31533 (= lt!57495 lt!57496)))

(assert (=> d!31533 (= (getValueByKey!157 lt!57497 (_1!1224 (tuple2!2429 lt!56918 lt!56921))) (Some!162 (_2!1224 (tuple2!2429 lt!56918 lt!56921))))))

(assert (=> d!31533 (= lt!57496 (lemmaContainsTupThenGetReturnValue!75 lt!57497 (_1!1224 (tuple2!2429 lt!56918 lt!56921)) (_2!1224 (tuple2!2429 lt!56918 lt!56921))))))

(assert (=> d!31533 (= lt!57497 (insertStrictlySorted!77 (toList!813 lt!56915) (_1!1224 (tuple2!2429 lt!56918 lt!56921)) (_2!1224 (tuple2!2429 lt!56918 lt!56921))))))

(assert (=> d!31533 (= (+!149 lt!56915 (tuple2!2429 lt!56918 lt!56921)) lt!57494)))

(declare-fun b!111266 () Bool)

(declare-fun res!54966 () Bool)

(assert (=> b!111266 (=> (not res!54966) (not e!72341))))

(assert (=> b!111266 (= res!54966 (= (getValueByKey!157 (toList!813 lt!57494) (_1!1224 (tuple2!2429 lt!56918 lt!56921))) (Some!162 (_2!1224 (tuple2!2429 lt!56918 lt!56921)))))))

(declare-fun b!111267 () Bool)

(assert (=> b!111267 (= e!72341 (contains!839 (toList!813 lt!57494) (tuple2!2429 lt!56918 lt!56921)))))

(assert (= (and d!31533 res!54965) b!111266))

(assert (= (and b!111266 res!54966) b!111267))

(declare-fun m!126897 () Bool)

(assert (=> d!31533 m!126897))

(declare-fun m!126899 () Bool)

(assert (=> d!31533 m!126899))

(declare-fun m!126901 () Bool)

(assert (=> d!31533 m!126901))

(declare-fun m!126903 () Bool)

(assert (=> d!31533 m!126903))

(declare-fun m!126905 () Bool)

(assert (=> b!111266 m!126905))

(declare-fun m!126907 () Bool)

(assert (=> b!111267 m!126907))

(assert (=> b!110404 d!31533))

(declare-fun d!31535 () Bool)

(declare-fun e!72342 () Bool)

(assert (=> d!31535 e!72342))

(declare-fun res!54967 () Bool)

(assert (=> d!31535 (=> res!54967 e!72342)))

(declare-fun lt!57501 () Bool)

(assert (=> d!31535 (= res!54967 (not lt!57501))))

(declare-fun lt!57498 () Bool)

(assert (=> d!31535 (= lt!57501 lt!57498)))

(declare-fun lt!57500 () Unit!3421)

(declare-fun e!72343 () Unit!3421)

(assert (=> d!31535 (= lt!57500 e!72343)))

(declare-fun c!19821 () Bool)

(assert (=> d!31535 (= c!19821 lt!57498)))

(assert (=> d!31535 (= lt!57498 (containsKey!161 (toList!813 (+!149 lt!56915 (tuple2!2429 lt!56918 lt!56921))) lt!56919))))

(assert (=> d!31535 (= (contains!837 (+!149 lt!56915 (tuple2!2429 lt!56918 lt!56921)) lt!56919) lt!57501)))

(declare-fun b!111268 () Bool)

(declare-fun lt!57499 () Unit!3421)

(assert (=> b!111268 (= e!72343 lt!57499)))

(assert (=> b!111268 (= lt!57499 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (+!149 lt!56915 (tuple2!2429 lt!56918 lt!56921))) lt!56919))))

(assert (=> b!111268 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56915 (tuple2!2429 lt!56918 lt!56921))) lt!56919))))

(declare-fun b!111269 () Bool)

(declare-fun Unit!3476 () Unit!3421)

(assert (=> b!111269 (= e!72343 Unit!3476)))

(declare-fun b!111270 () Bool)

(assert (=> b!111270 (= e!72342 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56915 (tuple2!2429 lt!56918 lt!56921))) lt!56919)))))

(assert (= (and d!31535 c!19821) b!111268))

(assert (= (and d!31535 (not c!19821)) b!111269))

(assert (= (and d!31535 (not res!54967)) b!111270))

(declare-fun m!126909 () Bool)

(assert (=> d!31535 m!126909))

(declare-fun m!126911 () Bool)

(assert (=> b!111268 m!126911))

(declare-fun m!126913 () Bool)

(assert (=> b!111268 m!126913))

(assert (=> b!111268 m!126913))

(declare-fun m!126915 () Bool)

(assert (=> b!111268 m!126915))

(assert (=> b!111270 m!126913))

(assert (=> b!111270 m!126913))

(assert (=> b!111270 m!126915))

(assert (=> b!110404 d!31535))

(declare-fun d!31537 () Bool)

(declare-fun e!72344 () Bool)

(assert (=> d!31537 e!72344))

(declare-fun res!54968 () Bool)

(assert (=> d!31537 (=> (not res!54968) (not e!72344))))

(declare-fun lt!57502 () ListLongMap!1595)

(assert (=> d!31537 (= res!54968 (contains!837 lt!57502 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!57505 () List!1653)

(assert (=> d!31537 (= lt!57502 (ListLongMap!1596 lt!57505))))

(declare-fun lt!57503 () Unit!3421)

(declare-fun lt!57504 () Unit!3421)

(assert (=> d!31537 (= lt!57503 lt!57504)))

(assert (=> d!31537 (= (getValueByKey!157 lt!57505 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31537 (= lt!57504 (lemmaContainsTupThenGetReturnValue!75 lt!57505 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31537 (= lt!57505 (insertStrictlySorted!77 (toList!813 call!11786) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31537 (= (+!149 call!11786 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!57502)))

(declare-fun b!111271 () Bool)

(declare-fun res!54969 () Bool)

(assert (=> b!111271 (=> (not res!54969) (not e!72344))))

(assert (=> b!111271 (= res!54969 (= (getValueByKey!157 (toList!813 lt!57502) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!111272 () Bool)

(assert (=> b!111272 (= e!72344 (contains!839 (toList!813 lt!57502) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!31537 res!54968) b!111271))

(assert (= (and b!111271 res!54969) b!111272))

(declare-fun m!126917 () Bool)

(assert (=> d!31537 m!126917))

(declare-fun m!126919 () Bool)

(assert (=> d!31537 m!126919))

(declare-fun m!126921 () Bool)

(assert (=> d!31537 m!126921))

(declare-fun m!126923 () Bool)

(assert (=> d!31537 m!126923))

(declare-fun m!126925 () Bool)

(assert (=> b!111271 m!126925))

(declare-fun m!126927 () Bool)

(assert (=> b!111272 m!126927))

(assert (=> b!110404 d!31537))

(declare-fun d!31539 () Bool)

(assert (=> d!31539 (= (apply!100 lt!57002 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1359 (getValueByKey!157 (toList!813 lt!57002) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4592 () Bool)

(assert (= bs!4592 d!31539))

(assert (=> bs!4592 m!124875))

(declare-fun m!126929 () Bool)

(assert (=> bs!4592 m!126929))

(assert (=> bs!4592 m!126929))

(declare-fun m!126931 () Bool)

(assert (=> bs!4592 m!126931))

(assert (=> b!110552 d!31539))

(declare-fun d!31541 () Bool)

(declare-fun c!19822 () Bool)

(assert (=> d!31541 (= c!19822 ((_ is ValueCellFull!1005) (select (arr!2081 (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647)) #b00000000000000000000000000000000)))))

(declare-fun e!72345 () V!3243)

(assert (=> d!31541 (= (get!1355 (select (arr!2081 (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72345)))

(declare-fun b!111273 () Bool)

(assert (=> b!111273 (= e!72345 (get!1357 (select (arr!2081 (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111274 () Bool)

(assert (=> b!111274 (= e!72345 (get!1358 (select (arr!2081 (ite (or c!19483 c!19473) (_values!2610 newMap!16) lt!56647)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31541 c!19822) b!111273))

(assert (= (and d!31541 (not c!19822)) b!111274))

(assert (=> b!111273 m!125531))

(assert (=> b!111273 m!124937))

(declare-fun m!126933 () Bool)

(assert (=> b!111273 m!126933))

(assert (=> b!111274 m!125531))

(assert (=> b!111274 m!124937))

(declare-fun m!126935 () Bool)

(assert (=> b!111274 m!126935))

(assert (=> b!110552 d!31541))

(declare-fun lt!57506 () Bool)

(declare-fun d!31543 () Bool)

(assert (=> d!31543 (= lt!57506 (select (content!112 (toList!813 lt!56957)) (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun e!72347 () Bool)

(assert (=> d!31543 (= lt!57506 e!72347)))

(declare-fun res!54971 () Bool)

(assert (=> d!31543 (=> (not res!54971) (not e!72347))))

(assert (=> d!31543 (= res!54971 ((_ is Cons!1649) (toList!813 lt!56957)))))

(assert (=> d!31543 (= (contains!839 (toList!813 lt!56957) (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!57506)))

(declare-fun b!111275 () Bool)

(declare-fun e!72346 () Bool)

(assert (=> b!111275 (= e!72347 e!72346)))

(declare-fun res!54970 () Bool)

(assert (=> b!111275 (=> res!54970 e!72346)))

(assert (=> b!111275 (= res!54970 (= (h!2248 (toList!813 lt!56957)) (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!111276 () Bool)

(assert (=> b!111276 (= e!72346 (contains!839 (t!5802 (toList!813 lt!56957)) (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31543 res!54971) b!111275))

(assert (= (and b!111275 (not res!54970)) b!111276))

(declare-fun m!126937 () Bool)

(assert (=> d!31543 m!126937))

(declare-fun m!126939 () Bool)

(assert (=> d!31543 m!126939))

(declare-fun m!126941 () Bool)

(assert (=> b!111276 m!126941))

(assert (=> b!110458 d!31543))

(declare-fun d!31545 () Bool)

(assert (=> d!31545 (= (isDefined!111 (getValueByKey!157 (toList!813 lt!56699) (_1!1224 lt!56517))) (not (isEmpty!382 (getValueByKey!157 (toList!813 lt!56699) (_1!1224 lt!56517)))))))

(declare-fun bs!4593 () Bool)

(assert (= bs!4593 d!31545))

(assert (=> bs!4593 m!124771))

(declare-fun m!126943 () Bool)

(assert (=> bs!4593 m!126943))

(assert (=> b!110381 d!31545))

(assert (=> b!110381 d!31063))

(declare-fun d!31547 () Bool)

(declare-fun lt!57507 () Bool)

(assert (=> d!31547 (= lt!57507 (select (content!112 (t!5802 (toList!813 lt!56691))) lt!56517))))

(declare-fun e!72349 () Bool)

(assert (=> d!31547 (= lt!57507 e!72349)))

(declare-fun res!54973 () Bool)

(assert (=> d!31547 (=> (not res!54973) (not e!72349))))

(assert (=> d!31547 (= res!54973 ((_ is Cons!1649) (t!5802 (toList!813 lt!56691))))))

(assert (=> d!31547 (= (contains!839 (t!5802 (toList!813 lt!56691)) lt!56517) lt!57507)))

(declare-fun b!111277 () Bool)

(declare-fun e!72348 () Bool)

(assert (=> b!111277 (= e!72349 e!72348)))

(declare-fun res!54972 () Bool)

(assert (=> b!111277 (=> res!54972 e!72348)))

(assert (=> b!111277 (= res!54972 (= (h!2248 (t!5802 (toList!813 lt!56691))) lt!56517))))

(declare-fun b!111278 () Bool)

(assert (=> b!111278 (= e!72348 (contains!839 (t!5802 (t!5802 (toList!813 lt!56691))) lt!56517))))

(assert (= (and d!31547 res!54973) b!111277))

(assert (= (and b!111277 (not res!54972)) b!111278))

(assert (=> d!31547 m!126605))

(declare-fun m!126945 () Bool)

(assert (=> d!31547 m!126945))

(declare-fun m!126947 () Bool)

(assert (=> b!111278 m!126947))

(assert (=> b!110378 d!31547))

(declare-fun b!111279 () Bool)

(declare-fun e!72351 () Bool)

(declare-fun e!72352 () Bool)

(assert (=> b!111279 (= e!72351 e!72352)))

(declare-fun res!54974 () Bool)

(assert (=> b!111279 (=> (not res!54974) (not e!72352))))

(declare-fun e!72350 () Bool)

(assert (=> b!111279 (= res!54974 (not e!72350))))

(declare-fun res!54975 () Bool)

(assert (=> b!111279 (=> (not res!54975) (not e!72350))))

(assert (=> b!111279 (= res!54975 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!31549 () Bool)

(declare-fun res!54976 () Bool)

(assert (=> d!31549 (=> res!54976 e!72351)))

(assert (=> d!31549 (= res!54976 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31549 (= (arrayNoDuplicates!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19536 (Cons!1648 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) Nil!1649) Nil!1649)) e!72351)))

(declare-fun b!111280 () Bool)

(assert (=> b!111280 (= e!72350 (contains!840 (ite c!19536 (Cons!1648 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) Nil!1649) Nil!1649) (select (arr!2080 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!111281 () Bool)

(declare-fun e!72353 () Bool)

(assert (=> b!111281 (= e!72352 e!72353)))

(declare-fun c!19823 () Bool)

(assert (=> b!111281 (= c!19823 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!11889 () Bool)

(declare-fun call!11892 () Bool)

(assert (=> bm!11889 (= call!11892 (arrayNoDuplicates!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19823 (Cons!1648 (select (arr!2080 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!19536 (Cons!1648 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) Nil!1649) Nil!1649)) (ite c!19536 (Cons!1648 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) Nil!1649) Nil!1649))))))

(declare-fun b!111282 () Bool)

(assert (=> b!111282 (= e!72353 call!11892)))

(declare-fun b!111283 () Bool)

(assert (=> b!111283 (= e!72353 call!11892)))

(assert (= (and d!31549 (not res!54976)) b!111279))

(assert (= (and b!111279 res!54975) b!111280))

(assert (= (and b!111279 res!54974) b!111281))

(assert (= (and b!111281 c!19823) b!111283))

(assert (= (and b!111281 (not c!19823)) b!111282))

(assert (= (or b!111283 b!111282) bm!11889))

(assert (=> b!111279 m!125681))

(assert (=> b!111279 m!125681))

(assert (=> b!111279 m!126801))

(assert (=> b!111280 m!125681))

(assert (=> b!111280 m!125681))

(declare-fun m!126949 () Bool)

(assert (=> b!111280 m!126949))

(assert (=> b!111281 m!125681))

(assert (=> b!111281 m!125681))

(assert (=> b!111281 m!126801))

(assert (=> bm!11889 m!125681))

(declare-fun m!126951 () Bool)

(assert (=> bm!11889 m!126951))

(assert (=> bm!11756 d!31549))

(assert (=> b!110539 d!31281))

(declare-fun d!31551 () Bool)

(assert (=> d!31551 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768))))

(declare-fun lt!57508 () Unit!3421)

(assert (=> d!31551 (= lt!57508 (choose!702 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768))))

(declare-fun e!72354 () Bool)

(assert (=> d!31551 e!72354))

(declare-fun res!54977 () Bool)

(assert (=> d!31551 (=> (not res!54977) (not e!72354))))

(assert (=> d!31551 (= res!54977 (isStrictlySorted!306 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31551 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768) lt!57508)))

(declare-fun b!111284 () Bool)

(assert (=> b!111284 (= e!72354 (containsKey!161 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768))))

(assert (= (and d!31551 res!54977) b!111284))

(assert (=> d!31551 m!125343))

(assert (=> d!31551 m!125343))

(assert (=> d!31551 m!125345))

(declare-fun m!126953 () Bool)

(assert (=> d!31551 m!126953))

(declare-fun m!126955 () Bool)

(assert (=> d!31551 m!126955))

(assert (=> b!111284 m!125339))

(assert (=> b!110450 d!31551))

(assert (=> b!110450 d!31351))

(assert (=> b!110450 d!31353))

(declare-fun d!31553 () Bool)

(declare-fun res!54978 () Bool)

(declare-fun e!72355 () Bool)

(assert (=> d!31553 (=> res!54978 e!72355)))

(assert (=> d!31553 (= res!54978 (and ((_ is Cons!1649) lt!56702) (= (_1!1224 (h!2248 lt!56702)) (_1!1224 lt!56517))))))

(assert (=> d!31553 (= (containsKey!161 lt!56702 (_1!1224 lt!56517)) e!72355)))

(declare-fun b!111285 () Bool)

(declare-fun e!72356 () Bool)

(assert (=> b!111285 (= e!72355 e!72356)))

(declare-fun res!54979 () Bool)

(assert (=> b!111285 (=> (not res!54979) (not e!72356))))

(assert (=> b!111285 (= res!54979 (and (or (not ((_ is Cons!1649) lt!56702)) (bvsle (_1!1224 (h!2248 lt!56702)) (_1!1224 lt!56517))) ((_ is Cons!1649) lt!56702) (bvslt (_1!1224 (h!2248 lt!56702)) (_1!1224 lt!56517))))))

(declare-fun b!111286 () Bool)

(assert (=> b!111286 (= e!72356 (containsKey!161 (t!5802 lt!56702) (_1!1224 lt!56517)))))

(assert (= (and d!31553 (not res!54978)) b!111285))

(assert (= (and b!111285 res!54979) b!111286))

(declare-fun m!126957 () Bool)

(assert (=> b!111286 m!126957))

(assert (=> b!110386 d!31553))

(declare-fun d!31555 () Bool)

(declare-fun res!54980 () Bool)

(declare-fun e!72357 () Bool)

(assert (=> d!31555 (=> res!54980 e!72357)))

(assert (=> d!31555 (= res!54980 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) lt!56768)))))

(assert (=> d!31555 (= (containsKey!161 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56768) e!72357)))

(declare-fun b!111287 () Bool)

(declare-fun e!72358 () Bool)

(assert (=> b!111287 (= e!72357 e!72358)))

(declare-fun res!54981 () Bool)

(assert (=> b!111287 (=> (not res!54981) (not e!72358))))

(assert (=> b!111287 (= res!54981 (and (or (not ((_ is Cons!1649) (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) (bvsle (_1!1224 (h!2248 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) lt!56768)) ((_ is Cons!1649) (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (bvslt (_1!1224 (h!2248 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) lt!56768)))))

(declare-fun b!111288 () Bool)

(assert (=> b!111288 (= e!72358 (containsKey!161 (t!5802 (toList!813 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) lt!56768))))

(assert (= (and d!31555 (not res!54980)) b!111287))

(assert (= (and b!111287 res!54981) b!111288))

(declare-fun m!126959 () Bool)

(assert (=> b!111288 m!126959))

(assert (=> d!31029 d!31555))

(declare-fun d!31557 () Bool)

(assert (=> d!31557 (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57509 () Unit!3421)

(assert (=> d!31557 (= lt!57509 (choose!702 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72359 () Bool)

(assert (=> d!31557 e!72359))

(declare-fun res!54982 () Bool)

(assert (=> d!31557 (=> (not res!54982) (not e!72359))))

(assert (=> d!31557 (= res!54982 (isStrictlySorted!306 (toList!813 lt!56674)))))

(assert (=> d!31557 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000) lt!57509)))

(declare-fun b!111289 () Bool)

(assert (=> b!111289 (= e!72359 (containsKey!161 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31557 res!54982) b!111289))

(assert (=> d!31557 m!125623))

(assert (=> d!31557 m!125623))

(assert (=> d!31557 m!125625))

(declare-fun m!126961 () Bool)

(assert (=> d!31557 m!126961))

(assert (=> d!31557 m!126805))

(assert (=> b!111289 m!125619))

(assert (=> b!110629 d!31557))

(assert (=> b!110629 d!31425))

(assert (=> b!110629 d!31427))

(declare-fun b!111292 () Bool)

(declare-fun e!72361 () Option!163)

(assert (=> b!111292 (= e!72361 (getValueByKey!157 (t!5802 (toList!813 lt!56893)) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!31559 () Bool)

(declare-fun c!19824 () Bool)

(assert (=> d!31559 (= c!19824 (and ((_ is Cons!1649) (toList!813 lt!56893)) (= (_1!1224 (h!2248 (toList!813 lt!56893))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72360 () Option!163)

(assert (=> d!31559 (= (getValueByKey!157 (toList!813 lt!56893) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72360)))

(declare-fun b!111293 () Bool)

(assert (=> b!111293 (= e!72361 None!161)))

(declare-fun b!111291 () Bool)

(assert (=> b!111291 (= e!72360 e!72361)))

(declare-fun c!19825 () Bool)

(assert (=> b!111291 (= c!19825 (and ((_ is Cons!1649) (toList!813 lt!56893)) (not (= (_1!1224 (h!2248 (toList!813 lt!56893))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111290 () Bool)

(assert (=> b!111290 (= e!72360 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56893)))))))

(assert (= (and d!31559 c!19824) b!111290))

(assert (= (and d!31559 (not c!19824)) b!111291))

(assert (= (and b!111291 c!19825) b!111292))

(assert (= (and b!111291 (not c!19825)) b!111293))

(declare-fun m!126963 () Bool)

(assert (=> b!111292 m!126963))

(assert (=> b!110371 d!31559))

(declare-fun d!31561 () Bool)

(declare-fun lt!57510 () Bool)

(assert (=> d!31561 (= lt!57510 (select (content!112 (toList!813 lt!56875)) (tuple2!2429 lt!56675 lt!56678)))))

(declare-fun e!72363 () Bool)

(assert (=> d!31561 (= lt!57510 e!72363)))

(declare-fun res!54984 () Bool)

(assert (=> d!31561 (=> (not res!54984) (not e!72363))))

(assert (=> d!31561 (= res!54984 ((_ is Cons!1649) (toList!813 lt!56875)))))

(assert (=> d!31561 (= (contains!839 (toList!813 lt!56875) (tuple2!2429 lt!56675 lt!56678)) lt!57510)))

(declare-fun b!111294 () Bool)

(declare-fun e!72362 () Bool)

(assert (=> b!111294 (= e!72363 e!72362)))

(declare-fun res!54983 () Bool)

(assert (=> b!111294 (=> res!54983 e!72362)))

(assert (=> b!111294 (= res!54983 (= (h!2248 (toList!813 lt!56875)) (tuple2!2429 lt!56675 lt!56678)))))

(declare-fun b!111295 () Bool)

(assert (=> b!111295 (= e!72362 (contains!839 (t!5802 (toList!813 lt!56875)) (tuple2!2429 lt!56675 lt!56678)))))

(assert (= (and d!31561 res!54984) b!111294))

(assert (= (and b!111294 (not res!54983)) b!111295))

(declare-fun m!126965 () Bool)

(assert (=> d!31561 m!126965))

(declare-fun m!126967 () Bool)

(assert (=> d!31561 m!126967))

(declare-fun m!126969 () Bool)

(assert (=> b!111295 m!126969))

(assert (=> b!110356 d!31561))

(assert (=> d!30929 d!31171))

(declare-fun d!31563 () Bool)

(assert (=> d!31563 (= (apply!100 lt!57002 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1359 (getValueByKey!157 (toList!813 lt!57002) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4594 () Bool)

(assert (= bs!4594 d!31563))

(declare-fun m!126971 () Bool)

(assert (=> bs!4594 m!126971))

(assert (=> bs!4594 m!126971))

(declare-fun m!126973 () Bool)

(assert (=> bs!4594 m!126973))

(assert (=> b!110532 d!31563))

(declare-fun d!31565 () Bool)

(declare-fun res!54985 () Bool)

(declare-fun e!72364 () Bool)

(assert (=> d!31565 (=> res!54985 e!72364)))

(assert (=> d!31565 (= res!54985 (and ((_ is Cons!1649) (toList!813 lt!56674)) (= (_1!1224 (h!2248 (toList!813 lt!56674))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31565 (= (containsKey!161 (toList!813 lt!56674) #b0000000000000000000000000000000000000000000000000000000000000000) e!72364)))

(declare-fun b!111296 () Bool)

(declare-fun e!72365 () Bool)

(assert (=> b!111296 (= e!72364 e!72365)))

(declare-fun res!54986 () Bool)

(assert (=> b!111296 (=> (not res!54986) (not e!72365))))

(assert (=> b!111296 (= res!54986 (and (or (not ((_ is Cons!1649) (toList!813 lt!56674))) (bvsle (_1!1224 (h!2248 (toList!813 lt!56674))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1649) (toList!813 lt!56674)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56674))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111297 () Bool)

(assert (=> b!111297 (= e!72365 (containsKey!161 (t!5802 (toList!813 lt!56674)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31565 (not res!54985)) b!111296))

(assert (= (and b!111296 res!54986) b!111297))

(declare-fun m!126975 () Bool)

(assert (=> b!111297 m!126975))

(assert (=> d!31105 d!31565))

(declare-fun e!72367 () Option!163)

(declare-fun b!111300 () Bool)

(assert (=> b!111300 (= e!72367 (getValueByKey!157 (t!5802 (toList!813 lt!56957)) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun c!19826 () Bool)

(declare-fun d!31567 () Bool)

(assert (=> d!31567 (= c!19826 (and ((_ is Cons!1649) (toList!813 lt!56957)) (= (_1!1224 (h!2248 (toList!813 lt!56957))) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72366 () Option!163)

(assert (=> d!31567 (= (getValueByKey!157 (toList!813 lt!56957) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72366)))

(declare-fun b!111301 () Bool)

(assert (=> b!111301 (= e!72367 None!161)))

(declare-fun b!111299 () Bool)

(assert (=> b!111299 (= e!72366 e!72367)))

(declare-fun c!19827 () Bool)

(assert (=> b!111299 (= c!19827 (and ((_ is Cons!1649) (toList!813 lt!56957)) (not (= (_1!1224 (h!2248 (toList!813 lt!56957))) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111298 () Bool)

(assert (=> b!111298 (= e!72366 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56957)))))))

(assert (= (and d!31567 c!19826) b!111298))

(assert (= (and d!31567 (not c!19826)) b!111299))

(assert (= (and b!111299 c!19827) b!111300))

(assert (= (and b!111299 (not c!19827)) b!111301))

(declare-fun m!126977 () Bool)

(assert (=> b!111300 m!126977))

(assert (=> b!110457 d!31567))

(declare-fun c!19828 () Bool)

(declare-fun c!19829 () Bool)

(declare-fun b!111302 () Bool)

(declare-fun e!72370 () List!1653)

(assert (=> b!111302 (= e!72370 (ite c!19828 (t!5802 (t!5802 (toList!813 lt!56522))) (ite c!19829 (Cons!1649 (h!2248 (t!5802 (toList!813 lt!56522))) (t!5802 (t!5802 (toList!813 lt!56522)))) Nil!1650)))))

(declare-fun b!111303 () Bool)

(declare-fun e!72372 () List!1653)

(declare-fun call!11895 () List!1653)

(assert (=> b!111303 (= e!72372 call!11895)))

(declare-fun c!19831 () Bool)

(declare-fun bm!11890 () Bool)

(declare-fun call!11893 () List!1653)

(assert (=> bm!11890 (= call!11893 ($colon$colon!82 e!72370 (ite c!19831 (h!2248 (t!5802 (toList!813 lt!56522))) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528)))))))

(declare-fun c!19830 () Bool)

(assert (=> bm!11890 (= c!19830 c!19831)))

(declare-fun b!111304 () Bool)

(declare-fun e!72368 () List!1653)

(assert (=> b!111304 (= e!72368 e!72372)))

(assert (=> b!111304 (= c!19828 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56522))) (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56522)))) (_1!1224 lt!56528))))))

(declare-fun b!111305 () Bool)

(assert (=> b!111305 (= e!72370 (insertStrictlySorted!77 (t!5802 (t!5802 (toList!813 lt!56522))) (_1!1224 lt!56528) (_2!1224 lt!56528)))))

(declare-fun bm!11891 () Bool)

(declare-fun call!11894 () List!1653)

(assert (=> bm!11891 (= call!11894 call!11895)))

(declare-fun d!31569 () Bool)

(declare-fun e!72371 () Bool)

(assert (=> d!31569 e!72371))

(declare-fun res!54988 () Bool)

(assert (=> d!31569 (=> (not res!54988) (not e!72371))))

(declare-fun lt!57511 () List!1653)

(assert (=> d!31569 (= res!54988 (isStrictlySorted!306 lt!57511))))

(assert (=> d!31569 (= lt!57511 e!72368)))

(assert (=> d!31569 (= c!19831 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56522))) (bvslt (_1!1224 (h!2248 (t!5802 (toList!813 lt!56522)))) (_1!1224 lt!56528))))))

(assert (=> d!31569 (isStrictlySorted!306 (t!5802 (toList!813 lt!56522)))))

(assert (=> d!31569 (= (insertStrictlySorted!77 (t!5802 (toList!813 lt!56522)) (_1!1224 lt!56528) (_2!1224 lt!56528)) lt!57511)))

(declare-fun b!111306 () Bool)

(declare-fun res!54987 () Bool)

(assert (=> b!111306 (=> (not res!54987) (not e!72371))))

(assert (=> b!111306 (= res!54987 (containsKey!161 lt!57511 (_1!1224 lt!56528)))))

(declare-fun b!111307 () Bool)

(declare-fun e!72369 () List!1653)

(assert (=> b!111307 (= e!72369 call!11894)))

(declare-fun b!111308 () Bool)

(assert (=> b!111308 (= e!72369 call!11894)))

(declare-fun b!111309 () Bool)

(assert (=> b!111309 (= e!72371 (contains!839 lt!57511 (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun b!111310 () Bool)

(assert (=> b!111310 (= e!72368 call!11893)))

(declare-fun bm!11892 () Bool)

(assert (=> bm!11892 (= call!11895 call!11893)))

(declare-fun b!111311 () Bool)

(assert (=> b!111311 (= c!19829 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56522))) (bvsgt (_1!1224 (h!2248 (t!5802 (toList!813 lt!56522)))) (_1!1224 lt!56528))))))

(assert (=> b!111311 (= e!72372 e!72369)))

(assert (= (and d!31569 c!19831) b!111310))

(assert (= (and d!31569 (not c!19831)) b!111304))

(assert (= (and b!111304 c!19828) b!111303))

(assert (= (and b!111304 (not c!19828)) b!111311))

(assert (= (and b!111311 c!19829) b!111307))

(assert (= (and b!111311 (not c!19829)) b!111308))

(assert (= (or b!111307 b!111308) bm!11891))

(assert (= (or b!111303 bm!11891) bm!11892))

(assert (= (or b!111310 bm!11892) bm!11890))

(assert (= (and bm!11890 c!19830) b!111305))

(assert (= (and bm!11890 (not c!19830)) b!111302))

(assert (= (and d!31569 res!54988) b!111306))

(assert (= (and b!111306 res!54987) b!111309))

(declare-fun m!126979 () Bool)

(assert (=> d!31569 m!126979))

(assert (=> d!31569 m!126267))

(declare-fun m!126981 () Bool)

(assert (=> bm!11890 m!126981))

(declare-fun m!126983 () Bool)

(assert (=> b!111309 m!126983))

(declare-fun m!126985 () Bool)

(assert (=> b!111305 m!126985))

(declare-fun m!126987 () Bool)

(assert (=> b!111306 m!126987))

(assert (=> b!110302 d!31569))

(declare-fun d!31571 () Bool)

(assert (=> d!31571 (= (apply!100 lt!56849 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1359 (getValueByKey!157 (toList!813 lt!56849) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4595 () Bool)

(assert (= bs!4595 d!31571))

(declare-fun m!126989 () Bool)

(assert (=> bs!4595 m!126989))

(assert (=> bs!4595 m!126989))

(declare-fun m!126991 () Bool)

(assert (=> bs!4595 m!126991))

(assert (=> b!110319 d!31571))

(declare-fun d!31573 () Bool)

(declare-fun e!72373 () Bool)

(assert (=> d!31573 e!72373))

(declare-fun res!54989 () Bool)

(assert (=> d!31573 (=> res!54989 e!72373)))

(declare-fun lt!57515 () Bool)

(assert (=> d!31573 (= res!54989 (not lt!57515))))

(declare-fun lt!57512 () Bool)

(assert (=> d!31573 (= lt!57515 lt!57512)))

(declare-fun lt!57514 () Unit!3421)

(declare-fun e!72374 () Unit!3421)

(assert (=> d!31573 (= lt!57514 e!72374)))

(declare-fun c!19832 () Bool)

(assert (=> d!31573 (= c!19832 lt!57512)))

(assert (=> d!31573 (= lt!57512 (containsKey!161 (toList!813 lt!56797) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31573 (= (contains!837 lt!56797 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) lt!57515)))

(declare-fun b!111312 () Bool)

(declare-fun lt!57513 () Unit!3421)

(assert (=> b!111312 (= e!72374 lt!57513)))

(assert (=> b!111312 (= lt!57513 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56797) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111312 (isDefined!111 (getValueByKey!157 (toList!813 lt!56797) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111313 () Bool)

(declare-fun Unit!3477 () Unit!3421)

(assert (=> b!111313 (= e!72374 Unit!3477)))

(declare-fun b!111314 () Bool)

(assert (=> b!111314 (= e!72373 (isDefined!111 (getValueByKey!157 (toList!813 lt!56797) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31573 c!19832) b!111312))

(assert (= (and d!31573 (not c!19832)) b!111313))

(assert (= (and d!31573 (not res!54989)) b!111314))

(assert (=> d!31573 m!124875))

(declare-fun m!126993 () Bool)

(assert (=> d!31573 m!126993))

(assert (=> b!111312 m!124875))

(declare-fun m!126995 () Bool)

(assert (=> b!111312 m!126995))

(assert (=> b!111312 m!124875))

(assert (=> b!111312 m!126727))

(assert (=> b!111312 m!126727))

(declare-fun m!126997 () Bool)

(assert (=> b!111312 m!126997))

(assert (=> b!111314 m!124875))

(assert (=> b!111314 m!126727))

(assert (=> b!111314 m!126727))

(assert (=> b!111314 m!126997))

(assert (=> b!110227 d!31573))

(declare-fun d!31575 () Bool)

(declare-fun res!54990 () Bool)

(declare-fun e!72375 () Bool)

(assert (=> d!31575 (=> res!54990 e!72375)))

(assert (=> d!31575 (= res!54990 (or ((_ is Nil!1650) lt!56992) ((_ is Nil!1650) (t!5802 lt!56992))))))

(assert (=> d!31575 (= (isStrictlySorted!306 lt!56992) e!72375)))

(declare-fun b!111315 () Bool)

(declare-fun e!72376 () Bool)

(assert (=> b!111315 (= e!72375 e!72376)))

(declare-fun res!54991 () Bool)

(assert (=> b!111315 (=> (not res!54991) (not e!72376))))

(assert (=> b!111315 (= res!54991 (bvslt (_1!1224 (h!2248 lt!56992)) (_1!1224 (h!2248 (t!5802 lt!56992)))))))

(declare-fun b!111316 () Bool)

(assert (=> b!111316 (= e!72376 (isStrictlySorted!306 (t!5802 lt!56992)))))

(assert (= (and d!31575 (not res!54990)) b!111315))

(assert (= (and b!111315 res!54991) b!111316))

(declare-fun m!126999 () Bool)

(assert (=> b!111316 m!126999))

(assert (=> d!31071 d!31575))

(assert (=> d!31071 d!31373))

(declare-fun d!31577 () Bool)

(declare-fun e!72377 () Bool)

(assert (=> d!31577 e!72377))

(declare-fun res!54992 () Bool)

(assert (=> d!31577 (=> res!54992 e!72377)))

(declare-fun lt!57519 () Bool)

(assert (=> d!31577 (= res!54992 (not lt!57519))))

(declare-fun lt!57516 () Bool)

(assert (=> d!31577 (= lt!57519 lt!57516)))

(declare-fun lt!57518 () Unit!3421)

(declare-fun e!72378 () Unit!3421)

(assert (=> d!31577 (= lt!57518 e!72378)))

(declare-fun c!19833 () Bool)

(assert (=> d!31577 (= c!19833 lt!57516)))

(assert (=> d!31577 (= lt!57516 (containsKey!161 (toList!813 lt!56957) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31577 (= (contains!837 lt!56957 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57519)))

(declare-fun b!111317 () Bool)

(declare-fun lt!57517 () Unit!3421)

(assert (=> b!111317 (= e!72378 lt!57517)))

(assert (=> b!111317 (= lt!57517 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56957) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> b!111317 (isDefined!111 (getValueByKey!157 (toList!813 lt!56957) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111318 () Bool)

(declare-fun Unit!3478 () Unit!3421)

(assert (=> b!111318 (= e!72378 Unit!3478)))

(declare-fun b!111319 () Bool)

(assert (=> b!111319 (= e!72377 (isDefined!111 (getValueByKey!157 (toList!813 lt!56957) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31577 c!19833) b!111317))

(assert (= (and d!31577 (not c!19833)) b!111318))

(assert (= (and d!31577 (not res!54992)) b!111319))

(declare-fun m!127001 () Bool)

(assert (=> d!31577 m!127001))

(declare-fun m!127003 () Bool)

(assert (=> b!111317 m!127003))

(assert (=> b!111317 m!125367))

(assert (=> b!111317 m!125367))

(declare-fun m!127005 () Bool)

(assert (=> b!111317 m!127005))

(assert (=> b!111319 m!125367))

(assert (=> b!111319 m!125367))

(assert (=> b!111319 m!127005))

(assert (=> d!31037 d!31577))

(declare-fun b!111322 () Bool)

(declare-fun e!72380 () Option!163)

(assert (=> b!111322 (= e!72380 (getValueByKey!157 (t!5802 lt!56960) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!31579 () Bool)

(declare-fun c!19834 () Bool)

(assert (=> d!31579 (= c!19834 (and ((_ is Cons!1649) lt!56960) (= (_1!1224 (h!2248 lt!56960)) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72379 () Option!163)

(assert (=> d!31579 (= (getValueByKey!157 lt!56960 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72379)))

(declare-fun b!111323 () Bool)

(assert (=> b!111323 (= e!72380 None!161)))

(declare-fun b!111321 () Bool)

(assert (=> b!111321 (= e!72379 e!72380)))

(declare-fun c!19835 () Bool)

(assert (=> b!111321 (= c!19835 (and ((_ is Cons!1649) lt!56960) (not (= (_1!1224 (h!2248 lt!56960)) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111320 () Bool)

(assert (=> b!111320 (= e!72379 (Some!162 (_2!1224 (h!2248 lt!56960))))))

(assert (= (and d!31579 c!19834) b!111320))

(assert (= (and d!31579 (not c!19834)) b!111321))

(assert (= (and b!111321 c!19835) b!111322))

(assert (= (and b!111321 (not c!19835)) b!111323))

(declare-fun m!127007 () Bool)

(assert (=> b!111322 m!127007))

(assert (=> d!31037 d!31579))

(declare-fun d!31581 () Bool)

(assert (=> d!31581 (= (getValueByKey!157 lt!56960 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!57520 () Unit!3421)

(assert (=> d!31581 (= lt!57520 (choose!693 lt!56960 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun e!72381 () Bool)

(assert (=> d!31581 e!72381))

(declare-fun res!54993 () Bool)

(assert (=> d!31581 (=> (not res!54993) (not e!72381))))

(assert (=> d!31581 (= res!54993 (isStrictlySorted!306 lt!56960))))

(assert (=> d!31581 (= (lemmaContainsTupThenGetReturnValue!75 lt!56960 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57520)))

(declare-fun b!111324 () Bool)

(declare-fun res!54994 () Bool)

(assert (=> b!111324 (=> (not res!54994) (not e!72381))))

(assert (=> b!111324 (= res!54994 (containsKey!161 lt!56960 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111325 () Bool)

(assert (=> b!111325 (= e!72381 (contains!839 lt!56960 (tuple2!2429 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31581 res!54993) b!111324))

(assert (= (and b!111324 res!54994) b!111325))

(assert (=> d!31581 m!125361))

(declare-fun m!127009 () Bool)

(assert (=> d!31581 m!127009))

(declare-fun m!127011 () Bool)

(assert (=> d!31581 m!127011))

(declare-fun m!127013 () Bool)

(assert (=> b!111324 m!127013))

(declare-fun m!127015 () Bool)

(assert (=> b!111325 m!127015))

(assert (=> d!31037 d!31581))

(declare-fun e!72384 () List!1653)

(declare-fun c!19836 () Bool)

(declare-fun c!19837 () Bool)

(declare-fun b!111326 () Bool)

(assert (=> b!111326 (= e!72384 (ite c!19836 (t!5802 (toList!813 lt!56752)) (ite c!19837 (Cons!1649 (h!2248 (toList!813 lt!56752)) (t!5802 (toList!813 lt!56752))) Nil!1650)))))

(declare-fun b!111327 () Bool)

(declare-fun e!72386 () List!1653)

(declare-fun call!11898 () List!1653)

(assert (=> b!111327 (= e!72386 call!11898)))

(declare-fun call!11896 () List!1653)

(declare-fun bm!11893 () Bool)

(declare-fun c!19839 () Bool)

(assert (=> bm!11893 (= call!11896 ($colon$colon!82 e!72384 (ite c!19839 (h!2248 (toList!813 lt!56752)) (tuple2!2429 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun c!19838 () Bool)

(assert (=> bm!11893 (= c!19838 c!19839)))

(declare-fun b!111328 () Bool)

(declare-fun e!72382 () List!1653)

(assert (=> b!111328 (= e!72382 e!72386)))

(assert (=> b!111328 (= c!19836 (and ((_ is Cons!1649) (toList!813 lt!56752)) (= (_1!1224 (h!2248 (toList!813 lt!56752))) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111329 () Bool)

(assert (=> b!111329 (= e!72384 (insertStrictlySorted!77 (t!5802 (toList!813 lt!56752)) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun bm!11894 () Bool)

(declare-fun call!11897 () List!1653)

(assert (=> bm!11894 (= call!11897 call!11898)))

(declare-fun d!31583 () Bool)

(declare-fun e!72385 () Bool)

(assert (=> d!31583 e!72385))

(declare-fun res!54996 () Bool)

(assert (=> d!31583 (=> (not res!54996) (not e!72385))))

(declare-fun lt!57521 () List!1653)

(assert (=> d!31583 (= res!54996 (isStrictlySorted!306 lt!57521))))

(assert (=> d!31583 (= lt!57521 e!72382)))

(assert (=> d!31583 (= c!19839 (and ((_ is Cons!1649) (toList!813 lt!56752)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56752))) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31583 (isStrictlySorted!306 (toList!813 lt!56752))))

(assert (=> d!31583 (= (insertStrictlySorted!77 (toList!813 lt!56752) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57521)))

(declare-fun b!111330 () Bool)

(declare-fun res!54995 () Bool)

(assert (=> b!111330 (=> (not res!54995) (not e!72385))))

(assert (=> b!111330 (= res!54995 (containsKey!161 lt!57521 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111331 () Bool)

(declare-fun e!72383 () List!1653)

(assert (=> b!111331 (= e!72383 call!11897)))

(declare-fun b!111332 () Bool)

(assert (=> b!111332 (= e!72383 call!11897)))

(declare-fun b!111333 () Bool)

(assert (=> b!111333 (= e!72385 (contains!839 lt!57521 (tuple2!2429 (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111334 () Bool)

(assert (=> b!111334 (= e!72382 call!11896)))

(declare-fun bm!11895 () Bool)

(assert (=> bm!11895 (= call!11898 call!11896)))

(declare-fun b!111335 () Bool)

(assert (=> b!111335 (= c!19837 (and ((_ is Cons!1649) (toList!813 lt!56752)) (bvsgt (_1!1224 (h!2248 (toList!813 lt!56752))) (_1!1224 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> b!111335 (= e!72386 e!72383)))

(assert (= (and d!31583 c!19839) b!111334))

(assert (= (and d!31583 (not c!19839)) b!111328))

(assert (= (and b!111328 c!19836) b!111327))

(assert (= (and b!111328 (not c!19836)) b!111335))

(assert (= (and b!111335 c!19837) b!111331))

(assert (= (and b!111335 (not c!19837)) b!111332))

(assert (= (or b!111331 b!111332) bm!11894))

(assert (= (or b!111327 bm!11894) bm!11895))

(assert (= (or b!111334 bm!11895) bm!11893))

(assert (= (and bm!11893 c!19838) b!111329))

(assert (= (and bm!11893 (not c!19838)) b!111326))

(assert (= (and d!31583 res!54996) b!111330))

(assert (= (and b!111330 res!54995) b!111333))

(declare-fun m!127017 () Bool)

(assert (=> d!31583 m!127017))

(declare-fun m!127019 () Bool)

(assert (=> d!31583 m!127019))

(declare-fun m!127021 () Bool)

(assert (=> bm!11893 m!127021))

(declare-fun m!127023 () Bool)

(assert (=> b!111333 m!127023))

(declare-fun m!127025 () Bool)

(assert (=> b!111329 m!127025))

(declare-fun m!127027 () Bool)

(assert (=> b!111330 m!127027))

(assert (=> d!31037 d!31583))

(declare-fun d!31585 () Bool)

(assert (=> d!31585 (= (apply!100 lt!56797 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1359 (getValueByKey!157 (toList!813 lt!56797) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4596 () Bool)

(assert (= bs!4596 d!31585))

(declare-fun m!127029 () Bool)

(assert (=> bs!4596 m!127029))

(assert (=> bs!4596 m!127029))

(declare-fun m!127031 () Bool)

(assert (=> bs!4596 m!127031))

(assert (=> b!110221 d!31585))

(assert (=> b!110626 d!31017))

(declare-fun d!31587 () Bool)

(declare-fun res!54997 () Bool)

(declare-fun e!72387 () Bool)

(assert (=> d!31587 (=> res!54997 e!72387)))

(assert (=> d!31587 (= res!54997 (or ((_ is Nil!1650) lt!56941) ((_ is Nil!1650) (t!5802 lt!56941))))))

(assert (=> d!31587 (= (isStrictlySorted!306 lt!56941) e!72387)))

(declare-fun b!111336 () Bool)

(declare-fun e!72388 () Bool)

(assert (=> b!111336 (= e!72387 e!72388)))

(declare-fun res!54998 () Bool)

(assert (=> b!111336 (=> (not res!54998) (not e!72388))))

(assert (=> b!111336 (= res!54998 (bvslt (_1!1224 (h!2248 lt!56941)) (_1!1224 (h!2248 (t!5802 lt!56941)))))))

(declare-fun b!111337 () Bool)

(assert (=> b!111337 (= e!72388 (isStrictlySorted!306 (t!5802 lt!56941)))))

(assert (= (and d!31587 (not res!54997)) b!111336))

(assert (= (and b!111336 res!54998) b!111337))

(declare-fun m!127033 () Bool)

(assert (=> b!111337 m!127033))

(assert (=> d!31015 d!31587))

(declare-fun d!31589 () Bool)

(declare-fun res!54999 () Bool)

(declare-fun e!72389 () Bool)

(assert (=> d!31589 (=> res!54999 e!72389)))

(assert (=> d!31589 (= res!54999 (or ((_ is Nil!1650) (toList!813 (+!149 lt!56522 lt!56517))) ((_ is Nil!1650) (t!5802 (toList!813 (+!149 lt!56522 lt!56517))))))))

(assert (=> d!31589 (= (isStrictlySorted!306 (toList!813 (+!149 lt!56522 lt!56517))) e!72389)))

(declare-fun b!111338 () Bool)

(declare-fun e!72390 () Bool)

(assert (=> b!111338 (= e!72389 e!72390)))

(declare-fun res!55000 () Bool)

(assert (=> b!111338 (=> (not res!55000) (not e!72390))))

(assert (=> b!111338 (= res!55000 (bvslt (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 lt!56517)))) (_1!1224 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56517)))))))))

(declare-fun b!111339 () Bool)

(assert (=> b!111339 (= e!72390 (isStrictlySorted!306 (t!5802 (toList!813 (+!149 lt!56522 lt!56517)))))))

(assert (= (and d!31589 (not res!54999)) b!111338))

(assert (= (and b!111338 res!55000) b!111339))

(assert (=> b!111339 m!126169))

(assert (=> d!31015 d!31589))

(declare-fun b!111340 () Bool)

(declare-fun e!72392 () Bool)

(declare-fun e!72393 () Bool)

(assert (=> b!111340 (= e!72392 e!72393)))

(declare-fun res!55001 () Bool)

(assert (=> b!111340 (=> (not res!55001) (not e!72393))))

(declare-fun e!72391 () Bool)

(assert (=> b!111340 (= res!55001 (not e!72391))))

(declare-fun res!55002 () Bool)

(assert (=> b!111340 (=> (not res!55002) (not e!72391))))

(assert (=> b!111340 (= res!55002 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000)))))

(declare-fun d!31591 () Bool)

(declare-fun res!55003 () Bool)

(assert (=> d!31591 (=> res!55003 e!72392)))

(assert (=> d!31591 (= res!55003 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))))))

(assert (=> d!31591 (= (arrayNoDuplicates!0 (_keys!4341 (_2!1225 lt!56657)) #b00000000000000000000000000000000 Nil!1649) e!72392)))

(declare-fun b!111341 () Bool)

(assert (=> b!111341 (= e!72391 (contains!840 Nil!1649 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000)))))

(declare-fun b!111342 () Bool)

(declare-fun e!72394 () Bool)

(assert (=> b!111342 (= e!72393 e!72394)))

(declare-fun c!19840 () Bool)

(assert (=> b!111342 (= c!19840 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000)))))

(declare-fun bm!11896 () Bool)

(declare-fun call!11899 () Bool)

(assert (=> bm!11896 (= call!11899 (arrayNoDuplicates!0 (_keys!4341 (_2!1225 lt!56657)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19840 (Cons!1648 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000) Nil!1649) Nil!1649)))))

(declare-fun b!111343 () Bool)

(assert (=> b!111343 (= e!72394 call!11899)))

(declare-fun b!111344 () Bool)

(assert (=> b!111344 (= e!72394 call!11899)))

(assert (= (and d!31591 (not res!55003)) b!111340))

(assert (= (and b!111340 res!55002) b!111341))

(assert (= (and b!111340 res!55001) b!111342))

(assert (= (and b!111342 c!19840) b!111344))

(assert (= (and b!111342 (not c!19840)) b!111343))

(assert (= (or b!111344 b!111343) bm!11896))

(assert (=> b!111340 m!126745))

(assert (=> b!111340 m!126745))

(assert (=> b!111340 m!126783))

(assert (=> b!111341 m!126745))

(assert (=> b!111341 m!126745))

(declare-fun m!127035 () Bool)

(assert (=> b!111341 m!127035))

(assert (=> b!111342 m!126745))

(assert (=> b!111342 m!126745))

(assert (=> b!111342 m!126783))

(assert (=> bm!11896 m!126745))

(declare-fun m!127037 () Bool)

(assert (=> bm!11896 m!127037))

(assert (=> b!110363 d!31591))

(declare-fun d!31593 () Bool)

(assert (=> d!31593 (= (isDefined!111 (getValueByKey!157 (toList!813 lt!56687) (_1!1224 lt!56528))) (not (isEmpty!382 (getValueByKey!157 (toList!813 lt!56687) (_1!1224 lt!56528)))))))

(declare-fun bs!4597 () Bool)

(assert (= bs!4597 d!31593))

(assert (=> bs!4597 m!124735))

(declare-fun m!127039 () Bool)

(assert (=> bs!4597 m!127039))

(assert (=> b!110268 d!31593))

(assert (=> b!110268 d!31107))

(declare-fun d!31595 () Bool)

(declare-fun lt!57522 () Bool)

(assert (=> d!31595 (= lt!57522 (select (content!112 lt!56941) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun e!72396 () Bool)

(assert (=> d!31595 (= lt!57522 e!72396)))

(declare-fun res!55005 () Bool)

(assert (=> d!31595 (=> (not res!55005) (not e!72396))))

(assert (=> d!31595 (= res!55005 ((_ is Cons!1649) lt!56941))))

(assert (=> d!31595 (= (contains!839 lt!56941 (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))) lt!57522)))

(declare-fun b!111345 () Bool)

(declare-fun e!72395 () Bool)

(assert (=> b!111345 (= e!72396 e!72395)))

(declare-fun res!55004 () Bool)

(assert (=> b!111345 (=> res!55004 e!72395)))

(assert (=> b!111345 (= res!55004 (= (h!2248 lt!56941) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun b!111346 () Bool)

(assert (=> b!111346 (= e!72395 (contains!839 (t!5802 lt!56941) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(assert (= (and d!31595 res!55005) b!111345))

(assert (= (and b!111345 (not res!55004)) b!111346))

(declare-fun m!127041 () Bool)

(assert (=> d!31595 m!127041))

(declare-fun m!127043 () Bool)

(assert (=> d!31595 m!127043))

(declare-fun m!127045 () Bool)

(assert (=> b!111346 m!127045))

(assert (=> b!110437 d!31595))

(declare-fun d!31597 () Bool)

(declare-fun res!55006 () Bool)

(declare-fun e!72397 () Bool)

(assert (=> d!31597 (=> res!55006 e!72397)))

(assert (=> d!31597 (= res!55006 (and ((_ is Cons!1649) lt!56914) (= (_1!1224 (h!2248 lt!56914)) (_1!1224 lt!56517))))))

(assert (=> d!31597 (= (containsKey!161 lt!56914 (_1!1224 lt!56517)) e!72397)))

(declare-fun b!111347 () Bool)

(declare-fun e!72398 () Bool)

(assert (=> b!111347 (= e!72397 e!72398)))

(declare-fun res!55007 () Bool)

(assert (=> b!111347 (=> (not res!55007) (not e!72398))))

(assert (=> b!111347 (= res!55007 (and (or (not ((_ is Cons!1649) lt!56914)) (bvsle (_1!1224 (h!2248 lt!56914)) (_1!1224 lt!56517))) ((_ is Cons!1649) lt!56914) (bvslt (_1!1224 (h!2248 lt!56914)) (_1!1224 lt!56517))))))

(declare-fun b!111348 () Bool)

(assert (=> b!111348 (= e!72398 (containsKey!161 (t!5802 lt!56914) (_1!1224 lt!56517)))))

(assert (= (and d!31597 (not res!55006)) b!111347))

(assert (= (and b!111347 res!55007) b!111348))

(declare-fun m!127047 () Bool)

(assert (=> b!111348 m!127047))

(assert (=> b!110392 d!31597))

(declare-fun d!31599 () Bool)

(assert (=> d!31599 (= (get!1359 (getValueByKey!157 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2933 (getValueByKey!157 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31087 d!31599))

(declare-fun b!111351 () Bool)

(declare-fun e!72400 () Option!163)

(assert (=> b!111351 (= e!72400 (getValueByKey!157 (t!5802 (toList!813 lt!56674)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!31601 () Bool)

(declare-fun c!19841 () Bool)

(assert (=> d!31601 (= c!19841 (and ((_ is Cons!1649) (toList!813 lt!56674)) (= (_1!1224 (h!2248 (toList!813 lt!56674))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!72399 () Option!163)

(assert (=> d!31601 (= (getValueByKey!157 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!72399)))

(declare-fun b!111352 () Bool)

(assert (=> b!111352 (= e!72400 None!161)))

(declare-fun b!111350 () Bool)

(assert (=> b!111350 (= e!72399 e!72400)))

(declare-fun c!19842 () Bool)

(assert (=> b!111350 (= c!19842 (and ((_ is Cons!1649) (toList!813 lt!56674)) (not (= (_1!1224 (h!2248 (toList!813 lt!56674))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!111349 () Bool)

(assert (=> b!111349 (= e!72399 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56674)))))))

(assert (= (and d!31601 c!19841) b!111349))

(assert (= (and d!31601 (not c!19841)) b!111350))

(assert (= (and b!111350 c!19842) b!111351))

(assert (= (and b!111350 (not c!19842)) b!111352))

(assert (=> b!111351 m!124711))

(declare-fun m!127049 () Bool)

(assert (=> b!111351 m!127049))

(assert (=> d!31087 d!31601))

(declare-fun d!31603 () Bool)

(declare-fun lt!57523 () Bool)

(assert (=> d!31603 (= lt!57523 (select (content!112 lt!56992) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun e!72402 () Bool)

(assert (=> d!31603 (= lt!57523 e!72402)))

(declare-fun res!55009 () Bool)

(assert (=> d!31603 (=> (not res!55009) (not e!72402))))

(assert (=> d!31603 (= res!55009 ((_ is Cons!1649) lt!56992))))

(assert (=> d!31603 (= (contains!839 lt!56992 (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))) lt!57523)))

(declare-fun b!111353 () Bool)

(declare-fun e!72401 () Bool)

(assert (=> b!111353 (= e!72402 e!72401)))

(declare-fun res!55008 () Bool)

(assert (=> b!111353 (=> res!55008 e!72401)))

(assert (=> b!111353 (= res!55008 (= (h!2248 lt!56992) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun b!111354 () Bool)

(assert (=> b!111354 (= e!72401 (contains!839 (t!5802 lt!56992) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(assert (= (and d!31603 res!55009) b!111353))

(assert (= (and b!111353 (not res!55008)) b!111354))

(declare-fun m!127051 () Bool)

(assert (=> d!31603 m!127051))

(declare-fun m!127053 () Bool)

(assert (=> d!31603 m!127053))

(declare-fun m!127055 () Bool)

(assert (=> b!111354 m!127055))

(assert (=> b!110500 d!31603))

(assert (=> b!110602 d!31075))

(declare-fun d!31605 () Bool)

(assert (=> d!31605 (isDefined!111 (getValueByKey!157 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!57524 () Unit!3421)

(assert (=> d!31605 (= lt!57524 (choose!702 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!72403 () Bool)

(assert (=> d!31605 e!72403))

(declare-fun res!55010 () Bool)

(assert (=> d!31605 (=> (not res!55010) (not e!72403))))

(assert (=> d!31605 (= res!55010 (isStrictlySorted!306 (toList!813 e!71569)))))

(assert (=> d!31605 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) lt!57524)))

(declare-fun b!111355 () Bool)

(assert (=> b!111355 (= e!72403 (containsKey!161 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31605 res!55010) b!111355))

(assert (=> d!31605 m!124515))

(assert (=> d!31605 m!124949))

(assert (=> d!31605 m!124949))

(assert (=> d!31605 m!124951))

(assert (=> d!31605 m!124515))

(declare-fun m!127057 () Bool)

(assert (=> d!31605 m!127057))

(declare-fun m!127059 () Bool)

(assert (=> d!31605 m!127059))

(assert (=> b!111355 m!124515))

(assert (=> b!111355 m!124945))

(assert (=> b!110242 d!31605))

(assert (=> b!110242 d!31437))

(assert (=> b!110242 d!31439))

(declare-fun d!31607 () Bool)

(declare-fun res!55011 () Bool)

(declare-fun e!72404 () Bool)

(assert (=> d!31607 (=> res!55011 e!72404)))

(assert (=> d!31607 (= res!55011 (and ((_ is Cons!1649) lt!56690) (= (_1!1224 (h!2248 lt!56690)) (_1!1224 lt!56528))))))

(assert (=> d!31607 (= (containsKey!161 lt!56690 (_1!1224 lt!56528)) e!72404)))

(declare-fun b!111356 () Bool)

(declare-fun e!72405 () Bool)

(assert (=> b!111356 (= e!72404 e!72405)))

(declare-fun res!55012 () Bool)

(assert (=> b!111356 (=> (not res!55012) (not e!72405))))

(assert (=> b!111356 (= res!55012 (and (or (not ((_ is Cons!1649) lt!56690)) (bvsle (_1!1224 (h!2248 lt!56690)) (_1!1224 lt!56528))) ((_ is Cons!1649) lt!56690) (bvslt (_1!1224 (h!2248 lt!56690)) (_1!1224 lt!56528))))))

(declare-fun b!111357 () Bool)

(assert (=> b!111357 (= e!72405 (containsKey!161 (t!5802 lt!56690) (_1!1224 lt!56528)))))

(assert (= (and d!31607 (not res!55011)) b!111356))

(assert (= (and b!111356 res!55012) b!111357))

(declare-fun m!127061 () Bool)

(assert (=> b!111357 m!127061))

(assert (=> b!110277 d!31607))

(declare-fun d!31609 () Bool)

(assert (=> d!31609 (= (content!113 Nil!1649) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!31113 d!31609))

(declare-fun d!31611 () Bool)

(declare-fun e!72406 () Bool)

(assert (=> d!31611 e!72406))

(declare-fun res!55013 () Bool)

(assert (=> d!31611 (=> res!55013 e!72406)))

(declare-fun lt!57528 () Bool)

(assert (=> d!31611 (= res!55013 (not lt!57528))))

(declare-fun lt!57525 () Bool)

(assert (=> d!31611 (= lt!57528 lt!57525)))

(declare-fun lt!57527 () Unit!3421)

(declare-fun e!72407 () Unit!3421)

(assert (=> d!31611 (= lt!57527 e!72407)))

(declare-fun c!19843 () Bool)

(assert (=> d!31611 (= c!19843 lt!57525)))

(assert (=> d!31611 (= lt!57525 (containsKey!161 (toList!813 lt!56875) (_1!1224 (tuple2!2429 lt!56675 lt!56678))))))

(assert (=> d!31611 (= (contains!837 lt!56875 (_1!1224 (tuple2!2429 lt!56675 lt!56678))) lt!57528)))

(declare-fun b!111358 () Bool)

(declare-fun lt!57526 () Unit!3421)

(assert (=> b!111358 (= e!72407 lt!57526)))

(assert (=> b!111358 (= lt!57526 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56875) (_1!1224 (tuple2!2429 lt!56675 lt!56678))))))

(assert (=> b!111358 (isDefined!111 (getValueByKey!157 (toList!813 lt!56875) (_1!1224 (tuple2!2429 lt!56675 lt!56678))))))

(declare-fun b!111359 () Bool)

(declare-fun Unit!3479 () Unit!3421)

(assert (=> b!111359 (= e!72407 Unit!3479)))

(declare-fun b!111360 () Bool)

(assert (=> b!111360 (= e!72406 (isDefined!111 (getValueByKey!157 (toList!813 lt!56875) (_1!1224 (tuple2!2429 lt!56675 lt!56678)))))))

(assert (= (and d!31611 c!19843) b!111358))

(assert (= (and d!31611 (not c!19843)) b!111359))

(assert (= (and d!31611 (not res!55013)) b!111360))

(declare-fun m!127063 () Bool)

(assert (=> d!31611 m!127063))

(declare-fun m!127065 () Bool)

(assert (=> b!111358 m!127065))

(assert (=> b!111358 m!125085))

(assert (=> b!111358 m!125085))

(declare-fun m!127067 () Bool)

(assert (=> b!111358 m!127067))

(assert (=> b!111360 m!125085))

(assert (=> b!111360 m!125085))

(assert (=> b!111360 m!127067))

(assert (=> d!30963 d!31611))

(declare-fun b!111363 () Bool)

(declare-fun e!72409 () Option!163)

(assert (=> b!111363 (= e!72409 (getValueByKey!157 (t!5802 lt!56878) (_1!1224 (tuple2!2429 lt!56675 lt!56678))))))

(declare-fun c!19844 () Bool)

(declare-fun d!31613 () Bool)

(assert (=> d!31613 (= c!19844 (and ((_ is Cons!1649) lt!56878) (= (_1!1224 (h!2248 lt!56878)) (_1!1224 (tuple2!2429 lt!56675 lt!56678)))))))

(declare-fun e!72408 () Option!163)

(assert (=> d!31613 (= (getValueByKey!157 lt!56878 (_1!1224 (tuple2!2429 lt!56675 lt!56678))) e!72408)))

(declare-fun b!111364 () Bool)

(assert (=> b!111364 (= e!72409 None!161)))

(declare-fun b!111362 () Bool)

(assert (=> b!111362 (= e!72408 e!72409)))

(declare-fun c!19845 () Bool)

(assert (=> b!111362 (= c!19845 (and ((_ is Cons!1649) lt!56878) (not (= (_1!1224 (h!2248 lt!56878)) (_1!1224 (tuple2!2429 lt!56675 lt!56678))))))))

(declare-fun b!111361 () Bool)

(assert (=> b!111361 (= e!72408 (Some!162 (_2!1224 (h!2248 lt!56878))))))

(assert (= (and d!31613 c!19844) b!111361))

(assert (= (and d!31613 (not c!19844)) b!111362))

(assert (= (and b!111362 c!19845) b!111363))

(assert (= (and b!111362 (not c!19845)) b!111364))

(declare-fun m!127069 () Bool)

(assert (=> b!111363 m!127069))

(assert (=> d!30963 d!31613))

(declare-fun d!31615 () Bool)

(assert (=> d!31615 (= (getValueByKey!157 lt!56878 (_1!1224 (tuple2!2429 lt!56675 lt!56678))) (Some!162 (_2!1224 (tuple2!2429 lt!56675 lt!56678))))))

(declare-fun lt!57529 () Unit!3421)

(assert (=> d!31615 (= lt!57529 (choose!693 lt!56878 (_1!1224 (tuple2!2429 lt!56675 lt!56678)) (_2!1224 (tuple2!2429 lt!56675 lt!56678))))))

(declare-fun e!72410 () Bool)

(assert (=> d!31615 e!72410))

(declare-fun res!55014 () Bool)

(assert (=> d!31615 (=> (not res!55014) (not e!72410))))

(assert (=> d!31615 (= res!55014 (isStrictlySorted!306 lt!56878))))

(assert (=> d!31615 (= (lemmaContainsTupThenGetReturnValue!75 lt!56878 (_1!1224 (tuple2!2429 lt!56675 lt!56678)) (_2!1224 (tuple2!2429 lt!56675 lt!56678))) lt!57529)))

(declare-fun b!111365 () Bool)

(declare-fun res!55015 () Bool)

(assert (=> b!111365 (=> (not res!55015) (not e!72410))))

(assert (=> b!111365 (= res!55015 (containsKey!161 lt!56878 (_1!1224 (tuple2!2429 lt!56675 lt!56678))))))

(declare-fun b!111366 () Bool)

(assert (=> b!111366 (= e!72410 (contains!839 lt!56878 (tuple2!2429 (_1!1224 (tuple2!2429 lt!56675 lt!56678)) (_2!1224 (tuple2!2429 lt!56675 lt!56678)))))))

(assert (= (and d!31615 res!55014) b!111365))

(assert (= (and b!111365 res!55015) b!111366))

(assert (=> d!31615 m!125079))

(declare-fun m!127071 () Bool)

(assert (=> d!31615 m!127071))

(declare-fun m!127073 () Bool)

(assert (=> d!31615 m!127073))

(declare-fun m!127075 () Bool)

(assert (=> b!111365 m!127075))

(declare-fun m!127077 () Bool)

(assert (=> b!111366 m!127077))

(assert (=> d!30963 d!31615))

(declare-fun c!19847 () Bool)

(declare-fun e!72413 () List!1653)

(declare-fun b!111367 () Bool)

(declare-fun c!19846 () Bool)

(assert (=> b!111367 (= e!72413 (ite c!19846 (t!5802 (toList!813 lt!56672)) (ite c!19847 (Cons!1649 (h!2248 (toList!813 lt!56672)) (t!5802 (toList!813 lt!56672))) Nil!1650)))))

(declare-fun b!111368 () Bool)

(declare-fun e!72415 () List!1653)

(declare-fun call!11902 () List!1653)

(assert (=> b!111368 (= e!72415 call!11902)))

(declare-fun bm!11897 () Bool)

(declare-fun c!19849 () Bool)

(declare-fun call!11900 () List!1653)

(assert (=> bm!11897 (= call!11900 ($colon$colon!82 e!72413 (ite c!19849 (h!2248 (toList!813 lt!56672)) (tuple2!2429 (_1!1224 (tuple2!2429 lt!56675 lt!56678)) (_2!1224 (tuple2!2429 lt!56675 lt!56678))))))))

(declare-fun c!19848 () Bool)

(assert (=> bm!11897 (= c!19848 c!19849)))

(declare-fun b!111369 () Bool)

(declare-fun e!72411 () List!1653)

(assert (=> b!111369 (= e!72411 e!72415)))

(assert (=> b!111369 (= c!19846 (and ((_ is Cons!1649) (toList!813 lt!56672)) (= (_1!1224 (h!2248 (toList!813 lt!56672))) (_1!1224 (tuple2!2429 lt!56675 lt!56678)))))))

(declare-fun b!111370 () Bool)

(assert (=> b!111370 (= e!72413 (insertStrictlySorted!77 (t!5802 (toList!813 lt!56672)) (_1!1224 (tuple2!2429 lt!56675 lt!56678)) (_2!1224 (tuple2!2429 lt!56675 lt!56678))))))

(declare-fun bm!11898 () Bool)

(declare-fun call!11901 () List!1653)

(assert (=> bm!11898 (= call!11901 call!11902)))

(declare-fun d!31617 () Bool)

(declare-fun e!72414 () Bool)

(assert (=> d!31617 e!72414))

(declare-fun res!55017 () Bool)

(assert (=> d!31617 (=> (not res!55017) (not e!72414))))

(declare-fun lt!57530 () List!1653)

(assert (=> d!31617 (= res!55017 (isStrictlySorted!306 lt!57530))))

(assert (=> d!31617 (= lt!57530 e!72411)))

(assert (=> d!31617 (= c!19849 (and ((_ is Cons!1649) (toList!813 lt!56672)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56672))) (_1!1224 (tuple2!2429 lt!56675 lt!56678)))))))

(assert (=> d!31617 (isStrictlySorted!306 (toList!813 lt!56672))))

(assert (=> d!31617 (= (insertStrictlySorted!77 (toList!813 lt!56672) (_1!1224 (tuple2!2429 lt!56675 lt!56678)) (_2!1224 (tuple2!2429 lt!56675 lt!56678))) lt!57530)))

(declare-fun b!111371 () Bool)

(declare-fun res!55016 () Bool)

(assert (=> b!111371 (=> (not res!55016) (not e!72414))))

(assert (=> b!111371 (= res!55016 (containsKey!161 lt!57530 (_1!1224 (tuple2!2429 lt!56675 lt!56678))))))

(declare-fun b!111372 () Bool)

(declare-fun e!72412 () List!1653)

(assert (=> b!111372 (= e!72412 call!11901)))

(declare-fun b!111373 () Bool)

(assert (=> b!111373 (= e!72412 call!11901)))

(declare-fun b!111374 () Bool)

(assert (=> b!111374 (= e!72414 (contains!839 lt!57530 (tuple2!2429 (_1!1224 (tuple2!2429 lt!56675 lt!56678)) (_2!1224 (tuple2!2429 lt!56675 lt!56678)))))))

(declare-fun b!111375 () Bool)

(assert (=> b!111375 (= e!72411 call!11900)))

(declare-fun bm!11899 () Bool)

(assert (=> bm!11899 (= call!11902 call!11900)))

(declare-fun b!111376 () Bool)

(assert (=> b!111376 (= c!19847 (and ((_ is Cons!1649) (toList!813 lt!56672)) (bvsgt (_1!1224 (h!2248 (toList!813 lt!56672))) (_1!1224 (tuple2!2429 lt!56675 lt!56678)))))))

(assert (=> b!111376 (= e!72415 e!72412)))

(assert (= (and d!31617 c!19849) b!111375))

(assert (= (and d!31617 (not c!19849)) b!111369))

(assert (= (and b!111369 c!19846) b!111368))

(assert (= (and b!111369 (not c!19846)) b!111376))

(assert (= (and b!111376 c!19847) b!111372))

(assert (= (and b!111376 (not c!19847)) b!111373))

(assert (= (or b!111372 b!111373) bm!11898))

(assert (= (or b!111368 bm!11898) bm!11899))

(assert (= (or b!111375 bm!11899) bm!11897))

(assert (= (and bm!11897 c!19848) b!111370))

(assert (= (and bm!11897 (not c!19848)) b!111367))

(assert (= (and d!31617 res!55017) b!111371))

(assert (= (and b!111371 res!55016) b!111374))

(declare-fun m!127079 () Bool)

(assert (=> d!31617 m!127079))

(declare-fun m!127081 () Bool)

(assert (=> d!31617 m!127081))

(declare-fun m!127083 () Bool)

(assert (=> bm!11897 m!127083))

(declare-fun m!127085 () Bool)

(assert (=> b!111374 m!127085))

(declare-fun m!127087 () Bool)

(assert (=> b!111370 m!127087))

(declare-fun m!127089 () Bool)

(assert (=> b!111371 m!127089))

(assert (=> d!30963 d!31617))

(declare-fun d!31619 () Bool)

(declare-fun res!55018 () Bool)

(declare-fun e!72416 () Bool)

(assert (=> d!31619 (=> res!55018 e!72416)))

(assert (=> d!31619 (= res!55018 (and ((_ is Cons!1649) (toList!813 lt!56674)) (= (_1!1224 (h!2248 (toList!813 lt!56674))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31619 (= (containsKey!161 (toList!813 lt!56674) #b1000000000000000000000000000000000000000000000000000000000000000) e!72416)))

(declare-fun b!111377 () Bool)

(declare-fun e!72417 () Bool)

(assert (=> b!111377 (= e!72416 e!72417)))

(declare-fun res!55019 () Bool)

(assert (=> b!111377 (=> (not res!55019) (not e!72417))))

(assert (=> b!111377 (= res!55019 (and (or (not ((_ is Cons!1649) (toList!813 lt!56674))) (bvsle (_1!1224 (h!2248 (toList!813 lt!56674))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1649) (toList!813 lt!56674)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56674))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111378 () Bool)

(assert (=> b!111378 (= e!72417 (containsKey!161 (t!5802 (toList!813 lt!56674)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31619 (not res!55018)) b!111377))

(assert (= (and b!111377 res!55019) b!111378))

(declare-fun m!127091 () Bool)

(assert (=> b!111378 m!127091))

(assert (=> d!31095 d!31619))

(declare-fun b!111379 () Bool)

(declare-fun e!72420 () Bool)

(declare-fun call!11903 () Bool)

(assert (=> b!111379 (= e!72420 call!11903)))

(declare-fun b!111380 () Bool)

(declare-fun e!72419 () Bool)

(assert (=> b!111380 (= e!72419 e!72420)))

(declare-fun lt!57533 () (_ BitVec 64))

(assert (=> b!111380 (= lt!57533 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000))))

(declare-fun lt!57531 () Unit!3421)

(assert (=> b!111380 (= lt!57531 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4341 (_2!1225 lt!56657)) lt!57533 #b00000000000000000000000000000000))))

(assert (=> b!111380 (arrayContainsKey!0 (_keys!4341 (_2!1225 lt!56657)) lt!57533 #b00000000000000000000000000000000)))

(declare-fun lt!57532 () Unit!3421)

(assert (=> b!111380 (= lt!57532 lt!57531)))

(declare-fun res!55021 () Bool)

(assert (=> b!111380 (= res!55021 (= (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000) (_keys!4341 (_2!1225 lt!56657)) (mask!6795 (_2!1225 lt!56657))) (Found!271 #b00000000000000000000000000000000)))))

(assert (=> b!111380 (=> (not res!55021) (not e!72420))))

(declare-fun bm!11900 () Bool)

(assert (=> bm!11900 (= call!11903 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4341 (_2!1225 lt!56657)) (mask!6795 (_2!1225 lt!56657))))))

(declare-fun b!111381 () Bool)

(declare-fun e!72418 () Bool)

(assert (=> b!111381 (= e!72418 e!72419)))

(declare-fun c!19850 () Bool)

(assert (=> b!111381 (= c!19850 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000)))))

(declare-fun d!31621 () Bool)

(declare-fun res!55020 () Bool)

(assert (=> d!31621 (=> res!55020 e!72418)))

(assert (=> d!31621 (= res!55020 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))))))

(assert (=> d!31621 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 (_2!1225 lt!56657)) (mask!6795 (_2!1225 lt!56657))) e!72418)))

(declare-fun b!111382 () Bool)

(assert (=> b!111382 (= e!72419 call!11903)))

(assert (= (and d!31621 (not res!55020)) b!111381))

(assert (= (and b!111381 c!19850) b!111380))

(assert (= (and b!111381 (not c!19850)) b!111382))

(assert (= (and b!111380 res!55021) b!111379))

(assert (= (or b!111379 b!111382) bm!11900))

(assert (=> b!111380 m!126745))

(declare-fun m!127093 () Bool)

(assert (=> b!111380 m!127093))

(declare-fun m!127095 () Bool)

(assert (=> b!111380 m!127095))

(assert (=> b!111380 m!126745))

(declare-fun m!127097 () Bool)

(assert (=> b!111380 m!127097))

(declare-fun m!127099 () Bool)

(assert (=> bm!11900 m!127099))

(assert (=> b!111381 m!126745))

(assert (=> b!111381 m!126745))

(assert (=> b!111381 m!126783))

(assert (=> b!110362 d!31621))

(declare-fun d!31623 () Bool)

(assert (=> d!31623 (= (isDefined!111 (getValueByKey!157 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))) (not (isEmpty!382 (getValueByKey!157 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun bs!4598 () Bool)

(assert (= bs!4598 d!31623))

(assert (=> bs!4598 m!125609))

(declare-fun m!127101 () Bool)

(assert (=> bs!4598 m!127101))

(assert (=> b!110623 d!31623))

(declare-fun b!111385 () Bool)

(declare-fun e!72422 () Option!163)

(assert (=> b!111385 (= e!72422 (getValueByKey!157 (t!5802 (toList!813 call!11731)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun c!19851 () Bool)

(declare-fun d!31625 () Bool)

(assert (=> d!31625 (= c!19851 (and ((_ is Cons!1649) (toList!813 call!11731)) (= (_1!1224 (h!2248 (toList!813 call!11731))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(declare-fun e!72421 () Option!163)

(assert (=> d!31625 (= (getValueByKey!157 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) e!72421)))

(declare-fun b!111386 () Bool)

(assert (=> b!111386 (= e!72422 None!161)))

(declare-fun b!111384 () Bool)

(assert (=> b!111384 (= e!72421 e!72422)))

(declare-fun c!19852 () Bool)

(assert (=> b!111384 (= c!19852 (and ((_ is Cons!1649) (toList!813 call!11731)) (not (= (_1!1224 (h!2248 (toList!813 call!11731))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun b!111383 () Bool)

(assert (=> b!111383 (= e!72421 (Some!162 (_2!1224 (h!2248 (toList!813 call!11731)))))))

(assert (= (and d!31625 c!19851) b!111383))

(assert (= (and d!31625 (not c!19851)) b!111384))

(assert (= (and b!111384 c!19852) b!111385))

(assert (= (and b!111384 (not c!19852)) b!111386))

(assert (=> b!111385 m!124515))

(declare-fun m!127103 () Bool)

(assert (=> b!111385 m!127103))

(assert (=> b!110623 d!31625))

(declare-fun b!111405 () Bool)

(declare-fun lt!57539 () SeekEntryResult!271)

(assert (=> b!111405 (and (bvsge (index!3236 lt!57539) #b00000000000000000000000000000000) (bvslt (index!3236 lt!57539) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun e!72436 () Bool)

(assert (=> b!111405 (= e!72436 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3236 lt!57539)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31627 () Bool)

(declare-fun e!72433 () Bool)

(assert (=> d!31627 e!72433))

(declare-fun c!19860 () Bool)

(assert (=> d!31627 (= c!19860 (and ((_ is Intermediate!271) lt!57539) (undefined!1083 lt!57539)))))

(declare-fun e!72437 () SeekEntryResult!271)

(assert (=> d!31627 (= lt!57539 e!72437)))

(declare-fun c!19861 () Bool)

(assert (=> d!31627 (= c!19861 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!57538 () (_ BitVec 64))

(assert (=> d!31627 (= lt!57538 (select (arr!2080 (_keys!4341 newMap!16)) (toIndex!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16))))))

(assert (=> d!31627 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31627 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)) lt!57539)))

(declare-fun b!111406 () Bool)

(declare-fun e!72434 () SeekEntryResult!271)

(assert (=> b!111406 (= e!72437 e!72434)))

(declare-fun c!19859 () Bool)

(assert (=> b!111406 (= c!19859 (or (= lt!57538 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) (= (bvadd lt!57538 lt!57538) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111407 () Bool)

(assert (=> b!111407 (= e!72434 (Intermediate!271 false (toIndex!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!111408 () Bool)

(assert (=> b!111408 (and (bvsge (index!3236 lt!57539) #b00000000000000000000000000000000) (bvslt (index!3236 lt!57539) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun res!55028 () Bool)

(assert (=> b!111408 (= res!55028 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3236 lt!57539)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!111408 (=> res!55028 e!72436)))

(declare-fun e!72435 () Bool)

(assert (=> b!111408 (= e!72435 e!72436)))

(declare-fun b!111409 () Bool)

(assert (=> b!111409 (and (bvsge (index!3236 lt!57539) #b00000000000000000000000000000000) (bvslt (index!3236 lt!57539) (size!2337 (_keys!4341 newMap!16))))))

(declare-fun res!55029 () Bool)

(assert (=> b!111409 (= res!55029 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3236 lt!57539)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111409 (=> res!55029 e!72436)))

(declare-fun b!111410 () Bool)

(assert (=> b!111410 (= e!72433 (bvsge (x!13959 lt!57539) #b01111111111111111111111111111110))))

(declare-fun b!111411 () Bool)

(assert (=> b!111411 (= e!72437 (Intermediate!271 true (toIndex!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!111412 () Bool)

(assert (=> b!111412 (= e!72433 e!72435)))

(declare-fun res!55030 () Bool)

(assert (=> b!111412 (= res!55030 (and ((_ is Intermediate!271) lt!57539) (not (undefined!1083 lt!57539)) (bvslt (x!13959 lt!57539) #b01111111111111111111111111111110) (bvsge (x!13959 lt!57539) #b00000000000000000000000000000000) (bvsge (x!13959 lt!57539) #b00000000000000000000000000000000)))))

(assert (=> b!111412 (=> (not res!55030) (not e!72435))))

(declare-fun b!111413 () Bool)

(assert (=> b!111413 (= e!72434 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) #b00000000000000000000000000000000 (mask!6795 newMap!16)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (= (and d!31627 c!19861) b!111411))

(assert (= (and d!31627 (not c!19861)) b!111406))

(assert (= (and b!111406 c!19859) b!111407))

(assert (= (and b!111406 (not c!19859)) b!111413))

(assert (= (and d!31627 c!19860) b!111410))

(assert (= (and d!31627 (not c!19860)) b!111412))

(assert (= (and b!111412 res!55030) b!111408))

(assert (= (and b!111408 (not res!55028)) b!111409))

(assert (= (and b!111409 (not res!55029)) b!111405))

(declare-fun m!127105 () Bool)

(assert (=> b!111405 m!127105))

(assert (=> b!111413 m!124853))

(declare-fun m!127107 () Bool)

(assert (=> b!111413 m!127107))

(assert (=> b!111413 m!127107))

(assert (=> b!111413 m!124515))

(declare-fun m!127109 () Bool)

(assert (=> b!111413 m!127109))

(assert (=> d!31627 m!124853))

(declare-fun m!127111 () Bool)

(assert (=> d!31627 m!127111))

(assert (=> d!31627 m!124861))

(assert (=> b!111408 m!127105))

(assert (=> b!111409 m!127105))

(assert (=> d!30913 d!31627))

(declare-fun d!31629 () Bool)

(declare-fun lt!57545 () (_ BitVec 32))

(declare-fun lt!57544 () (_ BitVec 32))

(assert (=> d!31629 (= lt!57545 (bvmul (bvxor lt!57544 (bvlshr lt!57544 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!31629 (= lt!57544 ((_ extract 31 0) (bvand (bvxor (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvlshr (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!31629 (and (bvsge (mask!6795 newMap!16) #b00000000000000000000000000000000) (let ((res!55031 (let ((h!2251 ((_ extract 31 0) (bvand (bvxor (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (bvlshr (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!14062 (bvmul (bvxor h!2251 (bvlshr h!2251 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!14062 (bvlshr x!14062 #b00000000000000000000000000001101)) (mask!6795 newMap!16)))))) (and (bvslt res!55031 (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001)) (bvsge res!55031 #b00000000000000000000000000000000))))))

(assert (=> d!31629 (= (toIndex!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) (bvand (bvxor lt!57545 (bvlshr lt!57545 #b00000000000000000000000000001101)) (mask!6795 newMap!16)))))

(assert (=> d!30913 d!31629))

(assert (=> d!30913 d!31171))

(assert (=> bm!11757 d!31223))

(declare-fun d!31631 () Bool)

(assert (=> d!31631 (contains!837 (getCurrentListMap!489 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639)))))

(assert (=> d!31631 true))

(declare-fun _$16!132 () Unit!3421)

(assert (=> d!31631 (= (choose!697 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3235 lt!56639) (defaultEntry!2627 newMap!16)) _$16!132)))

(declare-fun bs!4599 () Bool)

(assert (= bs!4599 d!31631))

(assert (=> bs!4599 m!125267))

(assert (=> bs!4599 m!124655))

(assert (=> bs!4599 m!125267))

(assert (=> bs!4599 m!124655))

(assert (=> bs!4599 m!125269))

(assert (=> d!31005 d!31631))

(assert (=> d!31005 d!31171))

(declare-fun d!31633 () Bool)

(assert (=> d!31633 (= (get!1359 (getValueByKey!157 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2933 (getValueByKey!157 (toList!813 lt!56753) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31109 d!31633))

(assert (=> d!31109 d!31235))

(declare-fun d!31635 () Bool)

(assert (not d!31635))

(assert (=> b!110654 d!31635))

(declare-fun d!31637 () Bool)

(declare-fun c!19862 () Bool)

(assert (=> d!31637 (= c!19862 ((_ is Nil!1650) (toList!813 lt!56695)))))

(declare-fun e!72438 () (InoxSet tuple2!2428))

(assert (=> d!31637 (= (content!112 (toList!813 lt!56695)) e!72438)))

(declare-fun b!111414 () Bool)

(assert (=> b!111414 (= e!72438 ((as const (Array tuple2!2428 Bool)) false))))

(declare-fun b!111415 () Bool)

(assert (=> b!111415 (= e!72438 ((_ map or) (store ((as const (Array tuple2!2428 Bool)) false) (h!2248 (toList!813 lt!56695)) true) (content!112 (t!5802 (toList!813 lt!56695)))))))

(assert (= (and d!31637 c!19862) b!111414))

(assert (= (and d!31637 (not c!19862)) b!111415))

(declare-fun m!127113 () Bool)

(assert (=> b!111415 m!127113))

(declare-fun m!127115 () Bool)

(assert (=> b!111415 m!127115))

(assert (=> d!30975 d!31637))

(declare-fun d!31639 () Bool)

(declare-fun e!72439 () Bool)

(assert (=> d!31639 e!72439))

(declare-fun res!55032 () Bool)

(assert (=> d!31639 (=> res!55032 e!72439)))

(declare-fun lt!57549 () Bool)

(assert (=> d!31639 (= res!55032 (not lt!57549))))

(declare-fun lt!57546 () Bool)

(assert (=> d!31639 (= lt!57549 lt!57546)))

(declare-fun lt!57548 () Unit!3421)

(declare-fun e!72440 () Unit!3421)

(assert (=> d!31639 (= lt!57548 e!72440)))

(declare-fun c!19863 () Bool)

(assert (=> d!31639 (= c!19863 lt!57546)))

(assert (=> d!31639 (= lt!57546 (containsKey!161 (toList!813 lt!56917) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31639 (= (contains!837 lt!56917 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57549)))

(declare-fun b!111416 () Bool)

(declare-fun lt!57547 () Unit!3421)

(assert (=> b!111416 (= e!72440 lt!57547)))

(assert (=> b!111416 (= lt!57547 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56917) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111416 (isDefined!111 (getValueByKey!157 (toList!813 lt!56917) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111417 () Bool)

(declare-fun Unit!3480 () Unit!3421)

(assert (=> b!111417 (= e!72440 Unit!3480)))

(declare-fun b!111418 () Bool)

(assert (=> b!111418 (= e!72439 (isDefined!111 (getValueByKey!157 (toList!813 lt!56917) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31639 c!19863) b!111416))

(assert (= (and d!31639 (not c!19863)) b!111417))

(assert (= (and d!31639 (not res!55032)) b!111418))

(declare-fun m!127117 () Bool)

(assert (=> d!31639 m!127117))

(declare-fun m!127119 () Bool)

(assert (=> b!111416 m!127119))

(declare-fun m!127121 () Bool)

(assert (=> b!111416 m!127121))

(assert (=> b!111416 m!127121))

(declare-fun m!127123 () Bool)

(assert (=> b!111416 m!127123))

(assert (=> b!111418 m!127121))

(assert (=> b!111418 m!127121))

(assert (=> b!111418 m!127123))

(assert (=> b!110403 d!31639))

(assert (=> d!30943 d!30955))

(declare-fun d!31641 () Bool)

(assert (=> d!31641 (= (+!149 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56632 (zeroValue!2498 newMap!16) lt!56527 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(assert (=> d!31641 true))

(declare-fun _$8!100 () Unit!3421)

(assert (=> d!31641 (= (choose!692 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56632 (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) lt!56527 (defaultEntry!2627 newMap!16)) _$8!100)))

(declare-fun bs!4600 () Bool)

(assert (= bs!4600 d!31641))

(assert (=> bs!4600 m!124677))

(assert (=> bs!4600 m!124677))

(assert (=> bs!4600 m!124973))

(assert (=> bs!4600 m!124971))

(assert (=> d!30943 d!31641))

(declare-fun call!11905 () ListLongMap!1595)

(declare-fun bm!11901 () Bool)

(assert (=> bm!11901 (= call!11905 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56632 (zeroValue!2498 newMap!16) lt!56527 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!111419 () Bool)

(declare-fun e!72444 () Bool)

(declare-fun lt!57553 () ListLongMap!1595)

(assert (=> b!111419 (= e!72444 (= (apply!100 lt!57553 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56527))))

(declare-fun b!111420 () Bool)

(declare-fun e!72447 () Unit!3421)

(declare-fun Unit!3481 () Unit!3421)

(assert (=> b!111420 (= e!72447 Unit!3481)))

(declare-fun b!111421 () Bool)

(declare-fun e!72453 () Bool)

(assert (=> b!111421 (= e!72453 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111422 () Bool)

(declare-fun e!72452 () ListLongMap!1595)

(declare-fun call!11908 () ListLongMap!1595)

(assert (=> b!111422 (= e!72452 (+!149 call!11908 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)))))

(declare-fun bm!11903 () Bool)

(declare-fun call!11909 () Bool)

(assert (=> bm!11903 (= call!11909 (contains!837 lt!57553 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111423 () Bool)

(declare-fun e!72448 () Bool)

(assert (=> b!111423 (= e!72448 (= (apply!100 lt!57553 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!111424 () Bool)

(declare-fun e!72442 () Bool)

(assert (=> b!111424 (= e!72442 e!72448)))

(declare-fun res!55035 () Bool)

(declare-fun call!11910 () Bool)

(assert (=> b!111424 (= res!55035 call!11910)))

(assert (=> b!111424 (=> (not res!55035) (not e!72448))))

(declare-fun b!111425 () Bool)

(declare-fun e!72445 () Bool)

(declare-fun e!72451 () Bool)

(assert (=> b!111425 (= e!72445 e!72451)))

(declare-fun res!55040 () Bool)

(assert (=> b!111425 (=> (not res!55040) (not e!72451))))

(assert (=> b!111425 (= res!55040 (contains!837 lt!57553 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111425 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!111426 () Bool)

(declare-fun e!72446 () Bool)

(assert (=> b!111426 (= e!72446 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111427 () Bool)

(declare-fun res!55036 () Bool)

(declare-fun e!72443 () Bool)

(assert (=> b!111427 (=> (not res!55036) (not e!72443))))

(assert (=> b!111427 (= res!55036 e!72442)))

(declare-fun c!19864 () Bool)

(assert (=> b!111427 (= c!19864 (not (= (bvand lt!56632 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111428 () Bool)

(assert (=> b!111428 (= e!72442 (not call!11910))))

(declare-fun b!111429 () Bool)

(declare-fun e!72441 () ListLongMap!1595)

(declare-fun call!11907 () ListLongMap!1595)

(assert (=> b!111429 (= e!72441 call!11907)))

(declare-fun bm!11904 () Bool)

(declare-fun call!11906 () ListLongMap!1595)

(assert (=> bm!11904 (= call!11907 call!11906)))

(declare-fun bm!11905 () Bool)

(declare-fun call!11904 () ListLongMap!1595)

(assert (=> bm!11905 (= call!11904 call!11908)))

(declare-fun b!111430 () Bool)

(assert (=> b!111430 (= e!72441 call!11904)))

(declare-fun b!111431 () Bool)

(declare-fun c!19866 () Bool)

(assert (=> b!111431 (= c!19866 (and (not (= (bvand lt!56632 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!56632 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72449 () ListLongMap!1595)

(assert (=> b!111431 (= e!72449 e!72441)))

(declare-fun c!19865 () Bool)

(declare-fun c!19869 () Bool)

(declare-fun bm!11902 () Bool)

(assert (=> bm!11902 (= call!11908 (+!149 (ite c!19865 call!11905 (ite c!19869 call!11906 call!11907)) (ite (or c!19865 c!19869) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527))))))

(declare-fun d!31643 () Bool)

(assert (=> d!31643 e!72443))

(declare-fun res!55034 () Bool)

(assert (=> d!31643 (=> (not res!55034) (not e!72443))))

(assert (=> d!31643 (= res!55034 (or (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))))

(declare-fun lt!57565 () ListLongMap!1595)

(assert (=> d!31643 (= lt!57553 lt!57565)))

(declare-fun lt!57566 () Unit!3421)

(assert (=> d!31643 (= lt!57566 e!72447)))

(declare-fun c!19868 () Bool)

(assert (=> d!31643 (= c!19868 e!72446)))

(declare-fun res!55033 () Bool)

(assert (=> d!31643 (=> (not res!55033) (not e!72446))))

(assert (=> d!31643 (= res!55033 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31643 (= lt!57565 e!72452)))

(assert (=> d!31643 (= c!19865 (and (not (= (bvand lt!56632 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!56632 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31643 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31643 (= (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56632 (zeroValue!2498 newMap!16) lt!56527 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57553)))

(declare-fun b!111432 () Bool)

(assert (=> b!111432 (= e!72452 e!72449)))

(assert (=> b!111432 (= c!19869 (and (not (= (bvand lt!56632 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!56632 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111433 () Bool)

(declare-fun e!72450 () Bool)

(assert (=> b!111433 (= e!72443 e!72450)))

(declare-fun c!19867 () Bool)

(assert (=> b!111433 (= c!19867 (not (= (bvand lt!56632 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111434 () Bool)

(assert (=> b!111434 (= e!72450 e!72444)))

(declare-fun res!55037 () Bool)

(assert (=> b!111434 (= res!55037 call!11909)))

(assert (=> b!111434 (=> (not res!55037) (not e!72444))))

(declare-fun bm!11906 () Bool)

(assert (=> bm!11906 (= call!11910 (contains!837 lt!57553 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111435 () Bool)

(declare-fun lt!57569 () Unit!3421)

(assert (=> b!111435 (= e!72447 lt!57569)))

(declare-fun lt!57558 () ListLongMap!1595)

(assert (=> b!111435 (= lt!57558 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56632 (zeroValue!2498 newMap!16) lt!56527 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57562 () (_ BitVec 64))

(assert (=> b!111435 (= lt!57562 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57568 () (_ BitVec 64))

(assert (=> b!111435 (= lt!57568 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57567 () Unit!3421)

(assert (=> b!111435 (= lt!57567 (addStillContains!76 lt!57558 lt!57562 (zeroValue!2498 newMap!16) lt!57568))))

(assert (=> b!111435 (contains!837 (+!149 lt!57558 (tuple2!2429 lt!57562 (zeroValue!2498 newMap!16))) lt!57568)))

(declare-fun lt!57564 () Unit!3421)

(assert (=> b!111435 (= lt!57564 lt!57567)))

(declare-fun lt!57552 () ListLongMap!1595)

(assert (=> b!111435 (= lt!57552 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56632 (zeroValue!2498 newMap!16) lt!56527 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57554 () (_ BitVec 64))

(assert (=> b!111435 (= lt!57554 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57555 () (_ BitVec 64))

(assert (=> b!111435 (= lt!57555 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57550 () Unit!3421)

(assert (=> b!111435 (= lt!57550 (addApplyDifferent!76 lt!57552 lt!57554 lt!56527 lt!57555))))

(assert (=> b!111435 (= (apply!100 (+!149 lt!57552 (tuple2!2429 lt!57554 lt!56527)) lt!57555) (apply!100 lt!57552 lt!57555))))

(declare-fun lt!57551 () Unit!3421)

(assert (=> b!111435 (= lt!57551 lt!57550)))

(declare-fun lt!57559 () ListLongMap!1595)

(assert (=> b!111435 (= lt!57559 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56632 (zeroValue!2498 newMap!16) lt!56527 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57557 () (_ BitVec 64))

(assert (=> b!111435 (= lt!57557 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57561 () (_ BitVec 64))

(assert (=> b!111435 (= lt!57561 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57560 () Unit!3421)

(assert (=> b!111435 (= lt!57560 (addApplyDifferent!76 lt!57559 lt!57557 (zeroValue!2498 newMap!16) lt!57561))))

(assert (=> b!111435 (= (apply!100 (+!149 lt!57559 (tuple2!2429 lt!57557 (zeroValue!2498 newMap!16))) lt!57561) (apply!100 lt!57559 lt!57561))))

(declare-fun lt!57563 () Unit!3421)

(assert (=> b!111435 (= lt!57563 lt!57560)))

(declare-fun lt!57570 () ListLongMap!1595)

(assert (=> b!111435 (= lt!57570 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56632 (zeroValue!2498 newMap!16) lt!56527 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57571 () (_ BitVec 64))

(assert (=> b!111435 (= lt!57571 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57556 () (_ BitVec 64))

(assert (=> b!111435 (= lt!57556 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111435 (= lt!57569 (addApplyDifferent!76 lt!57570 lt!57571 lt!56527 lt!57556))))

(assert (=> b!111435 (= (apply!100 (+!149 lt!57570 (tuple2!2429 lt!57571 lt!56527)) lt!57556) (apply!100 lt!57570 lt!57556))))

(declare-fun b!111436 () Bool)

(declare-fun res!55039 () Bool)

(assert (=> b!111436 (=> (not res!55039) (not e!72443))))

(assert (=> b!111436 (= res!55039 e!72445)))

(declare-fun res!55041 () Bool)

(assert (=> b!111436 (=> res!55041 e!72445)))

(assert (=> b!111436 (= res!55041 (not e!72453))))

(declare-fun res!55038 () Bool)

(assert (=> b!111436 (=> (not res!55038) (not e!72453))))

(assert (=> b!111436 (= res!55038 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!111437 () Bool)

(assert (=> b!111437 (= e!72449 call!11904)))

(declare-fun bm!11907 () Bool)

(assert (=> bm!11907 (= call!11906 call!11905)))

(declare-fun b!111438 () Bool)

(assert (=> b!111438 (= e!72450 (not call!11909))))

(declare-fun b!111439 () Bool)

(assert (=> b!111439 (= e!72451 (= (apply!100 lt!57553 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111439 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_values!2610 newMap!16))))))

(assert (=> b!111439 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (= (and d!31643 c!19865) b!111422))

(assert (= (and d!31643 (not c!19865)) b!111432))

(assert (= (and b!111432 c!19869) b!111437))

(assert (= (and b!111432 (not c!19869)) b!111431))

(assert (= (and b!111431 c!19866) b!111430))

(assert (= (and b!111431 (not c!19866)) b!111429))

(assert (= (or b!111430 b!111429) bm!11904))

(assert (= (or b!111437 bm!11904) bm!11907))

(assert (= (or b!111437 b!111430) bm!11905))

(assert (= (or b!111422 bm!11907) bm!11901))

(assert (= (or b!111422 bm!11905) bm!11902))

(assert (= (and d!31643 res!55033) b!111426))

(assert (= (and d!31643 c!19868) b!111435))

(assert (= (and d!31643 (not c!19868)) b!111420))

(assert (= (and d!31643 res!55034) b!111436))

(assert (= (and b!111436 res!55038) b!111421))

(assert (= (and b!111436 (not res!55041)) b!111425))

(assert (= (and b!111425 res!55040) b!111439))

(assert (= (and b!111436 res!55039) b!111427))

(assert (= (and b!111427 c!19864) b!111424))

(assert (= (and b!111427 (not c!19864)) b!111428))

(assert (= (and b!111424 res!55035) b!111423))

(assert (= (or b!111424 b!111428) bm!11906))

(assert (= (and b!111427 res!55036) b!111433))

(assert (= (and b!111433 c!19867) b!111434))

(assert (= (and b!111433 (not c!19867)) b!111438))

(assert (= (and b!111434 res!55037) b!111419))

(assert (= (or b!111434 b!111438) bm!11903))

(declare-fun b_lambda!5007 () Bool)

(assert (=> (not b_lambda!5007) (not b!111439)))

(assert (=> b!111439 t!5810))

(declare-fun b_and!6877 () Bool)

(assert (= b_and!6873 (and (=> t!5810 result!3549) b_and!6877)))

(assert (=> b!111439 t!5812))

(declare-fun b_and!6879 () Bool)

(assert (= b_and!6875 (and (=> t!5812 result!3551) b_and!6879)))

(declare-fun m!127125 () Bool)

(assert (=> b!111423 m!127125))

(declare-fun m!127127 () Bool)

(assert (=> b!111422 m!127127))

(assert (=> b!111425 m!124875))

(assert (=> b!111425 m!124875))

(declare-fun m!127129 () Bool)

(assert (=> b!111425 m!127129))

(declare-fun m!127131 () Bool)

(assert (=> bm!11902 m!127131))

(assert (=> d!31643 m!124861))

(declare-fun m!127133 () Bool)

(assert (=> b!111435 m!127133))

(declare-fun m!127135 () Bool)

(assert (=> b!111435 m!127135))

(declare-fun m!127137 () Bool)

(assert (=> b!111435 m!127137))

(assert (=> b!111435 m!124875))

(declare-fun m!127139 () Bool)

(assert (=> b!111435 m!127139))

(declare-fun m!127141 () Bool)

(assert (=> b!111435 m!127141))

(declare-fun m!127143 () Bool)

(assert (=> b!111435 m!127143))

(assert (=> b!111435 m!127143))

(declare-fun m!127145 () Bool)

(assert (=> b!111435 m!127145))

(declare-fun m!127147 () Bool)

(assert (=> b!111435 m!127147))

(declare-fun m!127149 () Bool)

(assert (=> b!111435 m!127149))

(declare-fun m!127151 () Bool)

(assert (=> b!111435 m!127151))

(declare-fun m!127153 () Bool)

(assert (=> b!111435 m!127153))

(declare-fun m!127155 () Bool)

(assert (=> b!111435 m!127155))

(assert (=> b!111435 m!127153))

(declare-fun m!127157 () Bool)

(assert (=> b!111435 m!127157))

(declare-fun m!127159 () Bool)

(assert (=> b!111435 m!127159))

(assert (=> b!111435 m!127135))

(declare-fun m!127161 () Bool)

(assert (=> b!111435 m!127161))

(assert (=> b!111435 m!127141))

(declare-fun m!127163 () Bool)

(assert (=> b!111435 m!127163))

(assert (=> b!111421 m!124875))

(assert (=> b!111421 m!124875))

(assert (=> b!111421 m!124877))

(assert (=> bm!11901 m!127139))

(declare-fun m!127165 () Bool)

(assert (=> bm!11906 m!127165))

(assert (=> b!111426 m!124875))

(assert (=> b!111426 m!124875))

(assert (=> b!111426 m!124877))

(declare-fun m!127167 () Bool)

(assert (=> bm!11903 m!127167))

(assert (=> b!111439 m!124875))

(declare-fun m!127169 () Bool)

(assert (=> b!111439 m!127169))

(assert (=> b!111439 m!124937))

(assert (=> b!111439 m!125057))

(assert (=> b!111439 m!124937))

(assert (=> b!111439 m!125059))

(assert (=> b!111439 m!124875))

(assert (=> b!111439 m!125057))

(declare-fun m!127171 () Bool)

(assert (=> b!111419 m!127171))

(assert (=> d!30943 d!31643))

(declare-fun d!31645 () Bool)

(declare-fun e!72454 () Bool)

(assert (=> d!31645 e!72454))

(declare-fun res!55042 () Bool)

(assert (=> d!31645 (=> (not res!55042) (not e!72454))))

(declare-fun lt!57572 () ListLongMap!1595)

(assert (=> d!31645 (= res!55042 (contains!837 lt!57572 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527))))))

(declare-fun lt!57575 () List!1653)

(assert (=> d!31645 (= lt!57572 (ListLongMap!1596 lt!57575))))

(declare-fun lt!57573 () Unit!3421)

(declare-fun lt!57574 () Unit!3421)

(assert (=> d!31645 (= lt!57573 lt!57574)))

(assert (=> d!31645 (= (getValueByKey!157 lt!57575 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527))) (Some!162 (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527))))))

(assert (=> d!31645 (= lt!57574 (lemmaContainsTupThenGetReturnValue!75 lt!57575 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527))))))

(assert (=> d!31645 (= lt!57575 (insertStrictlySorted!77 (toList!813 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527))))))

(assert (=> d!31645 (= (+!149 (getCurrentListMap!489 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)) lt!57572)))

(declare-fun b!111440 () Bool)

(declare-fun res!55043 () Bool)

(assert (=> b!111440 (=> (not res!55043) (not e!72454))))

(assert (=> b!111440 (= res!55043 (= (getValueByKey!157 (toList!813 lt!57572) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527))) (Some!162 (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)))))))

(declare-fun b!111441 () Bool)

(assert (=> b!111441 (= e!72454 (contains!839 (toList!813 lt!57572) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56527)))))

(assert (= (and d!31645 res!55042) b!111440))

(assert (= (and b!111440 res!55043) b!111441))

(declare-fun m!127173 () Bool)

(assert (=> d!31645 m!127173))

(declare-fun m!127175 () Bool)

(assert (=> d!31645 m!127175))

(declare-fun m!127177 () Bool)

(assert (=> d!31645 m!127177))

(declare-fun m!127179 () Bool)

(assert (=> d!31645 m!127179))

(declare-fun m!127181 () Bool)

(assert (=> b!111440 m!127181))

(declare-fun m!127183 () Bool)

(assert (=> b!111441 m!127183))

(assert (=> d!30943 d!31645))

(assert (=> d!30943 d!31171))

(declare-fun d!31647 () Bool)

(assert (=> d!31647 (= (size!2341 newMap!16) (bvadd (_size!508 newMap!16) (bvsdiv (bvadd (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!110346 d!31647))

(assert (=> d!31079 d!31171))

(declare-fun d!31649 () Bool)

(declare-fun res!55044 () Bool)

(declare-fun e!72455 () Bool)

(assert (=> d!31649 (=> res!55044 e!72455)))

(assert (=> d!31649 (= res!55044 (and ((_ is Cons!1649) (toList!813 e!71569)) (= (_1!1224 (h!2248 (toList!813 e!71569))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31649 (= (containsKey!161 (toList!813 e!71569) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) e!72455)))

(declare-fun b!111442 () Bool)

(declare-fun e!72456 () Bool)

(assert (=> b!111442 (= e!72455 e!72456)))

(declare-fun res!55045 () Bool)

(assert (=> b!111442 (=> (not res!55045) (not e!72456))))

(assert (=> b!111442 (= res!55045 (and (or (not ((_ is Cons!1649) (toList!813 e!71569))) (bvsle (_1!1224 (h!2248 (toList!813 e!71569))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1649) (toList!813 e!71569)) (bvslt (_1!1224 (h!2248 (toList!813 e!71569))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!111443 () Bool)

(assert (=> b!111443 (= e!72456 (containsKey!161 (t!5802 (toList!813 e!71569)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31649 (not res!55044)) b!111442))

(assert (= (and b!111442 res!55045) b!111443))

(assert (=> b!111443 m!124515))

(declare-fun m!127185 () Bool)

(assert (=> b!111443 m!127185))

(assert (=> d!30931 d!31649))

(declare-fun b!111446 () Bool)

(declare-fun e!72458 () Option!163)

(assert (=> b!111446 (= e!72458 (getValueByKey!157 (t!5802 (t!5802 (toList!813 lt!56691))) (_1!1224 lt!56517)))))

(declare-fun d!31651 () Bool)

(declare-fun c!19870 () Bool)

(assert (=> d!31651 (= c!19870 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56691))) (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56691)))) (_1!1224 lt!56517))))))

(declare-fun e!72457 () Option!163)

(assert (=> d!31651 (= (getValueByKey!157 (t!5802 (toList!813 lt!56691)) (_1!1224 lt!56517)) e!72457)))

(declare-fun b!111447 () Bool)

(assert (=> b!111447 (= e!72458 None!161)))

(declare-fun b!111445 () Bool)

(assert (=> b!111445 (= e!72457 e!72458)))

(declare-fun c!19871 () Bool)

(assert (=> b!111445 (= c!19871 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56691))) (not (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56691)))) (_1!1224 lt!56517)))))))

(declare-fun b!111444 () Bool)

(assert (=> b!111444 (= e!72457 (Some!162 (_2!1224 (h!2248 (t!5802 (toList!813 lt!56691))))))))

(assert (= (and d!31651 c!19870) b!111444))

(assert (= (and d!31651 (not c!19870)) b!111445))

(assert (= (and b!111445 c!19871) b!111446))

(assert (= (and b!111445 (not c!19871)) b!111447))

(declare-fun m!127187 () Bool)

(assert (=> b!111446 m!127187))

(assert (=> b!110636 d!31651))

(declare-fun d!31653 () Bool)

(assert (=> d!31653 (isDefined!111 (getValueByKey!157 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!57576 () Unit!3421)

(assert (=> d!31653 (= lt!57576 (choose!702 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!72459 () Bool)

(assert (=> d!31653 e!72459))

(declare-fun res!55046 () Bool)

(assert (=> d!31653 (=> (not res!55046) (not e!72459))))

(assert (=> d!31653 (= res!55046 (isStrictlySorted!306 (toList!813 lt!56753)))))

(assert (=> d!31653 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!57576)))

(declare-fun b!111448 () Bool)

(assert (=> b!111448 (= e!72459 (containsKey!161 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31653 res!55046) b!111448))

(assert (=> d!31653 m!124711))

(assert (=> d!31653 m!124867))

(assert (=> d!31653 m!124867))

(assert (=> d!31653 m!125667))

(assert (=> d!31653 m!124711))

(declare-fun m!127189 () Bool)

(assert (=> d!31653 m!127189))

(assert (=> d!31653 m!126033))

(assert (=> b!111448 m!124711))

(assert (=> b!111448 m!125663))

(assert (=> b!110655 d!31653))

(assert (=> b!110655 d!31453))

(assert (=> b!110655 d!31455))

(declare-fun d!31655 () Bool)

(declare-fun e!72460 () Bool)

(assert (=> d!31655 e!72460))

(declare-fun res!55047 () Bool)

(assert (=> d!31655 (=> res!55047 e!72460)))

(declare-fun lt!57580 () Bool)

(assert (=> d!31655 (= res!55047 (not lt!57580))))

(declare-fun lt!57577 () Bool)

(assert (=> d!31655 (= lt!57580 lt!57577)))

(declare-fun lt!57579 () Unit!3421)

(declare-fun e!72461 () Unit!3421)

(assert (=> d!31655 (= lt!57579 e!72461)))

(declare-fun c!19872 () Bool)

(assert (=> d!31655 (= c!19872 lt!57577)))

(assert (=> d!31655 (= lt!57577 (containsKey!161 (toList!813 lt!57002) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31655 (= (contains!837 lt!57002 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) lt!57580)))

(declare-fun b!111449 () Bool)

(declare-fun lt!57578 () Unit!3421)

(assert (=> b!111449 (= e!72461 lt!57578)))

(assert (=> b!111449 (= lt!57578 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!57002) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111449 (isDefined!111 (getValueByKey!157 (toList!813 lt!57002) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111450 () Bool)

(declare-fun Unit!3482 () Unit!3421)

(assert (=> b!111450 (= e!72461 Unit!3482)))

(declare-fun b!111451 () Bool)

(assert (=> b!111451 (= e!72460 (isDefined!111 (getValueByKey!157 (toList!813 lt!57002) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31655 c!19872) b!111449))

(assert (= (and d!31655 (not c!19872)) b!111450))

(assert (= (and d!31655 (not res!55047)) b!111451))

(assert (=> d!31655 m!124875))

(declare-fun m!127191 () Bool)

(assert (=> d!31655 m!127191))

(assert (=> b!111449 m!124875))

(declare-fun m!127193 () Bool)

(assert (=> b!111449 m!127193))

(assert (=> b!111449 m!124875))

(assert (=> b!111449 m!126929))

(assert (=> b!111449 m!126929))

(declare-fun m!127195 () Bool)

(assert (=> b!111449 m!127195))

(assert (=> b!111451 m!124875))

(assert (=> b!111451 m!126929))

(assert (=> b!111451 m!126929))

(assert (=> b!111451 m!127195))

(assert (=> b!110538 d!31655))

(assert (=> b!110215 d!31281))

(declare-fun d!31657 () Bool)

(declare-fun e!72462 () Bool)

(assert (=> d!31657 e!72462))

(declare-fun res!55048 () Bool)

(assert (=> d!31657 (=> res!55048 e!72462)))

(declare-fun lt!57584 () Bool)

(assert (=> d!31657 (= res!55048 (not lt!57584))))

(declare-fun lt!57581 () Bool)

(assert (=> d!31657 (= lt!57584 lt!57581)))

(declare-fun lt!57583 () Unit!3421)

(declare-fun e!72463 () Unit!3421)

(assert (=> d!31657 (= lt!57583 e!72463)))

(declare-fun c!19873 () Bool)

(assert (=> d!31657 (= c!19873 lt!57581)))

(assert (=> d!31657 (= lt!57581 (containsKey!161 (toList!813 lt!56849) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31657 (= (contains!837 lt!56849 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57584)))

(declare-fun b!111452 () Bool)

(declare-fun lt!57582 () Unit!3421)

(assert (=> b!111452 (= e!72463 lt!57582)))

(assert (=> b!111452 (= lt!57582 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56849) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111452 (isDefined!111 (getValueByKey!157 (toList!813 lt!56849) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111453 () Bool)

(declare-fun Unit!3483 () Unit!3421)

(assert (=> b!111453 (= e!72463 Unit!3483)))

(declare-fun b!111454 () Bool)

(assert (=> b!111454 (= e!72462 (isDefined!111 (getValueByKey!157 (toList!813 lt!56849) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31657 c!19873) b!111452))

(assert (= (and d!31657 (not c!19873)) b!111453))

(assert (= (and d!31657 (not res!55048)) b!111454))

(declare-fun m!127197 () Bool)

(assert (=> d!31657 m!127197))

(declare-fun m!127199 () Bool)

(assert (=> b!111452 m!127199))

(assert (=> b!111452 m!126587))

(assert (=> b!111452 m!126587))

(declare-fun m!127201 () Bool)

(assert (=> b!111452 m!127201))

(assert (=> b!111454 m!126587))

(assert (=> b!111454 m!126587))

(assert (=> b!111454 m!127201))

(assert (=> bm!11775 d!31657))

(declare-fun d!31659 () Bool)

(assert (=> d!31659 (= (get!1358 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110206 d!31659))

(declare-fun d!31661 () Bool)

(declare-fun res!55049 () Bool)

(declare-fun e!72464 () Bool)

(assert (=> d!31661 (=> res!55049 e!72464)))

(assert (=> d!31661 (= res!55049 (and ((_ is Cons!1649) (toList!813 lt!56753)) (= (_1!1224 (h!2248 (toList!813 lt!56753))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31661 (= (containsKey!161 (toList!813 lt!56753) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!72464)))

(declare-fun b!111455 () Bool)

(declare-fun e!72465 () Bool)

(assert (=> b!111455 (= e!72464 e!72465)))

(declare-fun res!55050 () Bool)

(assert (=> b!111455 (=> (not res!55050) (not e!72465))))

(assert (=> b!111455 (= res!55050 (and (or (not ((_ is Cons!1649) (toList!813 lt!56753))) (bvsle (_1!1224 (h!2248 (toList!813 lt!56753))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1649) (toList!813 lt!56753)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56753))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!111456 () Bool)

(assert (=> b!111456 (= e!72465 (containsKey!161 (t!5802 (toList!813 lt!56753)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31661 (not res!55049)) b!111455))

(assert (= (and b!111455 res!55050) b!111456))

(assert (=> b!111456 m!124711))

(declare-fun m!127203 () Bool)

(assert (=> b!111456 m!127203))

(assert (=> d!31115 d!31661))

(assert (=> b!110345 d!31647))

(assert (=> bm!11814 d!31077))

(declare-fun d!31663 () Bool)

(declare-fun lt!57585 () Bool)

(assert (=> d!31663 (= lt!57585 (select (content!112 (toList!813 lt!56897)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(declare-fun e!72467 () Bool)

(assert (=> d!31663 (= lt!57585 e!72467)))

(declare-fun res!55052 () Bool)

(assert (=> d!31663 (=> (not res!55052) (not e!72467))))

(assert (=> d!31663 (= res!55052 ((_ is Cons!1649) (toList!813 lt!56897)))))

(assert (=> d!31663 (= (contains!839 (toList!813 lt!56897) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) lt!57585)))

(declare-fun b!111457 () Bool)

(declare-fun e!72466 () Bool)

(assert (=> b!111457 (= e!72467 e!72466)))

(declare-fun res!55051 () Bool)

(assert (=> b!111457 (=> res!55051 e!72466)))

(assert (=> b!111457 (= res!55051 (= (h!2248 (toList!813 lt!56897)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(declare-fun b!111458 () Bool)

(assert (=> b!111458 (= e!72466 (contains!839 (t!5802 (toList!813 lt!56897)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(assert (= (and d!31663 res!55052) b!111457))

(assert (= (and b!111457 (not res!55051)) b!111458))

(declare-fun m!127205 () Bool)

(assert (=> d!31663 m!127205))

(declare-fun m!127207 () Bool)

(assert (=> d!31663 m!127207))

(declare-fun m!127209 () Bool)

(assert (=> b!111458 m!127209))

(assert (=> b!110374 d!31663))

(declare-fun d!31665 () Bool)

(assert (=> d!31665 (isDefined!111 (getValueByKey!157 (toList!813 lt!56699) (_1!1224 lt!56517)))))

(declare-fun lt!57586 () Unit!3421)

(assert (=> d!31665 (= lt!57586 (choose!702 (toList!813 lt!56699) (_1!1224 lt!56517)))))

(declare-fun e!72468 () Bool)

(assert (=> d!31665 e!72468))

(declare-fun res!55053 () Bool)

(assert (=> d!31665 (=> (not res!55053) (not e!72468))))

(assert (=> d!31665 (= res!55053 (isStrictlySorted!306 (toList!813 lt!56699)))))

(assert (=> d!31665 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56699) (_1!1224 lt!56517)) lt!57586)))

(declare-fun b!111459 () Bool)

(assert (=> b!111459 (= e!72468 (containsKey!161 (toList!813 lt!56699) (_1!1224 lt!56517)))))

(assert (= (and d!31665 res!55053) b!111459))

(assert (=> d!31665 m!124771))

(assert (=> d!31665 m!124771))

(assert (=> d!31665 m!125193))

(declare-fun m!127211 () Bool)

(assert (=> d!31665 m!127211))

(declare-fun m!127213 () Bool)

(assert (=> d!31665 m!127213))

(assert (=> b!111459 m!125189))

(assert (=> b!110379 d!31665))

(assert (=> b!110379 d!31545))

(assert (=> b!110379 d!31063))

(declare-fun b!111462 () Bool)

(declare-fun e!72470 () Option!163)

(assert (=> b!111462 (= e!72470 (getValueByKey!157 (t!5802 (t!5802 lt!56702)) (_1!1224 lt!56517)))))

(declare-fun d!31667 () Bool)

(declare-fun c!19874 () Bool)

(assert (=> d!31667 (= c!19874 (and ((_ is Cons!1649) (t!5802 lt!56702)) (= (_1!1224 (h!2248 (t!5802 lt!56702))) (_1!1224 lt!56517))))))

(declare-fun e!72469 () Option!163)

(assert (=> d!31667 (= (getValueByKey!157 (t!5802 lt!56702) (_1!1224 lt!56517)) e!72469)))

(declare-fun b!111463 () Bool)

(assert (=> b!111463 (= e!72470 None!161)))

(declare-fun b!111461 () Bool)

(assert (=> b!111461 (= e!72469 e!72470)))

(declare-fun c!19875 () Bool)

(assert (=> b!111461 (= c!19875 (and ((_ is Cons!1649) (t!5802 lt!56702)) (not (= (_1!1224 (h!2248 (t!5802 lt!56702))) (_1!1224 lt!56517)))))))

(declare-fun b!111460 () Bool)

(assert (=> b!111460 (= e!72469 (Some!162 (_2!1224 (h!2248 (t!5802 lt!56702)))))))

(assert (= (and d!31667 c!19874) b!111460))

(assert (= (and d!31667 (not c!19874)) b!111461))

(assert (= (and b!111461 c!19875) b!111462))

(assert (= (and b!111461 (not c!19875)) b!111463))

(declare-fun m!127215 () Bool)

(assert (=> b!111462 m!127215))

(assert (=> b!110384 d!31667))

(declare-fun b!111466 () Bool)

(declare-fun e!72472 () Option!163)

(assert (=> b!111466 (= e!72472 (getValueByKey!157 (t!5802 (toList!813 lt!56875)) (_1!1224 (tuple2!2429 lt!56675 lt!56678))))))

(declare-fun d!31669 () Bool)

(declare-fun c!19876 () Bool)

(assert (=> d!31669 (= c!19876 (and ((_ is Cons!1649) (toList!813 lt!56875)) (= (_1!1224 (h!2248 (toList!813 lt!56875))) (_1!1224 (tuple2!2429 lt!56675 lt!56678)))))))

(declare-fun e!72471 () Option!163)

(assert (=> d!31669 (= (getValueByKey!157 (toList!813 lt!56875) (_1!1224 (tuple2!2429 lt!56675 lt!56678))) e!72471)))

(declare-fun b!111467 () Bool)

(assert (=> b!111467 (= e!72472 None!161)))

(declare-fun b!111465 () Bool)

(assert (=> b!111465 (= e!72471 e!72472)))

(declare-fun c!19877 () Bool)

(assert (=> b!111465 (= c!19877 (and ((_ is Cons!1649) (toList!813 lt!56875)) (not (= (_1!1224 (h!2248 (toList!813 lt!56875))) (_1!1224 (tuple2!2429 lt!56675 lt!56678))))))))

(declare-fun b!111464 () Bool)

(assert (=> b!111464 (= e!72471 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56875)))))))

(assert (= (and d!31669 c!19876) b!111464))

(assert (= (and d!31669 (not c!19876)) b!111465))

(assert (= (and b!111465 c!19877) b!111466))

(assert (= (and b!111465 (not c!19877)) b!111467))

(declare-fun m!127217 () Bool)

(assert (=> b!111466 m!127217))

(assert (=> b!110355 d!31669))

(assert (=> bm!11799 d!31145))

(declare-fun d!31671 () Bool)

(assert (=> d!31671 (= (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!382 (getValueByKey!157 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4601 () Bool)

(assert (= bs!4601 d!31671))

(assert (=> bs!4601 m!124887))

(declare-fun m!127219 () Bool)

(assert (=> bs!4601 m!127219))

(assert (=> b!110220 d!31671))

(assert (=> b!110220 d!31601))

(declare-fun b!111468 () Bool)

(declare-fun res!55057 () Bool)

(declare-fun e!72473 () Bool)

(assert (=> b!111468 (=> (not res!55057) (not e!72473))))

(assert (=> b!111468 (= res!55057 (and (= (size!2338 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000001)) (= (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (size!2338 (_values!2610 (v!2929 (underlying!370 thiss!992))))) (bvsge (_size!508 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!508 (v!2929 (underlying!370 thiss!992))) (bvadd (mask!6795 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!111470 () Bool)

(declare-fun res!55055 () Bool)

(assert (=> b!111470 (=> (not res!55055) (not e!72473))))

(assert (=> b!111470 (= res!55055 (= (size!2341 (v!2929 (underlying!370 thiss!992))) (bvadd (_size!508 (v!2929 (underlying!370 thiss!992))) (bvsdiv (bvadd (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!111469 () Bool)

(declare-fun res!55054 () Bool)

(assert (=> b!111469 (=> (not res!55054) (not e!72473))))

(assert (=> b!111469 (= res!55054 (bvsge (size!2341 (v!2929 (underlying!370 thiss!992))) (_size!508 (v!2929 (underlying!370 thiss!992)))))))

(declare-fun b!111471 () Bool)

(assert (=> b!111471 (= e!72473 (and (bvsge (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2424 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!508 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!31673 () Bool)

(declare-fun res!55056 () Bool)

(assert (=> d!31673 (=> (not res!55056) (not e!72473))))

(assert (=> d!31673 (= res!55056 (validMask!0 (mask!6795 (v!2929 (underlying!370 thiss!992)))))))

(assert (=> d!31673 (= (simpleValid!75 (v!2929 (underlying!370 thiss!992))) e!72473)))

(assert (= (and d!31673 res!55056) b!111468))

(assert (= (and b!111468 res!55057) b!111469))

(assert (= (and b!111469 res!55054) b!111470))

(assert (= (and b!111470 res!55055) b!111471))

(declare-fun m!127221 () Bool)

(assert (=> b!111470 m!127221))

(assert (=> b!111469 m!127221))

(assert (=> d!31673 m!124513))

(assert (=> d!31073 d!31673))

(declare-fun bm!11908 () Bool)

(declare-fun call!11911 () (_ BitVec 32))

(assert (=> bm!11908 (= call!11911 (arrayCountValidKeys!0 (_keys!4341 (_2!1225 lt!56657)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (_2!1225 lt!56657)))))))

(declare-fun b!111472 () Bool)

(declare-fun e!72475 () (_ BitVec 32))

(assert (=> b!111472 (= e!72475 #b00000000000000000000000000000000)))

(declare-fun b!111473 () Bool)

(declare-fun e!72474 () (_ BitVec 32))

(assert (=> b!111473 (= e!72474 call!11911)))

(declare-fun d!31675 () Bool)

(declare-fun lt!57587 () (_ BitVec 32))

(assert (=> d!31675 (and (bvsge lt!57587 #b00000000000000000000000000000000) (bvsle lt!57587 (bvsub (size!2337 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000)))))

(assert (=> d!31675 (= lt!57587 e!72475)))

(declare-fun c!19878 () Bool)

(assert (=> d!31675 (= c!19878 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))))))

(assert (=> d!31675 (and (bvsle #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2337 (_keys!4341 (_2!1225 lt!56657))) (size!2337 (_keys!4341 (_2!1225 lt!56657)))))))

(assert (=> d!31675 (= (arrayCountValidKeys!0 (_keys!4341 (_2!1225 lt!56657)) #b00000000000000000000000000000000 (size!2337 (_keys!4341 (_2!1225 lt!56657)))) lt!57587)))

(declare-fun b!111474 () Bool)

(assert (=> b!111474 (= e!72475 e!72474)))

(declare-fun c!19879 () Bool)

(assert (=> b!111474 (= c!19879 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (_2!1225 lt!56657))) #b00000000000000000000000000000000)))))

(declare-fun b!111475 () Bool)

(assert (=> b!111475 (= e!72474 (bvadd #b00000000000000000000000000000001 call!11911))))

(assert (= (and d!31675 c!19878) b!111472))

(assert (= (and d!31675 (not c!19878)) b!111474))

(assert (= (and b!111474 c!19879) b!111475))

(assert (= (and b!111474 (not c!19879)) b!111473))

(assert (= (or b!111475 b!111473) bm!11908))

(declare-fun m!127223 () Bool)

(assert (=> bm!11908 m!127223))

(assert (=> b!111474 m!126745))

(assert (=> b!111474 m!126745))

(assert (=> b!111474 m!126783))

(assert (=> b!110361 d!31675))

(declare-fun d!31677 () Bool)

(declare-fun res!55058 () Bool)

(declare-fun e!72476 () Bool)

(assert (=> d!31677 (=> res!55058 e!72476)))

(assert (=> d!31677 (= res!55058 (and ((_ is Cons!1649) (toList!813 lt!56699)) (= (_1!1224 (h!2248 (toList!813 lt!56699))) (_1!1224 lt!56517))))))

(assert (=> d!31677 (= (containsKey!161 (toList!813 lt!56699) (_1!1224 lt!56517)) e!72476)))

(declare-fun b!111476 () Bool)

(declare-fun e!72477 () Bool)

(assert (=> b!111476 (= e!72476 e!72477)))

(declare-fun res!55059 () Bool)

(assert (=> b!111476 (=> (not res!55059) (not e!72477))))

(assert (=> b!111476 (= res!55059 (and (or (not ((_ is Cons!1649) (toList!813 lt!56699))) (bvsle (_1!1224 (h!2248 (toList!813 lt!56699))) (_1!1224 lt!56517))) ((_ is Cons!1649) (toList!813 lt!56699)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56699))) (_1!1224 lt!56517))))))

(declare-fun b!111477 () Bool)

(assert (=> b!111477 (= e!72477 (containsKey!161 (t!5802 (toList!813 lt!56699)) (_1!1224 lt!56517)))))

(assert (= (and d!31677 (not res!55058)) b!111476))

(assert (= (and b!111476 res!55059) b!111477))

(declare-fun m!127225 () Bool)

(assert (=> b!111477 m!127225))

(assert (=> d!30991 d!31677))

(declare-fun d!31679 () Bool)

(declare-fun lt!57588 () Bool)

(assert (=> d!31679 (= lt!57588 (select (content!112 (t!5802 (toList!813 lt!56695))) lt!56528))))

(declare-fun e!72479 () Bool)

(assert (=> d!31679 (= lt!57588 e!72479)))

(declare-fun res!55061 () Bool)

(assert (=> d!31679 (=> (not res!55061) (not e!72479))))

(assert (=> d!31679 (= res!55061 ((_ is Cons!1649) (t!5802 (toList!813 lt!56695))))))

(assert (=> d!31679 (= (contains!839 (t!5802 (toList!813 lt!56695)) lt!56528) lt!57588)))

(declare-fun b!111478 () Bool)

(declare-fun e!72478 () Bool)

(assert (=> b!111478 (= e!72479 e!72478)))

(declare-fun res!55060 () Bool)

(assert (=> b!111478 (=> res!55060 e!72478)))

(assert (=> b!111478 (= res!55060 (= (h!2248 (t!5802 (toList!813 lt!56695))) lt!56528))))

(declare-fun b!111479 () Bool)

(assert (=> b!111479 (= e!72478 (contains!839 (t!5802 (t!5802 (toList!813 lt!56695))) lt!56528))))

(assert (= (and d!31679 res!55061) b!111478))

(assert (= (and b!111478 (not res!55060)) b!111479))

(assert (=> d!31679 m!127115))

(declare-fun m!127227 () Bool)

(assert (=> d!31679 m!127227))

(declare-fun m!127229 () Bool)

(assert (=> b!111479 m!127229))

(assert (=> b!110368 d!31679))

(declare-fun b!111482 () Bool)

(declare-fun e!72481 () Option!163)

(assert (=> b!111482 (= e!72481 (getValueByKey!157 (t!5802 (t!5802 lt!56690)) (_1!1224 lt!56528)))))

(declare-fun d!31681 () Bool)

(declare-fun c!19880 () Bool)

(assert (=> d!31681 (= c!19880 (and ((_ is Cons!1649) (t!5802 lt!56690)) (= (_1!1224 (h!2248 (t!5802 lt!56690))) (_1!1224 lt!56528))))))

(declare-fun e!72480 () Option!163)

(assert (=> d!31681 (= (getValueByKey!157 (t!5802 lt!56690) (_1!1224 lt!56528)) e!72480)))

(declare-fun b!111483 () Bool)

(assert (=> b!111483 (= e!72481 None!161)))

(declare-fun b!111481 () Bool)

(assert (=> b!111481 (= e!72480 e!72481)))

(declare-fun c!19881 () Bool)

(assert (=> b!111481 (= c!19881 (and ((_ is Cons!1649) (t!5802 lt!56690)) (not (= (_1!1224 (h!2248 (t!5802 lt!56690))) (_1!1224 lt!56528)))))))

(declare-fun b!111480 () Bool)

(assert (=> b!111480 (= e!72480 (Some!162 (_2!1224 (h!2248 (t!5802 lt!56690)))))))

(assert (= (and d!31681 c!19880) b!111480))

(assert (= (and d!31681 (not c!19880)) b!111481))

(assert (= (and b!111481 c!19881) b!111482))

(assert (= (and b!111481 (not c!19881)) b!111483))

(declare-fun m!127231 () Bool)

(assert (=> b!111482 m!127231))

(assert (=> b!110271 d!31681))

(declare-fun d!31683 () Bool)

(declare-fun lt!57589 () Bool)

(assert (=> d!31683 (= lt!57589 (select (content!112 lt!56698) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun e!72483 () Bool)

(assert (=> d!31683 (= lt!57589 e!72483)))

(declare-fun res!55063 () Bool)

(assert (=> d!31683 (=> (not res!55063) (not e!72483))))

(assert (=> d!31683 (= res!55063 ((_ is Cons!1649) lt!56698))))

(assert (=> d!31683 (= (contains!839 lt!56698 (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))) lt!57589)))

(declare-fun b!111484 () Bool)

(declare-fun e!72482 () Bool)

(assert (=> b!111484 (= e!72483 e!72482)))

(declare-fun res!55062 () Bool)

(assert (=> b!111484 (=> res!55062 e!72482)))

(assert (=> b!111484 (= res!55062 (= (h!2248 lt!56698) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun b!111485 () Bool)

(assert (=> b!111485 (= e!72482 (contains!839 (t!5802 lt!56698) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(assert (= (and d!31683 res!55063) b!111484))

(assert (= (and b!111484 (not res!55062)) b!111485))

(declare-fun m!127233 () Bool)

(assert (=> d!31683 m!127233))

(declare-fun m!127235 () Bool)

(assert (=> d!31683 m!127235))

(declare-fun m!127237 () Bool)

(assert (=> b!111485 m!127237))

(assert (=> b!110429 d!31683))

(declare-fun d!31685 () Bool)

(declare-fun lt!57590 () Bool)

(assert (=> d!31685 (= lt!57590 (select (content!112 (toList!813 lt!56961)) (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun e!72485 () Bool)

(assert (=> d!31685 (= lt!57590 e!72485)))

(declare-fun res!55065 () Bool)

(assert (=> d!31685 (=> (not res!55065) (not e!72485))))

(assert (=> d!31685 (= res!55065 ((_ is Cons!1649) (toList!813 lt!56961)))))

(assert (=> d!31685 (= (contains!839 (toList!813 lt!56961) (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!57590)))

(declare-fun b!111486 () Bool)

(declare-fun e!72484 () Bool)

(assert (=> b!111486 (= e!72485 e!72484)))

(declare-fun res!55064 () Bool)

(assert (=> b!111486 (=> res!55064 e!72484)))

(assert (=> b!111486 (= res!55064 (= (h!2248 (toList!813 lt!56961)) (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!111487 () Bool)

(assert (=> b!111487 (= e!72484 (contains!839 (t!5802 (toList!813 lt!56961)) (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31685 res!55065) b!111486))

(assert (= (and b!111486 (not res!55064)) b!111487))

(declare-fun m!127239 () Bool)

(assert (=> d!31685 m!127239))

(declare-fun m!127241 () Bool)

(assert (=> d!31685 m!127241))

(declare-fun m!127243 () Bool)

(assert (=> b!111487 m!127243))

(assert (=> b!110460 d!31685))

(declare-fun d!31687 () Bool)

(declare-fun lt!57591 () Bool)

(assert (=> d!31687 (= lt!57591 (select (content!113 Nil!1649) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!72486 () Bool)

(assert (=> d!31687 (= lt!57591 e!72486)))

(declare-fun res!55066 () Bool)

(assert (=> d!31687 (=> (not res!55066) (not e!72486))))

(assert (=> d!31687 (= res!55066 ((_ is Cons!1648) Nil!1649))))

(assert (=> d!31687 (= (contains!840 Nil!1649 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) lt!57591)))

(declare-fun b!111488 () Bool)

(declare-fun e!72487 () Bool)

(assert (=> b!111488 (= e!72486 e!72487)))

(declare-fun res!55067 () Bool)

(assert (=> b!111488 (=> res!55067 e!72487)))

(assert (=> b!111488 (= res!55067 (= (h!2247 Nil!1649) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111489 () Bool)

(assert (=> b!111489 (= e!72487 (contains!840 (t!5801 Nil!1649) (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!31687 res!55066) b!111488))

(assert (= (and b!111488 (not res!55067)) b!111489))

(assert (=> d!31687 m!125657))

(assert (=> d!31687 m!124875))

(declare-fun m!127245 () Bool)

(assert (=> d!31687 m!127245))

(assert (=> b!111489 m!124875))

(declare-fun m!127247 () Bool)

(assert (=> b!111489 m!127247))

(assert (=> b!110214 d!31687))

(declare-fun d!31689 () Bool)

(declare-fun lt!57592 () Bool)

(assert (=> d!31689 (= lt!57592 (select (content!112 lt!56694) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun e!72489 () Bool)

(assert (=> d!31689 (= lt!57592 e!72489)))

(declare-fun res!55069 () Bool)

(assert (=> d!31689 (=> (not res!55069) (not e!72489))))

(assert (=> d!31689 (= res!55069 ((_ is Cons!1649) lt!56694))))

(assert (=> d!31689 (= (contains!839 lt!56694 (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))) lt!57592)))

(declare-fun b!111490 () Bool)

(declare-fun e!72488 () Bool)

(assert (=> b!111490 (= e!72489 e!72488)))

(declare-fun res!55068 () Bool)

(assert (=> b!111490 (=> res!55068 e!72488)))

(assert (=> b!111490 (= res!55068 (= (h!2248 lt!56694) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun b!111491 () Bool)

(assert (=> b!111491 (= e!72488 (contains!839 (t!5802 lt!56694) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(assert (= (and d!31689 res!55069) b!111490))

(assert (= (and b!111490 (not res!55068)) b!111491))

(declare-fun m!127249 () Bool)

(assert (=> d!31689 m!127249))

(declare-fun m!127251 () Bool)

(assert (=> d!31689 m!127251))

(declare-fun m!127253 () Bool)

(assert (=> b!111491 m!127253))

(assert (=> b!110492 d!31689))

(declare-fun d!31691 () Bool)

(assert (=> d!31691 (= (get!1359 (getValueByKey!157 (toList!813 lt!56770) lt!56756)) (v!2933 (getValueByKey!157 (toList!813 lt!56770) lt!56756)))))

(assert (=> d!31021 d!31691))

(declare-fun b!111494 () Bool)

(declare-fun e!72491 () Option!163)

(assert (=> b!111494 (= e!72491 (getValueByKey!157 (t!5802 (toList!813 lt!56770)) lt!56756))))

(declare-fun d!31693 () Bool)

(declare-fun c!19882 () Bool)

(assert (=> d!31693 (= c!19882 (and ((_ is Cons!1649) (toList!813 lt!56770)) (= (_1!1224 (h!2248 (toList!813 lt!56770))) lt!56756)))))

(declare-fun e!72490 () Option!163)

(assert (=> d!31693 (= (getValueByKey!157 (toList!813 lt!56770) lt!56756) e!72490)))

(declare-fun b!111495 () Bool)

(assert (=> b!111495 (= e!72491 None!161)))

(declare-fun b!111493 () Bool)

(assert (=> b!111493 (= e!72490 e!72491)))

(declare-fun c!19883 () Bool)

(assert (=> b!111493 (= c!19883 (and ((_ is Cons!1649) (toList!813 lt!56770)) (not (= (_1!1224 (h!2248 (toList!813 lt!56770))) lt!56756))))))

(declare-fun b!111492 () Bool)

(assert (=> b!111492 (= e!72490 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56770)))))))

(assert (= (and d!31693 c!19882) b!111492))

(assert (= (and d!31693 (not c!19882)) b!111493))

(assert (= (and b!111493 c!19883) b!111494))

(assert (= (and b!111493 (not c!19883)) b!111495))

(declare-fun m!127255 () Bool)

(assert (=> b!111494 m!127255))

(assert (=> d!31021 d!31693))

(assert (=> b!110402 d!31375))

(declare-fun d!31695 () Bool)

(declare-fun lt!57593 () Bool)

(assert (=> d!31695 (= lt!57593 (select (content!112 (toList!813 lt!56889)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun e!72493 () Bool)

(assert (=> d!31695 (= lt!57593 e!72493)))

(declare-fun res!55071 () Bool)

(assert (=> d!31695 (=> (not res!55071) (not e!72493))))

(assert (=> d!31695 (= res!55071 ((_ is Cons!1649) (toList!813 lt!56889)))))

(assert (=> d!31695 (= (contains!839 (toList!813 lt!56889) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!57593)))

(declare-fun b!111496 () Bool)

(declare-fun e!72492 () Bool)

(assert (=> b!111496 (= e!72493 e!72492)))

(declare-fun res!55070 () Bool)

(assert (=> b!111496 (=> res!55070 e!72492)))

(assert (=> b!111496 (= res!55070 (= (h!2248 (toList!813 lt!56889)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!111497 () Bool)

(assert (=> b!111497 (= e!72492 (contains!839 (t!5802 (toList!813 lt!56889)) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31695 res!55071) b!111496))

(assert (= (and b!111496 (not res!55070)) b!111497))

(declare-fun m!127257 () Bool)

(assert (=> d!31695 m!127257))

(declare-fun m!127259 () Bool)

(assert (=> d!31695 m!127259))

(declare-fun m!127261 () Bool)

(assert (=> b!111497 m!127261))

(assert (=> b!110370 d!31695))

(assert (=> d!31075 d!30913))

(declare-fun d!31697 () Bool)

(declare-fun e!72505 () Bool)

(assert (=> d!31697 e!72505))

(declare-fun c!19888 () Bool)

(declare-fun lt!57596 () SeekEntryResult!271)

(assert (=> d!31697 (= c!19888 ((_ is MissingZero!271) lt!57596))))

(assert (=> d!31697 (= lt!57596 (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (=> d!31697 true))

(declare-fun _$34!908 () Unit!3421)

(assert (=> d!31697 (= (choose!701 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)) _$34!908)))

(declare-fun b!111514 () Bool)

(declare-fun res!55083 () Bool)

(assert (=> b!111514 (= res!55083 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3234 lt!57596)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72503 () Bool)

(assert (=> b!111514 (=> (not res!55083) (not e!72503))))

(declare-fun b!111515 () Bool)

(declare-fun e!72502 () Bool)

(declare-fun call!11916 () Bool)

(assert (=> b!111515 (= e!72502 (not call!11916))))

(declare-fun b!111516 () Bool)

(declare-fun res!55082 () Bool)

(assert (=> b!111516 (=> (not res!55082) (not e!72502))))

(assert (=> b!111516 (= res!55082 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3237 lt!57596)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111517 () Bool)

(declare-fun e!72504 () Bool)

(assert (=> b!111517 (= e!72504 ((_ is Undefined!271) lt!57596))))

(declare-fun bm!11913 () Bool)

(declare-fun call!11917 () Bool)

(assert (=> bm!11913 (= call!11917 (inRange!0 (ite c!19888 (index!3234 lt!57596) (index!3237 lt!57596)) (mask!6795 newMap!16)))))

(declare-fun b!111518 () Bool)

(assert (=> b!111518 (= e!72503 (not call!11916))))

(declare-fun b!111519 () Bool)

(declare-fun res!55081 () Bool)

(assert (=> b!111519 (=> (not res!55081) (not e!72502))))

(assert (=> b!111519 (= res!55081 call!11917)))

(assert (=> b!111519 (= e!72504 e!72502)))

(declare-fun bm!11914 () Bool)

(assert (=> bm!11914 (= call!11916 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!111520 () Bool)

(assert (=> b!111520 (= e!72505 e!72503)))

(declare-fun res!55080 () Bool)

(assert (=> b!111520 (= res!55080 call!11917)))

(assert (=> b!111520 (=> (not res!55080) (not e!72503))))

(declare-fun b!111521 () Bool)

(assert (=> b!111521 (= e!72505 e!72504)))

(declare-fun c!19889 () Bool)

(assert (=> b!111521 (= c!19889 ((_ is MissingVacant!271) lt!57596))))

(assert (= (and d!31697 c!19888) b!111520))

(assert (= (and d!31697 (not c!19888)) b!111521))

(assert (= (and b!111520 res!55080) b!111514))

(assert (= (and b!111514 res!55083) b!111518))

(assert (= (and b!111521 c!19889) b!111519))

(assert (= (and b!111521 (not c!19889)) b!111517))

(assert (= (and b!111519 res!55081) b!111516))

(assert (= (and b!111516 res!55082) b!111515))

(assert (= (or b!111520 b!111519) bm!11913))

(assert (= (or b!111518 b!111515) bm!11914))

(declare-fun m!127263 () Bool)

(assert (=> b!111516 m!127263))

(declare-fun m!127265 () Bool)

(assert (=> bm!11913 m!127265))

(assert (=> bm!11914 m!124515))

(assert (=> bm!11914 m!124639))

(declare-fun m!127267 () Bool)

(assert (=> b!111514 m!127267))

(assert (=> d!31697 m!124515))

(assert (=> d!31697 m!124671))

(assert (=> d!31075 d!31697))

(assert (=> d!31075 d!31171))

(declare-fun b!111524 () Bool)

(declare-fun e!72507 () Option!163)

(assert (=> b!111524 (= e!72507 (getValueByKey!157 (t!5802 (t!5802 (toList!813 lt!56699))) (_1!1224 lt!56517)))))

(declare-fun d!31699 () Bool)

(declare-fun c!19890 () Bool)

(assert (=> d!31699 (= c!19890 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56699))) (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56699)))) (_1!1224 lt!56517))))))

(declare-fun e!72506 () Option!163)

(assert (=> d!31699 (= (getValueByKey!157 (t!5802 (toList!813 lt!56699)) (_1!1224 lt!56517)) e!72506)))

(declare-fun b!111525 () Bool)

(assert (=> b!111525 (= e!72507 None!161)))

(declare-fun b!111523 () Bool)

(assert (=> b!111523 (= e!72506 e!72507)))

(declare-fun c!19891 () Bool)

(assert (=> b!111523 (= c!19891 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56699))) (not (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56699)))) (_1!1224 lt!56517)))))))

(declare-fun b!111522 () Bool)

(assert (=> b!111522 (= e!72506 (Some!162 (_2!1224 (h!2248 (t!5802 (toList!813 lt!56699))))))))

(assert (= (and d!31699 c!19890) b!111522))

(assert (= (and d!31699 (not c!19890)) b!111523))

(assert (= (and b!111523 c!19891) b!111524))

(assert (= (and b!111523 (not c!19891)) b!111525))

(declare-fun m!127269 () Bool)

(assert (=> b!111524 m!127269))

(assert (=> b!110482 d!31699))

(assert (=> b!110423 d!31131))

(assert (=> b!110423 d!31111))

(declare-fun lt!57597 () Bool)

(declare-fun d!31701 () Bool)

(assert (=> d!31701 (= lt!57597 (select (content!112 (toList!813 lt!56879)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!72509 () Bool)

(assert (=> d!31701 (= lt!57597 e!72509)))

(declare-fun res!55085 () Bool)

(assert (=> d!31701 (=> (not res!55085) (not e!72509))))

(assert (=> d!31701 (= res!55085 ((_ is Cons!1649) (toList!813 lt!56879)))))

(assert (=> d!31701 (= (contains!839 (toList!813 lt!56879) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!57597)))

(declare-fun b!111526 () Bool)

(declare-fun e!72508 () Bool)

(assert (=> b!111526 (= e!72509 e!72508)))

(declare-fun res!55084 () Bool)

(assert (=> b!111526 (=> res!55084 e!72508)))

(assert (=> b!111526 (= res!55084 (= (h!2248 (toList!813 lt!56879)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!111527 () Bool)

(assert (=> b!111527 (= e!72508 (contains!839 (t!5802 (toList!813 lt!56879)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!31701 res!55085) b!111526))

(assert (= (and b!111526 (not res!55084)) b!111527))

(declare-fun m!127271 () Bool)

(assert (=> d!31701 m!127271))

(declare-fun m!127273 () Bool)

(assert (=> d!31701 m!127273))

(declare-fun m!127275 () Bool)

(assert (=> b!111527 m!127275))

(assert (=> b!110358 d!31701))

(declare-fun lt!57598 () Bool)

(declare-fun d!31703 () Bool)

(assert (=> d!31703 (= lt!57598 (select (content!112 (toList!813 lt!56942)) (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun e!72511 () Bool)

(assert (=> d!31703 (= lt!57598 e!72511)))

(declare-fun res!55087 () Bool)

(assert (=> d!31703 (=> (not res!55087) (not e!72511))))

(assert (=> d!31703 (= res!55087 ((_ is Cons!1649) (toList!813 lt!56942)))))

(assert (=> d!31703 (= (contains!839 (toList!813 lt!56942) (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!57598)))

(declare-fun b!111528 () Bool)

(declare-fun e!72510 () Bool)

(assert (=> b!111528 (= e!72511 e!72510)))

(declare-fun res!55086 () Bool)

(assert (=> b!111528 (=> res!55086 e!72510)))

(assert (=> b!111528 (= res!55086 (= (h!2248 (toList!813 lt!56942)) (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!111529 () Bool)

(assert (=> b!111529 (= e!72510 (contains!839 (t!5802 (toList!813 lt!56942)) (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31703 res!55087) b!111528))

(assert (= (and b!111528 (not res!55086)) b!111529))

(declare-fun m!127277 () Bool)

(assert (=> d!31703 m!127277))

(declare-fun m!127279 () Bool)

(assert (=> d!31703 m!127279))

(declare-fun m!127281 () Bool)

(assert (=> b!111529 m!127281))

(assert (=> b!110447 d!31703))

(declare-fun d!31705 () Bool)

(declare-fun e!72512 () Bool)

(assert (=> d!31705 e!72512))

(declare-fun res!55088 () Bool)

(assert (=> d!31705 (=> (not res!55088) (not e!72512))))

(declare-fun lt!57599 () ListLongMap!1595)

(assert (=> d!31705 (= res!55088 (contains!837 lt!57599 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun lt!57602 () List!1653)

(assert (=> d!31705 (= lt!57599 (ListLongMap!1596 lt!57602))))

(declare-fun lt!57600 () Unit!3421)

(declare-fun lt!57601 () Unit!3421)

(assert (=> d!31705 (= lt!57600 lt!57601)))

(assert (=> d!31705 (= (getValueByKey!157 lt!57602 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31705 (= lt!57601 (lemmaContainsTupThenGetReturnValue!75 lt!57602 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31705 (= lt!57602 (insertStrictlySorted!77 (toList!813 call!11780) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31705 (= (+!149 call!11780 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) lt!57599)))

(declare-fun b!111530 () Bool)

(declare-fun res!55089 () Bool)

(assert (=> b!111530 (=> (not res!55089) (not e!72512))))

(assert (=> b!111530 (= res!55089 (= (getValueByKey!157 (toList!813 lt!57599) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(declare-fun b!111531 () Bool)

(assert (=> b!111531 (= e!72512 (contains!839 (toList!813 lt!57599) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(assert (= (and d!31705 res!55088) b!111530))

(assert (= (and b!111530 res!55089) b!111531))

(declare-fun m!127283 () Bool)

(assert (=> d!31705 m!127283))

(declare-fun m!127285 () Bool)

(assert (=> d!31705 m!127285))

(declare-fun m!127287 () Bool)

(assert (=> d!31705 m!127287))

(declare-fun m!127289 () Bool)

(assert (=> d!31705 m!127289))

(declare-fun m!127291 () Bool)

(assert (=> b!111530 m!127291))

(declare-fun m!127293 () Bool)

(assert (=> b!111531 m!127293))

(assert (=> b!110318 d!31705))

(declare-fun d!31707 () Bool)

(assert (=> d!31707 (= (apply!100 lt!56797 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1359 (getValueByKey!157 (toList!813 lt!56797) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4602 () Bool)

(assert (= bs!4602 d!31707))

(assert (=> bs!4602 m!126163))

(assert (=> bs!4602 m!126163))

(declare-fun m!127295 () Bool)

(assert (=> bs!4602 m!127295))

(assert (=> b!110225 d!31707))

(declare-fun d!31709 () Bool)

(declare-fun e!72513 () Bool)

(assert (=> d!31709 e!72513))

(declare-fun res!55090 () Bool)

(assert (=> d!31709 (=> res!55090 e!72513)))

(declare-fun lt!57606 () Bool)

(assert (=> d!31709 (= res!55090 (not lt!57606))))

(declare-fun lt!57603 () Bool)

(assert (=> d!31709 (= lt!57606 lt!57603)))

(declare-fun lt!57605 () Unit!3421)

(declare-fun e!72514 () Unit!3421)

(assert (=> d!31709 (= lt!57605 e!72514)))

(declare-fun c!19892 () Bool)

(assert (=> d!31709 (= c!19892 lt!57603)))

(assert (=> d!31709 (= lt!57603 (containsKey!161 (toList!813 lt!56889) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31709 (= (contains!837 lt!56889 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57606)))

(declare-fun b!111532 () Bool)

(declare-fun lt!57604 () Unit!3421)

(assert (=> b!111532 (= e!72514 lt!57604)))

(assert (=> b!111532 (= lt!57604 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56889) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> b!111532 (isDefined!111 (getValueByKey!157 (toList!813 lt!56889) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111533 () Bool)

(declare-fun Unit!3484 () Unit!3421)

(assert (=> b!111533 (= e!72514 Unit!3484)))

(declare-fun b!111534 () Bool)

(assert (=> b!111534 (= e!72513 (isDefined!111 (getValueByKey!157 (toList!813 lt!56889) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31709 c!19892) b!111532))

(assert (= (and d!31709 (not c!19892)) b!111533))

(assert (= (and d!31709 (not res!55090)) b!111534))

(declare-fun m!127297 () Bool)

(assert (=> d!31709 m!127297))

(declare-fun m!127299 () Bool)

(assert (=> b!111532 m!127299))

(assert (=> b!111532 m!125137))

(assert (=> b!111532 m!125137))

(declare-fun m!127301 () Bool)

(assert (=> b!111532 m!127301))

(assert (=> b!111534 m!125137))

(assert (=> b!111534 m!125137))

(assert (=> b!111534 m!127301))

(assert (=> d!30977 d!31709))

(declare-fun b!111537 () Bool)

(declare-fun e!72516 () Option!163)

(assert (=> b!111537 (= e!72516 (getValueByKey!157 (t!5802 lt!56892) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!31711 () Bool)

(declare-fun c!19893 () Bool)

(assert (=> d!31711 (= c!19893 (and ((_ is Cons!1649) lt!56892) (= (_1!1224 (h!2248 lt!56892)) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72515 () Option!163)

(assert (=> d!31711 (= (getValueByKey!157 lt!56892 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72515)))

(declare-fun b!111538 () Bool)

(assert (=> b!111538 (= e!72516 None!161)))

(declare-fun b!111536 () Bool)

(assert (=> b!111536 (= e!72515 e!72516)))

(declare-fun c!19894 () Bool)

(assert (=> b!111536 (= c!19894 (and ((_ is Cons!1649) lt!56892) (not (= (_1!1224 (h!2248 lt!56892)) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111535 () Bool)

(assert (=> b!111535 (= e!72515 (Some!162 (_2!1224 (h!2248 lt!56892))))))

(assert (= (and d!31711 c!19893) b!111535))

(assert (= (and d!31711 (not c!19893)) b!111536))

(assert (= (and b!111536 c!19894) b!111537))

(assert (= (and b!111536 (not c!19894)) b!111538))

(declare-fun m!127303 () Bool)

(assert (=> b!111537 m!127303))

(assert (=> d!30977 d!31711))

(declare-fun d!31713 () Bool)

(assert (=> d!31713 (= (getValueByKey!157 lt!56892 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!57607 () Unit!3421)

(assert (=> d!31713 (= lt!57607 (choose!693 lt!56892 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun e!72517 () Bool)

(assert (=> d!31713 e!72517))

(declare-fun res!55091 () Bool)

(assert (=> d!31713 (=> (not res!55091) (not e!72517))))

(assert (=> d!31713 (= res!55091 (isStrictlySorted!306 lt!56892))))

(assert (=> d!31713 (= (lemmaContainsTupThenGetReturnValue!75 lt!56892 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57607)))

(declare-fun b!111539 () Bool)

(declare-fun res!55092 () Bool)

(assert (=> b!111539 (=> (not res!55092) (not e!72517))))

(assert (=> b!111539 (= res!55092 (containsKey!161 lt!56892 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111540 () Bool)

(assert (=> b!111540 (= e!72517 (contains!839 lt!56892 (tuple2!2429 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31713 res!55091) b!111539))

(assert (= (and b!111539 res!55092) b!111540))

(assert (=> d!31713 m!125131))

(declare-fun m!127305 () Bool)

(assert (=> d!31713 m!127305))

(declare-fun m!127307 () Bool)

(assert (=> d!31713 m!127307))

(declare-fun m!127309 () Bool)

(assert (=> b!111539 m!127309))

(declare-fun m!127311 () Bool)

(assert (=> b!111540 m!127311))

(assert (=> d!30977 d!31713))

(declare-fun c!19896 () Bool)

(declare-fun c!19895 () Bool)

(declare-fun b!111541 () Bool)

(declare-fun e!72520 () List!1653)

(assert (=> b!111541 (= e!72520 (ite c!19895 (t!5802 (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) (ite c!19896 (Cons!1649 (h!2248 (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) (t!5802 (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))) Nil!1650)))))

(declare-fun b!111542 () Bool)

(declare-fun e!72522 () List!1653)

(declare-fun call!11920 () List!1653)

(assert (=> b!111542 (= e!72522 call!11920)))

(declare-fun call!11918 () List!1653)

(declare-fun c!19898 () Bool)

(declare-fun bm!11915 () Bool)

(assert (=> bm!11915 (= call!11918 ($colon$colon!82 e!72520 (ite c!19898 (h!2248 (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) (tuple2!2429 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun c!19897 () Bool)

(assert (=> bm!11915 (= c!19897 c!19898)))

(declare-fun b!111543 () Bool)

(declare-fun e!72518 () List!1653)

(assert (=> b!111543 (= e!72518 e!72522)))

(assert (=> b!111543 (= c!19895 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111544 () Bool)

(assert (=> b!111544 (= e!72520 (insertStrictlySorted!77 (t!5802 (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun bm!11916 () Bool)

(declare-fun call!11919 () List!1653)

(assert (=> bm!11916 (= call!11919 call!11920)))

(declare-fun d!31715 () Bool)

(declare-fun e!72521 () Bool)

(assert (=> d!31715 e!72521))

(declare-fun res!55094 () Bool)

(assert (=> d!31715 (=> (not res!55094) (not e!72521))))

(declare-fun lt!57608 () List!1653)

(assert (=> d!31715 (= res!55094 (isStrictlySorted!306 lt!57608))))

(assert (=> d!31715 (= lt!57608 e!72518)))

(assert (=> d!31715 (= c!19898 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) (bvslt (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31715 (isStrictlySorted!306 (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31715 (= (insertStrictlySorted!77 (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57608)))

(declare-fun b!111545 () Bool)

(declare-fun res!55093 () Bool)

(assert (=> b!111545 (=> (not res!55093) (not e!72521))))

(assert (=> b!111545 (= res!55093 (containsKey!161 lt!57608 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111546 () Bool)

(declare-fun e!72519 () List!1653)

(assert (=> b!111546 (= e!72519 call!11919)))

(declare-fun b!111547 () Bool)

(assert (=> b!111547 (= e!72519 call!11919)))

(declare-fun b!111548 () Bool)

(assert (=> b!111548 (= e!72521 (contains!839 lt!57608 (tuple2!2429 (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111549 () Bool)

(assert (=> b!111549 (= e!72518 call!11918)))

(declare-fun bm!11917 () Bool)

(assert (=> bm!11917 (= call!11920 call!11918)))

(declare-fun b!111550 () Bool)

(assert (=> b!111550 (= c!19896 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))) (bvsgt (_1!1224 (h!2248 (toList!813 (+!149 lt!56522 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> b!111550 (= e!72522 e!72519)))

(assert (= (and d!31715 c!19898) b!111549))

(assert (= (and d!31715 (not c!19898)) b!111543))

(assert (= (and b!111543 c!19895) b!111542))

(assert (= (and b!111543 (not c!19895)) b!111550))

(assert (= (and b!111550 c!19896) b!111546))

(assert (= (and b!111550 (not c!19896)) b!111547))

(assert (= (or b!111546 b!111547) bm!11916))

(assert (= (or b!111542 bm!11916) bm!11917))

(assert (= (or b!111549 bm!11917) bm!11915))

(assert (= (and bm!11915 c!19897) b!111544))

(assert (= (and bm!11915 (not c!19897)) b!111541))

(assert (= (and d!31715 res!55094) b!111545))

(assert (= (and b!111545 res!55093) b!111548))

(declare-fun m!127313 () Bool)

(assert (=> d!31715 m!127313))

(declare-fun m!127315 () Bool)

(assert (=> d!31715 m!127315))

(declare-fun m!127317 () Bool)

(assert (=> bm!11915 m!127317))

(declare-fun m!127319 () Bool)

(assert (=> b!111548 m!127319))

(declare-fun m!127321 () Bool)

(assert (=> b!111544 m!127321))

(declare-fun m!127323 () Bool)

(assert (=> b!111545 m!127323))

(assert (=> d!30977 d!31715))

(declare-fun d!31717 () Bool)

(declare-fun lt!57609 () Bool)

(assert (=> d!31717 (= lt!57609 (select (content!112 (toList!813 lt!56970)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun e!72524 () Bool)

(assert (=> d!31717 (= lt!57609 e!72524)))

(declare-fun res!55096 () Bool)

(assert (=> d!31717 (=> (not res!55096) (not e!72524))))

(assert (=> d!31717 (= res!55096 ((_ is Cons!1649) (toList!813 lt!56970)))))

(assert (=> d!31717 (= (contains!839 (toList!813 lt!56970) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!57609)))

(declare-fun b!111551 () Bool)

(declare-fun e!72523 () Bool)

(assert (=> b!111551 (= e!72524 e!72523)))

(declare-fun res!55095 () Bool)

(assert (=> b!111551 (=> res!55095 e!72523)))

(assert (=> b!111551 (= res!55095 (= (h!2248 (toList!813 lt!56970)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(declare-fun b!111552 () Bool)

(assert (=> b!111552 (= e!72523 (contains!839 (t!5802 (toList!813 lt!56970)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))

(assert (= (and d!31717 res!55096) b!111551))

(assert (= (and b!111551 (not res!55095)) b!111552))

(declare-fun m!127325 () Bool)

(assert (=> d!31717 m!127325))

(declare-fun m!127327 () Bool)

(assert (=> d!31717 m!127327))

(declare-fun m!127329 () Bool)

(assert (=> b!111552 m!127329))

(assert (=> b!110465 d!31717))

(declare-fun d!31719 () Bool)

(assert (=> d!31719 (= ($colon$colon!82 e!71757 (ite c!19566 (h!2248 (toList!813 lt!56522)) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528)))) (Cons!1649 (ite c!19566 (h!2248 (toList!813 lt!56522)) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))) e!71757))))

(assert (=> bm!11770 d!31719))

(assert (=> b!110486 d!31167))

(assert (=> b!110486 d!31101))

(assert (=> b!110354 d!31175))

(assert (=> b!110354 d!31177))

(declare-fun b!111555 () Bool)

(declare-fun e!72526 () Option!163)

(assert (=> b!111555 (= e!72526 (getValueByKey!157 (t!5802 (toList!813 lt!56897)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun c!19899 () Bool)

(declare-fun d!31721 () Bool)

(assert (=> d!31721 (= c!19899 (and ((_ is Cons!1649) (toList!813 lt!56897)) (= (_1!1224 (h!2248 (toList!813 lt!56897))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun e!72525 () Option!163)

(assert (=> d!31721 (= (getValueByKey!157 (toList!813 lt!56897) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) e!72525)))

(declare-fun b!111556 () Bool)

(assert (=> b!111556 (= e!72526 None!161)))

(declare-fun b!111554 () Bool)

(assert (=> b!111554 (= e!72525 e!72526)))

(declare-fun c!19900 () Bool)

(assert (=> b!111554 (= c!19900 (and ((_ is Cons!1649) (toList!813 lt!56897)) (not (= (_1!1224 (h!2248 (toList!813 lt!56897))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun b!111553 () Bool)

(assert (=> b!111553 (= e!72525 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56897)))))))

(assert (= (and d!31721 c!19899) b!111553))

(assert (= (and d!31721 (not c!19899)) b!111554))

(assert (= (and b!111554 c!19900) b!111555))

(assert (= (and b!111554 (not c!19900)) b!111556))

(declare-fun m!127331 () Bool)

(assert (=> b!111555 m!127331))

(assert (=> b!110373 d!31721))

(assert (=> b!110414 d!31119))

(assert (=> b!110414 d!31121))

(declare-fun d!31723 () Bool)

(assert (=> d!31723 (isDefined!111 (getValueByKey!157 (toList!813 lt!56687) (_1!1224 lt!56528)))))

(declare-fun lt!57610 () Unit!3421)

(assert (=> d!31723 (= lt!57610 (choose!702 (toList!813 lt!56687) (_1!1224 lt!56528)))))

(declare-fun e!72527 () Bool)

(assert (=> d!31723 e!72527))

(declare-fun res!55097 () Bool)

(assert (=> d!31723 (=> (not res!55097) (not e!72527))))

(assert (=> d!31723 (= res!55097 (isStrictlySorted!306 (toList!813 lt!56687)))))

(assert (=> d!31723 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56687) (_1!1224 lt!56528)) lt!57610)))

(declare-fun b!111557 () Bool)

(assert (=> b!111557 (= e!72527 (containsKey!161 (toList!813 lt!56687) (_1!1224 lt!56528)))))

(assert (= (and d!31723 res!55097) b!111557))

(assert (=> d!31723 m!124735))

(assert (=> d!31723 m!124735))

(assert (=> d!31723 m!124981))

(declare-fun m!127333 () Bool)

(assert (=> d!31723 m!127333))

(declare-fun m!127335 () Bool)

(assert (=> d!31723 m!127335))

(assert (=> b!111557 m!124977))

(assert (=> b!110266 d!31723))

(assert (=> b!110266 d!31593))

(assert (=> b!110266 d!31107))

(declare-fun d!31725 () Bool)

(assert (=> d!31725 (= (apply!100 (+!149 lt!56866 (tuple2!2429 lt!56867 (minValue!2498 newMap!16))) lt!56852) (apply!100 lt!56866 lt!56852))))

(declare-fun lt!57611 () Unit!3421)

(assert (=> d!31725 (= lt!57611 (choose!699 lt!56866 lt!56867 (minValue!2498 newMap!16) lt!56852))))

(declare-fun e!72528 () Bool)

(assert (=> d!31725 e!72528))

(declare-fun res!55098 () Bool)

(assert (=> d!31725 (=> (not res!55098) (not e!72528))))

(assert (=> d!31725 (= res!55098 (contains!837 lt!56866 lt!56852))))

(assert (=> d!31725 (= (addApplyDifferent!76 lt!56866 lt!56867 (minValue!2498 newMap!16) lt!56852) lt!57611)))

(declare-fun b!111558 () Bool)

(assert (=> b!111558 (= e!72528 (not (= lt!56852 lt!56867)))))

(assert (= (and d!31725 res!55098) b!111558))

(assert (=> d!31725 m!125021))

(assert (=> d!31725 m!125047))

(assert (=> d!31725 m!125037))

(declare-fun m!127337 () Bool)

(assert (=> d!31725 m!127337))

(declare-fun m!127339 () Bool)

(assert (=> d!31725 m!127339))

(assert (=> d!31725 m!125021))

(assert (=> b!110331 d!31725))

(declare-fun d!31727 () Bool)

(assert (=> d!31727 (contains!837 (+!149 lt!56854 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16))) lt!56864)))

(declare-fun lt!57612 () Unit!3421)

(assert (=> d!31727 (= lt!57612 (choose!700 lt!56854 lt!56858 (zeroValue!2498 newMap!16) lt!56864))))

(assert (=> d!31727 (contains!837 lt!56854 lt!56864)))

(assert (=> d!31727 (= (addStillContains!76 lt!56854 lt!56858 (zeroValue!2498 newMap!16) lt!56864) lt!57612)))

(declare-fun bs!4603 () Bool)

(assert (= bs!4603 d!31727))

(assert (=> bs!4603 m!125039))

(assert (=> bs!4603 m!125039))

(assert (=> bs!4603 m!125043))

(declare-fun m!127341 () Bool)

(assert (=> bs!4603 m!127341))

(declare-fun m!127343 () Bool)

(assert (=> bs!4603 m!127343))

(assert (=> b!110331 d!31727))

(declare-fun d!31729 () Bool)

(declare-fun e!72529 () Bool)

(assert (=> d!31729 e!72529))

(declare-fun res!55099 () Bool)

(assert (=> d!31729 (=> (not res!55099) (not e!72529))))

(declare-fun lt!57613 () ListLongMap!1595)

(assert (=> d!31729 (= res!55099 (contains!837 lt!57613 (_1!1224 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16)))))))

(declare-fun lt!57616 () List!1653)

(assert (=> d!31729 (= lt!57613 (ListLongMap!1596 lt!57616))))

(declare-fun lt!57614 () Unit!3421)

(declare-fun lt!57615 () Unit!3421)

(assert (=> d!31729 (= lt!57614 lt!57615)))

(assert (=> d!31729 (= (getValueByKey!157 lt!57616 (_1!1224 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31729 (= lt!57615 (lemmaContainsTupThenGetReturnValue!75 lt!57616 (_1!1224 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31729 (= lt!57616 (insertStrictlySorted!77 (toList!813 lt!56854) (_1!1224 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31729 (= (+!149 lt!56854 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16))) lt!57613)))

(declare-fun b!111559 () Bool)

(declare-fun res!55100 () Bool)

(assert (=> b!111559 (=> (not res!55100) (not e!72529))))

(assert (=> b!111559 (= res!55100 (= (getValueByKey!157 (toList!813 lt!57613) (_1!1224 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16))))))))

(declare-fun b!111560 () Bool)

(assert (=> b!111560 (= e!72529 (contains!839 (toList!813 lt!57613) (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16))))))

(assert (= (and d!31729 res!55099) b!111559))

(assert (= (and b!111559 res!55100) b!111560))

(declare-fun m!127345 () Bool)

(assert (=> d!31729 m!127345))

(declare-fun m!127347 () Bool)

(assert (=> d!31729 m!127347))

(declare-fun m!127349 () Bool)

(assert (=> d!31729 m!127349))

(declare-fun m!127351 () Bool)

(assert (=> d!31729 m!127351))

(declare-fun m!127353 () Bool)

(assert (=> b!111559 m!127353))

(declare-fun m!127355 () Bool)

(assert (=> b!111560 m!127355))

(assert (=> b!110331 d!31729))

(declare-fun d!31731 () Bool)

(assert (=> d!31731 (= (apply!100 (+!149 lt!56848 (tuple2!2429 lt!56850 (minValue!2498 newMap!16))) lt!56851) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56848 (tuple2!2429 lt!56850 (minValue!2498 newMap!16)))) lt!56851)))))

(declare-fun bs!4604 () Bool)

(assert (= bs!4604 d!31731))

(declare-fun m!127357 () Bool)

(assert (=> bs!4604 m!127357))

(assert (=> bs!4604 m!127357))

(declare-fun m!127359 () Bool)

(assert (=> bs!4604 m!127359))

(assert (=> b!110331 d!31731))

(declare-fun d!31733 () Bool)

(declare-fun e!72530 () Bool)

(assert (=> d!31733 e!72530))

(declare-fun res!55101 () Bool)

(assert (=> d!31733 (=> (not res!55101) (not e!72530))))

(declare-fun lt!57617 () ListLongMap!1595)

(assert (=> d!31733 (= res!55101 (contains!837 lt!57617 (_1!1224 (tuple2!2429 lt!56850 (minValue!2498 newMap!16)))))))

(declare-fun lt!57620 () List!1653)

(assert (=> d!31733 (= lt!57617 (ListLongMap!1596 lt!57620))))

(declare-fun lt!57618 () Unit!3421)

(declare-fun lt!57619 () Unit!3421)

(assert (=> d!31733 (= lt!57618 lt!57619)))

(assert (=> d!31733 (= (getValueByKey!157 lt!57620 (_1!1224 (tuple2!2429 lt!56850 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!56850 (minValue!2498 newMap!16)))))))

(assert (=> d!31733 (= lt!57619 (lemmaContainsTupThenGetReturnValue!75 lt!57620 (_1!1224 (tuple2!2429 lt!56850 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!56850 (minValue!2498 newMap!16)))))))

(assert (=> d!31733 (= lt!57620 (insertStrictlySorted!77 (toList!813 lt!56848) (_1!1224 (tuple2!2429 lt!56850 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!56850 (minValue!2498 newMap!16)))))))

(assert (=> d!31733 (= (+!149 lt!56848 (tuple2!2429 lt!56850 (minValue!2498 newMap!16))) lt!57617)))

(declare-fun b!111561 () Bool)

(declare-fun res!55102 () Bool)

(assert (=> b!111561 (=> (not res!55102) (not e!72530))))

(assert (=> b!111561 (= res!55102 (= (getValueByKey!157 (toList!813 lt!57617) (_1!1224 (tuple2!2429 lt!56850 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!56850 (minValue!2498 newMap!16))))))))

(declare-fun b!111562 () Bool)

(assert (=> b!111562 (= e!72530 (contains!839 (toList!813 lt!57617) (tuple2!2429 lt!56850 (minValue!2498 newMap!16))))))

(assert (= (and d!31733 res!55101) b!111561))

(assert (= (and b!111561 res!55102) b!111562))

(declare-fun m!127361 () Bool)

(assert (=> d!31733 m!127361))

(declare-fun m!127363 () Bool)

(assert (=> d!31733 m!127363))

(declare-fun m!127365 () Bool)

(assert (=> d!31733 m!127365))

(declare-fun m!127367 () Bool)

(assert (=> d!31733 m!127367))

(declare-fun m!127369 () Bool)

(assert (=> b!111561 m!127369))

(declare-fun m!127371 () Bool)

(assert (=> b!111562 m!127371))

(assert (=> b!110331 d!31733))

(declare-fun d!31735 () Bool)

(declare-fun e!72531 () Bool)

(assert (=> d!31735 e!72531))

(declare-fun res!55103 () Bool)

(assert (=> d!31735 (=> (not res!55103) (not e!72531))))

(declare-fun lt!57621 () ListLongMap!1595)

(assert (=> d!31735 (= res!55103 (contains!837 lt!57621 (_1!1224 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16)))))))

(declare-fun lt!57624 () List!1653)

(assert (=> d!31735 (= lt!57621 (ListLongMap!1596 lt!57624))))

(declare-fun lt!57622 () Unit!3421)

(declare-fun lt!57623 () Unit!3421)

(assert (=> d!31735 (= lt!57622 lt!57623)))

(assert (=> d!31735 (= (getValueByKey!157 lt!57624 (_1!1224 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31735 (= lt!57623 (lemmaContainsTupThenGetReturnValue!75 lt!57624 (_1!1224 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31735 (= lt!57624 (insertStrictlySorted!77 (toList!813 lt!56855) (_1!1224 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31735 (= (+!149 lt!56855 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16))) lt!57621)))

(declare-fun b!111563 () Bool)

(declare-fun res!55104 () Bool)

(assert (=> b!111563 (=> (not res!55104) (not e!72531))))

(assert (=> b!111563 (= res!55104 (= (getValueByKey!157 (toList!813 lt!57621) (_1!1224 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16))))))))

(declare-fun b!111564 () Bool)

(assert (=> b!111564 (= e!72531 (contains!839 (toList!813 lt!57621) (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16))))))

(assert (= (and d!31735 res!55103) b!111563))

(assert (= (and b!111563 res!55104) b!111564))

(declare-fun m!127373 () Bool)

(assert (=> d!31735 m!127373))

(declare-fun m!127375 () Bool)

(assert (=> d!31735 m!127375))

(declare-fun m!127377 () Bool)

(assert (=> d!31735 m!127377))

(declare-fun m!127379 () Bool)

(assert (=> d!31735 m!127379))

(declare-fun m!127381 () Bool)

(assert (=> b!111563 m!127381))

(declare-fun m!127383 () Bool)

(assert (=> b!111564 m!127383))

(assert (=> b!110331 d!31735))

(declare-fun d!31737 () Bool)

(assert (=> d!31737 (= (apply!100 lt!56855 lt!56857) (get!1359 (getValueByKey!157 (toList!813 lt!56855) lt!56857)))))

(declare-fun bs!4605 () Bool)

(assert (= bs!4605 d!31737))

(declare-fun m!127385 () Bool)

(assert (=> bs!4605 m!127385))

(assert (=> bs!4605 m!127385))

(declare-fun m!127387 () Bool)

(assert (=> bs!4605 m!127387))

(assert (=> b!110331 d!31737))

(declare-fun d!31739 () Bool)

(assert (=> d!31739 (= (apply!100 (+!149 lt!56848 (tuple2!2429 lt!56850 (minValue!2498 newMap!16))) lt!56851) (apply!100 lt!56848 lt!56851))))

(declare-fun lt!57625 () Unit!3421)

(assert (=> d!31739 (= lt!57625 (choose!699 lt!56848 lt!56850 (minValue!2498 newMap!16) lt!56851))))

(declare-fun e!72532 () Bool)

(assert (=> d!31739 e!72532))

(declare-fun res!55105 () Bool)

(assert (=> d!31739 (=> (not res!55105) (not e!72532))))

(assert (=> d!31739 (= res!55105 (contains!837 lt!56848 lt!56851))))

(assert (=> d!31739 (= (addApplyDifferent!76 lt!56848 lt!56850 (minValue!2498 newMap!16) lt!56851) lt!57625)))

(declare-fun b!111565 () Bool)

(assert (=> b!111565 (= e!72532 (not (= lt!56851 lt!56850)))))

(assert (= (and d!31739 res!55105) b!111565))

(assert (=> d!31739 m!125027))

(assert (=> d!31739 m!125049))

(assert (=> d!31739 m!125023))

(declare-fun m!127389 () Bool)

(assert (=> d!31739 m!127389))

(declare-fun m!127391 () Bool)

(assert (=> d!31739 m!127391))

(assert (=> d!31739 m!125027))

(assert (=> b!110331 d!31739))

(declare-fun d!31741 () Bool)

(declare-fun e!72533 () Bool)

(assert (=> d!31741 e!72533))

(declare-fun res!55106 () Bool)

(assert (=> d!31741 (=> res!55106 e!72533)))

(declare-fun lt!57629 () Bool)

(assert (=> d!31741 (= res!55106 (not lt!57629))))

(declare-fun lt!57626 () Bool)

(assert (=> d!31741 (= lt!57629 lt!57626)))

(declare-fun lt!57628 () Unit!3421)

(declare-fun e!72534 () Unit!3421)

(assert (=> d!31741 (= lt!57628 e!72534)))

(declare-fun c!19901 () Bool)

(assert (=> d!31741 (= c!19901 lt!57626)))

(assert (=> d!31741 (= lt!57626 (containsKey!161 (toList!813 (+!149 lt!56854 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16)))) lt!56864))))

(assert (=> d!31741 (= (contains!837 (+!149 lt!56854 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16))) lt!56864) lt!57629)))

(declare-fun b!111566 () Bool)

(declare-fun lt!57627 () Unit!3421)

(assert (=> b!111566 (= e!72534 lt!57627)))

(assert (=> b!111566 (= lt!57627 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (+!149 lt!56854 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16)))) lt!56864))))

(assert (=> b!111566 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56854 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16)))) lt!56864))))

(declare-fun b!111567 () Bool)

(declare-fun Unit!3485 () Unit!3421)

(assert (=> b!111567 (= e!72534 Unit!3485)))

(declare-fun b!111568 () Bool)

(assert (=> b!111568 (= e!72533 (isDefined!111 (getValueByKey!157 (toList!813 (+!149 lt!56854 (tuple2!2429 lt!56858 (zeroValue!2498 newMap!16)))) lt!56864)))))

(assert (= (and d!31741 c!19901) b!111566))

(assert (= (and d!31741 (not c!19901)) b!111567))

(assert (= (and d!31741 (not res!55106)) b!111568))

(declare-fun m!127393 () Bool)

(assert (=> d!31741 m!127393))

(declare-fun m!127395 () Bool)

(assert (=> b!111566 m!127395))

(declare-fun m!127397 () Bool)

(assert (=> b!111566 m!127397))

(assert (=> b!111566 m!127397))

(declare-fun m!127399 () Bool)

(assert (=> b!111566 m!127399))

(assert (=> b!111568 m!127397))

(assert (=> b!111568 m!127397))

(assert (=> b!111568 m!127399))

(assert (=> b!110331 d!31741))

(declare-fun d!31743 () Bool)

(assert (=> d!31743 (= (apply!100 lt!56848 lt!56851) (get!1359 (getValueByKey!157 (toList!813 lt!56848) lt!56851)))))

(declare-fun bs!4606 () Bool)

(assert (= bs!4606 d!31743))

(declare-fun m!127401 () Bool)

(assert (=> bs!4606 m!127401))

(assert (=> bs!4606 m!127401))

(declare-fun m!127403 () Bool)

(assert (=> bs!4606 m!127403))

(assert (=> b!110331 d!31743))

(declare-fun d!31745 () Bool)

(declare-fun e!72535 () Bool)

(assert (=> d!31745 e!72535))

(declare-fun res!55107 () Bool)

(assert (=> d!31745 (=> (not res!55107) (not e!72535))))

(declare-fun lt!57630 () ListLongMap!1595)

(assert (=> d!31745 (= res!55107 (contains!837 lt!57630 (_1!1224 (tuple2!2429 lt!56867 (minValue!2498 newMap!16)))))))

(declare-fun lt!57633 () List!1653)

(assert (=> d!31745 (= lt!57630 (ListLongMap!1596 lt!57633))))

(declare-fun lt!57631 () Unit!3421)

(declare-fun lt!57632 () Unit!3421)

(assert (=> d!31745 (= lt!57631 lt!57632)))

(assert (=> d!31745 (= (getValueByKey!157 lt!57633 (_1!1224 (tuple2!2429 lt!56867 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!56867 (minValue!2498 newMap!16)))))))

(assert (=> d!31745 (= lt!57632 (lemmaContainsTupThenGetReturnValue!75 lt!57633 (_1!1224 (tuple2!2429 lt!56867 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!56867 (minValue!2498 newMap!16)))))))

(assert (=> d!31745 (= lt!57633 (insertStrictlySorted!77 (toList!813 lt!56866) (_1!1224 (tuple2!2429 lt!56867 (minValue!2498 newMap!16))) (_2!1224 (tuple2!2429 lt!56867 (minValue!2498 newMap!16)))))))

(assert (=> d!31745 (= (+!149 lt!56866 (tuple2!2429 lt!56867 (minValue!2498 newMap!16))) lt!57630)))

(declare-fun b!111569 () Bool)

(declare-fun res!55108 () Bool)

(assert (=> b!111569 (=> (not res!55108) (not e!72535))))

(assert (=> b!111569 (= res!55108 (= (getValueByKey!157 (toList!813 lt!57630) (_1!1224 (tuple2!2429 lt!56867 (minValue!2498 newMap!16)))) (Some!162 (_2!1224 (tuple2!2429 lt!56867 (minValue!2498 newMap!16))))))))

(declare-fun b!111570 () Bool)

(assert (=> b!111570 (= e!72535 (contains!839 (toList!813 lt!57630) (tuple2!2429 lt!56867 (minValue!2498 newMap!16))))))

(assert (= (and d!31745 res!55107) b!111569))

(assert (= (and b!111569 res!55108) b!111570))

(declare-fun m!127405 () Bool)

(assert (=> d!31745 m!127405))

(declare-fun m!127407 () Bool)

(assert (=> d!31745 m!127407))

(declare-fun m!127409 () Bool)

(assert (=> d!31745 m!127409))

(declare-fun m!127411 () Bool)

(assert (=> d!31745 m!127411))

(declare-fun m!127413 () Bool)

(assert (=> b!111569 m!127413))

(declare-fun m!127415 () Bool)

(assert (=> b!111570 m!127415))

(assert (=> b!110331 d!31745))

(declare-fun d!31747 () Bool)

(assert (=> d!31747 (= (apply!100 (+!149 lt!56866 (tuple2!2429 lt!56867 (minValue!2498 newMap!16))) lt!56852) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56866 (tuple2!2429 lt!56867 (minValue!2498 newMap!16)))) lt!56852)))))

(declare-fun bs!4607 () Bool)

(assert (= bs!4607 d!31747))

(declare-fun m!127417 () Bool)

(assert (=> bs!4607 m!127417))

(assert (=> bs!4607 m!127417))

(declare-fun m!127419 () Bool)

(assert (=> bs!4607 m!127419))

(assert (=> b!110331 d!31747))

(declare-fun d!31749 () Bool)

(assert (=> d!31749 (= (apply!100 (+!149 lt!56855 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16))) lt!56857) (apply!100 lt!56855 lt!56857))))

(declare-fun lt!57634 () Unit!3421)

(assert (=> d!31749 (= lt!57634 (choose!699 lt!56855 lt!56853 (zeroValue!2498 newMap!16) lt!56857))))

(declare-fun e!72536 () Bool)

(assert (=> d!31749 e!72536))

(declare-fun res!55109 () Bool)

(assert (=> d!31749 (=> (not res!55109) (not e!72536))))

(assert (=> d!31749 (= res!55109 (contains!837 lt!56855 lt!56857))))

(assert (=> d!31749 (= (addApplyDifferent!76 lt!56855 lt!56853 (zeroValue!2498 newMap!16) lt!56857) lt!57634)))

(declare-fun b!111571 () Bool)

(assert (=> b!111571 (= e!72536 (not (= lt!56857 lt!56853)))))

(assert (= (and d!31749 res!55109) b!111571))

(assert (=> d!31749 m!125029))

(assert (=> d!31749 m!125031))

(assert (=> d!31749 m!125019))

(declare-fun m!127421 () Bool)

(assert (=> d!31749 m!127421))

(declare-fun m!127423 () Bool)

(assert (=> d!31749 m!127423))

(assert (=> d!31749 m!125029))

(assert (=> b!110331 d!31749))

(declare-fun d!31751 () Bool)

(assert (=> d!31751 (= (apply!100 (+!149 lt!56855 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16))) lt!56857) (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56855 (tuple2!2429 lt!56853 (zeroValue!2498 newMap!16)))) lt!56857)))))

(declare-fun bs!4608 () Bool)

(assert (= bs!4608 d!31751))

(declare-fun m!127425 () Bool)

(assert (=> bs!4608 m!127425))

(assert (=> bs!4608 m!127425))

(declare-fun m!127427 () Bool)

(assert (=> bs!4608 m!127427))

(assert (=> b!110331 d!31751))

(assert (=> b!110331 d!31501))

(declare-fun d!31753 () Bool)

(assert (=> d!31753 (= (apply!100 lt!56866 lt!56852) (get!1359 (getValueByKey!157 (toList!813 lt!56866) lt!56852)))))

(declare-fun bs!4609 () Bool)

(assert (= bs!4609 d!31753))

(declare-fun m!127429 () Bool)

(assert (=> bs!4609 m!127429))

(assert (=> bs!4609 m!127429))

(declare-fun m!127431 () Bool)

(assert (=> bs!4609 m!127431))

(assert (=> b!110331 d!31753))

(declare-fun d!31755 () Bool)

(declare-fun e!72537 () Bool)

(assert (=> d!31755 e!72537))

(declare-fun res!55110 () Bool)

(assert (=> d!31755 (=> res!55110 e!72537)))

(declare-fun lt!57638 () Bool)

(assert (=> d!31755 (= res!55110 (not lt!57638))))

(declare-fun lt!57635 () Bool)

(assert (=> d!31755 (= lt!57638 lt!57635)))

(declare-fun lt!57637 () Unit!3421)

(declare-fun e!72538 () Unit!3421)

(assert (=> d!31755 (= lt!57637 e!72538)))

(declare-fun c!19902 () Bool)

(assert (=> d!31755 (= c!19902 lt!57635)))

(assert (=> d!31755 (= lt!57635 (containsKey!161 (toList!813 lt!56897) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> d!31755 (= (contains!837 lt!56897 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) lt!57638)))

(declare-fun b!111572 () Bool)

(declare-fun lt!57636 () Unit!3421)

(assert (=> b!111572 (= e!72538 lt!57636)))

(assert (=> b!111572 (= lt!57636 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56897) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(assert (=> b!111572 (isDefined!111 (getValueByKey!157 (toList!813 lt!56897) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!111573 () Bool)

(declare-fun Unit!3486 () Unit!3421)

(assert (=> b!111573 (= e!72538 Unit!3486)))

(declare-fun b!111574 () Bool)

(assert (=> b!111574 (= e!72537 (isDefined!111 (getValueByKey!157 (toList!813 lt!56897) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (= (and d!31755 c!19902) b!111572))

(assert (= (and d!31755 (not c!19902)) b!111573))

(assert (= (and d!31755 (not res!55110)) b!111574))

(declare-fun m!127433 () Bool)

(assert (=> d!31755 m!127433))

(declare-fun m!127435 () Bool)

(assert (=> b!111572 m!127435))

(assert (=> b!111572 m!125161))

(assert (=> b!111572 m!125161))

(declare-fun m!127437 () Bool)

(assert (=> b!111572 m!127437))

(assert (=> b!111574 m!125161))

(assert (=> b!111574 m!125161))

(assert (=> b!111574 m!127437))

(assert (=> d!30983 d!31755))

(declare-fun e!72540 () Option!163)

(declare-fun b!111577 () Bool)

(assert (=> b!111577 (= e!72540 (getValueByKey!157 (t!5802 lt!56900) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun d!31757 () Bool)

(declare-fun c!19903 () Bool)

(assert (=> d!31757 (= c!19903 (and ((_ is Cons!1649) lt!56900) (= (_1!1224 (h!2248 lt!56900)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun e!72539 () Option!163)

(assert (=> d!31757 (= (getValueByKey!157 lt!56900 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) e!72539)))

(declare-fun b!111578 () Bool)

(assert (=> b!111578 (= e!72540 None!161)))

(declare-fun b!111576 () Bool)

(assert (=> b!111576 (= e!72539 e!72540)))

(declare-fun c!19904 () Bool)

(assert (=> b!111576 (= c!19904 (and ((_ is Cons!1649) lt!56900) (not (= (_1!1224 (h!2248 lt!56900)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun b!111575 () Bool)

(assert (=> b!111575 (= e!72539 (Some!162 (_2!1224 (h!2248 lt!56900))))))

(assert (= (and d!31757 c!19903) b!111575))

(assert (= (and d!31757 (not c!19903)) b!111576))

(assert (= (and b!111576 c!19904) b!111577))

(assert (= (and b!111576 (not c!19904)) b!111578))

(declare-fun m!127439 () Bool)

(assert (=> b!111577 m!127439))

(assert (=> d!30983 d!31757))

(declare-fun d!31759 () Bool)

(assert (=> d!31759 (= (getValueByKey!157 lt!56900 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun lt!57639 () Unit!3421)

(assert (=> d!31759 (= lt!57639 (choose!693 lt!56900 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun e!72541 () Bool)

(assert (=> d!31759 e!72541))

(declare-fun res!55111 () Bool)

(assert (=> d!31759 (=> (not res!55111) (not e!72541))))

(assert (=> d!31759 (= res!55111 (isStrictlySorted!306 lt!56900))))

(assert (=> d!31759 (= (lemmaContainsTupThenGetReturnValue!75 lt!56900 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) lt!57639)))

(declare-fun b!111579 () Bool)

(declare-fun res!55112 () Bool)

(assert (=> b!111579 (=> (not res!55112) (not e!72541))))

(assert (=> b!111579 (= res!55112 (containsKey!161 lt!56900 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!111580 () Bool)

(assert (=> b!111580 (= e!72541 (contains!839 lt!56900 (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (= (and d!31759 res!55111) b!111579))

(assert (= (and b!111579 res!55112) b!111580))

(assert (=> d!31759 m!125155))

(declare-fun m!127441 () Bool)

(assert (=> d!31759 m!127441))

(declare-fun m!127443 () Bool)

(assert (=> d!31759 m!127443))

(declare-fun m!127445 () Bool)

(assert (=> b!111579 m!127445))

(declare-fun m!127447 () Bool)

(assert (=> b!111580 m!127447))

(assert (=> d!30983 d!31759))

(declare-fun b!111581 () Bool)

(declare-fun c!19906 () Bool)

(declare-fun c!19905 () Bool)

(declare-fun e!72544 () List!1653)

(assert (=> b!111581 (= e!72544 (ite c!19905 (t!5802 (toList!813 lt!56522)) (ite c!19906 (Cons!1649 (h!2248 (toList!813 lt!56522)) (t!5802 (toList!813 lt!56522))) Nil!1650)))))

(declare-fun b!111582 () Bool)

(declare-fun e!72546 () List!1653)

(declare-fun call!11923 () List!1653)

(assert (=> b!111582 (= e!72546 call!11923)))

(declare-fun c!19908 () Bool)

(declare-fun bm!11918 () Bool)

(declare-fun call!11921 () List!1653)

(assert (=> bm!11918 (= call!11921 ($colon$colon!82 e!72544 (ite c!19908 (h!2248 (toList!813 lt!56522)) (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))))

(declare-fun c!19907 () Bool)

(assert (=> bm!11918 (= c!19907 c!19908)))

(declare-fun b!111583 () Bool)

(declare-fun e!72542 () List!1653)

(assert (=> b!111583 (= e!72542 e!72546)))

(assert (=> b!111583 (= c!19905 (and ((_ is Cons!1649) (toList!813 lt!56522)) (= (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!111584 () Bool)

(assert (=> b!111584 (= e!72544 (insertStrictlySorted!77 (t!5802 (toList!813 lt!56522)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun bm!11919 () Bool)

(declare-fun call!11922 () List!1653)

(assert (=> bm!11919 (= call!11922 call!11923)))

(declare-fun d!31761 () Bool)

(declare-fun e!72545 () Bool)

(assert (=> d!31761 e!72545))

(declare-fun res!55114 () Bool)

(assert (=> d!31761 (=> (not res!55114) (not e!72545))))

(declare-fun lt!57640 () List!1653)

(assert (=> d!31761 (= res!55114 (isStrictlySorted!306 lt!57640))))

(assert (=> d!31761 (= lt!57640 e!72542)))

(assert (=> d!31761 (= c!19908 (and ((_ is Cons!1649) (toList!813 lt!56522)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (=> d!31761 (isStrictlySorted!306 (toList!813 lt!56522))))

(assert (=> d!31761 (= (insertStrictlySorted!77 (toList!813 lt!56522) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))) lt!57640)))

(declare-fun b!111585 () Bool)

(declare-fun res!55113 () Bool)

(assert (=> b!111585 (=> (not res!55113) (not e!72545))))

(assert (=> b!111585 (= res!55113 (containsKey!161 lt!57640 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527))))))

(declare-fun b!111586 () Bool)

(declare-fun e!72543 () List!1653)

(assert (=> b!111586 (= e!72543 call!11922)))

(declare-fun b!111587 () Bool)

(assert (=> b!111587 (= e!72543 call!11922)))

(declare-fun b!111588 () Bool)

(assert (=> b!111588 (= e!72545 (contains!839 lt!57640 (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(declare-fun b!111589 () Bool)

(assert (=> b!111589 (= e!72542 call!11921)))

(declare-fun bm!11920 () Bool)

(assert (=> bm!11920 (= call!11923 call!11921)))

(declare-fun b!111590 () Bool)

(assert (=> b!111590 (= c!19906 (and ((_ is Cons!1649) (toList!813 lt!56522)) (bvsgt (_1!1224 (h!2248 (toList!813 lt!56522))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))))

(assert (=> b!111590 (= e!72546 e!72543)))

(assert (= (and d!31761 c!19908) b!111589))

(assert (= (and d!31761 (not c!19908)) b!111583))

(assert (= (and b!111583 c!19905) b!111582))

(assert (= (and b!111583 (not c!19905)) b!111590))

(assert (= (and b!111590 c!19906) b!111586))

(assert (= (and b!111590 (not c!19906)) b!111587))

(assert (= (or b!111586 b!111587) bm!11919))

(assert (= (or b!111582 bm!11919) bm!11920))

(assert (= (or b!111589 bm!11920) bm!11918))

(assert (= (and bm!11918 c!19907) b!111584))

(assert (= (and bm!11918 (not c!19907)) b!111581))

(assert (= (and d!31761 res!55114) b!111585))

(assert (= (and b!111585 res!55113) b!111588))

(declare-fun m!127449 () Bool)

(assert (=> d!31761 m!127449))

(assert (=> d!31761 m!124995))

(declare-fun m!127451 () Bool)

(assert (=> bm!11918 m!127451))

(declare-fun m!127453 () Bool)

(assert (=> b!111588 m!127453))

(declare-fun m!127455 () Bool)

(assert (=> b!111584 m!127455))

(declare-fun m!127457 () Bool)

(assert (=> b!111585 m!127457))

(assert (=> d!30983 d!31761))

(declare-fun d!31763 () Bool)

(assert (=> d!31763 (= (get!1357 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2928 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110205 d!31763))

(declare-fun d!31765 () Bool)

(declare-fun lt!57641 () Bool)

(assert (=> d!31765 (= lt!57641 (select (content!112 (toList!813 lt!56922)) (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun e!72548 () Bool)

(assert (=> d!31765 (= lt!57641 e!72548)))

(declare-fun res!55116 () Bool)

(assert (=> d!31765 (=> (not res!55116) (not e!72548))))

(assert (=> d!31765 (= res!55116 ((_ is Cons!1649) (toList!813 lt!56922)))))

(assert (=> d!31765 (= (contains!839 (toList!813 lt!56922) (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57641)))

(declare-fun b!111591 () Bool)

(declare-fun e!72547 () Bool)

(assert (=> b!111591 (= e!72548 e!72547)))

(declare-fun res!55115 () Bool)

(assert (=> b!111591 (=> res!55115 e!72547)))

(assert (=> b!111591 (= res!55115 (= (h!2248 (toList!813 lt!56922)) (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111592 () Bool)

(assert (=> b!111592 (= e!72547 (contains!839 (t!5802 (toList!813 lt!56922)) (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (= (and d!31765 res!55116) b!111591))

(assert (= (and b!111591 (not res!55115)) b!111592))

(declare-fun m!127459 () Bool)

(assert (=> d!31765 m!127459))

(declare-fun m!127461 () Bool)

(assert (=> d!31765 m!127461))

(declare-fun m!127463 () Bool)

(assert (=> b!111592 m!127463))

(assert (=> b!110411 d!31765))

(assert (=> b!110265 d!31233))

(assert (=> b!110265 d!31235))

(declare-fun e!72551 () List!1653)

(declare-fun c!19909 () Bool)

(declare-fun b!111593 () Bool)

(declare-fun c!19910 () Bool)

(assert (=> b!111593 (= e!72551 (ite c!19909 (t!5802 (t!5802 (toList!813 (+!149 lt!56522 lt!56528)))) (ite c!19910 (Cons!1649 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56528)))) (t!5802 (t!5802 (toList!813 (+!149 lt!56522 lt!56528))))) Nil!1650)))))

(declare-fun b!111594 () Bool)

(declare-fun e!72553 () List!1653)

(declare-fun call!11926 () List!1653)

(assert (=> b!111594 (= e!72553 call!11926)))

(declare-fun c!19912 () Bool)

(declare-fun bm!11921 () Bool)

(declare-fun call!11924 () List!1653)

(assert (=> bm!11921 (= call!11924 ($colon$colon!82 e!72551 (ite c!19912 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56528)))) (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517)))))))

(declare-fun c!19911 () Bool)

(assert (=> bm!11921 (= c!19911 c!19912)))

(declare-fun b!111595 () Bool)

(declare-fun e!72549 () List!1653)

(assert (=> b!111595 (= e!72549 e!72553)))

(assert (=> b!111595 (= c!19909 (and ((_ is Cons!1649) (t!5802 (toList!813 (+!149 lt!56522 lt!56528)))) (= (_1!1224 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56528))))) (_1!1224 lt!56517))))))

(declare-fun b!111596 () Bool)

(assert (=> b!111596 (= e!72551 (insertStrictlySorted!77 (t!5802 (t!5802 (toList!813 (+!149 lt!56522 lt!56528)))) (_1!1224 lt!56517) (_2!1224 lt!56517)))))

(declare-fun bm!11922 () Bool)

(declare-fun call!11925 () List!1653)

(assert (=> bm!11922 (= call!11925 call!11926)))

(declare-fun d!31767 () Bool)

(declare-fun e!72552 () Bool)

(assert (=> d!31767 e!72552))

(declare-fun res!55118 () Bool)

(assert (=> d!31767 (=> (not res!55118) (not e!72552))))

(declare-fun lt!57642 () List!1653)

(assert (=> d!31767 (= res!55118 (isStrictlySorted!306 lt!57642))))

(assert (=> d!31767 (= lt!57642 e!72549)))

(assert (=> d!31767 (= c!19912 (and ((_ is Cons!1649) (t!5802 (toList!813 (+!149 lt!56522 lt!56528)))) (bvslt (_1!1224 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56528))))) (_1!1224 lt!56517))))))

(assert (=> d!31767 (isStrictlySorted!306 (t!5802 (toList!813 (+!149 lt!56522 lt!56528))))))

(assert (=> d!31767 (= (insertStrictlySorted!77 (t!5802 (toList!813 (+!149 lt!56522 lt!56528))) (_1!1224 lt!56517) (_2!1224 lt!56517)) lt!57642)))

(declare-fun b!111597 () Bool)

(declare-fun res!55117 () Bool)

(assert (=> b!111597 (=> (not res!55117) (not e!72552))))

(assert (=> b!111597 (= res!55117 (containsKey!161 lt!57642 (_1!1224 lt!56517)))))

(declare-fun b!111598 () Bool)

(declare-fun e!72550 () List!1653)

(assert (=> b!111598 (= e!72550 call!11925)))

(declare-fun b!111599 () Bool)

(assert (=> b!111599 (= e!72550 call!11925)))

(declare-fun b!111600 () Bool)

(assert (=> b!111600 (= e!72552 (contains!839 lt!57642 (tuple2!2429 (_1!1224 lt!56517) (_2!1224 lt!56517))))))

(declare-fun b!111601 () Bool)

(assert (=> b!111601 (= e!72549 call!11924)))

(declare-fun bm!11923 () Bool)

(assert (=> bm!11923 (= call!11926 call!11924)))

(declare-fun b!111602 () Bool)

(assert (=> b!111602 (= c!19910 (and ((_ is Cons!1649) (t!5802 (toList!813 (+!149 lt!56522 lt!56528)))) (bvsgt (_1!1224 (h!2248 (t!5802 (toList!813 (+!149 lt!56522 lt!56528))))) (_1!1224 lt!56517))))))

(assert (=> b!111602 (= e!72553 e!72550)))

(assert (= (and d!31767 c!19912) b!111601))

(assert (= (and d!31767 (not c!19912)) b!111595))

(assert (= (and b!111595 c!19909) b!111594))

(assert (= (and b!111595 (not c!19909)) b!111602))

(assert (= (and b!111602 c!19910) b!111598))

(assert (= (and b!111602 (not c!19910)) b!111599))

(assert (= (or b!111598 b!111599) bm!11922))

(assert (= (or b!111594 bm!11922) bm!11923))

(assert (= (or b!111601 bm!11923) bm!11921))

(assert (= (and bm!11921 c!19911) b!111596))

(assert (= (and bm!11921 (not c!19911)) b!111593))

(assert (= (and d!31767 res!55118) b!111597))

(assert (= (and b!111597 res!55117) b!111600))

(declare-fun m!127465 () Bool)

(assert (=> d!31767 m!127465))

(assert (=> d!31767 m!126283))

(declare-fun m!127467 () Bool)

(assert (=> bm!11921 m!127467))

(declare-fun m!127469 () Bool)

(assert (=> b!111600 m!127469))

(declare-fun m!127471 () Bool)

(assert (=> b!111596 m!127471))

(declare-fun m!127473 () Bool)

(assert (=> b!111597 m!127473))

(assert (=> b!110391 d!31767))

(declare-fun d!31769 () Bool)

(declare-fun e!72554 () Bool)

(assert (=> d!31769 e!72554))

(declare-fun res!55119 () Bool)

(assert (=> d!31769 (=> res!55119 e!72554)))

(declare-fun lt!57646 () Bool)

(assert (=> d!31769 (= res!55119 (not lt!57646))))

(declare-fun lt!57643 () Bool)

(assert (=> d!31769 (= lt!57646 lt!57643)))

(declare-fun lt!57645 () Unit!3421)

(declare-fun e!72555 () Unit!3421)

(assert (=> d!31769 (= lt!57645 e!72555)))

(declare-fun c!19913 () Bool)

(assert (=> d!31769 (= c!19913 lt!57643)))

(assert (=> d!31769 (= lt!57643 (containsKey!161 (toList!813 lt!56961) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31769 (= (contains!837 lt!56961 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57646)))

(declare-fun b!111603 () Bool)

(declare-fun lt!57644 () Unit!3421)

(assert (=> b!111603 (= e!72555 lt!57644)))

(assert (=> b!111603 (= lt!57644 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56961) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> b!111603 (isDefined!111 (getValueByKey!157 (toList!813 lt!56961) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111604 () Bool)

(declare-fun Unit!3487 () Unit!3421)

(assert (=> b!111604 (= e!72555 Unit!3487)))

(declare-fun b!111605 () Bool)

(assert (=> b!111605 (= e!72554 (isDefined!111 (getValueByKey!157 (toList!813 lt!56961) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31769 c!19913) b!111603))

(assert (= (and d!31769 (not c!19913)) b!111604))

(assert (= (and d!31769 (not res!55119)) b!111605))

(declare-fun m!127475 () Bool)

(assert (=> d!31769 m!127475))

(declare-fun m!127477 () Bool)

(assert (=> b!111603 m!127477))

(assert (=> b!111603 m!125379))

(assert (=> b!111603 m!125379))

(declare-fun m!127479 () Bool)

(assert (=> b!111603 m!127479))

(assert (=> b!111605 m!125379))

(assert (=> b!111605 m!125379))

(assert (=> b!111605 m!127479))

(assert (=> d!31039 d!31769))

(declare-fun b!111608 () Bool)

(declare-fun e!72557 () Option!163)

(assert (=> b!111608 (= e!72557 (getValueByKey!157 (t!5802 lt!56964) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun c!19914 () Bool)

(declare-fun d!31771 () Bool)

(assert (=> d!31771 (= c!19914 (and ((_ is Cons!1649) lt!56964) (= (_1!1224 (h!2248 lt!56964)) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72556 () Option!163)

(assert (=> d!31771 (= (getValueByKey!157 lt!56964 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72556)))

(declare-fun b!111609 () Bool)

(assert (=> b!111609 (= e!72557 None!161)))

(declare-fun b!111607 () Bool)

(assert (=> b!111607 (= e!72556 e!72557)))

(declare-fun c!19915 () Bool)

(assert (=> b!111607 (= c!19915 (and ((_ is Cons!1649) lt!56964) (not (= (_1!1224 (h!2248 lt!56964)) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111606 () Bool)

(assert (=> b!111606 (= e!72556 (Some!162 (_2!1224 (h!2248 lt!56964))))))

(assert (= (and d!31771 c!19914) b!111606))

(assert (= (and d!31771 (not c!19914)) b!111607))

(assert (= (and b!111607 c!19915) b!111608))

(assert (= (and b!111607 (not c!19915)) b!111609))

(declare-fun m!127481 () Bool)

(assert (=> b!111608 m!127481))

(assert (=> d!31039 d!31771))

(declare-fun d!31773 () Bool)

(assert (=> d!31773 (= (getValueByKey!157 lt!56964 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!57647 () Unit!3421)

(assert (=> d!31773 (= lt!57647 (choose!693 lt!56964 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun e!72558 () Bool)

(assert (=> d!31773 e!72558))

(declare-fun res!55120 () Bool)

(assert (=> d!31773 (=> (not res!55120) (not e!72558))))

(assert (=> d!31773 (= res!55120 (isStrictlySorted!306 lt!56964))))

(assert (=> d!31773 (= (lemmaContainsTupThenGetReturnValue!75 lt!56964 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57647)))

(declare-fun b!111610 () Bool)

(declare-fun res!55121 () Bool)

(assert (=> b!111610 (=> (not res!55121) (not e!72558))))

(assert (=> b!111610 (= res!55121 (containsKey!161 lt!56964 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111611 () Bool)

(assert (=> b!111611 (= e!72558 (contains!839 lt!56964 (tuple2!2429 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31773 res!55120) b!111610))

(assert (= (and b!111610 res!55121) b!111611))

(assert (=> d!31773 m!125373))

(declare-fun m!127483 () Bool)

(assert (=> d!31773 m!127483))

(declare-fun m!127485 () Bool)

(assert (=> d!31773 m!127485))

(declare-fun m!127487 () Bool)

(assert (=> b!111610 m!127487))

(declare-fun m!127489 () Bool)

(assert (=> b!111611 m!127489))

(assert (=> d!31039 d!31773))

(declare-fun c!19916 () Bool)

(declare-fun e!72561 () List!1653)

(declare-fun b!111612 () Bool)

(declare-fun c!19917 () Bool)

(assert (=> b!111612 (= e!72561 (ite c!19916 (t!5802 (toList!813 lt!56758)) (ite c!19917 (Cons!1649 (h!2248 (toList!813 lt!56758)) (t!5802 (toList!813 lt!56758))) Nil!1650)))))

(declare-fun b!111613 () Bool)

(declare-fun e!72563 () List!1653)

(declare-fun call!11929 () List!1653)

(assert (=> b!111613 (= e!72563 call!11929)))

(declare-fun bm!11924 () Bool)

(declare-fun c!19919 () Bool)

(declare-fun call!11927 () List!1653)

(assert (=> bm!11924 (= call!11927 ($colon$colon!82 e!72561 (ite c!19919 (h!2248 (toList!813 lt!56758)) (tuple2!2429 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun c!19918 () Bool)

(assert (=> bm!11924 (= c!19918 c!19919)))

(declare-fun b!111614 () Bool)

(declare-fun e!72559 () List!1653)

(assert (=> b!111614 (= e!72559 e!72563)))

(assert (=> b!111614 (= c!19916 (and ((_ is Cons!1649) (toList!813 lt!56758)) (= (_1!1224 (h!2248 (toList!813 lt!56758))) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111615 () Bool)

(assert (=> b!111615 (= e!72561 (insertStrictlySorted!77 (t!5802 (toList!813 lt!56758)) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun bm!11925 () Bool)

(declare-fun call!11928 () List!1653)

(assert (=> bm!11925 (= call!11928 call!11929)))

(declare-fun d!31775 () Bool)

(declare-fun e!72562 () Bool)

(assert (=> d!31775 e!72562))

(declare-fun res!55123 () Bool)

(assert (=> d!31775 (=> (not res!55123) (not e!72562))))

(declare-fun lt!57648 () List!1653)

(assert (=> d!31775 (= res!55123 (isStrictlySorted!306 lt!57648))))

(assert (=> d!31775 (= lt!57648 e!72559)))

(assert (=> d!31775 (= c!19919 (and ((_ is Cons!1649) (toList!813 lt!56758)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56758))) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31775 (isStrictlySorted!306 (toList!813 lt!56758))))

(assert (=> d!31775 (= (insertStrictlySorted!77 (toList!813 lt!56758) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57648)))

(declare-fun b!111616 () Bool)

(declare-fun res!55122 () Bool)

(assert (=> b!111616 (=> (not res!55122) (not e!72562))))

(assert (=> b!111616 (= res!55122 (containsKey!161 lt!57648 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111617 () Bool)

(declare-fun e!72560 () List!1653)

(assert (=> b!111617 (= e!72560 call!11928)))

(declare-fun b!111618 () Bool)

(assert (=> b!111618 (= e!72560 call!11928)))

(declare-fun b!111619 () Bool)

(assert (=> b!111619 (= e!72562 (contains!839 lt!57648 (tuple2!2429 (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111620 () Bool)

(assert (=> b!111620 (= e!72559 call!11927)))

(declare-fun bm!11926 () Bool)

(assert (=> bm!11926 (= call!11929 call!11927)))

(declare-fun b!111621 () Bool)

(assert (=> b!111621 (= c!19917 (and ((_ is Cons!1649) (toList!813 lt!56758)) (bvsgt (_1!1224 (h!2248 (toList!813 lt!56758))) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> b!111621 (= e!72563 e!72560)))

(assert (= (and d!31775 c!19919) b!111620))

(assert (= (and d!31775 (not c!19919)) b!111614))

(assert (= (and b!111614 c!19916) b!111613))

(assert (= (and b!111614 (not c!19916)) b!111621))

(assert (= (and b!111621 c!19917) b!111617))

(assert (= (and b!111621 (not c!19917)) b!111618))

(assert (= (or b!111617 b!111618) bm!11925))

(assert (= (or b!111613 bm!11925) bm!11926))

(assert (= (or b!111620 bm!11926) bm!11924))

(assert (= (and bm!11924 c!19918) b!111615))

(assert (= (and bm!11924 (not c!19918)) b!111612))

(assert (= (and d!31775 res!55123) b!111616))

(assert (= (and b!111616 res!55122) b!111619))

(declare-fun m!127491 () Bool)

(assert (=> d!31775 m!127491))

(declare-fun m!127493 () Bool)

(assert (=> d!31775 m!127493))

(declare-fun m!127495 () Bool)

(assert (=> bm!11924 m!127495))

(declare-fun m!127497 () Bool)

(assert (=> b!111619 m!127497))

(declare-fun m!127499 () Bool)

(assert (=> b!111615 m!127499))

(declare-fun m!127501 () Bool)

(assert (=> b!111616 m!127501))

(assert (=> d!31039 d!31775))

(declare-fun d!31777 () Bool)

(declare-fun e!72564 () Bool)

(assert (=> d!31777 e!72564))

(declare-fun res!55124 () Bool)

(assert (=> d!31777 (=> res!55124 e!72564)))

(declare-fun lt!57652 () Bool)

(assert (=> d!31777 (= res!55124 (not lt!57652))))

(declare-fun lt!57649 () Bool)

(assert (=> d!31777 (= lt!57652 lt!57649)))

(declare-fun lt!57651 () Unit!3421)

(declare-fun e!72565 () Unit!3421)

(assert (=> d!31777 (= lt!57651 e!72565)))

(declare-fun c!19920 () Bool)

(assert (=> d!31777 (= c!19920 lt!57649)))

(assert (=> d!31777 (= lt!57649 (containsKey!161 (toList!813 lt!56922) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31777 (= (contains!837 lt!56922 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) lt!57652)))

(declare-fun b!111622 () Bool)

(declare-fun lt!57650 () Unit!3421)

(assert (=> b!111622 (= e!72565 lt!57650)))

(assert (=> b!111622 (= lt!57650 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56922) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> b!111622 (isDefined!111 (getValueByKey!157 (toList!813 lt!56922) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111623 () Bool)

(declare-fun Unit!3488 () Unit!3421)

(assert (=> b!111623 (= e!72565 Unit!3488)))

(declare-fun b!111624 () Bool)

(assert (=> b!111624 (= e!72564 (isDefined!111 (getValueByKey!157 (toList!813 lt!56922) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31777 c!19920) b!111622))

(assert (= (and d!31777 (not c!19920)) b!111623))

(assert (= (and d!31777 (not res!55124)) b!111624))

(declare-fun m!127503 () Bool)

(assert (=> d!31777 m!127503))

(declare-fun m!127505 () Bool)

(assert (=> b!111622 m!127505))

(assert (=> b!111622 m!125253))

(assert (=> b!111622 m!125253))

(declare-fun m!127507 () Bool)

(assert (=> b!111622 m!127507))

(assert (=> b!111624 m!125253))

(assert (=> b!111624 m!125253))

(assert (=> b!111624 m!127507))

(assert (=> d!31001 d!31777))

(declare-fun e!72567 () Option!163)

(declare-fun b!111627 () Bool)

(assert (=> b!111627 (= e!72567 (getValueByKey!157 (t!5802 lt!56925) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun c!19921 () Bool)

(declare-fun d!31779 () Bool)

(assert (=> d!31779 (= c!19921 (and ((_ is Cons!1649) lt!56925) (= (_1!1224 (h!2248 lt!56925)) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun e!72566 () Option!163)

(assert (=> d!31779 (= (getValueByKey!157 lt!56925 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) e!72566)))

(declare-fun b!111628 () Bool)

(assert (=> b!111628 (= e!72567 None!161)))

(declare-fun b!111626 () Bool)

(assert (=> b!111626 (= e!72566 e!72567)))

(declare-fun c!19922 () Bool)

(assert (=> b!111626 (= c!19922 (and ((_ is Cons!1649) lt!56925) (not (= (_1!1224 (h!2248 lt!56925)) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))))

(declare-fun b!111625 () Bool)

(assert (=> b!111625 (= e!72566 (Some!162 (_2!1224 (h!2248 lt!56925))))))

(assert (= (and d!31779 c!19921) b!111625))

(assert (= (and d!31779 (not c!19921)) b!111626))

(assert (= (and b!111626 c!19922) b!111627))

(assert (= (and b!111626 (not c!19922)) b!111628))

(declare-fun m!127509 () Bool)

(assert (=> b!111627 m!127509))

(assert (=> d!31001 d!31779))

(declare-fun d!31781 () Bool)

(assert (=> d!31781 (= (getValueByKey!157 lt!56925 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) (Some!162 (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun lt!57653 () Unit!3421)

(assert (=> d!31781 (= lt!57653 (choose!693 lt!56925 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72568 () Bool)

(assert (=> d!31781 e!72568))

(declare-fun res!55125 () Bool)

(assert (=> d!31781 (=> (not res!55125) (not e!72568))))

(assert (=> d!31781 (= res!55125 (isStrictlySorted!306 lt!56925))))

(assert (=> d!31781 (= (lemmaContainsTupThenGetReturnValue!75 lt!56925 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) lt!57653)))

(declare-fun b!111629 () Bool)

(declare-fun res!55126 () Bool)

(assert (=> b!111629 (=> (not res!55126) (not e!72568))))

(assert (=> b!111629 (= res!55126 (containsKey!161 lt!56925 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111630 () Bool)

(assert (=> b!111630 (= e!72568 (contains!839 lt!56925 (tuple2!2429 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31781 res!55125) b!111629))

(assert (= (and b!111629 res!55126) b!111630))

(assert (=> d!31781 m!125247))

(declare-fun m!127511 () Bool)

(assert (=> d!31781 m!127511))

(declare-fun m!127513 () Bool)

(assert (=> d!31781 m!127513))

(declare-fun m!127515 () Bool)

(assert (=> b!111629 m!127515))

(declare-fun m!127517 () Bool)

(assert (=> b!111630 m!127517))

(assert (=> d!31001 d!31781))

(declare-fun e!72571 () List!1653)

(declare-fun b!111631 () Bool)

(declare-fun c!19924 () Bool)

(declare-fun c!19923 () Bool)

(assert (=> b!111631 (= e!72571 (ite c!19923 (t!5802 (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752)))) (ite c!19924 (Cons!1649 (h!2248 (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752)))) (t!5802 (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752))))) Nil!1650)))))

(declare-fun b!111632 () Bool)

(declare-fun e!72573 () List!1653)

(declare-fun call!11932 () List!1653)

(assert (=> b!111632 (= e!72573 call!11932)))

(declare-fun call!11930 () List!1653)

(declare-fun bm!11927 () Bool)

(declare-fun c!19926 () Bool)

(assert (=> bm!11927 (= call!11930 ($colon$colon!82 e!72571 (ite c!19926 (h!2248 (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752)))) (tuple2!2429 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))))

(declare-fun c!19925 () Bool)

(assert (=> bm!11927 (= c!19925 c!19926)))

(declare-fun b!111633 () Bool)

(declare-fun e!72569 () List!1653)

(assert (=> b!111633 (= e!72569 e!72573)))

(assert (=> b!111633 (= c!19923 (and ((_ is Cons!1649) (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752)))) (= (_1!1224 (h!2248 (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752))))) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111634 () Bool)

(assert (=> b!111634 (= e!72571 (insertStrictlySorted!77 (t!5802 (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752)))) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun bm!11928 () Bool)

(declare-fun call!11931 () List!1653)

(assert (=> bm!11928 (= call!11931 call!11932)))

(declare-fun d!31783 () Bool)

(declare-fun e!72572 () Bool)

(assert (=> d!31783 e!72572))

(declare-fun res!55128 () Bool)

(assert (=> d!31783 (=> (not res!55128) (not e!72572))))

(declare-fun lt!57654 () List!1653)

(assert (=> d!31783 (= res!55128 (isStrictlySorted!306 lt!57654))))

(assert (=> d!31783 (= lt!57654 e!72569)))

(assert (=> d!31783 (= c!19926 (and ((_ is Cons!1649) (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752)))) (bvslt (_1!1224 (h!2248 (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752))))) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(assert (=> d!31783 (isStrictlySorted!306 (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752))))))

(assert (=> d!31783 (= (insertStrictlySorted!77 (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752))) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) lt!57654)))

(declare-fun b!111635 () Bool)

(declare-fun res!55127 () Bool)

(assert (=> b!111635 (=> (not res!55127) (not e!72572))))

(assert (=> b!111635 (= res!55127 (containsKey!161 lt!57654 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111636 () Bool)

(declare-fun e!72570 () List!1653)

(assert (=> b!111636 (= e!72570 call!11931)))

(declare-fun b!111637 () Bool)

(assert (=> b!111637 (= e!72570 call!11931)))

(declare-fun b!111638 () Bool)

(assert (=> b!111638 (= e!72572 (contains!839 lt!57654 (tuple2!2429 (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (_2!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111639 () Bool)

(assert (=> b!111639 (= e!72569 call!11930)))

(declare-fun bm!11929 () Bool)

(assert (=> bm!11929 (= call!11932 call!11930)))

(declare-fun b!111640 () Bool)

(assert (=> b!111640 (= c!19924 (and ((_ is Cons!1649) (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752)))) (bvsgt (_1!1224 (h!2248 (toList!813 (ite c!19512 call!11750 (ite c!19516 call!11751 call!11752))))) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(assert (=> b!111640 (= e!72573 e!72570)))

(assert (= (and d!31783 c!19926) b!111639))

(assert (= (and d!31783 (not c!19926)) b!111633))

(assert (= (and b!111633 c!19923) b!111632))

(assert (= (and b!111633 (not c!19923)) b!111640))

(assert (= (and b!111640 c!19924) b!111636))

(assert (= (and b!111640 (not c!19924)) b!111637))

(assert (= (or b!111636 b!111637) bm!11928))

(assert (= (or b!111632 bm!11928) bm!11929))

(assert (= (or b!111639 bm!11929) bm!11927))

(assert (= (and bm!11927 c!19925) b!111634))

(assert (= (and bm!11927 (not c!19925)) b!111631))

(assert (= (and d!31783 res!55128) b!111635))

(assert (= (and b!111635 res!55127) b!111638))

(declare-fun m!127519 () Bool)

(assert (=> d!31783 m!127519))

(declare-fun m!127521 () Bool)

(assert (=> d!31783 m!127521))

(declare-fun m!127523 () Bool)

(assert (=> bm!11927 m!127523))

(declare-fun m!127525 () Bool)

(assert (=> b!111638 m!127525))

(declare-fun m!127527 () Bool)

(assert (=> b!111634 m!127527))

(declare-fun m!127529 () Bool)

(assert (=> b!111635 m!127529))

(assert (=> d!31001 d!31783))

(declare-fun d!31785 () Bool)

(assert (=> d!31785 (isDefined!111 (getValueByKey!157 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!57655 () Unit!3421)

(assert (=> d!31785 (= lt!57655 (choose!702 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!72574 () Bool)

(assert (=> d!31785 e!72574))

(declare-fun res!55129 () Bool)

(assert (=> d!31785 (=> (not res!55129) (not e!72574))))

(assert (=> d!31785 (= res!55129 (isStrictlySorted!306 (toList!813 call!11731)))))

(assert (=> d!31785 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) lt!57655)))

(declare-fun b!111641 () Bool)

(assert (=> b!111641 (= e!72574 (containsKey!161 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31785 res!55129) b!111641))

(assert (=> d!31785 m!124515))

(assert (=> d!31785 m!125609))

(assert (=> d!31785 m!125609))

(assert (=> d!31785 m!125611))

(assert (=> d!31785 m!124515))

(declare-fun m!127531 () Bool)

(assert (=> d!31785 m!127531))

(declare-fun m!127533 () Bool)

(assert (=> d!31785 m!127533))

(assert (=> b!111641 m!124515))

(assert (=> b!111641 m!125605))

(assert (=> b!110621 d!31785))

(assert (=> b!110621 d!31623))

(assert (=> b!110621 d!31625))

(declare-fun d!31787 () Bool)

(declare-fun e!72575 () Bool)

(assert (=> d!31787 e!72575))

(declare-fun res!55130 () Bool)

(assert (=> d!31787 (=> res!55130 e!72575)))

(declare-fun lt!57659 () Bool)

(assert (=> d!31787 (= res!55130 (not lt!57659))))

(declare-fun lt!57656 () Bool)

(assert (=> d!31787 (= lt!57659 lt!57656)))

(declare-fun lt!57658 () Unit!3421)

(declare-fun e!72576 () Unit!3421)

(assert (=> d!31787 (= lt!57658 e!72576)))

(declare-fun c!19927 () Bool)

(assert (=> d!31787 (= c!19927 lt!57656)))

(assert (=> d!31787 (= lt!57656 (containsKey!161 (toList!813 lt!56942) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31787 (= (contains!837 lt!56942 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57659)))

(declare-fun b!111642 () Bool)

(declare-fun lt!57657 () Unit!3421)

(assert (=> b!111642 (= e!72576 lt!57657)))

(assert (=> b!111642 (= lt!57657 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56942) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> b!111642 (isDefined!111 (getValueByKey!157 (toList!813 lt!56942) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111643 () Bool)

(declare-fun Unit!3489 () Unit!3421)

(assert (=> b!111643 (= e!72576 Unit!3489)))

(declare-fun b!111644 () Bool)

(assert (=> b!111644 (= e!72575 (isDefined!111 (getValueByKey!157 (toList!813 lt!56942) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31787 c!19927) b!111642))

(assert (= (and d!31787 (not c!19927)) b!111643))

(assert (= (and d!31787 (not res!55130)) b!111644))

(declare-fun m!127535 () Bool)

(assert (=> d!31787 m!127535))

(declare-fun m!127537 () Bool)

(assert (=> b!111642 m!127537))

(assert (=> b!111642 m!125319))

(assert (=> b!111642 m!125319))

(declare-fun m!127539 () Bool)

(assert (=> b!111642 m!127539))

(assert (=> b!111644 m!125319))

(assert (=> b!111644 m!125319))

(assert (=> b!111644 m!127539))

(assert (=> d!31023 d!31787))

(declare-fun e!72578 () Option!163)

(declare-fun b!111647 () Bool)

(assert (=> b!111647 (= e!72578 (getValueByKey!157 (t!5802 lt!56945) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!31789 () Bool)

(declare-fun c!19928 () Bool)

(assert (=> d!31789 (= c!19928 (and ((_ is Cons!1649) lt!56945) (= (_1!1224 (h!2248 lt!56945)) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72577 () Option!163)

(assert (=> d!31789 (= (getValueByKey!157 lt!56945 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72577)))

(declare-fun b!111648 () Bool)

(assert (=> b!111648 (= e!72578 None!161)))

(declare-fun b!111646 () Bool)

(assert (=> b!111646 (= e!72577 e!72578)))

(declare-fun c!19929 () Bool)

(assert (=> b!111646 (= c!19929 (and ((_ is Cons!1649) lt!56945) (not (= (_1!1224 (h!2248 lt!56945)) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111645 () Bool)

(assert (=> b!111645 (= e!72577 (Some!162 (_2!1224 (h!2248 lt!56945))))))

(assert (= (and d!31789 c!19928) b!111645))

(assert (= (and d!31789 (not c!19928)) b!111646))

(assert (= (and b!111646 c!19929) b!111647))

(assert (= (and b!111646 (not c!19929)) b!111648))

(declare-fun m!127541 () Bool)

(assert (=> b!111647 m!127541))

(assert (=> d!31023 d!31789))

(declare-fun d!31791 () Bool)

(assert (=> d!31791 (= (getValueByKey!157 lt!56945 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!57660 () Unit!3421)

(assert (=> d!31791 (= lt!57660 (choose!693 lt!56945 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun e!72579 () Bool)

(assert (=> d!31791 e!72579))

(declare-fun res!55131 () Bool)

(assert (=> d!31791 (=> (not res!55131) (not e!72579))))

(assert (=> d!31791 (= res!55131 (isStrictlySorted!306 lt!56945))))

(assert (=> d!31791 (= (lemmaContainsTupThenGetReturnValue!75 lt!56945 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57660)))

(declare-fun b!111649 () Bool)

(declare-fun res!55132 () Bool)

(assert (=> b!111649 (=> (not res!55132) (not e!72579))))

(assert (=> b!111649 (= res!55132 (containsKey!161 lt!56945 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111650 () Bool)

(assert (=> b!111650 (= e!72579 (contains!839 lt!56945 (tuple2!2429 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31791 res!55131) b!111649))

(assert (= (and b!111649 res!55132) b!111650))

(assert (=> d!31791 m!125313))

(declare-fun m!127543 () Bool)

(assert (=> d!31791 m!127543))

(declare-fun m!127545 () Bool)

(assert (=> d!31791 m!127545))

(declare-fun m!127547 () Bool)

(assert (=> b!111649 m!127547))

(declare-fun m!127549 () Bool)

(assert (=> b!111650 m!127549))

(assert (=> d!31023 d!31791))

(declare-fun c!19931 () Bool)

(declare-fun c!19930 () Bool)

(declare-fun e!72582 () List!1653)

(declare-fun b!111651 () Bool)

(assert (=> b!111651 (= e!72582 (ite c!19930 (t!5802 (toList!813 lt!56770)) (ite c!19931 (Cons!1649 (h!2248 (toList!813 lt!56770)) (t!5802 (toList!813 lt!56770))) Nil!1650)))))

(declare-fun b!111652 () Bool)

(declare-fun e!72584 () List!1653)

(declare-fun call!11935 () List!1653)

(assert (=> b!111652 (= e!72584 call!11935)))

(declare-fun call!11933 () List!1653)

(declare-fun bm!11930 () Bool)

(declare-fun c!19933 () Bool)

(assert (=> bm!11930 (= call!11933 ($colon$colon!82 e!72582 (ite c!19933 (h!2248 (toList!813 lt!56770)) (tuple2!2429 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun c!19932 () Bool)

(assert (=> bm!11930 (= c!19932 c!19933)))

(declare-fun b!111653 () Bool)

(declare-fun e!72580 () List!1653)

(assert (=> b!111653 (= e!72580 e!72584)))

(assert (=> b!111653 (= c!19930 (and ((_ is Cons!1649) (toList!813 lt!56770)) (= (_1!1224 (h!2248 (toList!813 lt!56770))) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111654 () Bool)

(assert (=> b!111654 (= e!72582 (insertStrictlySorted!77 (t!5802 (toList!813 lt!56770)) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun bm!11931 () Bool)

(declare-fun call!11934 () List!1653)

(assert (=> bm!11931 (= call!11934 call!11935)))

(declare-fun d!31793 () Bool)

(declare-fun e!72583 () Bool)

(assert (=> d!31793 e!72583))

(declare-fun res!55134 () Bool)

(assert (=> d!31793 (=> (not res!55134) (not e!72583))))

(declare-fun lt!57661 () List!1653)

(assert (=> d!31793 (= res!55134 (isStrictlySorted!306 lt!57661))))

(assert (=> d!31793 (= lt!57661 e!72580)))

(assert (=> d!31793 (= c!19933 (and ((_ is Cons!1649) (toList!813 lt!56770)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56770))) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31793 (isStrictlySorted!306 (toList!813 lt!56770))))

(assert (=> d!31793 (= (insertStrictlySorted!77 (toList!813 lt!56770) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57661)))

(declare-fun b!111655 () Bool)

(declare-fun res!55133 () Bool)

(assert (=> b!111655 (=> (not res!55133) (not e!72583))))

(assert (=> b!111655 (= res!55133 (containsKey!161 lt!57661 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111656 () Bool)

(declare-fun e!72581 () List!1653)

(assert (=> b!111656 (= e!72581 call!11934)))

(declare-fun b!111657 () Bool)

(assert (=> b!111657 (= e!72581 call!11934)))

(declare-fun b!111658 () Bool)

(assert (=> b!111658 (= e!72583 (contains!839 lt!57661 (tuple2!2429 (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111659 () Bool)

(assert (=> b!111659 (= e!72580 call!11933)))

(declare-fun bm!11932 () Bool)

(assert (=> bm!11932 (= call!11935 call!11933)))

(declare-fun b!111660 () Bool)

(assert (=> b!111660 (= c!19931 (and ((_ is Cons!1649) (toList!813 lt!56770)) (bvsgt (_1!1224 (h!2248 (toList!813 lt!56770))) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> b!111660 (= e!72584 e!72581)))

(assert (= (and d!31793 c!19933) b!111659))

(assert (= (and d!31793 (not c!19933)) b!111653))

(assert (= (and b!111653 c!19930) b!111652))

(assert (= (and b!111653 (not c!19930)) b!111660))

(assert (= (and b!111660 c!19931) b!111656))

(assert (= (and b!111660 (not c!19931)) b!111657))

(assert (= (or b!111656 b!111657) bm!11931))

(assert (= (or b!111652 bm!11931) bm!11932))

(assert (= (or b!111659 bm!11932) bm!11930))

(assert (= (and bm!11930 c!19932) b!111654))

(assert (= (and bm!11930 (not c!19932)) b!111651))

(assert (= (and d!31793 res!55134) b!111655))

(assert (= (and b!111655 res!55133) b!111658))

(declare-fun m!127551 () Bool)

(assert (=> d!31793 m!127551))

(declare-fun m!127553 () Bool)

(assert (=> d!31793 m!127553))

(declare-fun m!127555 () Bool)

(assert (=> bm!11930 m!127555))

(declare-fun m!127557 () Bool)

(assert (=> b!111658 m!127557))

(declare-fun m!127559 () Bool)

(assert (=> b!111654 m!127559))

(declare-fun m!127561 () Bool)

(assert (=> b!111655 m!127561))

(assert (=> d!31023 d!31793))

(assert (=> b!110478 d!31281))

(declare-fun d!31795 () Bool)

(declare-fun e!72585 () Bool)

(assert (=> d!31795 e!72585))

(declare-fun res!55135 () Bool)

(assert (=> d!31795 (=> res!55135 e!72585)))

(declare-fun lt!57665 () Bool)

(assert (=> d!31795 (= res!55135 (not lt!57665))))

(declare-fun lt!57662 () Bool)

(assert (=> d!31795 (= lt!57665 lt!57662)))

(declare-fun lt!57664 () Unit!3421)

(declare-fun e!72586 () Unit!3421)

(assert (=> d!31795 (= lt!57664 e!72586)))

(declare-fun c!19934 () Bool)

(assert (=> d!31795 (= c!19934 lt!57662)))

(assert (=> d!31795 (= lt!57662 (containsKey!161 (toList!813 lt!56879) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31795 (= (contains!837 lt!56879 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57665)))

(declare-fun b!111661 () Bool)

(declare-fun lt!57663 () Unit!3421)

(assert (=> b!111661 (= e!72586 lt!57663)))

(assert (=> b!111661 (= lt!57663 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56879) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!111661 (isDefined!111 (getValueByKey!157 (toList!813 lt!56879) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!111662 () Bool)

(declare-fun Unit!3490 () Unit!3421)

(assert (=> b!111662 (= e!72586 Unit!3490)))

(declare-fun b!111663 () Bool)

(assert (=> b!111663 (= e!72585 (isDefined!111 (getValueByKey!157 (toList!813 lt!56879) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!31795 c!19934) b!111661))

(assert (= (and d!31795 (not c!19934)) b!111662))

(assert (= (and d!31795 (not res!55135)) b!111663))

(declare-fun m!127563 () Bool)

(assert (=> d!31795 m!127563))

(declare-fun m!127565 () Bool)

(assert (=> b!111661 m!127565))

(assert (=> b!111661 m!125097))

(assert (=> b!111661 m!125097))

(declare-fun m!127567 () Bool)

(assert (=> b!111661 m!127567))

(assert (=> b!111663 m!125097))

(assert (=> b!111663 m!125097))

(assert (=> b!111663 m!127567))

(assert (=> d!30965 d!31795))

(declare-fun e!72588 () Option!163)

(declare-fun b!111666 () Bool)

(assert (=> b!111666 (= e!72588 (getValueByKey!157 (t!5802 lt!56882) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!31797 () Bool)

(declare-fun c!19935 () Bool)

(assert (=> d!31797 (= c!19935 (and ((_ is Cons!1649) lt!56882) (= (_1!1224 (h!2248 lt!56882)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!72587 () Option!163)

(assert (=> d!31797 (= (getValueByKey!157 lt!56882 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!72587)))

(declare-fun b!111667 () Bool)

(assert (=> b!111667 (= e!72588 None!161)))

(declare-fun b!111665 () Bool)

(assert (=> b!111665 (= e!72587 e!72588)))

(declare-fun c!19936 () Bool)

(assert (=> b!111665 (= c!19936 (and ((_ is Cons!1649) lt!56882) (not (= (_1!1224 (h!2248 lt!56882)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!111664 () Bool)

(assert (=> b!111664 (= e!72587 (Some!162 (_2!1224 (h!2248 lt!56882))))))

(assert (= (and d!31797 c!19935) b!111664))

(assert (= (and d!31797 (not c!19935)) b!111665))

(assert (= (and b!111665 c!19936) b!111666))

(assert (= (and b!111665 (not c!19936)) b!111667))

(declare-fun m!127569 () Bool)

(assert (=> b!111666 m!127569))

(assert (=> d!30965 d!31797))

(declare-fun d!31799 () Bool)

(assert (=> d!31799 (= (getValueByKey!157 lt!56882 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!162 (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!57666 () Unit!3421)

(assert (=> d!31799 (= lt!57666 (choose!693 lt!56882 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!72589 () Bool)

(assert (=> d!31799 e!72589))

(declare-fun res!55136 () Bool)

(assert (=> d!31799 (=> (not res!55136) (not e!72589))))

(assert (=> d!31799 (= res!55136 (isStrictlySorted!306 lt!56882))))

(assert (=> d!31799 (= (lemmaContainsTupThenGetReturnValue!75 lt!56882 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57666)))

(declare-fun b!111668 () Bool)

(declare-fun res!55137 () Bool)

(assert (=> b!111668 (=> (not res!55137) (not e!72589))))

(assert (=> b!111668 (= res!55137 (containsKey!161 lt!56882 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!111669 () Bool)

(assert (=> b!111669 (= e!72589 (contains!839 lt!56882 (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!31799 res!55136) b!111668))

(assert (= (and b!111668 res!55137) b!111669))

(assert (=> d!31799 m!125091))

(declare-fun m!127571 () Bool)

(assert (=> d!31799 m!127571))

(declare-fun m!127573 () Bool)

(assert (=> d!31799 m!127573))

(declare-fun m!127575 () Bool)

(assert (=> b!111668 m!127575))

(declare-fun m!127577 () Bool)

(assert (=> b!111669 m!127577))

(assert (=> d!30965 d!31799))

(declare-fun e!72592 () List!1653)

(declare-fun c!19937 () Bool)

(declare-fun c!19938 () Bool)

(declare-fun b!111670 () Bool)

(assert (=> b!111670 (= e!72592 (ite c!19937 (t!5802 (toList!813 call!11734)) (ite c!19938 (Cons!1649 (h!2248 (toList!813 call!11734)) (t!5802 (toList!813 call!11734))) Nil!1650)))))

(declare-fun b!111671 () Bool)

(declare-fun e!72594 () List!1653)

(declare-fun call!11938 () List!1653)

(assert (=> b!111671 (= e!72594 call!11938)))

(declare-fun call!11936 () List!1653)

(declare-fun bm!11933 () Bool)

(declare-fun c!19940 () Bool)

(assert (=> bm!11933 (= call!11936 ($colon$colon!82 e!72592 (ite c!19940 (h!2248 (toList!813 call!11734)) (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!19939 () Bool)

(assert (=> bm!11933 (= c!19939 c!19940)))

(declare-fun b!111672 () Bool)

(declare-fun e!72590 () List!1653)

(assert (=> b!111672 (= e!72590 e!72594)))

(assert (=> b!111672 (= c!19937 (and ((_ is Cons!1649) (toList!813 call!11734)) (= (_1!1224 (h!2248 (toList!813 call!11734))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!111673 () Bool)

(assert (=> b!111673 (= e!72592 (insertStrictlySorted!77 (t!5802 (toList!813 call!11734)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!11934 () Bool)

(declare-fun call!11937 () List!1653)

(assert (=> bm!11934 (= call!11937 call!11938)))

(declare-fun d!31801 () Bool)

(declare-fun e!72593 () Bool)

(assert (=> d!31801 e!72593))

(declare-fun res!55139 () Bool)

(assert (=> d!31801 (=> (not res!55139) (not e!72593))))

(declare-fun lt!57667 () List!1653)

(assert (=> d!31801 (= res!55139 (isStrictlySorted!306 lt!57667))))

(assert (=> d!31801 (= lt!57667 e!72590)))

(assert (=> d!31801 (= c!19940 (and ((_ is Cons!1649) (toList!813 call!11734)) (bvslt (_1!1224 (h!2248 (toList!813 call!11734))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!31801 (isStrictlySorted!306 (toList!813 call!11734))))

(assert (=> d!31801 (= (insertStrictlySorted!77 (toList!813 call!11734) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57667)))

(declare-fun b!111674 () Bool)

(declare-fun res!55138 () Bool)

(assert (=> b!111674 (=> (not res!55138) (not e!72593))))

(assert (=> b!111674 (= res!55138 (containsKey!161 lt!57667 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!111675 () Bool)

(declare-fun e!72591 () List!1653)

(assert (=> b!111675 (= e!72591 call!11937)))

(declare-fun b!111676 () Bool)

(assert (=> b!111676 (= e!72591 call!11937)))

(declare-fun b!111677 () Bool)

(assert (=> b!111677 (= e!72593 (contains!839 lt!57667 (tuple2!2429 (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!111678 () Bool)

(assert (=> b!111678 (= e!72590 call!11936)))

(declare-fun bm!11935 () Bool)

(assert (=> bm!11935 (= call!11938 call!11936)))

(declare-fun b!111679 () Bool)

(assert (=> b!111679 (= c!19938 (and ((_ is Cons!1649) (toList!813 call!11734)) (bvsgt (_1!1224 (h!2248 (toList!813 call!11734))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!111679 (= e!72594 e!72591)))

(assert (= (and d!31801 c!19940) b!111678))

(assert (= (and d!31801 (not c!19940)) b!111672))

(assert (= (and b!111672 c!19937) b!111671))

(assert (= (and b!111672 (not c!19937)) b!111679))

(assert (= (and b!111679 c!19938) b!111675))

(assert (= (and b!111679 (not c!19938)) b!111676))

(assert (= (or b!111675 b!111676) bm!11934))

(assert (= (or b!111671 bm!11934) bm!11935))

(assert (= (or b!111678 bm!11935) bm!11933))

(assert (= (and bm!11933 c!19939) b!111673))

(assert (= (and bm!11933 (not c!19939)) b!111670))

(assert (= (and d!31801 res!55139) b!111674))

(assert (= (and b!111674 res!55138) b!111677))

(declare-fun m!127579 () Bool)

(assert (=> d!31801 m!127579))

(declare-fun m!127581 () Bool)

(assert (=> d!31801 m!127581))

(declare-fun m!127583 () Bool)

(assert (=> bm!11933 m!127583))

(declare-fun m!127585 () Bool)

(assert (=> b!111677 m!127585))

(declare-fun m!127587 () Bool)

(assert (=> b!111673 m!127587))

(declare-fun m!127589 () Bool)

(assert (=> b!111674 m!127589))

(assert (=> d!30965 d!31801))

(declare-fun d!31803 () Bool)

(assert (=> d!31803 (= (apply!100 lt!57002 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1359 (getValueByKey!157 (toList!813 lt!57002) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4610 () Bool)

(assert (= bs!4610 d!31803))

(assert (=> bs!4610 m!126289))

(assert (=> bs!4610 m!126289))

(declare-fun m!127591 () Bool)

(assert (=> bs!4610 m!127591))

(assert (=> b!110536 d!31803))

(assert (=> b!110213 d!31281))

(assert (=> d!31047 d!31029))

(assert (=> d!31047 d!31039))

(declare-fun d!31805 () Bool)

(assert (=> d!31805 (contains!837 (+!149 lt!56758 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))) lt!56768)))

(assert (=> d!31805 true))

(declare-fun _$35!354 () Unit!3421)

(assert (=> d!31805 (= (choose!700 lt!56758 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))) lt!56768) _$35!354)))

(declare-fun bs!4611 () Bool)

(assert (= bs!4611 d!31805))

(assert (=> bs!4611 m!124811))

(assert (=> bs!4611 m!124811))

(assert (=> bs!4611 m!124815))

(assert (=> d!31047 d!31805))

(declare-fun d!31807 () Bool)

(declare-fun e!72595 () Bool)

(assert (=> d!31807 e!72595))

(declare-fun res!55140 () Bool)

(assert (=> d!31807 (=> res!55140 e!72595)))

(declare-fun lt!57671 () Bool)

(assert (=> d!31807 (= res!55140 (not lt!57671))))

(declare-fun lt!57668 () Bool)

(assert (=> d!31807 (= lt!57671 lt!57668)))

(declare-fun lt!57670 () Unit!3421)

(declare-fun e!72596 () Unit!3421)

(assert (=> d!31807 (= lt!57670 e!72596)))

(declare-fun c!19941 () Bool)

(assert (=> d!31807 (= c!19941 lt!57668)))

(assert (=> d!31807 (= lt!57668 (containsKey!161 (toList!813 lt!56758) lt!56768))))

(assert (=> d!31807 (= (contains!837 lt!56758 lt!56768) lt!57671)))

(declare-fun b!111681 () Bool)

(declare-fun lt!57669 () Unit!3421)

(assert (=> b!111681 (= e!72596 lt!57669)))

(assert (=> b!111681 (= lt!57669 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56758) lt!56768))))

(assert (=> b!111681 (isDefined!111 (getValueByKey!157 (toList!813 lt!56758) lt!56768))))

(declare-fun b!111682 () Bool)

(declare-fun Unit!3491 () Unit!3421)

(assert (=> b!111682 (= e!72596 Unit!3491)))

(declare-fun b!111683 () Bool)

(assert (=> b!111683 (= e!72595 (isDefined!111 (getValueByKey!157 (toList!813 lt!56758) lt!56768)))))

(assert (= (and d!31807 c!19941) b!111681))

(assert (= (and d!31807 (not c!19941)) b!111682))

(assert (= (and d!31807 (not res!55140)) b!111683))

(declare-fun m!127593 () Bool)

(assert (=> d!31807 m!127593))

(declare-fun m!127595 () Bool)

(assert (=> b!111681 m!127595))

(declare-fun m!127597 () Bool)

(assert (=> b!111681 m!127597))

(assert (=> b!111681 m!127597))

(declare-fun m!127599 () Bool)

(assert (=> b!111681 m!127599))

(assert (=> b!111683 m!127597))

(assert (=> b!111683 m!127597))

(assert (=> b!111683 m!127599))

(assert (=> d!31047 d!31807))

(declare-fun d!31809 () Bool)

(declare-fun res!55141 () Bool)

(declare-fun e!72597 () Bool)

(assert (=> d!31809 (=> res!55141 e!72597)))

(assert (=> d!31809 (= res!55141 (and ((_ is Cons!1649) lt!56698) (= (_1!1224 (h!2248 lt!56698)) (_1!1224 lt!56528))))))

(assert (=> d!31809 (= (containsKey!161 lt!56698 (_1!1224 lt!56528)) e!72597)))

(declare-fun b!111684 () Bool)

(declare-fun e!72598 () Bool)

(assert (=> b!111684 (= e!72597 e!72598)))

(declare-fun res!55142 () Bool)

(assert (=> b!111684 (=> (not res!55142) (not e!72598))))

(assert (=> b!111684 (= res!55142 (and (or (not ((_ is Cons!1649) lt!56698)) (bvsle (_1!1224 (h!2248 lt!56698)) (_1!1224 lt!56528))) ((_ is Cons!1649) lt!56698) (bvslt (_1!1224 (h!2248 lt!56698)) (_1!1224 lt!56528))))))

(declare-fun b!111685 () Bool)

(assert (=> b!111685 (= e!72598 (containsKey!161 (t!5802 lt!56698) (_1!1224 lt!56528)))))

(assert (= (and d!31809 (not res!55141)) b!111684))

(assert (= (and b!111684 res!55142) b!111685))

(declare-fun m!127601 () Bool)

(assert (=> b!111685 m!127601))

(assert (=> b!110428 d!31809))

(declare-fun b!111688 () Bool)

(declare-fun e!72600 () Option!163)

(assert (=> b!111688 (= e!72600 (getValueByKey!157 (t!5802 (toList!813 lt!56961)) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!31811 () Bool)

(declare-fun c!19942 () Bool)

(assert (=> d!31811 (= c!19942 (and ((_ is Cons!1649) (toList!813 lt!56961)) (= (_1!1224 (h!2248 (toList!813 lt!56961))) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72599 () Option!163)

(assert (=> d!31811 (= (getValueByKey!157 (toList!813 lt!56961) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72599)))

(declare-fun b!111689 () Bool)

(assert (=> b!111689 (= e!72600 None!161)))

(declare-fun b!111687 () Bool)

(assert (=> b!111687 (= e!72599 e!72600)))

(declare-fun c!19943 () Bool)

(assert (=> b!111687 (= c!19943 (and ((_ is Cons!1649) (toList!813 lt!56961)) (not (= (_1!1224 (h!2248 (toList!813 lt!56961))) (_1!1224 (tuple2!2429 lt!56762 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111686 () Bool)

(assert (=> b!111686 (= e!72599 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56961)))))))

(assert (= (and d!31811 c!19942) b!111686))

(assert (= (and d!31811 (not c!19942)) b!111687))

(assert (= (and b!111687 c!19943) b!111688))

(assert (= (and b!111687 (not c!19943)) b!111689))

(declare-fun m!127603 () Bool)

(assert (=> b!111688 m!127603))

(assert (=> b!110459 d!31811))

(declare-fun d!31813 () Bool)

(declare-fun res!55143 () Bool)

(declare-fun e!72601 () Bool)

(assert (=> d!31813 (=> res!55143 e!72601)))

(assert (=> d!31813 (= res!55143 (and ((_ is Cons!1649) lt!56694) (= (_1!1224 (h!2248 lt!56694)) (_1!1224 lt!56517))))))

(assert (=> d!31813 (= (containsKey!161 lt!56694 (_1!1224 lt!56517)) e!72601)))

(declare-fun b!111690 () Bool)

(declare-fun e!72602 () Bool)

(assert (=> b!111690 (= e!72601 e!72602)))

(declare-fun res!55144 () Bool)

(assert (=> b!111690 (=> (not res!55144) (not e!72602))))

(assert (=> b!111690 (= res!55144 (and (or (not ((_ is Cons!1649) lt!56694)) (bvsle (_1!1224 (h!2248 lt!56694)) (_1!1224 lt!56517))) ((_ is Cons!1649) lt!56694) (bvslt (_1!1224 (h!2248 lt!56694)) (_1!1224 lt!56517))))))

(declare-fun b!111691 () Bool)

(assert (=> b!111691 (= e!72602 (containsKey!161 (t!5802 lt!56694) (_1!1224 lt!56517)))))

(assert (= (and d!31813 (not res!55143)) b!111690))

(assert (= (and b!111690 res!55144) b!111691))

(declare-fun m!127605 () Bool)

(assert (=> b!111691 m!127605))

(assert (=> b!110491 d!31813))

(declare-fun d!31815 () Bool)

(declare-fun res!55145 () Bool)

(declare-fun e!72603 () Bool)

(assert (=> d!31815 (=> res!55145 e!72603)))

(assert (=> d!31815 (= res!55145 (and ((_ is Cons!1649) (toList!813 lt!56687)) (= (_1!1224 (h!2248 (toList!813 lt!56687))) (_1!1224 lt!56528))))))

(assert (=> d!31815 (= (containsKey!161 (toList!813 lt!56687) (_1!1224 lt!56528)) e!72603)))

(declare-fun b!111692 () Bool)

(declare-fun e!72604 () Bool)

(assert (=> b!111692 (= e!72603 e!72604)))

(declare-fun res!55146 () Bool)

(assert (=> b!111692 (=> (not res!55146) (not e!72604))))

(assert (=> b!111692 (= res!55146 (and (or (not ((_ is Cons!1649) (toList!813 lt!56687))) (bvsle (_1!1224 (h!2248 (toList!813 lt!56687))) (_1!1224 lt!56528))) ((_ is Cons!1649) (toList!813 lt!56687)) (bvslt (_1!1224 (h!2248 (toList!813 lt!56687))) (_1!1224 lt!56528))))))

(declare-fun b!111693 () Bool)

(assert (=> b!111693 (= e!72604 (containsKey!161 (t!5802 (toList!813 lt!56687)) (_1!1224 lt!56528)))))

(assert (= (and d!31815 (not res!55145)) b!111692))

(assert (= (and b!111692 res!55146) b!111693))

(declare-fun m!127607 () Bool)

(assert (=> b!111693 m!127607))

(assert (=> d!30945 d!31815))

(declare-fun d!31817 () Bool)

(assert (=> d!31817 (= (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56755)) (v!2933 (getValueByKey!157 (toList!813 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56755)))))

(assert (=> d!31043 d!31817))

(declare-fun e!72606 () Option!163)

(declare-fun b!111696 () Bool)

(assert (=> b!111696 (= e!72606 (getValueByKey!157 (t!5802 (toList!813 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) lt!56755))))

(declare-fun c!19944 () Bool)

(declare-fun d!31819 () Bool)

(assert (=> d!31819 (= c!19944 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))) lt!56755)))))

(declare-fun e!72605 () Option!163)

(assert (=> d!31819 (= (getValueByKey!157 (toList!813 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56755) e!72605)))

(declare-fun b!111697 () Bool)

(assert (=> b!111697 (= e!72606 None!161)))

(declare-fun b!111695 () Bool)

(assert (=> b!111695 (= e!72605 e!72606)))

(declare-fun c!19945 () Bool)

(assert (=> b!111695 (= c!19945 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) (not (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))) lt!56755))))))

(declare-fun b!111694 () Bool)

(assert (=> b!111694 (= e!72605 (Some!162 (_2!1224 (h!2248 (toList!813 (+!149 lt!56752 (tuple2!2429 lt!56754 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))))

(assert (= (and d!31819 c!19944) b!111694))

(assert (= (and d!31819 (not c!19944)) b!111695))

(assert (= (and b!111695 c!19945) b!111696))

(assert (= (and b!111695 (not c!19945)) b!111697))

(declare-fun m!127609 () Bool)

(assert (=> b!111696 m!127609))

(assert (=> d!31043 d!31819))

(declare-fun b!111700 () Bool)

(declare-fun e!72608 () Option!163)

(assert (=> b!111700 (= e!72608 (getValueByKey!157 (t!5802 (toList!813 lt!56889)) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!31821 () Bool)

(declare-fun c!19946 () Bool)

(assert (=> d!31821 (= c!19946 (and ((_ is Cons!1649) (toList!813 lt!56889)) (= (_1!1224 (h!2248 (toList!813 lt!56889))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72607 () Option!163)

(assert (=> d!31821 (= (getValueByKey!157 (toList!813 lt!56889) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72607)))

(declare-fun b!111701 () Bool)

(assert (=> b!111701 (= e!72608 None!161)))

(declare-fun b!111699 () Bool)

(assert (=> b!111699 (= e!72607 e!72608)))

(declare-fun c!19947 () Bool)

(assert (=> b!111699 (= c!19947 (and ((_ is Cons!1649) (toList!813 lt!56889)) (not (= (_1!1224 (h!2248 (toList!813 lt!56889))) (_1!1224 (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111698 () Bool)

(assert (=> b!111698 (= e!72607 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56889)))))))

(assert (= (and d!31821 c!19946) b!111698))

(assert (= (and d!31821 (not c!19946)) b!111699))

(assert (= (and b!111699 c!19947) b!111700))

(assert (= (and b!111699 (not c!19947)) b!111701))

(declare-fun m!127611 () Bool)

(assert (=> b!111700 m!127611))

(assert (=> b!110369 d!31821))

(declare-fun e!72610 () Option!163)

(declare-fun b!111704 () Bool)

(assert (=> b!111704 (= e!72610 (getValueByKey!157 (t!5802 (t!5802 (toList!813 lt!56524))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(declare-fun c!19948 () Bool)

(declare-fun d!31823 () Bool)

(assert (=> d!31823 (= c!19948 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56524))) (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56524)))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(declare-fun e!72609 () Option!163)

(assert (=> d!31823 (= (getValueByKey!157 (t!5802 (toList!813 lt!56524)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) e!72609)))

(declare-fun b!111705 () Bool)

(assert (=> b!111705 (= e!72610 None!161)))

(declare-fun b!111703 () Bool)

(assert (=> b!111703 (= e!72609 e!72610)))

(declare-fun c!19949 () Bool)

(assert (=> b!111703 (= c!19949 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56524))) (not (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56524)))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun b!111702 () Bool)

(assert (=> b!111702 (= e!72609 (Some!162 (_2!1224 (h!2248 (t!5802 (toList!813 lt!56524))))))))

(assert (= (and d!31823 c!19948) b!111702))

(assert (= (and d!31823 (not c!19948)) b!111703))

(assert (= (and b!111703 c!19949) b!111704))

(assert (= (and b!111703 (not c!19949)) b!111705))

(assert (=> b!111704 m!124515))

(declare-fun m!127613 () Bool)

(assert (=> b!111704 m!127613))

(assert (=> b!110255 d!31823))

(declare-fun d!31825 () Bool)

(assert (=> d!31825 (= (get!1359 (getValueByKey!157 (toList!813 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56761)) (v!2933 (getValueByKey!157 (toList!813 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56761)))))

(assert (=> d!31049 d!31825))

(declare-fun e!72612 () Option!163)

(declare-fun b!111708 () Bool)

(assert (=> b!111708 (= e!72612 (getValueByKey!157 (t!5802 (toList!813 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) lt!56761))))

(declare-fun d!31827 () Bool)

(declare-fun c!19950 () Bool)

(assert (=> d!31827 (= c!19950 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) lt!56761)))))

(declare-fun e!72611 () Option!163)

(assert (=> d!31827 (= (getValueByKey!157 (toList!813 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!56761) e!72611)))

(declare-fun b!111709 () Bool)

(assert (=> b!111709 (= e!72612 None!161)))

(declare-fun b!111707 () Bool)

(assert (=> b!111707 (= e!72611 e!72612)))

(declare-fun c!19951 () Bool)

(assert (=> b!111707 (= c!19951 (and ((_ is Cons!1649) (toList!813 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))) (not (= (_1!1224 (h!2248 (toList!813 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))))))) lt!56761))))))

(declare-fun b!111706 () Bool)

(assert (=> b!111706 (= e!72611 (Some!162 (_2!1224 (h!2248 (toList!813 (+!149 lt!56759 (tuple2!2429 lt!56757 (zeroValue!2498 (v!2929 (underlying!370 thiss!992))))))))))))

(assert (= (and d!31827 c!19950) b!111706))

(assert (= (and d!31827 (not c!19950)) b!111707))

(assert (= (and b!111707 c!19951) b!111708))

(assert (= (and b!111707 (not c!19951)) b!111709))

(declare-fun m!127615 () Bool)

(assert (=> b!111708 m!127615))

(assert (=> d!31049 d!31827))

(assert (=> b!110317 d!31281))

(declare-fun d!31829 () Bool)

(declare-fun e!72613 () Bool)

(assert (=> d!31829 e!72613))

(declare-fun res!55147 () Bool)

(assert (=> d!31829 (=> res!55147 e!72613)))

(declare-fun lt!57675 () Bool)

(assert (=> d!31829 (= res!55147 (not lt!57675))))

(declare-fun lt!57672 () Bool)

(assert (=> d!31829 (= lt!57675 lt!57672)))

(declare-fun lt!57674 () Unit!3421)

(declare-fun e!72614 () Unit!3421)

(assert (=> d!31829 (= lt!57674 e!72614)))

(declare-fun c!19952 () Bool)

(assert (=> d!31829 (= c!19952 lt!57672)))

(assert (=> d!31829 (= lt!57672 (containsKey!161 (toList!813 lt!56797) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31829 (= (contains!837 lt!56797 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57675)))

(declare-fun b!111710 () Bool)

(declare-fun lt!57673 () Unit!3421)

(assert (=> b!111710 (= e!72614 lt!57673)))

(assert (=> b!111710 (= lt!57673 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56797) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111710 (isDefined!111 (getValueByKey!157 (toList!813 lt!56797) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111711 () Bool)

(declare-fun Unit!3492 () Unit!3421)

(assert (=> b!111711 (= e!72614 Unit!3492)))

(declare-fun b!111712 () Bool)

(assert (=> b!111712 (= e!72613 (isDefined!111 (getValueByKey!157 (toList!813 lt!56797) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31829 c!19952) b!111710))

(assert (= (and d!31829 (not c!19952)) b!111711))

(assert (= (and d!31829 (not res!55147)) b!111712))

(declare-fun m!127617 () Bool)

(assert (=> d!31829 m!127617))

(declare-fun m!127619 () Bool)

(assert (=> b!111710 m!127619))

(assert (=> b!111710 m!127029))

(assert (=> b!111710 m!127029))

(declare-fun m!127621 () Bool)

(assert (=> b!111710 m!127621))

(assert (=> b!111712 m!127029))

(assert (=> b!111712 m!127029))

(assert (=> b!111712 m!127621))

(assert (=> bm!11759 d!31829))

(declare-fun b!111713 () Bool)

(declare-fun e!72616 () Bool)

(declare-fun e!72617 () Bool)

(assert (=> b!111713 (= e!72616 e!72617)))

(declare-fun res!55148 () Bool)

(assert (=> b!111713 (=> (not res!55148) (not e!72617))))

(declare-fun e!72615 () Bool)

(assert (=> b!111713 (= res!55148 (not e!72615))))

(declare-fun res!55149 () Bool)

(assert (=> b!111713 (=> (not res!55149) (not e!72615))))

(assert (=> b!111713 (= res!55149 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!31831 () Bool)

(declare-fun res!55150 () Bool)

(assert (=> d!31831 (=> res!55150 e!72616)))

(assert (=> d!31831 (= res!55150 (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> d!31831 (= (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) #b00000000000000000000000000000000 Nil!1649) e!72616)))

(declare-fun b!111714 () Bool)

(assert (=> b!111714 (= e!72615 (contains!840 Nil!1649 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!111715 () Bool)

(declare-fun e!72618 () Bool)

(assert (=> b!111715 (= e!72617 e!72618)))

(declare-fun c!19953 () Bool)

(assert (=> b!111715 (= c!19953 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11936 () Bool)

(declare-fun call!11939 () Bool)

(assert (=> bm!11936 (= call!11939 (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19953 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) #b00000000000000000000000000000000) Nil!1649) Nil!1649)))))

(declare-fun b!111716 () Bool)

(assert (=> b!111716 (= e!72618 call!11939)))

(declare-fun b!111717 () Bool)

(assert (=> b!111717 (= e!72618 call!11939)))

(assert (= (and d!31831 (not res!55150)) b!111713))

(assert (= (and b!111713 res!55149) b!111714))

(assert (= (and b!111713 res!55148) b!111715))

(assert (= (and b!111715 c!19953) b!111717))

(assert (= (and b!111715 (not c!19953)) b!111716))

(assert (= (or b!111717 b!111716) bm!11936))

(assert (=> b!111713 m!126071))

(assert (=> b!111713 m!126071))

(assert (=> b!111713 m!126081))

(assert (=> b!111714 m!126071))

(assert (=> b!111714 m!126071))

(declare-fun m!127623 () Bool)

(assert (=> b!111714 m!127623))

(assert (=> b!111715 m!126071))

(assert (=> b!111715 m!126071))

(assert (=> b!111715 m!126081))

(assert (=> bm!11936 m!126071))

(declare-fun m!127625 () Bool)

(assert (=> bm!11936 m!127625))

(assert (=> b!110505 d!31831))

(declare-fun e!72620 () Option!163)

(declare-fun b!111720 () Bool)

(assert (=> b!111720 (= e!72620 (getValueByKey!157 (t!5802 (toList!813 lt!56879)) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!19954 () Bool)

(declare-fun d!31833 () Bool)

(assert (=> d!31833 (= c!19954 (and ((_ is Cons!1649) (toList!813 lt!56879)) (= (_1!1224 (h!2248 (toList!813 lt!56879))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!72619 () Option!163)

(assert (=> d!31833 (= (getValueByKey!157 (toList!813 lt!56879) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!72619)))

(declare-fun b!111721 () Bool)

(assert (=> b!111721 (= e!72620 None!161)))

(declare-fun b!111719 () Bool)

(assert (=> b!111719 (= e!72619 e!72620)))

(declare-fun c!19955 () Bool)

(assert (=> b!111719 (= c!19955 (and ((_ is Cons!1649) (toList!813 lt!56879)) (not (= (_1!1224 (h!2248 (toList!813 lt!56879))) (_1!1224 (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1355 (select (arr!2081 (_values!2610 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!392 (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!111718 () Bool)

(assert (=> b!111718 (= e!72619 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56879)))))))

(assert (= (and d!31833 c!19954) b!111718))

(assert (= (and d!31833 (not c!19954)) b!111719))

(assert (= (and b!111719 c!19955) b!111720))

(assert (= (and b!111719 (not c!19955)) b!111721))

(declare-fun m!127627 () Bool)

(assert (=> b!111720 m!127627))

(assert (=> b!110357 d!31833))

(declare-fun d!31835 () Bool)

(declare-fun res!55151 () Bool)

(declare-fun e!72621 () Bool)

(assert (=> d!31835 (=> res!55151 e!72621)))

(assert (=> d!31835 (= res!55151 (and ((_ is Cons!1649) (toList!813 call!11731)) (= (_1!1224 (h!2248 (toList!813 call!11731))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31835 (= (containsKey!161 (toList!813 call!11731) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) e!72621)))

(declare-fun b!111722 () Bool)

(declare-fun e!72622 () Bool)

(assert (=> b!111722 (= e!72621 e!72622)))

(declare-fun res!55152 () Bool)

(assert (=> b!111722 (=> (not res!55152) (not e!72622))))

(assert (=> b!111722 (= res!55152 (and (or (not ((_ is Cons!1649) (toList!813 call!11731))) (bvsle (_1!1224 (h!2248 (toList!813 call!11731))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1649) (toList!813 call!11731)) (bvslt (_1!1224 (h!2248 (toList!813 call!11731))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!111723 () Bool)

(assert (=> b!111723 (= e!72622 (containsKey!161 (t!5802 (toList!813 call!11731)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31835 (not res!55151)) b!111722))

(assert (= (and b!111722 res!55152) b!111723))

(assert (=> b!111723 m!124515))

(declare-fun m!127629 () Bool)

(assert (=> b!111723 m!127629))

(assert (=> d!31089 d!31835))

(declare-fun b!111726 () Bool)

(declare-fun e!72624 () Option!163)

(assert (=> b!111726 (= e!72624 (getValueByKey!157 (t!5802 (toList!813 lt!56970)) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!31837 () Bool)

(declare-fun c!19956 () Bool)

(assert (=> d!31837 (= c!19956 (and ((_ is Cons!1649) (toList!813 lt!56970)) (= (_1!1224 (h!2248 (toList!813 lt!56970))) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72623 () Option!163)

(assert (=> d!31837 (= (getValueByKey!157 (toList!813 lt!56970) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72623)))

(declare-fun b!111727 () Bool)

(assert (=> b!111727 (= e!72624 None!161)))

(declare-fun b!111725 () Bool)

(assert (=> b!111725 (= e!72623 e!72624)))

(declare-fun c!19957 () Bool)

(assert (=> b!111725 (= c!19957 (and ((_ is Cons!1649) (toList!813 lt!56970)) (not (= (_1!1224 (h!2248 (toList!813 lt!56970))) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111724 () Bool)

(assert (=> b!111724 (= e!72623 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56970)))))))

(assert (= (and d!31837 c!19956) b!111724))

(assert (= (and d!31837 (not c!19956)) b!111725))

(assert (= (and b!111725 c!19957) b!111726))

(assert (= (and b!111725 (not c!19957)) b!111727))

(declare-fun m!127631 () Bool)

(assert (=> b!111726 m!127631))

(assert (=> b!110464 d!31837))

(declare-fun d!31839 () Bool)

(declare-fun res!55153 () Bool)

(declare-fun e!72625 () Bool)

(assert (=> d!31839 (=> res!55153 e!72625)))

(assert (=> d!31839 (= res!55153 (and ((_ is Cons!1649) lt!56941) (= (_1!1224 (h!2248 lt!56941)) (_1!1224 lt!56528))))))

(assert (=> d!31839 (= (containsKey!161 lt!56941 (_1!1224 lt!56528)) e!72625)))

(declare-fun b!111728 () Bool)

(declare-fun e!72626 () Bool)

(assert (=> b!111728 (= e!72625 e!72626)))

(declare-fun res!55154 () Bool)

(assert (=> b!111728 (=> (not res!55154) (not e!72626))))

(assert (=> b!111728 (= res!55154 (and (or (not ((_ is Cons!1649) lt!56941)) (bvsle (_1!1224 (h!2248 lt!56941)) (_1!1224 lt!56528))) ((_ is Cons!1649) lt!56941) (bvslt (_1!1224 (h!2248 lt!56941)) (_1!1224 lt!56528))))))

(declare-fun b!111729 () Bool)

(assert (=> b!111729 (= e!72626 (containsKey!161 (t!5802 lt!56941) (_1!1224 lt!56528)))))

(assert (= (and d!31839 (not res!55153)) b!111728))

(assert (= (and b!111728 res!55154) b!111729))

(declare-fun m!127633 () Bool)

(assert (=> b!111729 m!127633))

(assert (=> b!110434 d!31839))

(declare-fun d!31841 () Bool)

(declare-fun res!55155 () Bool)

(declare-fun e!72627 () Bool)

(assert (=> d!31841 (=> res!55155 e!72627)))

(assert (=> d!31841 (= res!55155 (and ((_ is Cons!1649) lt!56992) (= (_1!1224 (h!2248 lt!56992)) (_1!1224 lt!56517))))))

(assert (=> d!31841 (= (containsKey!161 lt!56992 (_1!1224 lt!56517)) e!72627)))

(declare-fun b!111730 () Bool)

(declare-fun e!72628 () Bool)

(assert (=> b!111730 (= e!72627 e!72628)))

(declare-fun res!55156 () Bool)

(assert (=> b!111730 (=> (not res!55156) (not e!72628))))

(assert (=> b!111730 (= res!55156 (and (or (not ((_ is Cons!1649) lt!56992)) (bvsle (_1!1224 (h!2248 lt!56992)) (_1!1224 lt!56517))) ((_ is Cons!1649) lt!56992) (bvslt (_1!1224 (h!2248 lt!56992)) (_1!1224 lt!56517))))))

(declare-fun b!111731 () Bool)

(assert (=> b!111731 (= e!72628 (containsKey!161 (t!5802 lt!56992) (_1!1224 lt!56517)))))

(assert (= (and d!31841 (not res!55155)) b!111730))

(assert (= (and b!111730 res!55156) b!111731))

(declare-fun m!127635 () Bool)

(assert (=> b!111731 m!127635))

(assert (=> b!110497 d!31841))

(declare-fun d!31843 () Bool)

(declare-fun e!72629 () Bool)

(assert (=> d!31843 e!72629))

(declare-fun res!55157 () Bool)

(assert (=> d!31843 (=> res!55157 e!72629)))

(declare-fun lt!57679 () Bool)

(assert (=> d!31843 (= res!55157 (not lt!57679))))

(declare-fun lt!57676 () Bool)

(assert (=> d!31843 (= lt!57679 lt!57676)))

(declare-fun lt!57678 () Unit!3421)

(declare-fun e!72630 () Unit!3421)

(assert (=> d!31843 (= lt!57678 e!72630)))

(declare-fun c!19958 () Bool)

(assert (=> d!31843 (= c!19958 lt!57676)))

(assert (=> d!31843 (= lt!57676 (containsKey!161 (toList!813 lt!56849) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31843 (= (contains!837 lt!56849 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57679)))

(declare-fun b!111732 () Bool)

(declare-fun lt!57677 () Unit!3421)

(assert (=> b!111732 (= e!72630 lt!57677)))

(assert (=> b!111732 (= lt!57677 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56849) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111732 (isDefined!111 (getValueByKey!157 (toList!813 lt!56849) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111733 () Bool)

(declare-fun Unit!3493 () Unit!3421)

(assert (=> b!111733 (= e!72630 Unit!3493)))

(declare-fun b!111734 () Bool)

(assert (=> b!111734 (= e!72629 (isDefined!111 (getValueByKey!157 (toList!813 lt!56849) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31843 c!19958) b!111732))

(assert (= (and d!31843 (not c!19958)) b!111733))

(assert (= (and d!31843 (not res!55157)) b!111734))

(declare-fun m!127637 () Bool)

(assert (=> d!31843 m!127637))

(declare-fun m!127639 () Bool)

(assert (=> b!111732 m!127639))

(assert (=> b!111732 m!126989))

(assert (=> b!111732 m!126989))

(declare-fun m!127641 () Bool)

(assert (=> b!111732 m!127641))

(assert (=> b!111734 m!126989))

(assert (=> b!111734 m!126989))

(assert (=> b!111734 m!127641))

(assert (=> bm!11778 d!31843))

(declare-fun d!31845 () Bool)

(declare-fun res!55158 () Bool)

(declare-fun e!72631 () Bool)

(assert (=> d!31845 (=> res!55158 e!72631)))

(assert (=> d!31845 (= res!55158 (and ((_ is Cons!1649) (t!5802 (toList!813 lt!56524))) (= (_1!1224 (h!2248 (t!5802 (toList!813 lt!56524)))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31845 (= (containsKey!161 (t!5802 (toList!813 lt!56524)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)) e!72631)))

(declare-fun b!111735 () Bool)

(declare-fun e!72632 () Bool)

(assert (=> b!111735 (= e!72631 e!72632)))

(declare-fun res!55159 () Bool)

(assert (=> b!111735 (=> (not res!55159) (not e!72632))))

(assert (=> b!111735 (= res!55159 (and (or (not ((_ is Cons!1649) (t!5802 (toList!813 lt!56524)))) (bvsle (_1!1224 (h!2248 (t!5802 (toList!813 lt!56524)))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1649) (t!5802 (toList!813 lt!56524))) (bvslt (_1!1224 (h!2248 (t!5802 (toList!813 lt!56524)))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!111736 () Bool)

(assert (=> b!111736 (= e!72632 (containsKey!161 (t!5802 (t!5802 (toList!813 lt!56524))) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31845 (not res!55158)) b!111735))

(assert (= (and b!111735 res!55159) b!111736))

(assert (=> b!111736 m!124515))

(declare-fun m!127643 () Bool)

(assert (=> b!111736 m!127643))

(assert (=> b!110445 d!31845))

(declare-fun d!31847 () Bool)

(declare-fun e!72633 () Bool)

(assert (=> d!31847 e!72633))

(declare-fun res!55160 () Bool)

(assert (=> d!31847 (=> res!55160 e!72633)))

(declare-fun lt!57683 () Bool)

(assert (=> d!31847 (= res!55160 (not lt!57683))))

(declare-fun lt!57680 () Bool)

(assert (=> d!31847 (= lt!57683 lt!57680)))

(declare-fun lt!57682 () Unit!3421)

(declare-fun e!72634 () Unit!3421)

(assert (=> d!31847 (= lt!57682 e!72634)))

(declare-fun c!19959 () Bool)

(assert (=> d!31847 (= c!19959 lt!57680)))

(assert (=> d!31847 (= lt!57680 (containsKey!161 (toList!813 lt!56970) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> d!31847 (= (contains!837 lt!56970 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57683)))

(declare-fun b!111737 () Bool)

(declare-fun lt!57681 () Unit!3421)

(assert (=> b!111737 (= e!72634 lt!57681)))

(assert (=> b!111737 (= lt!57681 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56970) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(assert (=> b!111737 (isDefined!111 (getValueByKey!157 (toList!813 lt!56970) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111738 () Bool)

(declare-fun Unit!3494 () Unit!3421)

(assert (=> b!111738 (= e!72634 Unit!3494)))

(declare-fun b!111739 () Bool)

(assert (=> b!111739 (= e!72633 (isDefined!111 (getValueByKey!157 (toList!813 lt!56970) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31847 c!19959) b!111737))

(assert (= (and d!31847 (not c!19959)) b!111738))

(assert (= (and d!31847 (not res!55160)) b!111739))

(declare-fun m!127645 () Bool)

(assert (=> d!31847 m!127645))

(declare-fun m!127647 () Bool)

(assert (=> b!111737 m!127647))

(assert (=> b!111737 m!125415))

(assert (=> b!111737 m!125415))

(declare-fun m!127649 () Bool)

(assert (=> b!111737 m!127649))

(assert (=> b!111739 m!125415))

(assert (=> b!111739 m!125415))

(assert (=> b!111739 m!127649))

(assert (=> d!31055 d!31847))

(declare-fun b!111742 () Bool)

(declare-fun e!72636 () Option!163)

(assert (=> b!111742 (= e!72636 (getValueByKey!157 (t!5802 lt!56973) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun d!31849 () Bool)

(declare-fun c!19960 () Bool)

(assert (=> d!31849 (= c!19960 (and ((_ is Cons!1649) lt!56973) (= (_1!1224 (h!2248 lt!56973)) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72635 () Option!163)

(assert (=> d!31849 (= (getValueByKey!157 lt!56973 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72635)))

(declare-fun b!111743 () Bool)

(assert (=> b!111743 (= e!72636 None!161)))

(declare-fun b!111741 () Bool)

(assert (=> b!111741 (= e!72635 e!72636)))

(declare-fun c!19961 () Bool)

(assert (=> b!111741 (= c!19961 (and ((_ is Cons!1649) lt!56973) (not (= (_1!1224 (h!2248 lt!56973)) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111740 () Bool)

(assert (=> b!111740 (= e!72635 (Some!162 (_2!1224 (h!2248 lt!56973))))))

(assert (= (and d!31849 c!19960) b!111740))

(assert (= (and d!31849 (not c!19960)) b!111741))

(assert (= (and b!111741 c!19961) b!111742))

(assert (= (and b!111741 (not c!19961)) b!111743))

(declare-fun m!127651 () Bool)

(assert (=> b!111742 m!127651))

(assert (=> d!31055 d!31849))

(declare-fun d!31851 () Bool)

(assert (=> d!31851 (= (getValueByKey!157 lt!56973 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) (Some!162 (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun lt!57684 () Unit!3421)

(assert (=> d!31851 (= lt!57684 (choose!693 lt!56973 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun e!72637 () Bool)

(assert (=> d!31851 e!72637))

(declare-fun res!55161 () Bool)

(assert (=> d!31851 (=> (not res!55161) (not e!72637))))

(assert (=> d!31851 (= res!55161 (isStrictlySorted!306 lt!56973))))

(assert (=> d!31851 (= (lemmaContainsTupThenGetReturnValue!75 lt!56973 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57684)))

(declare-fun b!111744 () Bool)

(declare-fun res!55162 () Bool)

(assert (=> b!111744 (=> (not res!55162) (not e!72637))))

(assert (=> b!111744 (= res!55162 (containsKey!161 lt!56973 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111745 () Bool)

(assert (=> b!111745 (= e!72637 (contains!839 lt!56973 (tuple2!2429 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (= (and d!31851 res!55161) b!111744))

(assert (= (and b!111744 res!55162) b!111745))

(assert (=> d!31851 m!125409))

(declare-fun m!127653 () Bool)

(assert (=> d!31851 m!127653))

(declare-fun m!127655 () Bool)

(assert (=> d!31851 m!127655))

(declare-fun m!127657 () Bool)

(assert (=> b!111744 m!127657))

(declare-fun m!127659 () Bool)

(assert (=> b!111745 m!127659))

(assert (=> d!31055 d!31851))

(declare-fun b!111746 () Bool)

(declare-fun c!19963 () Bool)

(declare-fun e!72640 () List!1653)

(declare-fun c!19962 () Bool)

(assert (=> b!111746 (= e!72640 (ite c!19962 (t!5802 (toList!813 call!11753)) (ite c!19963 (Cons!1649 (h!2248 (toList!813 call!11753)) (t!5802 (toList!813 call!11753))) Nil!1650)))))

(declare-fun b!111747 () Bool)

(declare-fun e!72642 () List!1653)

(declare-fun call!11942 () List!1653)

(assert (=> b!111747 (= e!72642 call!11942)))

(declare-fun c!19965 () Bool)

(declare-fun bm!11937 () Bool)

(declare-fun call!11940 () List!1653)

(assert (=> bm!11937 (= call!11940 ($colon$colon!82 e!72640 (ite c!19965 (h!2248 (toList!813 call!11753)) (tuple2!2429 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun c!19964 () Bool)

(assert (=> bm!11937 (= c!19964 c!19965)))

(declare-fun b!111748 () Bool)

(declare-fun e!72638 () List!1653)

(assert (=> b!111748 (= e!72638 e!72642)))

(assert (=> b!111748 (= c!19962 (and ((_ is Cons!1649) (toList!813 call!11753)) (= (_1!1224 (h!2248 (toList!813 call!11753))) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111749 () Bool)

(assert (=> b!111749 (= e!72640 (insertStrictlySorted!77 (t!5802 (toList!813 call!11753)) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun bm!11938 () Bool)

(declare-fun call!11941 () List!1653)

(assert (=> bm!11938 (= call!11941 call!11942)))

(declare-fun d!31853 () Bool)

(declare-fun e!72641 () Bool)

(assert (=> d!31853 e!72641))

(declare-fun res!55164 () Bool)

(assert (=> d!31853 (=> (not res!55164) (not e!72641))))

(declare-fun lt!57685 () List!1653)

(assert (=> d!31853 (= res!55164 (isStrictlySorted!306 lt!57685))))

(assert (=> d!31853 (= lt!57685 e!72638)))

(assert (=> d!31853 (= c!19965 (and ((_ is Cons!1649) (toList!813 call!11753)) (bvslt (_1!1224 (h!2248 (toList!813 call!11753))) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> d!31853 (isStrictlySorted!306 (toList!813 call!11753))))

(assert (=> d!31853 (= (insertStrictlySorted!77 (toList!813 call!11753) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) lt!57685)))

(declare-fun b!111750 () Bool)

(declare-fun res!55163 () Bool)

(assert (=> b!111750 (=> (not res!55163) (not e!72641))))

(assert (=> b!111750 (= res!55163 (containsKey!161 lt!57685 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun b!111751 () Bool)

(declare-fun e!72639 () List!1653)

(assert (=> b!111751 (= e!72639 call!11941)))

(declare-fun b!111752 () Bool)

(assert (=> b!111752 (= e!72639 call!11941)))

(declare-fun b!111753 () Bool)

(assert (=> b!111753 (= e!72641 (contains!839 lt!57685 (tuple2!2429 (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))) (_2!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun b!111754 () Bool)

(assert (=> b!111754 (= e!72638 call!11940)))

(declare-fun bm!11939 () Bool)

(assert (=> bm!11939 (= call!11942 call!11940)))

(declare-fun b!111755 () Bool)

(assert (=> b!111755 (= c!19963 (and ((_ is Cons!1649) (toList!813 call!11753)) (bvsgt (_1!1224 (h!2248 (toList!813 call!11753))) (_1!1224 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(assert (=> b!111755 (= e!72642 e!72639)))

(assert (= (and d!31853 c!19965) b!111754))

(assert (= (and d!31853 (not c!19965)) b!111748))

(assert (= (and b!111748 c!19962) b!111747))

(assert (= (and b!111748 (not c!19962)) b!111755))

(assert (= (and b!111755 c!19963) b!111751))

(assert (= (and b!111755 (not c!19963)) b!111752))

(assert (= (or b!111751 b!111752) bm!11938))

(assert (= (or b!111747 bm!11938) bm!11939))

(assert (= (or b!111754 bm!11939) bm!11937))

(assert (= (and bm!11937 c!19964) b!111749))

(assert (= (and bm!11937 (not c!19964)) b!111746))

(assert (= (and d!31853 res!55164) b!111750))

(assert (= (and b!111750 res!55163) b!111753))

(declare-fun m!127661 () Bool)

(assert (=> d!31853 m!127661))

(declare-fun m!127663 () Bool)

(assert (=> d!31853 m!127663))

(declare-fun m!127665 () Bool)

(assert (=> bm!11937 m!127665))

(declare-fun m!127667 () Bool)

(assert (=> b!111753 m!127667))

(declare-fun m!127669 () Bool)

(assert (=> b!111749 m!127669))

(declare-fun m!127671 () Bool)

(assert (=> b!111750 m!127671))

(assert (=> d!31055 d!31853))

(declare-fun e!72644 () Option!163)

(declare-fun b!111758 () Bool)

(assert (=> b!111758 (= e!72644 (getValueByKey!157 (t!5802 (toList!813 lt!56922)) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun d!31855 () Bool)

(declare-fun c!19966 () Bool)

(assert (=> d!31855 (= c!19966 (and ((_ is Cons!1649) (toList!813 lt!56922)) (= (_1!1224 (h!2248 (toList!813 lt!56922))) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun e!72643 () Option!163)

(assert (=> d!31855 (= (getValueByKey!157 (toList!813 lt!56922) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))) e!72643)))

(declare-fun b!111759 () Bool)

(assert (=> b!111759 (= e!72644 None!161)))

(declare-fun b!111757 () Bool)

(assert (=> b!111757 (= e!72643 e!72644)))

(declare-fun c!19967 () Bool)

(assert (=> b!111757 (= c!19967 (and ((_ is Cons!1649) (toList!813 lt!56922)) (not (= (_1!1224 (h!2248 (toList!813 lt!56922))) (_1!1224 (ite (or c!19512 c!19516) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2929 (underlying!370 thiss!992)))) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))))

(declare-fun b!111756 () Bool)

(assert (=> b!111756 (= e!72643 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56922)))))))

(assert (= (and d!31855 c!19966) b!111756))

(assert (= (and d!31855 (not c!19966)) b!111757))

(assert (= (and b!111757 c!19967) b!111758))

(assert (= (and b!111757 (not c!19967)) b!111759))

(declare-fun m!127673 () Bool)

(assert (=> b!111758 m!127673))

(assert (=> b!110410 d!31855))

(declare-fun e!72646 () Option!163)

(declare-fun b!111762 () Bool)

(assert (=> b!111762 (= e!72646 (getValueByKey!157 (t!5802 (toList!813 lt!56942)) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))

(declare-fun c!19968 () Bool)

(declare-fun d!31857 () Bool)

(assert (=> d!31857 (= c!19968 (and ((_ is Cons!1649) (toList!813 lt!56942)) (= (_1!1224 (h!2248 (toList!813 lt!56942))) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992))))))))))

(declare-fun e!72645 () Option!163)

(assert (=> d!31857 (= (getValueByKey!157 (toList!813 lt!56942) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))) e!72645)))

(declare-fun b!111763 () Bool)

(assert (=> b!111763 (= e!72646 None!161)))

(declare-fun b!111761 () Bool)

(assert (=> b!111761 (= e!72645 e!72646)))

(declare-fun c!19969 () Bool)

(assert (=> b!111761 (= c!19969 (and ((_ is Cons!1649) (toList!813 lt!56942)) (not (= (_1!1224 (h!2248 (toList!813 lt!56942))) (_1!1224 (tuple2!2429 lt!56771 (minValue!2498 (v!2929 (underlying!370 thiss!992)))))))))))

(declare-fun b!111760 () Bool)

(assert (=> b!111760 (= e!72645 (Some!162 (_2!1224 (h!2248 (toList!813 lt!56942)))))))

(assert (= (and d!31857 c!19968) b!111760))

(assert (= (and d!31857 (not c!19968)) b!111761))

(assert (= (and b!111761 c!19969) b!111762))

(assert (= (and b!111761 (not c!19969)) b!111763))

(declare-fun m!127675 () Bool)

(assert (=> b!111762 m!127675))

(assert (=> b!110446 d!31857))

(assert (=> d!31103 d!30907))

(assert (=> b!110408 d!31319))

(declare-fun d!31859 () Bool)

(declare-fun e!72647 () Bool)

(assert (=> d!31859 e!72647))

(declare-fun res!55165 () Bool)

(assert (=> d!31859 (=> res!55165 e!72647)))

(declare-fun lt!57689 () Bool)

(assert (=> d!31859 (= res!55165 (not lt!57689))))

(declare-fun lt!57686 () Bool)

(assert (=> d!31859 (= lt!57689 lt!57686)))

(declare-fun lt!57688 () Unit!3421)

(declare-fun e!72648 () Unit!3421)

(assert (=> d!31859 (= lt!57688 e!72648)))

(declare-fun c!19970 () Bool)

(assert (=> d!31859 (= c!19970 lt!57686)))

(assert (=> d!31859 (= lt!57686 (containsKey!161 (toList!813 (getCurrentListMap!489 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(assert (=> d!31859 (= (contains!837 (getCurrentListMap!489 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))) lt!57689)))

(declare-fun b!111764 () Bool)

(declare-fun lt!57687 () Unit!3421)

(assert (=> b!111764 (= e!72648 lt!57687)))

(assert (=> b!111764 (= lt!57687 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 (getCurrentListMap!489 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(assert (=> b!111764 (isDefined!111 (getValueByKey!157 (toList!813 (getCurrentListMap!489 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639))))))

(declare-fun b!111765 () Bool)

(declare-fun Unit!3495 () Unit!3421)

(assert (=> b!111765 (= e!72648 Unit!3495)))

(declare-fun b!111766 () Bool)

(assert (=> b!111766 (= e!72647 (isDefined!111 (getValueByKey!157 (toList!813 (getCurrentListMap!489 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!56639)))))))

(assert (= (and d!31859 c!19970) b!111764))

(assert (= (and d!31859 (not c!19970)) b!111765))

(assert (= (and d!31859 (not res!55165)) b!111766))

(assert (=> d!31859 m!124655))

(declare-fun m!127677 () Bool)

(assert (=> d!31859 m!127677))

(assert (=> b!111764 m!124655))

(declare-fun m!127679 () Bool)

(assert (=> b!111764 m!127679))

(assert (=> b!111764 m!124655))

(declare-fun m!127681 () Bool)

(assert (=> b!111764 m!127681))

(assert (=> b!111764 m!127681))

(declare-fun m!127683 () Bool)

(assert (=> b!111764 m!127683))

(assert (=> b!111766 m!124655))

(assert (=> b!111766 m!127681))

(assert (=> b!111766 m!127681))

(assert (=> b!111766 m!127683))

(assert (=> b!110417 d!31859))

(declare-fun bm!11940 () Bool)

(declare-fun call!11944 () ListLongMap!1595)

(assert (=> bm!11940 (= call!11944 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!111767 () Bool)

(declare-fun e!72652 () Bool)

(declare-fun lt!57693 () ListLongMap!1595)

(assert (=> b!111767 (= e!72652 (= (apply!100 lt!57693 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun b!111768 () Bool)

(declare-fun e!72655 () Unit!3421)

(declare-fun Unit!3496 () Unit!3421)

(assert (=> b!111768 (= e!72655 Unit!3496)))

(declare-fun b!111769 () Bool)

(declare-fun e!72661 () Bool)

(assert (=> b!111769 (= e!72661 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111770 () Bool)

(declare-fun e!72660 () ListLongMap!1595)

(declare-fun call!11947 () ListLongMap!1595)

(assert (=> b!111770 (= e!72660 (+!149 call!11947 (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun bm!11942 () Bool)

(declare-fun call!11948 () Bool)

(assert (=> bm!11942 (= call!11948 (contains!837 lt!57693 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111771 () Bool)

(declare-fun e!72656 () Bool)

(assert (=> b!111771 (= e!72656 (= (apply!100 lt!57693 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!111772 () Bool)

(declare-fun e!72650 () Bool)

(assert (=> b!111772 (= e!72650 e!72656)))

(declare-fun res!55168 () Bool)

(declare-fun call!11949 () Bool)

(assert (=> b!111772 (= res!55168 call!11949)))

(assert (=> b!111772 (=> (not res!55168) (not e!72656))))

(declare-fun b!111773 () Bool)

(declare-fun e!72653 () Bool)

(declare-fun e!72659 () Bool)

(assert (=> b!111773 (= e!72653 e!72659)))

(declare-fun res!55173 () Bool)

(assert (=> b!111773 (=> (not res!55173) (not e!72659))))

(assert (=> b!111773 (= res!55173 (contains!837 lt!57693 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111773 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!111774 () Bool)

(declare-fun e!72654 () Bool)

(assert (=> b!111774 (= e!72654 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111775 () Bool)

(declare-fun res!55169 () Bool)

(declare-fun e!72651 () Bool)

(assert (=> b!111775 (=> (not res!55169) (not e!72651))))

(assert (=> b!111775 (= res!55169 e!72650)))

(declare-fun c!19971 () Bool)

(assert (=> b!111775 (= c!19971 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111776 () Bool)

(assert (=> b!111776 (= e!72650 (not call!11949))))

(declare-fun b!111777 () Bool)

(declare-fun e!72649 () ListLongMap!1595)

(declare-fun call!11946 () ListLongMap!1595)

(assert (=> b!111777 (= e!72649 call!11946)))

(declare-fun bm!11943 () Bool)

(declare-fun call!11945 () ListLongMap!1595)

(assert (=> bm!11943 (= call!11946 call!11945)))

(declare-fun bm!11944 () Bool)

(declare-fun call!11943 () ListLongMap!1595)

(assert (=> bm!11944 (= call!11943 call!11947)))

(declare-fun b!111778 () Bool)

(assert (=> b!111778 (= e!72649 call!11943)))

(declare-fun b!111779 () Bool)

(declare-fun c!19973 () Bool)

(assert (=> b!111779 (= c!19973 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72657 () ListLongMap!1595)

(assert (=> b!111779 (= e!72657 e!72649)))

(declare-fun c!19976 () Bool)

(declare-fun bm!11941 () Bool)

(declare-fun c!19972 () Bool)

(assert (=> bm!11941 (= call!11947 (+!149 (ite c!19972 call!11944 (ite c!19976 call!11945 call!11946)) (ite (or c!19972 c!19976) (tuple2!2429 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2429 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun d!31861 () Bool)

(assert (=> d!31861 e!72651))

(declare-fun res!55167 () Bool)

(assert (=> d!31861 (=> (not res!55167) (not e!72651))))

(assert (=> d!31861 (= res!55167 (or (bvsge #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))))

(declare-fun lt!57705 () ListLongMap!1595)

(assert (=> d!31861 (= lt!57693 lt!57705)))

(declare-fun lt!57706 () Unit!3421)

(assert (=> d!31861 (= lt!57706 e!72655)))

(declare-fun c!19975 () Bool)

(assert (=> d!31861 (= c!19975 e!72654)))

(declare-fun res!55166 () Bool)

(assert (=> d!31861 (=> (not res!55166) (not e!72654))))

(assert (=> d!31861 (= res!55166 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31861 (= lt!57705 e!72660)))

(assert (=> d!31861 (= c!19972 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31861 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31861 (= (getCurrentListMap!489 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57693)))

(declare-fun b!111780 () Bool)

(assert (=> b!111780 (= e!72660 e!72657)))

(assert (=> b!111780 (= c!19976 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111781 () Bool)

(declare-fun e!72658 () Bool)

(assert (=> b!111781 (= e!72651 e!72658)))

(declare-fun c!19974 () Bool)

(assert (=> b!111781 (= c!19974 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111782 () Bool)

(assert (=> b!111782 (= e!72658 e!72652)))

(declare-fun res!55170 () Bool)

(assert (=> b!111782 (= res!55170 call!11948)))

(assert (=> b!111782 (=> (not res!55170) (not e!72652))))

(declare-fun bm!11945 () Bool)

(assert (=> bm!11945 (= call!11949 (contains!837 lt!57693 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111783 () Bool)

(declare-fun lt!57709 () Unit!3421)

(assert (=> b!111783 (= e!72655 lt!57709)))

(declare-fun lt!57698 () ListLongMap!1595)

(assert (=> b!111783 (= lt!57698 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57702 () (_ BitVec 64))

(assert (=> b!111783 (= lt!57702 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57708 () (_ BitVec 64))

(assert (=> b!111783 (= lt!57708 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57707 () Unit!3421)

(assert (=> b!111783 (= lt!57707 (addStillContains!76 lt!57698 lt!57702 (zeroValue!2498 newMap!16) lt!57708))))

(assert (=> b!111783 (contains!837 (+!149 lt!57698 (tuple2!2429 lt!57702 (zeroValue!2498 newMap!16))) lt!57708)))

(declare-fun lt!57704 () Unit!3421)

(assert (=> b!111783 (= lt!57704 lt!57707)))

(declare-fun lt!57692 () ListLongMap!1595)

(assert (=> b!111783 (= lt!57692 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57694 () (_ BitVec 64))

(assert (=> b!111783 (= lt!57694 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57695 () (_ BitVec 64))

(assert (=> b!111783 (= lt!57695 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57690 () Unit!3421)

(assert (=> b!111783 (= lt!57690 (addApplyDifferent!76 lt!57692 lt!57694 (minValue!2498 newMap!16) lt!57695))))

(assert (=> b!111783 (= (apply!100 (+!149 lt!57692 (tuple2!2429 lt!57694 (minValue!2498 newMap!16))) lt!57695) (apply!100 lt!57692 lt!57695))))

(declare-fun lt!57691 () Unit!3421)

(assert (=> b!111783 (= lt!57691 lt!57690)))

(declare-fun lt!57699 () ListLongMap!1595)

(assert (=> b!111783 (= lt!57699 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57697 () (_ BitVec 64))

(assert (=> b!111783 (= lt!57697 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57701 () (_ BitVec 64))

(assert (=> b!111783 (= lt!57701 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57700 () Unit!3421)

(assert (=> b!111783 (= lt!57700 (addApplyDifferent!76 lt!57699 lt!57697 (zeroValue!2498 newMap!16) lt!57701))))

(assert (=> b!111783 (= (apply!100 (+!149 lt!57699 (tuple2!2429 lt!57697 (zeroValue!2498 newMap!16))) lt!57701) (apply!100 lt!57699 lt!57701))))

(declare-fun lt!57703 () Unit!3421)

(assert (=> b!111783 (= lt!57703 lt!57700)))

(declare-fun lt!57710 () ListLongMap!1595)

(assert (=> b!111783 (= lt!57710 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) lt!56647 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57711 () (_ BitVec 64))

(assert (=> b!111783 (= lt!57711 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57696 () (_ BitVec 64))

(assert (=> b!111783 (= lt!57696 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111783 (= lt!57709 (addApplyDifferent!76 lt!57710 lt!57711 (minValue!2498 newMap!16) lt!57696))))

(assert (=> b!111783 (= (apply!100 (+!149 lt!57710 (tuple2!2429 lt!57711 (minValue!2498 newMap!16))) lt!57696) (apply!100 lt!57710 lt!57696))))

(declare-fun b!111784 () Bool)

(declare-fun res!55172 () Bool)

(assert (=> b!111784 (=> (not res!55172) (not e!72651))))

(assert (=> b!111784 (= res!55172 e!72653)))

(declare-fun res!55174 () Bool)

(assert (=> b!111784 (=> res!55174 e!72653)))

(assert (=> b!111784 (= res!55174 (not e!72661))))

(declare-fun res!55171 () Bool)

(assert (=> b!111784 (=> (not res!55171) (not e!72661))))

(assert (=> b!111784 (= res!55171 (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(declare-fun b!111785 () Bool)

(assert (=> b!111785 (= e!72657 call!11943)))

(declare-fun bm!11946 () Bool)

(assert (=> bm!11946 (= call!11945 call!11944)))

(declare-fun b!111786 () Bool)

(assert (=> b!111786 (= e!72658 (not call!11948))))

(declare-fun b!111787 () Bool)

(assert (=> b!111787 (= e!72659 (= (apply!100 lt!57693 (select (arr!2080 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1355 (select (arr!2081 lt!56647) #b00000000000000000000000000000000) (dynLambda!392 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111787 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 lt!56647)))))

(assert (=> b!111787 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2337 (_keys!4341 newMap!16))))))

(assert (= (and d!31861 c!19972) b!111770))

(assert (= (and d!31861 (not c!19972)) b!111780))

(assert (= (and b!111780 c!19976) b!111785))

(assert (= (and b!111780 (not c!19976)) b!111779))

(assert (= (and b!111779 c!19973) b!111778))

(assert (= (and b!111779 (not c!19973)) b!111777))

(assert (= (or b!111778 b!111777) bm!11943))

(assert (= (or b!111785 bm!11943) bm!11946))

(assert (= (or b!111785 b!111778) bm!11944))

(assert (= (or b!111770 bm!11946) bm!11940))

(assert (= (or b!111770 bm!11944) bm!11941))

(assert (= (and d!31861 res!55166) b!111774))

(assert (= (and d!31861 c!19975) b!111783))

(assert (= (and d!31861 (not c!19975)) b!111768))

(assert (= (and d!31861 res!55167) b!111784))

(assert (= (and b!111784 res!55171) b!111769))

(assert (= (and b!111784 (not res!55174)) b!111773))

(assert (= (and b!111773 res!55173) b!111787))

(assert (= (and b!111784 res!55172) b!111775))

(assert (= (and b!111775 c!19971) b!111772))

(assert (= (and b!111775 (not c!19971)) b!111776))

(assert (= (and b!111772 res!55168) b!111771))

(assert (= (or b!111772 b!111776) bm!11945))

(assert (= (and b!111775 res!55169) b!111781))

(assert (= (and b!111781 c!19974) b!111782))

(assert (= (and b!111781 (not c!19974)) b!111786))

(assert (= (and b!111782 res!55170) b!111767))

(assert (= (or b!111782 b!111786) bm!11942))

(declare-fun b_lambda!5009 () Bool)

(assert (=> (not b_lambda!5009) (not b!111787)))

(assert (=> b!111787 t!5810))

(declare-fun b_and!6881 () Bool)

(assert (= b_and!6877 (and (=> t!5810 result!3549) b_and!6881)))

(assert (=> b!111787 t!5812))

(declare-fun b_and!6883 () Bool)

(assert (= b_and!6879 (and (=> t!5812 result!3551) b_and!6883)))

(declare-fun m!127685 () Bool)

(assert (=> b!111771 m!127685))

(declare-fun m!127687 () Bool)

(assert (=> b!111770 m!127687))

(assert (=> b!111773 m!124875))

(assert (=> b!111773 m!124875))

(declare-fun m!127689 () Bool)

(assert (=> b!111773 m!127689))

(declare-fun m!127691 () Bool)

(assert (=> bm!11941 m!127691))

(assert (=> d!31861 m!124861))

(declare-fun m!127693 () Bool)

(assert (=> b!111783 m!127693))

(declare-fun m!127695 () Bool)

(assert (=> b!111783 m!127695))

(declare-fun m!127697 () Bool)

(assert (=> b!111783 m!127697))

(assert (=> b!111783 m!124875))

(declare-fun m!127699 () Bool)

(assert (=> b!111783 m!127699))

(declare-fun m!127701 () Bool)

(assert (=> b!111783 m!127701))

(declare-fun m!127703 () Bool)

(assert (=> b!111783 m!127703))

(assert (=> b!111783 m!127703))

(declare-fun m!127705 () Bool)

(assert (=> b!111783 m!127705))

(declare-fun m!127707 () Bool)

(assert (=> b!111783 m!127707))

(declare-fun m!127709 () Bool)

(assert (=> b!111783 m!127709))

(declare-fun m!127711 () Bool)

(assert (=> b!111783 m!127711))

(declare-fun m!127713 () Bool)

(assert (=> b!111783 m!127713))

(declare-fun m!127715 () Bool)

(assert (=> b!111783 m!127715))

(assert (=> b!111783 m!127713))

(declare-fun m!127717 () Bool)

(assert (=> b!111783 m!127717))

(declare-fun m!127719 () Bool)

(assert (=> b!111783 m!127719))

(assert (=> b!111783 m!127695))

(declare-fun m!127721 () Bool)

(assert (=> b!111783 m!127721))

(assert (=> b!111783 m!127701))

(declare-fun m!127723 () Bool)

(assert (=> b!111783 m!127723))

(assert (=> b!111769 m!124875))

(assert (=> b!111769 m!124875))

(assert (=> b!111769 m!124877))

(assert (=> bm!11940 m!127699))

(declare-fun m!127725 () Bool)

(assert (=> bm!11945 m!127725))

(assert (=> b!111774 m!124875))

(assert (=> b!111774 m!124875))

(assert (=> b!111774 m!124877))

(declare-fun m!127727 () Bool)

(assert (=> bm!11942 m!127727))

(assert (=> b!111787 m!124875))

(declare-fun m!127729 () Bool)

(assert (=> b!111787 m!127729))

(assert (=> b!111787 m!124937))

(declare-fun m!127731 () Bool)

(assert (=> b!111787 m!127731))

(assert (=> b!111787 m!124937))

(declare-fun m!127733 () Bool)

(assert (=> b!111787 m!127733))

(assert (=> b!111787 m!124875))

(assert (=> b!111787 m!127731))

(declare-fun m!127735 () Bool)

(assert (=> b!111767 m!127735))

(assert (=> b!110417 d!31861))

(assert (=> d!30953 d!30913))

(declare-fun d!31863 () Bool)

(declare-fun e!72664 () Bool)

(assert (=> d!31863 e!72664))

(declare-fun res!55179 () Bool)

(assert (=> d!31863 (=> (not res!55179) (not e!72664))))

(declare-fun lt!57714 () SeekEntryResult!271)

(assert (=> d!31863 (= res!55179 ((_ is Found!271) lt!57714))))

(assert (=> d!31863 (= lt!57714 (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (=> d!31863 true))

(declare-fun _$33!96 () Unit!3421)

(assert (=> d!31863 (= (choose!694 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)) _$33!96)))

(declare-fun b!111792 () Bool)

(declare-fun res!55180 () Bool)

(assert (=> b!111792 (=> (not res!55180) (not e!72664))))

(assert (=> b!111792 (= res!55180 (inRange!0 (index!3235 lt!57714) (mask!6795 newMap!16)))))

(declare-fun b!111793 () Bool)

(assert (=> b!111793 (= e!72664 (= (select (arr!2080 (_keys!4341 newMap!16)) (index!3235 lt!57714)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31863 res!55179) b!111792))

(assert (= (and b!111792 res!55180) b!111793))

(assert (=> d!31863 m!124515))

(assert (=> d!31863 m!124671))

(declare-fun m!127737 () Bool)

(assert (=> b!111792 m!127737))

(declare-fun m!127739 () Bool)

(assert (=> b!111793 m!127739))

(assert (=> d!30953 d!31863))

(assert (=> d!30953 d!31171))

(declare-fun b!111794 () Bool)

(declare-fun e!72666 () Bool)

(declare-fun e!72667 () Bool)

(assert (=> b!111794 (= e!72666 e!72667)))

(declare-fun res!55181 () Bool)

(assert (=> b!111794 (=> (not res!55181) (not e!72667))))

(declare-fun e!72665 () Bool)

(assert (=> b!111794 (= res!55181 (not e!72665))))

(declare-fun res!55182 () Bool)

(assert (=> b!111794 (=> (not res!55182) (not e!72665))))

(assert (=> b!111794 (= res!55182 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!31865 () Bool)

(declare-fun res!55183 () Bool)

(assert (=> d!31865 (=> res!55183 e!72666)))

(assert (=> d!31865 (= res!55183 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2337 (_keys!4341 (v!2929 (underlying!370 thiss!992))))))))

(assert (=> d!31865 (= (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19631 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649))) e!72666)))

(declare-fun b!111795 () Bool)

(assert (=> b!111795 (= e!72665 (contains!840 (ite c!19631 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!111796 () Bool)

(declare-fun e!72668 () Bool)

(assert (=> b!111796 (= e!72667 e!72668)))

(declare-fun c!19977 () Bool)

(assert (=> b!111796 (= c!19977 (validKeyInArray!0 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun call!11950 () Bool)

(declare-fun bm!11947 () Bool)

(assert (=> bm!11947 (= call!11950 (arrayNoDuplicates!0 (_keys!4341 (v!2929 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19977 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!19631 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649))) (ite c!19631 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)) (ite c!19522 (Cons!1648 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) Nil!1649) Nil!1649)))))))

(declare-fun b!111797 () Bool)

(assert (=> b!111797 (= e!72668 call!11950)))

(declare-fun b!111798 () Bool)

(assert (=> b!111798 (= e!72668 call!11950)))

(assert (= (and d!31865 (not res!55183)) b!111794))

(assert (= (and b!111794 res!55182) b!111795))

(assert (= (and b!111794 res!55181) b!111796))

(assert (= (and b!111796 c!19977) b!111798))

(assert (= (and b!111796 (not c!19977)) b!111797))

(assert (= (or b!111798 b!111797) bm!11947))

(declare-fun m!127741 () Bool)

(assert (=> b!111794 m!127741))

(assert (=> b!111794 m!127741))

(declare-fun m!127743 () Bool)

(assert (=> b!111794 m!127743))

(assert (=> b!111795 m!127741))

(assert (=> b!111795 m!127741))

(declare-fun m!127745 () Bool)

(assert (=> b!111795 m!127745))

(assert (=> b!111796 m!127741))

(assert (=> b!111796 m!127741))

(assert (=> b!111796 m!127743))

(assert (=> bm!11947 m!127741))

(declare-fun m!127747 () Bool)

(assert (=> bm!11947 m!127747))

(assert (=> bm!11818 d!31865))

(declare-fun d!31867 () Bool)

(declare-fun e!72669 () Bool)

(assert (=> d!31867 e!72669))

(declare-fun res!55184 () Bool)

(assert (=> d!31867 (=> res!55184 e!72669)))

(declare-fun lt!57718 () Bool)

(assert (=> d!31867 (= res!55184 (not lt!57718))))

(declare-fun lt!57715 () Bool)

(assert (=> d!31867 (= lt!57718 lt!57715)))

(declare-fun lt!57717 () Unit!3421)

(declare-fun e!72670 () Unit!3421)

(assert (=> d!31867 (= lt!57717 e!72670)))

(declare-fun c!19978 () Bool)

(assert (=> d!31867 (= c!19978 lt!57715)))

(assert (=> d!31867 (= lt!57715 (containsKey!161 (toList!813 lt!57002) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31867 (= (contains!837 lt!57002 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57718)))

(declare-fun b!111799 () Bool)

(declare-fun lt!57716 () Unit!3421)

(assert (=> b!111799 (= e!72670 lt!57716)))

(assert (=> b!111799 (= lt!57716 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!57002) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111799 (isDefined!111 (getValueByKey!157 (toList!813 lt!57002) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111800 () Bool)

(declare-fun Unit!3497 () Unit!3421)

(assert (=> b!111800 (= e!72670 Unit!3497)))

(declare-fun b!111801 () Bool)

(assert (=> b!111801 (= e!72669 (isDefined!111 (getValueByKey!157 (toList!813 lt!57002) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31867 c!19978) b!111799))

(assert (= (and d!31867 (not c!19978)) b!111800))

(assert (= (and d!31867 (not res!55184)) b!111801))

(declare-fun m!127749 () Bool)

(assert (=> d!31867 m!127749))

(declare-fun m!127751 () Bool)

(assert (=> b!111799 m!127751))

(assert (=> b!111799 m!126971))

(assert (=> b!111799 m!126971))

(declare-fun m!127753 () Bool)

(assert (=> b!111799 m!127753))

(assert (=> b!111801 m!126971))

(assert (=> b!111801 m!126971))

(assert (=> b!111801 m!127753))

(assert (=> bm!11801 d!31867))

(declare-fun lt!57719 () Bool)

(declare-fun d!31869 () Bool)

(assert (=> d!31869 (= lt!57719 (select (content!112 (toList!813 lt!56901)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(declare-fun e!72672 () Bool)

(assert (=> d!31869 (= lt!57719 e!72672)))

(declare-fun res!55186 () Bool)

(assert (=> d!31869 (=> (not res!55186) (not e!72672))))

(assert (=> d!31869 (= res!55186 ((_ is Cons!1649) (toList!813 lt!56901)))))

(assert (=> d!31869 (= (contains!839 (toList!813 lt!56901) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)) lt!57719)))

(declare-fun b!111802 () Bool)

(declare-fun e!72671 () Bool)

(assert (=> b!111802 (= e!72672 e!72671)))

(declare-fun res!55185 () Bool)

(assert (=> b!111802 (=> res!55185 e!72671)))

(assert (=> b!111802 (= res!55185 (= (h!2248 (toList!813 lt!56901)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(declare-fun b!111803 () Bool)

(assert (=> b!111803 (= e!72671 (contains!839 (t!5802 (toList!813 lt!56901)) (tuple2!2429 (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) from!355) lt!56527)))))

(assert (= (and d!31869 res!55186) b!111802))

(assert (= (and b!111802 (not res!55185)) b!111803))

(declare-fun m!127755 () Bool)

(assert (=> d!31869 m!127755))

(declare-fun m!127757 () Bool)

(assert (=> d!31869 m!127757))

(declare-fun m!127759 () Bool)

(assert (=> b!111803 m!127759))

(assert (=> b!110376 d!31869))

(declare-fun d!31871 () Bool)

(assert (=> d!31871 (= (inRange!0 (ite c!19628 (index!3235 lt!57110) (ite c!19630 (index!3234 lt!57101) (index!3237 lt!57101))) (mask!6795 newMap!16)) (and (bvsge (ite c!19628 (index!3235 lt!57110) (ite c!19630 (index!3234 lt!57101) (index!3237 lt!57101))) #b00000000000000000000000000000000) (bvslt (ite c!19628 (index!3235 lt!57110) (ite c!19630 (index!3234 lt!57101) (index!3237 lt!57101))) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11815 d!31871))

(declare-fun d!31873 () Bool)

(assert (=> d!31873 (isDefined!111 (getValueByKey!157 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!57720 () Unit!3421)

(assert (=> d!31873 (= lt!57720 (choose!702 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!72673 () Bool)

(assert (=> d!31873 e!72673))

(declare-fun res!55187 () Bool)

(assert (=> d!31873 (=> (not res!55187) (not e!72673))))

(assert (=> d!31873 (= res!55187 (isStrictlySorted!306 (toList!813 lt!56674)))))

(assert (=> d!31873 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!57720)))

(declare-fun b!111804 () Bool)

(assert (=> b!111804 (= e!72673 (containsKey!161 (toList!813 lt!56674) (select (arr!2080 (_keys!4341 (v!2929 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31873 res!55187) b!111804))

(assert (=> d!31873 m!124711))

(assert (=> d!31873 m!124887))

(assert (=> d!31873 m!124887))

(assert (=> d!31873 m!124889))

(assert (=> d!31873 m!124711))

(declare-fun m!127761 () Bool)

(assert (=> d!31873 m!127761))

(assert (=> d!31873 m!126805))

(assert (=> b!111804 m!124711))

(assert (=> b!111804 m!124883))

(assert (=> b!110218 d!31873))

(assert (=> b!110218 d!31671))

(assert (=> b!110218 d!31601))

(assert (=> d!30959 d!30961))

(assert (=> d!30959 d!30963))

(declare-fun d!31875 () Bool)

(assert (=> d!31875 (not (contains!837 (+!149 lt!56672 (tuple2!2429 lt!56675 lt!56678)) lt!56676))))

(assert (=> d!31875 true))

(declare-fun _$36!325 () Unit!3421)

(assert (=> d!31875 (= (choose!695 lt!56672 lt!56675 lt!56678 lt!56676) _$36!325)))

(declare-fun bs!4612 () Bool)

(assert (= bs!4612 d!31875))

(assert (=> bs!4612 m!124703))

(assert (=> bs!4612 m!124703))

(assert (=> bs!4612 m!124705))

(assert (=> d!30959 d!31875))

(declare-fun d!31877 () Bool)

(declare-fun e!72674 () Bool)

(assert (=> d!31877 e!72674))

(declare-fun res!55188 () Bool)

(assert (=> d!31877 (=> res!55188 e!72674)))

(declare-fun lt!57724 () Bool)

(assert (=> d!31877 (= res!55188 (not lt!57724))))

(declare-fun lt!57721 () Bool)

(assert (=> d!31877 (= lt!57724 lt!57721)))

(declare-fun lt!57723 () Unit!3421)

(declare-fun e!72675 () Unit!3421)

(assert (=> d!31877 (= lt!57723 e!72675)))

(declare-fun c!19979 () Bool)

(assert (=> d!31877 (= c!19979 lt!57721)))

(assert (=> d!31877 (= lt!57721 (containsKey!161 (toList!813 lt!56672) lt!56676))))

(assert (=> d!31877 (= (contains!837 lt!56672 lt!56676) lt!57724)))

(declare-fun b!111806 () Bool)

(declare-fun lt!57722 () Unit!3421)

(assert (=> b!111806 (= e!72675 lt!57722)))

(assert (=> b!111806 (= lt!57722 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!813 lt!56672) lt!56676))))

(assert (=> b!111806 (isDefined!111 (getValueByKey!157 (toList!813 lt!56672) lt!56676))))

(declare-fun b!111807 () Bool)

(declare-fun Unit!3498 () Unit!3421)

(assert (=> b!111807 (= e!72675 Unit!3498)))

(declare-fun b!111808 () Bool)

(assert (=> b!111808 (= e!72674 (isDefined!111 (getValueByKey!157 (toList!813 lt!56672) lt!56676)))))

(assert (= (and d!31877 c!19979) b!111806))

(assert (= (and d!31877 (not c!19979)) b!111807))

(assert (= (and d!31877 (not res!55188)) b!111808))

(declare-fun m!127763 () Bool)

(assert (=> d!31877 m!127763))

(declare-fun m!127765 () Bool)

(assert (=> b!111806 m!127765))

(declare-fun m!127767 () Bool)

(assert (=> b!111806 m!127767))

(assert (=> b!111806 m!127767))

(declare-fun m!127769 () Bool)

(assert (=> b!111806 m!127769))

(assert (=> b!111808 m!127767))

(assert (=> b!111808 m!127767))

(assert (=> b!111808 m!127769))

(assert (=> d!30959 d!31877))

(declare-fun d!31879 () Bool)

(declare-fun lt!57725 () Bool)

(assert (=> d!31879 (= lt!57725 (select (content!112 lt!56839) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun e!72677 () Bool)

(assert (=> d!31879 (= lt!57725 e!72677)))

(declare-fun res!55190 () Bool)

(assert (=> d!31879 (=> (not res!55190) (not e!72677))))

(assert (=> d!31879 (= res!55190 ((_ is Cons!1649) lt!56839))))

(assert (=> d!31879 (= (contains!839 lt!56839 (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))) lt!57725)))

(declare-fun b!111809 () Bool)

(declare-fun e!72676 () Bool)

(assert (=> b!111809 (= e!72677 e!72676)))

(declare-fun res!55189 () Bool)

(assert (=> b!111809 (=> res!55189 e!72676)))

(assert (=> b!111809 (= res!55189 (= (h!2248 lt!56839) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(declare-fun b!111810 () Bool)

(assert (=> b!111810 (= e!72676 (contains!839 (t!5802 lt!56839) (tuple2!2429 (_1!1224 lt!56528) (_2!1224 lt!56528))))))

(assert (= (and d!31879 res!55190) b!111809))

(assert (= (and b!111809 (not res!55189)) b!111810))

(declare-fun m!127771 () Bool)

(assert (=> d!31879 m!127771))

(declare-fun m!127773 () Bool)

(assert (=> d!31879 m!127773))

(declare-fun m!127775 () Bool)

(assert (=> b!111810 m!127775))

(assert (=> b!110306 d!31879))

(declare-fun b!111811 () Bool)

(declare-fun e!72680 () Bool)

(declare-fun call!11951 () Bool)

(assert (=> b!111811 (= e!72680 call!11951)))

(declare-fun b!111812 () Bool)

(declare-fun e!72679 () Bool)

(assert (=> b!111812 (= e!72679 e!72680)))

(declare-fun lt!57728 () (_ BitVec 64))

(assert (=> b!111812 (= lt!57728 (select (arr!2080 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!57726 () Unit!3421)

(assert (=> b!111812 (= lt!57726 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4341 newMap!16) lt!57728 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!111812 (arrayContainsKey!0 (_keys!4341 newMap!16) lt!57728 #b00000000000000000000000000000000)))

(declare-fun lt!57727 () Unit!3421)

(assert (=> b!111812 (= lt!57727 lt!57726)))

(declare-fun res!55192 () Bool)

(assert (=> b!111812 (= res!55192 (= (seekEntryOrOpen!0 (select (arr!2080 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4341 newMap!16) (mask!6795 newMap!16)) (Found!271 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!111812 (=> (not res!55192) (not e!72680))))

(declare-fun bm!11948 () Bool)

(assert (=> bm!11948 (= call!11951 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun b!111813 () Bool)

(declare-fun e!72678 () Bool)

(assert (=> b!111813 (= e!72678 e!72679)))

(declare-fun c!19980 () Bool)

(assert (=> b!111813 (= c!19980 (validKeyInArray!0 (select (arr!2080 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!31881 () Bool)

(declare-fun res!55191 () Bool)

(assert (=> d!31881 (=> res!55191 e!72678)))

(assert (=> d!31881 (= res!55191 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2337 (_keys!4341 newMap!16))))))

(assert (=> d!31881 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4341 newMap!16) (mask!6795 newMap!16)) e!72678)))

(declare-fun b!111814 () Bool)

(assert (=> b!111814 (= e!72679 call!11951)))

(assert (= (and d!31881 (not res!55191)) b!111813))

(assert (= (and b!111813 c!19980) b!111812))

(assert (= (and b!111813 (not c!19980)) b!111814))

(assert (= (and b!111812 res!55192) b!111811))

(assert (= (or b!111811 b!111814) bm!11948))

(assert (=> b!111812 m!125681))

(declare-fun m!127777 () Bool)

(assert (=> b!111812 m!127777))

(declare-fun m!127779 () Bool)

(assert (=> b!111812 m!127779))

(assert (=> b!111812 m!125681))

(declare-fun m!127781 () Bool)

(assert (=> b!111812 m!127781))

(declare-fun m!127783 () Bool)

(assert (=> bm!11948 m!127783))

(assert (=> b!111813 m!125681))

(assert (=> b!111813 m!125681))

(assert (=> b!111813 m!126801))

(assert (=> bm!11789 d!31881))

(declare-fun b!111815 () Bool)

(declare-fun e!72682 () Bool)

(assert (=> b!111815 (= e!72682 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4013 () Bool)

(declare-fun mapRes!4013 () Bool)

(declare-fun tp!10043 () Bool)

(assert (=> mapNonEmpty!4013 (= mapRes!4013 (and tp!10043 e!72682))))

(declare-fun mapValue!4013 () ValueCell!1005)

(declare-fun mapKey!4013 () (_ BitVec 32))

(declare-fun mapRest!4013 () (Array (_ BitVec 32) ValueCell!1005))

(assert (=> mapNonEmpty!4013 (= mapRest!4012 (store mapRest!4013 mapKey!4013 mapValue!4013))))

(declare-fun mapIsEmpty!4013 () Bool)

(assert (=> mapIsEmpty!4013 mapRes!4013))

(declare-fun b!111816 () Bool)

(declare-fun e!72681 () Bool)

(assert (=> b!111816 (= e!72681 tp_is_empty!2697)))

(declare-fun condMapEmpty!4013 () Bool)

(declare-fun mapDefault!4013 () ValueCell!1005)

(assert (=> mapNonEmpty!4012 (= condMapEmpty!4013 (= mapRest!4012 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4013)))))

(assert (=> mapNonEmpty!4012 (= tp!10042 (and e!72681 mapRes!4013))))

(assert (= (and mapNonEmpty!4012 condMapEmpty!4013) mapIsEmpty!4013))

(assert (= (and mapNonEmpty!4012 (not condMapEmpty!4013)) mapNonEmpty!4013))

(assert (= (and mapNonEmpty!4013 ((_ is ValueCellFull!1005) mapValue!4013)) b!111815))

(assert (= (and mapNonEmpty!4012 ((_ is ValueCellFull!1005) mapDefault!4013)) b!111816))

(declare-fun m!127785 () Bool)

(assert (=> mapNonEmpty!4013 m!127785))

(declare-fun b!111817 () Bool)

(declare-fun e!72684 () Bool)

(assert (=> b!111817 (= e!72684 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4014 () Bool)

(declare-fun mapRes!4014 () Bool)

(declare-fun tp!10044 () Bool)

(assert (=> mapNonEmpty!4014 (= mapRes!4014 (and tp!10044 e!72684))))

(declare-fun mapKey!4014 () (_ BitVec 32))

(declare-fun mapRest!4014 () (Array (_ BitVec 32) ValueCell!1005))

(declare-fun mapValue!4014 () ValueCell!1005)

(assert (=> mapNonEmpty!4014 (= mapRest!4011 (store mapRest!4014 mapKey!4014 mapValue!4014))))

(declare-fun mapIsEmpty!4014 () Bool)

(assert (=> mapIsEmpty!4014 mapRes!4014))

(declare-fun b!111818 () Bool)

(declare-fun e!72683 () Bool)

(assert (=> b!111818 (= e!72683 tp_is_empty!2697)))

(declare-fun condMapEmpty!4014 () Bool)

(declare-fun mapDefault!4014 () ValueCell!1005)

(assert (=> mapNonEmpty!4011 (= condMapEmpty!4014 (= mapRest!4011 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4014)))))

(assert (=> mapNonEmpty!4011 (= tp!10041 (and e!72683 mapRes!4014))))

(assert (= (and mapNonEmpty!4011 condMapEmpty!4014) mapIsEmpty!4014))

(assert (= (and mapNonEmpty!4011 (not condMapEmpty!4014)) mapNonEmpty!4014))

(assert (= (and mapNonEmpty!4014 ((_ is ValueCellFull!1005) mapValue!4014)) b!111817))

(assert (= (and mapNonEmpty!4011 ((_ is ValueCellFull!1005) mapDefault!4014)) b!111818))

(declare-fun m!127787 () Bool)

(assert (=> mapNonEmpty!4014 m!127787))

(declare-fun b_lambda!5011 () Bool)

(assert (= b_lambda!4993 (or (and b!109812 b_free!2561) (and b!109809 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))))) b_lambda!5011)))

(declare-fun b_lambda!5013 () Bool)

(assert (= b_lambda!5005 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5013)))

(declare-fun b_lambda!5015 () Bool)

(assert (= b_lambda!4989 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5015)))

(declare-fun b_lambda!5017 () Bool)

(assert (= b_lambda!5001 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5017)))

(declare-fun b_lambda!5019 () Bool)

(assert (= b_lambda!4995 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5019)))

(declare-fun b_lambda!5021 () Bool)

(assert (= b_lambda!5009 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5021)))

(declare-fun b_lambda!5023 () Bool)

(assert (= b_lambda!4981 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5023)))

(declare-fun b_lambda!5025 () Bool)

(assert (= b_lambda!4983 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5025)))

(declare-fun b_lambda!5027 () Bool)

(assert (= b_lambda!4985 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5027)))

(declare-fun b_lambda!5029 () Bool)

(assert (= b_lambda!4987 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5029)))

(declare-fun b_lambda!5031 () Bool)

(assert (= b_lambda!4997 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5031)))

(declare-fun b_lambda!5033 () Bool)

(assert (= b_lambda!4999 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5033)))

(declare-fun b_lambda!5035 () Bool)

(assert (= b_lambda!4991 (or (and b!109812 b_free!2561) (and b!109809 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))))) b_lambda!5035)))

(declare-fun b_lambda!5037 () Bool)

(assert (= b_lambda!5007 (or (and b!109812 b_free!2561 (= (defaultEntry!2627 (v!2929 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109809 b_free!2563) b_lambda!5037)))

(check-sat (not b!111596) (not bm!11945) (not d!31355) (not b!111178) (not b!111446) (not d!31145) (not b!111366) (not b!111557) (not d!31527) (not b!111458) (not b!111262) (not d!31807) (not b!111577) (not b!111649) (not b!110834) (not b!110982) (not b!111600) (not bm!11857) (not d!31431) (not bm!11915) (not b!111186) (not b!110840) (not b!111794) (not b_lambda!4959) (not d!31437) (not bm!11861) (not b!110716) (not d!31747) (not b!110752) (not d!31341) (not b!111555) (not b!110764) (not b!110673) (not b!111042) (not d!31133) (not b!111720) (not b!111666) (not b!111004) (not b!110922) (not b!110886) (not d!31387) (not bm!11924) (not d!31491) (not b!111574) (not b!111220) (not b!111324) (not d!31163) (not b!111415) (not d!31333) (not b!110811) (not b!111312) (not b!111048) (not b!111544) (not d!31663) (not b!111545) (not b!111435) (not b!111611) (not d!31879) (not b!110919) (not d!31523) (not b!111753) (not d!31277) (not b!110798) (not b!110684) (not b!111560) (not d!31351) (not b!111641) (not b!111710) (not b!111295) (not d!31199) (not b!111452) (not d!31323) (not b!111037) (not b!111605) (not b!110950) (not b!110694) (not d!31639) (not b!110943) (not d!31859) (not b!111231) (not b!110718) (not b!110774) (not b!111381) (not b!111046) (not d!31583) (not b!110829) (not b!111146) tp_is_empty!2697 (not bm!11848) (not d!31137) (not b!111729) (not b!111213) (not d!31655) (not b!110999) (not b!111111) (not b!111223) (not d!31729) (not b!110863) (not b!111737) (not b!110790) (not b!110852) (not d!31183) (not d!31641) (not b!111242) (not d!31131) (not bm!11908) (not d!31671) (not b!111267) (not b!110771) (not b_lambda!5011) (not b!111792) (not bm!11825) (not d!31543) (not b!111783) (not d!31775) (not d!31453) (not b!111688) (not b!110762) (not b!111176) (not d!31759) (not b!110804) (not d!31331) (not b!111712) (not bm!11871) (not b!111071) (not b!111168) (not b!111769) (not b!111416) (not d!31717) (not d!31433) (not b!111804) (not b!110929) (not b!111693) (not d!31697) (not d!31225) (not b!111374) (not b!111319) (not b!111669) (not b!111112) (not d!31295) (not b!111413) (not b!110668) (not b!110801) (not b!111691) (not b!111439) (not d!31141) (not d!31383) (not d!31393) (not d!31401) (not b!111714) (not d!31321) (not bm!11876) (not b!111371) (not b!110993) (not bm!11842) (not b!111273) (not b!111619) (not d!31385) (not d!31781) (not d!31577) (not d!31753) (not d!31795) (not d!31765) (not b!111608) (not mapNonEmpty!4014) (not b!110848) (not b!111081) (not d!31221) (not d!31531) (not bm!11889) (not d!31261) (not b_lambda!5035) (not b!110766) (not b!111061) (not d!31829) (not b!110997) (not bm!11822) (not b!110757) (not b!111491) (not d!31869) (not b!111123) (not d!31853) (not bm!11941) (not b!110872) (not b!110815) (not b!110701) (not d!31515) (not b!111333) (not d!31391) (not d!31143) (not bm!11940) (not b!111622) (not d!31195) (not d!31357) (not b!111187) (not b!111426) (not b_lambda!5023) (not b!110921) (not b!111534) (not b!111616) (not d!31217) (not b!111363) (not b!111045) (not d!31793) (not b!111222) (not bm!11835) (not b!110796) (not bm!11858) (not b!111627) (not d!31157) (not b!110693) (not d!31367) (not b!111630) (not d!31785) (not d!31695) (not bm!11896) (not b!111548) (not d!31605) (not d!31705) (not b!111119) (not d!31415) (not b!111230) (not b!110675) (not b_lambda!5019) (not b!111286) (not b!111322) (not b!111161) (not d!31509) (not b!110683) (not b!111330) (not b!111474) (not b!110794) (not b!111068) (not bm!11841) (not bm!11933) (not d!31211) (not b!110924) (not d!31421) (not b!111774) (not b!110926) (not b!111245) (not b!110917) (not d!31623) (not b!111228) (not b!111325) (not b_next!2563) (not b!111773) (not d!31769) (not d!31751) (not d!31727) (not b!111762) (not b!111766) (not b!111180) (not b!111172) (not d!31311) (not bm!11831) (not d!31533) (not b!111085) (not b_lambda!5013) (not b!110697) (not b!110940) (not b!111810) (not bm!11947) (not b!111047) (not b!110832) (not bm!11921) (not b!111106) (not d!31713) (not b!111683) (not b!111300) (not d!31495) (not d!31229) (not b!111603) (not b!111217) (not bm!11879) (not b!111159) (not b!111185) (not b!111674) (not d!31237) (not b!110819) (not d!31631) (not b!110708) (not b!111459) (not b!111069) (not d!31135) (not b!111370) (not d!31861) (not b_lambda!5025) b_and!6881 (not d!31547) (not b!111527) (not b!110894) (not b!111629) (not b!110888) (not b!111440) (not b!110964) (not b!111423) (not b!111128) (not b!111487) (not b!111696) (not b!111297) (not b!111188) (not b!111422) (not b!111239) (not d!31233) (not b!111026) (not d!31585) (not b!111668) (not b!110767) (not b_lambda!5031) (not b!111624) (not b!111592) (not b!110770) (not b!111339) (not b!111418) (not d!31429) (not bm!11838) (not d!31475) (not b!111650) (not b!111280) (not b!111585) (not b!111532) (not b!111249) (not b!111001) (not d!31707) (not b!111305) (not d!31657) (not b!111191) (not b!111030) (not b!111306) (not b!111278) (not b!110662) (not b!111194) (not b!110839) (not d!31863) (not b!111153) (not d!31161) (not d!31737) (not b!110812) (not b!110685) (not b!111272) (not b_lambda!4979) (not b!110897) (not d!31153) (not b!110734) (not b!111654) (not b!110698) (not d!31149) (not d!31209) (not b!111425) (not b!111494) (not d!31347) (not d!31715) (not b!111059) (not b!111142) (not bm!11854) (not d!31201) (not b!110772) (not b!110761) (not d!31117) (not b!111316) (not b!110700) (not b!111449) (not b!111749) (not d!31603) (not d!31299) (not b!111723) (not d!31507) (not d!31343) (not d!31283) (not b!110739) (not b!111317) (not d!31275) (not b!110870) (not b!111530) (not bm!11830) (not b!110974) (not d!31309) (not b!110687) (not b!111796) (not b!111309) (not d!31569) (not b!111562) (not b!111116) (not b!111700) (not b!111726) (not b!110939) (not d!31219) (not b!110686) (not b!111634) (not bm!11948) (not b!111561) (not b!111655) (not b_lambda!5029) (not b!111162) (not b_lambda!4947) (not d!31645) (not d!31805) (not d!31689) (not b!111470) (not b!110988) (not b!111441) (not b!111552) (not d!31725) (not b!110699) (not b!111151) (not bm!11903) (not b!111801) (not b!111744) (not b!110721) (not b!111281) (not b!111732) (not d!31425) (not bm!11906) (not b!110781) (not d!31169) (not bm!11878) (not d!31489) (not d!31701) (not bm!11900) (not b!111537) (not d!31851) (not bm!11824) (not d!31245) (not d!31479) (not b!110672) (not d!31279) (not b!110763) (not d!31563) (not d!31191) (not b!111200) (not b!111274) (not bm!11849) (not b!111380) (not d!31255) (not b!110751) (not d!31653) (not d!31801) (not b!111803) (not b!110682) (not d!31803) (not d!31545) (not d!31535) (not d!31873) (not b!111358) (not b!110743) (not d!31499) (not d!31395) (not d!31377) (not d!31593) (not b!110983) (not d!31213) (not d!31247) (not d!31561) (not b!110827) (not b!111114) (not b!110898) (not d!31791) (not b!111033) (not b!110773) (not d!31441) (not b!110722) (not b!111584) (not b!111385) (not b!111647) (not b!110853) (not b!111244) (not d!31513) (not bm!11823) (not bm!11884) (not b!111235) (not d!31581) (not d!31683) (not d!31709) (not bm!11865) (not d!31159) (not b!110959) (not b!111268) (not d!31129) (not d!31761) (not b!111271) (not b!111193) (not b!111597) (not b!111032) (not b!111289) (not d!31539) (not b!110991) (not d!31147) (not b!110665) (not b!111715) (not b_lambda!4955) (not b!111149) (not b!111642) (not b_lambda!5033) (not d!31469) (not b!110934) (not bm!11897) (not b!111559) (not b!110789) (not b!111201) (not b!110696) (not b!110775) (not d!31627) (not b!111739) (not b!111806) (not b!111340) (not bm!11893) (not bm!11870) (not bm!11927) (not b!111482) (not d!31617) (not b!111197) (not bm!11937) (not d!31503) (not b!111713) (not b!110753) (not d!31735) (not d!31119) (not b!111795) (not d!31445) (not b!111767) (not b!111524) (not b!110961) (not b!110906) (not d!31125) (not b!111270) (not b!110799) (not d!31303) (not b!110846) (not b!111064) (not b!111443) (not b!110881) (not d!31189) (not d!31733) (not b!110720) (not d!31315) (not d!31739) (not d!31787) (not b!111204) (not d!31755) (not b!111156) (not d!31239) (not b!111360) (not b!111677) (not b!110704) (not b!111663) (not b!111288) (not d!31557) (not d!31223) (not d!31877) (not b!111351) (not d!31417) (not d!31447) (not b!111181) (not b!111378) (not b!111638) (not b!110955) (not d!31615) (not b!111292) (not b_lambda!4975) (not bm!11862) (not b!111329) (not d!31175) (not b_lambda!4971) (not d!31847) (not b!111736) (not b!111479) (not d!31337) (not bm!11942) (not b!111454) (not d!31665) (not b!110971) (not b!111196) (not b!110843) (not b!111000) (not b!110976) (not b!111588) (not d!31773) (not b!111053) (not bm!11901) (not bm!11873) (not bm!11936) (not b!111236) (not b!111770) (not b!111569) (not bm!11856) (not b!111171) (not d!31227) (not b!111704) (not d!31745) (not d!31687) (not d!31139) (not d!31481) (not b!110823) (not b!111167) (not b!111448) (not b!110932) (not d!31783) (not b!111658) (not b!111813) (not b_lambda!4977) (not b!111564) (not d!31477) (not b!110670) (not b!111644) (not bm!11859) (not b!110901) (not d!31231) (not d!31723) (not b!110927) (not b!110806) (not b!110715) (not b_next!2561) (not b!111466) (not b!111248) (not b!111337) (not d!31767) (not bm!11872) (not b!111531) (not d!31643) (not b!111003) (not b!111742) (not b!111152) (not b!111572) (not b!110968) (not b!110807) (not b!111129) (not d!31749) (not b!110821) (not bm!11828) (not b!110791) (not b!111419) (not b!111258) (not b!110935) (not b!110725) (not b!110887) (not bm!11890) (not b!111685) (not bm!11930) (not d!31203) (not b!110980) (not b!110860) (not b!110824) (not d!31271) (not b!111771) (not d!31573) (not b!111072) (not b!111661) (not b!111121) (not b!110896) (not b!111314) (not b!110892) (not b!111264) (not b!111462) (not d!31165) (not b!111635) (not b!111497) (not b!110909) (not d!31251) (not d!31485) (not b!111348) (not b!111579) (not d!31187) (not b!110749) (not d!31551) (not d!31207) (not b!111610) (not b!111489) (not b!110895) (not d!31173) (not b!110778) (not b!111566) (not d!31423) (not d!31269) (not b!111355) (not b!111113) (not b!110952) (not d!31369) (not b!110747) (not b!111563) (not b!111485) (not d!31151) (not b!111276) (not b!110724) (not b!111099) (not b!111284) (not b!111017) (not b!111342) (not b!110783) (not b!111568) (not d!31363) (not d!31875) (not b!111529) (not b!110835) (not b!111174) (not b!111169) (not b!110885) (not b!111456) (not d!31525) (not b!111764) (not b_lambda!4957) (not b!111421) (not b!110678) (not d!31799) (not b!110738) (not b_lambda!5015) (not d!31215) (not b_lambda!5027) (not b!111469) (not bm!11914) (not bm!11867) (not d!31731) (not d!31253) (not b!110826) (not b!111104) (not b!111477) (not d!31571) (not d!31673) (not b!111615) (not b!111354) (not b!111539) (not b!111027) (not bm!11902) (not b!111812) (not d!31379) (not d!31679) (not d!31521) (not b!110688) (not bm!11845) (not b!110676) (not bm!11887) (not b_lambda!5037) (not b!111451) (not b!111673) (not b!110786) (not d!31777) (not d!31501) (not d!31155) (not b!110769) (not b!111134) (not bm!11860) (not b!111734) (not b!111808) (not b!110740) (not b!110717) (not b!110905) (not b!111346) (not b!110765) (not d!31743) (not b!111263) (not d!31611) (not b!111190) (not b!111173) (not b!111137) (not b!111029) (not b_lambda!4973) (not bm!11851) (not bm!11882) (not b!111165) (not b!110883) (not b_lambda!5003) (not b_lambda!5017) (not b!110856) (not b!111067) (not b!111787) (not b!111708) (not b!111189) (not mapNonEmpty!4013) (not b!110867) (not b!111745) (not b!111758) (not b!110978) (not d!31867) (not b!111681) (not b!110788) (not b!110690) (not d!31741) (not d!31519) (not b!111266) (not b!111799) (not b!111203) (not b!111199) (not b_lambda!5021) (not b!110878) (not b!111225) (not b!111731) (not b!111279) (not d!31389) (not b!110985) (not b!111246) (not d!31319) (not b!110692) (not d!31167) (not b!111570) (not bm!11913) (not b!111750) (not d!31403) (not b!110893) (not d!31397) (not bm!11850) (not b!111057) (not b!111365) (not b!110880) (not b!111357) (not b!111126) (not d!31703) (not b!110948) (not b!110793) (not b!111580) (not b!111013) (not d!31685) (not d!31259) (not b!110996) (not bm!11832) (not b!111341) (not d!31595) (not d!31843) (not b!111133) (not bm!11918) (not d!31537) b_and!6883 (not b!111065) (not b!111109) (not d!31205) (not bm!11883) (not b!111540) (not d!31413))
(check-sat b_and!6881 b_and!6883 (not b_next!2561) (not b_next!2563))
