; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10198 () Bool)

(assert start!10198)

(declare-fun b!77850 () Bool)

(declare-fun b_free!2189 () Bool)

(declare-fun b_next!2189 () Bool)

(assert (=> b!77850 (= b_free!2189 (not b_next!2189))))

(declare-fun tp!8770 () Bool)

(declare-fun b_and!4785 () Bool)

(assert (=> b!77850 (= tp!8770 b_and!4785)))

(declare-fun b!77841 () Bool)

(declare-fun b_free!2191 () Bool)

(declare-fun b_next!2191 () Bool)

(assert (=> b!77841 (= b_free!2191 (not b_next!2191))))

(declare-fun tp!8768 () Bool)

(declare-fun b_and!4787 () Bool)

(assert (=> b!77841 (= tp!8768 b_and!4787)))

(declare-fun mapNonEmpty!3303 () Bool)

(declare-fun mapRes!3304 () Bool)

(declare-fun tp!8767 () Bool)

(declare-fun e!50913 () Bool)

(assert (=> mapNonEmpty!3303 (= mapRes!3304 (and tp!8767 e!50913))))

(declare-datatypes ((V!2995 0))(
  ( (V!2996 (val!1300 Int)) )
))
(declare-datatypes ((array!3974 0))(
  ( (array!3975 (arr!1894 (Array (_ BitVec 32) (_ BitVec 64))) (size!2135 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!912 0))(
  ( (ValueCellFull!912 (v!2593 V!2995)) (EmptyCell!912) )
))
(declare-datatypes ((array!3976 0))(
  ( (array!3977 (arr!1895 (Array (_ BitVec 32) ValueCell!912)) (size!2136 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!732 0))(
  ( (LongMapFixedSize!733 (defaultEntry!2272 Int) (mask!6268 (_ BitVec 32)) (extraKeys!2123 (_ BitVec 32)) (zeroValue!2170 V!2995) (minValue!2170 V!2995) (_size!415 (_ BitVec 32)) (_keys!3932 array!3974) (_values!2255 array!3976) (_vacant!415 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!540 0))(
  ( (Cell!541 (v!2594 LongMapFixedSize!732)) )
))
(declare-datatypes ((LongMap!540 0))(
  ( (LongMap!541 (underlying!281 Cell!540)) )
))
(declare-fun thiss!992 () LongMap!540)

(declare-fun mapRest!3304 () (Array (_ BitVec 32) ValueCell!912))

(declare-fun mapValue!3304 () ValueCell!912)

(declare-fun mapKey!3304 () (_ BitVec 32))

(assert (=> mapNonEmpty!3303 (= (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (store mapRest!3304 mapKey!3304 mapValue!3304))))

(declare-fun b!77839 () Bool)

(declare-fun tp_is_empty!2511 () Bool)

(assert (=> b!77839 (= e!50913 tp_is_empty!2511)))

(declare-fun b!77840 () Bool)

(declare-fun e!50922 () Bool)

(declare-fun e!50923 () Bool)

(assert (=> b!77840 (= e!50922 (and e!50923 mapRes!3304))))

(declare-fun condMapEmpty!3304 () Bool)

(declare-fun mapDefault!3304 () ValueCell!912)

(assert (=> b!77840 (= condMapEmpty!3304 (= (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3304)))))

(declare-fun e!50916 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!732)

(declare-fun e!50919 () Bool)

(declare-fun array_inv!1129 (array!3974) Bool)

(declare-fun array_inv!1130 (array!3976) Bool)

(assert (=> b!77841 (= e!50919 (and tp!8768 tp_is_empty!2511 (array_inv!1129 (_keys!3932 newMap!16)) (array_inv!1130 (_values!2255 newMap!16)) e!50916))))

(declare-fun b!77842 () Bool)

(declare-fun e!50921 () Bool)

(declare-fun e!50928 () Bool)

(assert (=> b!77842 (= e!50921 e!50928)))

(declare-fun res!40805 () Bool)

(assert (=> b!77842 (=> (not res!40805) (not e!50928))))

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!77842 (= res!40805 (and (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!35780 () V!2995)

(declare-fun get!1189 (ValueCell!912 V!2995) V!2995)

(declare-fun dynLambda!346 (Int (_ BitVec 64)) V!2995)

(assert (=> b!77842 (= lt!35780 (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) from!355) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun mapIsEmpty!3303 () Bool)

(assert (=> mapIsEmpty!3303 mapRes!3304))

(declare-fun b!77843 () Bool)

(declare-fun e!50915 () Bool)

(assert (=> b!77843 (= e!50915 (= (size!2136 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6268 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!77844 () Bool)

(declare-fun e!50925 () Bool)

(declare-fun e!50927 () Bool)

(assert (=> b!77844 (= e!50925 e!50927)))

(declare-fun b!77845 () Bool)

(declare-fun e!50917 () Bool)

(assert (=> b!77845 (= e!50928 e!50917)))

(declare-fun res!40807 () Bool)

(assert (=> b!77845 (=> (not res!40807) (not e!50917))))

(declare-datatypes ((tuple2!2188 0))(
  ( (tuple2!2189 (_1!1104 Bool) (_2!1104 LongMapFixedSize!732)) )
))
(declare-fun lt!35772 () tuple2!2188)

(assert (=> b!77845 (= res!40807 (and (_1!1104 lt!35772) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!2263 0))(
  ( (Unit!2264) )
))
(declare-fun lt!35786 () Unit!2263)

(declare-fun e!50914 () Unit!2263)

(assert (=> b!77845 (= lt!35786 e!50914)))

(declare-datatypes ((tuple2!2190 0))(
  ( (tuple2!2191 (_1!1105 (_ BitVec 64)) (_2!1105 V!2995)) )
))
(declare-datatypes ((List!1533 0))(
  ( (Nil!1530) (Cons!1529 (h!2117 tuple2!2190) (t!5183 List!1533)) )
))
(declare-datatypes ((ListLongMap!1465 0))(
  ( (ListLongMap!1466 (toList!748 List!1533)) )
))
(declare-fun lt!35787 () ListLongMap!1465)

(declare-fun c!11899 () Bool)

(declare-fun contains!745 (ListLongMap!1465 (_ BitVec 64)) Bool)

(assert (=> b!77845 (= c!11899 (contains!745 lt!35787 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun update!111 (LongMapFixedSize!732 (_ BitVec 64) V!2995) tuple2!2188)

(assert (=> b!77845 (= lt!35772 (update!111 newMap!16 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))

(declare-fun b!77846 () Bool)

(declare-fun Unit!2265 () Unit!2263)

(assert (=> b!77846 (= e!50914 Unit!2265)))

(declare-fun b!77847 () Bool)

(assert (=> b!77847 (= e!50917 (not e!50915))))

(declare-fun res!40806 () Bool)

(assert (=> b!77847 (=> res!40806 e!50915)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!77847 (= res!40806 (not (validMask!0 (mask!6268 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun lt!35784 () tuple2!2190)

(declare-fun lt!35781 () ListLongMap!1465)

(declare-fun lt!35777 () ListLongMap!1465)

(declare-fun lt!35783 () tuple2!2190)

(declare-fun +!109 (ListLongMap!1465 tuple2!2190) ListLongMap!1465)

(assert (=> b!77847 (= (+!109 lt!35781 lt!35784) (+!109 (+!109 lt!35777 lt!35784) lt!35783))))

(assert (=> b!77847 (= lt!35784 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun lt!35779 () Unit!2263)

(declare-fun addCommutativeForDiffKeys!28 (ListLongMap!1465 (_ BitVec 64) V!2995 (_ BitVec 64) V!2995) Unit!2263)

(assert (=> b!77847 (= lt!35779 (addCommutativeForDiffKeys!28 lt!35777 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun lt!35771 () ListLongMap!1465)

(assert (=> b!77847 (= lt!35771 lt!35781)))

(assert (=> b!77847 (= lt!35781 (+!109 lt!35777 lt!35783))))

(declare-fun lt!35776 () ListLongMap!1465)

(declare-fun lt!35788 () tuple2!2190)

(assert (=> b!77847 (= lt!35771 (+!109 lt!35776 lt!35788))))

(declare-fun lt!35785 () ListLongMap!1465)

(assert (=> b!77847 (= lt!35777 (+!109 lt!35785 lt!35788))))

(assert (=> b!77847 (= lt!35788 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))

(assert (=> b!77847 (= lt!35776 (+!109 lt!35785 lt!35783))))

(assert (=> b!77847 (= lt!35783 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))

(declare-fun lt!35774 () Unit!2263)

(assert (=> b!77847 (= lt!35774 (addCommutativeForDiffKeys!28 lt!35785 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!73 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) Int) ListLongMap!1465)

(assert (=> b!77847 (= lt!35785 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun mapIsEmpty!3304 () Bool)

(declare-fun mapRes!3303 () Bool)

(assert (=> mapIsEmpty!3304 mapRes!3303))

(declare-fun b!77849 () Bool)

(declare-fun e!50924 () Bool)

(assert (=> b!77849 (= e!50924 tp_is_empty!2511)))

(declare-fun e!50918 () Bool)

(assert (=> b!77850 (= e!50918 (and tp!8770 tp_is_empty!2511 (array_inv!1129 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (array_inv!1130 (_values!2255 (v!2594 (underlying!281 thiss!992)))) e!50922))))

(declare-fun b!77851 () Bool)

(declare-fun res!40802 () Bool)

(declare-fun e!50926 () Bool)

(assert (=> b!77851 (=> (not res!40802) (not e!50926))))

(declare-fun valid!313 (LongMapFixedSize!732) Bool)

(assert (=> b!77851 (= res!40802 (valid!313 newMap!16))))

(declare-fun b!77852 () Bool)

(declare-fun Unit!2266 () Unit!2263)

(assert (=> b!77852 (= e!50914 Unit!2266)))

(declare-fun lt!35778 () Unit!2263)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!64 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) (_ BitVec 32) Int) Unit!2263)

(assert (=> b!77852 (= lt!35778 (lemmaListMapContainsThenArrayContainsFrom!64 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3974 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!77852 (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!35775 () Unit!2263)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3974 (_ BitVec 32) (_ BitVec 32)) Unit!2263)

(assert (=> b!77852 (= lt!35775 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1534 0))(
  ( (Nil!1531) (Cons!1530 (h!2118 (_ BitVec 64)) (t!5184 List!1534)) )
))
(declare-fun arrayNoDuplicates!0 (array!3974 (_ BitVec 32) List!1534) Bool)

(assert (=> b!77852 (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) from!355 Nil!1531)))

(declare-fun lt!35773 () Unit!2263)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3974 (_ BitVec 32) (_ BitVec 64) List!1534) Unit!2263)

(assert (=> b!77852 (= lt!35773 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531)))))

(assert (=> b!77852 false))

(declare-fun b!77853 () Bool)

(assert (=> b!77853 (= e!50923 tp_is_empty!2511)))

(declare-fun b!77854 () Bool)

(declare-fun res!40803 () Bool)

(assert (=> b!77854 (=> (not res!40803) (not e!50926))))

(assert (=> b!77854 (= res!40803 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6268 newMap!16)) (_size!415 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun mapNonEmpty!3304 () Bool)

(declare-fun tp!8769 () Bool)

(assert (=> mapNonEmpty!3304 (= mapRes!3303 (and tp!8769 e!50924))))

(declare-fun mapRest!3303 () (Array (_ BitVec 32) ValueCell!912))

(declare-fun mapValue!3303 () ValueCell!912)

(declare-fun mapKey!3303 () (_ BitVec 32))

(assert (=> mapNonEmpty!3304 (= (arr!1895 (_values!2255 newMap!16)) (store mapRest!3303 mapKey!3303 mapValue!3303))))

(declare-fun b!77855 () Bool)

(assert (=> b!77855 (= e!50927 e!50918)))

(declare-fun b!77856 () Bool)

(declare-fun res!40804 () Bool)

(assert (=> b!77856 (=> (not res!40804) (not e!50926))))

(assert (=> b!77856 (= res!40804 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!77857 () Bool)

(declare-fun e!50911 () Bool)

(assert (=> b!77857 (= e!50911 tp_is_empty!2511)))

(declare-fun b!77858 () Bool)

(assert (=> b!77858 (= e!50916 (and e!50911 mapRes!3303))))

(declare-fun condMapEmpty!3303 () Bool)

(declare-fun mapDefault!3303 () ValueCell!912)

(assert (=> b!77858 (= condMapEmpty!3303 (= (arr!1895 (_values!2255 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3303)))))

(declare-fun b!77848 () Bool)

(assert (=> b!77848 (= e!50926 e!50921)))

(declare-fun res!40808 () Bool)

(assert (=> b!77848 (=> (not res!40808) (not e!50921))))

(declare-fun lt!35782 () ListLongMap!1465)

(assert (=> b!77848 (= res!40808 (= lt!35782 lt!35787))))

(declare-fun map!1179 (LongMapFixedSize!732) ListLongMap!1465)

(assert (=> b!77848 (= lt!35787 (map!1179 newMap!16))))

(declare-fun getCurrentListMap!435 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) Int) ListLongMap!1465)

(assert (=> b!77848 (= lt!35782 (getCurrentListMap!435 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun res!40809 () Bool)

(assert (=> start!10198 (=> (not res!40809) (not e!50926))))

(declare-fun valid!314 (LongMap!540) Bool)

(assert (=> start!10198 (= res!40809 (valid!314 thiss!992))))

(assert (=> start!10198 e!50926))

(assert (=> start!10198 e!50925))

(assert (=> start!10198 true))

(assert (=> start!10198 e!50919))

(assert (= (and start!10198 res!40809) b!77856))

(assert (= (and b!77856 res!40804) b!77851))

(assert (= (and b!77851 res!40802) b!77854))

(assert (= (and b!77854 res!40803) b!77848))

(assert (= (and b!77848 res!40808) b!77842))

(assert (= (and b!77842 res!40805) b!77845))

(assert (= (and b!77845 c!11899) b!77852))

(assert (= (and b!77845 (not c!11899)) b!77846))

(assert (= (and b!77845 res!40807) b!77847))

(assert (= (and b!77847 (not res!40806)) b!77843))

(assert (= (and b!77840 condMapEmpty!3304) mapIsEmpty!3303))

(assert (= (and b!77840 (not condMapEmpty!3304)) mapNonEmpty!3303))

(get-info :version)

(assert (= (and mapNonEmpty!3303 ((_ is ValueCellFull!912) mapValue!3304)) b!77839))

(assert (= (and b!77840 ((_ is ValueCellFull!912) mapDefault!3304)) b!77853))

(assert (= b!77850 b!77840))

(assert (= b!77855 b!77850))

(assert (= b!77844 b!77855))

(assert (= start!10198 b!77844))

(assert (= (and b!77858 condMapEmpty!3303) mapIsEmpty!3304))

(assert (= (and b!77858 (not condMapEmpty!3303)) mapNonEmpty!3304))

(assert (= (and mapNonEmpty!3304 ((_ is ValueCellFull!912) mapValue!3303)) b!77849))

(assert (= (and b!77858 ((_ is ValueCellFull!912) mapDefault!3303)) b!77857))

(assert (= b!77841 b!77858))

(assert (= start!10198 b!77841))

(declare-fun b_lambda!3495 () Bool)

(assert (=> (not b_lambda!3495) (not b!77842)))

(declare-fun t!5180 () Bool)

(declare-fun tb!1621 () Bool)

(assert (=> (and b!77850 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))) t!5180) tb!1621))

(declare-fun result!2815 () Bool)

(assert (=> tb!1621 (= result!2815 tp_is_empty!2511)))

(assert (=> b!77842 t!5180))

(declare-fun b_and!4789 () Bool)

(assert (= b_and!4785 (and (=> t!5180 result!2815) b_and!4789)))

(declare-fun t!5182 () Bool)

(declare-fun tb!1623 () Bool)

(assert (=> (and b!77841 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))) t!5182) tb!1623))

(declare-fun result!2819 () Bool)

(assert (= result!2819 result!2815))

(assert (=> b!77842 t!5182))

(declare-fun b_and!4791 () Bool)

(assert (= b_and!4787 (and (=> t!5182 result!2819) b_and!4791)))

(declare-fun m!77739 () Bool)

(assert (=> mapNonEmpty!3304 m!77739))

(declare-fun m!77741 () Bool)

(assert (=> b!77851 m!77741))

(declare-fun m!77743 () Bool)

(assert (=> mapNonEmpty!3303 m!77743))

(declare-fun m!77745 () Bool)

(assert (=> b!77852 m!77745))

(declare-fun m!77747 () Bool)

(assert (=> b!77852 m!77747))

(declare-fun m!77749 () Bool)

(assert (=> b!77852 m!77749))

(declare-fun m!77751 () Bool)

(assert (=> b!77852 m!77751))

(assert (=> b!77852 m!77749))

(assert (=> b!77852 m!77749))

(declare-fun m!77753 () Bool)

(assert (=> b!77852 m!77753))

(assert (=> b!77852 m!77749))

(declare-fun m!77755 () Bool)

(assert (=> b!77852 m!77755))

(declare-fun m!77757 () Bool)

(assert (=> start!10198 m!77757))

(declare-fun m!77759 () Bool)

(assert (=> b!77850 m!77759))

(declare-fun m!77761 () Bool)

(assert (=> b!77850 m!77761))

(declare-fun m!77763 () Bool)

(assert (=> b!77841 m!77763))

(declare-fun m!77765 () Bool)

(assert (=> b!77841 m!77765))

(assert (=> b!77842 m!77749))

(declare-fun m!77767 () Bool)

(assert (=> b!77842 m!77767))

(declare-fun m!77769 () Bool)

(assert (=> b!77842 m!77769))

(assert (=> b!77842 m!77767))

(assert (=> b!77842 m!77769))

(declare-fun m!77771 () Bool)

(assert (=> b!77842 m!77771))

(assert (=> b!77845 m!77749))

(assert (=> b!77845 m!77749))

(declare-fun m!77773 () Bool)

(assert (=> b!77845 m!77773))

(assert (=> b!77845 m!77749))

(declare-fun m!77775 () Bool)

(assert (=> b!77845 m!77775))

(declare-fun m!77777 () Bool)

(assert (=> b!77847 m!77777))

(declare-fun m!77779 () Bool)

(assert (=> b!77847 m!77779))

(declare-fun m!77781 () Bool)

(assert (=> b!77847 m!77781))

(declare-fun m!77783 () Bool)

(assert (=> b!77847 m!77783))

(assert (=> b!77847 m!77749))

(assert (=> b!77847 m!77749))

(declare-fun m!77785 () Bool)

(assert (=> b!77847 m!77785))

(declare-fun m!77787 () Bool)

(assert (=> b!77847 m!77787))

(declare-fun m!77789 () Bool)

(assert (=> b!77847 m!77789))

(assert (=> b!77847 m!77781))

(declare-fun m!77791 () Bool)

(assert (=> b!77847 m!77791))

(declare-fun m!77793 () Bool)

(assert (=> b!77847 m!77793))

(assert (=> b!77847 m!77749))

(declare-fun m!77795 () Bool)

(assert (=> b!77847 m!77795))

(declare-fun m!77797 () Bool)

(assert (=> b!77847 m!77797))

(declare-fun m!77799 () Bool)

(assert (=> b!77848 m!77799))

(declare-fun m!77801 () Bool)

(assert (=> b!77848 m!77801))

(check-sat (not b!77847) tp_is_empty!2511 (not start!10198) (not b_lambda!3495) (not b_next!2191) b_and!4791 (not b_next!2189) (not b!77850) (not b!77851) (not b!77841) (not b!77848) (not b!77845) (not mapNonEmpty!3304) (not b!77842) b_and!4789 (not mapNonEmpty!3303) (not b!77852))
(check-sat b_and!4789 b_and!4791 (not b_next!2189) (not b_next!2191))
(get-model)

(declare-fun b_lambda!3499 () Bool)

(assert (= b_lambda!3495 (or (and b!77850 b_free!2189) (and b!77841 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))))) b_lambda!3499)))

(check-sat (not b!77847) tp_is_empty!2511 (not start!10198) (not b_next!2191) b_and!4791 (not b_next!2189) (not b!77850) (not b!77851) (not b!77841) (not b!77848) (not b!77845) (not mapNonEmpty!3304) (not b!77842) b_and!4789 (not b_lambda!3499) (not mapNonEmpty!3303) (not b!77852))
(check-sat b_and!4789 b_and!4791 (not b_next!2189) (not b_next!2191))
(get-model)

(declare-fun d!18409 () Bool)

(declare-fun c!11905 () Bool)

(assert (=> d!18409 (= c!11905 ((_ is ValueCellFull!912) (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun e!50985 () V!2995)

(assert (=> d!18409 (= (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) from!355) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!50985)))

(declare-fun b!77927 () Bool)

(declare-fun get!1190 (ValueCell!912 V!2995) V!2995)

(assert (=> b!77927 (= e!50985 (get!1190 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) from!355) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!77928 () Bool)

(declare-fun get!1191 (ValueCell!912 V!2995) V!2995)

(assert (=> b!77928 (= e!50985 (get!1191 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) from!355) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18409 c!11905) b!77927))

(assert (= (and d!18409 (not c!11905)) b!77928))

(assert (=> b!77927 m!77767))

(assert (=> b!77927 m!77769))

(declare-fun m!77867 () Bool)

(assert (=> b!77927 m!77867))

(assert (=> b!77928 m!77767))

(assert (=> b!77928 m!77769))

(declare-fun m!77869 () Bool)

(assert (=> b!77928 m!77869))

(assert (=> b!77842 d!18409))

(declare-fun d!18411 () Bool)

(declare-fun res!40840 () Bool)

(declare-fun e!50988 () Bool)

(assert (=> d!18411 (=> (not res!40840) (not e!50988))))

(declare-fun simpleValid!54 (LongMapFixedSize!732) Bool)

(assert (=> d!18411 (= res!40840 (simpleValid!54 newMap!16))))

(assert (=> d!18411 (= (valid!313 newMap!16) e!50988)))

(declare-fun b!77935 () Bool)

(declare-fun res!40841 () Bool)

(assert (=> b!77935 (=> (not res!40841) (not e!50988))))

(declare-fun arrayCountValidKeys!0 (array!3974 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!77935 (= res!40841 (= (arrayCountValidKeys!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (_size!415 newMap!16)))))

(declare-fun b!77936 () Bool)

(declare-fun res!40842 () Bool)

(assert (=> b!77936 (=> (not res!40842) (not e!50988))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3974 (_ BitVec 32)) Bool)

(assert (=> b!77936 (= res!40842 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!77937 () Bool)

(assert (=> b!77937 (= e!50988 (arrayNoDuplicates!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 Nil!1531))))

(assert (= (and d!18411 res!40840) b!77935))

(assert (= (and b!77935 res!40841) b!77936))

(assert (= (and b!77936 res!40842) b!77937))

(declare-fun m!77871 () Bool)

(assert (=> d!18411 m!77871))

(declare-fun m!77873 () Bool)

(assert (=> b!77935 m!77873))

(declare-fun m!77875 () Bool)

(assert (=> b!77936 m!77875))

(declare-fun m!77877 () Bool)

(assert (=> b!77937 m!77877))

(assert (=> b!77851 d!18411))

(declare-fun d!18413 () Bool)

(assert (=> d!18413 (= (array_inv!1129 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvsge (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!77850 d!18413))

(declare-fun d!18415 () Bool)

(assert (=> d!18415 (= (array_inv!1130 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvsge (size!2136 (_values!2255 (v!2594 (underlying!281 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!77850 d!18415))

(declare-fun d!18417 () Bool)

(assert (=> d!18417 (not (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35845 () Unit!2263)

(declare-fun choose!68 (array!3974 (_ BitVec 32) (_ BitVec 64) List!1534) Unit!2263)

(assert (=> d!18417 (= lt!35845 (choose!68 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531)))))

(assert (=> d!18417 (bvslt (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!18417 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531)) lt!35845)))

(declare-fun bs!3294 () Bool)

(assert (= bs!3294 d!18417))

(assert (=> bs!3294 m!77749))

(assert (=> bs!3294 m!77753))

(assert (=> bs!3294 m!77749))

(declare-fun m!77879 () Bool)

(assert (=> bs!3294 m!77879))

(assert (=> b!77852 d!18417))

(declare-fun d!18419 () Bool)

(assert (=> d!18419 (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) from!355 Nil!1531)))

(declare-fun lt!35848 () Unit!2263)

(declare-fun choose!39 (array!3974 (_ BitVec 32) (_ BitVec 32)) Unit!2263)

(assert (=> d!18419 (= lt!35848 (choose!39 (_keys!3932 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!18419 (bvslt (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!18419 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000000 from!355) lt!35848)))

(declare-fun bs!3295 () Bool)

(assert (= bs!3295 d!18419))

(assert (=> bs!3295 m!77747))

(declare-fun m!77881 () Bool)

(assert (=> bs!3295 m!77881))

(assert (=> b!77852 d!18419))

(declare-fun d!18421 () Bool)

(declare-fun res!40847 () Bool)

(declare-fun e!50993 () Bool)

(assert (=> d!18421 (=> res!40847 e!50993)))

(assert (=> d!18421 (= res!40847 (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!18421 (= (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!50993)))

(declare-fun b!77942 () Bool)

(declare-fun e!50994 () Bool)

(assert (=> b!77942 (= e!50993 e!50994)))

(declare-fun res!40848 () Bool)

(assert (=> b!77942 (=> (not res!40848) (not e!50994))))

(assert (=> b!77942 (= res!40848 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!77943 () Bool)

(assert (=> b!77943 (= e!50994 (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!18421 (not res!40847)) b!77942))

(assert (= (and b!77942 res!40848) b!77943))

(declare-fun m!77883 () Bool)

(assert (=> d!18421 m!77883))

(assert (=> b!77943 m!77749))

(declare-fun m!77885 () Bool)

(assert (=> b!77943 m!77885))

(assert (=> b!77852 d!18421))

(declare-fun d!18423 () Bool)

(declare-fun e!50997 () Bool)

(assert (=> d!18423 e!50997))

(declare-fun c!11908 () Bool)

(assert (=> d!18423 (= c!11908 (and (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!35851 () Unit!2263)

(declare-fun choose!461 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) (_ BitVec 32) Int) Unit!2263)

(assert (=> d!18423 (= lt!35851 (choose!461 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(assert (=> d!18423 (validMask!0 (mask!6268 (v!2594 (underlying!281 thiss!992))))))

(assert (=> d!18423 (= (lemmaListMapContainsThenArrayContainsFrom!64 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))) lt!35851)))

(declare-fun b!77948 () Bool)

(assert (=> b!77948 (= e!50997 (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!77949 () Bool)

(assert (=> b!77949 (= e!50997 (ite (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!18423 c!11908) b!77948))

(assert (= (and d!18423 (not c!11908)) b!77949))

(assert (=> d!18423 m!77749))

(declare-fun m!77887 () Bool)

(assert (=> d!18423 m!77887))

(assert (=> d!18423 m!77777))

(assert (=> b!77948 m!77749))

(assert (=> b!77948 m!77753))

(assert (=> b!77852 d!18423))

(declare-fun d!18425 () Bool)

(declare-fun res!40856 () Bool)

(declare-fun e!51007 () Bool)

(assert (=> d!18425 (=> res!40856 e!51007)))

(assert (=> d!18425 (= res!40856 (bvsge from!355 (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> d!18425 (= (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) from!355 Nil!1531) e!51007)))

(declare-fun b!77960 () Bool)

(declare-fun e!51006 () Bool)

(declare-fun contains!747 (List!1534 (_ BitVec 64)) Bool)

(assert (=> b!77960 (= e!51006 (contains!747 Nil!1531 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun bm!7072 () Bool)

(declare-fun call!7075 () Bool)

(declare-fun c!11911 () Bool)

(assert (=> bm!7072 (= call!7075 (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)))))

(declare-fun b!77961 () Bool)

(declare-fun e!51009 () Bool)

(declare-fun e!51008 () Bool)

(assert (=> b!77961 (= e!51009 e!51008)))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!77961 (= c!11911 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!77962 () Bool)

(assert (=> b!77962 (= e!51008 call!7075)))

(declare-fun b!77963 () Bool)

(assert (=> b!77963 (= e!51007 e!51009)))

(declare-fun res!40855 () Bool)

(assert (=> b!77963 (=> (not res!40855) (not e!51009))))

(assert (=> b!77963 (= res!40855 (not e!51006))))

(declare-fun res!40857 () Bool)

(assert (=> b!77963 (=> (not res!40857) (not e!51006))))

(assert (=> b!77963 (= res!40857 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!77964 () Bool)

(assert (=> b!77964 (= e!51008 call!7075)))

(assert (= (and d!18425 (not res!40856)) b!77963))

(assert (= (and b!77963 res!40857) b!77960))

(assert (= (and b!77963 res!40855) b!77961))

(assert (= (and b!77961 c!11911) b!77962))

(assert (= (and b!77961 (not c!11911)) b!77964))

(assert (= (or b!77962 b!77964) bm!7072))

(assert (=> b!77960 m!77749))

(assert (=> b!77960 m!77749))

(declare-fun m!77889 () Bool)

(assert (=> b!77960 m!77889))

(assert (=> bm!7072 m!77749))

(declare-fun m!77891 () Bool)

(assert (=> bm!7072 m!77891))

(assert (=> b!77961 m!77749))

(assert (=> b!77961 m!77749))

(declare-fun m!77893 () Bool)

(assert (=> b!77961 m!77893))

(assert (=> b!77963 m!77749))

(assert (=> b!77963 m!77749))

(assert (=> b!77963 m!77893))

(assert (=> b!77852 d!18425))

(declare-fun b!77989 () Bool)

(declare-fun lt!35866 () Unit!2263)

(declare-fun lt!35872 () Unit!2263)

(assert (=> b!77989 (= lt!35866 lt!35872)))

(declare-fun lt!35870 () (_ BitVec 64))

(declare-fun lt!35871 () V!2995)

(declare-fun lt!35869 () ListLongMap!1465)

(declare-fun lt!35868 () (_ BitVec 64))

(assert (=> b!77989 (not (contains!745 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)) lt!35868))))

(declare-fun addStillNotContains!30 (ListLongMap!1465 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2263)

(assert (=> b!77989 (= lt!35872 (addStillNotContains!30 lt!35869 lt!35870 lt!35871 lt!35868))))

(assert (=> b!77989 (= lt!35868 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!77989 (= lt!35871 (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!77989 (= lt!35870 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!7078 () ListLongMap!1465)

(assert (=> b!77989 (= lt!35869 call!7078)))

(declare-fun e!51024 () ListLongMap!1465)

(assert (=> b!77989 (= e!51024 (+!109 call!7078 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!77990 () Bool)

(declare-fun e!51027 () ListLongMap!1465)

(assert (=> b!77990 (= e!51027 (ListLongMap!1466 Nil!1530))))

(declare-fun lt!35867 () ListLongMap!1465)

(declare-fun e!51029 () Bool)

(declare-fun b!77991 () Bool)

(assert (=> b!77991 (= e!51029 (= lt!35867 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!77993 () Bool)

(declare-fun e!51026 () Bool)

(declare-fun e!51025 () Bool)

(assert (=> b!77993 (= e!51026 e!51025)))

(assert (=> b!77993 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun res!40867 () Bool)

(assert (=> b!77993 (= res!40867 (contains!745 lt!35867 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!77993 (=> (not res!40867) (not e!51025))))

(declare-fun b!77994 () Bool)

(assert (=> b!77994 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> b!77994 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_values!2255 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun apply!79 (ListLongMap!1465 (_ BitVec 64)) V!2995)

(assert (=> b!77994 (= e!51025 (= (apply!79 lt!35867 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!7075 () Bool)

(assert (=> bm!7075 (= call!7078 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun b!77995 () Bool)

(assert (=> b!77995 (= e!51024 call!7078)))

(declare-fun b!77996 () Bool)

(declare-fun e!51030 () Bool)

(assert (=> b!77996 (= e!51030 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!77996 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!77992 () Bool)

(declare-fun e!51028 () Bool)

(assert (=> b!77992 (= e!51028 e!51026)))

(declare-fun c!11922 () Bool)

(assert (=> b!77992 (= c!11922 e!51030)))

(declare-fun res!40866 () Bool)

(assert (=> b!77992 (=> (not res!40866) (not e!51030))))

(assert (=> b!77992 (= res!40866 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun d!18427 () Bool)

(assert (=> d!18427 e!51028))

(declare-fun res!40868 () Bool)

(assert (=> d!18427 (=> (not res!40868) (not e!51028))))

(assert (=> d!18427 (= res!40868 (not (contains!745 lt!35867 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18427 (= lt!35867 e!51027)))

(declare-fun c!11920 () Bool)

(assert (=> d!18427 (= c!11920 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> d!18427 (validMask!0 (mask!6268 (v!2594 (underlying!281 thiss!992))))))

(assert (=> d!18427 (= (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))) lt!35867)))

(declare-fun b!77997 () Bool)

(declare-fun isEmpty!331 (ListLongMap!1465) Bool)

(assert (=> b!77997 (= e!51029 (isEmpty!331 lt!35867))))

(declare-fun b!77998 () Bool)

(assert (=> b!77998 (= e!51027 e!51024)))

(declare-fun c!11921 () Bool)

(assert (=> b!77998 (= c!11921 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!77999 () Bool)

(declare-fun res!40869 () Bool)

(assert (=> b!77999 (=> (not res!40869) (not e!51028))))

(assert (=> b!77999 (= res!40869 (not (contains!745 lt!35867 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78000 () Bool)

(assert (=> b!78000 (= e!51026 e!51029)))

(declare-fun c!11923 () Bool)

(assert (=> b!78000 (= c!11923 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18427 c!11920) b!77990))

(assert (= (and d!18427 (not c!11920)) b!77998))

(assert (= (and b!77998 c!11921) b!77989))

(assert (= (and b!77998 (not c!11921)) b!77995))

(assert (= (or b!77989 b!77995) bm!7075))

(assert (= (and d!18427 res!40868) b!77999))

(assert (= (and b!77999 res!40869) b!77992))

(assert (= (and b!77992 res!40866) b!77996))

(assert (= (and b!77992 c!11922) b!77993))

(assert (= (and b!77992 (not c!11922)) b!78000))

(assert (= (and b!77993 res!40867) b!77994))

(assert (= (and b!78000 c!11923) b!77991))

(assert (= (and b!78000 (not c!11923)) b!77997))

(declare-fun b_lambda!3501 () Bool)

(assert (=> (not b_lambda!3501) (not b!77989)))

(assert (=> b!77989 t!5180))

(declare-fun b_and!4801 () Bool)

(assert (= b_and!4789 (and (=> t!5180 result!2815) b_and!4801)))

(assert (=> b!77989 t!5182))

(declare-fun b_and!4803 () Bool)

(assert (= b_and!4791 (and (=> t!5182 result!2819) b_and!4803)))

(declare-fun b_lambda!3503 () Bool)

(assert (=> (not b_lambda!3503) (not b!77994)))

(assert (=> b!77994 t!5180))

(declare-fun b_and!4805 () Bool)

(assert (= b_and!4801 (and (=> t!5180 result!2815) b_and!4805)))

(assert (=> b!77994 t!5182))

(declare-fun b_and!4807 () Bool)

(assert (= b_and!4803 (and (=> t!5182 result!2819) b_and!4807)))

(declare-fun m!77895 () Bool)

(assert (=> b!77997 m!77895))

(declare-fun m!77897 () Bool)

(assert (=> b!77999 m!77897))

(declare-fun m!77899 () Bool)

(assert (=> b!77991 m!77899))

(assert (=> b!77996 m!77883))

(assert (=> b!77996 m!77883))

(declare-fun m!77901 () Bool)

(assert (=> b!77996 m!77901))

(declare-fun m!77903 () Bool)

(assert (=> d!18427 m!77903))

(assert (=> d!18427 m!77777))

(assert (=> b!77994 m!77769))

(assert (=> b!77994 m!77883))

(declare-fun m!77905 () Bool)

(assert (=> b!77994 m!77905))

(assert (=> b!77994 m!77883))

(declare-fun m!77907 () Bool)

(assert (=> b!77994 m!77907))

(assert (=> b!77994 m!77905))

(assert (=> b!77994 m!77769))

(declare-fun m!77909 () Bool)

(assert (=> b!77994 m!77909))

(assert (=> b!77993 m!77883))

(assert (=> b!77993 m!77883))

(declare-fun m!77911 () Bool)

(assert (=> b!77993 m!77911))

(assert (=> b!77998 m!77883))

(assert (=> b!77998 m!77883))

(assert (=> b!77998 m!77901))

(assert (=> bm!7075 m!77899))

(declare-fun m!77913 () Bool)

(assert (=> b!77989 m!77913))

(declare-fun m!77915 () Bool)

(assert (=> b!77989 m!77915))

(assert (=> b!77989 m!77905))

(assert (=> b!77989 m!77769))

(assert (=> b!77989 m!77909))

(declare-fun m!77917 () Bool)

(assert (=> b!77989 m!77917))

(assert (=> b!77989 m!77883))

(assert (=> b!77989 m!77913))

(assert (=> b!77989 m!77905))

(assert (=> b!77989 m!77769))

(declare-fun m!77919 () Bool)

(assert (=> b!77989 m!77919))

(assert (=> b!77847 d!18427))

(declare-fun d!18429 () Bool)

(declare-fun e!51033 () Bool)

(assert (=> d!18429 e!51033))

(declare-fun res!40874 () Bool)

(assert (=> d!18429 (=> (not res!40874) (not e!51033))))

(declare-fun lt!35884 () ListLongMap!1465)

(assert (=> d!18429 (= res!40874 (contains!745 lt!35884 (_1!1105 lt!35783)))))

(declare-fun lt!35881 () List!1533)

(assert (=> d!18429 (= lt!35884 (ListLongMap!1466 lt!35881))))

(declare-fun lt!35883 () Unit!2263)

(declare-fun lt!35882 () Unit!2263)

(assert (=> d!18429 (= lt!35883 lt!35882)))

(declare-datatypes ((Option!142 0))(
  ( (Some!141 (v!2598 V!2995)) (None!140) )
))
(declare-fun getValueByKey!136 (List!1533 (_ BitVec 64)) Option!142)

(assert (=> d!18429 (= (getValueByKey!136 lt!35881 (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783)))))

(declare-fun lemmaContainsTupThenGetReturnValue!55 (List!1533 (_ BitVec 64) V!2995) Unit!2263)

(assert (=> d!18429 (= lt!35882 (lemmaContainsTupThenGetReturnValue!55 lt!35881 (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(declare-fun insertStrictlySorted!57 (List!1533 (_ BitVec 64) V!2995) List!1533)

(assert (=> d!18429 (= lt!35881 (insertStrictlySorted!57 (toList!748 lt!35777) (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(assert (=> d!18429 (= (+!109 lt!35777 lt!35783) lt!35884)))

(declare-fun b!78005 () Bool)

(declare-fun res!40875 () Bool)

(assert (=> b!78005 (=> (not res!40875) (not e!51033))))

(assert (=> b!78005 (= res!40875 (= (getValueByKey!136 (toList!748 lt!35884) (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783))))))

(declare-fun b!78006 () Bool)

(declare-fun contains!748 (List!1533 tuple2!2190) Bool)

(assert (=> b!78006 (= e!51033 (contains!748 (toList!748 lt!35884) lt!35783))))

(assert (= (and d!18429 res!40874) b!78005))

(assert (= (and b!78005 res!40875) b!78006))

(declare-fun m!77921 () Bool)

(assert (=> d!18429 m!77921))

(declare-fun m!77923 () Bool)

(assert (=> d!18429 m!77923))

(declare-fun m!77925 () Bool)

(assert (=> d!18429 m!77925))

(declare-fun m!77927 () Bool)

(assert (=> d!18429 m!77927))

(declare-fun m!77929 () Bool)

(assert (=> b!78005 m!77929))

(declare-fun m!77931 () Bool)

(assert (=> b!78006 m!77931))

(assert (=> b!77847 d!18429))

(declare-fun d!18431 () Bool)

(declare-fun e!51034 () Bool)

(assert (=> d!18431 e!51034))

(declare-fun res!40876 () Bool)

(assert (=> d!18431 (=> (not res!40876) (not e!51034))))

(declare-fun lt!35888 () ListLongMap!1465)

(assert (=> d!18431 (= res!40876 (contains!745 lt!35888 (_1!1105 lt!35788)))))

(declare-fun lt!35885 () List!1533)

(assert (=> d!18431 (= lt!35888 (ListLongMap!1466 lt!35885))))

(declare-fun lt!35887 () Unit!2263)

(declare-fun lt!35886 () Unit!2263)

(assert (=> d!18431 (= lt!35887 lt!35886)))

(assert (=> d!18431 (= (getValueByKey!136 lt!35885 (_1!1105 lt!35788)) (Some!141 (_2!1105 lt!35788)))))

(assert (=> d!18431 (= lt!35886 (lemmaContainsTupThenGetReturnValue!55 lt!35885 (_1!1105 lt!35788) (_2!1105 lt!35788)))))

(assert (=> d!18431 (= lt!35885 (insertStrictlySorted!57 (toList!748 lt!35776) (_1!1105 lt!35788) (_2!1105 lt!35788)))))

(assert (=> d!18431 (= (+!109 lt!35776 lt!35788) lt!35888)))

(declare-fun b!78007 () Bool)

(declare-fun res!40877 () Bool)

(assert (=> b!78007 (=> (not res!40877) (not e!51034))))

(assert (=> b!78007 (= res!40877 (= (getValueByKey!136 (toList!748 lt!35888) (_1!1105 lt!35788)) (Some!141 (_2!1105 lt!35788))))))

(declare-fun b!78008 () Bool)

(assert (=> b!78008 (= e!51034 (contains!748 (toList!748 lt!35888) lt!35788))))

(assert (= (and d!18431 res!40876) b!78007))

(assert (= (and b!78007 res!40877) b!78008))

(declare-fun m!77933 () Bool)

(assert (=> d!18431 m!77933))

(declare-fun m!77935 () Bool)

(assert (=> d!18431 m!77935))

(declare-fun m!77937 () Bool)

(assert (=> d!18431 m!77937))

(declare-fun m!77939 () Bool)

(assert (=> d!18431 m!77939))

(declare-fun m!77941 () Bool)

(assert (=> b!78007 m!77941))

(declare-fun m!77943 () Bool)

(assert (=> b!78008 m!77943))

(assert (=> b!77847 d!18431))

(declare-fun d!18433 () Bool)

(assert (=> d!18433 (= (+!109 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (+!109 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun lt!35891 () Unit!2263)

(declare-fun choose!462 (ListLongMap!1465 (_ BitVec 64) V!2995 (_ BitVec 64) V!2995) Unit!2263)

(assert (=> d!18433 (= lt!35891 (choose!462 lt!35777 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))

(assert (=> d!18433 (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18433 (= (addCommutativeForDiffKeys!28 lt!35777 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))) lt!35891)))

(declare-fun bs!3296 () Bool)

(assert (= bs!3296 d!18433))

(assert (=> bs!3296 m!77749))

(declare-fun m!77945 () Bool)

(assert (=> bs!3296 m!77945))

(declare-fun m!77947 () Bool)

(assert (=> bs!3296 m!77947))

(declare-fun m!77949 () Bool)

(assert (=> bs!3296 m!77949))

(assert (=> bs!3296 m!77947))

(declare-fun m!77951 () Bool)

(assert (=> bs!3296 m!77951))

(assert (=> bs!3296 m!77949))

(declare-fun m!77953 () Bool)

(assert (=> bs!3296 m!77953))

(assert (=> b!77847 d!18433))

(declare-fun d!18435 () Bool)

(declare-fun e!51035 () Bool)

(assert (=> d!18435 e!51035))

(declare-fun res!40878 () Bool)

(assert (=> d!18435 (=> (not res!40878) (not e!51035))))

(declare-fun lt!35895 () ListLongMap!1465)

(assert (=> d!18435 (= res!40878 (contains!745 lt!35895 (_1!1105 lt!35783)))))

(declare-fun lt!35892 () List!1533)

(assert (=> d!18435 (= lt!35895 (ListLongMap!1466 lt!35892))))

(declare-fun lt!35894 () Unit!2263)

(declare-fun lt!35893 () Unit!2263)

(assert (=> d!18435 (= lt!35894 lt!35893)))

(assert (=> d!18435 (= (getValueByKey!136 lt!35892 (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783)))))

(assert (=> d!18435 (= lt!35893 (lemmaContainsTupThenGetReturnValue!55 lt!35892 (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(assert (=> d!18435 (= lt!35892 (insertStrictlySorted!57 (toList!748 lt!35785) (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(assert (=> d!18435 (= (+!109 lt!35785 lt!35783) lt!35895)))

(declare-fun b!78009 () Bool)

(declare-fun res!40879 () Bool)

(assert (=> b!78009 (=> (not res!40879) (not e!51035))))

(assert (=> b!78009 (= res!40879 (= (getValueByKey!136 (toList!748 lt!35895) (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783))))))

(declare-fun b!78010 () Bool)

(assert (=> b!78010 (= e!51035 (contains!748 (toList!748 lt!35895) lt!35783))))

(assert (= (and d!18435 res!40878) b!78009))

(assert (= (and b!78009 res!40879) b!78010))

(declare-fun m!77955 () Bool)

(assert (=> d!18435 m!77955))

(declare-fun m!77957 () Bool)

(assert (=> d!18435 m!77957))

(declare-fun m!77959 () Bool)

(assert (=> d!18435 m!77959))

(declare-fun m!77961 () Bool)

(assert (=> d!18435 m!77961))

(declare-fun m!77963 () Bool)

(assert (=> b!78009 m!77963))

(declare-fun m!77965 () Bool)

(assert (=> b!78010 m!77965))

(assert (=> b!77847 d!18435))

(declare-fun d!18437 () Bool)

(declare-fun e!51036 () Bool)

(assert (=> d!18437 e!51036))

(declare-fun res!40880 () Bool)

(assert (=> d!18437 (=> (not res!40880) (not e!51036))))

(declare-fun lt!35899 () ListLongMap!1465)

(assert (=> d!18437 (= res!40880 (contains!745 lt!35899 (_1!1105 lt!35784)))))

(declare-fun lt!35896 () List!1533)

(assert (=> d!18437 (= lt!35899 (ListLongMap!1466 lt!35896))))

(declare-fun lt!35898 () Unit!2263)

(declare-fun lt!35897 () Unit!2263)

(assert (=> d!18437 (= lt!35898 lt!35897)))

(assert (=> d!18437 (= (getValueByKey!136 lt!35896 (_1!1105 lt!35784)) (Some!141 (_2!1105 lt!35784)))))

(assert (=> d!18437 (= lt!35897 (lemmaContainsTupThenGetReturnValue!55 lt!35896 (_1!1105 lt!35784) (_2!1105 lt!35784)))))

(assert (=> d!18437 (= lt!35896 (insertStrictlySorted!57 (toList!748 lt!35777) (_1!1105 lt!35784) (_2!1105 lt!35784)))))

(assert (=> d!18437 (= (+!109 lt!35777 lt!35784) lt!35899)))

(declare-fun b!78011 () Bool)

(declare-fun res!40881 () Bool)

(assert (=> b!78011 (=> (not res!40881) (not e!51036))))

(assert (=> b!78011 (= res!40881 (= (getValueByKey!136 (toList!748 lt!35899) (_1!1105 lt!35784)) (Some!141 (_2!1105 lt!35784))))))

(declare-fun b!78012 () Bool)

(assert (=> b!78012 (= e!51036 (contains!748 (toList!748 lt!35899) lt!35784))))

(assert (= (and d!18437 res!40880) b!78011))

(assert (= (and b!78011 res!40881) b!78012))

(declare-fun m!77967 () Bool)

(assert (=> d!18437 m!77967))

(declare-fun m!77969 () Bool)

(assert (=> d!18437 m!77969))

(declare-fun m!77971 () Bool)

(assert (=> d!18437 m!77971))

(declare-fun m!77973 () Bool)

(assert (=> d!18437 m!77973))

(declare-fun m!77975 () Bool)

(assert (=> b!78011 m!77975))

(declare-fun m!77977 () Bool)

(assert (=> b!78012 m!77977))

(assert (=> b!77847 d!18437))

(declare-fun d!18439 () Bool)

(assert (=> d!18439 (= (validMask!0 (mask!6268 (v!2594 (underlying!281 thiss!992)))) (and (or (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000001111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000011111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000001111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000011111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000001111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000011111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000001111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000011111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000001111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000011111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000001111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000011111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000111111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000001111111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000011111111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000111111111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000001111111111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000011111111111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000111111111111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00001111111111111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00011111111111111111111111111111) (= (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!77847 d!18439))

(declare-fun d!18441 () Bool)

(declare-fun e!51037 () Bool)

(assert (=> d!18441 e!51037))

(declare-fun res!40882 () Bool)

(assert (=> d!18441 (=> (not res!40882) (not e!51037))))

(declare-fun lt!35903 () ListLongMap!1465)

(assert (=> d!18441 (= res!40882 (contains!745 lt!35903 (_1!1105 lt!35783)))))

(declare-fun lt!35900 () List!1533)

(assert (=> d!18441 (= lt!35903 (ListLongMap!1466 lt!35900))))

(declare-fun lt!35902 () Unit!2263)

(declare-fun lt!35901 () Unit!2263)

(assert (=> d!18441 (= lt!35902 lt!35901)))

(assert (=> d!18441 (= (getValueByKey!136 lt!35900 (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783)))))

(assert (=> d!18441 (= lt!35901 (lemmaContainsTupThenGetReturnValue!55 lt!35900 (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(assert (=> d!18441 (= lt!35900 (insertStrictlySorted!57 (toList!748 (+!109 lt!35777 lt!35784)) (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(assert (=> d!18441 (= (+!109 (+!109 lt!35777 lt!35784) lt!35783) lt!35903)))

(declare-fun b!78013 () Bool)

(declare-fun res!40883 () Bool)

(assert (=> b!78013 (=> (not res!40883) (not e!51037))))

(assert (=> b!78013 (= res!40883 (= (getValueByKey!136 (toList!748 lt!35903) (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783))))))

(declare-fun b!78014 () Bool)

(assert (=> b!78014 (= e!51037 (contains!748 (toList!748 lt!35903) lt!35783))))

(assert (= (and d!18441 res!40882) b!78013))

(assert (= (and b!78013 res!40883) b!78014))

(declare-fun m!77979 () Bool)

(assert (=> d!18441 m!77979))

(declare-fun m!77981 () Bool)

(assert (=> d!18441 m!77981))

(declare-fun m!77983 () Bool)

(assert (=> d!18441 m!77983))

(declare-fun m!77985 () Bool)

(assert (=> d!18441 m!77985))

(declare-fun m!77987 () Bool)

(assert (=> b!78013 m!77987))

(declare-fun m!77989 () Bool)

(assert (=> b!78014 m!77989))

(assert (=> b!77847 d!18441))

(declare-fun d!18443 () Bool)

(declare-fun e!51038 () Bool)

(assert (=> d!18443 e!51038))

(declare-fun res!40884 () Bool)

(assert (=> d!18443 (=> (not res!40884) (not e!51038))))

(declare-fun lt!35907 () ListLongMap!1465)

(assert (=> d!18443 (= res!40884 (contains!745 lt!35907 (_1!1105 lt!35784)))))

(declare-fun lt!35904 () List!1533)

(assert (=> d!18443 (= lt!35907 (ListLongMap!1466 lt!35904))))

(declare-fun lt!35906 () Unit!2263)

(declare-fun lt!35905 () Unit!2263)

(assert (=> d!18443 (= lt!35906 lt!35905)))

(assert (=> d!18443 (= (getValueByKey!136 lt!35904 (_1!1105 lt!35784)) (Some!141 (_2!1105 lt!35784)))))

(assert (=> d!18443 (= lt!35905 (lemmaContainsTupThenGetReturnValue!55 lt!35904 (_1!1105 lt!35784) (_2!1105 lt!35784)))))

(assert (=> d!18443 (= lt!35904 (insertStrictlySorted!57 (toList!748 lt!35781) (_1!1105 lt!35784) (_2!1105 lt!35784)))))

(assert (=> d!18443 (= (+!109 lt!35781 lt!35784) lt!35907)))

(declare-fun b!78015 () Bool)

(declare-fun res!40885 () Bool)

(assert (=> b!78015 (=> (not res!40885) (not e!51038))))

(assert (=> b!78015 (= res!40885 (= (getValueByKey!136 (toList!748 lt!35907) (_1!1105 lt!35784)) (Some!141 (_2!1105 lt!35784))))))

(declare-fun b!78016 () Bool)

(assert (=> b!78016 (= e!51038 (contains!748 (toList!748 lt!35907) lt!35784))))

(assert (= (and d!18443 res!40884) b!78015))

(assert (= (and b!78015 res!40885) b!78016))

(declare-fun m!77991 () Bool)

(assert (=> d!18443 m!77991))

(declare-fun m!77993 () Bool)

(assert (=> d!18443 m!77993))

(declare-fun m!77995 () Bool)

(assert (=> d!18443 m!77995))

(declare-fun m!77997 () Bool)

(assert (=> d!18443 m!77997))

(declare-fun m!77999 () Bool)

(assert (=> b!78015 m!77999))

(declare-fun m!78001 () Bool)

(assert (=> b!78016 m!78001))

(assert (=> b!77847 d!18443))

(declare-fun d!18445 () Bool)

(declare-fun e!51039 () Bool)

(assert (=> d!18445 e!51039))

(declare-fun res!40886 () Bool)

(assert (=> d!18445 (=> (not res!40886) (not e!51039))))

(declare-fun lt!35911 () ListLongMap!1465)

(assert (=> d!18445 (= res!40886 (contains!745 lt!35911 (_1!1105 lt!35788)))))

(declare-fun lt!35908 () List!1533)

(assert (=> d!18445 (= lt!35911 (ListLongMap!1466 lt!35908))))

(declare-fun lt!35910 () Unit!2263)

(declare-fun lt!35909 () Unit!2263)

(assert (=> d!18445 (= lt!35910 lt!35909)))

(assert (=> d!18445 (= (getValueByKey!136 lt!35908 (_1!1105 lt!35788)) (Some!141 (_2!1105 lt!35788)))))

(assert (=> d!18445 (= lt!35909 (lemmaContainsTupThenGetReturnValue!55 lt!35908 (_1!1105 lt!35788) (_2!1105 lt!35788)))))

(assert (=> d!18445 (= lt!35908 (insertStrictlySorted!57 (toList!748 lt!35785) (_1!1105 lt!35788) (_2!1105 lt!35788)))))

(assert (=> d!18445 (= (+!109 lt!35785 lt!35788) lt!35911)))

(declare-fun b!78017 () Bool)

(declare-fun res!40887 () Bool)

(assert (=> b!78017 (=> (not res!40887) (not e!51039))))

(assert (=> b!78017 (= res!40887 (= (getValueByKey!136 (toList!748 lt!35911) (_1!1105 lt!35788)) (Some!141 (_2!1105 lt!35788))))))

(declare-fun b!78018 () Bool)

(assert (=> b!78018 (= e!51039 (contains!748 (toList!748 lt!35911) lt!35788))))

(assert (= (and d!18445 res!40886) b!78017))

(assert (= (and b!78017 res!40887) b!78018))

(declare-fun m!78003 () Bool)

(assert (=> d!18445 m!78003))

(declare-fun m!78005 () Bool)

(assert (=> d!18445 m!78005))

(declare-fun m!78007 () Bool)

(assert (=> d!18445 m!78007))

(declare-fun m!78009 () Bool)

(assert (=> d!18445 m!78009))

(declare-fun m!78011 () Bool)

(assert (=> b!78017 m!78011))

(declare-fun m!78013 () Bool)

(assert (=> b!78018 m!78013))

(assert (=> b!77847 d!18445))

(declare-fun d!18447 () Bool)

(assert (=> d!18447 (= (+!109 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (+!109 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun lt!35912 () Unit!2263)

(assert (=> d!18447 (= lt!35912 (choose!462 lt!35785 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))

(assert (=> d!18447 (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18447 (= (addCommutativeForDiffKeys!28 lt!35785 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) lt!35912)))

(declare-fun bs!3297 () Bool)

(assert (= bs!3297 d!18447))

(assert (=> bs!3297 m!77749))

(declare-fun m!78015 () Bool)

(assert (=> bs!3297 m!78015))

(declare-fun m!78017 () Bool)

(assert (=> bs!3297 m!78017))

(declare-fun m!78019 () Bool)

(assert (=> bs!3297 m!78019))

(assert (=> bs!3297 m!78017))

(declare-fun m!78021 () Bool)

(assert (=> bs!3297 m!78021))

(assert (=> bs!3297 m!78019))

(declare-fun m!78023 () Bool)

(assert (=> bs!3297 m!78023))

(assert (=> b!77847 d!18447))

(declare-fun d!18449 () Bool)

(assert (=> d!18449 (= (map!1179 newMap!16) (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun bs!3298 () Bool)

(assert (= bs!3298 d!18449))

(declare-fun m!78025 () Bool)

(assert (=> bs!3298 m!78025))

(assert (=> b!77848 d!18449))

(declare-fun b!78061 () Bool)

(declare-fun e!51069 () ListLongMap!1465)

(declare-fun call!7099 () ListLongMap!1465)

(assert (=> b!78061 (= e!51069 (+!109 call!7099 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!78062 () Bool)

(declare-fun res!40909 () Bool)

(declare-fun e!51078 () Bool)

(assert (=> b!78062 (=> (not res!40909) (not e!51078))))

(declare-fun e!51076 () Bool)

(assert (=> b!78062 (= res!40909 e!51076)))

(declare-fun c!11941 () Bool)

(assert (=> b!78062 (= c!11941 (not (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78063 () Bool)

(declare-fun e!51071 () ListLongMap!1465)

(declare-fun call!7098 () ListLongMap!1465)

(assert (=> b!78063 (= e!51071 call!7098)))

(declare-fun bm!7090 () Bool)

(declare-fun call!7097 () ListLongMap!1465)

(declare-fun call!7095 () ListLongMap!1465)

(assert (=> bm!7090 (= call!7097 call!7095)))

(declare-fun lt!35969 () ListLongMap!1465)

(declare-fun e!51075 () Bool)

(declare-fun b!78064 () Bool)

(assert (=> b!78064 (= e!51075 (= (apply!79 lt!35969 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78064 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2136 (_values!2255 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> b!78064 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!78065 () Bool)

(declare-fun e!51072 () Bool)

(assert (=> b!78065 (= e!51076 e!51072)))

(declare-fun res!40910 () Bool)

(declare-fun call!7094 () Bool)

(assert (=> b!78065 (= res!40910 call!7094)))

(assert (=> b!78065 (=> (not res!40910) (not e!51072))))

(declare-fun bm!7091 () Bool)

(declare-fun call!7096 () Bool)

(assert (=> bm!7091 (= call!7096 (contains!745 lt!35969 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78067 () Bool)

(declare-fun e!51070 () Bool)

(assert (=> b!78067 (= e!51070 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78068 () Bool)

(declare-fun e!51077 () Unit!2263)

(declare-fun Unit!2269 () Unit!2263)

(assert (=> b!78068 (= e!51077 Unit!2269)))

(declare-fun bm!7092 () Bool)

(assert (=> bm!7092 (= call!7095 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun b!78069 () Bool)

(declare-fun e!51067 () ListLongMap!1465)

(declare-fun call!7093 () ListLongMap!1465)

(assert (=> b!78069 (= e!51067 call!7093)))

(declare-fun b!78070 () Bool)

(declare-fun e!51066 () Bool)

(assert (=> b!78070 (= e!51078 e!51066)))

(declare-fun c!11937 () Bool)

(assert (=> b!78070 (= c!11937 (not (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78071 () Bool)

(declare-fun lt!35971 () Unit!2263)

(assert (=> b!78071 (= e!51077 lt!35971)))

(declare-fun lt!35970 () ListLongMap!1465)

(assert (=> b!78071 (= lt!35970 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun lt!35976 () (_ BitVec 64))

(assert (=> b!78071 (= lt!35976 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35967 () (_ BitVec 64))

(assert (=> b!78071 (= lt!35967 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35961 () Unit!2263)

(declare-fun addStillContains!55 (ListLongMap!1465 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2263)

(assert (=> b!78071 (= lt!35961 (addStillContains!55 lt!35970 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35967))))

(assert (=> b!78071 (contains!745 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35967)))

(declare-fun lt!35966 () Unit!2263)

(assert (=> b!78071 (= lt!35966 lt!35961)))

(declare-fun lt!35977 () ListLongMap!1465)

(assert (=> b!78071 (= lt!35977 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun lt!35978 () (_ BitVec 64))

(assert (=> b!78071 (= lt!35978 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35974 () (_ BitVec 64))

(assert (=> b!78071 (= lt!35974 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35965 () Unit!2263)

(declare-fun addApplyDifferent!55 (ListLongMap!1465 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2263)

(assert (=> b!78071 (= lt!35965 (addApplyDifferent!55 lt!35977 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35974))))

(assert (=> b!78071 (= (apply!79 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35974) (apply!79 lt!35977 lt!35974))))

(declare-fun lt!35957 () Unit!2263)

(assert (=> b!78071 (= lt!35957 lt!35965)))

(declare-fun lt!35973 () ListLongMap!1465)

(assert (=> b!78071 (= lt!35973 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun lt!35959 () (_ BitVec 64))

(assert (=> b!78071 (= lt!35959 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35963 () (_ BitVec 64))

(assert (=> b!78071 (= lt!35963 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!35975 () Unit!2263)

(assert (=> b!78071 (= lt!35975 (addApplyDifferent!55 lt!35973 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35963))))

(assert (=> b!78071 (= (apply!79 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35963) (apply!79 lt!35973 lt!35963))))

(declare-fun lt!35962 () Unit!2263)

(assert (=> b!78071 (= lt!35962 lt!35975)))

(declare-fun lt!35958 () ListLongMap!1465)

(assert (=> b!78071 (= lt!35958 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun lt!35960 () (_ BitVec 64))

(assert (=> b!78071 (= lt!35960 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!35972 () (_ BitVec 64))

(assert (=> b!78071 (= lt!35972 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!78071 (= lt!35971 (addApplyDifferent!55 lt!35958 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35972))))

(assert (=> b!78071 (= (apply!79 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35972) (apply!79 lt!35958 lt!35972))))

(declare-fun b!78072 () Bool)

(declare-fun e!51068 () Bool)

(assert (=> b!78072 (= e!51068 e!51075)))

(declare-fun res!40908 () Bool)

(assert (=> b!78072 (=> (not res!40908) (not e!51075))))

(assert (=> b!78072 (= res!40908 (contains!745 lt!35969 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78072 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!78073 () Bool)

(assert (=> b!78073 (= e!51069 e!51071)))

(declare-fun c!11938 () Bool)

(assert (=> b!78073 (= c!11938 (and (not (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7093 () Bool)

(assert (=> bm!7093 (= call!7098 call!7099)))

(declare-fun b!78074 () Bool)

(declare-fun res!40906 () Bool)

(assert (=> b!78074 (=> (not res!40906) (not e!51078))))

(assert (=> b!78074 (= res!40906 e!51068)))

(declare-fun res!40907 () Bool)

(assert (=> b!78074 (=> res!40907 e!51068)))

(declare-fun e!51073 () Bool)

(assert (=> b!78074 (= res!40907 (not e!51073))))

(declare-fun res!40911 () Bool)

(assert (=> b!78074 (=> (not res!40911) (not e!51073))))

(assert (=> b!78074 (= res!40911 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!78075 () Bool)

(declare-fun c!11939 () Bool)

(assert (=> b!78075 (= c!11939 (and (not (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78075 (= e!51071 e!51067)))

(declare-fun b!78076 () Bool)

(assert (=> b!78076 (= e!51073 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78077 () Bool)

(assert (=> b!78077 (= e!51067 call!7098)))

(declare-fun bm!7094 () Bool)

(declare-fun c!11936 () Bool)

(assert (=> bm!7094 (= call!7099 (+!109 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093)) (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun bm!7095 () Bool)

(assert (=> bm!7095 (= call!7094 (contains!745 lt!35969 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78078 () Bool)

(assert (=> b!78078 (= e!51076 (not call!7094))))

(declare-fun b!78066 () Bool)

(declare-fun e!51074 () Bool)

(assert (=> b!78066 (= e!51066 e!51074)))

(declare-fun res!40913 () Bool)

(assert (=> b!78066 (= res!40913 call!7096)))

(assert (=> b!78066 (=> (not res!40913) (not e!51074))))

(declare-fun d!18451 () Bool)

(assert (=> d!18451 e!51078))

(declare-fun res!40914 () Bool)

(assert (=> d!18451 (=> (not res!40914) (not e!51078))))

(assert (=> d!18451 (= res!40914 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun lt!35968 () ListLongMap!1465)

(assert (=> d!18451 (= lt!35969 lt!35968)))

(declare-fun lt!35964 () Unit!2263)

(assert (=> d!18451 (= lt!35964 e!51077)))

(declare-fun c!11940 () Bool)

(assert (=> d!18451 (= c!11940 e!51070)))

(declare-fun res!40912 () Bool)

(assert (=> d!18451 (=> (not res!40912) (not e!51070))))

(assert (=> d!18451 (= res!40912 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> d!18451 (= lt!35968 e!51069)))

(assert (=> d!18451 (= c!11936 (and (not (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18451 (validMask!0 (mask!6268 (v!2594 (underlying!281 thiss!992))))))

(assert (=> d!18451 (= (getCurrentListMap!435 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))) lt!35969)))

(declare-fun bm!7096 () Bool)

(assert (=> bm!7096 (= call!7093 call!7097)))

(declare-fun b!78079 () Bool)

(assert (=> b!78079 (= e!51074 (= (apply!79 lt!35969 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun b!78080 () Bool)

(assert (=> b!78080 (= e!51066 (not call!7096))))

(declare-fun b!78081 () Bool)

(assert (=> b!78081 (= e!51072 (= (apply!79 lt!35969 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))

(assert (= (and d!18451 c!11936) b!78061))

(assert (= (and d!18451 (not c!11936)) b!78073))

(assert (= (and b!78073 c!11938) b!78063))

(assert (= (and b!78073 (not c!11938)) b!78075))

(assert (= (and b!78075 c!11939) b!78077))

(assert (= (and b!78075 (not c!11939)) b!78069))

(assert (= (or b!78077 b!78069) bm!7096))

(assert (= (or b!78063 bm!7096) bm!7090))

(assert (= (or b!78063 b!78077) bm!7093))

(assert (= (or b!78061 bm!7090) bm!7092))

(assert (= (or b!78061 bm!7093) bm!7094))

(assert (= (and d!18451 res!40912) b!78067))

(assert (= (and d!18451 c!11940) b!78071))

(assert (= (and d!18451 (not c!11940)) b!78068))

(assert (= (and d!18451 res!40914) b!78074))

(assert (= (and b!78074 res!40911) b!78076))

(assert (= (and b!78074 (not res!40907)) b!78072))

(assert (= (and b!78072 res!40908) b!78064))

(assert (= (and b!78074 res!40906) b!78062))

(assert (= (and b!78062 c!11941) b!78065))

(assert (= (and b!78062 (not c!11941)) b!78078))

(assert (= (and b!78065 res!40910) b!78081))

(assert (= (or b!78065 b!78078) bm!7095))

(assert (= (and b!78062 res!40909) b!78070))

(assert (= (and b!78070 c!11937) b!78066))

(assert (= (and b!78070 (not c!11937)) b!78080))

(assert (= (and b!78066 res!40913) b!78079))

(assert (= (or b!78066 b!78080) bm!7091))

(declare-fun b_lambda!3505 () Bool)

(assert (=> (not b_lambda!3505) (not b!78064)))

(assert (=> b!78064 t!5180))

(declare-fun b_and!4809 () Bool)

(assert (= b_and!4805 (and (=> t!5180 result!2815) b_and!4809)))

(assert (=> b!78064 t!5182))

(declare-fun b_and!4811 () Bool)

(assert (= b_and!4807 (and (=> t!5182 result!2819) b_and!4811)))

(declare-fun m!78027 () Bool)

(assert (=> bm!7095 m!78027))

(assert (=> bm!7092 m!77793))

(declare-fun m!78029 () Bool)

(assert (=> bm!7091 m!78029))

(declare-fun m!78031 () Bool)

(assert (=> b!78071 m!78031))

(declare-fun m!78033 () Bool)

(assert (=> b!78071 m!78033))

(declare-fun m!78035 () Bool)

(assert (=> b!78071 m!78035))

(declare-fun m!78037 () Bool)

(assert (=> b!78071 m!78037))

(declare-fun m!78039 () Bool)

(assert (=> b!78071 m!78039))

(declare-fun m!78041 () Bool)

(assert (=> b!78071 m!78041))

(declare-fun m!78043 () Bool)

(assert (=> b!78071 m!78043))

(assert (=> b!78071 m!78035))

(declare-fun m!78045 () Bool)

(assert (=> b!78071 m!78045))

(declare-fun m!78047 () Bool)

(assert (=> b!78071 m!78047))

(assert (=> b!78071 m!77883))

(assert (=> b!78071 m!78047))

(declare-fun m!78049 () Bool)

(assert (=> b!78071 m!78049))

(assert (=> b!78071 m!78033))

(declare-fun m!78051 () Bool)

(assert (=> b!78071 m!78051))

(declare-fun m!78053 () Bool)

(assert (=> b!78071 m!78053))

(assert (=> b!78071 m!78053))

(declare-fun m!78055 () Bool)

(assert (=> b!78071 m!78055))

(declare-fun m!78057 () Bool)

(assert (=> b!78071 m!78057))

(assert (=> b!78071 m!77793))

(declare-fun m!78059 () Bool)

(assert (=> b!78071 m!78059))

(assert (=> d!18451 m!77777))

(assert (=> b!78064 m!77905))

(assert (=> b!78064 m!77883))

(declare-fun m!78061 () Bool)

(assert (=> b!78064 m!78061))

(assert (=> b!78064 m!77905))

(assert (=> b!78064 m!77769))

(assert (=> b!78064 m!77909))

(assert (=> b!78064 m!77769))

(assert (=> b!78064 m!77883))

(declare-fun m!78063 () Bool)

(assert (=> bm!7094 m!78063))

(declare-fun m!78065 () Bool)

(assert (=> b!78061 m!78065))

(assert (=> b!78067 m!77883))

(assert (=> b!78067 m!77883))

(assert (=> b!78067 m!77901))

(assert (=> b!78072 m!77883))

(assert (=> b!78072 m!77883))

(declare-fun m!78067 () Bool)

(assert (=> b!78072 m!78067))

(declare-fun m!78069 () Bool)

(assert (=> b!78081 m!78069))

(declare-fun m!78071 () Bool)

(assert (=> b!78079 m!78071))

(assert (=> b!78076 m!77883))

(assert (=> b!78076 m!77883))

(assert (=> b!78076 m!77901))

(assert (=> b!77848 d!18451))

(declare-fun d!18453 () Bool)

(assert (=> d!18453 (= (valid!314 thiss!992) (valid!313 (v!2594 (underlying!281 thiss!992))))))

(declare-fun bs!3299 () Bool)

(assert (= bs!3299 d!18453))

(declare-fun m!78073 () Bool)

(assert (=> bs!3299 m!78073))

(assert (=> start!10198 d!18453))

(declare-fun d!18455 () Bool)

(declare-fun e!51084 () Bool)

(assert (=> d!18455 e!51084))

(declare-fun res!40917 () Bool)

(assert (=> d!18455 (=> res!40917 e!51084)))

(declare-fun lt!35987 () Bool)

(assert (=> d!18455 (= res!40917 (not lt!35987))))

(declare-fun lt!35988 () Bool)

(assert (=> d!18455 (= lt!35987 lt!35988)))

(declare-fun lt!35989 () Unit!2263)

(declare-fun e!51083 () Unit!2263)

(assert (=> d!18455 (= lt!35989 e!51083)))

(declare-fun c!11944 () Bool)

(assert (=> d!18455 (= c!11944 lt!35988)))

(declare-fun containsKey!140 (List!1533 (_ BitVec 64)) Bool)

(assert (=> d!18455 (= lt!35988 (containsKey!140 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!18455 (= (contains!745 lt!35787 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) lt!35987)))

(declare-fun b!78088 () Bool)

(declare-fun lt!35990 () Unit!2263)

(assert (=> b!78088 (= e!51083 lt!35990)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!89 (List!1533 (_ BitVec 64)) Unit!2263)

(assert (=> b!78088 (= lt!35990 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun isDefined!90 (Option!142) Bool)

(assert (=> b!78088 (isDefined!90 (getValueByKey!136 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!78089 () Bool)

(declare-fun Unit!2270 () Unit!2263)

(assert (=> b!78089 (= e!51083 Unit!2270)))

(declare-fun b!78090 () Bool)

(assert (=> b!78090 (= e!51084 (isDefined!90 (getValueByKey!136 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (= (and d!18455 c!11944) b!78088))

(assert (= (and d!18455 (not c!11944)) b!78089))

(assert (= (and d!18455 (not res!40917)) b!78090))

(assert (=> d!18455 m!77749))

(declare-fun m!78075 () Bool)

(assert (=> d!18455 m!78075))

(assert (=> b!78088 m!77749))

(declare-fun m!78077 () Bool)

(assert (=> b!78088 m!78077))

(assert (=> b!78088 m!77749))

(declare-fun m!78079 () Bool)

(assert (=> b!78088 m!78079))

(assert (=> b!78088 m!78079))

(declare-fun m!78081 () Bool)

(assert (=> b!78088 m!78081))

(assert (=> b!78090 m!77749))

(assert (=> b!78090 m!78079))

(assert (=> b!78090 m!78079))

(assert (=> b!78090 m!78081))

(assert (=> b!77845 d!18455))

(declare-fun b!78175 () Bool)

(declare-fun e!51145 () Bool)

(declare-fun call!7163 () Bool)

(assert (=> b!78175 (= e!51145 (not call!7163))))

(declare-fun b!78176 () Bool)

(declare-fun e!51137 () tuple2!2188)

(declare-fun e!51140 () tuple2!2188)

(assert (=> b!78176 (= e!51137 e!51140)))

(declare-fun c!11981 () Bool)

(declare-datatypes ((SeekEntryResult!250 0))(
  ( (MissingZero!250 (index!3134 (_ BitVec 32))) (Found!250 (index!3135 (_ BitVec 32))) (Intermediate!250 (undefined!1062 Bool) (index!3136 (_ BitVec 32)) (x!11557 (_ BitVec 32))) (Undefined!250) (MissingVacant!250 (index!3137 (_ BitVec 32))) )
))
(declare-fun lt!36063 () SeekEntryResult!250)

(assert (=> b!78176 (= c!11981 ((_ is MissingZero!250) lt!36063))))

(declare-fun c!11978 () Bool)

(declare-fun call!7160 () tuple2!2188)

(declare-fun bm!7145 () Bool)

(declare-fun updateHelperNewKey!28 (LongMapFixedSize!732 (_ BitVec 64) V!2995 (_ BitVec 32)) tuple2!2188)

(assert (=> bm!7145 (= call!7160 (updateHelperNewKey!28 newMap!16 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063))))))

(declare-fun b!78177 () Bool)

(declare-fun res!40952 () Bool)

(declare-fun e!51129 () Bool)

(assert (=> b!78177 (=> (not res!40952) (not e!51129))))

(declare-fun call!7171 () Bool)

(assert (=> b!78177 (= res!40952 call!7171)))

(declare-fun e!51130 () Bool)

(assert (=> b!78177 (= e!51130 e!51129)))

(declare-fun b!78178 () Bool)

(declare-fun e!51142 () Unit!2263)

(declare-fun lt!36059 () Unit!2263)

(assert (=> b!78178 (= e!51142 lt!36059)))

(declare-fun call!7164 () Unit!2263)

(assert (=> b!78178 (= lt!36059 call!7164)))

(declare-fun lt!36053 () SeekEntryResult!250)

(declare-fun call!7169 () SeekEntryResult!250)

(assert (=> b!78178 (= lt!36053 call!7169)))

(declare-fun c!11985 () Bool)

(assert (=> b!78178 (= c!11985 ((_ is MissingZero!250) lt!36053))))

(assert (=> b!78178 e!51130))

(declare-fun bm!7146 () Bool)

(declare-fun call!7148 () ListLongMap!1465)

(assert (=> bm!7146 (= call!7148 (map!1179 newMap!16))))

(declare-fun b!78179 () Bool)

(declare-fun lt!36062 () tuple2!2188)

(assert (=> b!78179 (= e!51137 (tuple2!2189 (_1!1104 lt!36062) (_2!1104 lt!36062)))))

(assert (=> b!78179 (= lt!36062 call!7160)))

(declare-fun c!11979 () Bool)

(declare-fun c!11986 () Bool)

(declare-fun e!51148 () ListLongMap!1465)

(declare-fun bm!7147 () Bool)

(declare-fun call!7151 () ListLongMap!1465)

(assert (=> bm!7147 (= call!7151 (+!109 e!51148 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun c!11974 () Bool)

(assert (=> bm!7147 (= c!11974 c!11979)))

(declare-fun b!78180 () Bool)

(declare-fun e!51134 () Bool)

(declare-fun e!51147 () Bool)

(assert (=> b!78180 (= e!51134 e!51147)))

(declare-fun res!40953 () Bool)

(declare-fun call!7162 () Bool)

(assert (=> b!78180 (= res!40953 call!7162)))

(assert (=> b!78180 (=> (not res!40953) (not e!51147))))

(declare-fun bm!7148 () Bool)

(declare-fun call!7161 () SeekEntryResult!250)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3974 (_ BitVec 32)) SeekEntryResult!250)

(assert (=> bm!7148 (= call!7161 (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!78181 () Bool)

(declare-fun e!51133 () Bool)

(declare-fun e!51149 () Bool)

(assert (=> b!78181 (= e!51133 e!51149)))

(declare-fun res!40956 () Bool)

(assert (=> b!78181 (= res!40956 call!7171)))

(assert (=> b!78181 (=> (not res!40956) (not e!51149))))

(declare-fun b!78182 () Bool)

(declare-fun e!51136 () Bool)

(declare-fun e!51135 () Bool)

(assert (=> b!78182 (= e!51136 e!51135)))

(declare-fun res!40958 () Bool)

(declare-fun call!7149 () ListLongMap!1465)

(assert (=> b!78182 (= res!40958 (contains!745 call!7149 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!78182 (=> (not res!40958) (not e!51135))))

(declare-fun b!78183 () Bool)

(declare-fun e!51141 () Bool)

(assert (=> b!78183 (= e!51141 e!51136)))

(declare-fun c!11975 () Bool)

(declare-fun lt!36056 () tuple2!2188)

(assert (=> b!78183 (= c!11975 (_1!1104 lt!36056))))

(declare-fun b!78184 () Bool)

(declare-fun e!51143 () ListLongMap!1465)

(declare-fun call!7153 () ListLongMap!1465)

(assert (=> b!78184 (= e!51143 call!7153)))

(declare-fun b!78185 () Bool)

(declare-fun res!40954 () Bool)

(assert (=> b!78185 (=> (not res!40954) (not e!51145))))

(declare-fun lt!36060 () SeekEntryResult!250)

(assert (=> b!78185 (= res!40954 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3134 lt!36060)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7149 () Bool)

(declare-fun call!7159 () Bool)

(assert (=> bm!7149 (= call!7171 call!7159)))

(declare-fun b!78186 () Bool)

(declare-fun call!7150 () ListLongMap!1465)

(assert (=> b!78186 (= e!51143 call!7150)))

(declare-fun b!78187 () Bool)

(declare-fun e!51131 () Bool)

(declare-fun lt!36070 () SeekEntryResult!250)

(assert (=> b!78187 (= e!51131 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36070)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun bm!7150 () Bool)

(declare-fun call!7167 () Bool)

(assert (=> bm!7150 (= call!7159 call!7167)))

(declare-fun b!78188 () Bool)

(declare-fun res!40959 () Bool)

(assert (=> b!78188 (=> (not res!40959) (not e!51129))))

(assert (=> b!78188 (= res!40959 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3134 lt!36053)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78189 () Bool)

(assert (=> b!78189 (= e!51133 ((_ is Undefined!250) lt!36053))))

(declare-fun b!78190 () Bool)

(declare-fun call!7157 () Bool)

(assert (=> b!78190 (= e!51129 (not call!7157))))

(declare-fun b!78191 () Bool)

(declare-fun c!11977 () Bool)

(assert (=> b!78191 (= c!11977 ((_ is MissingVacant!250) lt!36053))))

(assert (=> b!78191 (= e!51130 e!51133)))

(declare-fun b!78192 () Bool)

(assert (=> b!78192 (= e!51149 (not call!7157))))

(declare-fun b!78193 () Bool)

(declare-fun lt!36054 () tuple2!2188)

(assert (=> b!78193 (= lt!36054 call!7160)))

(assert (=> b!78193 (= e!51140 (tuple2!2189 (_1!1104 lt!36054) (_2!1104 lt!36054)))))

(declare-fun b!78194 () Bool)

(declare-fun Unit!2271 () Unit!2263)

(assert (=> b!78194 (= e!51142 Unit!2271)))

(declare-fun lt!36049 () Unit!2263)

(declare-fun call!7166 () Unit!2263)

(assert (=> b!78194 (= lt!36049 call!7166)))

(declare-fun lt!36047 () SeekEntryResult!250)

(assert (=> b!78194 (= lt!36047 call!7169)))

(declare-fun res!40955 () Bool)

(assert (=> b!78194 (= res!40955 ((_ is Found!250) lt!36047))))

(declare-fun e!51144 () Bool)

(assert (=> b!78194 (=> (not res!40955) (not e!51144))))

(assert (=> b!78194 e!51144))

(declare-fun lt!36048 () Unit!2263)

(assert (=> b!78194 (= lt!36048 lt!36049)))

(assert (=> b!78194 false))

(declare-fun call!7154 () Bool)

(declare-fun bm!7151 () Bool)

(assert (=> bm!7151 (= call!7154 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!78195 () Bool)

(declare-fun res!40950 () Bool)

(assert (=> b!78195 (= res!40950 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3137 lt!36060)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78195 (=> (not res!40950) (not e!51147))))

(declare-fun b!78196 () Bool)

(declare-fun res!40947 () Bool)

(declare-fun call!7165 () Bool)

(assert (=> b!78196 (= res!40947 call!7165)))

(assert (=> b!78196 (=> (not res!40947) (not e!51131))))

(declare-fun bm!7152 () Bool)

(declare-fun call!7155 () SeekEntryResult!250)

(assert (=> bm!7152 (= call!7155 call!7161)))

(declare-fun b!78197 () Bool)

(declare-fun e!51139 () tuple2!2188)

(declare-fun e!51150 () tuple2!2188)

(assert (=> b!78197 (= e!51139 e!51150)))

(assert (=> b!78197 (= lt!36063 (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun c!11983 () Bool)

(assert (=> b!78197 (= c!11983 ((_ is Undefined!250) lt!36063))))

(declare-fun b!78198 () Bool)

(declare-fun e!51146 () tuple2!2188)

(assert (=> b!78198 (= e!51139 e!51146)))

(assert (=> b!78198 (= c!11986 (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7153 () Bool)

(assert (=> bm!7153 (= call!7149 (map!1179 (_2!1104 lt!36056)))))

(declare-fun b!78199 () Bool)

(declare-fun lt!36066 () Unit!2263)

(declare-fun lt!36065 () Unit!2263)

(assert (=> b!78199 (= lt!36066 lt!36065)))

(declare-fun call!7156 () ListLongMap!1465)

(declare-fun call!7170 () ListLongMap!1465)

(assert (=> b!78199 (= call!7156 call!7170)))

(declare-fun lt!36055 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 V!2995 Int) Unit!2263)

(assert (=> b!78199 (= lt!36065 (lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36055 (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) lt!35780 (defaultEntry!2272 newMap!16)))))

(assert (=> b!78199 (= lt!36055 (bvor (extraKeys!2123 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!78199 (= e!51146 (tuple2!2189 true (LongMapFixedSize!733 (defaultEntry!2272 newMap!16) (mask!6268 newMap!16) (bvor (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) (zeroValue!2170 newMap!16) lt!35780 (_size!415 newMap!16) (_keys!3932 newMap!16) (_values!2255 newMap!16) (_vacant!415 newMap!16))))))

(declare-fun b!78200 () Bool)

(declare-fun e!51132 () Unit!2263)

(declare-fun lt!36067 () Unit!2263)

(assert (=> b!78200 (= e!51132 lt!36067)))

(assert (=> b!78200 (= lt!36067 call!7166)))

(assert (=> b!78200 (= lt!36070 call!7155)))

(declare-fun res!40949 () Bool)

(assert (=> b!78200 (= res!40949 ((_ is Found!250) lt!36070))))

(assert (=> b!78200 (=> (not res!40949) (not e!51131))))

(assert (=> b!78200 e!51131))

(declare-fun bm!7154 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) Int) Unit!2263)

(assert (=> bm!7154 (= call!7164 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(declare-fun b!78201 () Bool)

(declare-fun lt!36058 () Unit!2263)

(assert (=> b!78201 (= lt!36058 e!51142)))

(declare-fun c!11973 () Bool)

(declare-fun call!7158 () Bool)

(assert (=> b!78201 (= c!11973 call!7158)))

(assert (=> b!78201 (= e!51150 (tuple2!2189 false newMap!16))))

(declare-fun b!78202 () Bool)

(declare-fun res!40948 () Bool)

(assert (=> b!78202 (= res!40948 call!7159)))

(assert (=> b!78202 (=> (not res!40948) (not e!51144))))

(declare-fun b!78203 () Bool)

(declare-fun lt!36069 () Unit!2263)

(declare-fun lt!36071 () Unit!2263)

(assert (=> b!78203 (= lt!36069 lt!36071)))

(assert (=> b!78203 (= call!7156 call!7170)))

(declare-fun lt!36052 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!28 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 V!2995 Int) Unit!2263)

(assert (=> b!78203 (= lt!36071 (lemmaChangeZeroKeyThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36052 (zeroValue!2170 newMap!16) lt!35780 (minValue!2170 newMap!16) (defaultEntry!2272 newMap!16)))))

(assert (=> b!78203 (= lt!36052 (bvor (extraKeys!2123 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!78203 (= e!51146 (tuple2!2189 true (LongMapFixedSize!733 (defaultEntry!2272 newMap!16) (mask!6268 newMap!16) (bvor (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) lt!35780 (minValue!2170 newMap!16) (_size!415 newMap!16) (_keys!3932 newMap!16) (_values!2255 newMap!16) (_vacant!415 newMap!16))))))

(declare-fun bm!7155 () Bool)

(assert (=> bm!7155 (= call!7163 call!7154)))

(declare-fun b!78204 () Bool)

(assert (=> b!78204 (= e!51147 (not call!7163))))

(declare-fun bm!7156 () Bool)

(assert (=> bm!7156 (= call!7156 call!7151)))

(declare-fun b!78205 () Bool)

(declare-fun c!11976 () Bool)

(assert (=> b!78205 (= c!11976 ((_ is MissingVacant!250) lt!36060))))

(declare-fun e!51138 () Bool)

(assert (=> b!78205 (= e!51138 e!51134)))

(declare-fun c!11980 () Bool)

(declare-fun bm!7157 () Bool)

(declare-fun c!11984 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!7157 (= call!7167 (inRange!0 (ite c!11983 (ite c!11973 (index!3135 lt!36047) (ite c!11985 (index!3134 lt!36053) (index!3137 lt!36053))) (ite c!11984 (index!3135 lt!36070) (ite c!11980 (index!3134 lt!36060) (index!3137 lt!36060)))) (mask!6268 newMap!16)))))

(declare-fun bm!7158 () Bool)

(declare-fun lt!36057 () array!3976)

(assert (=> bm!7158 (= call!7150 (getCurrentListMap!435 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36057) (mask!6268 newMap!16) (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78206 () Bool)

(declare-fun res!40951 () Bool)

(assert (=> b!78206 (= res!40951 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3137 lt!36053)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78206 (=> (not res!40951) (not e!51149))))

(declare-fun bm!7159 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) Int) Unit!2263)

(assert (=> bm!7159 (= call!7166 (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(declare-fun b!78207 () Bool)

(declare-fun lt!36050 () Unit!2263)

(declare-fun lt!36051 () Unit!2263)

(assert (=> b!78207 (= lt!36050 lt!36051)))

(assert (=> b!78207 call!7158))

(declare-fun lemmaValidKeyInArrayIsInListMap!86 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) Int) Unit!2263)

(assert (=> b!78207 (= lt!36051 (lemmaValidKeyInArrayIsInListMap!86 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3135 lt!36063) (defaultEntry!2272 newMap!16)))))

(assert (=> b!78207 (= lt!36057 (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))))

(declare-fun lt!36046 () Unit!2263)

(declare-fun lt!36068 () Unit!2263)

(assert (=> b!78207 (= lt!36046 lt!36068)))

(assert (=> b!78207 (= call!7151 call!7153)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) (_ BitVec 64) V!2995 Int) Unit!2263)

(assert (=> b!78207 (= lt!36068 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3135 lt!36063) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36061 () Unit!2263)

(assert (=> b!78207 (= lt!36061 e!51132)))

(assert (=> b!78207 (= c!11984 (contains!745 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!78207 (= e!51140 (tuple2!2189 true (LongMapFixedSize!733 (defaultEntry!2272 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (_size!415 newMap!16) (_keys!3932 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (_vacant!415 newMap!16))))))

(declare-fun b!78208 () Bool)

(assert (=> b!78208 (= e!51136 (= call!7149 call!7148))))

(declare-fun bm!7160 () Bool)

(assert (=> bm!7160 (= call!7170 call!7150)))

(declare-fun b!78209 () Bool)

(assert (=> b!78209 (= e!51134 ((_ is Undefined!250) lt!36060))))

(declare-fun b!78210 () Bool)

(assert (=> b!78210 (= e!51148 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun bm!7161 () Bool)

(assert (=> bm!7161 (= call!7157 call!7154)))

(declare-fun bm!7162 () Bool)

(assert (=> bm!7162 (= call!7165 call!7167)))

(declare-fun b!78211 () Bool)

(assert (=> b!78211 (= c!11978 ((_ is MissingVacant!250) lt!36063))))

(assert (=> b!78211 (= e!51150 e!51137)))

(declare-fun bm!7163 () Bool)

(assert (=> bm!7163 (= call!7169 call!7161)))

(declare-fun b!78212 () Bool)

(declare-fun res!40957 () Bool)

(assert (=> b!78212 (=> (not res!40957) (not e!51145))))

(assert (=> b!78212 (= res!40957 call!7162)))

(assert (=> b!78212 (= e!51138 e!51145)))

(declare-fun d!18457 () Bool)

(assert (=> d!18457 e!51141))

(declare-fun res!40946 () Bool)

(assert (=> d!18457 (=> (not res!40946) (not e!51141))))

(assert (=> d!18457 (= res!40946 (valid!313 (_2!1104 lt!36056)))))

(assert (=> d!18457 (= lt!36056 e!51139)))

(assert (=> d!18457 (= c!11979 (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvneg (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!18457 (valid!313 newMap!16)))

(assert (=> d!18457 (= (update!111 newMap!16 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780) lt!36056)))

(declare-fun b!78213 () Bool)

(assert (=> b!78213 (= e!51135 (= call!7149 (+!109 call!7148 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!78214 () Bool)

(assert (=> b!78214 (= e!51144 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36047)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!78215 () Bool)

(declare-fun call!7152 () ListLongMap!1465)

(assert (=> b!78215 (= e!51148 call!7152)))

(declare-fun bm!7164 () Bool)

(declare-fun call!7168 () ListLongMap!1465)

(assert (=> bm!7164 (= call!7153 call!7168)))

(declare-fun bm!7165 () Bool)

(declare-fun c!11982 () Bool)

(assert (=> bm!7165 (= c!11982 c!11983)))

(assert (=> bm!7165 (= call!7158 (contains!745 e!51143 (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))

(declare-fun bm!7166 () Bool)

(assert (=> bm!7166 (= call!7162 call!7165)))

(declare-fun bm!7167 () Bool)

(assert (=> bm!7167 (= call!7168 (getCurrentListMap!435 (_keys!3932 newMap!16) (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78216 () Bool)

(declare-fun Unit!2272 () Unit!2263)

(assert (=> b!78216 (= e!51132 Unit!2272)))

(declare-fun lt!36064 () Unit!2263)

(assert (=> b!78216 (= lt!36064 call!7164)))

(assert (=> b!78216 (= lt!36060 call!7155)))

(assert (=> b!78216 (= c!11980 ((_ is MissingZero!250) lt!36060))))

(assert (=> b!78216 e!51138))

(declare-fun lt!36045 () Unit!2263)

(assert (=> b!78216 (= lt!36045 lt!36064)))

(assert (=> b!78216 false))

(declare-fun bm!7168 () Bool)

(assert (=> bm!7168 (= call!7152 call!7168)))

(assert (= (and d!18457 c!11979) b!78198))

(assert (= (and d!18457 (not c!11979)) b!78197))

(assert (= (and b!78198 c!11986) b!78203))

(assert (= (and b!78198 (not c!11986)) b!78199))

(assert (= (or b!78203 b!78199) bm!7160))

(assert (= (or b!78203 b!78199) bm!7168))

(assert (= (or b!78203 b!78199) bm!7156))

(assert (= (and b!78197 c!11983) b!78201))

(assert (= (and b!78197 (not c!11983)) b!78211))

(assert (= (and b!78201 c!11973) b!78194))

(assert (= (and b!78201 (not c!11973)) b!78178))

(assert (= (and b!78194 res!40955) b!78202))

(assert (= (and b!78202 res!40948) b!78214))

(assert (= (and b!78178 c!11985) b!78177))

(assert (= (and b!78178 (not c!11985)) b!78191))

(assert (= (and b!78177 res!40952) b!78188))

(assert (= (and b!78188 res!40959) b!78190))

(assert (= (and b!78191 c!11977) b!78181))

(assert (= (and b!78191 (not c!11977)) b!78189))

(assert (= (and b!78181 res!40956) b!78206))

(assert (= (and b!78206 res!40951) b!78192))

(assert (= (or b!78177 b!78181) bm!7149))

(assert (= (or b!78190 b!78192) bm!7161))

(assert (= (or b!78202 bm!7149) bm!7150))

(assert (= (or b!78194 b!78178) bm!7163))

(assert (= (and b!78211 c!11978) b!78179))

(assert (= (and b!78211 (not c!11978)) b!78176))

(assert (= (and b!78176 c!11981) b!78193))

(assert (= (and b!78176 (not c!11981)) b!78207))

(assert (= (and b!78207 c!11984) b!78200))

(assert (= (and b!78207 (not c!11984)) b!78216))

(assert (= (and b!78200 res!40949) b!78196))

(assert (= (and b!78196 res!40947) b!78187))

(assert (= (and b!78216 c!11980) b!78212))

(assert (= (and b!78216 (not c!11980)) b!78205))

(assert (= (and b!78212 res!40957) b!78185))

(assert (= (and b!78185 res!40954) b!78175))

(assert (= (and b!78205 c!11976) b!78180))

(assert (= (and b!78205 (not c!11976)) b!78209))

(assert (= (and b!78180 res!40953) b!78195))

(assert (= (and b!78195 res!40950) b!78204))

(assert (= (or b!78212 b!78180) bm!7166))

(assert (= (or b!78175 b!78204) bm!7155))

(assert (= (or b!78196 bm!7166) bm!7162))

(assert (= (or b!78200 b!78216) bm!7152))

(assert (= (or b!78179 b!78193) bm!7145))

(assert (= (or b!78201 b!78207) bm!7164))

(assert (= (or bm!7163 bm!7152) bm!7148))

(assert (= (or b!78194 b!78200) bm!7159))

(assert (= (or bm!7161 bm!7155) bm!7151))

(assert (= (or bm!7150 bm!7162) bm!7157))

(assert (= (or b!78178 b!78216) bm!7154))

(assert (= (or b!78201 b!78207) bm!7165))

(assert (= (and bm!7165 c!11982) b!78184))

(assert (= (and bm!7165 (not c!11982)) b!78186))

(assert (= (or bm!7160 b!78186) bm!7158))

(assert (= (or bm!7168 bm!7164) bm!7167))

(assert (= (or bm!7156 b!78207) bm!7147))

(assert (= (and bm!7147 c!11974) b!78215))

(assert (= (and bm!7147 (not c!11974)) b!78210))

(assert (= (and d!18457 res!40946) b!78183))

(assert (= (and b!78183 c!11975) b!78182))

(assert (= (and b!78183 (not c!11975)) b!78208))

(assert (= (and b!78182 res!40958) b!78213))

(assert (= (or b!78182 b!78213 b!78208) bm!7153))

(assert (= (or b!78213 b!78208) bm!7146))

(assert (=> bm!7154 m!77749))

(declare-fun m!78083 () Bool)

(assert (=> bm!7154 m!78083))

(assert (=> b!78197 m!77749))

(declare-fun m!78085 () Bool)

(assert (=> b!78197 m!78085))

(declare-fun m!78087 () Bool)

(assert (=> b!78195 m!78087))

(declare-fun m!78089 () Bool)

(assert (=> b!78206 m!78089))

(assert (=> bm!7145 m!77749))

(declare-fun m!78091 () Bool)

(assert (=> bm!7145 m!78091))

(declare-fun m!78093 () Bool)

(assert (=> b!78188 m!78093))

(declare-fun m!78095 () Bool)

(assert (=> b!78213 m!78095))

(declare-fun m!78097 () Bool)

(assert (=> b!78207 m!78097))

(declare-fun m!78099 () Bool)

(assert (=> b!78207 m!78099))

(assert (=> b!78207 m!77749))

(declare-fun m!78101 () Bool)

(assert (=> b!78207 m!78101))

(assert (=> b!78207 m!78025))

(assert (=> b!78207 m!77749))

(declare-fun m!78103 () Bool)

(assert (=> b!78207 m!78103))

(assert (=> b!78207 m!78025))

(declare-fun m!78105 () Bool)

(assert (=> b!78214 m!78105))

(assert (=> bm!7167 m!78097))

(declare-fun m!78107 () Bool)

(assert (=> bm!7167 m!78107))

(assert (=> b!78182 m!77749))

(declare-fun m!78109 () Bool)

(assert (=> b!78182 m!78109))

(declare-fun m!78111 () Bool)

(assert (=> bm!7157 m!78111))

(assert (=> bm!7146 m!77799))

(assert (=> b!78210 m!78025))

(declare-fun m!78113 () Bool)

(assert (=> b!78203 m!78113))

(declare-fun m!78115 () Bool)

(assert (=> b!78199 m!78115))

(declare-fun m!78117 () Bool)

(assert (=> bm!7158 m!78117))

(declare-fun m!78119 () Bool)

(assert (=> bm!7153 m!78119))

(declare-fun m!78121 () Bool)

(assert (=> b!78185 m!78121))

(declare-fun m!78123 () Bool)

(assert (=> d!18457 m!78123))

(assert (=> d!18457 m!77741))

(declare-fun m!78125 () Bool)

(assert (=> b!78187 m!78125))

(assert (=> bm!7148 m!77749))

(assert (=> bm!7148 m!78085))

(assert (=> bm!7151 m!77749))

(declare-fun m!78127 () Bool)

(assert (=> bm!7151 m!78127))

(declare-fun m!78129 () Bool)

(assert (=> bm!7147 m!78129))

(declare-fun m!78131 () Bool)

(assert (=> bm!7165 m!78131))

(declare-fun m!78133 () Bool)

(assert (=> bm!7165 m!78133))

(assert (=> bm!7159 m!77749))

(declare-fun m!78135 () Bool)

(assert (=> bm!7159 m!78135))

(assert (=> b!77845 d!18457))

(declare-fun d!18459 () Bool)

(assert (=> d!18459 (= (array_inv!1129 (_keys!3932 newMap!16)) (bvsge (size!2135 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!77841 d!18459))

(declare-fun d!18461 () Bool)

(assert (=> d!18461 (= (array_inv!1130 (_values!2255 newMap!16)) (bvsge (size!2136 (_values!2255 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!77841 d!18461))

(declare-fun b!78223 () Bool)

(declare-fun e!51155 () Bool)

(assert (=> b!78223 (= e!51155 tp_is_empty!2511)))

(declare-fun condMapEmpty!3313 () Bool)

(declare-fun mapDefault!3313 () ValueCell!912)

(assert (=> mapNonEmpty!3303 (= condMapEmpty!3313 (= mapRest!3304 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3313)))))

(declare-fun e!51156 () Bool)

(declare-fun mapRes!3313 () Bool)

(assert (=> mapNonEmpty!3303 (= tp!8767 (and e!51156 mapRes!3313))))

(declare-fun b!78224 () Bool)

(assert (=> b!78224 (= e!51156 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3313 () Bool)

(assert (=> mapIsEmpty!3313 mapRes!3313))

(declare-fun mapNonEmpty!3313 () Bool)

(declare-fun tp!8785 () Bool)

(assert (=> mapNonEmpty!3313 (= mapRes!3313 (and tp!8785 e!51155))))

(declare-fun mapRest!3313 () (Array (_ BitVec 32) ValueCell!912))

(declare-fun mapKey!3313 () (_ BitVec 32))

(declare-fun mapValue!3313 () ValueCell!912)

(assert (=> mapNonEmpty!3313 (= mapRest!3304 (store mapRest!3313 mapKey!3313 mapValue!3313))))

(assert (= (and mapNonEmpty!3303 condMapEmpty!3313) mapIsEmpty!3313))

(assert (= (and mapNonEmpty!3303 (not condMapEmpty!3313)) mapNonEmpty!3313))

(assert (= (and mapNonEmpty!3313 ((_ is ValueCellFull!912) mapValue!3313)) b!78223))

(assert (= (and mapNonEmpty!3303 ((_ is ValueCellFull!912) mapDefault!3313)) b!78224))

(declare-fun m!78137 () Bool)

(assert (=> mapNonEmpty!3313 m!78137))

(declare-fun b!78225 () Bool)

(declare-fun e!51157 () Bool)

(assert (=> b!78225 (= e!51157 tp_is_empty!2511)))

(declare-fun condMapEmpty!3314 () Bool)

(declare-fun mapDefault!3314 () ValueCell!912)

(assert (=> mapNonEmpty!3304 (= condMapEmpty!3314 (= mapRest!3303 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3314)))))

(declare-fun e!51158 () Bool)

(declare-fun mapRes!3314 () Bool)

(assert (=> mapNonEmpty!3304 (= tp!8769 (and e!51158 mapRes!3314))))

(declare-fun b!78226 () Bool)

(assert (=> b!78226 (= e!51158 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3314 () Bool)

(assert (=> mapIsEmpty!3314 mapRes!3314))

(declare-fun mapNonEmpty!3314 () Bool)

(declare-fun tp!8786 () Bool)

(assert (=> mapNonEmpty!3314 (= mapRes!3314 (and tp!8786 e!51157))))

(declare-fun mapValue!3314 () ValueCell!912)

(declare-fun mapRest!3314 () (Array (_ BitVec 32) ValueCell!912))

(declare-fun mapKey!3314 () (_ BitVec 32))

(assert (=> mapNonEmpty!3314 (= mapRest!3303 (store mapRest!3314 mapKey!3314 mapValue!3314))))

(assert (= (and mapNonEmpty!3304 condMapEmpty!3314) mapIsEmpty!3314))

(assert (= (and mapNonEmpty!3304 (not condMapEmpty!3314)) mapNonEmpty!3314))

(assert (= (and mapNonEmpty!3314 ((_ is ValueCellFull!912) mapValue!3314)) b!78225))

(assert (= (and mapNonEmpty!3304 ((_ is ValueCellFull!912) mapDefault!3314)) b!78226))

(declare-fun m!78139 () Bool)

(assert (=> mapNonEmpty!3314 m!78139))

(declare-fun b_lambda!3507 () Bool)

(assert (= b_lambda!3501 (or (and b!77850 b_free!2189) (and b!77841 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))))) b_lambda!3507)))

(declare-fun b_lambda!3509 () Bool)

(assert (= b_lambda!3503 (or (and b!77850 b_free!2189) (and b!77841 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))))) b_lambda!3509)))

(declare-fun b_lambda!3511 () Bool)

(assert (= b_lambda!3505 (or (and b!77850 b_free!2189) (and b!77841 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))))) b_lambda!3511)))

(check-sat (not bm!7145) (not b_next!2189) (not b_lambda!3511) (not b!78012) (not b!78013) (not d!18427) (not b!78072) tp_is_empty!2511 (not bm!7151) (not bm!7167) (not b!78009) (not b!77928) (not b!78088) (not b!78067) (not bm!7075) (not d!18435) (not d!18447) (not b!77935) (not bm!7154) (not b!77936) (not bm!7165) (not d!18419) b_and!4811 (not b!77999) (not bm!7146) (not bm!7095) (not b!77998) (not b_next!2191) (not b_lambda!3507) (not bm!7148) (not b!78014) (not b!77943) (not b!77927) (not d!18441) (not b!78203) (not b!78197) (not b!78182) (not d!18429) (not b!78010) (not b!78008) (not b!77994) (not d!18443) (not b!78005) (not b!78199) (not b!78213) (not d!18451) (not b!78064) (not b!78017) (not d!18449) (not b!78016) (not b!78015) (not d!18445) (not d!18457) (not d!18455) (not b!78018) (not bm!7159) (not b!77991) (not b!78079) (not bm!7072) (not b!78061) (not d!18423) (not bm!7147) (not mapNonEmpty!3313) b_and!4809 (not b!77989) (not d!18411) (not b!78090) (not b_lambda!3509) (not d!18417) (not b!77937) (not bm!7157) (not b!78076) (not d!18453) (not b!78210) (not b!78007) (not b!78006) (not b!78071) (not b!78207) (not bm!7091) (not b!77963) (not b!77993) (not mapNonEmpty!3314) (not bm!7092) (not d!18433) (not b!78011) (not bm!7153) (not bm!7158) (not b!77996) (not b!77997) (not b!78081) (not d!18431) (not b!77961) (not b!77960) (not bm!7094) (not b_lambda!3499) (not b!77948) (not d!18437))
(check-sat b_and!4809 b_and!4811 (not b_next!2189) (not b_next!2191))
(get-model)

(declare-fun b!78236 () Bool)

(declare-fun e!51163 () Option!142)

(declare-fun e!51164 () Option!142)

(assert (=> b!78236 (= e!51163 e!51164)))

(declare-fun c!11992 () Bool)

(assert (=> b!78236 (= c!11992 (and ((_ is Cons!1529) (toList!748 lt!35899)) (not (= (_1!1105 (h!2117 (toList!748 lt!35899))) (_1!1105 lt!35784)))))))

(declare-fun b!78235 () Bool)

(assert (=> b!78235 (= e!51163 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35899)))))))

(declare-fun b!78237 () Bool)

(assert (=> b!78237 (= e!51164 (getValueByKey!136 (t!5183 (toList!748 lt!35899)) (_1!1105 lt!35784)))))

(declare-fun b!78238 () Bool)

(assert (=> b!78238 (= e!51164 None!140)))

(declare-fun d!18463 () Bool)

(declare-fun c!11991 () Bool)

(assert (=> d!18463 (= c!11991 (and ((_ is Cons!1529) (toList!748 lt!35899)) (= (_1!1105 (h!2117 (toList!748 lt!35899))) (_1!1105 lt!35784))))))

(assert (=> d!18463 (= (getValueByKey!136 (toList!748 lt!35899) (_1!1105 lt!35784)) e!51163)))

(assert (= (and d!18463 c!11991) b!78235))

(assert (= (and d!18463 (not c!11991)) b!78236))

(assert (= (and b!78236 c!11992) b!78237))

(assert (= (and b!78236 (not c!11992)) b!78238))

(declare-fun m!78141 () Bool)

(assert (=> b!78237 m!78141))

(assert (=> b!78011 d!18463))

(declare-fun d!18465 () Bool)

(declare-fun e!51166 () Bool)

(assert (=> d!18465 e!51166))

(declare-fun res!40960 () Bool)

(assert (=> d!18465 (=> res!40960 e!51166)))

(declare-fun lt!36072 () Bool)

(assert (=> d!18465 (= res!40960 (not lt!36072))))

(declare-fun lt!36073 () Bool)

(assert (=> d!18465 (= lt!36072 lt!36073)))

(declare-fun lt!36074 () Unit!2263)

(declare-fun e!51165 () Unit!2263)

(assert (=> d!18465 (= lt!36074 e!51165)))

(declare-fun c!11993 () Bool)

(assert (=> d!18465 (= c!11993 lt!36073)))

(assert (=> d!18465 (= lt!36073 (containsKey!140 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!18465 (= (contains!745 lt!35969 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36072)))

(declare-fun b!78239 () Bool)

(declare-fun lt!36075 () Unit!2263)

(assert (=> b!78239 (= e!51165 lt!36075)))

(assert (=> b!78239 (= lt!36075 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78239 (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78240 () Bool)

(declare-fun Unit!2273 () Unit!2263)

(assert (=> b!78240 (= e!51165 Unit!2273)))

(declare-fun b!78241 () Bool)

(assert (=> b!78241 (= e!51166 (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!18465 c!11993) b!78239))

(assert (= (and d!18465 (not c!11993)) b!78240))

(assert (= (and d!18465 (not res!40960)) b!78241))

(assert (=> d!18465 m!77883))

(declare-fun m!78143 () Bool)

(assert (=> d!18465 m!78143))

(assert (=> b!78239 m!77883))

(declare-fun m!78145 () Bool)

(assert (=> b!78239 m!78145))

(assert (=> b!78239 m!77883))

(declare-fun m!78147 () Bool)

(assert (=> b!78239 m!78147))

(assert (=> b!78239 m!78147))

(declare-fun m!78149 () Bool)

(assert (=> b!78239 m!78149))

(assert (=> b!78241 m!77883))

(assert (=> b!78241 m!78147))

(assert (=> b!78241 m!78147))

(assert (=> b!78241 m!78149))

(assert (=> b!78072 d!18465))

(declare-fun b!78250 () Bool)

(declare-fun e!51172 () (_ BitVec 32))

(declare-fun call!7174 () (_ BitVec 32))

(assert (=> b!78250 (= e!51172 (bvadd #b00000000000000000000000000000001 call!7174))))

(declare-fun b!78251 () Bool)

(declare-fun e!51171 () (_ BitVec 32))

(assert (=> b!78251 (= e!51171 #b00000000000000000000000000000000)))

(declare-fun bm!7171 () Bool)

(assert (=> bm!7171 (= call!7174 (arrayCountValidKeys!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78252 () Bool)

(assert (=> b!78252 (= e!51172 call!7174)))

(declare-fun b!78253 () Bool)

(assert (=> b!78253 (= e!51171 e!51172)))

(declare-fun c!11998 () Bool)

(assert (=> b!78253 (= c!11998 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!18467 () Bool)

(declare-fun lt!36078 () (_ BitVec 32))

(assert (=> d!18467 (and (bvsge lt!36078 #b00000000000000000000000000000000) (bvsle lt!36078 (bvsub (size!2135 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!18467 (= lt!36078 e!51171)))

(declare-fun c!11999 () Bool)

(assert (=> d!18467 (= c!11999 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18467 (and (bvsle #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2135 (_keys!3932 newMap!16)) (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18467 (= (arrayCountValidKeys!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) lt!36078)))

(assert (= (and d!18467 c!11999) b!78251))

(assert (= (and d!18467 (not c!11999)) b!78253))

(assert (= (and b!78253 c!11998) b!78250))

(assert (= (and b!78253 (not c!11998)) b!78252))

(assert (= (or b!78250 b!78252) bm!7171))

(declare-fun m!78151 () Bool)

(assert (=> bm!7171 m!78151))

(declare-fun m!78153 () Bool)

(assert (=> b!78253 m!78153))

(assert (=> b!78253 m!78153))

(declare-fun m!78155 () Bool)

(assert (=> b!78253 m!78155))

(assert (=> b!77935 d!18467))

(declare-fun d!18469 () Bool)

(declare-fun e!51174 () Bool)

(assert (=> d!18469 e!51174))

(declare-fun res!40961 () Bool)

(assert (=> d!18469 (=> res!40961 e!51174)))

(declare-fun lt!36079 () Bool)

(assert (=> d!18469 (= res!40961 (not lt!36079))))

(declare-fun lt!36080 () Bool)

(assert (=> d!18469 (= lt!36079 lt!36080)))

(declare-fun lt!36081 () Unit!2263)

(declare-fun e!51173 () Unit!2263)

(assert (=> d!18469 (= lt!36081 e!51173)))

(declare-fun c!12000 () Bool)

(assert (=> d!18469 (= c!12000 lt!36080)))

(assert (=> d!18469 (= lt!36080 (containsKey!140 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!18469 (= (contains!745 lt!35867 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36079)))

(declare-fun b!78254 () Bool)

(declare-fun lt!36082 () Unit!2263)

(assert (=> b!78254 (= e!51173 lt!36082)))

(assert (=> b!78254 (= lt!36082 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78254 (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!78255 () Bool)

(declare-fun Unit!2274 () Unit!2263)

(assert (=> b!78255 (= e!51173 Unit!2274)))

(declare-fun b!78256 () Bool)

(assert (=> b!78256 (= e!51174 (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!18469 c!12000) b!78254))

(assert (= (and d!18469 (not c!12000)) b!78255))

(assert (= (and d!18469 (not res!40961)) b!78256))

(assert (=> d!18469 m!77883))

(declare-fun m!78157 () Bool)

(assert (=> d!18469 m!78157))

(assert (=> b!78254 m!77883))

(declare-fun m!78159 () Bool)

(assert (=> b!78254 m!78159))

(assert (=> b!78254 m!77883))

(declare-fun m!78161 () Bool)

(assert (=> b!78254 m!78161))

(assert (=> b!78254 m!78161))

(declare-fun m!78163 () Bool)

(assert (=> b!78254 m!78163))

(assert (=> b!78256 m!77883))

(assert (=> b!78256 m!78161))

(assert (=> b!78256 m!78161))

(assert (=> b!78256 m!78163))

(assert (=> b!77993 d!18469))

(declare-fun b!78273 () Bool)

(declare-fun res!40971 () Bool)

(declare-fun e!51185 () Bool)

(assert (=> b!78273 (=> (not res!40971) (not e!51185))))

(declare-fun lt!36087 () SeekEntryResult!250)

(assert (=> b!78273 (= res!40971 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3137 lt!36087)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78273 (and (bvsge (index!3137 lt!36087) #b00000000000000000000000000000000) (bvslt (index!3137 lt!36087) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78274 () Bool)

(declare-fun e!51183 () Bool)

(declare-fun e!51186 () Bool)

(assert (=> b!78274 (= e!51183 e!51186)))

(declare-fun c!12005 () Bool)

(assert (=> b!78274 (= c!12005 ((_ is MissingVacant!250) lt!36087))))

(declare-fun d!18471 () Bool)

(assert (=> d!18471 e!51183))

(declare-fun c!12006 () Bool)

(assert (=> d!18471 (= c!12006 ((_ is MissingZero!250) lt!36087))))

(assert (=> d!18471 (= lt!36087 (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun lt!36088 () Unit!2263)

(declare-fun choose!463 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) Int) Unit!2263)

(assert (=> d!18471 (= lt!36088 (choose!463 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(assert (=> d!18471 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18471 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)) lt!36088)))

(declare-fun bm!7176 () Bool)

(declare-fun call!7179 () Bool)

(assert (=> bm!7176 (= call!7179 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!78275 () Bool)

(declare-fun e!51184 () Bool)

(assert (=> b!78275 (= e!51183 e!51184)))

(declare-fun res!40972 () Bool)

(declare-fun call!7180 () Bool)

(assert (=> b!78275 (= res!40972 call!7180)))

(assert (=> b!78275 (=> (not res!40972) (not e!51184))))

(declare-fun b!78276 () Bool)

(declare-fun res!40970 () Bool)

(assert (=> b!78276 (=> (not res!40970) (not e!51185))))

(assert (=> b!78276 (= res!40970 call!7180)))

(assert (=> b!78276 (= e!51186 e!51185)))

(declare-fun b!78277 () Bool)

(assert (=> b!78277 (= e!51185 (not call!7179))))

(declare-fun b!78278 () Bool)

(assert (=> b!78278 (= e!51184 (not call!7179))))

(declare-fun b!78279 () Bool)

(assert (=> b!78279 (= e!51186 ((_ is Undefined!250) lt!36087))))

(declare-fun bm!7177 () Bool)

(assert (=> bm!7177 (= call!7180 (inRange!0 (ite c!12006 (index!3134 lt!36087) (index!3137 lt!36087)) (mask!6268 newMap!16)))))

(declare-fun b!78280 () Bool)

(assert (=> b!78280 (and (bvsge (index!3134 lt!36087) #b00000000000000000000000000000000) (bvslt (index!3134 lt!36087) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun res!40973 () Bool)

(assert (=> b!78280 (= res!40973 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3134 lt!36087)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78280 (=> (not res!40973) (not e!51184))))

(assert (= (and d!18471 c!12006) b!78275))

(assert (= (and d!18471 (not c!12006)) b!78274))

(assert (= (and b!78275 res!40972) b!78280))

(assert (= (and b!78280 res!40973) b!78278))

(assert (= (and b!78274 c!12005) b!78276))

(assert (= (and b!78274 (not c!12005)) b!78279))

(assert (= (and b!78276 res!40970) b!78273))

(assert (= (and b!78273 res!40971) b!78277))

(assert (= (or b!78275 b!78276) bm!7177))

(assert (= (or b!78278 b!78277) bm!7176))

(assert (=> d!18471 m!77749))

(assert (=> d!18471 m!78085))

(assert (=> d!18471 m!77749))

(declare-fun m!78165 () Bool)

(assert (=> d!18471 m!78165))

(declare-fun m!78167 () Bool)

(assert (=> d!18471 m!78167))

(assert (=> bm!7176 m!77749))

(assert (=> bm!7176 m!78127))

(declare-fun m!78169 () Bool)

(assert (=> b!78280 m!78169))

(declare-fun m!78171 () Bool)

(assert (=> b!78273 m!78171))

(declare-fun m!78173 () Bool)

(assert (=> bm!7177 m!78173))

(assert (=> bm!7154 d!18471))

(declare-fun d!18473 () Bool)

(declare-fun res!40975 () Bool)

(declare-fun e!51188 () Bool)

(assert (=> d!18473 (=> res!40975 e!51188)))

(assert (=> d!18473 (= res!40975 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18473 (= (arrayNoDuplicates!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 Nil!1531) e!51188)))

(declare-fun b!78281 () Bool)

(declare-fun e!51187 () Bool)

(assert (=> b!78281 (= e!51187 (contains!747 Nil!1531 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7178 () Bool)

(declare-fun call!7181 () Bool)

(declare-fun c!12007 () Bool)

(assert (=> bm!7178 (= call!7181 (arrayNoDuplicates!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12007 (Cons!1530 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) Nil!1531) Nil!1531)))))

(declare-fun b!78282 () Bool)

(declare-fun e!51190 () Bool)

(declare-fun e!51189 () Bool)

(assert (=> b!78282 (= e!51190 e!51189)))

(assert (=> b!78282 (= c!12007 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78283 () Bool)

(assert (=> b!78283 (= e!51189 call!7181)))

(declare-fun b!78284 () Bool)

(assert (=> b!78284 (= e!51188 e!51190)))

(declare-fun res!40974 () Bool)

(assert (=> b!78284 (=> (not res!40974) (not e!51190))))

(assert (=> b!78284 (= res!40974 (not e!51187))))

(declare-fun res!40976 () Bool)

(assert (=> b!78284 (=> (not res!40976) (not e!51187))))

(assert (=> b!78284 (= res!40976 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78285 () Bool)

(assert (=> b!78285 (= e!51189 call!7181)))

(assert (= (and d!18473 (not res!40975)) b!78284))

(assert (= (and b!78284 res!40976) b!78281))

(assert (= (and b!78284 res!40974) b!78282))

(assert (= (and b!78282 c!12007) b!78283))

(assert (= (and b!78282 (not c!12007)) b!78285))

(assert (= (or b!78283 b!78285) bm!7178))

(assert (=> b!78281 m!78153))

(assert (=> b!78281 m!78153))

(declare-fun m!78175 () Bool)

(assert (=> b!78281 m!78175))

(assert (=> bm!7178 m!78153))

(declare-fun m!78177 () Bool)

(assert (=> bm!7178 m!78177))

(assert (=> b!78282 m!78153))

(assert (=> b!78282 m!78153))

(assert (=> b!78282 m!78155))

(assert (=> b!78284 m!78153))

(assert (=> b!78284 m!78153))

(assert (=> b!78284 m!78155))

(assert (=> b!77937 d!18473))

(declare-fun b!78286 () Bool)

(declare-fun lt!36089 () Unit!2263)

(declare-fun lt!36095 () Unit!2263)

(assert (=> b!78286 (= lt!36089 lt!36095)))

(declare-fun lt!36091 () (_ BitVec 64))

(declare-fun lt!36093 () (_ BitVec 64))

(declare-fun lt!36092 () ListLongMap!1465)

(declare-fun lt!36094 () V!2995)

(assert (=> b!78286 (not (contains!745 (+!109 lt!36092 (tuple2!2191 lt!36093 lt!36094)) lt!36091))))

(assert (=> b!78286 (= lt!36095 (addStillNotContains!30 lt!36092 lt!36093 lt!36094 lt!36091))))

(assert (=> b!78286 (= lt!36091 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!78286 (= lt!36094 (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!78286 (= lt!36093 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!7182 () ListLongMap!1465)

(assert (=> b!78286 (= lt!36092 call!7182)))

(declare-fun e!51191 () ListLongMap!1465)

(assert (=> b!78286 (= e!51191 (+!109 call!7182 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!78287 () Bool)

(declare-fun e!51194 () ListLongMap!1465)

(assert (=> b!78287 (= e!51194 (ListLongMap!1466 Nil!1530))))

(declare-fun lt!36090 () ListLongMap!1465)

(declare-fun b!78288 () Bool)

(declare-fun e!51196 () Bool)

(assert (=> b!78288 (= e!51196 (= lt!36090 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!78290 () Bool)

(declare-fun e!51193 () Bool)

(declare-fun e!51192 () Bool)

(assert (=> b!78290 (= e!51193 e!51192)))

(assert (=> b!78290 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun res!40978 () Bool)

(assert (=> b!78290 (= res!40978 (contains!745 lt!36090 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!78290 (=> (not res!40978) (not e!51192))))

(declare-fun b!78291 () Bool)

(assert (=> b!78291 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> b!78291 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2136 (_values!2255 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> b!78291 (= e!51192 (= (apply!79 lt!36090 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!7179 () Bool)

(assert (=> bm!7179 (= call!7182 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun b!78292 () Bool)

(assert (=> b!78292 (= e!51191 call!7182)))

(declare-fun b!78293 () Bool)

(declare-fun e!51197 () Bool)

(assert (=> b!78293 (= e!51197 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!78293 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!78289 () Bool)

(declare-fun e!51195 () Bool)

(assert (=> b!78289 (= e!51195 e!51193)))

(declare-fun c!12010 () Bool)

(assert (=> b!78289 (= c!12010 e!51197)))

(declare-fun res!40977 () Bool)

(assert (=> b!78289 (=> (not res!40977) (not e!51197))))

(assert (=> b!78289 (= res!40977 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun d!18475 () Bool)

(assert (=> d!18475 e!51195))

(declare-fun res!40979 () Bool)

(assert (=> d!18475 (=> (not res!40979) (not e!51195))))

(assert (=> d!18475 (= res!40979 (not (contains!745 lt!36090 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18475 (= lt!36090 e!51194)))

(declare-fun c!12008 () Bool)

(assert (=> d!18475 (= c!12008 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> d!18475 (validMask!0 (mask!6268 (v!2594 (underlying!281 thiss!992))))))

(assert (=> d!18475 (= (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))) lt!36090)))

(declare-fun b!78294 () Bool)

(assert (=> b!78294 (= e!51196 (isEmpty!331 lt!36090))))

(declare-fun b!78295 () Bool)

(assert (=> b!78295 (= e!51194 e!51191)))

(declare-fun c!12009 () Bool)

(assert (=> b!78295 (= c!12009 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78296 () Bool)

(declare-fun res!40980 () Bool)

(assert (=> b!78296 (=> (not res!40980) (not e!51195))))

(assert (=> b!78296 (= res!40980 (not (contains!745 lt!36090 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78297 () Bool)

(assert (=> b!78297 (= e!51193 e!51196)))

(declare-fun c!12011 () Bool)

(assert (=> b!78297 (= c!12011 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18475 c!12008) b!78287))

(assert (= (and d!18475 (not c!12008)) b!78295))

(assert (= (and b!78295 c!12009) b!78286))

(assert (= (and b!78295 (not c!12009)) b!78292))

(assert (= (or b!78286 b!78292) bm!7179))

(assert (= (and d!18475 res!40979) b!78296))

(assert (= (and b!78296 res!40980) b!78289))

(assert (= (and b!78289 res!40977) b!78293))

(assert (= (and b!78289 c!12010) b!78290))

(assert (= (and b!78289 (not c!12010)) b!78297))

(assert (= (and b!78290 res!40978) b!78291))

(assert (= (and b!78297 c!12011) b!78288))

(assert (= (and b!78297 (not c!12011)) b!78294))

(declare-fun b_lambda!3513 () Bool)

(assert (=> (not b_lambda!3513) (not b!78286)))

(assert (=> b!78286 t!5180))

(declare-fun b_and!4813 () Bool)

(assert (= b_and!4809 (and (=> t!5180 result!2815) b_and!4813)))

(assert (=> b!78286 t!5182))

(declare-fun b_and!4815 () Bool)

(assert (= b_and!4811 (and (=> t!5182 result!2819) b_and!4815)))

(declare-fun b_lambda!3515 () Bool)

(assert (=> (not b_lambda!3515) (not b!78291)))

(assert (=> b!78291 t!5180))

(declare-fun b_and!4817 () Bool)

(assert (= b_and!4813 (and (=> t!5180 result!2815) b_and!4817)))

(assert (=> b!78291 t!5182))

(declare-fun b_and!4819 () Bool)

(assert (= b_and!4815 (and (=> t!5182 result!2819) b_and!4819)))

(declare-fun m!78179 () Bool)

(assert (=> b!78294 m!78179))

(declare-fun m!78181 () Bool)

(assert (=> b!78296 m!78181))

(declare-fun m!78183 () Bool)

(assert (=> b!78288 m!78183))

(declare-fun m!78185 () Bool)

(assert (=> b!78293 m!78185))

(assert (=> b!78293 m!78185))

(declare-fun m!78187 () Bool)

(assert (=> b!78293 m!78187))

(declare-fun m!78189 () Bool)

(assert (=> d!18475 m!78189))

(assert (=> d!18475 m!77777))

(assert (=> b!78291 m!77769))

(assert (=> b!78291 m!78185))

(declare-fun m!78191 () Bool)

(assert (=> b!78291 m!78191))

(assert (=> b!78291 m!78185))

(declare-fun m!78193 () Bool)

(assert (=> b!78291 m!78193))

(assert (=> b!78291 m!78191))

(assert (=> b!78291 m!77769))

(declare-fun m!78195 () Bool)

(assert (=> b!78291 m!78195))

(assert (=> b!78290 m!78185))

(assert (=> b!78290 m!78185))

(declare-fun m!78197 () Bool)

(assert (=> b!78290 m!78197))

(assert (=> b!78295 m!78185))

(assert (=> b!78295 m!78185))

(assert (=> b!78295 m!78187))

(assert (=> bm!7179 m!78183))

(declare-fun m!78199 () Bool)

(assert (=> b!78286 m!78199))

(declare-fun m!78201 () Bool)

(assert (=> b!78286 m!78201))

(assert (=> b!78286 m!78191))

(assert (=> b!78286 m!77769))

(assert (=> b!78286 m!78195))

(declare-fun m!78203 () Bool)

(assert (=> b!78286 m!78203))

(assert (=> b!78286 m!78185))

(assert (=> b!78286 m!78199))

(assert (=> b!78286 m!78191))

(assert (=> b!78286 m!77769))

(declare-fun m!78205 () Bool)

(assert (=> b!78286 m!78205))

(assert (=> bm!7075 d!18475))

(declare-fun d!18477 () Bool)

(declare-fun res!40981 () Bool)

(declare-fun e!51198 () Bool)

(assert (=> d!18477 (=> (not res!40981) (not e!51198))))

(assert (=> d!18477 (= res!40981 (simpleValid!54 (v!2594 (underlying!281 thiss!992))))))

(assert (=> d!18477 (= (valid!313 (v!2594 (underlying!281 thiss!992))) e!51198)))

(declare-fun b!78298 () Bool)

(declare-fun res!40982 () Bool)

(assert (=> b!78298 (=> (not res!40982) (not e!51198))))

(assert (=> b!78298 (= res!40982 (= (arrayCountValidKeys!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000000 (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))) (_size!415 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun b!78299 () Bool)

(declare-fun res!40983 () Bool)

(assert (=> b!78299 (=> (not res!40983) (not e!51198))))

(assert (=> b!78299 (= res!40983 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun b!78300 () Bool)

(assert (=> b!78300 (= e!51198 (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000000 Nil!1531))))

(assert (= (and d!18477 res!40981) b!78298))

(assert (= (and b!78298 res!40982) b!78299))

(assert (= (and b!78299 res!40983) b!78300))

(declare-fun m!78207 () Bool)

(assert (=> d!18477 m!78207))

(declare-fun m!78209 () Bool)

(assert (=> b!78298 m!78209))

(declare-fun m!78211 () Bool)

(assert (=> b!78299 m!78211))

(declare-fun m!78213 () Bool)

(assert (=> b!78300 m!78213))

(assert (=> d!18453 d!18477))

(assert (=> d!18451 d!18439))

(assert (=> d!18419 d!18425))

(declare-fun d!18479 () Bool)

(assert (=> d!18479 (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) from!355 Nil!1531)))

(assert (=> d!18479 true))

(declare-fun _$71!105 () Unit!2263)

(assert (=> d!18479 (= (choose!39 (_keys!3932 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!105)))

(declare-fun bs!3300 () Bool)

(assert (= bs!3300 d!18479))

(assert (=> bs!3300 m!77747))

(assert (=> d!18419 d!18479))

(declare-fun d!18481 () Bool)

(assert (=> d!18481 (= (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78067 d!18481))

(declare-fun d!18483 () Bool)

(declare-fun res!40984 () Bool)

(declare-fun e!51199 () Bool)

(assert (=> d!18483 (=> (not res!40984) (not e!51199))))

(assert (=> d!18483 (= res!40984 (simpleValid!54 (_2!1104 lt!36056)))))

(assert (=> d!18483 (= (valid!313 (_2!1104 lt!36056)) e!51199)))

(declare-fun b!78301 () Bool)

(declare-fun res!40985 () Bool)

(assert (=> b!78301 (=> (not res!40985) (not e!51199))))

(assert (=> b!78301 (= res!40985 (= (arrayCountValidKeys!0 (_keys!3932 (_2!1104 lt!36056)) #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))) (_size!415 (_2!1104 lt!36056))))))

(declare-fun b!78302 () Bool)

(declare-fun res!40986 () Bool)

(assert (=> b!78302 (=> (not res!40986) (not e!51199))))

(assert (=> b!78302 (= res!40986 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 (_2!1104 lt!36056)) (mask!6268 (_2!1104 lt!36056))))))

(declare-fun b!78303 () Bool)

(assert (=> b!78303 (= e!51199 (arrayNoDuplicates!0 (_keys!3932 (_2!1104 lt!36056)) #b00000000000000000000000000000000 Nil!1531))))

(assert (= (and d!18483 res!40984) b!78301))

(assert (= (and b!78301 res!40985) b!78302))

(assert (= (and b!78302 res!40986) b!78303))

(declare-fun m!78215 () Bool)

(assert (=> d!18483 m!78215))

(declare-fun m!78217 () Bool)

(assert (=> b!78301 m!78217))

(declare-fun m!78219 () Bool)

(assert (=> b!78302 m!78219))

(declare-fun m!78221 () Bool)

(assert (=> b!78303 m!78221))

(assert (=> d!18457 d!18483))

(assert (=> d!18457 d!18411))

(declare-fun b!78305 () Bool)

(declare-fun e!51200 () Option!142)

(declare-fun e!51201 () Option!142)

(assert (=> b!78305 (= e!51200 e!51201)))

(declare-fun c!12013 () Bool)

(assert (=> b!78305 (= c!12013 (and ((_ is Cons!1529) (toList!748 lt!35888)) (not (= (_1!1105 (h!2117 (toList!748 lt!35888))) (_1!1105 lt!35788)))))))

(declare-fun b!78304 () Bool)

(assert (=> b!78304 (= e!51200 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35888)))))))

(declare-fun b!78306 () Bool)

(assert (=> b!78306 (= e!51201 (getValueByKey!136 (t!5183 (toList!748 lt!35888)) (_1!1105 lt!35788)))))

(declare-fun b!78307 () Bool)

(assert (=> b!78307 (= e!51201 None!140)))

(declare-fun d!18485 () Bool)

(declare-fun c!12012 () Bool)

(assert (=> d!18485 (= c!12012 (and ((_ is Cons!1529) (toList!748 lt!35888)) (= (_1!1105 (h!2117 (toList!748 lt!35888))) (_1!1105 lt!35788))))))

(assert (=> d!18485 (= (getValueByKey!136 (toList!748 lt!35888) (_1!1105 lt!35788)) e!51200)))

(assert (= (and d!18485 c!12012) b!78304))

(assert (= (and d!18485 (not c!12012)) b!78305))

(assert (= (and b!78305 c!12013) b!78306))

(assert (= (and b!78305 (not c!12013)) b!78307))

(declare-fun m!78223 () Bool)

(assert (=> b!78306 m!78223))

(assert (=> b!78007 d!18485))

(declare-fun d!18487 () Bool)

(declare-fun e!51203 () Bool)

(assert (=> d!18487 e!51203))

(declare-fun res!40987 () Bool)

(assert (=> d!18487 (=> res!40987 e!51203)))

(declare-fun lt!36096 () Bool)

(assert (=> d!18487 (= res!40987 (not lt!36096))))

(declare-fun lt!36097 () Bool)

(assert (=> d!18487 (= lt!36096 lt!36097)))

(declare-fun lt!36098 () Unit!2263)

(declare-fun e!51202 () Unit!2263)

(assert (=> d!18487 (= lt!36098 e!51202)))

(declare-fun c!12014 () Bool)

(assert (=> d!18487 (= c!12014 lt!36097)))

(assert (=> d!18487 (= lt!36097 (containsKey!140 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18487 (= (contains!745 lt!35867 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36096)))

(declare-fun b!78308 () Bool)

(declare-fun lt!36099 () Unit!2263)

(assert (=> b!78308 (= e!51202 lt!36099)))

(assert (=> b!78308 (= lt!36099 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78308 (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78309 () Bool)

(declare-fun Unit!2275 () Unit!2263)

(assert (=> b!78309 (= e!51202 Unit!2275)))

(declare-fun b!78310 () Bool)

(assert (=> b!78310 (= e!51203 (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18487 c!12014) b!78308))

(assert (= (and d!18487 (not c!12014)) b!78309))

(assert (= (and d!18487 (not res!40987)) b!78310))

(declare-fun m!78225 () Bool)

(assert (=> d!18487 m!78225))

(declare-fun m!78227 () Bool)

(assert (=> b!78308 m!78227))

(declare-fun m!78229 () Bool)

(assert (=> b!78308 m!78229))

(assert (=> b!78308 m!78229))

(declare-fun m!78231 () Bool)

(assert (=> b!78308 m!78231))

(assert (=> b!78310 m!78229))

(assert (=> b!78310 m!78229))

(assert (=> b!78310 m!78231))

(assert (=> d!18427 d!18487))

(assert (=> d!18427 d!18439))

(assert (=> bm!7092 d!18427))

(declare-fun b!78311 () Bool)

(declare-fun e!51207 () ListLongMap!1465)

(declare-fun call!7189 () ListLongMap!1465)

(assert (=> b!78311 (= e!51207 (+!109 call!7189 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(declare-fun b!78312 () Bool)

(declare-fun res!40991 () Bool)

(declare-fun e!51216 () Bool)

(assert (=> b!78312 (=> (not res!40991) (not e!51216))))

(declare-fun e!51214 () Bool)

(assert (=> b!78312 (= res!40991 e!51214)))

(declare-fun c!12020 () Bool)

(assert (=> b!78312 (= c!12020 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78313 () Bool)

(declare-fun e!51209 () ListLongMap!1465)

(declare-fun call!7188 () ListLongMap!1465)

(assert (=> b!78313 (= e!51209 call!7188)))

(declare-fun bm!7180 () Bool)

(declare-fun call!7187 () ListLongMap!1465)

(declare-fun call!7185 () ListLongMap!1465)

(assert (=> bm!7180 (= call!7187 call!7185)))

(declare-fun b!78314 () Bool)

(declare-fun e!51213 () Bool)

(declare-fun lt!36112 () ListLongMap!1465)

(assert (=> b!78314 (= e!51213 (= (apply!79 lt!36112 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78314 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_values!2255 newMap!16))))))

(assert (=> b!78314 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78315 () Bool)

(declare-fun e!51210 () Bool)

(assert (=> b!78315 (= e!51214 e!51210)))

(declare-fun res!40992 () Bool)

(declare-fun call!7184 () Bool)

(assert (=> b!78315 (= res!40992 call!7184)))

(assert (=> b!78315 (=> (not res!40992) (not e!51210))))

(declare-fun bm!7181 () Bool)

(declare-fun call!7186 () Bool)

(assert (=> bm!7181 (= call!7186 (contains!745 lt!36112 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78317 () Bool)

(declare-fun e!51208 () Bool)

(assert (=> b!78317 (= e!51208 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78318 () Bool)

(declare-fun e!51215 () Unit!2263)

(declare-fun Unit!2276 () Unit!2263)

(assert (=> b!78318 (= e!51215 Unit!2276)))

(declare-fun bm!7182 () Bool)

(assert (=> bm!7182 (= call!7185 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78319 () Bool)

(declare-fun e!51205 () ListLongMap!1465)

(declare-fun call!7183 () ListLongMap!1465)

(assert (=> b!78319 (= e!51205 call!7183)))

(declare-fun b!78320 () Bool)

(declare-fun e!51204 () Bool)

(assert (=> b!78320 (= e!51216 e!51204)))

(declare-fun c!12016 () Bool)

(assert (=> b!78320 (= c!12016 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78321 () Bool)

(declare-fun lt!36114 () Unit!2263)

(assert (=> b!78321 (= e!51215 lt!36114)))

(declare-fun lt!36113 () ListLongMap!1465)

(assert (=> b!78321 (= lt!36113 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36119 () (_ BitVec 64))

(assert (=> b!78321 (= lt!36119 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36110 () (_ BitVec 64))

(assert (=> b!78321 (= lt!36110 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36104 () Unit!2263)

(assert (=> b!78321 (= lt!36104 (addStillContains!55 lt!36113 lt!36119 (zeroValue!2170 newMap!16) lt!36110))))

(assert (=> b!78321 (contains!745 (+!109 lt!36113 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16))) lt!36110)))

(declare-fun lt!36109 () Unit!2263)

(assert (=> b!78321 (= lt!36109 lt!36104)))

(declare-fun lt!36120 () ListLongMap!1465)

(assert (=> b!78321 (= lt!36120 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36121 () (_ BitVec 64))

(assert (=> b!78321 (= lt!36121 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36117 () (_ BitVec 64))

(assert (=> b!78321 (= lt!36117 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36108 () Unit!2263)

(assert (=> b!78321 (= lt!36108 (addApplyDifferent!55 lt!36120 lt!36121 (minValue!2170 newMap!16) lt!36117))))

(assert (=> b!78321 (= (apply!79 (+!109 lt!36120 (tuple2!2191 lt!36121 (minValue!2170 newMap!16))) lt!36117) (apply!79 lt!36120 lt!36117))))

(declare-fun lt!36100 () Unit!2263)

(assert (=> b!78321 (= lt!36100 lt!36108)))

(declare-fun lt!36116 () ListLongMap!1465)

(assert (=> b!78321 (= lt!36116 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36102 () (_ BitVec 64))

(assert (=> b!78321 (= lt!36102 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36106 () (_ BitVec 64))

(assert (=> b!78321 (= lt!36106 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36118 () Unit!2263)

(assert (=> b!78321 (= lt!36118 (addApplyDifferent!55 lt!36116 lt!36102 (zeroValue!2170 newMap!16) lt!36106))))

(assert (=> b!78321 (= (apply!79 (+!109 lt!36116 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16))) lt!36106) (apply!79 lt!36116 lt!36106))))

(declare-fun lt!36105 () Unit!2263)

(assert (=> b!78321 (= lt!36105 lt!36118)))

(declare-fun lt!36101 () ListLongMap!1465)

(assert (=> b!78321 (= lt!36101 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36103 () (_ BitVec 64))

(assert (=> b!78321 (= lt!36103 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36115 () (_ BitVec 64))

(assert (=> b!78321 (= lt!36115 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78321 (= lt!36114 (addApplyDifferent!55 lt!36101 lt!36103 (minValue!2170 newMap!16) lt!36115))))

(assert (=> b!78321 (= (apply!79 (+!109 lt!36101 (tuple2!2191 lt!36103 (minValue!2170 newMap!16))) lt!36115) (apply!79 lt!36101 lt!36115))))

(declare-fun b!78322 () Bool)

(declare-fun e!51206 () Bool)

(assert (=> b!78322 (= e!51206 e!51213)))

(declare-fun res!40990 () Bool)

(assert (=> b!78322 (=> (not res!40990) (not e!51213))))

(assert (=> b!78322 (= res!40990 (contains!745 lt!36112 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78322 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78323 () Bool)

(assert (=> b!78323 (= e!51207 e!51209)))

(declare-fun c!12017 () Bool)

(assert (=> b!78323 (= c!12017 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7183 () Bool)

(assert (=> bm!7183 (= call!7188 call!7189)))

(declare-fun b!78324 () Bool)

(declare-fun res!40988 () Bool)

(assert (=> b!78324 (=> (not res!40988) (not e!51216))))

(assert (=> b!78324 (= res!40988 e!51206)))

(declare-fun res!40989 () Bool)

(assert (=> b!78324 (=> res!40989 e!51206)))

(declare-fun e!51211 () Bool)

(assert (=> b!78324 (= res!40989 (not e!51211))))

(declare-fun res!40993 () Bool)

(assert (=> b!78324 (=> (not res!40993) (not e!51211))))

(assert (=> b!78324 (= res!40993 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78325 () Bool)

(declare-fun c!12018 () Bool)

(assert (=> b!78325 (= c!12018 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78325 (= e!51209 e!51205)))

(declare-fun b!78326 () Bool)

(assert (=> b!78326 (= e!51211 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78327 () Bool)

(assert (=> b!78327 (= e!51205 call!7188)))

(declare-fun c!12015 () Bool)

(declare-fun bm!7184 () Bool)

(assert (=> bm!7184 (= call!7189 (+!109 (ite c!12015 call!7185 (ite c!12017 call!7187 call!7183)) (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun bm!7185 () Bool)

(assert (=> bm!7185 (= call!7184 (contains!745 lt!36112 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78328 () Bool)

(assert (=> b!78328 (= e!51214 (not call!7184))))

(declare-fun b!78316 () Bool)

(declare-fun e!51212 () Bool)

(assert (=> b!78316 (= e!51204 e!51212)))

(declare-fun res!40995 () Bool)

(assert (=> b!78316 (= res!40995 call!7186)))

(assert (=> b!78316 (=> (not res!40995) (not e!51212))))

(declare-fun d!18489 () Bool)

(assert (=> d!18489 e!51216))

(declare-fun res!40996 () Bool)

(assert (=> d!18489 (=> (not res!40996) (not e!51216))))

(assert (=> d!18489 (= res!40996 (or (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))))

(declare-fun lt!36111 () ListLongMap!1465)

(assert (=> d!18489 (= lt!36112 lt!36111)))

(declare-fun lt!36107 () Unit!2263)

(assert (=> d!18489 (= lt!36107 e!51215)))

(declare-fun c!12019 () Bool)

(assert (=> d!18489 (= c!12019 e!51208)))

(declare-fun res!40994 () Bool)

(assert (=> d!18489 (=> (not res!40994) (not e!51208))))

(assert (=> d!18489 (= res!40994 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18489 (= lt!36111 e!51207)))

(assert (=> d!18489 (= c!12015 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18489 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18489 (= (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36112)))

(declare-fun bm!7186 () Bool)

(assert (=> bm!7186 (= call!7183 call!7187)))

(declare-fun b!78329 () Bool)

(assert (=> b!78329 (= e!51212 (= (apply!79 lt!36112 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!78330 () Bool)

(assert (=> b!78330 (= e!51204 (not call!7186))))

(declare-fun b!78331 () Bool)

(assert (=> b!78331 (= e!51210 (= (apply!79 lt!36112 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(assert (= (and d!18489 c!12015) b!78311))

(assert (= (and d!18489 (not c!12015)) b!78323))

(assert (= (and b!78323 c!12017) b!78313))

(assert (= (and b!78323 (not c!12017)) b!78325))

(assert (= (and b!78325 c!12018) b!78327))

(assert (= (and b!78325 (not c!12018)) b!78319))

(assert (= (or b!78327 b!78319) bm!7186))

(assert (= (or b!78313 bm!7186) bm!7180))

(assert (= (or b!78313 b!78327) bm!7183))

(assert (= (or b!78311 bm!7180) bm!7182))

(assert (= (or b!78311 bm!7183) bm!7184))

(assert (= (and d!18489 res!40994) b!78317))

(assert (= (and d!18489 c!12019) b!78321))

(assert (= (and d!18489 (not c!12019)) b!78318))

(assert (= (and d!18489 res!40996) b!78324))

(assert (= (and b!78324 res!40993) b!78326))

(assert (= (and b!78324 (not res!40989)) b!78322))

(assert (= (and b!78322 res!40990) b!78314))

(assert (= (and b!78324 res!40988) b!78312))

(assert (= (and b!78312 c!12020) b!78315))

(assert (= (and b!78312 (not c!12020)) b!78328))

(assert (= (and b!78315 res!40992) b!78331))

(assert (= (or b!78315 b!78328) bm!7185))

(assert (= (and b!78312 res!40991) b!78320))

(assert (= (and b!78320 c!12016) b!78316))

(assert (= (and b!78320 (not c!12016)) b!78330))

(assert (= (and b!78316 res!40995) b!78329))

(assert (= (or b!78316 b!78330) bm!7181))

(declare-fun b_lambda!3517 () Bool)

(assert (=> (not b_lambda!3517) (not b!78314)))

(declare-fun t!5191 () Bool)

(declare-fun tb!1629 () Bool)

(assert (=> (and b!77850 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16)) t!5191) tb!1629))

(declare-fun result!2829 () Bool)

(assert (=> tb!1629 (= result!2829 tp_is_empty!2511)))

(assert (=> b!78314 t!5191))

(declare-fun b_and!4821 () Bool)

(assert (= b_and!4817 (and (=> t!5191 result!2829) b_and!4821)))

(declare-fun t!5193 () Bool)

(declare-fun tb!1631 () Bool)

(assert (=> (and b!77841 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 newMap!16)) t!5193) tb!1631))

(declare-fun result!2831 () Bool)

(assert (= result!2831 result!2829))

(assert (=> b!78314 t!5193))

(declare-fun b_and!4823 () Bool)

(assert (= b_and!4819 (and (=> t!5193 result!2831) b_and!4823)))

(declare-fun m!78233 () Bool)

(assert (=> bm!7185 m!78233))

(declare-fun m!78235 () Bool)

(assert (=> bm!7182 m!78235))

(declare-fun m!78237 () Bool)

(assert (=> bm!7181 m!78237))

(declare-fun m!78239 () Bool)

(assert (=> b!78321 m!78239))

(declare-fun m!78241 () Bool)

(assert (=> b!78321 m!78241))

(declare-fun m!78243 () Bool)

(assert (=> b!78321 m!78243))

(declare-fun m!78245 () Bool)

(assert (=> b!78321 m!78245))

(declare-fun m!78247 () Bool)

(assert (=> b!78321 m!78247))

(declare-fun m!78249 () Bool)

(assert (=> b!78321 m!78249))

(declare-fun m!78251 () Bool)

(assert (=> b!78321 m!78251))

(assert (=> b!78321 m!78243))

(declare-fun m!78253 () Bool)

(assert (=> b!78321 m!78253))

(declare-fun m!78255 () Bool)

(assert (=> b!78321 m!78255))

(assert (=> b!78321 m!78153))

(assert (=> b!78321 m!78255))

(declare-fun m!78257 () Bool)

(assert (=> b!78321 m!78257))

(assert (=> b!78321 m!78241))

(declare-fun m!78259 () Bool)

(assert (=> b!78321 m!78259))

(declare-fun m!78261 () Bool)

(assert (=> b!78321 m!78261))

(assert (=> b!78321 m!78261))

(declare-fun m!78263 () Bool)

(assert (=> b!78321 m!78263))

(declare-fun m!78265 () Bool)

(assert (=> b!78321 m!78265))

(assert (=> b!78321 m!78235))

(declare-fun m!78267 () Bool)

(assert (=> b!78321 m!78267))

(assert (=> d!18489 m!78167))

(declare-fun m!78269 () Bool)

(assert (=> b!78314 m!78269))

(assert (=> b!78314 m!78153))

(declare-fun m!78271 () Bool)

(assert (=> b!78314 m!78271))

(assert (=> b!78314 m!78269))

(declare-fun m!78273 () Bool)

(assert (=> b!78314 m!78273))

(declare-fun m!78275 () Bool)

(assert (=> b!78314 m!78275))

(assert (=> b!78314 m!78273))

(assert (=> b!78314 m!78153))

(declare-fun m!78277 () Bool)

(assert (=> bm!7184 m!78277))

(declare-fun m!78279 () Bool)

(assert (=> b!78311 m!78279))

(assert (=> b!78317 m!78153))

(assert (=> b!78317 m!78153))

(assert (=> b!78317 m!78155))

(assert (=> b!78322 m!78153))

(assert (=> b!78322 m!78153))

(declare-fun m!78281 () Bool)

(assert (=> b!78322 m!78281))

(declare-fun m!78283 () Bool)

(assert (=> b!78331 m!78283))

(declare-fun m!78285 () Bool)

(assert (=> b!78329 m!78285))

(assert (=> b!78326 m!78153))

(assert (=> b!78326 m!78153))

(assert (=> b!78326 m!78155))

(assert (=> d!18449 d!18489))

(declare-fun d!18491 () Bool)

(declare-fun e!51218 () Bool)

(assert (=> d!18491 e!51218))

(declare-fun res!40997 () Bool)

(assert (=> d!18491 (=> res!40997 e!51218)))

(declare-fun lt!36122 () Bool)

(assert (=> d!18491 (= res!40997 (not lt!36122))))

(declare-fun lt!36123 () Bool)

(assert (=> d!18491 (= lt!36122 lt!36123)))

(declare-fun lt!36124 () Unit!2263)

(declare-fun e!51217 () Unit!2263)

(assert (=> d!18491 (= lt!36124 e!51217)))

(declare-fun c!12021 () Bool)

(assert (=> d!18491 (= c!12021 lt!36123)))

(assert (=> d!18491 (= lt!36123 (containsKey!140 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868))))

(assert (=> d!18491 (= (contains!745 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)) lt!35868) lt!36122)))

(declare-fun b!78332 () Bool)

(declare-fun lt!36125 () Unit!2263)

(assert (=> b!78332 (= e!51217 lt!36125)))

(assert (=> b!78332 (= lt!36125 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868))))

(assert (=> b!78332 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868))))

(declare-fun b!78333 () Bool)

(declare-fun Unit!2277 () Unit!2263)

(assert (=> b!78333 (= e!51217 Unit!2277)))

(declare-fun b!78334 () Bool)

(assert (=> b!78334 (= e!51218 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868)))))

(assert (= (and d!18491 c!12021) b!78332))

(assert (= (and d!18491 (not c!12021)) b!78333))

(assert (= (and d!18491 (not res!40997)) b!78334))

(declare-fun m!78287 () Bool)

(assert (=> d!18491 m!78287))

(declare-fun m!78289 () Bool)

(assert (=> b!78332 m!78289))

(declare-fun m!78291 () Bool)

(assert (=> b!78332 m!78291))

(assert (=> b!78332 m!78291))

(declare-fun m!78293 () Bool)

(assert (=> b!78332 m!78293))

(assert (=> b!78334 m!78291))

(assert (=> b!78334 m!78291))

(assert (=> b!78334 m!78293))

(assert (=> b!77989 d!18491))

(declare-fun d!18493 () Bool)

(assert (=> d!18493 (not (contains!745 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)) lt!35868))))

(declare-fun lt!36128 () Unit!2263)

(declare-fun choose!464 (ListLongMap!1465 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2263)

(assert (=> d!18493 (= lt!36128 (choose!464 lt!35869 lt!35870 lt!35871 lt!35868))))

(declare-fun e!51221 () Bool)

(assert (=> d!18493 e!51221))

(declare-fun res!41000 () Bool)

(assert (=> d!18493 (=> (not res!41000) (not e!51221))))

(assert (=> d!18493 (= res!41000 (not (contains!745 lt!35869 lt!35868)))))

(assert (=> d!18493 (= (addStillNotContains!30 lt!35869 lt!35870 lt!35871 lt!35868) lt!36128)))

(declare-fun b!78338 () Bool)

(assert (=> b!78338 (= e!51221 (not (= lt!35870 lt!35868)))))

(assert (= (and d!18493 res!41000) b!78338))

(assert (=> d!18493 m!77913))

(assert (=> d!18493 m!77913))

(assert (=> d!18493 m!77915))

(declare-fun m!78295 () Bool)

(assert (=> d!18493 m!78295))

(declare-fun m!78297 () Bool)

(assert (=> d!18493 m!78297))

(assert (=> b!77989 d!18493))

(declare-fun d!18495 () Bool)

(declare-fun c!12022 () Bool)

(assert (=> d!18495 (= c!12022 ((_ is ValueCellFull!912) (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!51222 () V!2995)

(assert (=> d!18495 (= (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51222)))

(declare-fun b!78339 () Bool)

(assert (=> b!78339 (= e!51222 (get!1190 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78340 () Bool)

(assert (=> b!78340 (= e!51222 (get!1191 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18495 c!12022) b!78339))

(assert (= (and d!18495 (not c!12022)) b!78340))

(assert (=> b!78339 m!77905))

(assert (=> b!78339 m!77769))

(declare-fun m!78299 () Bool)

(assert (=> b!78339 m!78299))

(assert (=> b!78340 m!77905))

(assert (=> b!78340 m!77769))

(declare-fun m!78301 () Bool)

(assert (=> b!78340 m!78301))

(assert (=> b!77989 d!18495))

(declare-fun d!18497 () Bool)

(declare-fun e!51223 () Bool)

(assert (=> d!18497 e!51223))

(declare-fun res!41001 () Bool)

(assert (=> d!18497 (=> (not res!41001) (not e!51223))))

(declare-fun lt!36132 () ListLongMap!1465)

(assert (=> d!18497 (= res!41001 (contains!745 lt!36132 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!36129 () List!1533)

(assert (=> d!18497 (= lt!36132 (ListLongMap!1466 lt!36129))))

(declare-fun lt!36131 () Unit!2263)

(declare-fun lt!36130 () Unit!2263)

(assert (=> d!18497 (= lt!36131 lt!36130)))

(assert (=> d!18497 (= (getValueByKey!136 lt!36129 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18497 (= lt!36130 (lemmaContainsTupThenGetReturnValue!55 lt!36129 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18497 (= lt!36129 (insertStrictlySorted!57 (toList!748 call!7078) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18497 (= (+!109 call!7078 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!36132)))

(declare-fun b!78341 () Bool)

(declare-fun res!41002 () Bool)

(assert (=> b!78341 (=> (not res!41002) (not e!51223))))

(assert (=> b!78341 (= res!41002 (= (getValueByKey!136 (toList!748 lt!36132) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!78342 () Bool)

(assert (=> b!78342 (= e!51223 (contains!748 (toList!748 lt!36132) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!18497 res!41001) b!78341))

(assert (= (and b!78341 res!41002) b!78342))

(declare-fun m!78303 () Bool)

(assert (=> d!18497 m!78303))

(declare-fun m!78305 () Bool)

(assert (=> d!18497 m!78305))

(declare-fun m!78307 () Bool)

(assert (=> d!18497 m!78307))

(declare-fun m!78309 () Bool)

(assert (=> d!18497 m!78309))

(declare-fun m!78311 () Bool)

(assert (=> b!78341 m!78311))

(declare-fun m!78313 () Bool)

(assert (=> b!78342 m!78313))

(assert (=> b!77989 d!18497))

(declare-fun d!18499 () Bool)

(declare-fun e!51224 () Bool)

(assert (=> d!18499 e!51224))

(declare-fun res!41003 () Bool)

(assert (=> d!18499 (=> (not res!41003) (not e!51224))))

(declare-fun lt!36136 () ListLongMap!1465)

(assert (=> d!18499 (= res!41003 (contains!745 lt!36136 (_1!1105 (tuple2!2191 lt!35870 lt!35871))))))

(declare-fun lt!36133 () List!1533)

(assert (=> d!18499 (= lt!36136 (ListLongMap!1466 lt!36133))))

(declare-fun lt!36135 () Unit!2263)

(declare-fun lt!36134 () Unit!2263)

(assert (=> d!18499 (= lt!36135 lt!36134)))

(assert (=> d!18499 (= (getValueByKey!136 lt!36133 (_1!1105 (tuple2!2191 lt!35870 lt!35871))) (Some!141 (_2!1105 (tuple2!2191 lt!35870 lt!35871))))))

(assert (=> d!18499 (= lt!36134 (lemmaContainsTupThenGetReturnValue!55 lt!36133 (_1!1105 (tuple2!2191 lt!35870 lt!35871)) (_2!1105 (tuple2!2191 lt!35870 lt!35871))))))

(assert (=> d!18499 (= lt!36133 (insertStrictlySorted!57 (toList!748 lt!35869) (_1!1105 (tuple2!2191 lt!35870 lt!35871)) (_2!1105 (tuple2!2191 lt!35870 lt!35871))))))

(assert (=> d!18499 (= (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)) lt!36136)))

(declare-fun b!78343 () Bool)

(declare-fun res!41004 () Bool)

(assert (=> b!78343 (=> (not res!41004) (not e!51224))))

(assert (=> b!78343 (= res!41004 (= (getValueByKey!136 (toList!748 lt!36136) (_1!1105 (tuple2!2191 lt!35870 lt!35871))) (Some!141 (_2!1105 (tuple2!2191 lt!35870 lt!35871)))))))

(declare-fun b!78344 () Bool)

(assert (=> b!78344 (= e!51224 (contains!748 (toList!748 lt!36136) (tuple2!2191 lt!35870 lt!35871)))))

(assert (= (and d!18499 res!41003) b!78343))

(assert (= (and b!78343 res!41004) b!78344))

(declare-fun m!78315 () Bool)

(assert (=> d!18499 m!78315))

(declare-fun m!78317 () Bool)

(assert (=> d!18499 m!78317))

(declare-fun m!78319 () Bool)

(assert (=> d!18499 m!78319))

(declare-fun m!78321 () Bool)

(assert (=> d!18499 m!78321))

(declare-fun m!78323 () Bool)

(assert (=> b!78343 m!78323))

(declare-fun m!78325 () Bool)

(assert (=> b!78344 m!78325))

(assert (=> b!77989 d!18499))

(assert (=> b!77948 d!18421))

(declare-fun b!78346 () Bool)

(declare-fun e!51225 () Option!142)

(declare-fun e!51226 () Option!142)

(assert (=> b!78346 (= e!51225 e!51226)))

(declare-fun c!12024 () Bool)

(assert (=> b!78346 (= c!12024 (and ((_ is Cons!1529) (toList!748 lt!35895)) (not (= (_1!1105 (h!2117 (toList!748 lt!35895))) (_1!1105 lt!35783)))))))

(declare-fun b!78345 () Bool)

(assert (=> b!78345 (= e!51225 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35895)))))))

(declare-fun b!78347 () Bool)

(assert (=> b!78347 (= e!51226 (getValueByKey!136 (t!5183 (toList!748 lt!35895)) (_1!1105 lt!35783)))))

(declare-fun b!78348 () Bool)

(assert (=> b!78348 (= e!51226 None!140)))

(declare-fun d!18501 () Bool)

(declare-fun c!12023 () Bool)

(assert (=> d!18501 (= c!12023 (and ((_ is Cons!1529) (toList!748 lt!35895)) (= (_1!1105 (h!2117 (toList!748 lt!35895))) (_1!1105 lt!35783))))))

(assert (=> d!18501 (= (getValueByKey!136 (toList!748 lt!35895) (_1!1105 lt!35783)) e!51225)))

(assert (= (and d!18501 c!12023) b!78345))

(assert (= (and d!18501 (not c!12023)) b!78346))

(assert (= (and b!78346 c!12024) b!78347))

(assert (= (and b!78346 (not c!12024)) b!78348))

(declare-fun m!78327 () Bool)

(assert (=> b!78347 m!78327))

(assert (=> b!78009 d!18501))

(assert (=> b!77991 d!18475))

(declare-fun d!18503 () Bool)

(assert (=> d!18503 (= (+!109 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36055 (zeroValue!2170 newMap!16) lt!35780 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36139 () Unit!2263)

(declare-fun choose!465 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 V!2995 Int) Unit!2263)

(assert (=> d!18503 (= lt!36139 (choose!465 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36055 (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) lt!35780 (defaultEntry!2272 newMap!16)))))

(assert (=> d!18503 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18503 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36055 (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) lt!35780 (defaultEntry!2272 newMap!16)) lt!36139)))

(declare-fun bs!3301 () Bool)

(assert (= bs!3301 d!18503))

(assert (=> bs!3301 m!78167))

(declare-fun m!78329 () Bool)

(assert (=> bs!3301 m!78329))

(assert (=> bs!3301 m!78025))

(declare-fun m!78331 () Bool)

(assert (=> bs!3301 m!78331))

(declare-fun m!78333 () Bool)

(assert (=> bs!3301 m!78333))

(assert (=> bs!3301 m!78025))

(assert (=> b!78199 d!18503))

(declare-fun d!18505 () Bool)

(declare-fun lt!36142 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!82 (List!1533) (InoxSet tuple2!2190))

(assert (=> d!18505 (= lt!36142 (select (content!82 (toList!748 lt!35911)) lt!35788))))

(declare-fun e!51231 () Bool)

(assert (=> d!18505 (= lt!36142 e!51231)))

(declare-fun res!41009 () Bool)

(assert (=> d!18505 (=> (not res!41009) (not e!51231))))

(assert (=> d!18505 (= res!41009 ((_ is Cons!1529) (toList!748 lt!35911)))))

(assert (=> d!18505 (= (contains!748 (toList!748 lt!35911) lt!35788) lt!36142)))

(declare-fun b!78353 () Bool)

(declare-fun e!51232 () Bool)

(assert (=> b!78353 (= e!51231 e!51232)))

(declare-fun res!41010 () Bool)

(assert (=> b!78353 (=> res!41010 e!51232)))

(assert (=> b!78353 (= res!41010 (= (h!2117 (toList!748 lt!35911)) lt!35788))))

(declare-fun b!78354 () Bool)

(assert (=> b!78354 (= e!51232 (contains!748 (t!5183 (toList!748 lt!35911)) lt!35788))))

(assert (= (and d!18505 res!41009) b!78353))

(assert (= (and b!78353 (not res!41010)) b!78354))

(declare-fun m!78335 () Bool)

(assert (=> d!18505 m!78335))

(declare-fun m!78337 () Bool)

(assert (=> d!18505 m!78337))

(declare-fun m!78339 () Bool)

(assert (=> b!78354 m!78339))

(assert (=> b!78018 d!18505))

(declare-fun d!18507 () Bool)

(declare-fun res!41015 () Bool)

(declare-fun e!51237 () Bool)

(assert (=> d!18507 (=> res!41015 e!51237)))

(assert (=> d!18507 (= res!41015 (and ((_ is Cons!1529) (toList!748 lt!35787)) (= (_1!1105 (h!2117 (toList!748 lt!35787))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!18507 (= (containsKey!140 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) e!51237)))

(declare-fun b!78359 () Bool)

(declare-fun e!51238 () Bool)

(assert (=> b!78359 (= e!51237 e!51238)))

(declare-fun res!41016 () Bool)

(assert (=> b!78359 (=> (not res!41016) (not e!51238))))

(assert (=> b!78359 (= res!41016 (and (or (not ((_ is Cons!1529) (toList!748 lt!35787))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35787))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))) ((_ is Cons!1529) (toList!748 lt!35787)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35787))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(declare-fun b!78360 () Bool)

(assert (=> b!78360 (= e!51238 (containsKey!140 (t!5183 (toList!748 lt!35787)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!18507 (not res!41015)) b!78359))

(assert (= (and b!78359 res!41016) b!78360))

(assert (=> b!78360 m!77749))

(declare-fun m!78341 () Bool)

(assert (=> b!78360 m!78341))

(assert (=> d!18455 d!18507))

(declare-fun d!18509 () Bool)

(declare-fun e!51241 () Bool)

(assert (=> d!18509 e!51241))

(declare-fun res!41019 () Bool)

(assert (=> d!18509 (=> (not res!41019) (not e!51241))))

(assert (=> d!18509 (= res!41019 (and (bvsge (index!3135 lt!36063) #b00000000000000000000000000000000) (bvslt (index!3135 lt!36063) (size!2135 (_keys!3932 newMap!16)))))))

(declare-fun lt!36145 () Unit!2263)

(declare-fun choose!466 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) Int) Unit!2263)

(assert (=> d!18509 (= lt!36145 (choose!466 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3135 lt!36063) (defaultEntry!2272 newMap!16)))))

(assert (=> d!18509 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18509 (= (lemmaValidKeyInArrayIsInListMap!86 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3135 lt!36063) (defaultEntry!2272 newMap!16)) lt!36145)))

(declare-fun b!78363 () Bool)

(assert (=> b!78363 (= e!51241 (contains!745 (getCurrentListMap!435 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063))))))

(assert (= (and d!18509 res!41019) b!78363))

(declare-fun m!78343 () Bool)

(assert (=> d!18509 m!78343))

(assert (=> d!18509 m!78167))

(declare-fun m!78345 () Bool)

(assert (=> b!78363 m!78345))

(assert (=> b!78363 m!78131))

(assert (=> b!78363 m!78345))

(assert (=> b!78363 m!78131))

(declare-fun m!78347 () Bool)

(assert (=> b!78363 m!78347))

(assert (=> b!78207 d!18509))

(declare-fun d!18511 () Bool)

(declare-fun e!51244 () Bool)

(assert (=> d!18511 e!51244))

(declare-fun res!41022 () Bool)

(assert (=> d!18511 (=> (not res!41022) (not e!51244))))

(assert (=> d!18511 (= res!41022 (and (bvsge (index!3135 lt!36063) #b00000000000000000000000000000000) (bvslt (index!3135 lt!36063) (size!2136 (_values!2255 newMap!16)))))))

(declare-fun lt!36148 () Unit!2263)

(declare-fun choose!467 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) (_ BitVec 64) V!2995 Int) Unit!2263)

(assert (=> d!18511 (= lt!36148 (choose!467 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3135 lt!36063) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 (defaultEntry!2272 newMap!16)))))

(assert (=> d!18511 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18511 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3135 lt!36063) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 (defaultEntry!2272 newMap!16)) lt!36148)))

(declare-fun b!78366 () Bool)

(assert (=> b!78366 (= e!51244 (= (+!109 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (getCurrentListMap!435 (_keys!3932 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))))

(assert (= (and d!18511 res!41022) b!78366))

(assert (=> d!18511 m!77749))

(declare-fun m!78349 () Bool)

(assert (=> d!18511 m!78349))

(assert (=> d!18511 m!78167))

(assert (=> b!78366 m!78025))

(assert (=> b!78366 m!78025))

(declare-fun m!78351 () Bool)

(assert (=> b!78366 m!78351))

(assert (=> b!78366 m!78097))

(declare-fun m!78353 () Bool)

(assert (=> b!78366 m!78353))

(assert (=> b!78207 d!18511))

(declare-fun d!18513 () Bool)

(declare-fun e!51246 () Bool)

(assert (=> d!18513 e!51246))

(declare-fun res!41023 () Bool)

(assert (=> d!18513 (=> res!41023 e!51246)))

(declare-fun lt!36149 () Bool)

(assert (=> d!18513 (= res!41023 (not lt!36149))))

(declare-fun lt!36150 () Bool)

(assert (=> d!18513 (= lt!36149 lt!36150)))

(declare-fun lt!36151 () Unit!2263)

(declare-fun e!51245 () Unit!2263)

(assert (=> d!18513 (= lt!36151 e!51245)))

(declare-fun c!12025 () Bool)

(assert (=> d!18513 (= c!12025 lt!36150)))

(assert (=> d!18513 (= lt!36150 (containsKey!140 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!18513 (= (contains!745 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) lt!36149)))

(declare-fun b!78367 () Bool)

(declare-fun lt!36152 () Unit!2263)

(assert (=> b!78367 (= e!51245 lt!36152)))

(assert (=> b!78367 (= lt!36152 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!78367 (isDefined!90 (getValueByKey!136 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!78368 () Bool)

(declare-fun Unit!2278 () Unit!2263)

(assert (=> b!78368 (= e!51245 Unit!2278)))

(declare-fun b!78369 () Bool)

(assert (=> b!78369 (= e!51246 (isDefined!90 (getValueByKey!136 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (= (and d!18513 c!12025) b!78367))

(assert (= (and d!18513 (not c!12025)) b!78368))

(assert (= (and d!18513 (not res!41023)) b!78369))

(assert (=> d!18513 m!77749))

(declare-fun m!78355 () Bool)

(assert (=> d!18513 m!78355))

(assert (=> b!78367 m!77749))

(declare-fun m!78357 () Bool)

(assert (=> b!78367 m!78357))

(assert (=> b!78367 m!77749))

(declare-fun m!78359 () Bool)

(assert (=> b!78367 m!78359))

(assert (=> b!78367 m!78359))

(declare-fun m!78361 () Bool)

(assert (=> b!78367 m!78361))

(assert (=> b!78369 m!77749))

(assert (=> b!78369 m!78359))

(assert (=> b!78369 m!78359))

(assert (=> b!78369 m!78361))

(assert (=> b!78207 d!18513))

(assert (=> b!78207 d!18489))

(declare-fun d!18515 () Bool)

(declare-fun res!41024 () Bool)

(declare-fun e!51247 () Bool)

(assert (=> d!18515 (=> res!41024 e!51247)))

(assert (=> d!18515 (= res!41024 (= (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!18515 (= (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000) e!51247)))

(declare-fun b!78370 () Bool)

(declare-fun e!51248 () Bool)

(assert (=> b!78370 (= e!51247 e!51248)))

(declare-fun res!41025 () Bool)

(assert (=> b!78370 (=> (not res!41025) (not e!51248))))

(assert (=> b!78370 (= res!41025 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78371 () Bool)

(assert (=> b!78371 (= e!51248 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!18515 (not res!41024)) b!78370))

(assert (= (and b!78370 res!41025) b!78371))

(assert (=> d!18515 m!78153))

(assert (=> b!78371 m!77749))

(declare-fun m!78363 () Bool)

(assert (=> b!78371 m!78363))

(assert (=> bm!7151 d!18515))

(assert (=> bm!7146 d!18449))

(assert (=> b!77996 d!18481))

(declare-fun d!18517 () Bool)

(declare-fun lt!36155 () Bool)

(declare-fun content!83 (List!1534) (InoxSet (_ BitVec 64)))

(assert (=> d!18517 (= lt!36155 (select (content!83 Nil!1531) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun e!51254 () Bool)

(assert (=> d!18517 (= lt!36155 e!51254)))

(declare-fun res!41031 () Bool)

(assert (=> d!18517 (=> (not res!41031) (not e!51254))))

(assert (=> d!18517 (= res!41031 ((_ is Cons!1530) Nil!1531))))

(assert (=> d!18517 (= (contains!747 Nil!1531 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) lt!36155)))

(declare-fun b!78376 () Bool)

(declare-fun e!51253 () Bool)

(assert (=> b!78376 (= e!51254 e!51253)))

(declare-fun res!41030 () Bool)

(assert (=> b!78376 (=> res!41030 e!51253)))

(assert (=> b!78376 (= res!41030 (= (h!2118 Nil!1531) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!78377 () Bool)

(assert (=> b!78377 (= e!51253 (contains!747 (t!5184 Nil!1531) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!18517 res!41031) b!78376))

(assert (= (and b!78376 (not res!41030)) b!78377))

(declare-fun m!78365 () Bool)

(assert (=> d!18517 m!78365))

(assert (=> d!18517 m!77749))

(declare-fun m!78367 () Bool)

(assert (=> d!18517 m!78367))

(assert (=> b!78377 m!77749))

(declare-fun m!78369 () Bool)

(assert (=> b!78377 m!78369))

(assert (=> b!77960 d!18517))

(declare-fun d!18519 () Bool)

(declare-fun e!51256 () Bool)

(assert (=> d!18519 e!51256))

(declare-fun res!41032 () Bool)

(assert (=> d!18519 (=> res!41032 e!51256)))

(declare-fun lt!36156 () Bool)

(assert (=> d!18519 (= res!41032 (not lt!36156))))

(declare-fun lt!36157 () Bool)

(assert (=> d!18519 (= lt!36156 lt!36157)))

(declare-fun lt!36158 () Unit!2263)

(declare-fun e!51255 () Unit!2263)

(assert (=> d!18519 (= lt!36158 e!51255)))

(declare-fun c!12026 () Bool)

(assert (=> d!18519 (= c!12026 lt!36157)))

(assert (=> d!18519 (= lt!36157 (containsKey!140 (toList!748 lt!35884) (_1!1105 lt!35783)))))

(assert (=> d!18519 (= (contains!745 lt!35884 (_1!1105 lt!35783)) lt!36156)))

(declare-fun b!78378 () Bool)

(declare-fun lt!36159 () Unit!2263)

(assert (=> b!78378 (= e!51255 lt!36159)))

(assert (=> b!78378 (= lt!36159 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35884) (_1!1105 lt!35783)))))

(assert (=> b!78378 (isDefined!90 (getValueByKey!136 (toList!748 lt!35884) (_1!1105 lt!35783)))))

(declare-fun b!78379 () Bool)

(declare-fun Unit!2279 () Unit!2263)

(assert (=> b!78379 (= e!51255 Unit!2279)))

(declare-fun b!78380 () Bool)

(assert (=> b!78380 (= e!51256 (isDefined!90 (getValueByKey!136 (toList!748 lt!35884) (_1!1105 lt!35783))))))

(assert (= (and d!18519 c!12026) b!78378))

(assert (= (and d!18519 (not c!12026)) b!78379))

(assert (= (and d!18519 (not res!41032)) b!78380))

(declare-fun m!78371 () Bool)

(assert (=> d!18519 m!78371))

(declare-fun m!78373 () Bool)

(assert (=> b!78378 m!78373))

(assert (=> b!78378 m!77929))

(assert (=> b!78378 m!77929))

(declare-fun m!78375 () Bool)

(assert (=> b!78378 m!78375))

(assert (=> b!78380 m!77929))

(assert (=> b!78380 m!77929))

(assert (=> b!78380 m!78375))

(assert (=> d!18429 d!18519))

(declare-fun b!78382 () Bool)

(declare-fun e!51257 () Option!142)

(declare-fun e!51258 () Option!142)

(assert (=> b!78382 (= e!51257 e!51258)))

(declare-fun c!12028 () Bool)

(assert (=> b!78382 (= c!12028 (and ((_ is Cons!1529) lt!35881) (not (= (_1!1105 (h!2117 lt!35881)) (_1!1105 lt!35783)))))))

(declare-fun b!78381 () Bool)

(assert (=> b!78381 (= e!51257 (Some!141 (_2!1105 (h!2117 lt!35881))))))

(declare-fun b!78383 () Bool)

(assert (=> b!78383 (= e!51258 (getValueByKey!136 (t!5183 lt!35881) (_1!1105 lt!35783)))))

(declare-fun b!78384 () Bool)

(assert (=> b!78384 (= e!51258 None!140)))

(declare-fun d!18521 () Bool)

(declare-fun c!12027 () Bool)

(assert (=> d!18521 (= c!12027 (and ((_ is Cons!1529) lt!35881) (= (_1!1105 (h!2117 lt!35881)) (_1!1105 lt!35783))))))

(assert (=> d!18521 (= (getValueByKey!136 lt!35881 (_1!1105 lt!35783)) e!51257)))

(assert (= (and d!18521 c!12027) b!78381))

(assert (= (and d!18521 (not c!12027)) b!78382))

(assert (= (and b!78382 c!12028) b!78383))

(assert (= (and b!78382 (not c!12028)) b!78384))

(declare-fun m!78377 () Bool)

(assert (=> b!78383 m!78377))

(assert (=> d!18429 d!18521))

(declare-fun d!18523 () Bool)

(assert (=> d!18523 (= (getValueByKey!136 lt!35881 (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783)))))

(declare-fun lt!36162 () Unit!2263)

(declare-fun choose!468 (List!1533 (_ BitVec 64) V!2995) Unit!2263)

(assert (=> d!18523 (= lt!36162 (choose!468 lt!35881 (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(declare-fun e!51261 () Bool)

(assert (=> d!18523 e!51261))

(declare-fun res!41037 () Bool)

(assert (=> d!18523 (=> (not res!41037) (not e!51261))))

(declare-fun isStrictlySorted!290 (List!1533) Bool)

(assert (=> d!18523 (= res!41037 (isStrictlySorted!290 lt!35881))))

(assert (=> d!18523 (= (lemmaContainsTupThenGetReturnValue!55 lt!35881 (_1!1105 lt!35783) (_2!1105 lt!35783)) lt!36162)))

(declare-fun b!78389 () Bool)

(declare-fun res!41038 () Bool)

(assert (=> b!78389 (=> (not res!41038) (not e!51261))))

(assert (=> b!78389 (= res!41038 (containsKey!140 lt!35881 (_1!1105 lt!35783)))))

(declare-fun b!78390 () Bool)

(assert (=> b!78390 (= e!51261 (contains!748 lt!35881 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(assert (= (and d!18523 res!41037) b!78389))

(assert (= (and b!78389 res!41038) b!78390))

(assert (=> d!18523 m!77923))

(declare-fun m!78379 () Bool)

(assert (=> d!18523 m!78379))

(declare-fun m!78381 () Bool)

(assert (=> d!18523 m!78381))

(declare-fun m!78383 () Bool)

(assert (=> b!78389 m!78383))

(declare-fun m!78385 () Bool)

(assert (=> b!78390 m!78385))

(assert (=> d!18429 d!18523))

(declare-fun b!78411 () Bool)

(declare-fun c!12037 () Bool)

(assert (=> b!78411 (= c!12037 (and ((_ is Cons!1529) (toList!748 lt!35777)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 lt!35783))))))

(declare-fun e!51275 () List!1533)

(declare-fun e!51272 () List!1533)

(assert (=> b!78411 (= e!51275 e!51272)))

(declare-fun bm!7193 () Bool)

(declare-fun c!12038 () Bool)

(declare-fun e!51274 () List!1533)

(declare-fun call!7198 () List!1533)

(declare-fun $colon$colon!68 (List!1533 tuple2!2190) List!1533)

(assert (=> bm!7193 (= call!7198 ($colon$colon!68 e!51274 (ite c!12038 (h!2117 (toList!748 lt!35777)) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783)))))))

(declare-fun c!12039 () Bool)

(assert (=> bm!7193 (= c!12039 c!12038)))

(declare-fun d!18525 () Bool)

(declare-fun e!51276 () Bool)

(assert (=> d!18525 e!51276))

(declare-fun res!41043 () Bool)

(assert (=> d!18525 (=> (not res!41043) (not e!51276))))

(declare-fun lt!36165 () List!1533)

(assert (=> d!18525 (= res!41043 (isStrictlySorted!290 lt!36165))))

(declare-fun e!51273 () List!1533)

(assert (=> d!18525 (= lt!36165 e!51273)))

(assert (=> d!18525 (= c!12038 (and ((_ is Cons!1529) (toList!748 lt!35777)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 lt!35783))))))

(assert (=> d!18525 (isStrictlySorted!290 (toList!748 lt!35777))))

(assert (=> d!18525 (= (insertStrictlySorted!57 (toList!748 lt!35777) (_1!1105 lt!35783) (_2!1105 lt!35783)) lt!36165)))

(declare-fun c!12040 () Bool)

(declare-fun b!78412 () Bool)

(assert (=> b!78412 (= e!51274 (ite c!12040 (t!5183 (toList!748 lt!35777)) (ite c!12037 (Cons!1529 (h!2117 (toList!748 lt!35777)) (t!5183 (toList!748 lt!35777))) Nil!1530)))))

(declare-fun bm!7194 () Bool)

(declare-fun call!7197 () List!1533)

(assert (=> bm!7194 (= call!7197 call!7198)))

(declare-fun b!78413 () Bool)

(assert (=> b!78413 (= e!51273 call!7198)))

(declare-fun b!78414 () Bool)

(declare-fun res!41044 () Bool)

(assert (=> b!78414 (=> (not res!41044) (not e!51276))))

(assert (=> b!78414 (= res!41044 (containsKey!140 lt!36165 (_1!1105 lt!35783)))))

(declare-fun b!78415 () Bool)

(declare-fun call!7196 () List!1533)

(assert (=> b!78415 (= e!51272 call!7196)))

(declare-fun b!78416 () Bool)

(assert (=> b!78416 (= e!51275 call!7197)))

(declare-fun b!78417 () Bool)

(assert (=> b!78417 (= e!51273 e!51275)))

(assert (=> b!78417 (= c!12040 (and ((_ is Cons!1529) (toList!748 lt!35777)) (= (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 lt!35783))))))

(declare-fun bm!7195 () Bool)

(assert (=> bm!7195 (= call!7196 call!7197)))

(declare-fun b!78418 () Bool)

(assert (=> b!78418 (= e!51274 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35777)) (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(declare-fun b!78419 () Bool)

(assert (=> b!78419 (= e!51276 (contains!748 lt!36165 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!78420 () Bool)

(assert (=> b!78420 (= e!51272 call!7196)))

(assert (= (and d!18525 c!12038) b!78413))

(assert (= (and d!18525 (not c!12038)) b!78417))

(assert (= (and b!78417 c!12040) b!78416))

(assert (= (and b!78417 (not c!12040)) b!78411))

(assert (= (and b!78411 c!12037) b!78420))

(assert (= (and b!78411 (not c!12037)) b!78415))

(assert (= (or b!78420 b!78415) bm!7195))

(assert (= (or b!78416 bm!7195) bm!7194))

(assert (= (or b!78413 bm!7194) bm!7193))

(assert (= (and bm!7193 c!12039) b!78418))

(assert (= (and bm!7193 (not c!12039)) b!78412))

(assert (= (and d!18525 res!41043) b!78414))

(assert (= (and b!78414 res!41044) b!78419))

(declare-fun m!78387 () Bool)

(assert (=> b!78414 m!78387))

(declare-fun m!78389 () Bool)

(assert (=> b!78419 m!78389))

(declare-fun m!78391 () Bool)

(assert (=> d!18525 m!78391))

(declare-fun m!78393 () Bool)

(assert (=> d!18525 m!78393))

(declare-fun m!78395 () Bool)

(assert (=> bm!7193 m!78395))

(declare-fun m!78397 () Bool)

(assert (=> b!78418 m!78397))

(assert (=> d!18429 d!18525))

(assert (=> b!77998 d!18481))

(declare-fun d!18527 () Bool)

(assert (=> d!18527 (= (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (and (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!77961 d!18527))

(declare-fun d!18529 () Bool)

(declare-fun lt!36166 () Bool)

(assert (=> d!18529 (= lt!36166 (select (content!82 (toList!748 lt!35903)) lt!35783))))

(declare-fun e!51277 () Bool)

(assert (=> d!18529 (= lt!36166 e!51277)))

(declare-fun res!41045 () Bool)

(assert (=> d!18529 (=> (not res!41045) (not e!51277))))

(assert (=> d!18529 (= res!41045 ((_ is Cons!1529) (toList!748 lt!35903)))))

(assert (=> d!18529 (= (contains!748 (toList!748 lt!35903) lt!35783) lt!36166)))

(declare-fun b!78421 () Bool)

(declare-fun e!51278 () Bool)

(assert (=> b!78421 (= e!51277 e!51278)))

(declare-fun res!41046 () Bool)

(assert (=> b!78421 (=> res!41046 e!51278)))

(assert (=> b!78421 (= res!41046 (= (h!2117 (toList!748 lt!35903)) lt!35783))))

(declare-fun b!78422 () Bool)

(assert (=> b!78422 (= e!51278 (contains!748 (t!5183 (toList!748 lt!35903)) lt!35783))))

(assert (= (and d!18529 res!41045) b!78421))

(assert (= (and b!78421 (not res!41046)) b!78422))

(declare-fun m!78399 () Bool)

(assert (=> d!18529 m!78399))

(declare-fun m!78401 () Bool)

(assert (=> d!18529 m!78401))

(declare-fun m!78403 () Bool)

(assert (=> b!78422 m!78403))

(assert (=> b!78014 d!18529))

(declare-fun d!18531 () Bool)

(declare-fun e!51280 () Bool)

(assert (=> d!18531 e!51280))

(declare-fun res!41047 () Bool)

(assert (=> d!18531 (=> res!41047 e!51280)))

(declare-fun lt!36167 () Bool)

(assert (=> d!18531 (= res!41047 (not lt!36167))))

(declare-fun lt!36168 () Bool)

(assert (=> d!18531 (= lt!36167 lt!36168)))

(declare-fun lt!36169 () Unit!2263)

(declare-fun e!51279 () Unit!2263)

(assert (=> d!18531 (= lt!36169 e!51279)))

(declare-fun c!12041 () Bool)

(assert (=> d!18531 (= c!12041 lt!36168)))

(assert (=> d!18531 (= lt!36168 (containsKey!140 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18531 (= (contains!745 lt!35969 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36167)))

(declare-fun b!78423 () Bool)

(declare-fun lt!36170 () Unit!2263)

(assert (=> b!78423 (= e!51279 lt!36170)))

(assert (=> b!78423 (= lt!36170 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78423 (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78424 () Bool)

(declare-fun Unit!2280 () Unit!2263)

(assert (=> b!78424 (= e!51279 Unit!2280)))

(declare-fun b!78425 () Bool)

(assert (=> b!78425 (= e!51280 (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18531 c!12041) b!78423))

(assert (= (and d!18531 (not c!12041)) b!78424))

(assert (= (and d!18531 (not res!41047)) b!78425))

(declare-fun m!78405 () Bool)

(assert (=> d!18531 m!78405))

(declare-fun m!78407 () Bool)

(assert (=> b!78423 m!78407))

(declare-fun m!78409 () Bool)

(assert (=> b!78423 m!78409))

(assert (=> b!78423 m!78409))

(declare-fun m!78411 () Bool)

(assert (=> b!78423 m!78411))

(assert (=> b!78425 m!78409))

(assert (=> b!78425 m!78409))

(assert (=> b!78425 m!78411))

(assert (=> bm!7095 d!18531))

(assert (=> b!77963 d!18527))

(declare-fun d!18533 () Bool)

(assert (=> d!18533 (= (inRange!0 (ite c!11983 (ite c!11973 (index!3135 lt!36047) (ite c!11985 (index!3134 lt!36053) (index!3137 lt!36053))) (ite c!11984 (index!3135 lt!36070) (ite c!11980 (index!3134 lt!36060) (index!3137 lt!36060)))) (mask!6268 newMap!16)) (and (bvsge (ite c!11983 (ite c!11973 (index!3135 lt!36047) (ite c!11985 (index!3134 lt!36053) (index!3137 lt!36053))) (ite c!11984 (index!3135 lt!36070) (ite c!11980 (index!3134 lt!36060) (index!3137 lt!36060)))) #b00000000000000000000000000000000) (bvslt (ite c!11983 (ite c!11973 (index!3135 lt!36047) (ite c!11985 (index!3134 lt!36053) (index!3137 lt!36053))) (ite c!11984 (index!3135 lt!36070) (ite c!11980 (index!3134 lt!36060) (index!3137 lt!36060)))) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7157 d!18533))

(declare-fun d!18535 () Bool)

(declare-fun lt!36171 () Bool)

(assert (=> d!18535 (= lt!36171 (select (content!82 (toList!748 lt!35907)) lt!35784))))

(declare-fun e!51281 () Bool)

(assert (=> d!18535 (= lt!36171 e!51281)))

(declare-fun res!41048 () Bool)

(assert (=> d!18535 (=> (not res!41048) (not e!51281))))

(assert (=> d!18535 (= res!41048 ((_ is Cons!1529) (toList!748 lt!35907)))))

(assert (=> d!18535 (= (contains!748 (toList!748 lt!35907) lt!35784) lt!36171)))

(declare-fun b!78426 () Bool)

(declare-fun e!51282 () Bool)

(assert (=> b!78426 (= e!51281 e!51282)))

(declare-fun res!41049 () Bool)

(assert (=> b!78426 (=> res!41049 e!51282)))

(assert (=> b!78426 (= res!41049 (= (h!2117 (toList!748 lt!35907)) lt!35784))))

(declare-fun b!78427 () Bool)

(assert (=> b!78427 (= e!51282 (contains!748 (t!5183 (toList!748 lt!35907)) lt!35784))))

(assert (= (and d!18535 res!41048) b!78426))

(assert (= (and b!78426 (not res!41049)) b!78427))

(declare-fun m!78413 () Bool)

(assert (=> d!18535 m!78413))

(declare-fun m!78415 () Bool)

(assert (=> d!18535 m!78415))

(declare-fun m!78417 () Bool)

(assert (=> b!78427 m!78417))

(assert (=> b!78016 d!18535))

(declare-fun d!18537 () Bool)

(declare-fun get!1192 (Option!142) V!2995)

(assert (=> d!18537 (= (apply!79 lt!35977 lt!35974) (get!1192 (getValueByKey!136 (toList!748 lt!35977) lt!35974)))))

(declare-fun bs!3302 () Bool)

(assert (= bs!3302 d!18537))

(declare-fun m!78419 () Bool)

(assert (=> bs!3302 m!78419))

(assert (=> bs!3302 m!78419))

(declare-fun m!78421 () Bool)

(assert (=> bs!3302 m!78421))

(assert (=> b!78071 d!18537))

(declare-fun d!18539 () Bool)

(declare-fun e!51283 () Bool)

(assert (=> d!18539 e!51283))

(declare-fun res!41050 () Bool)

(assert (=> d!18539 (=> (not res!41050) (not e!51283))))

(declare-fun lt!36175 () ListLongMap!1465)

(assert (=> d!18539 (= res!41050 (contains!745 lt!36175 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36172 () List!1533)

(assert (=> d!18539 (= lt!36175 (ListLongMap!1466 lt!36172))))

(declare-fun lt!36174 () Unit!2263)

(declare-fun lt!36173 () Unit!2263)

(assert (=> d!18539 (= lt!36174 lt!36173)))

(assert (=> d!18539 (= (getValueByKey!136 lt!36172 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18539 (= lt!36173 (lemmaContainsTupThenGetReturnValue!55 lt!36172 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18539 (= lt!36172 (insertStrictlySorted!57 (toList!748 lt!35977) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18539 (= (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36175)))

(declare-fun b!78428 () Bool)

(declare-fun res!41051 () Bool)

(assert (=> b!78428 (=> (not res!41051) (not e!51283))))

(assert (=> b!78428 (= res!41051 (= (getValueByKey!136 (toList!748 lt!36175) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!78429 () Bool)

(assert (=> b!78429 (= e!51283 (contains!748 (toList!748 lt!36175) (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18539 res!41050) b!78428))

(assert (= (and b!78428 res!41051) b!78429))

(declare-fun m!78423 () Bool)

(assert (=> d!18539 m!78423))

(declare-fun m!78425 () Bool)

(assert (=> d!18539 m!78425))

(declare-fun m!78427 () Bool)

(assert (=> d!18539 m!78427))

(declare-fun m!78429 () Bool)

(assert (=> d!18539 m!78429))

(declare-fun m!78431 () Bool)

(assert (=> b!78428 m!78431))

(declare-fun m!78433 () Bool)

(assert (=> b!78429 m!78433))

(assert (=> b!78071 d!18539))

(declare-fun d!18541 () Bool)

(declare-fun e!51284 () Bool)

(assert (=> d!18541 e!51284))

(declare-fun res!41052 () Bool)

(assert (=> d!18541 (=> (not res!41052) (not e!51284))))

(declare-fun lt!36179 () ListLongMap!1465)

(assert (=> d!18541 (= res!41052 (contains!745 lt!36179 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36176 () List!1533)

(assert (=> d!18541 (= lt!36179 (ListLongMap!1466 lt!36176))))

(declare-fun lt!36178 () Unit!2263)

(declare-fun lt!36177 () Unit!2263)

(assert (=> d!18541 (= lt!36178 lt!36177)))

(assert (=> d!18541 (= (getValueByKey!136 lt!36176 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18541 (= lt!36177 (lemmaContainsTupThenGetReturnValue!55 lt!36176 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18541 (= lt!36176 (insertStrictlySorted!57 (toList!748 lt!35970) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18541 (= (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36179)))

(declare-fun b!78430 () Bool)

(declare-fun res!41053 () Bool)

(assert (=> b!78430 (=> (not res!41053) (not e!51284))))

(assert (=> b!78430 (= res!41053 (= (getValueByKey!136 (toList!748 lt!36179) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!78431 () Bool)

(assert (=> b!78431 (= e!51284 (contains!748 (toList!748 lt!36179) (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18541 res!41052) b!78430))

(assert (= (and b!78430 res!41053) b!78431))

(declare-fun m!78435 () Bool)

(assert (=> d!18541 m!78435))

(declare-fun m!78437 () Bool)

(assert (=> d!18541 m!78437))

(declare-fun m!78439 () Bool)

(assert (=> d!18541 m!78439))

(declare-fun m!78441 () Bool)

(assert (=> d!18541 m!78441))

(declare-fun m!78443 () Bool)

(assert (=> b!78430 m!78443))

(declare-fun m!78445 () Bool)

(assert (=> b!78431 m!78445))

(assert (=> b!78071 d!18541))

(declare-fun d!18543 () Bool)

(assert (=> d!18543 (= (apply!79 lt!35973 lt!35963) (get!1192 (getValueByKey!136 (toList!748 lt!35973) lt!35963)))))

(declare-fun bs!3303 () Bool)

(assert (= bs!3303 d!18543))

(declare-fun m!78447 () Bool)

(assert (=> bs!3303 m!78447))

(assert (=> bs!3303 m!78447))

(declare-fun m!78449 () Bool)

(assert (=> bs!3303 m!78449))

(assert (=> b!78071 d!18543))

(declare-fun d!18545 () Bool)

(assert (=> d!18545 (= (apply!79 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35963) (apply!79 lt!35973 lt!35963))))

(declare-fun lt!36182 () Unit!2263)

(declare-fun choose!469 (ListLongMap!1465 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2263)

(assert (=> d!18545 (= lt!36182 (choose!469 lt!35973 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35963))))

(declare-fun e!51287 () Bool)

(assert (=> d!18545 e!51287))

(declare-fun res!41056 () Bool)

(assert (=> d!18545 (=> (not res!41056) (not e!51287))))

(assert (=> d!18545 (= res!41056 (contains!745 lt!35973 lt!35963))))

(assert (=> d!18545 (= (addApplyDifferent!55 lt!35973 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35963) lt!36182)))

(declare-fun b!78435 () Bool)

(assert (=> b!78435 (= e!51287 (not (= lt!35963 lt!35959)))))

(assert (= (and d!18545 res!41056) b!78435))

(assert (=> d!18545 m!78047))

(assert (=> d!18545 m!78049))

(assert (=> d!18545 m!78037))

(declare-fun m!78451 () Bool)

(assert (=> d!18545 m!78451))

(assert (=> d!18545 m!78047))

(declare-fun m!78453 () Bool)

(assert (=> d!18545 m!78453))

(assert (=> b!78071 d!18545))

(declare-fun d!18547 () Bool)

(assert (=> d!18547 (= (apply!79 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35974) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35974)))))

(declare-fun bs!3304 () Bool)

(assert (= bs!3304 d!18547))

(declare-fun m!78455 () Bool)

(assert (=> bs!3304 m!78455))

(assert (=> bs!3304 m!78455))

(declare-fun m!78457 () Bool)

(assert (=> bs!3304 m!78457))

(assert (=> b!78071 d!18547))

(declare-fun d!18549 () Bool)

(assert (=> d!18549 (= (apply!79 lt!35958 lt!35972) (get!1192 (getValueByKey!136 (toList!748 lt!35958) lt!35972)))))

(declare-fun bs!3305 () Bool)

(assert (= bs!3305 d!18549))

(declare-fun m!78459 () Bool)

(assert (=> bs!3305 m!78459))

(assert (=> bs!3305 m!78459))

(declare-fun m!78461 () Bool)

(assert (=> bs!3305 m!78461))

(assert (=> b!78071 d!18549))

(declare-fun d!18551 () Bool)

(declare-fun e!51288 () Bool)

(assert (=> d!18551 e!51288))

(declare-fun res!41057 () Bool)

(assert (=> d!18551 (=> (not res!41057) (not e!51288))))

(declare-fun lt!36186 () ListLongMap!1465)

(assert (=> d!18551 (= res!41057 (contains!745 lt!36186 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36183 () List!1533)

(assert (=> d!18551 (= lt!36186 (ListLongMap!1466 lt!36183))))

(declare-fun lt!36185 () Unit!2263)

(declare-fun lt!36184 () Unit!2263)

(assert (=> d!18551 (= lt!36185 lt!36184)))

(assert (=> d!18551 (= (getValueByKey!136 lt!36183 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18551 (= lt!36184 (lemmaContainsTupThenGetReturnValue!55 lt!36183 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18551 (= lt!36183 (insertStrictlySorted!57 (toList!748 lt!35973) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18551 (= (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36186)))

(declare-fun b!78436 () Bool)

(declare-fun res!41058 () Bool)

(assert (=> b!78436 (=> (not res!41058) (not e!51288))))

(assert (=> b!78436 (= res!41058 (= (getValueByKey!136 (toList!748 lt!36186) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!78437 () Bool)

(assert (=> b!78437 (= e!51288 (contains!748 (toList!748 lt!36186) (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18551 res!41057) b!78436))

(assert (= (and b!78436 res!41058) b!78437))

(declare-fun m!78463 () Bool)

(assert (=> d!18551 m!78463))

(declare-fun m!78465 () Bool)

(assert (=> d!18551 m!78465))

(declare-fun m!78467 () Bool)

(assert (=> d!18551 m!78467))

(declare-fun m!78469 () Bool)

(assert (=> d!18551 m!78469))

(declare-fun m!78471 () Bool)

(assert (=> b!78436 m!78471))

(declare-fun m!78473 () Bool)

(assert (=> b!78437 m!78473))

(assert (=> b!78071 d!18551))

(declare-fun d!18553 () Bool)

(assert (=> d!18553 (= (apply!79 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35972) (apply!79 lt!35958 lt!35972))))

(declare-fun lt!36187 () Unit!2263)

(assert (=> d!18553 (= lt!36187 (choose!469 lt!35958 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35972))))

(declare-fun e!51289 () Bool)

(assert (=> d!18553 e!51289))

(declare-fun res!41059 () Bool)

(assert (=> d!18553 (=> (not res!41059) (not e!51289))))

(assert (=> d!18553 (= res!41059 (contains!745 lt!35958 lt!35972))))

(assert (=> d!18553 (= (addApplyDifferent!55 lt!35958 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35972) lt!36187)))

(declare-fun b!78438 () Bool)

(assert (=> b!78438 (= e!51289 (not (= lt!35972 lt!35960)))))

(assert (= (and d!18553 res!41059) b!78438))

(assert (=> d!18553 m!78053))

(assert (=> d!18553 m!78055))

(assert (=> d!18553 m!78041))

(declare-fun m!78475 () Bool)

(assert (=> d!18553 m!78475))

(assert (=> d!18553 m!78053))

(declare-fun m!78477 () Bool)

(assert (=> d!18553 m!78477))

(assert (=> b!78071 d!18553))

(declare-fun d!18555 () Bool)

(assert (=> d!18555 (= (apply!79 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35974) (apply!79 lt!35977 lt!35974))))

(declare-fun lt!36188 () Unit!2263)

(assert (=> d!18555 (= lt!36188 (choose!469 lt!35977 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35974))))

(declare-fun e!51290 () Bool)

(assert (=> d!18555 e!51290))

(declare-fun res!41060 () Bool)

(assert (=> d!18555 (=> (not res!41060) (not e!51290))))

(assert (=> d!18555 (= res!41060 (contains!745 lt!35977 lt!35974))))

(assert (=> d!18555 (= (addApplyDifferent!55 lt!35977 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35974) lt!36188)))

(declare-fun b!78439 () Bool)

(assert (=> b!78439 (= e!51290 (not (= lt!35974 lt!35978)))))

(assert (= (and d!18555 res!41060) b!78439))

(assert (=> d!18555 m!78033))

(assert (=> d!18555 m!78051))

(assert (=> d!18555 m!78031))

(declare-fun m!78479 () Bool)

(assert (=> d!18555 m!78479))

(assert (=> d!18555 m!78033))

(declare-fun m!78481 () Bool)

(assert (=> d!18555 m!78481))

(assert (=> b!78071 d!18555))

(assert (=> b!78071 d!18427))

(declare-fun d!18557 () Bool)

(declare-fun e!51292 () Bool)

(assert (=> d!18557 e!51292))

(declare-fun res!41061 () Bool)

(assert (=> d!18557 (=> res!41061 e!51292)))

(declare-fun lt!36189 () Bool)

(assert (=> d!18557 (= res!41061 (not lt!36189))))

(declare-fun lt!36190 () Bool)

(assert (=> d!18557 (= lt!36189 lt!36190)))

(declare-fun lt!36191 () Unit!2263)

(declare-fun e!51291 () Unit!2263)

(assert (=> d!18557 (= lt!36191 e!51291)))

(declare-fun c!12042 () Bool)

(assert (=> d!18557 (= c!12042 lt!36190)))

(assert (=> d!18557 (= lt!36190 (containsKey!140 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967))))

(assert (=> d!18557 (= (contains!745 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35967) lt!36189)))

(declare-fun b!78440 () Bool)

(declare-fun lt!36192 () Unit!2263)

(assert (=> b!78440 (= e!51291 lt!36192)))

(assert (=> b!78440 (= lt!36192 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967))))

(assert (=> b!78440 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967))))

(declare-fun b!78441 () Bool)

(declare-fun Unit!2281 () Unit!2263)

(assert (=> b!78441 (= e!51291 Unit!2281)))

(declare-fun b!78442 () Bool)

(assert (=> b!78442 (= e!51292 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967)))))

(assert (= (and d!18557 c!12042) b!78440))

(assert (= (and d!18557 (not c!12042)) b!78441))

(assert (= (and d!18557 (not res!41061)) b!78442))

(declare-fun m!78483 () Bool)

(assert (=> d!18557 m!78483))

(declare-fun m!78485 () Bool)

(assert (=> b!78440 m!78485))

(declare-fun m!78487 () Bool)

(assert (=> b!78440 m!78487))

(assert (=> b!78440 m!78487))

(declare-fun m!78489 () Bool)

(assert (=> b!78440 m!78489))

(assert (=> b!78442 m!78487))

(assert (=> b!78442 m!78487))

(assert (=> b!78442 m!78489))

(assert (=> b!78071 d!18557))

(declare-fun d!18559 () Bool)

(assert (=> d!18559 (= (apply!79 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35972) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35972)))))

(declare-fun bs!3306 () Bool)

(assert (= bs!3306 d!18559))

(declare-fun m!78491 () Bool)

(assert (=> bs!3306 m!78491))

(assert (=> bs!3306 m!78491))

(declare-fun m!78493 () Bool)

(assert (=> bs!3306 m!78493))

(assert (=> b!78071 d!18559))

(declare-fun d!18561 () Bool)

(declare-fun e!51293 () Bool)

(assert (=> d!18561 e!51293))

(declare-fun res!41062 () Bool)

(assert (=> d!18561 (=> (not res!41062) (not e!51293))))

(declare-fun lt!36196 () ListLongMap!1465)

(assert (=> d!18561 (= res!41062 (contains!745 lt!36196 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36193 () List!1533)

(assert (=> d!18561 (= lt!36196 (ListLongMap!1466 lt!36193))))

(declare-fun lt!36195 () Unit!2263)

(declare-fun lt!36194 () Unit!2263)

(assert (=> d!18561 (= lt!36195 lt!36194)))

(assert (=> d!18561 (= (getValueByKey!136 lt!36193 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18561 (= lt!36194 (lemmaContainsTupThenGetReturnValue!55 lt!36193 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18561 (= lt!36193 (insertStrictlySorted!57 (toList!748 lt!35958) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18561 (= (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36196)))

(declare-fun b!78443 () Bool)

(declare-fun res!41063 () Bool)

(assert (=> b!78443 (=> (not res!41063) (not e!51293))))

(assert (=> b!78443 (= res!41063 (= (getValueByKey!136 (toList!748 lt!36196) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!78444 () Bool)

(assert (=> b!78444 (= e!51293 (contains!748 (toList!748 lt!36196) (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18561 res!41062) b!78443))

(assert (= (and b!78443 res!41063) b!78444))

(declare-fun m!78495 () Bool)

(assert (=> d!18561 m!78495))

(declare-fun m!78497 () Bool)

(assert (=> d!18561 m!78497))

(declare-fun m!78499 () Bool)

(assert (=> d!18561 m!78499))

(declare-fun m!78501 () Bool)

(assert (=> d!18561 m!78501))

(declare-fun m!78503 () Bool)

(assert (=> b!78443 m!78503))

(declare-fun m!78505 () Bool)

(assert (=> b!78444 m!78505))

(assert (=> b!78071 d!18561))

(declare-fun d!18563 () Bool)

(assert (=> d!18563 (= (apply!79 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35963) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35963)))))

(declare-fun bs!3307 () Bool)

(assert (= bs!3307 d!18563))

(declare-fun m!78507 () Bool)

(assert (=> bs!3307 m!78507))

(assert (=> bs!3307 m!78507))

(declare-fun m!78509 () Bool)

(assert (=> bs!3307 m!78509))

(assert (=> b!78071 d!18563))

(declare-fun d!18565 () Bool)

(assert (=> d!18565 (contains!745 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35967)))

(declare-fun lt!36199 () Unit!2263)

(declare-fun choose!470 (ListLongMap!1465 (_ BitVec 64) V!2995 (_ BitVec 64)) Unit!2263)

(assert (=> d!18565 (= lt!36199 (choose!470 lt!35970 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35967))))

(assert (=> d!18565 (contains!745 lt!35970 lt!35967)))

(assert (=> d!18565 (= (addStillContains!55 lt!35970 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35967) lt!36199)))

(declare-fun bs!3308 () Bool)

(assert (= bs!3308 d!18565))

(assert (=> bs!3308 m!78035))

(assert (=> bs!3308 m!78035))

(assert (=> bs!3308 m!78045))

(declare-fun m!78511 () Bool)

(assert (=> bs!3308 m!78511))

(declare-fun m!78513 () Bool)

(assert (=> bs!3308 m!78513))

(assert (=> b!78071 d!18565))

(declare-fun d!18567 () Bool)

(declare-fun lt!36200 () Bool)

(assert (=> d!18567 (= lt!36200 (select (content!82 (toList!748 lt!35895)) lt!35783))))

(declare-fun e!51294 () Bool)

(assert (=> d!18567 (= lt!36200 e!51294)))

(declare-fun res!41064 () Bool)

(assert (=> d!18567 (=> (not res!41064) (not e!51294))))

(assert (=> d!18567 (= res!41064 ((_ is Cons!1529) (toList!748 lt!35895)))))

(assert (=> d!18567 (= (contains!748 (toList!748 lt!35895) lt!35783) lt!36200)))

(declare-fun b!78446 () Bool)

(declare-fun e!51295 () Bool)

(assert (=> b!78446 (= e!51294 e!51295)))

(declare-fun res!41065 () Bool)

(assert (=> b!78446 (=> res!41065 e!51295)))

(assert (=> b!78446 (= res!41065 (= (h!2117 (toList!748 lt!35895)) lt!35783))))

(declare-fun b!78447 () Bool)

(assert (=> b!78447 (= e!51295 (contains!748 (t!5183 (toList!748 lt!35895)) lt!35783))))

(assert (= (and d!18567 res!41064) b!78446))

(assert (= (and b!78446 (not res!41065)) b!78447))

(declare-fun m!78515 () Bool)

(assert (=> d!18567 m!78515))

(declare-fun m!78517 () Bool)

(assert (=> d!18567 m!78517))

(declare-fun m!78519 () Bool)

(assert (=> b!78447 m!78519))

(assert (=> b!78010 d!18567))

(declare-fun b!78456 () Bool)

(declare-fun res!41075 () Bool)

(declare-fun e!51298 () Bool)

(assert (=> b!78456 (=> (not res!41075) (not e!51298))))

(assert (=> b!78456 (= res!41075 (and (= (size!2136 (_values!2255 newMap!16)) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001)) (= (size!2135 (_keys!3932 newMap!16)) (size!2136 (_values!2255 newMap!16))) (bvsge (_size!415 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!415 newMap!16) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!18569 () Bool)

(declare-fun res!41076 () Bool)

(assert (=> d!18569 (=> (not res!41076) (not e!51298))))

(assert (=> d!18569 (= res!41076 (validMask!0 (mask!6268 newMap!16)))))

(assert (=> d!18569 (= (simpleValid!54 newMap!16) e!51298)))

(declare-fun b!78459 () Bool)

(assert (=> b!78459 (= e!51298 (and (bvsge (extraKeys!2123 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2123 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!415 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!78457 () Bool)

(declare-fun res!41074 () Bool)

(assert (=> b!78457 (=> (not res!41074) (not e!51298))))

(declare-fun size!2139 (LongMapFixedSize!732) (_ BitVec 32))

(assert (=> b!78457 (= res!41074 (bvsge (size!2139 newMap!16) (_size!415 newMap!16)))))

(declare-fun b!78458 () Bool)

(declare-fun res!41077 () Bool)

(assert (=> b!78458 (=> (not res!41077) (not e!51298))))

(assert (=> b!78458 (= res!41077 (= (size!2139 newMap!16) (bvadd (_size!415 newMap!16) (bvsdiv (bvadd (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!18569 res!41076) b!78456))

(assert (= (and b!78456 res!41075) b!78457))

(assert (= (and b!78457 res!41074) b!78458))

(assert (= (and b!78458 res!41077) b!78459))

(assert (=> d!18569 m!78167))

(declare-fun m!78521 () Bool)

(assert (=> b!78457 m!78521))

(assert (=> b!78458 m!78521))

(assert (=> d!18411 d!18569))

(declare-fun d!18571 () Bool)

(declare-fun e!51300 () Bool)

(assert (=> d!18571 e!51300))

(declare-fun res!41078 () Bool)

(assert (=> d!18571 (=> res!41078 e!51300)))

(declare-fun lt!36201 () Bool)

(assert (=> d!18571 (= res!41078 (not lt!36201))))

(declare-fun lt!36202 () Bool)

(assert (=> d!18571 (= lt!36201 lt!36202)))

(declare-fun lt!36203 () Unit!2263)

(declare-fun e!51299 () Unit!2263)

(assert (=> d!18571 (= lt!36203 e!51299)))

(declare-fun c!12043 () Bool)

(assert (=> d!18571 (= c!12043 lt!36202)))

(assert (=> d!18571 (= lt!36202 (containsKey!140 (toList!748 lt!35907) (_1!1105 lt!35784)))))

(assert (=> d!18571 (= (contains!745 lt!35907 (_1!1105 lt!35784)) lt!36201)))

(declare-fun b!78460 () Bool)

(declare-fun lt!36204 () Unit!2263)

(assert (=> b!78460 (= e!51299 lt!36204)))

(assert (=> b!78460 (= lt!36204 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35907) (_1!1105 lt!35784)))))

(assert (=> b!78460 (isDefined!90 (getValueByKey!136 (toList!748 lt!35907) (_1!1105 lt!35784)))))

(declare-fun b!78461 () Bool)

(declare-fun Unit!2282 () Unit!2263)

(assert (=> b!78461 (= e!51299 Unit!2282)))

(declare-fun b!78462 () Bool)

(assert (=> b!78462 (= e!51300 (isDefined!90 (getValueByKey!136 (toList!748 lt!35907) (_1!1105 lt!35784))))))

(assert (= (and d!18571 c!12043) b!78460))

(assert (= (and d!18571 (not c!12043)) b!78461))

(assert (= (and d!18571 (not res!41078)) b!78462))

(declare-fun m!78523 () Bool)

(assert (=> d!18571 m!78523))

(declare-fun m!78525 () Bool)

(assert (=> b!78460 m!78525))

(assert (=> b!78460 m!77999))

(assert (=> b!78460 m!77999))

(declare-fun m!78527 () Bool)

(assert (=> b!78460 m!78527))

(assert (=> b!78462 m!77999))

(assert (=> b!78462 m!77999))

(assert (=> b!78462 m!78527))

(assert (=> d!18443 d!18571))

(declare-fun b!78464 () Bool)

(declare-fun e!51301 () Option!142)

(declare-fun e!51302 () Option!142)

(assert (=> b!78464 (= e!51301 e!51302)))

(declare-fun c!12045 () Bool)

(assert (=> b!78464 (= c!12045 (and ((_ is Cons!1529) lt!35904) (not (= (_1!1105 (h!2117 lt!35904)) (_1!1105 lt!35784)))))))

(declare-fun b!78463 () Bool)

(assert (=> b!78463 (= e!51301 (Some!141 (_2!1105 (h!2117 lt!35904))))))

(declare-fun b!78465 () Bool)

(assert (=> b!78465 (= e!51302 (getValueByKey!136 (t!5183 lt!35904) (_1!1105 lt!35784)))))

(declare-fun b!78466 () Bool)

(assert (=> b!78466 (= e!51302 None!140)))

(declare-fun d!18573 () Bool)

(declare-fun c!12044 () Bool)

(assert (=> d!18573 (= c!12044 (and ((_ is Cons!1529) lt!35904) (= (_1!1105 (h!2117 lt!35904)) (_1!1105 lt!35784))))))

(assert (=> d!18573 (= (getValueByKey!136 lt!35904 (_1!1105 lt!35784)) e!51301)))

(assert (= (and d!18573 c!12044) b!78463))

(assert (= (and d!18573 (not c!12044)) b!78464))

(assert (= (and b!78464 c!12045) b!78465))

(assert (= (and b!78464 (not c!12045)) b!78466))

(declare-fun m!78529 () Bool)

(assert (=> b!78465 m!78529))

(assert (=> d!18443 d!18573))

(declare-fun d!18575 () Bool)

(assert (=> d!18575 (= (getValueByKey!136 lt!35904 (_1!1105 lt!35784)) (Some!141 (_2!1105 lt!35784)))))

(declare-fun lt!36205 () Unit!2263)

(assert (=> d!18575 (= lt!36205 (choose!468 lt!35904 (_1!1105 lt!35784) (_2!1105 lt!35784)))))

(declare-fun e!51303 () Bool)

(assert (=> d!18575 e!51303))

(declare-fun res!41079 () Bool)

(assert (=> d!18575 (=> (not res!41079) (not e!51303))))

(assert (=> d!18575 (= res!41079 (isStrictlySorted!290 lt!35904))))

(assert (=> d!18575 (= (lemmaContainsTupThenGetReturnValue!55 lt!35904 (_1!1105 lt!35784) (_2!1105 lt!35784)) lt!36205)))

(declare-fun b!78467 () Bool)

(declare-fun res!41080 () Bool)

(assert (=> b!78467 (=> (not res!41080) (not e!51303))))

(assert (=> b!78467 (= res!41080 (containsKey!140 lt!35904 (_1!1105 lt!35784)))))

(declare-fun b!78468 () Bool)

(assert (=> b!78468 (= e!51303 (contains!748 lt!35904 (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(assert (= (and d!18575 res!41079) b!78467))

(assert (= (and b!78467 res!41080) b!78468))

(assert (=> d!18575 m!77993))

(declare-fun m!78531 () Bool)

(assert (=> d!18575 m!78531))

(declare-fun m!78533 () Bool)

(assert (=> d!18575 m!78533))

(declare-fun m!78535 () Bool)

(assert (=> b!78467 m!78535))

(declare-fun m!78537 () Bool)

(assert (=> b!78468 m!78537))

(assert (=> d!18443 d!18575))

(declare-fun b!78469 () Bool)

(declare-fun c!12046 () Bool)

(assert (=> b!78469 (= c!12046 (and ((_ is Cons!1529) (toList!748 lt!35781)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35781))) (_1!1105 lt!35784))))))

(declare-fun e!51307 () List!1533)

(declare-fun e!51304 () List!1533)

(assert (=> b!78469 (= e!51307 e!51304)))

(declare-fun bm!7196 () Bool)

(declare-fun e!51306 () List!1533)

(declare-fun call!7201 () List!1533)

(declare-fun c!12047 () Bool)

(assert (=> bm!7196 (= call!7201 ($colon$colon!68 e!51306 (ite c!12047 (h!2117 (toList!748 lt!35781)) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784)))))))

(declare-fun c!12048 () Bool)

(assert (=> bm!7196 (= c!12048 c!12047)))

(declare-fun d!18577 () Bool)

(declare-fun e!51308 () Bool)

(assert (=> d!18577 e!51308))

(declare-fun res!41081 () Bool)

(assert (=> d!18577 (=> (not res!41081) (not e!51308))))

(declare-fun lt!36206 () List!1533)

(assert (=> d!18577 (= res!41081 (isStrictlySorted!290 lt!36206))))

(declare-fun e!51305 () List!1533)

(assert (=> d!18577 (= lt!36206 e!51305)))

(assert (=> d!18577 (= c!12047 (and ((_ is Cons!1529) (toList!748 lt!35781)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35781))) (_1!1105 lt!35784))))))

(assert (=> d!18577 (isStrictlySorted!290 (toList!748 lt!35781))))

(assert (=> d!18577 (= (insertStrictlySorted!57 (toList!748 lt!35781) (_1!1105 lt!35784) (_2!1105 lt!35784)) lt!36206)))

(declare-fun c!12049 () Bool)

(declare-fun b!78470 () Bool)

(assert (=> b!78470 (= e!51306 (ite c!12049 (t!5183 (toList!748 lt!35781)) (ite c!12046 (Cons!1529 (h!2117 (toList!748 lt!35781)) (t!5183 (toList!748 lt!35781))) Nil!1530)))))

(declare-fun bm!7197 () Bool)

(declare-fun call!7200 () List!1533)

(assert (=> bm!7197 (= call!7200 call!7201)))

(declare-fun b!78471 () Bool)

(assert (=> b!78471 (= e!51305 call!7201)))

(declare-fun b!78472 () Bool)

(declare-fun res!41082 () Bool)

(assert (=> b!78472 (=> (not res!41082) (not e!51308))))

(assert (=> b!78472 (= res!41082 (containsKey!140 lt!36206 (_1!1105 lt!35784)))))

(declare-fun b!78473 () Bool)

(declare-fun call!7199 () List!1533)

(assert (=> b!78473 (= e!51304 call!7199)))

(declare-fun b!78474 () Bool)

(assert (=> b!78474 (= e!51307 call!7200)))

(declare-fun b!78475 () Bool)

(assert (=> b!78475 (= e!51305 e!51307)))

(assert (=> b!78475 (= c!12049 (and ((_ is Cons!1529) (toList!748 lt!35781)) (= (_1!1105 (h!2117 (toList!748 lt!35781))) (_1!1105 lt!35784))))))

(declare-fun bm!7198 () Bool)

(assert (=> bm!7198 (= call!7199 call!7200)))

(declare-fun b!78476 () Bool)

(assert (=> b!78476 (= e!51306 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35781)) (_1!1105 lt!35784) (_2!1105 lt!35784)))))

(declare-fun b!78477 () Bool)

(assert (=> b!78477 (= e!51308 (contains!748 lt!36206 (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun b!78478 () Bool)

(assert (=> b!78478 (= e!51304 call!7199)))

(assert (= (and d!18577 c!12047) b!78471))

(assert (= (and d!18577 (not c!12047)) b!78475))

(assert (= (and b!78475 c!12049) b!78474))

(assert (= (and b!78475 (not c!12049)) b!78469))

(assert (= (and b!78469 c!12046) b!78478))

(assert (= (and b!78469 (not c!12046)) b!78473))

(assert (= (or b!78478 b!78473) bm!7198))

(assert (= (or b!78474 bm!7198) bm!7197))

(assert (= (or b!78471 bm!7197) bm!7196))

(assert (= (and bm!7196 c!12048) b!78476))

(assert (= (and bm!7196 (not c!12048)) b!78470))

(assert (= (and d!18577 res!41081) b!78472))

(assert (= (and b!78472 res!41082) b!78477))

(declare-fun m!78539 () Bool)

(assert (=> b!78472 m!78539))

(declare-fun m!78541 () Bool)

(assert (=> b!78477 m!78541))

(declare-fun m!78543 () Bool)

(assert (=> d!18577 m!78543))

(declare-fun m!78545 () Bool)

(assert (=> d!18577 m!78545))

(declare-fun m!78547 () Bool)

(assert (=> bm!7196 m!78547))

(declare-fun m!78549 () Bool)

(assert (=> b!78476 m!78549))

(assert (=> d!18443 d!18577))

(declare-fun d!18579 () Bool)

(declare-fun lt!36207 () Bool)

(assert (=> d!18579 (= lt!36207 (select (content!82 (toList!748 lt!35899)) lt!35784))))

(declare-fun e!51309 () Bool)

(assert (=> d!18579 (= lt!36207 e!51309)))

(declare-fun res!41083 () Bool)

(assert (=> d!18579 (=> (not res!41083) (not e!51309))))

(assert (=> d!18579 (= res!41083 ((_ is Cons!1529) (toList!748 lt!35899)))))

(assert (=> d!18579 (= (contains!748 (toList!748 lt!35899) lt!35784) lt!36207)))

(declare-fun b!78479 () Bool)

(declare-fun e!51310 () Bool)

(assert (=> b!78479 (= e!51309 e!51310)))

(declare-fun res!41084 () Bool)

(assert (=> b!78479 (=> res!41084 e!51310)))

(assert (=> b!78479 (= res!41084 (= (h!2117 (toList!748 lt!35899)) lt!35784))))

(declare-fun b!78480 () Bool)

(assert (=> b!78480 (= e!51310 (contains!748 (t!5183 (toList!748 lt!35899)) lt!35784))))

(assert (= (and d!18579 res!41083) b!78479))

(assert (= (and b!78479 (not res!41084)) b!78480))

(declare-fun m!78551 () Bool)

(assert (=> d!18579 m!78551))

(declare-fun m!78553 () Bool)

(assert (=> d!18579 m!78553))

(declare-fun m!78555 () Bool)

(assert (=> b!78480 m!78555))

(assert (=> b!78012 d!18579))

(declare-fun d!18581 () Bool)

(assert (=> d!18581 (= (apply!79 lt!35867 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1192 (getValueByKey!136 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3309 () Bool)

(assert (= bs!3309 d!18581))

(assert (=> bs!3309 m!77883))

(assert (=> bs!3309 m!78161))

(assert (=> bs!3309 m!78161))

(declare-fun m!78557 () Bool)

(assert (=> bs!3309 m!78557))

(assert (=> b!77994 d!18581))

(assert (=> b!77994 d!18495))

(assert (=> d!18417 d!18421))

(declare-fun d!18583 () Bool)

(assert (=> d!18583 (not (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!18583 true))

(declare-fun _$68!64 () Unit!2263)

(assert (=> d!18583 (= (choose!68 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531)) _$68!64)))

(declare-fun bs!3310 () Bool)

(assert (= bs!3310 d!18583))

(assert (=> bs!3310 m!77749))

(assert (=> bs!3310 m!77753))

(assert (=> d!18417 d!18583))

(declare-fun d!18585 () Bool)

(declare-fun e!51311 () Bool)

(assert (=> d!18585 e!51311))

(declare-fun res!41085 () Bool)

(assert (=> d!18585 (=> (not res!41085) (not e!51311))))

(declare-fun lt!36211 () ListLongMap!1465)

(assert (=> d!18585 (= res!41085 (contains!745 lt!36211 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!36208 () List!1533)

(assert (=> d!18585 (= lt!36211 (ListLongMap!1466 lt!36208))))

(declare-fun lt!36210 () Unit!2263)

(declare-fun lt!36209 () Unit!2263)

(assert (=> d!18585 (= lt!36210 lt!36209)))

(assert (=> d!18585 (= (getValueByKey!136 lt!36208 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18585 (= lt!36209 (lemmaContainsTupThenGetReturnValue!55 lt!36208 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18585 (= lt!36208 (insertStrictlySorted!57 (toList!748 call!7148) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18585 (= (+!109 call!7148 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!36211)))

(declare-fun b!78481 () Bool)

(declare-fun res!41086 () Bool)

(assert (=> b!78481 (=> (not res!41086) (not e!51311))))

(assert (=> b!78481 (= res!41086 (= (getValueByKey!136 (toList!748 lt!36211) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!78482 () Bool)

(assert (=> b!78482 (= e!51311 (contains!748 (toList!748 lt!36211) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!18585 res!41085) b!78481))

(assert (= (and b!78481 res!41086) b!78482))

(declare-fun m!78559 () Bool)

(assert (=> d!18585 m!78559))

(declare-fun m!78561 () Bool)

(assert (=> d!18585 m!78561))

(declare-fun m!78563 () Bool)

(assert (=> d!18585 m!78563))

(declare-fun m!78565 () Bool)

(assert (=> d!18585 m!78565))

(declare-fun m!78567 () Bool)

(assert (=> b!78481 m!78567))

(declare-fun m!78569 () Bool)

(assert (=> b!78482 m!78569))

(assert (=> b!78213 d!18585))

(declare-fun d!18587 () Bool)

(declare-fun e!51313 () Bool)

(assert (=> d!18587 e!51313))

(declare-fun res!41087 () Bool)

(assert (=> d!18587 (=> res!41087 e!51313)))

(declare-fun lt!36212 () Bool)

(assert (=> d!18587 (= res!41087 (not lt!36212))))

(declare-fun lt!36213 () Bool)

(assert (=> d!18587 (= lt!36212 lt!36213)))

(declare-fun lt!36214 () Unit!2263)

(declare-fun e!51312 () Unit!2263)

(assert (=> d!18587 (= lt!36214 e!51312)))

(declare-fun c!12050 () Bool)

(assert (=> d!18587 (= c!12050 lt!36213)))

(assert (=> d!18587 (= lt!36213 (containsKey!140 (toList!748 lt!35911) (_1!1105 lt!35788)))))

(assert (=> d!18587 (= (contains!745 lt!35911 (_1!1105 lt!35788)) lt!36212)))

(declare-fun b!78483 () Bool)

(declare-fun lt!36215 () Unit!2263)

(assert (=> b!78483 (= e!51312 lt!36215)))

(assert (=> b!78483 (= lt!36215 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35911) (_1!1105 lt!35788)))))

(assert (=> b!78483 (isDefined!90 (getValueByKey!136 (toList!748 lt!35911) (_1!1105 lt!35788)))))

(declare-fun b!78484 () Bool)

(declare-fun Unit!2283 () Unit!2263)

(assert (=> b!78484 (= e!51312 Unit!2283)))

(declare-fun b!78485 () Bool)

(assert (=> b!78485 (= e!51313 (isDefined!90 (getValueByKey!136 (toList!748 lt!35911) (_1!1105 lt!35788))))))

(assert (= (and d!18587 c!12050) b!78483))

(assert (= (and d!18587 (not c!12050)) b!78484))

(assert (= (and d!18587 (not res!41087)) b!78485))

(declare-fun m!78571 () Bool)

(assert (=> d!18587 m!78571))

(declare-fun m!78573 () Bool)

(assert (=> b!78483 m!78573))

(assert (=> b!78483 m!78011))

(assert (=> b!78483 m!78011))

(declare-fun m!78575 () Bool)

(assert (=> b!78483 m!78575))

(assert (=> b!78485 m!78011))

(assert (=> b!78485 m!78011))

(assert (=> b!78485 m!78575))

(assert (=> d!18445 d!18587))

(declare-fun b!78487 () Bool)

(declare-fun e!51314 () Option!142)

(declare-fun e!51315 () Option!142)

(assert (=> b!78487 (= e!51314 e!51315)))

(declare-fun c!12052 () Bool)

(assert (=> b!78487 (= c!12052 (and ((_ is Cons!1529) lt!35908) (not (= (_1!1105 (h!2117 lt!35908)) (_1!1105 lt!35788)))))))

(declare-fun b!78486 () Bool)

(assert (=> b!78486 (= e!51314 (Some!141 (_2!1105 (h!2117 lt!35908))))))

(declare-fun b!78488 () Bool)

(assert (=> b!78488 (= e!51315 (getValueByKey!136 (t!5183 lt!35908) (_1!1105 lt!35788)))))

(declare-fun b!78489 () Bool)

(assert (=> b!78489 (= e!51315 None!140)))

(declare-fun d!18589 () Bool)

(declare-fun c!12051 () Bool)

(assert (=> d!18589 (= c!12051 (and ((_ is Cons!1529) lt!35908) (= (_1!1105 (h!2117 lt!35908)) (_1!1105 lt!35788))))))

(assert (=> d!18589 (= (getValueByKey!136 lt!35908 (_1!1105 lt!35788)) e!51314)))

(assert (= (and d!18589 c!12051) b!78486))

(assert (= (and d!18589 (not c!12051)) b!78487))

(assert (= (and b!78487 c!12052) b!78488))

(assert (= (and b!78487 (not c!12052)) b!78489))

(declare-fun m!78577 () Bool)

(assert (=> b!78488 m!78577))

(assert (=> d!18445 d!18589))

(declare-fun d!18591 () Bool)

(assert (=> d!18591 (= (getValueByKey!136 lt!35908 (_1!1105 lt!35788)) (Some!141 (_2!1105 lt!35788)))))

(declare-fun lt!36216 () Unit!2263)

(assert (=> d!18591 (= lt!36216 (choose!468 lt!35908 (_1!1105 lt!35788) (_2!1105 lt!35788)))))

(declare-fun e!51316 () Bool)

(assert (=> d!18591 e!51316))

(declare-fun res!41088 () Bool)

(assert (=> d!18591 (=> (not res!41088) (not e!51316))))

(assert (=> d!18591 (= res!41088 (isStrictlySorted!290 lt!35908))))

(assert (=> d!18591 (= (lemmaContainsTupThenGetReturnValue!55 lt!35908 (_1!1105 lt!35788) (_2!1105 lt!35788)) lt!36216)))

(declare-fun b!78490 () Bool)

(declare-fun res!41089 () Bool)

(assert (=> b!78490 (=> (not res!41089) (not e!51316))))

(assert (=> b!78490 (= res!41089 (containsKey!140 lt!35908 (_1!1105 lt!35788)))))

(declare-fun b!78491 () Bool)

(assert (=> b!78491 (= e!51316 (contains!748 lt!35908 (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(assert (= (and d!18591 res!41088) b!78490))

(assert (= (and b!78490 res!41089) b!78491))

(assert (=> d!18591 m!78005))

(declare-fun m!78579 () Bool)

(assert (=> d!18591 m!78579))

(declare-fun m!78581 () Bool)

(assert (=> d!18591 m!78581))

(declare-fun m!78583 () Bool)

(assert (=> b!78490 m!78583))

(declare-fun m!78585 () Bool)

(assert (=> b!78491 m!78585))

(assert (=> d!18445 d!18591))

(declare-fun b!78492 () Bool)

(declare-fun c!12053 () Bool)

(assert (=> b!78492 (= c!12053 (and ((_ is Cons!1529) (toList!748 lt!35785)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 lt!35788))))))

(declare-fun e!51320 () List!1533)

(declare-fun e!51317 () List!1533)

(assert (=> b!78492 (= e!51320 e!51317)))

(declare-fun c!12054 () Bool)

(declare-fun bm!7199 () Bool)

(declare-fun call!7204 () List!1533)

(declare-fun e!51319 () List!1533)

(assert (=> bm!7199 (= call!7204 ($colon$colon!68 e!51319 (ite c!12054 (h!2117 (toList!748 lt!35785)) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788)))))))

(declare-fun c!12055 () Bool)

(assert (=> bm!7199 (= c!12055 c!12054)))

(declare-fun d!18593 () Bool)

(declare-fun e!51321 () Bool)

(assert (=> d!18593 e!51321))

(declare-fun res!41090 () Bool)

(assert (=> d!18593 (=> (not res!41090) (not e!51321))))

(declare-fun lt!36217 () List!1533)

(assert (=> d!18593 (= res!41090 (isStrictlySorted!290 lt!36217))))

(declare-fun e!51318 () List!1533)

(assert (=> d!18593 (= lt!36217 e!51318)))

(assert (=> d!18593 (= c!12054 (and ((_ is Cons!1529) (toList!748 lt!35785)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 lt!35788))))))

(assert (=> d!18593 (isStrictlySorted!290 (toList!748 lt!35785))))

(assert (=> d!18593 (= (insertStrictlySorted!57 (toList!748 lt!35785) (_1!1105 lt!35788) (_2!1105 lt!35788)) lt!36217)))

(declare-fun b!78493 () Bool)

(declare-fun c!12056 () Bool)

(assert (=> b!78493 (= e!51319 (ite c!12056 (t!5183 (toList!748 lt!35785)) (ite c!12053 (Cons!1529 (h!2117 (toList!748 lt!35785)) (t!5183 (toList!748 lt!35785))) Nil!1530)))))

(declare-fun bm!7200 () Bool)

(declare-fun call!7203 () List!1533)

(assert (=> bm!7200 (= call!7203 call!7204)))

(declare-fun b!78494 () Bool)

(assert (=> b!78494 (= e!51318 call!7204)))

(declare-fun b!78495 () Bool)

(declare-fun res!41091 () Bool)

(assert (=> b!78495 (=> (not res!41091) (not e!51321))))

(assert (=> b!78495 (= res!41091 (containsKey!140 lt!36217 (_1!1105 lt!35788)))))

(declare-fun b!78496 () Bool)

(declare-fun call!7202 () List!1533)

(assert (=> b!78496 (= e!51317 call!7202)))

(declare-fun b!78497 () Bool)

(assert (=> b!78497 (= e!51320 call!7203)))

(declare-fun b!78498 () Bool)

(assert (=> b!78498 (= e!51318 e!51320)))

(assert (=> b!78498 (= c!12056 (and ((_ is Cons!1529) (toList!748 lt!35785)) (= (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 lt!35788))))))

(declare-fun bm!7201 () Bool)

(assert (=> bm!7201 (= call!7202 call!7203)))

(declare-fun b!78499 () Bool)

(assert (=> b!78499 (= e!51319 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35785)) (_1!1105 lt!35788) (_2!1105 lt!35788)))))

(declare-fun b!78500 () Bool)

(assert (=> b!78500 (= e!51321 (contains!748 lt!36217 (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun b!78501 () Bool)

(assert (=> b!78501 (= e!51317 call!7202)))

(assert (= (and d!18593 c!12054) b!78494))

(assert (= (and d!18593 (not c!12054)) b!78498))

(assert (= (and b!78498 c!12056) b!78497))

(assert (= (and b!78498 (not c!12056)) b!78492))

(assert (= (and b!78492 c!12053) b!78501))

(assert (= (and b!78492 (not c!12053)) b!78496))

(assert (= (or b!78501 b!78496) bm!7201))

(assert (= (or b!78497 bm!7201) bm!7200))

(assert (= (or b!78494 bm!7200) bm!7199))

(assert (= (and bm!7199 c!12055) b!78499))

(assert (= (and bm!7199 (not c!12055)) b!78493))

(assert (= (and d!18593 res!41090) b!78495))

(assert (= (and b!78495 res!41091) b!78500))

(declare-fun m!78587 () Bool)

(assert (=> b!78495 m!78587))

(declare-fun m!78589 () Bool)

(assert (=> b!78500 m!78589))

(declare-fun m!78591 () Bool)

(assert (=> d!18593 m!78591))

(declare-fun m!78593 () Bool)

(assert (=> d!18593 m!78593))

(declare-fun m!78595 () Bool)

(assert (=> bm!7199 m!78595))

(declare-fun m!78597 () Bool)

(assert (=> b!78499 m!78597))

(assert (=> d!18445 d!18593))

(declare-fun bm!7204 () Bool)

(declare-fun call!7207 () Bool)

(assert (=> bm!7204 (= call!7207 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!78510 () Bool)

(declare-fun e!51330 () Bool)

(assert (=> b!78510 (= e!51330 call!7207)))

(declare-fun b!78511 () Bool)

(declare-fun e!51329 () Bool)

(assert (=> b!78511 (= e!51329 call!7207)))

(declare-fun d!18595 () Bool)

(declare-fun res!41097 () Bool)

(declare-fun e!51328 () Bool)

(assert (=> d!18595 (=> res!41097 e!51328)))

(assert (=> d!18595 (= res!41097 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18595 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 newMap!16) (mask!6268 newMap!16)) e!51328)))

(declare-fun b!78512 () Bool)

(assert (=> b!78512 (= e!51330 e!51329)))

(declare-fun lt!36224 () (_ BitVec 64))

(assert (=> b!78512 (= lt!36224 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36226 () Unit!2263)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3974 (_ BitVec 64) (_ BitVec 32)) Unit!2263)

(assert (=> b!78512 (= lt!36226 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3932 newMap!16) lt!36224 #b00000000000000000000000000000000))))

(assert (=> b!78512 (arrayContainsKey!0 (_keys!3932 newMap!16) lt!36224 #b00000000000000000000000000000000)))

(declare-fun lt!36225 () Unit!2263)

(assert (=> b!78512 (= lt!36225 lt!36226)))

(declare-fun res!41096 () Bool)

(assert (=> b!78512 (= res!41096 (= (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (_keys!3932 newMap!16) (mask!6268 newMap!16)) (Found!250 #b00000000000000000000000000000000)))))

(assert (=> b!78512 (=> (not res!41096) (not e!51329))))

(declare-fun b!78513 () Bool)

(assert (=> b!78513 (= e!51328 e!51330)))

(declare-fun c!12059 () Bool)

(assert (=> b!78513 (= c!12059 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!18595 (not res!41097)) b!78513))

(assert (= (and b!78513 c!12059) b!78512))

(assert (= (and b!78513 (not c!12059)) b!78510))

(assert (= (and b!78512 res!41096) b!78511))

(assert (= (or b!78511 b!78510) bm!7204))

(declare-fun m!78599 () Bool)

(assert (=> bm!7204 m!78599))

(assert (=> b!78512 m!78153))

(declare-fun m!78601 () Bool)

(assert (=> b!78512 m!78601))

(declare-fun m!78603 () Bool)

(assert (=> b!78512 m!78603))

(assert (=> b!78512 m!78153))

(declare-fun m!78605 () Bool)

(assert (=> b!78512 m!78605))

(assert (=> b!78513 m!78153))

(assert (=> b!78513 m!78153))

(assert (=> b!78513 m!78155))

(assert (=> b!77936 d!18595))

(declare-fun d!18597 () Bool)

(assert (=> d!18597 (isDefined!90 (getValueByKey!136 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun lt!36229 () Unit!2263)

(declare-fun choose!471 (List!1533 (_ BitVec 64)) Unit!2263)

(assert (=> d!18597 (= lt!36229 (choose!471 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun e!51333 () Bool)

(assert (=> d!18597 e!51333))

(declare-fun res!41100 () Bool)

(assert (=> d!18597 (=> (not res!41100) (not e!51333))))

(assert (=> d!18597 (= res!41100 (isStrictlySorted!290 (toList!748 lt!35787)))))

(assert (=> d!18597 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) lt!36229)))

(declare-fun b!78516 () Bool)

(assert (=> b!78516 (= e!51333 (containsKey!140 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!18597 res!41100) b!78516))

(assert (=> d!18597 m!77749))

(assert (=> d!18597 m!78079))

(assert (=> d!18597 m!78079))

(assert (=> d!18597 m!78081))

(assert (=> d!18597 m!77749))

(declare-fun m!78607 () Bool)

(assert (=> d!18597 m!78607))

(declare-fun m!78609 () Bool)

(assert (=> d!18597 m!78609))

(assert (=> b!78516 m!77749))

(assert (=> b!78516 m!78075))

(assert (=> b!78088 d!18597))

(declare-fun d!18599 () Bool)

(declare-fun isEmpty!332 (Option!142) Bool)

(assert (=> d!18599 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun bs!3311 () Bool)

(assert (= bs!3311 d!18599))

(assert (=> bs!3311 m!78079))

(declare-fun m!78611 () Bool)

(assert (=> bs!3311 m!78611))

(assert (=> b!78088 d!18599))

(declare-fun b!78518 () Bool)

(declare-fun e!51334 () Option!142)

(declare-fun e!51335 () Option!142)

(assert (=> b!78518 (= e!51334 e!51335)))

(declare-fun c!12061 () Bool)

(assert (=> b!78518 (= c!12061 (and ((_ is Cons!1529) (toList!748 lt!35787)) (not (= (_1!1105 (h!2117 (toList!748 lt!35787))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun b!78517 () Bool)

(assert (=> b!78517 (= e!51334 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35787)))))))

(declare-fun b!78519 () Bool)

(assert (=> b!78519 (= e!51335 (getValueByKey!136 (t!5183 (toList!748 lt!35787)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!78520 () Bool)

(assert (=> b!78520 (= e!51335 None!140)))

(declare-fun d!18601 () Bool)

(declare-fun c!12060 () Bool)

(assert (=> d!18601 (= c!12060 (and ((_ is Cons!1529) (toList!748 lt!35787)) (= (_1!1105 (h!2117 (toList!748 lt!35787))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!18601 (= (getValueByKey!136 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) e!51334)))

(assert (= (and d!18601 c!12060) b!78517))

(assert (= (and d!18601 (not c!12060)) b!78518))

(assert (= (and b!78518 c!12061) b!78519))

(assert (= (and b!78518 (not c!12061)) b!78520))

(assert (=> b!78519 m!77749))

(declare-fun m!78613 () Bool)

(assert (=> b!78519 m!78613))

(assert (=> b!78088 d!18601))

(declare-fun d!18603 () Bool)

(assert (=> d!18603 (= (+!109 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (+!109 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (=> d!18603 true))

(declare-fun _$28!130 () Unit!2263)

(assert (=> d!18603 (= (choose!462 lt!35785 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) _$28!130)))

(declare-fun bs!3312 () Bool)

(assert (= bs!3312 d!18603))

(assert (=> bs!3312 m!78017))

(assert (=> bs!3312 m!78017))

(assert (=> bs!3312 m!78021))

(assert (=> bs!3312 m!78019))

(assert (=> bs!3312 m!78019))

(assert (=> bs!3312 m!78023))

(assert (=> d!18447 d!18603))

(declare-fun d!18605 () Bool)

(declare-fun e!51336 () Bool)

(assert (=> d!18605 e!51336))

(declare-fun res!41101 () Bool)

(assert (=> d!18605 (=> (not res!41101) (not e!51336))))

(declare-fun lt!36233 () ListLongMap!1465)

(assert (=> d!18605 (= res!41101 (contains!745 lt!36233 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36230 () List!1533)

(assert (=> d!18605 (= lt!36233 (ListLongMap!1466 lt!36230))))

(declare-fun lt!36232 () Unit!2263)

(declare-fun lt!36231 () Unit!2263)

(assert (=> d!18605 (= lt!36232 lt!36231)))

(assert (=> d!18605 (= (getValueByKey!136 lt!36230 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18605 (= lt!36231 (lemmaContainsTupThenGetReturnValue!55 lt!36230 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18605 (= lt!36230 (insertStrictlySorted!57 (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18605 (= (+!109 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36233)))

(declare-fun b!78521 () Bool)

(declare-fun res!41102 () Bool)

(assert (=> b!78521 (=> (not res!41102) (not e!51336))))

(assert (=> b!78521 (= res!41102 (= (getValueByKey!136 (toList!748 lt!36233) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!78522 () Bool)

(assert (=> b!78522 (= e!51336 (contains!748 (toList!748 lt!36233) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18605 res!41101) b!78521))

(assert (= (and b!78521 res!41102) b!78522))

(declare-fun m!78615 () Bool)

(assert (=> d!18605 m!78615))

(declare-fun m!78617 () Bool)

(assert (=> d!18605 m!78617))

(declare-fun m!78619 () Bool)

(assert (=> d!18605 m!78619))

(declare-fun m!78621 () Bool)

(assert (=> d!18605 m!78621))

(declare-fun m!78623 () Bool)

(assert (=> b!78521 m!78623))

(declare-fun m!78625 () Bool)

(assert (=> b!78522 m!78625))

(assert (=> d!18447 d!18605))

(declare-fun d!18607 () Bool)

(declare-fun e!51337 () Bool)

(assert (=> d!18607 e!51337))

(declare-fun res!41103 () Bool)

(assert (=> d!18607 (=> (not res!41103) (not e!51337))))

(declare-fun lt!36237 () ListLongMap!1465)

(assert (=> d!18607 (= res!41103 (contains!745 lt!36237 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36234 () List!1533)

(assert (=> d!18607 (= lt!36237 (ListLongMap!1466 lt!36234))))

(declare-fun lt!36236 () Unit!2263)

(declare-fun lt!36235 () Unit!2263)

(assert (=> d!18607 (= lt!36236 lt!36235)))

(assert (=> d!18607 (= (getValueByKey!136 lt!36234 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18607 (= lt!36235 (lemmaContainsTupThenGetReturnValue!55 lt!36234 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18607 (= lt!36234 (insertStrictlySorted!57 (toList!748 lt!35785) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18607 (= (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36237)))

(declare-fun b!78523 () Bool)

(declare-fun res!41104 () Bool)

(assert (=> b!78523 (=> (not res!41104) (not e!51337))))

(assert (=> b!78523 (= res!41104 (= (getValueByKey!136 (toList!748 lt!36237) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!78524 () Bool)

(assert (=> b!78524 (= e!51337 (contains!748 (toList!748 lt!36237) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18607 res!41103) b!78523))

(assert (= (and b!78523 res!41104) b!78524))

(declare-fun m!78627 () Bool)

(assert (=> d!18607 m!78627))

(declare-fun m!78629 () Bool)

(assert (=> d!18607 m!78629))

(declare-fun m!78631 () Bool)

(assert (=> d!18607 m!78631))

(declare-fun m!78633 () Bool)

(assert (=> d!18607 m!78633))

(declare-fun m!78635 () Bool)

(assert (=> b!78523 m!78635))

(declare-fun m!78637 () Bool)

(assert (=> b!78524 m!78637))

(assert (=> d!18447 d!18607))

(declare-fun d!18609 () Bool)

(declare-fun e!51338 () Bool)

(assert (=> d!18609 e!51338))

(declare-fun res!41105 () Bool)

(assert (=> d!18609 (=> (not res!41105) (not e!51338))))

(declare-fun lt!36241 () ListLongMap!1465)

(assert (=> d!18609 (= res!41105 (contains!745 lt!36241 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!36238 () List!1533)

(assert (=> d!18609 (= lt!36241 (ListLongMap!1466 lt!36238))))

(declare-fun lt!36240 () Unit!2263)

(declare-fun lt!36239 () Unit!2263)

(assert (=> d!18609 (= lt!36240 lt!36239)))

(assert (=> d!18609 (= (getValueByKey!136 lt!36238 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18609 (= lt!36239 (lemmaContainsTupThenGetReturnValue!55 lt!36238 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18609 (= lt!36238 (insertStrictlySorted!57 (toList!748 lt!35785) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18609 (= (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!36241)))

(declare-fun b!78525 () Bool)

(declare-fun res!41106 () Bool)

(assert (=> b!78525 (=> (not res!41106) (not e!51338))))

(assert (=> b!78525 (= res!41106 (= (getValueByKey!136 (toList!748 lt!36241) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!78526 () Bool)

(assert (=> b!78526 (= e!51338 (contains!748 (toList!748 lt!36241) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!18609 res!41105) b!78525))

(assert (= (and b!78525 res!41106) b!78526))

(declare-fun m!78639 () Bool)

(assert (=> d!18609 m!78639))

(declare-fun m!78641 () Bool)

(assert (=> d!18609 m!78641))

(declare-fun m!78643 () Bool)

(assert (=> d!18609 m!78643))

(declare-fun m!78645 () Bool)

(assert (=> d!18609 m!78645))

(declare-fun m!78647 () Bool)

(assert (=> b!78525 m!78647))

(declare-fun m!78649 () Bool)

(assert (=> b!78526 m!78649))

(assert (=> d!18447 d!18609))

(declare-fun d!18611 () Bool)

(declare-fun e!51339 () Bool)

(assert (=> d!18611 e!51339))

(declare-fun res!41107 () Bool)

(assert (=> d!18611 (=> (not res!41107) (not e!51339))))

(declare-fun lt!36245 () ListLongMap!1465)

(assert (=> d!18611 (= res!41107 (contains!745 lt!36245 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!36242 () List!1533)

(assert (=> d!18611 (= lt!36245 (ListLongMap!1466 lt!36242))))

(declare-fun lt!36244 () Unit!2263)

(declare-fun lt!36243 () Unit!2263)

(assert (=> d!18611 (= lt!36244 lt!36243)))

(assert (=> d!18611 (= (getValueByKey!136 lt!36242 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18611 (= lt!36243 (lemmaContainsTupThenGetReturnValue!55 lt!36242 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18611 (= lt!36242 (insertStrictlySorted!57 (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18611 (= (+!109 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!36245)))

(declare-fun b!78527 () Bool)

(declare-fun res!41108 () Bool)

(assert (=> b!78527 (=> (not res!41108) (not e!51339))))

(assert (=> b!78527 (= res!41108 (= (getValueByKey!136 (toList!748 lt!36245) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!78528 () Bool)

(assert (=> b!78528 (= e!51339 (contains!748 (toList!748 lt!36245) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!18611 res!41107) b!78527))

(assert (= (and b!78527 res!41108) b!78528))

(declare-fun m!78651 () Bool)

(assert (=> d!18611 m!78651))

(declare-fun m!78653 () Bool)

(assert (=> d!18611 m!78653))

(declare-fun m!78655 () Bool)

(assert (=> d!18611 m!78655))

(declare-fun m!78657 () Bool)

(assert (=> d!18611 m!78657))

(declare-fun m!78659 () Bool)

(assert (=> b!78527 m!78659))

(declare-fun m!78661 () Bool)

(assert (=> b!78528 m!78661))

(assert (=> d!18447 d!18611))

(declare-fun d!18613 () Bool)

(assert (=> d!18613 (= (+!109 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36052 lt!35780 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36248 () Unit!2263)

(declare-fun choose!472 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 V!2995 Int) Unit!2263)

(assert (=> d!18613 (= lt!36248 (choose!472 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36052 (zeroValue!2170 newMap!16) lt!35780 (minValue!2170 newMap!16) (defaultEntry!2272 newMap!16)))))

(assert (=> d!18613 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18613 (= (lemmaChangeZeroKeyThenAddPairToListMap!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36052 (zeroValue!2170 newMap!16) lt!35780 (minValue!2170 newMap!16) (defaultEntry!2272 newMap!16)) lt!36248)))

(declare-fun bs!3313 () Bool)

(assert (= bs!3313 d!18613))

(assert (=> bs!3313 m!78167))

(declare-fun m!78663 () Bool)

(assert (=> bs!3313 m!78663))

(declare-fun m!78665 () Bool)

(assert (=> bs!3313 m!78665))

(assert (=> bs!3313 m!78025))

(declare-fun m!78667 () Bool)

(assert (=> bs!3313 m!78667))

(assert (=> bs!3313 m!78025))

(assert (=> b!78203 d!18613))

(declare-fun d!18615 () Bool)

(declare-fun lt!36249 () Bool)

(assert (=> d!18615 (= lt!36249 (select (content!82 (toList!748 lt!35884)) lt!35783))))

(declare-fun e!51340 () Bool)

(assert (=> d!18615 (= lt!36249 e!51340)))

(declare-fun res!41109 () Bool)

(assert (=> d!18615 (=> (not res!41109) (not e!51340))))

(assert (=> d!18615 (= res!41109 ((_ is Cons!1529) (toList!748 lt!35884)))))

(assert (=> d!18615 (= (contains!748 (toList!748 lt!35884) lt!35783) lt!36249)))

(declare-fun b!78529 () Bool)

(declare-fun e!51341 () Bool)

(assert (=> b!78529 (= e!51340 e!51341)))

(declare-fun res!41110 () Bool)

(assert (=> b!78529 (=> res!41110 e!51341)))

(assert (=> b!78529 (= res!41110 (= (h!2117 (toList!748 lt!35884)) lt!35783))))

(declare-fun b!78530 () Bool)

(assert (=> b!78530 (= e!51341 (contains!748 (t!5183 (toList!748 lt!35884)) lt!35783))))

(assert (= (and d!18615 res!41109) b!78529))

(assert (= (and b!78529 (not res!41110)) b!78530))

(declare-fun m!78669 () Bool)

(assert (=> d!18615 m!78669))

(declare-fun m!78671 () Bool)

(assert (=> d!18615 m!78671))

(declare-fun m!78673 () Bool)

(assert (=> b!78530 m!78673))

(assert (=> b!78006 d!18615))

(declare-fun d!18617 () Bool)

(assert (=> d!18617 (= (get!1191 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) from!355) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!77928 d!18617))

(declare-fun d!18619 () Bool)

(declare-fun e!51342 () Bool)

(assert (=> d!18619 e!51342))

(declare-fun res!41111 () Bool)

(assert (=> d!18619 (=> (not res!41111) (not e!51342))))

(declare-fun lt!36253 () ListLongMap!1465)

(assert (=> d!18619 (= res!41111 (contains!745 lt!36253 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun lt!36250 () List!1533)

(assert (=> d!18619 (= lt!36253 (ListLongMap!1466 lt!36250))))

(declare-fun lt!36252 () Unit!2263)

(declare-fun lt!36251 () Unit!2263)

(assert (=> d!18619 (= lt!36252 lt!36251)))

(assert (=> d!18619 (= (getValueByKey!136 lt!36250 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (Some!141 (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!18619 (= lt!36251 (lemmaContainsTupThenGetReturnValue!55 lt!36250 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!18619 (= lt!36250 (insertStrictlySorted!57 (toList!748 e!51148) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!18619 (= (+!109 e!51148 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36253)))

(declare-fun b!78531 () Bool)

(declare-fun res!41112 () Bool)

(assert (=> b!78531 (=> (not res!41112) (not e!51342))))

(assert (=> b!78531 (= res!41112 (= (getValueByKey!136 (toList!748 lt!36253) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (Some!141 (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!78532 () Bool)

(assert (=> b!78532 (= e!51342 (contains!748 (toList!748 lt!36253) (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (= (and d!18619 res!41111) b!78531))

(assert (= (and b!78531 res!41112) b!78532))

(declare-fun m!78675 () Bool)

(assert (=> d!18619 m!78675))

(declare-fun m!78677 () Bool)

(assert (=> d!18619 m!78677))

(declare-fun m!78679 () Bool)

(assert (=> d!18619 m!78679))

(declare-fun m!78681 () Bool)

(assert (=> d!18619 m!78681))

(declare-fun m!78683 () Bool)

(assert (=> b!78531 m!78683))

(declare-fun m!78685 () Bool)

(assert (=> b!78532 m!78685))

(assert (=> bm!7147 d!18619))

(assert (=> b!78210 d!18489))

(declare-fun b!78545 () Bool)

(declare-fun e!51349 () SeekEntryResult!250)

(declare-fun lt!36260 () SeekEntryResult!250)

(assert (=> b!78545 (= e!51349 (Found!250 (index!3136 lt!36260)))))

(declare-fun b!78546 () Bool)

(declare-fun e!51351 () SeekEntryResult!250)

(assert (=> b!78546 (= e!51351 e!51349)))

(declare-fun lt!36261 () (_ BitVec 64))

(assert (=> b!78546 (= lt!36261 (select (arr!1894 (_keys!3932 newMap!16)) (index!3136 lt!36260)))))

(declare-fun c!12069 () Bool)

(assert (=> b!78546 (= c!12069 (= lt!36261 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!78547 () Bool)

(assert (=> b!78547 (= e!51351 Undefined!250)))

(declare-fun b!78548 () Bool)

(declare-fun e!51350 () SeekEntryResult!250)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3974 (_ BitVec 32)) SeekEntryResult!250)

(assert (=> b!78548 (= e!51350 (seekKeyOrZeroReturnVacant!0 (x!11557 lt!36260) (index!3136 lt!36260) (index!3136 lt!36260) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun d!18621 () Bool)

(declare-fun lt!36262 () SeekEntryResult!250)

(assert (=> d!18621 (and (or ((_ is Undefined!250) lt!36262) (not ((_ is Found!250) lt!36262)) (and (bvsge (index!3135 lt!36262) #b00000000000000000000000000000000) (bvslt (index!3135 lt!36262) (size!2135 (_keys!3932 newMap!16))))) (or ((_ is Undefined!250) lt!36262) ((_ is Found!250) lt!36262) (not ((_ is MissingZero!250) lt!36262)) (and (bvsge (index!3134 lt!36262) #b00000000000000000000000000000000) (bvslt (index!3134 lt!36262) (size!2135 (_keys!3932 newMap!16))))) (or ((_ is Undefined!250) lt!36262) ((_ is Found!250) lt!36262) ((_ is MissingZero!250) lt!36262) (not ((_ is MissingVacant!250) lt!36262)) (and (bvsge (index!3137 lt!36262) #b00000000000000000000000000000000) (bvslt (index!3137 lt!36262) (size!2135 (_keys!3932 newMap!16))))) (or ((_ is Undefined!250) lt!36262) (ite ((_ is Found!250) lt!36262) (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36262)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (ite ((_ is MissingZero!250) lt!36262) (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3134 lt!36262)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!250) lt!36262) (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3137 lt!36262)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18621 (= lt!36262 e!51351)))

(declare-fun c!12070 () Bool)

(assert (=> d!18621 (= c!12070 (and ((_ is Intermediate!250) lt!36260) (undefined!1062 lt!36260)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3974 (_ BitVec 32)) SeekEntryResult!250)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!18621 (= lt!36260 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (mask!6268 newMap!16)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(assert (=> d!18621 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18621 (= (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)) lt!36262)))

(declare-fun b!78549 () Bool)

(assert (=> b!78549 (= e!51350 (MissingZero!250 (index!3136 lt!36260)))))

(declare-fun b!78550 () Bool)

(declare-fun c!12068 () Bool)

(assert (=> b!78550 (= c!12068 (= lt!36261 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78550 (= e!51349 e!51350)))

(assert (= (and d!18621 c!12070) b!78547))

(assert (= (and d!18621 (not c!12070)) b!78546))

(assert (= (and b!78546 c!12069) b!78545))

(assert (= (and b!78546 (not c!12069)) b!78550))

(assert (= (and b!78550 c!12068) b!78549))

(assert (= (and b!78550 (not c!12068)) b!78548))

(declare-fun m!78687 () Bool)

(assert (=> b!78546 m!78687))

(assert (=> b!78548 m!77749))

(declare-fun m!78689 () Bool)

(assert (=> b!78548 m!78689))

(assert (=> d!18621 m!77749))

(declare-fun m!78691 () Bool)

(assert (=> d!18621 m!78691))

(declare-fun m!78693 () Bool)

(assert (=> d!18621 m!78693))

(assert (=> d!18621 m!78691))

(assert (=> d!18621 m!77749))

(declare-fun m!78695 () Bool)

(assert (=> d!18621 m!78695))

(assert (=> d!18621 m!78167))

(declare-fun m!78697 () Bool)

(assert (=> d!18621 m!78697))

(declare-fun m!78699 () Bool)

(assert (=> d!18621 m!78699))

(assert (=> b!78197 d!18621))

(declare-fun d!18623 () Bool)

(declare-fun lt!36263 () Bool)

(assert (=> d!18623 (= lt!36263 (select (content!82 (toList!748 lt!35888)) lt!35788))))

(declare-fun e!51352 () Bool)

(assert (=> d!18623 (= lt!36263 e!51352)))

(declare-fun res!41113 () Bool)

(assert (=> d!18623 (=> (not res!41113) (not e!51352))))

(assert (=> d!18623 (= res!41113 ((_ is Cons!1529) (toList!748 lt!35888)))))

(assert (=> d!18623 (= (contains!748 (toList!748 lt!35888) lt!35788) lt!36263)))

(declare-fun b!78551 () Bool)

(declare-fun e!51353 () Bool)

(assert (=> b!78551 (= e!51352 e!51353)))

(declare-fun res!41114 () Bool)

(assert (=> b!78551 (=> res!41114 e!51353)))

(assert (=> b!78551 (= res!41114 (= (h!2117 (toList!748 lt!35888)) lt!35788))))

(declare-fun b!78552 () Bool)

(assert (=> b!78552 (= e!51353 (contains!748 (t!5183 (toList!748 lt!35888)) lt!35788))))

(assert (= (and d!18623 res!41113) b!78551))

(assert (= (and b!78551 (not res!41114)) b!78552))

(declare-fun m!78701 () Bool)

(assert (=> d!18623 m!78701))

(declare-fun m!78703 () Bool)

(assert (=> d!18623 m!78703))

(declare-fun m!78705 () Bool)

(assert (=> b!78552 m!78705))

(assert (=> b!78008 d!18623))

(assert (=> bm!7148 d!18621))

(declare-fun d!18625 () Bool)

(assert (=> d!18625 (= (map!1179 (_2!1104 lt!36056)) (getCurrentListMap!435 (_keys!3932 (_2!1104 lt!36056)) (_values!2255 (_2!1104 lt!36056)) (mask!6268 (_2!1104 lt!36056)) (extraKeys!2123 (_2!1104 lt!36056)) (zeroValue!2170 (_2!1104 lt!36056)) (minValue!2170 (_2!1104 lt!36056)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1104 lt!36056))))))

(declare-fun bs!3314 () Bool)

(assert (= bs!3314 d!18625))

(declare-fun m!78707 () Bool)

(assert (=> bs!3314 m!78707))

(assert (=> bm!7153 d!18625))

(declare-fun d!18627 () Bool)

(declare-fun e!51355 () Bool)

(assert (=> d!18627 e!51355))

(declare-fun res!41115 () Bool)

(assert (=> d!18627 (=> res!41115 e!51355)))

(declare-fun lt!36264 () Bool)

(assert (=> d!18627 (= res!41115 (not lt!36264))))

(declare-fun lt!36265 () Bool)

(assert (=> d!18627 (= lt!36264 lt!36265)))

(declare-fun lt!36266 () Unit!2263)

(declare-fun e!51354 () Unit!2263)

(assert (=> d!18627 (= lt!36266 e!51354)))

(declare-fun c!12071 () Bool)

(assert (=> d!18627 (= c!12071 lt!36265)))

(assert (=> d!18627 (= lt!36265 (containsKey!140 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!18627 (= (contains!745 call!7149 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) lt!36264)))

(declare-fun b!78553 () Bool)

(declare-fun lt!36267 () Unit!2263)

(assert (=> b!78553 (= e!51354 lt!36267)))

(assert (=> b!78553 (= lt!36267 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!78553 (isDefined!90 (getValueByKey!136 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!78554 () Bool)

(declare-fun Unit!2284 () Unit!2263)

(assert (=> b!78554 (= e!51354 Unit!2284)))

(declare-fun b!78555 () Bool)

(assert (=> b!78555 (= e!51355 (isDefined!90 (getValueByKey!136 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (= (and d!18627 c!12071) b!78553))

(assert (= (and d!18627 (not c!12071)) b!78554))

(assert (= (and d!18627 (not res!41115)) b!78555))

(assert (=> d!18627 m!77749))

(declare-fun m!78709 () Bool)

(assert (=> d!18627 m!78709))

(assert (=> b!78553 m!77749))

(declare-fun m!78711 () Bool)

(assert (=> b!78553 m!78711))

(assert (=> b!78553 m!77749))

(declare-fun m!78713 () Bool)

(assert (=> b!78553 m!78713))

(assert (=> b!78553 m!78713))

(declare-fun m!78715 () Bool)

(assert (=> b!78553 m!78715))

(assert (=> b!78555 m!77749))

(assert (=> b!78555 m!78713))

(assert (=> b!78555 m!78713))

(assert (=> b!78555 m!78715))

(assert (=> b!78182 d!18627))

(declare-fun d!18629 () Bool)

(declare-fun e!51357 () Bool)

(assert (=> d!18629 e!51357))

(declare-fun res!41116 () Bool)

(assert (=> d!18629 (=> res!41116 e!51357)))

(declare-fun lt!36268 () Bool)

(assert (=> d!18629 (= res!41116 (not lt!36268))))

(declare-fun lt!36269 () Bool)

(assert (=> d!18629 (= lt!36268 lt!36269)))

(declare-fun lt!36270 () Unit!2263)

(declare-fun e!51356 () Unit!2263)

(assert (=> d!18629 (= lt!36270 e!51356)))

(declare-fun c!12072 () Bool)

(assert (=> d!18629 (= c!12072 lt!36269)))

(assert (=> d!18629 (= lt!36269 (containsKey!140 (toList!748 lt!35903) (_1!1105 lt!35783)))))

(assert (=> d!18629 (= (contains!745 lt!35903 (_1!1105 lt!35783)) lt!36268)))

(declare-fun b!78556 () Bool)

(declare-fun lt!36271 () Unit!2263)

(assert (=> b!78556 (= e!51356 lt!36271)))

(assert (=> b!78556 (= lt!36271 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35903) (_1!1105 lt!35783)))))

(assert (=> b!78556 (isDefined!90 (getValueByKey!136 (toList!748 lt!35903) (_1!1105 lt!35783)))))

(declare-fun b!78557 () Bool)

(declare-fun Unit!2285 () Unit!2263)

(assert (=> b!78557 (= e!51356 Unit!2285)))

(declare-fun b!78558 () Bool)

(assert (=> b!78558 (= e!51357 (isDefined!90 (getValueByKey!136 (toList!748 lt!35903) (_1!1105 lt!35783))))))

(assert (= (and d!18629 c!12072) b!78556))

(assert (= (and d!18629 (not c!12072)) b!78557))

(assert (= (and d!18629 (not res!41116)) b!78558))

(declare-fun m!78717 () Bool)

(assert (=> d!18629 m!78717))

(declare-fun m!78719 () Bool)

(assert (=> b!78556 m!78719))

(assert (=> b!78556 m!77987))

(assert (=> b!78556 m!77987))

(declare-fun m!78721 () Bool)

(assert (=> b!78556 m!78721))

(assert (=> b!78558 m!77987))

(assert (=> b!78558 m!77987))

(assert (=> b!78558 m!78721))

(assert (=> d!18441 d!18629))

(declare-fun b!78560 () Bool)

(declare-fun e!51358 () Option!142)

(declare-fun e!51359 () Option!142)

(assert (=> b!78560 (= e!51358 e!51359)))

(declare-fun c!12074 () Bool)

(assert (=> b!78560 (= c!12074 (and ((_ is Cons!1529) lt!35900) (not (= (_1!1105 (h!2117 lt!35900)) (_1!1105 lt!35783)))))))

(declare-fun b!78559 () Bool)

(assert (=> b!78559 (= e!51358 (Some!141 (_2!1105 (h!2117 lt!35900))))))

(declare-fun b!78561 () Bool)

(assert (=> b!78561 (= e!51359 (getValueByKey!136 (t!5183 lt!35900) (_1!1105 lt!35783)))))

(declare-fun b!78562 () Bool)

(assert (=> b!78562 (= e!51359 None!140)))

(declare-fun d!18631 () Bool)

(declare-fun c!12073 () Bool)

(assert (=> d!18631 (= c!12073 (and ((_ is Cons!1529) lt!35900) (= (_1!1105 (h!2117 lt!35900)) (_1!1105 lt!35783))))))

(assert (=> d!18631 (= (getValueByKey!136 lt!35900 (_1!1105 lt!35783)) e!51358)))

(assert (= (and d!18631 c!12073) b!78559))

(assert (= (and d!18631 (not c!12073)) b!78560))

(assert (= (and b!78560 c!12074) b!78561))

(assert (= (and b!78560 (not c!12074)) b!78562))

(declare-fun m!78723 () Bool)

(assert (=> b!78561 m!78723))

(assert (=> d!18441 d!18631))

(declare-fun d!18633 () Bool)

(assert (=> d!18633 (= (getValueByKey!136 lt!35900 (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783)))))

(declare-fun lt!36272 () Unit!2263)

(assert (=> d!18633 (= lt!36272 (choose!468 lt!35900 (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(declare-fun e!51360 () Bool)

(assert (=> d!18633 e!51360))

(declare-fun res!41117 () Bool)

(assert (=> d!18633 (=> (not res!41117) (not e!51360))))

(assert (=> d!18633 (= res!41117 (isStrictlySorted!290 lt!35900))))

(assert (=> d!18633 (= (lemmaContainsTupThenGetReturnValue!55 lt!35900 (_1!1105 lt!35783) (_2!1105 lt!35783)) lt!36272)))

(declare-fun b!78563 () Bool)

(declare-fun res!41118 () Bool)

(assert (=> b!78563 (=> (not res!41118) (not e!51360))))

(assert (=> b!78563 (= res!41118 (containsKey!140 lt!35900 (_1!1105 lt!35783)))))

(declare-fun b!78564 () Bool)

(assert (=> b!78564 (= e!51360 (contains!748 lt!35900 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(assert (= (and d!18633 res!41117) b!78563))

(assert (= (and b!78563 res!41118) b!78564))

(assert (=> d!18633 m!77981))

(declare-fun m!78725 () Bool)

(assert (=> d!18633 m!78725))

(declare-fun m!78727 () Bool)

(assert (=> d!18633 m!78727))

(declare-fun m!78729 () Bool)

(assert (=> b!78563 m!78729))

(declare-fun m!78731 () Bool)

(assert (=> b!78564 m!78731))

(assert (=> d!18441 d!18633))

(declare-fun c!12075 () Bool)

(declare-fun b!78565 () Bool)

(assert (=> b!78565 (= c!12075 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35777 lt!35784))) (bvsgt (_1!1105 (h!2117 (toList!748 (+!109 lt!35777 lt!35784)))) (_1!1105 lt!35783))))))

(declare-fun e!51364 () List!1533)

(declare-fun e!51361 () List!1533)

(assert (=> b!78565 (= e!51364 e!51361)))

(declare-fun e!51363 () List!1533)

(declare-fun c!12076 () Bool)

(declare-fun call!7210 () List!1533)

(declare-fun bm!7205 () Bool)

(assert (=> bm!7205 (= call!7210 ($colon$colon!68 e!51363 (ite c!12076 (h!2117 (toList!748 (+!109 lt!35777 lt!35784))) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783)))))))

(declare-fun c!12077 () Bool)

(assert (=> bm!7205 (= c!12077 c!12076)))

(declare-fun d!18635 () Bool)

(declare-fun e!51365 () Bool)

(assert (=> d!18635 e!51365))

(declare-fun res!41119 () Bool)

(assert (=> d!18635 (=> (not res!41119) (not e!51365))))

(declare-fun lt!36273 () List!1533)

(assert (=> d!18635 (= res!41119 (isStrictlySorted!290 lt!36273))))

(declare-fun e!51362 () List!1533)

(assert (=> d!18635 (= lt!36273 e!51362)))

(assert (=> d!18635 (= c!12076 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35777 lt!35784))) (bvslt (_1!1105 (h!2117 (toList!748 (+!109 lt!35777 lt!35784)))) (_1!1105 lt!35783))))))

(assert (=> d!18635 (isStrictlySorted!290 (toList!748 (+!109 lt!35777 lt!35784)))))

(assert (=> d!18635 (= (insertStrictlySorted!57 (toList!748 (+!109 lt!35777 lt!35784)) (_1!1105 lt!35783) (_2!1105 lt!35783)) lt!36273)))

(declare-fun c!12078 () Bool)

(declare-fun b!78566 () Bool)

(assert (=> b!78566 (= e!51363 (ite c!12078 (t!5183 (toList!748 (+!109 lt!35777 lt!35784))) (ite c!12075 (Cons!1529 (h!2117 (toList!748 (+!109 lt!35777 lt!35784))) (t!5183 (toList!748 (+!109 lt!35777 lt!35784)))) Nil!1530)))))

(declare-fun bm!7206 () Bool)

(declare-fun call!7209 () List!1533)

(assert (=> bm!7206 (= call!7209 call!7210)))

(declare-fun b!78567 () Bool)

(assert (=> b!78567 (= e!51362 call!7210)))

(declare-fun b!78568 () Bool)

(declare-fun res!41120 () Bool)

(assert (=> b!78568 (=> (not res!41120) (not e!51365))))

(assert (=> b!78568 (= res!41120 (containsKey!140 lt!36273 (_1!1105 lt!35783)))))

(declare-fun b!78569 () Bool)

(declare-fun call!7208 () List!1533)

(assert (=> b!78569 (= e!51361 call!7208)))

(declare-fun b!78570 () Bool)

(assert (=> b!78570 (= e!51364 call!7209)))

(declare-fun b!78571 () Bool)

(assert (=> b!78571 (= e!51362 e!51364)))

(assert (=> b!78571 (= c!12078 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35777 lt!35784))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35777 lt!35784)))) (_1!1105 lt!35783))))))

(declare-fun bm!7207 () Bool)

(assert (=> bm!7207 (= call!7208 call!7209)))

(declare-fun b!78572 () Bool)

(assert (=> b!78572 (= e!51363 (insertStrictlySorted!57 (t!5183 (toList!748 (+!109 lt!35777 lt!35784))) (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(declare-fun b!78573 () Bool)

(assert (=> b!78573 (= e!51365 (contains!748 lt!36273 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!78574 () Bool)

(assert (=> b!78574 (= e!51361 call!7208)))

(assert (= (and d!18635 c!12076) b!78567))

(assert (= (and d!18635 (not c!12076)) b!78571))

(assert (= (and b!78571 c!12078) b!78570))

(assert (= (and b!78571 (not c!12078)) b!78565))

(assert (= (and b!78565 c!12075) b!78574))

(assert (= (and b!78565 (not c!12075)) b!78569))

(assert (= (or b!78574 b!78569) bm!7207))

(assert (= (or b!78570 bm!7207) bm!7206))

(assert (= (or b!78567 bm!7206) bm!7205))

(assert (= (and bm!7205 c!12077) b!78572))

(assert (= (and bm!7205 (not c!12077)) b!78566))

(assert (= (and d!18635 res!41119) b!78568))

(assert (= (and b!78568 res!41120) b!78573))

(declare-fun m!78733 () Bool)

(assert (=> b!78568 m!78733))

(declare-fun m!78735 () Bool)

(assert (=> b!78573 m!78735))

(declare-fun m!78737 () Bool)

(assert (=> d!18635 m!78737))

(declare-fun m!78739 () Bool)

(assert (=> d!18635 m!78739))

(declare-fun m!78741 () Bool)

(assert (=> bm!7205 m!78741))

(declare-fun m!78743 () Bool)

(assert (=> b!78572 m!78743))

(assert (=> d!18441 d!18635))

(declare-fun call!7217 () ListLongMap!1465)

(declare-fun b!78575 () Bool)

(declare-fun e!51369 () ListLongMap!1465)

(assert (=> b!78575 (= e!51369 (+!109 call!7217 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))))

(declare-fun b!78576 () Bool)

(declare-fun res!41124 () Bool)

(declare-fun e!51378 () Bool)

(assert (=> b!78576 (=> (not res!41124) (not e!51378))))

(declare-fun e!51376 () Bool)

(assert (=> b!78576 (= res!41124 e!51376)))

(declare-fun c!12084 () Bool)

(assert (=> b!78576 (= c!12084 (not (= (bvand (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78577 () Bool)

(declare-fun e!51371 () ListLongMap!1465)

(declare-fun call!7216 () ListLongMap!1465)

(assert (=> b!78577 (= e!51371 call!7216)))

(declare-fun bm!7208 () Bool)

(declare-fun call!7215 () ListLongMap!1465)

(declare-fun call!7213 () ListLongMap!1465)

(assert (=> bm!7208 (= call!7215 call!7213)))

(declare-fun lt!36286 () ListLongMap!1465)

(declare-fun e!51375 () Bool)

(declare-fun b!78578 () Bool)

(assert (=> b!78578 (= e!51375 (= (apply!79 lt!36286 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 (ite c!11979 (_values!2255 newMap!16) lt!36057)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78578 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (ite c!11979 (_values!2255 newMap!16) lt!36057))))))

(assert (=> b!78578 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78579 () Bool)

(declare-fun e!51372 () Bool)

(assert (=> b!78579 (= e!51376 e!51372)))

(declare-fun res!41125 () Bool)

(declare-fun call!7212 () Bool)

(assert (=> b!78579 (= res!41125 call!7212)))

(assert (=> b!78579 (=> (not res!41125) (not e!51372))))

(declare-fun bm!7209 () Bool)

(declare-fun call!7214 () Bool)

(assert (=> bm!7209 (= call!7214 (contains!745 lt!36286 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78581 () Bool)

(declare-fun e!51370 () Bool)

(assert (=> b!78581 (= e!51370 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78582 () Bool)

(declare-fun e!51377 () Unit!2263)

(declare-fun Unit!2286 () Unit!2263)

(assert (=> b!78582 (= e!51377 Unit!2286)))

(declare-fun bm!7210 () Bool)

(assert (=> bm!7210 (= call!7213 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36057) (mask!6268 newMap!16) (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78583 () Bool)

(declare-fun e!51367 () ListLongMap!1465)

(declare-fun call!7211 () ListLongMap!1465)

(assert (=> b!78583 (= e!51367 call!7211)))

(declare-fun b!78584 () Bool)

(declare-fun e!51366 () Bool)

(assert (=> b!78584 (= e!51378 e!51366)))

(declare-fun c!12080 () Bool)

(assert (=> b!78584 (= c!12080 (not (= (bvand (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78585 () Bool)

(declare-fun lt!36288 () Unit!2263)

(assert (=> b!78585 (= e!51377 lt!36288)))

(declare-fun lt!36287 () ListLongMap!1465)

(assert (=> b!78585 (= lt!36287 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36057) (mask!6268 newMap!16) (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36293 () (_ BitVec 64))

(assert (=> b!78585 (= lt!36293 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36284 () (_ BitVec 64))

(assert (=> b!78585 (= lt!36284 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36278 () Unit!2263)

(assert (=> b!78585 (= lt!36278 (addStillContains!55 lt!36287 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) lt!36284))))

(assert (=> b!78585 (contains!745 (+!109 lt!36287 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) lt!36284)))

(declare-fun lt!36283 () Unit!2263)

(assert (=> b!78585 (= lt!36283 lt!36278)))

(declare-fun lt!36294 () ListLongMap!1465)

(assert (=> b!78585 (= lt!36294 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36057) (mask!6268 newMap!16) (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36295 () (_ BitVec 64))

(assert (=> b!78585 (= lt!36295 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36291 () (_ BitVec 64))

(assert (=> b!78585 (= lt!36291 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36282 () Unit!2263)

(assert (=> b!78585 (= lt!36282 (addApplyDifferent!55 lt!36294 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) lt!36291))))

(assert (=> b!78585 (= (apply!79 (+!109 lt!36294 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) lt!36291) (apply!79 lt!36294 lt!36291))))

(declare-fun lt!36274 () Unit!2263)

(assert (=> b!78585 (= lt!36274 lt!36282)))

(declare-fun lt!36290 () ListLongMap!1465)

(assert (=> b!78585 (= lt!36290 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36057) (mask!6268 newMap!16) (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36276 () (_ BitVec 64))

(assert (=> b!78585 (= lt!36276 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36280 () (_ BitVec 64))

(assert (=> b!78585 (= lt!36280 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36292 () Unit!2263)

(assert (=> b!78585 (= lt!36292 (addApplyDifferent!55 lt!36290 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) lt!36280))))

(assert (=> b!78585 (= (apply!79 (+!109 lt!36290 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) lt!36280) (apply!79 lt!36290 lt!36280))))

(declare-fun lt!36279 () Unit!2263)

(assert (=> b!78585 (= lt!36279 lt!36292)))

(declare-fun lt!36275 () ListLongMap!1465)

(assert (=> b!78585 (= lt!36275 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36057) (mask!6268 newMap!16) (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36277 () (_ BitVec 64))

(assert (=> b!78585 (= lt!36277 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36289 () (_ BitVec 64))

(assert (=> b!78585 (= lt!36289 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78585 (= lt!36288 (addApplyDifferent!55 lt!36275 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) lt!36289))))

(assert (=> b!78585 (= (apply!79 (+!109 lt!36275 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) lt!36289) (apply!79 lt!36275 lt!36289))))

(declare-fun b!78586 () Bool)

(declare-fun e!51368 () Bool)

(assert (=> b!78586 (= e!51368 e!51375)))

(declare-fun res!41123 () Bool)

(assert (=> b!78586 (=> (not res!41123) (not e!51375))))

(assert (=> b!78586 (= res!41123 (contains!745 lt!36286 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78586 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78587 () Bool)

(assert (=> b!78587 (= e!51369 e!51371)))

(declare-fun c!12081 () Bool)

(assert (=> b!78587 (= c!12081 (and (not (= (bvand (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7211 () Bool)

(assert (=> bm!7211 (= call!7216 call!7217)))

(declare-fun b!78588 () Bool)

(declare-fun res!41121 () Bool)

(assert (=> b!78588 (=> (not res!41121) (not e!51378))))

(assert (=> b!78588 (= res!41121 e!51368)))

(declare-fun res!41122 () Bool)

(assert (=> b!78588 (=> res!41122 e!51368)))

(declare-fun e!51373 () Bool)

(assert (=> b!78588 (= res!41122 (not e!51373))))

(declare-fun res!41126 () Bool)

(assert (=> b!78588 (=> (not res!41126) (not e!51373))))

(assert (=> b!78588 (= res!41126 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78589 () Bool)

(declare-fun c!12082 () Bool)

(assert (=> b!78589 (= c!12082 (and (not (= (bvand (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78589 (= e!51371 e!51367)))

(declare-fun b!78590 () Bool)

(assert (=> b!78590 (= e!51373 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78591 () Bool)

(assert (=> b!78591 (= e!51367 call!7216)))

(declare-fun c!12079 () Bool)

(declare-fun bm!7212 () Bool)

(assert (=> bm!7212 (= call!7217 (+!109 (ite c!12079 call!7213 (ite c!12081 call!7215 call!7211)) (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(declare-fun bm!7213 () Bool)

(assert (=> bm!7213 (= call!7212 (contains!745 lt!36286 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78592 () Bool)

(assert (=> b!78592 (= e!51376 (not call!7212))))

(declare-fun b!78580 () Bool)

(declare-fun e!51374 () Bool)

(assert (=> b!78580 (= e!51366 e!51374)))

(declare-fun res!41128 () Bool)

(assert (=> b!78580 (= res!41128 call!7214)))

(assert (=> b!78580 (=> (not res!41128) (not e!51374))))

(declare-fun d!18637 () Bool)

(assert (=> d!18637 e!51378))

(declare-fun res!41129 () Bool)

(assert (=> d!18637 (=> (not res!41129) (not e!51378))))

(assert (=> d!18637 (= res!41129 (or (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))))

(declare-fun lt!36285 () ListLongMap!1465)

(assert (=> d!18637 (= lt!36286 lt!36285)))

(declare-fun lt!36281 () Unit!2263)

(assert (=> d!18637 (= lt!36281 e!51377)))

(declare-fun c!12083 () Bool)

(assert (=> d!18637 (= c!12083 e!51370)))

(declare-fun res!41127 () Bool)

(assert (=> d!18637 (=> (not res!41127) (not e!51370))))

(assert (=> d!18637 (= res!41127 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18637 (= lt!36285 e!51369)))

(assert (=> d!18637 (= c!12079 (and (not (= (bvand (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18637 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18637 (= (getCurrentListMap!435 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36057) (mask!6268 newMap!16) (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36286)))

(declare-fun bm!7214 () Bool)

(assert (=> bm!7214 (= call!7211 call!7215)))

(declare-fun b!78593 () Bool)

(assert (=> b!78593 (= e!51374 (= (apply!79 lt!36286 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))

(declare-fun b!78594 () Bool)

(assert (=> b!78594 (= e!51366 (not call!7214))))

(declare-fun b!78595 () Bool)

(assert (=> b!78595 (= e!51372 (= (apply!79 lt!36286 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))))

(assert (= (and d!18637 c!12079) b!78575))

(assert (= (and d!18637 (not c!12079)) b!78587))

(assert (= (and b!78587 c!12081) b!78577))

(assert (= (and b!78587 (not c!12081)) b!78589))

(assert (= (and b!78589 c!12082) b!78591))

(assert (= (and b!78589 (not c!12082)) b!78583))

(assert (= (or b!78591 b!78583) bm!7214))

(assert (= (or b!78577 bm!7214) bm!7208))

(assert (= (or b!78577 b!78591) bm!7211))

(assert (= (or b!78575 bm!7208) bm!7210))

(assert (= (or b!78575 bm!7211) bm!7212))

(assert (= (and d!18637 res!41127) b!78581))

(assert (= (and d!18637 c!12083) b!78585))

(assert (= (and d!18637 (not c!12083)) b!78582))

(assert (= (and d!18637 res!41129) b!78588))

(assert (= (and b!78588 res!41126) b!78590))

(assert (= (and b!78588 (not res!41122)) b!78586))

(assert (= (and b!78586 res!41123) b!78578))

(assert (= (and b!78588 res!41121) b!78576))

(assert (= (and b!78576 c!12084) b!78579))

(assert (= (and b!78576 (not c!12084)) b!78592))

(assert (= (and b!78579 res!41125) b!78595))

(assert (= (or b!78579 b!78592) bm!7213))

(assert (= (and b!78576 res!41124) b!78584))

(assert (= (and b!78584 c!12080) b!78580))

(assert (= (and b!78584 (not c!12080)) b!78594))

(assert (= (and b!78580 res!41128) b!78593))

(assert (= (or b!78580 b!78594) bm!7209))

(declare-fun b_lambda!3519 () Bool)

(assert (=> (not b_lambda!3519) (not b!78578)))

(assert (=> b!78578 t!5191))

(declare-fun b_and!4825 () Bool)

(assert (= b_and!4821 (and (=> t!5191 result!2829) b_and!4825)))

(assert (=> b!78578 t!5193))

(declare-fun b_and!4827 () Bool)

(assert (= b_and!4823 (and (=> t!5193 result!2831) b_and!4827)))

(declare-fun m!78745 () Bool)

(assert (=> bm!7213 m!78745))

(declare-fun m!78747 () Bool)

(assert (=> bm!7210 m!78747))

(declare-fun m!78749 () Bool)

(assert (=> bm!7209 m!78749))

(declare-fun m!78751 () Bool)

(assert (=> b!78585 m!78751))

(declare-fun m!78753 () Bool)

(assert (=> b!78585 m!78753))

(declare-fun m!78755 () Bool)

(assert (=> b!78585 m!78755))

(declare-fun m!78757 () Bool)

(assert (=> b!78585 m!78757))

(declare-fun m!78759 () Bool)

(assert (=> b!78585 m!78759))

(declare-fun m!78761 () Bool)

(assert (=> b!78585 m!78761))

(declare-fun m!78763 () Bool)

(assert (=> b!78585 m!78763))

(assert (=> b!78585 m!78755))

(declare-fun m!78765 () Bool)

(assert (=> b!78585 m!78765))

(declare-fun m!78767 () Bool)

(assert (=> b!78585 m!78767))

(assert (=> b!78585 m!78153))

(assert (=> b!78585 m!78767))

(declare-fun m!78769 () Bool)

(assert (=> b!78585 m!78769))

(assert (=> b!78585 m!78753))

(declare-fun m!78771 () Bool)

(assert (=> b!78585 m!78771))

(declare-fun m!78773 () Bool)

(assert (=> b!78585 m!78773))

(assert (=> b!78585 m!78773))

(declare-fun m!78775 () Bool)

(assert (=> b!78585 m!78775))

(declare-fun m!78777 () Bool)

(assert (=> b!78585 m!78777))

(assert (=> b!78585 m!78747))

(declare-fun m!78779 () Bool)

(assert (=> b!78585 m!78779))

(assert (=> d!18637 m!78167))

(declare-fun m!78781 () Bool)

(assert (=> b!78578 m!78781))

(assert (=> b!78578 m!78153))

(declare-fun m!78783 () Bool)

(assert (=> b!78578 m!78783))

(assert (=> b!78578 m!78781))

(assert (=> b!78578 m!78273))

(declare-fun m!78785 () Bool)

(assert (=> b!78578 m!78785))

(assert (=> b!78578 m!78273))

(assert (=> b!78578 m!78153))

(declare-fun m!78787 () Bool)

(assert (=> bm!7212 m!78787))

(declare-fun m!78789 () Bool)

(assert (=> b!78575 m!78789))

(assert (=> b!78581 m!78153))

(assert (=> b!78581 m!78153))

(assert (=> b!78581 m!78155))

(assert (=> b!78586 m!78153))

(assert (=> b!78586 m!78153))

(declare-fun m!78791 () Bool)

(assert (=> b!78586 m!78791))

(declare-fun m!78793 () Bool)

(assert (=> b!78595 m!78793))

(declare-fun m!78795 () Bool)

(assert (=> b!78593 m!78795))

(assert (=> b!78590 m!78153))

(assert (=> b!78590 m!78153))

(assert (=> b!78590 m!78155))

(assert (=> bm!7158 d!18637))

(declare-fun b!78597 () Bool)

(declare-fun e!51379 () Option!142)

(declare-fun e!51380 () Option!142)

(assert (=> b!78597 (= e!51379 e!51380)))

(declare-fun c!12086 () Bool)

(assert (=> b!78597 (= c!12086 (and ((_ is Cons!1529) (toList!748 lt!35911)) (not (= (_1!1105 (h!2117 (toList!748 lt!35911))) (_1!1105 lt!35788)))))))

(declare-fun b!78596 () Bool)

(assert (=> b!78596 (= e!51379 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35911)))))))

(declare-fun b!78598 () Bool)

(assert (=> b!78598 (= e!51380 (getValueByKey!136 (t!5183 (toList!748 lt!35911)) (_1!1105 lt!35788)))))

(declare-fun b!78599 () Bool)

(assert (=> b!78599 (= e!51380 None!140)))

(declare-fun d!18639 () Bool)

(declare-fun c!12085 () Bool)

(assert (=> d!18639 (= c!12085 (and ((_ is Cons!1529) (toList!748 lt!35911)) (= (_1!1105 (h!2117 (toList!748 lt!35911))) (_1!1105 lt!35788))))))

(assert (=> d!18639 (= (getValueByKey!136 (toList!748 lt!35911) (_1!1105 lt!35788)) e!51379)))

(assert (= (and d!18639 c!12085) b!78596))

(assert (= (and d!18639 (not c!12085)) b!78597))

(assert (= (and b!78597 c!12086) b!78598))

(assert (= (and b!78597 (not c!12086)) b!78599))

(declare-fun m!78797 () Bool)

(assert (=> b!78598 m!78797))

(assert (=> b!78017 d!18639))

(declare-fun d!18641 () Bool)

(declare-fun e!51381 () Bool)

(assert (=> d!18641 e!51381))

(declare-fun res!41130 () Bool)

(assert (=> d!18641 (=> (not res!41130) (not e!51381))))

(declare-fun lt!36299 () ListLongMap!1465)

(assert (=> d!18641 (= res!41130 (contains!745 lt!36299 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36296 () List!1533)

(assert (=> d!18641 (= lt!36299 (ListLongMap!1466 lt!36296))))

(declare-fun lt!36298 () Unit!2263)

(declare-fun lt!36297 () Unit!2263)

(assert (=> d!18641 (= lt!36298 lt!36297)))

(assert (=> d!18641 (= (getValueByKey!136 lt!36296 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18641 (= lt!36297 (lemmaContainsTupThenGetReturnValue!55 lt!36296 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18641 (= lt!36296 (insertStrictlySorted!57 (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18641 (= (+!109 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36299)))

(declare-fun b!78600 () Bool)

(declare-fun res!41131 () Bool)

(assert (=> b!78600 (=> (not res!41131) (not e!51381))))

(assert (=> b!78600 (= res!41131 (= (getValueByKey!136 (toList!748 lt!36299) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!78601 () Bool)

(assert (=> b!78601 (= e!51381 (contains!748 (toList!748 lt!36299) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18641 res!41130) b!78600))

(assert (= (and b!78600 res!41131) b!78601))

(declare-fun m!78799 () Bool)

(assert (=> d!18641 m!78799))

(declare-fun m!78801 () Bool)

(assert (=> d!18641 m!78801))

(declare-fun m!78803 () Bool)

(assert (=> d!18641 m!78803))

(declare-fun m!78805 () Bool)

(assert (=> d!18641 m!78805))

(declare-fun m!78807 () Bool)

(assert (=> b!78600 m!78807))

(declare-fun m!78809 () Bool)

(assert (=> b!78601 m!78809))

(assert (=> d!18433 d!18641))

(declare-fun d!18643 () Bool)

(declare-fun e!51382 () Bool)

(assert (=> d!18643 e!51382))

(declare-fun res!41132 () Bool)

(assert (=> d!18643 (=> (not res!41132) (not e!51382))))

(declare-fun lt!36303 () ListLongMap!1465)

(assert (=> d!18643 (= res!41132 (contains!745 lt!36303 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36300 () List!1533)

(assert (=> d!18643 (= lt!36303 (ListLongMap!1466 lt!36300))))

(declare-fun lt!36302 () Unit!2263)

(declare-fun lt!36301 () Unit!2263)

(assert (=> d!18643 (= lt!36302 lt!36301)))

(assert (=> d!18643 (= (getValueByKey!136 lt!36300 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18643 (= lt!36301 (lemmaContainsTupThenGetReturnValue!55 lt!36300 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18643 (= lt!36300 (insertStrictlySorted!57 (toList!748 lt!35777) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18643 (= (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36303)))

(declare-fun b!78602 () Bool)

(declare-fun res!41133 () Bool)

(assert (=> b!78602 (=> (not res!41133) (not e!51382))))

(assert (=> b!78602 (= res!41133 (= (getValueByKey!136 (toList!748 lt!36303) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!78603 () Bool)

(assert (=> b!78603 (= e!51382 (contains!748 (toList!748 lt!36303) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18643 res!41132) b!78602))

(assert (= (and b!78602 res!41133) b!78603))

(declare-fun m!78811 () Bool)

(assert (=> d!18643 m!78811))

(declare-fun m!78813 () Bool)

(assert (=> d!18643 m!78813))

(declare-fun m!78815 () Bool)

(assert (=> d!18643 m!78815))

(declare-fun m!78817 () Bool)

(assert (=> d!18643 m!78817))

(declare-fun m!78819 () Bool)

(assert (=> b!78602 m!78819))

(declare-fun m!78821 () Bool)

(assert (=> b!78603 m!78821))

(assert (=> d!18433 d!18643))

(declare-fun d!18645 () Bool)

(assert (=> d!18645 (= (+!109 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (+!109 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (=> d!18645 true))

(declare-fun _$28!131 () Unit!2263)

(assert (=> d!18645 (= (choose!462 lt!35777 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))) _$28!131)))

(declare-fun bs!3315 () Bool)

(assert (= bs!3315 d!18645))

(assert (=> bs!3315 m!77947))

(assert (=> bs!3315 m!77947))

(assert (=> bs!3315 m!77951))

(assert (=> bs!3315 m!77949))

(assert (=> bs!3315 m!77949))

(assert (=> bs!3315 m!77953))

(assert (=> d!18433 d!18645))

(declare-fun d!18647 () Bool)

(declare-fun e!51383 () Bool)

(assert (=> d!18647 e!51383))

(declare-fun res!41134 () Bool)

(assert (=> d!18647 (=> (not res!41134) (not e!51383))))

(declare-fun lt!36307 () ListLongMap!1465)

(assert (=> d!18647 (= res!41134 (contains!745 lt!36307 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!36304 () List!1533)

(assert (=> d!18647 (= lt!36307 (ListLongMap!1466 lt!36304))))

(declare-fun lt!36306 () Unit!2263)

(declare-fun lt!36305 () Unit!2263)

(assert (=> d!18647 (= lt!36306 lt!36305)))

(assert (=> d!18647 (= (getValueByKey!136 lt!36304 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18647 (= lt!36305 (lemmaContainsTupThenGetReturnValue!55 lt!36304 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18647 (= lt!36304 (insertStrictlySorted!57 (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18647 (= (+!109 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!36307)))

(declare-fun b!78604 () Bool)

(declare-fun res!41135 () Bool)

(assert (=> b!78604 (=> (not res!41135) (not e!51383))))

(assert (=> b!78604 (= res!41135 (= (getValueByKey!136 (toList!748 lt!36307) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!78605 () Bool)

(assert (=> b!78605 (= e!51383 (contains!748 (toList!748 lt!36307) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!18647 res!41134) b!78604))

(assert (= (and b!78604 res!41135) b!78605))

(declare-fun m!78823 () Bool)

(assert (=> d!18647 m!78823))

(declare-fun m!78825 () Bool)

(assert (=> d!18647 m!78825))

(declare-fun m!78827 () Bool)

(assert (=> d!18647 m!78827))

(declare-fun m!78829 () Bool)

(assert (=> d!18647 m!78829))

(declare-fun m!78831 () Bool)

(assert (=> b!78604 m!78831))

(declare-fun m!78833 () Bool)

(assert (=> b!78605 m!78833))

(assert (=> d!18433 d!18647))

(declare-fun d!18649 () Bool)

(declare-fun e!51384 () Bool)

(assert (=> d!18649 e!51384))

(declare-fun res!41136 () Bool)

(assert (=> d!18649 (=> (not res!41136) (not e!51384))))

(declare-fun lt!36311 () ListLongMap!1465)

(assert (=> d!18649 (= res!41136 (contains!745 lt!36311 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!36308 () List!1533)

(assert (=> d!18649 (= lt!36311 (ListLongMap!1466 lt!36308))))

(declare-fun lt!36310 () Unit!2263)

(declare-fun lt!36309 () Unit!2263)

(assert (=> d!18649 (= lt!36310 lt!36309)))

(assert (=> d!18649 (= (getValueByKey!136 lt!36308 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18649 (= lt!36309 (lemmaContainsTupThenGetReturnValue!55 lt!36308 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18649 (= lt!36308 (insertStrictlySorted!57 (toList!748 lt!35777) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18649 (= (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!36311)))

(declare-fun b!78606 () Bool)

(declare-fun res!41137 () Bool)

(assert (=> b!78606 (=> (not res!41137) (not e!51384))))

(assert (=> b!78606 (= res!41137 (= (getValueByKey!136 (toList!748 lt!36311) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!78607 () Bool)

(assert (=> b!78607 (= e!51384 (contains!748 (toList!748 lt!36311) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!18649 res!41136) b!78606))

(assert (= (and b!78606 res!41137) b!78607))

(declare-fun m!78835 () Bool)

(assert (=> d!18649 m!78835))

(declare-fun m!78837 () Bool)

(assert (=> d!18649 m!78837))

(declare-fun m!78839 () Bool)

(assert (=> d!18649 m!78839))

(declare-fun m!78841 () Bool)

(assert (=> d!18649 m!78841))

(declare-fun m!78843 () Bool)

(assert (=> b!78606 m!78843))

(declare-fun m!78845 () Bool)

(assert (=> b!78607 m!78845))

(assert (=> d!18433 d!18649))

(declare-fun b!78642 () Bool)

(declare-fun e!51406 () Bool)

(declare-fun e!51401 () Bool)

(assert (=> b!78642 (= e!51406 e!51401)))

(declare-fun res!41162 () Bool)

(declare-fun call!7227 () Bool)

(assert (=> b!78642 (= res!41162 call!7227)))

(assert (=> b!78642 (=> (not res!41162) (not e!51401))))

(declare-fun call!7226 () SeekEntryResult!250)

(declare-fun bm!7223 () Bool)

(assert (=> bm!7223 (= call!7226 (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!78643 () Bool)

(declare-fun call!7229 () Bool)

(assert (=> b!78643 (= e!51401 (not call!7229))))

(declare-fun bm!7224 () Bool)

(declare-fun call!7228 () Bool)

(assert (=> bm!7224 (= call!7227 call!7228)))

(declare-fun b!78644 () Bool)

(declare-fun res!41158 () Bool)

(declare-fun e!51408 () Bool)

(assert (=> b!78644 (=> (not res!41158) (not e!51408))))

(declare-fun lt!36386 () tuple2!2188)

(assert (=> b!78644 (= res!41158 (valid!313 (_2!1104 lt!36386)))))

(declare-fun lt!36393 () SeekEntryResult!250)

(declare-fun e!51407 () Bool)

(declare-fun b!78645 () Bool)

(assert (=> b!78645 (= e!51407 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36393)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!78646 () Bool)

(declare-fun e!51403 () Unit!2263)

(declare-fun lt!36401 () Unit!2263)

(assert (=> b!78646 (= e!51403 lt!36401)))

(assert (=> b!78646 (= lt!36401 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36376 () SeekEntryResult!250)

(assert (=> b!78646 (= lt!36376 call!7226)))

(declare-fun c!12097 () Bool)

(assert (=> b!78646 (= c!12097 ((_ is MissingZero!250) lt!36376))))

(declare-fun e!51402 () Bool)

(assert (=> b!78646 e!51402))

(declare-fun b!78647 () Bool)

(declare-fun res!41157 () Bool)

(declare-fun e!51404 () Bool)

(assert (=> b!78647 (=> (not res!41157) (not e!51404))))

(assert (=> b!78647 (= res!41157 call!7227)))

(assert (=> b!78647 (= e!51402 e!51404)))

(declare-fun bm!7225 () Bool)

(assert (=> bm!7225 (= call!7229 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!78649 () Bool)

(assert (=> b!78649 (= e!51404 (not call!7229))))

(declare-fun b!78650 () Bool)

(assert (=> b!78650 (= e!51406 ((_ is Undefined!250) lt!36376))))

(declare-fun b!78651 () Bool)

(declare-fun e!51405 () Unit!2263)

(declare-fun Unit!2287 () Unit!2263)

(assert (=> b!78651 (= e!51405 Unit!2287)))

(declare-fun lt!36374 () Unit!2263)

(declare-fun lemmaArrayContainsKeyThenInListMap!16 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) (_ BitVec 32) Int) Unit!2263)

(assert (=> b!78651 (= lt!36374 (lemmaArrayContainsKeyThenInListMap!16 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(assert (=> b!78651 (contains!745 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))

(declare-fun lt!36382 () Unit!2263)

(assert (=> b!78651 (= lt!36382 lt!36374)))

(assert (=> b!78651 false))

(declare-fun c!12098 () Bool)

(declare-fun bm!7226 () Bool)

(assert (=> bm!7226 (= call!7228 (inRange!0 (ite c!12098 (index!3135 lt!36393) (ite c!12097 (index!3134 lt!36376) (index!3137 lt!36376))) (mask!6268 newMap!16)))))

(declare-fun b!78652 () Bool)

(declare-fun res!41159 () Bool)

(assert (=> b!78652 (= res!41159 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3137 lt!36376)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78652 (=> (not res!41159) (not e!51401))))

(declare-fun b!78653 () Bool)

(declare-fun c!12095 () Bool)

(assert (=> b!78653 (= c!12095 ((_ is MissingVacant!250) lt!36376))))

(assert (=> b!78653 (= e!51402 e!51406)))

(declare-fun b!78654 () Bool)

(declare-fun res!41156 () Bool)

(assert (=> b!78654 (=> (not res!41156) (not e!51408))))

(assert (=> b!78654 (= res!41156 (contains!745 (map!1179 (_2!1104 lt!36386)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!78655 () Bool)

(declare-fun res!41161 () Bool)

(assert (=> b!78655 (= res!41161 call!7228)))

(assert (=> b!78655 (=> (not res!41161) (not e!51407))))

(declare-fun b!78656 () Bool)

(declare-fun Unit!2288 () Unit!2263)

(assert (=> b!78656 (= e!51405 Unit!2288)))

(declare-fun b!78657 () Bool)

(declare-fun res!41163 () Bool)

(assert (=> b!78657 (=> (not res!41163) (not e!51404))))

(assert (=> b!78657 (= res!41163 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3134 lt!36376)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78658 () Bool)

(declare-fun Unit!2289 () Unit!2263)

(assert (=> b!78658 (= e!51403 Unit!2289)))

(declare-fun lt!36388 () Unit!2263)

(assert (=> b!78658 (= lt!36388 (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(assert (=> b!78658 (= lt!36393 call!7226)))

(declare-fun res!41164 () Bool)

(assert (=> b!78658 (= res!41164 ((_ is Found!250) lt!36393))))

(assert (=> b!78658 (=> (not res!41164) (not e!51407))))

(assert (=> b!78658 e!51407))

(declare-fun lt!36392 () Unit!2263)

(assert (=> b!78658 (= lt!36392 lt!36388)))

(assert (=> b!78658 false))

(declare-fun b!78648 () Bool)

(assert (=> b!78648 (= e!51408 (= (map!1179 (_2!1104 lt!36386)) (+!109 (map!1179 newMap!16) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun d!18651 () Bool)

(assert (=> d!18651 e!51408))

(declare-fun res!41160 () Bool)

(assert (=> d!18651 (=> (not res!41160) (not e!51408))))

(assert (=> d!18651 (= res!41160 (_1!1104 lt!36386))))

(assert (=> d!18651 (= lt!36386 (tuple2!2189 true (LongMapFixedSize!733 (defaultEntry!2272 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (bvadd (_size!415 newMap!16) #b00000000000000000000000000000001) (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (_vacant!415 newMap!16))))))

(declare-fun lt!36395 () Unit!2263)

(declare-fun lt!36390 () Unit!2263)

(assert (=> d!18651 (= lt!36395 lt!36390)))

(declare-fun lt!36375 () array!3976)

(declare-fun lt!36389 () array!3974)

(assert (=> d!18651 (contains!745 (getCurrentListMap!435 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063))))))

(assert (=> d!18651 (= lt!36390 (lemmaValidKeyInArrayIsInListMap!86 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (defaultEntry!2272 newMap!16)))))

(assert (=> d!18651 (= lt!36375 (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))))

(assert (=> d!18651 (= lt!36389 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun lt!36377 () Unit!2263)

(declare-fun lt!36379 () Unit!2263)

(assert (=> d!18651 (= lt!36377 lt!36379)))

(declare-fun lt!36384 () array!3974)

(assert (=> d!18651 (= (arrayCountValidKeys!0 lt!36384 (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (bvadd (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3974 (_ BitVec 32)) Unit!2263)

(assert (=> d!18651 (= lt!36379 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!36384 (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063))))))

(assert (=> d!18651 (= lt!36384 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun lt!36391 () Unit!2263)

(declare-fun lt!36396 () Unit!2263)

(assert (=> d!18651 (= lt!36391 lt!36396)))

(declare-fun lt!36398 () array!3974)

(assert (=> d!18651 (arrayContainsKey!0 lt!36398 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!18651 (= lt!36396 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!36398 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063))))))

(assert (=> d!18651 (= lt!36398 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun lt!36387 () Unit!2263)

(declare-fun lt!36397 () Unit!2263)

(assert (=> d!18651 (= lt!36387 lt!36397)))

(assert (=> d!18651 (= (+!109 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (getCurrentListMap!435 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!16 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) (_ BitVec 64) V!2995 Int) Unit!2263)

(assert (=> d!18651 (= lt!36397 (lemmaAddValidKeyToArrayThenAddPairToListMap!16 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36400 () Unit!2263)

(declare-fun lt!36381 () Unit!2263)

(assert (=> d!18651 (= lt!36400 lt!36381)))

(assert (=> d!18651 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (mask!6268 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3974 (_ BitVec 32) (_ BitVec 32)) Unit!2263)

(assert (=> d!18651 (= lt!36381 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (mask!6268 newMap!16)))))

(declare-fun lt!36378 () Unit!2263)

(declare-fun lt!36372 () Unit!2263)

(assert (=> d!18651 (= lt!36378 lt!36372)))

(assert (=> d!18651 (= (arrayCountValidKeys!0 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3974 (_ BitVec 32) (_ BitVec 64)) Unit!2263)

(assert (=> d!18651 (= lt!36372 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3932 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun lt!36399 () Unit!2263)

(declare-fun lt!36394 () Unit!2263)

(assert (=> d!18651 (= lt!36399 lt!36394)))

(declare-fun lt!36373 () (_ BitVec 32))

(declare-fun lt!36385 () List!1534)

(assert (=> d!18651 (arrayNoDuplicates!0 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) lt!36373 lt!36385)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3974 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1534) Unit!2263)

(assert (=> d!18651 (= lt!36394 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) lt!36373 lt!36385))))

(assert (=> d!18651 (= lt!36385 Nil!1531)))

(assert (=> d!18651 (= lt!36373 #b00000000000000000000000000000000)))

(declare-fun lt!36380 () Unit!2263)

(assert (=> d!18651 (= lt!36380 e!51405)))

(declare-fun c!12096 () Bool)

(assert (=> d!18651 (= c!12096 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!36383 () Unit!2263)

(assert (=> d!18651 (= lt!36383 e!51403)))

(assert (=> d!18651 (= c!12098 (contains!745 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!18651 (valid!313 newMap!16)))

(assert (=> d!18651 (= (updateHelperNewKey!28 newMap!16 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063))) lt!36386)))

(assert (= (and d!18651 c!12098) b!78658))

(assert (= (and d!18651 (not c!12098)) b!78646))

(assert (= (and b!78658 res!41164) b!78655))

(assert (= (and b!78655 res!41161) b!78645))

(assert (= (and b!78646 c!12097) b!78647))

(assert (= (and b!78646 (not c!12097)) b!78653))

(assert (= (and b!78647 res!41157) b!78657))

(assert (= (and b!78657 res!41163) b!78649))

(assert (= (and b!78653 c!12095) b!78642))

(assert (= (and b!78653 (not c!12095)) b!78650))

(assert (= (and b!78642 res!41162) b!78652))

(assert (= (and b!78652 res!41159) b!78643))

(assert (= (or b!78647 b!78642) bm!7224))

(assert (= (or b!78649 b!78643) bm!7225))

(assert (= (or b!78655 bm!7224) bm!7226))

(assert (= (or b!78658 b!78646) bm!7223))

(assert (= (and d!18651 c!12096) b!78651))

(assert (= (and d!18651 (not c!12096)) b!78656))

(assert (= (and d!18651 res!41160) b!78644))

(assert (= (and b!78644 res!41158) b!78654))

(assert (= (and b!78654 res!41156) b!78648))

(assert (=> bm!7225 m!77749))

(assert (=> bm!7225 m!78127))

(assert (=> d!18651 m!77749))

(assert (=> d!18651 m!78127))

(assert (=> d!18651 m!77749))

(declare-fun m!78847 () Bool)

(assert (=> d!18651 m!78847))

(declare-fun m!78849 () Bool)

(assert (=> d!18651 m!78849))

(assert (=> d!18651 m!77749))

(declare-fun m!78851 () Bool)

(assert (=> d!18651 m!78851))

(assert (=> d!18651 m!78025))

(assert (=> d!18651 m!77741))

(declare-fun m!78853 () Bool)

(assert (=> d!18651 m!78853))

(declare-fun m!78855 () Bool)

(assert (=> d!18651 m!78855))

(declare-fun m!78857 () Bool)

(assert (=> d!18651 m!78857))

(assert (=> d!18651 m!78025))

(assert (=> d!18651 m!78351))

(assert (=> d!18651 m!78025))

(assert (=> d!18651 m!77749))

(assert (=> d!18651 m!78103))

(declare-fun m!78859 () Bool)

(assert (=> d!18651 m!78859))

(declare-fun m!78861 () Bool)

(assert (=> d!18651 m!78861))

(declare-fun m!78863 () Bool)

(assert (=> d!18651 m!78863))

(declare-fun m!78865 () Bool)

(assert (=> d!18651 m!78865))

(assert (=> d!18651 m!77749))

(declare-fun m!78867 () Bool)

(assert (=> d!18651 m!78867))

(assert (=> d!18651 m!77749))

(declare-fun m!78869 () Bool)

(assert (=> d!18651 m!78869))

(declare-fun m!78871 () Bool)

(assert (=> d!18651 m!78871))

(declare-fun m!78873 () Bool)

(assert (=> d!18651 m!78873))

(assert (=> d!18651 m!77749))

(declare-fun m!78875 () Bool)

(assert (=> d!18651 m!78875))

(declare-fun m!78877 () Bool)

(assert (=> d!18651 m!78877))

(assert (=> d!18651 m!77749))

(declare-fun m!78879 () Bool)

(assert (=> d!18651 m!78879))

(assert (=> d!18651 m!78873))

(assert (=> d!18651 m!78877))

(declare-fun m!78881 () Bool)

(assert (=> d!18651 m!78881))

(assert (=> d!18651 m!77873))

(declare-fun m!78883 () Bool)

(assert (=> b!78652 m!78883))

(declare-fun m!78885 () Bool)

(assert (=> b!78645 m!78885))

(declare-fun m!78887 () Bool)

(assert (=> b!78654 m!78887))

(assert (=> b!78654 m!78887))

(assert (=> b!78654 m!77749))

(declare-fun m!78889 () Bool)

(assert (=> b!78654 m!78889))

(assert (=> b!78651 m!77749))

(declare-fun m!78891 () Bool)

(assert (=> b!78651 m!78891))

(assert (=> b!78651 m!78025))

(assert (=> b!78651 m!78025))

(assert (=> b!78651 m!77749))

(assert (=> b!78651 m!78103))

(assert (=> b!78648 m!78887))

(assert (=> b!78648 m!77799))

(assert (=> b!78648 m!77799))

(declare-fun m!78893 () Bool)

(assert (=> b!78648 m!78893))

(declare-fun m!78895 () Bool)

(assert (=> b!78644 m!78895))

(assert (=> b!78658 m!77749))

(assert (=> b!78658 m!78135))

(declare-fun m!78897 () Bool)

(assert (=> b!78657 m!78897))

(declare-fun m!78899 () Bool)

(assert (=> bm!7226 m!78899))

(assert (=> bm!7223 m!77749))

(assert (=> bm!7223 m!78085))

(assert (=> b!78646 m!77749))

(assert (=> b!78646 m!78083))

(assert (=> bm!7145 d!18651))

(declare-fun d!18653 () Bool)

(assert (=> d!18653 (= (apply!79 lt!35969 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!136 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3316 () Bool)

(assert (= bs!3316 d!18653))

(declare-fun m!78901 () Bool)

(assert (=> bs!3316 m!78901))

(assert (=> bs!3316 m!78901))

(declare-fun m!78903 () Bool)

(assert (=> bs!3316 m!78903))

(assert (=> b!78079 d!18653))

(declare-fun d!18655 () Bool)

(assert (=> d!18655 (= (apply!79 lt!35969 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1192 (getValueByKey!136 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3317 () Bool)

(assert (= bs!3317 d!18655))

(assert (=> bs!3317 m!77883))

(assert (=> bs!3317 m!78147))

(assert (=> bs!3317 m!78147))

(declare-fun m!78905 () Bool)

(assert (=> bs!3317 m!78905))

(assert (=> b!78064 d!18655))

(assert (=> b!78064 d!18495))

(declare-fun d!18657 () Bool)

(declare-fun e!51410 () Bool)

(assert (=> d!18657 e!51410))

(declare-fun res!41165 () Bool)

(assert (=> d!18657 (=> res!41165 e!51410)))

(declare-fun lt!36402 () Bool)

(assert (=> d!18657 (= res!41165 (not lt!36402))))

(declare-fun lt!36403 () Bool)

(assert (=> d!18657 (= lt!36402 lt!36403)))

(declare-fun lt!36404 () Unit!2263)

(declare-fun e!51409 () Unit!2263)

(assert (=> d!18657 (= lt!36404 e!51409)))

(declare-fun c!12099 () Bool)

(assert (=> d!18657 (= c!12099 lt!36403)))

(assert (=> d!18657 (= lt!36403 (containsKey!140 (toList!748 lt!35895) (_1!1105 lt!35783)))))

(assert (=> d!18657 (= (contains!745 lt!35895 (_1!1105 lt!35783)) lt!36402)))

(declare-fun b!78659 () Bool)

(declare-fun lt!36405 () Unit!2263)

(assert (=> b!78659 (= e!51409 lt!36405)))

(assert (=> b!78659 (= lt!36405 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35895) (_1!1105 lt!35783)))))

(assert (=> b!78659 (isDefined!90 (getValueByKey!136 (toList!748 lt!35895) (_1!1105 lt!35783)))))

(declare-fun b!78660 () Bool)

(declare-fun Unit!2290 () Unit!2263)

(assert (=> b!78660 (= e!51409 Unit!2290)))

(declare-fun b!78661 () Bool)

(assert (=> b!78661 (= e!51410 (isDefined!90 (getValueByKey!136 (toList!748 lt!35895) (_1!1105 lt!35783))))))

(assert (= (and d!18657 c!12099) b!78659))

(assert (= (and d!18657 (not c!12099)) b!78660))

(assert (= (and d!18657 (not res!41165)) b!78661))

(declare-fun m!78907 () Bool)

(assert (=> d!18657 m!78907))

(declare-fun m!78909 () Bool)

(assert (=> b!78659 m!78909))

(assert (=> b!78659 m!77963))

(assert (=> b!78659 m!77963))

(declare-fun m!78911 () Bool)

(assert (=> b!78659 m!78911))

(assert (=> b!78661 m!77963))

(assert (=> b!78661 m!77963))

(assert (=> b!78661 m!78911))

(assert (=> d!18435 d!18657))

(declare-fun b!78663 () Bool)

(declare-fun e!51411 () Option!142)

(declare-fun e!51412 () Option!142)

(assert (=> b!78663 (= e!51411 e!51412)))

(declare-fun c!12101 () Bool)

(assert (=> b!78663 (= c!12101 (and ((_ is Cons!1529) lt!35892) (not (= (_1!1105 (h!2117 lt!35892)) (_1!1105 lt!35783)))))))

(declare-fun b!78662 () Bool)

(assert (=> b!78662 (= e!51411 (Some!141 (_2!1105 (h!2117 lt!35892))))))

(declare-fun b!78664 () Bool)

(assert (=> b!78664 (= e!51412 (getValueByKey!136 (t!5183 lt!35892) (_1!1105 lt!35783)))))

(declare-fun b!78665 () Bool)

(assert (=> b!78665 (= e!51412 None!140)))

(declare-fun d!18659 () Bool)

(declare-fun c!12100 () Bool)

(assert (=> d!18659 (= c!12100 (and ((_ is Cons!1529) lt!35892) (= (_1!1105 (h!2117 lt!35892)) (_1!1105 lt!35783))))))

(assert (=> d!18659 (= (getValueByKey!136 lt!35892 (_1!1105 lt!35783)) e!51411)))

(assert (= (and d!18659 c!12100) b!78662))

(assert (= (and d!18659 (not c!12100)) b!78663))

(assert (= (and b!78663 c!12101) b!78664))

(assert (= (and b!78663 (not c!12101)) b!78665))

(declare-fun m!78913 () Bool)

(assert (=> b!78664 m!78913))

(assert (=> d!18435 d!18659))

(declare-fun d!18661 () Bool)

(assert (=> d!18661 (= (getValueByKey!136 lt!35892 (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783)))))

(declare-fun lt!36406 () Unit!2263)

(assert (=> d!18661 (= lt!36406 (choose!468 lt!35892 (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(declare-fun e!51413 () Bool)

(assert (=> d!18661 e!51413))

(declare-fun res!41166 () Bool)

(assert (=> d!18661 (=> (not res!41166) (not e!51413))))

(assert (=> d!18661 (= res!41166 (isStrictlySorted!290 lt!35892))))

(assert (=> d!18661 (= (lemmaContainsTupThenGetReturnValue!55 lt!35892 (_1!1105 lt!35783) (_2!1105 lt!35783)) lt!36406)))

(declare-fun b!78666 () Bool)

(declare-fun res!41167 () Bool)

(assert (=> b!78666 (=> (not res!41167) (not e!51413))))

(assert (=> b!78666 (= res!41167 (containsKey!140 lt!35892 (_1!1105 lt!35783)))))

(declare-fun b!78667 () Bool)

(assert (=> b!78667 (= e!51413 (contains!748 lt!35892 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(assert (= (and d!18661 res!41166) b!78666))

(assert (= (and b!78666 res!41167) b!78667))

(assert (=> d!18661 m!77957))

(declare-fun m!78915 () Bool)

(assert (=> d!18661 m!78915))

(declare-fun m!78917 () Bool)

(assert (=> d!18661 m!78917))

(declare-fun m!78919 () Bool)

(assert (=> b!78666 m!78919))

(declare-fun m!78921 () Bool)

(assert (=> b!78667 m!78921))

(assert (=> d!18435 d!18661))

(declare-fun b!78668 () Bool)

(declare-fun c!12102 () Bool)

(assert (=> b!78668 (= c!12102 (and ((_ is Cons!1529) (toList!748 lt!35785)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 lt!35783))))))

(declare-fun e!51417 () List!1533)

(declare-fun e!51414 () List!1533)

(assert (=> b!78668 (= e!51417 e!51414)))

(declare-fun call!7232 () List!1533)

(declare-fun c!12103 () Bool)

(declare-fun bm!7227 () Bool)

(declare-fun e!51416 () List!1533)

(assert (=> bm!7227 (= call!7232 ($colon$colon!68 e!51416 (ite c!12103 (h!2117 (toList!748 lt!35785)) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783)))))))

(declare-fun c!12104 () Bool)

(assert (=> bm!7227 (= c!12104 c!12103)))

(declare-fun d!18663 () Bool)

(declare-fun e!51418 () Bool)

(assert (=> d!18663 e!51418))

(declare-fun res!41168 () Bool)

(assert (=> d!18663 (=> (not res!41168) (not e!51418))))

(declare-fun lt!36407 () List!1533)

(assert (=> d!18663 (= res!41168 (isStrictlySorted!290 lt!36407))))

(declare-fun e!51415 () List!1533)

(assert (=> d!18663 (= lt!36407 e!51415)))

(assert (=> d!18663 (= c!12103 (and ((_ is Cons!1529) (toList!748 lt!35785)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 lt!35783))))))

(assert (=> d!18663 (isStrictlySorted!290 (toList!748 lt!35785))))

(assert (=> d!18663 (= (insertStrictlySorted!57 (toList!748 lt!35785) (_1!1105 lt!35783) (_2!1105 lt!35783)) lt!36407)))

(declare-fun b!78669 () Bool)

(declare-fun c!12105 () Bool)

(assert (=> b!78669 (= e!51416 (ite c!12105 (t!5183 (toList!748 lt!35785)) (ite c!12102 (Cons!1529 (h!2117 (toList!748 lt!35785)) (t!5183 (toList!748 lt!35785))) Nil!1530)))))

(declare-fun bm!7228 () Bool)

(declare-fun call!7231 () List!1533)

(assert (=> bm!7228 (= call!7231 call!7232)))

(declare-fun b!78670 () Bool)

(assert (=> b!78670 (= e!51415 call!7232)))

(declare-fun b!78671 () Bool)

(declare-fun res!41169 () Bool)

(assert (=> b!78671 (=> (not res!41169) (not e!51418))))

(assert (=> b!78671 (= res!41169 (containsKey!140 lt!36407 (_1!1105 lt!35783)))))

(declare-fun b!78672 () Bool)

(declare-fun call!7230 () List!1533)

(assert (=> b!78672 (= e!51414 call!7230)))

(declare-fun b!78673 () Bool)

(assert (=> b!78673 (= e!51417 call!7231)))

(declare-fun b!78674 () Bool)

(assert (=> b!78674 (= e!51415 e!51417)))

(assert (=> b!78674 (= c!12105 (and ((_ is Cons!1529) (toList!748 lt!35785)) (= (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 lt!35783))))))

(declare-fun bm!7229 () Bool)

(assert (=> bm!7229 (= call!7230 call!7231)))

(declare-fun b!78675 () Bool)

(assert (=> b!78675 (= e!51416 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35785)) (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(declare-fun b!78676 () Bool)

(assert (=> b!78676 (= e!51418 (contains!748 lt!36407 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!78677 () Bool)

(assert (=> b!78677 (= e!51414 call!7230)))

(assert (= (and d!18663 c!12103) b!78670))

(assert (= (and d!18663 (not c!12103)) b!78674))

(assert (= (and b!78674 c!12105) b!78673))

(assert (= (and b!78674 (not c!12105)) b!78668))

(assert (= (and b!78668 c!12102) b!78677))

(assert (= (and b!78668 (not c!12102)) b!78672))

(assert (= (or b!78677 b!78672) bm!7229))

(assert (= (or b!78673 bm!7229) bm!7228))

(assert (= (or b!78670 bm!7228) bm!7227))

(assert (= (and bm!7227 c!12104) b!78675))

(assert (= (and bm!7227 (not c!12104)) b!78669))

(assert (= (and d!18663 res!41168) b!78671))

(assert (= (and b!78671 res!41169) b!78676))

(declare-fun m!78923 () Bool)

(assert (=> b!78671 m!78923))

(declare-fun m!78925 () Bool)

(assert (=> b!78676 m!78925))

(declare-fun m!78927 () Bool)

(assert (=> d!18663 m!78927))

(assert (=> d!18663 m!78593))

(declare-fun m!78929 () Bool)

(assert (=> bm!7227 m!78929))

(declare-fun m!78931 () Bool)

(assert (=> b!78675 m!78931))

(assert (=> d!18435 d!18663))

(declare-fun d!18665 () Bool)

(declare-fun e!51421 () Bool)

(assert (=> d!18665 e!51421))

(declare-fun res!41175 () Bool)

(assert (=> d!18665 (=> (not res!41175) (not e!51421))))

(declare-fun lt!36412 () SeekEntryResult!250)

(assert (=> d!18665 (= res!41175 ((_ is Found!250) lt!36412))))

(assert (=> d!18665 (= lt!36412 (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun lt!36413 () Unit!2263)

(declare-fun choose!473 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) Int) Unit!2263)

(assert (=> d!18665 (= lt!36413 (choose!473 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)))))

(assert (=> d!18665 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18665 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!28 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)) lt!36413)))

(declare-fun b!78682 () Bool)

(declare-fun res!41174 () Bool)

(assert (=> b!78682 (=> (not res!41174) (not e!51421))))

(assert (=> b!78682 (= res!41174 (inRange!0 (index!3135 lt!36412) (mask!6268 newMap!16)))))

(declare-fun b!78683 () Bool)

(assert (=> b!78683 (= e!51421 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36412)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!78683 (and (bvsge (index!3135 lt!36412) #b00000000000000000000000000000000) (bvslt (index!3135 lt!36412) (size!2135 (_keys!3932 newMap!16))))))

(assert (= (and d!18665 res!41175) b!78682))

(assert (= (and b!78682 res!41174) b!78683))

(assert (=> d!18665 m!77749))

(assert (=> d!18665 m!78085))

(assert (=> d!18665 m!77749))

(declare-fun m!78933 () Bool)

(assert (=> d!18665 m!78933))

(assert (=> d!18665 m!78167))

(declare-fun m!78935 () Bool)

(assert (=> b!78682 m!78935))

(declare-fun m!78937 () Bool)

(assert (=> b!78683 m!78937))

(assert (=> bm!7159 d!18665))

(declare-fun d!18667 () Bool)

(assert (=> d!18667 (= (apply!79 lt!35969 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!136 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3318 () Bool)

(assert (= bs!3318 d!18667))

(assert (=> bs!3318 m!78409))

(assert (=> bs!3318 m!78409))

(declare-fun m!78939 () Bool)

(assert (=> bs!3318 m!78939))

(assert (=> b!78081 d!18667))

(declare-fun d!18669 () Bool)

(declare-fun e!51423 () Bool)

(assert (=> d!18669 e!51423))

(declare-fun res!41176 () Bool)

(assert (=> d!18669 (=> res!41176 e!51423)))

(declare-fun lt!36414 () Bool)

(assert (=> d!18669 (= res!41176 (not lt!36414))))

(declare-fun lt!36415 () Bool)

(assert (=> d!18669 (= lt!36414 lt!36415)))

(declare-fun lt!36416 () Unit!2263)

(declare-fun e!51422 () Unit!2263)

(assert (=> d!18669 (= lt!36416 e!51422)))

(declare-fun c!12106 () Bool)

(assert (=> d!18669 (= c!12106 lt!36415)))

(assert (=> d!18669 (= lt!36415 (containsKey!140 (toList!748 lt!35899) (_1!1105 lt!35784)))))

(assert (=> d!18669 (= (contains!745 lt!35899 (_1!1105 lt!35784)) lt!36414)))

(declare-fun b!78684 () Bool)

(declare-fun lt!36417 () Unit!2263)

(assert (=> b!78684 (= e!51422 lt!36417)))

(assert (=> b!78684 (= lt!36417 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35899) (_1!1105 lt!35784)))))

(assert (=> b!78684 (isDefined!90 (getValueByKey!136 (toList!748 lt!35899) (_1!1105 lt!35784)))))

(declare-fun b!78685 () Bool)

(declare-fun Unit!2291 () Unit!2263)

(assert (=> b!78685 (= e!51422 Unit!2291)))

(declare-fun b!78686 () Bool)

(assert (=> b!78686 (= e!51423 (isDefined!90 (getValueByKey!136 (toList!748 lt!35899) (_1!1105 lt!35784))))))

(assert (= (and d!18669 c!12106) b!78684))

(assert (= (and d!18669 (not c!12106)) b!78685))

(assert (= (and d!18669 (not res!41176)) b!78686))

(declare-fun m!78941 () Bool)

(assert (=> d!18669 m!78941))

(declare-fun m!78943 () Bool)

(assert (=> b!78684 m!78943))

(assert (=> b!78684 m!77975))

(assert (=> b!78684 m!77975))

(declare-fun m!78945 () Bool)

(assert (=> b!78684 m!78945))

(assert (=> b!78686 m!77975))

(assert (=> b!78686 m!77975))

(assert (=> b!78686 m!78945))

(assert (=> d!18437 d!18669))

(declare-fun b!78688 () Bool)

(declare-fun e!51424 () Option!142)

(declare-fun e!51425 () Option!142)

(assert (=> b!78688 (= e!51424 e!51425)))

(declare-fun c!12108 () Bool)

(assert (=> b!78688 (= c!12108 (and ((_ is Cons!1529) lt!35896) (not (= (_1!1105 (h!2117 lt!35896)) (_1!1105 lt!35784)))))))

(declare-fun b!78687 () Bool)

(assert (=> b!78687 (= e!51424 (Some!141 (_2!1105 (h!2117 lt!35896))))))

(declare-fun b!78689 () Bool)

(assert (=> b!78689 (= e!51425 (getValueByKey!136 (t!5183 lt!35896) (_1!1105 lt!35784)))))

(declare-fun b!78690 () Bool)

(assert (=> b!78690 (= e!51425 None!140)))

(declare-fun d!18671 () Bool)

(declare-fun c!12107 () Bool)

(assert (=> d!18671 (= c!12107 (and ((_ is Cons!1529) lt!35896) (= (_1!1105 (h!2117 lt!35896)) (_1!1105 lt!35784))))))

(assert (=> d!18671 (= (getValueByKey!136 lt!35896 (_1!1105 lt!35784)) e!51424)))

(assert (= (and d!18671 c!12107) b!78687))

(assert (= (and d!18671 (not c!12107)) b!78688))

(assert (= (and b!78688 c!12108) b!78689))

(assert (= (and b!78688 (not c!12108)) b!78690))

(declare-fun m!78947 () Bool)

(assert (=> b!78689 m!78947))

(assert (=> d!18437 d!18671))

(declare-fun d!18673 () Bool)

(assert (=> d!18673 (= (getValueByKey!136 lt!35896 (_1!1105 lt!35784)) (Some!141 (_2!1105 lt!35784)))))

(declare-fun lt!36418 () Unit!2263)

(assert (=> d!18673 (= lt!36418 (choose!468 lt!35896 (_1!1105 lt!35784) (_2!1105 lt!35784)))))

(declare-fun e!51426 () Bool)

(assert (=> d!18673 e!51426))

(declare-fun res!41177 () Bool)

(assert (=> d!18673 (=> (not res!41177) (not e!51426))))

(assert (=> d!18673 (= res!41177 (isStrictlySorted!290 lt!35896))))

(assert (=> d!18673 (= (lemmaContainsTupThenGetReturnValue!55 lt!35896 (_1!1105 lt!35784) (_2!1105 lt!35784)) lt!36418)))

(declare-fun b!78691 () Bool)

(declare-fun res!41178 () Bool)

(assert (=> b!78691 (=> (not res!41178) (not e!51426))))

(assert (=> b!78691 (= res!41178 (containsKey!140 lt!35896 (_1!1105 lt!35784)))))

(declare-fun b!78692 () Bool)

(assert (=> b!78692 (= e!51426 (contains!748 lt!35896 (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(assert (= (and d!18673 res!41177) b!78691))

(assert (= (and b!78691 res!41178) b!78692))

(assert (=> d!18673 m!77969))

(declare-fun m!78949 () Bool)

(assert (=> d!18673 m!78949))

(declare-fun m!78951 () Bool)

(assert (=> d!18673 m!78951))

(declare-fun m!78953 () Bool)

(assert (=> b!78691 m!78953))

(declare-fun m!78955 () Bool)

(assert (=> b!78692 m!78955))

(assert (=> d!18437 d!18673))

(declare-fun b!78693 () Bool)

(declare-fun c!12109 () Bool)

(assert (=> b!78693 (= c!12109 (and ((_ is Cons!1529) (toList!748 lt!35777)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 lt!35784))))))

(declare-fun e!51430 () List!1533)

(declare-fun e!51427 () List!1533)

(assert (=> b!78693 (= e!51430 e!51427)))

(declare-fun bm!7230 () Bool)

(declare-fun c!12110 () Bool)

(declare-fun call!7235 () List!1533)

(declare-fun e!51429 () List!1533)

(assert (=> bm!7230 (= call!7235 ($colon$colon!68 e!51429 (ite c!12110 (h!2117 (toList!748 lt!35777)) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784)))))))

(declare-fun c!12111 () Bool)

(assert (=> bm!7230 (= c!12111 c!12110)))

(declare-fun d!18675 () Bool)

(declare-fun e!51431 () Bool)

(assert (=> d!18675 e!51431))

(declare-fun res!41179 () Bool)

(assert (=> d!18675 (=> (not res!41179) (not e!51431))))

(declare-fun lt!36419 () List!1533)

(assert (=> d!18675 (= res!41179 (isStrictlySorted!290 lt!36419))))

(declare-fun e!51428 () List!1533)

(assert (=> d!18675 (= lt!36419 e!51428)))

(assert (=> d!18675 (= c!12110 (and ((_ is Cons!1529) (toList!748 lt!35777)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 lt!35784))))))

(assert (=> d!18675 (isStrictlySorted!290 (toList!748 lt!35777))))

(assert (=> d!18675 (= (insertStrictlySorted!57 (toList!748 lt!35777) (_1!1105 lt!35784) (_2!1105 lt!35784)) lt!36419)))

(declare-fun b!78694 () Bool)

(declare-fun c!12112 () Bool)

(assert (=> b!78694 (= e!51429 (ite c!12112 (t!5183 (toList!748 lt!35777)) (ite c!12109 (Cons!1529 (h!2117 (toList!748 lt!35777)) (t!5183 (toList!748 lt!35777))) Nil!1530)))))

(declare-fun bm!7231 () Bool)

(declare-fun call!7234 () List!1533)

(assert (=> bm!7231 (= call!7234 call!7235)))

(declare-fun b!78695 () Bool)

(assert (=> b!78695 (= e!51428 call!7235)))

(declare-fun b!78696 () Bool)

(declare-fun res!41180 () Bool)

(assert (=> b!78696 (=> (not res!41180) (not e!51431))))

(assert (=> b!78696 (= res!41180 (containsKey!140 lt!36419 (_1!1105 lt!35784)))))

(declare-fun b!78697 () Bool)

(declare-fun call!7233 () List!1533)

(assert (=> b!78697 (= e!51427 call!7233)))

(declare-fun b!78698 () Bool)

(assert (=> b!78698 (= e!51430 call!7234)))

(declare-fun b!78699 () Bool)

(assert (=> b!78699 (= e!51428 e!51430)))

(assert (=> b!78699 (= c!12112 (and ((_ is Cons!1529) (toList!748 lt!35777)) (= (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 lt!35784))))))

(declare-fun bm!7232 () Bool)

(assert (=> bm!7232 (= call!7233 call!7234)))

(declare-fun b!78700 () Bool)

(assert (=> b!78700 (= e!51429 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35777)) (_1!1105 lt!35784) (_2!1105 lt!35784)))))

(declare-fun b!78701 () Bool)

(assert (=> b!78701 (= e!51431 (contains!748 lt!36419 (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun b!78702 () Bool)

(assert (=> b!78702 (= e!51427 call!7233)))

(assert (= (and d!18675 c!12110) b!78695))

(assert (= (and d!18675 (not c!12110)) b!78699))

(assert (= (and b!78699 c!12112) b!78698))

(assert (= (and b!78699 (not c!12112)) b!78693))

(assert (= (and b!78693 c!12109) b!78702))

(assert (= (and b!78693 (not c!12109)) b!78697))

(assert (= (or b!78702 b!78697) bm!7232))

(assert (= (or b!78698 bm!7232) bm!7231))

(assert (= (or b!78695 bm!7231) bm!7230))

(assert (= (and bm!7230 c!12111) b!78700))

(assert (= (and bm!7230 (not c!12111)) b!78694))

(assert (= (and d!18675 res!41179) b!78696))

(assert (= (and b!78696 res!41180) b!78701))

(declare-fun m!78957 () Bool)

(assert (=> b!78696 m!78957))

(declare-fun m!78959 () Bool)

(assert (=> b!78701 m!78959))

(declare-fun m!78961 () Bool)

(assert (=> d!18675 m!78961))

(assert (=> d!18675 m!78393))

(declare-fun m!78963 () Bool)

(assert (=> bm!7230 m!78963))

(declare-fun m!78965 () Bool)

(assert (=> b!78700 m!78965))

(assert (=> d!18437 d!18675))

(declare-fun d!18677 () Bool)

(declare-fun e!51433 () Bool)

(assert (=> d!18677 e!51433))

(declare-fun res!41181 () Bool)

(assert (=> d!18677 (=> res!41181 e!51433)))

(declare-fun lt!36420 () Bool)

(assert (=> d!18677 (= res!41181 (not lt!36420))))

(declare-fun lt!36421 () Bool)

(assert (=> d!18677 (= lt!36420 lt!36421)))

(declare-fun lt!36422 () Unit!2263)

(declare-fun e!51432 () Unit!2263)

(assert (=> d!18677 (= lt!36422 e!51432)))

(declare-fun c!12113 () Bool)

(assert (=> d!18677 (= c!12113 lt!36421)))

(assert (=> d!18677 (= lt!36421 (containsKey!140 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18677 (= (contains!745 lt!35969 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36420)))

(declare-fun b!78703 () Bool)

(declare-fun lt!36423 () Unit!2263)

(assert (=> b!78703 (= e!51432 lt!36423)))

(assert (=> b!78703 (= lt!36423 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78703 (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78704 () Bool)

(declare-fun Unit!2292 () Unit!2263)

(assert (=> b!78704 (= e!51432 Unit!2292)))

(declare-fun b!78705 () Bool)

(assert (=> b!78705 (= e!51433 (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18677 c!12113) b!78703))

(assert (= (and d!18677 (not c!12113)) b!78704))

(assert (= (and d!18677 (not res!41181)) b!78705))

(declare-fun m!78967 () Bool)

(assert (=> d!18677 m!78967))

(declare-fun m!78969 () Bool)

(assert (=> b!78703 m!78969))

(assert (=> b!78703 m!78901))

(assert (=> b!78703 m!78901))

(declare-fun m!78971 () Bool)

(assert (=> b!78703 m!78971))

(assert (=> b!78705 m!78901))

(assert (=> b!78705 m!78901))

(assert (=> b!78705 m!78971))

(assert (=> bm!7091 d!18677))

(declare-fun d!18679 () Bool)

(declare-fun e!51436 () Bool)

(assert (=> d!18679 e!51436))

(declare-fun c!12116 () Bool)

(assert (=> d!18679 (= c!12116 (and (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!18679 true))

(declare-fun _$29!99 () Unit!2263)

(assert (=> d!18679 (= (choose!461 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))) _$29!99)))

(declare-fun b!78710 () Bool)

(assert (=> b!78710 (= e!51436 (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!78711 () Bool)

(assert (=> b!78711 (= e!51436 (ite (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!18679 c!12116) b!78710))

(assert (= (and d!18679 (not c!12116)) b!78711))

(assert (=> b!78710 m!77749))

(assert (=> b!78710 m!77753))

(assert (=> d!18423 d!18679))

(assert (=> d!18423 d!18439))

(declare-fun b!78713 () Bool)

(declare-fun e!51437 () Option!142)

(declare-fun e!51438 () Option!142)

(assert (=> b!78713 (= e!51437 e!51438)))

(declare-fun c!12118 () Bool)

(assert (=> b!78713 (= c!12118 (and ((_ is Cons!1529) (toList!748 lt!35884)) (not (= (_1!1105 (h!2117 (toList!748 lt!35884))) (_1!1105 lt!35783)))))))

(declare-fun b!78712 () Bool)

(assert (=> b!78712 (= e!51437 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35884)))))))

(declare-fun b!78714 () Bool)

(assert (=> b!78714 (= e!51438 (getValueByKey!136 (t!5183 (toList!748 lt!35884)) (_1!1105 lt!35783)))))

(declare-fun b!78715 () Bool)

(assert (=> b!78715 (= e!51438 None!140)))

(declare-fun d!18681 () Bool)

(declare-fun c!12117 () Bool)

(assert (=> d!18681 (= c!12117 (and ((_ is Cons!1529) (toList!748 lt!35884)) (= (_1!1105 (h!2117 (toList!748 lt!35884))) (_1!1105 lt!35783))))))

(assert (=> d!18681 (= (getValueByKey!136 (toList!748 lt!35884) (_1!1105 lt!35783)) e!51437)))

(assert (= (and d!18681 c!12117) b!78712))

(assert (= (and d!18681 (not c!12117)) b!78713))

(assert (= (and b!78713 c!12118) b!78714))

(assert (= (and b!78713 (not c!12118)) b!78715))

(declare-fun m!78973 () Bool)

(assert (=> b!78714 m!78973))

(assert (=> b!78005 d!18681))

(declare-fun d!18683 () Bool)

(assert (=> d!18683 (= (get!1190 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) from!355) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2593 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!77927 d!18683))

(declare-fun d!18685 () Bool)

(declare-fun isEmpty!333 (List!1533) Bool)

(assert (=> d!18685 (= (isEmpty!331 lt!35867) (isEmpty!333 (toList!748 lt!35867)))))

(declare-fun bs!3319 () Bool)

(assert (= bs!3319 d!18685))

(declare-fun m!78975 () Bool)

(assert (=> bs!3319 m!78975))

(assert (=> b!77997 d!18685))

(declare-fun d!18687 () Bool)

(declare-fun res!41183 () Bool)

(declare-fun e!51440 () Bool)

(assert (=> d!18687 (=> res!41183 e!51440)))

(assert (=> d!18687 (= res!41183 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> d!18687 (= (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)) e!51440)))

(declare-fun b!78716 () Bool)

(declare-fun e!51439 () Bool)

(assert (=> b!78716 (= e!51439 (contains!747 (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun c!12119 () Bool)

(declare-fun bm!7233 () Bool)

(declare-fun call!7236 () Bool)

(assert (=> bm!7233 (= call!7236 (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12119 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531))))))

(declare-fun b!78717 () Bool)

(declare-fun e!51442 () Bool)

(declare-fun e!51441 () Bool)

(assert (=> b!78717 (= e!51442 e!51441)))

(assert (=> b!78717 (= c!12119 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78718 () Bool)

(assert (=> b!78718 (= e!51441 call!7236)))

(declare-fun b!78719 () Bool)

(assert (=> b!78719 (= e!51440 e!51442)))

(declare-fun res!41182 () Bool)

(assert (=> b!78719 (=> (not res!41182) (not e!51442))))

(assert (=> b!78719 (= res!41182 (not e!51439))))

(declare-fun res!41184 () Bool)

(assert (=> b!78719 (=> (not res!41184) (not e!51439))))

(assert (=> b!78719 (= res!41184 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!78720 () Bool)

(assert (=> b!78720 (= e!51441 call!7236)))

(assert (= (and d!18687 (not res!41183)) b!78719))

(assert (= (and b!78719 res!41184) b!78716))

(assert (= (and b!78719 res!41182) b!78717))

(assert (= (and b!78717 c!12119) b!78718))

(assert (= (and b!78717 (not c!12119)) b!78720))

(assert (= (or b!78718 b!78720) bm!7233))

(declare-fun m!78977 () Bool)

(assert (=> b!78716 m!78977))

(assert (=> b!78716 m!78977))

(declare-fun m!78979 () Bool)

(assert (=> b!78716 m!78979))

(assert (=> bm!7233 m!78977))

(declare-fun m!78981 () Bool)

(assert (=> bm!7233 m!78981))

(assert (=> b!78717 m!78977))

(assert (=> b!78717 m!78977))

(declare-fun m!78983 () Bool)

(assert (=> b!78717 m!78983))

(assert (=> b!78719 m!78977))

(assert (=> b!78719 m!78977))

(assert (=> b!78719 m!78983))

(assert (=> bm!7072 d!18687))

(assert (=> b!78076 d!18481))

(declare-fun d!18689 () Bool)

(declare-fun e!51444 () Bool)

(assert (=> d!18689 e!51444))

(declare-fun res!41185 () Bool)

(assert (=> d!18689 (=> res!41185 e!51444)))

(declare-fun lt!36424 () Bool)

(assert (=> d!18689 (= res!41185 (not lt!36424))))

(declare-fun lt!36425 () Bool)

(assert (=> d!18689 (= lt!36424 lt!36425)))

(declare-fun lt!36426 () Unit!2263)

(declare-fun e!51443 () Unit!2263)

(assert (=> d!18689 (= lt!36426 e!51443)))

(declare-fun c!12120 () Bool)

(assert (=> d!18689 (= c!12120 lt!36425)))

(assert (=> d!18689 (= lt!36425 (containsKey!140 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))

(assert (=> d!18689 (= (contains!745 e!51143 (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))) lt!36424)))

(declare-fun b!78721 () Bool)

(declare-fun lt!36427 () Unit!2263)

(assert (=> b!78721 (= e!51443 lt!36427)))

(assert (=> b!78721 (= lt!36427 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))

(assert (=> b!78721 (isDefined!90 (getValueByKey!136 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))

(declare-fun b!78722 () Bool)

(declare-fun Unit!2293 () Unit!2263)

(assert (=> b!78722 (= e!51443 Unit!2293)))

(declare-fun b!78723 () Bool)

(assert (=> b!78723 (= e!51444 (isDefined!90 (getValueByKey!136 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063))))))))

(assert (= (and d!18689 c!12120) b!78721))

(assert (= (and d!18689 (not c!12120)) b!78722))

(assert (= (and d!18689 (not res!41185)) b!78723))

(declare-fun m!78985 () Bool)

(assert (=> d!18689 m!78985))

(declare-fun m!78987 () Bool)

(assert (=> b!78721 m!78987))

(declare-fun m!78989 () Bool)

(assert (=> b!78721 m!78989))

(assert (=> b!78721 m!78989))

(declare-fun m!78991 () Bool)

(assert (=> b!78721 m!78991))

(assert (=> b!78723 m!78989))

(assert (=> b!78723 m!78989))

(assert (=> b!78723 m!78991))

(assert (=> bm!7165 d!18689))

(assert (=> b!78090 d!18599))

(assert (=> b!78090 d!18601))

(declare-fun b!78725 () Bool)

(declare-fun e!51445 () Option!142)

(declare-fun e!51446 () Option!142)

(assert (=> b!78725 (= e!51445 e!51446)))

(declare-fun c!12122 () Bool)

(assert (=> b!78725 (= c!12122 (and ((_ is Cons!1529) (toList!748 lt!35903)) (not (= (_1!1105 (h!2117 (toList!748 lt!35903))) (_1!1105 lt!35783)))))))

(declare-fun b!78724 () Bool)

(assert (=> b!78724 (= e!51445 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35903)))))))

(declare-fun b!78726 () Bool)

(assert (=> b!78726 (= e!51446 (getValueByKey!136 (t!5183 (toList!748 lt!35903)) (_1!1105 lt!35783)))))

(declare-fun b!78727 () Bool)

(assert (=> b!78727 (= e!51446 None!140)))

(declare-fun d!18691 () Bool)

(declare-fun c!12121 () Bool)

(assert (=> d!18691 (= c!12121 (and ((_ is Cons!1529) (toList!748 lt!35903)) (= (_1!1105 (h!2117 (toList!748 lt!35903))) (_1!1105 lt!35783))))))

(assert (=> d!18691 (= (getValueByKey!136 (toList!748 lt!35903) (_1!1105 lt!35783)) e!51445)))

(assert (= (and d!18691 c!12121) b!78724))

(assert (= (and d!18691 (not c!12121)) b!78725))

(assert (= (and b!78725 c!12122) b!78726))

(assert (= (and b!78725 (not c!12122)) b!78727))

(declare-fun m!78993 () Bool)

(assert (=> b!78726 m!78993))

(assert (=> b!78013 d!18691))

(declare-fun d!18693 () Bool)

(declare-fun e!51448 () Bool)

(assert (=> d!18693 e!51448))

(declare-fun res!41186 () Bool)

(assert (=> d!18693 (=> res!41186 e!51448)))

(declare-fun lt!36428 () Bool)

(assert (=> d!18693 (= res!41186 (not lt!36428))))

(declare-fun lt!36429 () Bool)

(assert (=> d!18693 (= lt!36428 lt!36429)))

(declare-fun lt!36430 () Unit!2263)

(declare-fun e!51447 () Unit!2263)

(assert (=> d!18693 (= lt!36430 e!51447)))

(declare-fun c!12123 () Bool)

(assert (=> d!18693 (= c!12123 lt!36429)))

(assert (=> d!18693 (= lt!36429 (containsKey!140 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18693 (= (contains!745 lt!35867 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36428)))

(declare-fun b!78728 () Bool)

(declare-fun lt!36431 () Unit!2263)

(assert (=> b!78728 (= e!51447 lt!36431)))

(assert (=> b!78728 (= lt!36431 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78728 (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78729 () Bool)

(declare-fun Unit!2294 () Unit!2263)

(assert (=> b!78729 (= e!51447 Unit!2294)))

(declare-fun b!78730 () Bool)

(assert (=> b!78730 (= e!51448 (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18693 c!12123) b!78728))

(assert (= (and d!18693 (not c!12123)) b!78729))

(assert (= (and d!18693 (not res!41186)) b!78730))

(declare-fun m!78995 () Bool)

(assert (=> d!18693 m!78995))

(declare-fun m!78997 () Bool)

(assert (=> b!78728 m!78997))

(declare-fun m!78999 () Bool)

(assert (=> b!78728 m!78999))

(assert (=> b!78728 m!78999))

(declare-fun m!79001 () Bool)

(assert (=> b!78728 m!79001))

(assert (=> b!78730 m!78999))

(assert (=> b!78730 m!78999))

(assert (=> b!78730 m!79001))

(assert (=> b!77999 d!18693))

(declare-fun d!18695 () Bool)

(declare-fun e!51449 () Bool)

(assert (=> d!18695 e!51449))

(declare-fun res!41187 () Bool)

(assert (=> d!18695 (=> (not res!41187) (not e!51449))))

(declare-fun lt!36435 () ListLongMap!1465)

(assert (=> d!18695 (= res!41187 (contains!745 lt!36435 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun lt!36432 () List!1533)

(assert (=> d!18695 (= lt!36435 (ListLongMap!1466 lt!36432))))

(declare-fun lt!36434 () Unit!2263)

(declare-fun lt!36433 () Unit!2263)

(assert (=> d!18695 (= lt!36434 lt!36433)))

(assert (=> d!18695 (= (getValueByKey!136 lt!36432 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (Some!141 (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18695 (= lt!36433 (lemmaContainsTupThenGetReturnValue!55 lt!36432 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18695 (= lt!36432 (insertStrictlySorted!57 (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093))) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18695 (= (+!109 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093)) (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36435)))

(declare-fun b!78731 () Bool)

(declare-fun res!41188 () Bool)

(assert (=> b!78731 (=> (not res!41188) (not e!51449))))

(assert (=> b!78731 (= res!41188 (= (getValueByKey!136 (toList!748 lt!36435) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (Some!141 (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!78732 () Bool)

(assert (=> b!78732 (= e!51449 (contains!748 (toList!748 lt!36435) (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (= (and d!18695 res!41187) b!78731))

(assert (= (and b!78731 res!41188) b!78732))

(declare-fun m!79003 () Bool)

(assert (=> d!18695 m!79003))

(declare-fun m!79005 () Bool)

(assert (=> d!18695 m!79005))

(declare-fun m!79007 () Bool)

(assert (=> d!18695 m!79007))

(declare-fun m!79009 () Bool)

(assert (=> d!18695 m!79009))

(declare-fun m!79011 () Bool)

(assert (=> b!78731 m!79011))

(declare-fun m!79013 () Bool)

(assert (=> b!78732 m!79013))

(assert (=> bm!7094 d!18695))

(declare-fun b!78733 () Bool)

(declare-fun e!51453 () ListLongMap!1465)

(declare-fun call!7243 () ListLongMap!1465)

(assert (=> b!78733 (= e!51453 (+!109 call!7243 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(declare-fun b!78734 () Bool)

(declare-fun res!41192 () Bool)

(declare-fun e!51462 () Bool)

(assert (=> b!78734 (=> (not res!41192) (not e!51462))))

(declare-fun e!51460 () Bool)

(assert (=> b!78734 (= res!41192 e!51460)))

(declare-fun c!12129 () Bool)

(assert (=> b!78734 (= c!12129 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78735 () Bool)

(declare-fun e!51455 () ListLongMap!1465)

(declare-fun call!7242 () ListLongMap!1465)

(assert (=> b!78735 (= e!51455 call!7242)))

(declare-fun bm!7234 () Bool)

(declare-fun call!7241 () ListLongMap!1465)

(declare-fun call!7239 () ListLongMap!1465)

(assert (=> bm!7234 (= call!7241 call!7239)))

(declare-fun lt!36448 () ListLongMap!1465)

(declare-fun b!78736 () Bool)

(declare-fun e!51459 () Bool)

(assert (=> b!78736 (= e!51459 (= (apply!79 lt!36448 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78736 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))))))))

(assert (=> b!78736 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78737 () Bool)

(declare-fun e!51456 () Bool)

(assert (=> b!78737 (= e!51460 e!51456)))

(declare-fun res!41193 () Bool)

(declare-fun call!7238 () Bool)

(assert (=> b!78737 (= res!41193 call!7238)))

(assert (=> b!78737 (=> (not res!41193) (not e!51456))))

(declare-fun bm!7235 () Bool)

(declare-fun call!7240 () Bool)

(assert (=> bm!7235 (= call!7240 (contains!745 lt!36448 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78739 () Bool)

(declare-fun e!51454 () Bool)

(assert (=> b!78739 (= e!51454 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78740 () Bool)

(declare-fun e!51461 () Unit!2263)

(declare-fun Unit!2295 () Unit!2263)

(assert (=> b!78740 (= e!51461 Unit!2295)))

(declare-fun bm!7236 () Bool)

(assert (=> bm!7236 (= call!7239 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78741 () Bool)

(declare-fun e!51451 () ListLongMap!1465)

(declare-fun call!7237 () ListLongMap!1465)

(assert (=> b!78741 (= e!51451 call!7237)))

(declare-fun b!78742 () Bool)

(declare-fun e!51450 () Bool)

(assert (=> b!78742 (= e!51462 e!51450)))

(declare-fun c!12125 () Bool)

(assert (=> b!78742 (= c!12125 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78743 () Bool)

(declare-fun lt!36450 () Unit!2263)

(assert (=> b!78743 (= e!51461 lt!36450)))

(declare-fun lt!36449 () ListLongMap!1465)

(assert (=> b!78743 (= lt!36449 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36455 () (_ BitVec 64))

(assert (=> b!78743 (= lt!36455 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36446 () (_ BitVec 64))

(assert (=> b!78743 (= lt!36446 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36440 () Unit!2263)

(assert (=> b!78743 (= lt!36440 (addStillContains!55 lt!36449 lt!36455 (zeroValue!2170 newMap!16) lt!36446))))

(assert (=> b!78743 (contains!745 (+!109 lt!36449 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16))) lt!36446)))

(declare-fun lt!36445 () Unit!2263)

(assert (=> b!78743 (= lt!36445 lt!36440)))

(declare-fun lt!36456 () ListLongMap!1465)

(assert (=> b!78743 (= lt!36456 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36457 () (_ BitVec 64))

(assert (=> b!78743 (= lt!36457 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36453 () (_ BitVec 64))

(assert (=> b!78743 (= lt!36453 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36444 () Unit!2263)

(assert (=> b!78743 (= lt!36444 (addApplyDifferent!55 lt!36456 lt!36457 (minValue!2170 newMap!16) lt!36453))))

(assert (=> b!78743 (= (apply!79 (+!109 lt!36456 (tuple2!2191 lt!36457 (minValue!2170 newMap!16))) lt!36453) (apply!79 lt!36456 lt!36453))))

(declare-fun lt!36436 () Unit!2263)

(assert (=> b!78743 (= lt!36436 lt!36444)))

(declare-fun lt!36452 () ListLongMap!1465)

(assert (=> b!78743 (= lt!36452 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36438 () (_ BitVec 64))

(assert (=> b!78743 (= lt!36438 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36442 () (_ BitVec 64))

(assert (=> b!78743 (= lt!36442 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36454 () Unit!2263)

(assert (=> b!78743 (= lt!36454 (addApplyDifferent!55 lt!36452 lt!36438 (zeroValue!2170 newMap!16) lt!36442))))

(assert (=> b!78743 (= (apply!79 (+!109 lt!36452 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16))) lt!36442) (apply!79 lt!36452 lt!36442))))

(declare-fun lt!36441 () Unit!2263)

(assert (=> b!78743 (= lt!36441 lt!36454)))

(declare-fun lt!36437 () ListLongMap!1465)

(assert (=> b!78743 (= lt!36437 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36439 () (_ BitVec 64))

(assert (=> b!78743 (= lt!36439 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36451 () (_ BitVec 64))

(assert (=> b!78743 (= lt!36451 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78743 (= lt!36450 (addApplyDifferent!55 lt!36437 lt!36439 (minValue!2170 newMap!16) lt!36451))))

(assert (=> b!78743 (= (apply!79 (+!109 lt!36437 (tuple2!2191 lt!36439 (minValue!2170 newMap!16))) lt!36451) (apply!79 lt!36437 lt!36451))))

(declare-fun b!78744 () Bool)

(declare-fun e!51452 () Bool)

(assert (=> b!78744 (= e!51452 e!51459)))

(declare-fun res!41191 () Bool)

(assert (=> b!78744 (=> (not res!41191) (not e!51459))))

(assert (=> b!78744 (= res!41191 (contains!745 lt!36448 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78744 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78745 () Bool)

(assert (=> b!78745 (= e!51453 e!51455)))

(declare-fun c!12126 () Bool)

(assert (=> b!78745 (= c!12126 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7237 () Bool)

(assert (=> bm!7237 (= call!7242 call!7243)))

(declare-fun b!78746 () Bool)

(declare-fun res!41189 () Bool)

(assert (=> b!78746 (=> (not res!41189) (not e!51462))))

(assert (=> b!78746 (= res!41189 e!51452)))

(declare-fun res!41190 () Bool)

(assert (=> b!78746 (=> res!41190 e!51452)))

(declare-fun e!51457 () Bool)

(assert (=> b!78746 (= res!41190 (not e!51457))))

(declare-fun res!41194 () Bool)

(assert (=> b!78746 (=> (not res!41194) (not e!51457))))

(assert (=> b!78746 (= res!41194 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78747 () Bool)

(declare-fun c!12127 () Bool)

(assert (=> b!78747 (= c!12127 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78747 (= e!51455 e!51451)))

(declare-fun b!78748 () Bool)

(assert (=> b!78748 (= e!51457 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78749 () Bool)

(assert (=> b!78749 (= e!51451 call!7242)))

(declare-fun bm!7238 () Bool)

(declare-fun c!12124 () Bool)

(assert (=> bm!7238 (= call!7243 (+!109 (ite c!12124 call!7239 (ite c!12126 call!7241 call!7237)) (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun bm!7239 () Bool)

(assert (=> bm!7239 (= call!7238 (contains!745 lt!36448 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78750 () Bool)

(assert (=> b!78750 (= e!51460 (not call!7238))))

(declare-fun b!78738 () Bool)

(declare-fun e!51458 () Bool)

(assert (=> b!78738 (= e!51450 e!51458)))

(declare-fun res!41196 () Bool)

(assert (=> b!78738 (= res!41196 call!7240)))

(assert (=> b!78738 (=> (not res!41196) (not e!51458))))

(declare-fun d!18697 () Bool)

(assert (=> d!18697 e!51462))

(declare-fun res!41197 () Bool)

(assert (=> d!18697 (=> (not res!41197) (not e!51462))))

(assert (=> d!18697 (= res!41197 (or (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))))

(declare-fun lt!36447 () ListLongMap!1465)

(assert (=> d!18697 (= lt!36448 lt!36447)))

(declare-fun lt!36443 () Unit!2263)

(assert (=> d!18697 (= lt!36443 e!51461)))

(declare-fun c!12128 () Bool)

(assert (=> d!18697 (= c!12128 e!51454)))

(declare-fun res!41195 () Bool)

(assert (=> d!18697 (=> (not res!41195) (not e!51454))))

(assert (=> d!18697 (= res!41195 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18697 (= lt!36447 e!51453)))

(assert (=> d!18697 (= c!12124 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18697 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18697 (= (getCurrentListMap!435 (_keys!3932 newMap!16) (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36448)))

(declare-fun bm!7240 () Bool)

(assert (=> bm!7240 (= call!7237 call!7241)))

(declare-fun b!78751 () Bool)

(assert (=> b!78751 (= e!51458 (= (apply!79 lt!36448 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!78752 () Bool)

(assert (=> b!78752 (= e!51450 (not call!7240))))

(declare-fun b!78753 () Bool)

(assert (=> b!78753 (= e!51456 (= (apply!79 lt!36448 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(assert (= (and d!18697 c!12124) b!78733))

(assert (= (and d!18697 (not c!12124)) b!78745))

(assert (= (and b!78745 c!12126) b!78735))

(assert (= (and b!78745 (not c!12126)) b!78747))

(assert (= (and b!78747 c!12127) b!78749))

(assert (= (and b!78747 (not c!12127)) b!78741))

(assert (= (or b!78749 b!78741) bm!7240))

(assert (= (or b!78735 bm!7240) bm!7234))

(assert (= (or b!78735 b!78749) bm!7237))

(assert (= (or b!78733 bm!7234) bm!7236))

(assert (= (or b!78733 bm!7237) bm!7238))

(assert (= (and d!18697 res!41195) b!78739))

(assert (= (and d!18697 c!12128) b!78743))

(assert (= (and d!18697 (not c!12128)) b!78740))

(assert (= (and d!18697 res!41197) b!78746))

(assert (= (and b!78746 res!41194) b!78748))

(assert (= (and b!78746 (not res!41190)) b!78744))

(assert (= (and b!78744 res!41191) b!78736))

(assert (= (and b!78746 res!41189) b!78734))

(assert (= (and b!78734 c!12129) b!78737))

(assert (= (and b!78734 (not c!12129)) b!78750))

(assert (= (and b!78737 res!41193) b!78753))

(assert (= (or b!78737 b!78750) bm!7239))

(assert (= (and b!78734 res!41192) b!78742))

(assert (= (and b!78742 c!12125) b!78738))

(assert (= (and b!78742 (not c!12125)) b!78752))

(assert (= (and b!78738 res!41196) b!78751))

(assert (= (or b!78738 b!78752) bm!7235))

(declare-fun b_lambda!3521 () Bool)

(assert (=> (not b_lambda!3521) (not b!78736)))

(assert (=> b!78736 t!5191))

(declare-fun b_and!4829 () Bool)

(assert (= b_and!4825 (and (=> t!5191 result!2829) b_and!4829)))

(assert (=> b!78736 t!5193))

(declare-fun b_and!4831 () Bool)

(assert (= b_and!4827 (and (=> t!5193 result!2831) b_and!4831)))

(declare-fun m!79015 () Bool)

(assert (=> bm!7239 m!79015))

(declare-fun m!79017 () Bool)

(assert (=> bm!7236 m!79017))

(declare-fun m!79019 () Bool)

(assert (=> bm!7235 m!79019))

(declare-fun m!79021 () Bool)

(assert (=> b!78743 m!79021))

(declare-fun m!79023 () Bool)

(assert (=> b!78743 m!79023))

(declare-fun m!79025 () Bool)

(assert (=> b!78743 m!79025))

(declare-fun m!79027 () Bool)

(assert (=> b!78743 m!79027))

(declare-fun m!79029 () Bool)

(assert (=> b!78743 m!79029))

(declare-fun m!79031 () Bool)

(assert (=> b!78743 m!79031))

(declare-fun m!79033 () Bool)

(assert (=> b!78743 m!79033))

(assert (=> b!78743 m!79025))

(declare-fun m!79035 () Bool)

(assert (=> b!78743 m!79035))

(declare-fun m!79037 () Bool)

(assert (=> b!78743 m!79037))

(assert (=> b!78743 m!78153))

(assert (=> b!78743 m!79037))

(declare-fun m!79039 () Bool)

(assert (=> b!78743 m!79039))

(assert (=> b!78743 m!79023))

(declare-fun m!79041 () Bool)

(assert (=> b!78743 m!79041))

(declare-fun m!79043 () Bool)

(assert (=> b!78743 m!79043))

(assert (=> b!78743 m!79043))

(declare-fun m!79045 () Bool)

(assert (=> b!78743 m!79045))

(declare-fun m!79047 () Bool)

(assert (=> b!78743 m!79047))

(assert (=> b!78743 m!79017))

(declare-fun m!79049 () Bool)

(assert (=> b!78743 m!79049))

(assert (=> d!18697 m!78167))

(declare-fun m!79051 () Bool)

(assert (=> b!78736 m!79051))

(assert (=> b!78736 m!78153))

(declare-fun m!79053 () Bool)

(assert (=> b!78736 m!79053))

(assert (=> b!78736 m!79051))

(assert (=> b!78736 m!78273))

(declare-fun m!79055 () Bool)

(assert (=> b!78736 m!79055))

(assert (=> b!78736 m!78273))

(assert (=> b!78736 m!78153))

(declare-fun m!79057 () Bool)

(assert (=> bm!7238 m!79057))

(declare-fun m!79059 () Bool)

(assert (=> b!78733 m!79059))

(assert (=> b!78739 m!78153))

(assert (=> b!78739 m!78153))

(assert (=> b!78739 m!78155))

(assert (=> b!78744 m!78153))

(assert (=> b!78744 m!78153))

(declare-fun m!79061 () Bool)

(assert (=> b!78744 m!79061))

(declare-fun m!79063 () Bool)

(assert (=> b!78753 m!79063))

(declare-fun m!79065 () Bool)

(assert (=> b!78751 m!79065))

(assert (=> b!78748 m!78153))

(assert (=> b!78748 m!78153))

(assert (=> b!78748 m!78155))

(assert (=> bm!7167 d!18697))

(declare-fun d!18699 () Bool)

(declare-fun e!51463 () Bool)

(assert (=> d!18699 e!51463))

(declare-fun res!41198 () Bool)

(assert (=> d!18699 (=> (not res!41198) (not e!51463))))

(declare-fun lt!36461 () ListLongMap!1465)

(assert (=> d!18699 (= res!41198 (contains!745 lt!36461 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36458 () List!1533)

(assert (=> d!18699 (= lt!36461 (ListLongMap!1466 lt!36458))))

(declare-fun lt!36460 () Unit!2263)

(declare-fun lt!36459 () Unit!2263)

(assert (=> d!18699 (= lt!36460 lt!36459)))

(assert (=> d!18699 (= (getValueByKey!136 lt!36458 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18699 (= lt!36459 (lemmaContainsTupThenGetReturnValue!55 lt!36458 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18699 (= lt!36458 (insertStrictlySorted!57 (toList!748 call!7099) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18699 (= (+!109 call!7099 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36461)))

(declare-fun b!78754 () Bool)

(declare-fun res!41199 () Bool)

(assert (=> b!78754 (=> (not res!41199) (not e!51463))))

(assert (=> b!78754 (= res!41199 (= (getValueByKey!136 (toList!748 lt!36461) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!78755 () Bool)

(assert (=> b!78755 (= e!51463 (contains!748 (toList!748 lt!36461) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18699 res!41198) b!78754))

(assert (= (and b!78754 res!41199) b!78755))

(declare-fun m!79067 () Bool)

(assert (=> d!18699 m!79067))

(declare-fun m!79069 () Bool)

(assert (=> d!18699 m!79069))

(declare-fun m!79071 () Bool)

(assert (=> d!18699 m!79071))

(declare-fun m!79073 () Bool)

(assert (=> d!18699 m!79073))

(declare-fun m!79075 () Bool)

(assert (=> b!78754 m!79075))

(declare-fun m!79077 () Bool)

(assert (=> b!78755 m!79077))

(assert (=> b!78061 d!18699))

(declare-fun d!18701 () Bool)

(declare-fun e!51465 () Bool)

(assert (=> d!18701 e!51465))

(declare-fun res!41200 () Bool)

(assert (=> d!18701 (=> res!41200 e!51465)))

(declare-fun lt!36462 () Bool)

(assert (=> d!18701 (= res!41200 (not lt!36462))))

(declare-fun lt!36463 () Bool)

(assert (=> d!18701 (= lt!36462 lt!36463)))

(declare-fun lt!36464 () Unit!2263)

(declare-fun e!51464 () Unit!2263)

(assert (=> d!18701 (= lt!36464 e!51464)))

(declare-fun c!12130 () Bool)

(assert (=> d!18701 (= c!12130 lt!36463)))

(assert (=> d!18701 (= lt!36463 (containsKey!140 (toList!748 lt!35888) (_1!1105 lt!35788)))))

(assert (=> d!18701 (= (contains!745 lt!35888 (_1!1105 lt!35788)) lt!36462)))

(declare-fun b!78756 () Bool)

(declare-fun lt!36465 () Unit!2263)

(assert (=> b!78756 (= e!51464 lt!36465)))

(assert (=> b!78756 (= lt!36465 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35888) (_1!1105 lt!35788)))))

(assert (=> b!78756 (isDefined!90 (getValueByKey!136 (toList!748 lt!35888) (_1!1105 lt!35788)))))

(declare-fun b!78757 () Bool)

(declare-fun Unit!2296 () Unit!2263)

(assert (=> b!78757 (= e!51464 Unit!2296)))

(declare-fun b!78758 () Bool)

(assert (=> b!78758 (= e!51465 (isDefined!90 (getValueByKey!136 (toList!748 lt!35888) (_1!1105 lt!35788))))))

(assert (= (and d!18701 c!12130) b!78756))

(assert (= (and d!18701 (not c!12130)) b!78757))

(assert (= (and d!18701 (not res!41200)) b!78758))

(declare-fun m!79079 () Bool)

(assert (=> d!18701 m!79079))

(declare-fun m!79081 () Bool)

(assert (=> b!78756 m!79081))

(assert (=> b!78756 m!77941))

(assert (=> b!78756 m!77941))

(declare-fun m!79083 () Bool)

(assert (=> b!78756 m!79083))

(assert (=> b!78758 m!77941))

(assert (=> b!78758 m!77941))

(assert (=> b!78758 m!79083))

(assert (=> d!18431 d!18701))

(declare-fun b!78760 () Bool)

(declare-fun e!51466 () Option!142)

(declare-fun e!51467 () Option!142)

(assert (=> b!78760 (= e!51466 e!51467)))

(declare-fun c!12132 () Bool)

(assert (=> b!78760 (= c!12132 (and ((_ is Cons!1529) lt!35885) (not (= (_1!1105 (h!2117 lt!35885)) (_1!1105 lt!35788)))))))

(declare-fun b!78759 () Bool)

(assert (=> b!78759 (= e!51466 (Some!141 (_2!1105 (h!2117 lt!35885))))))

(declare-fun b!78761 () Bool)

(assert (=> b!78761 (= e!51467 (getValueByKey!136 (t!5183 lt!35885) (_1!1105 lt!35788)))))

(declare-fun b!78762 () Bool)

(assert (=> b!78762 (= e!51467 None!140)))

(declare-fun d!18703 () Bool)

(declare-fun c!12131 () Bool)

(assert (=> d!18703 (= c!12131 (and ((_ is Cons!1529) lt!35885) (= (_1!1105 (h!2117 lt!35885)) (_1!1105 lt!35788))))))

(assert (=> d!18703 (= (getValueByKey!136 lt!35885 (_1!1105 lt!35788)) e!51466)))

(assert (= (and d!18703 c!12131) b!78759))

(assert (= (and d!18703 (not c!12131)) b!78760))

(assert (= (and b!78760 c!12132) b!78761))

(assert (= (and b!78760 (not c!12132)) b!78762))

(declare-fun m!79085 () Bool)

(assert (=> b!78761 m!79085))

(assert (=> d!18431 d!18703))

(declare-fun d!18705 () Bool)

(assert (=> d!18705 (= (getValueByKey!136 lt!35885 (_1!1105 lt!35788)) (Some!141 (_2!1105 lt!35788)))))

(declare-fun lt!36466 () Unit!2263)

(assert (=> d!18705 (= lt!36466 (choose!468 lt!35885 (_1!1105 lt!35788) (_2!1105 lt!35788)))))

(declare-fun e!51468 () Bool)

(assert (=> d!18705 e!51468))

(declare-fun res!41201 () Bool)

(assert (=> d!18705 (=> (not res!41201) (not e!51468))))

(assert (=> d!18705 (= res!41201 (isStrictlySorted!290 lt!35885))))

(assert (=> d!18705 (= (lemmaContainsTupThenGetReturnValue!55 lt!35885 (_1!1105 lt!35788) (_2!1105 lt!35788)) lt!36466)))

(declare-fun b!78763 () Bool)

(declare-fun res!41202 () Bool)

(assert (=> b!78763 (=> (not res!41202) (not e!51468))))

(assert (=> b!78763 (= res!41202 (containsKey!140 lt!35885 (_1!1105 lt!35788)))))

(declare-fun b!78764 () Bool)

(assert (=> b!78764 (= e!51468 (contains!748 lt!35885 (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(assert (= (and d!18705 res!41201) b!78763))

(assert (= (and b!78763 res!41202) b!78764))

(assert (=> d!18705 m!77935))

(declare-fun m!79087 () Bool)

(assert (=> d!18705 m!79087))

(declare-fun m!79089 () Bool)

(assert (=> d!18705 m!79089))

(declare-fun m!79091 () Bool)

(assert (=> b!78763 m!79091))

(declare-fun m!79093 () Bool)

(assert (=> b!78764 m!79093))

(assert (=> d!18431 d!18705))

(declare-fun b!78765 () Bool)

(declare-fun c!12133 () Bool)

(assert (=> b!78765 (= c!12133 (and ((_ is Cons!1529) (toList!748 lt!35776)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35776))) (_1!1105 lt!35788))))))

(declare-fun e!51472 () List!1533)

(declare-fun e!51469 () List!1533)

(assert (=> b!78765 (= e!51472 e!51469)))

(declare-fun e!51471 () List!1533)

(declare-fun call!7246 () List!1533)

(declare-fun bm!7241 () Bool)

(declare-fun c!12134 () Bool)

(assert (=> bm!7241 (= call!7246 ($colon$colon!68 e!51471 (ite c!12134 (h!2117 (toList!748 lt!35776)) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788)))))))

(declare-fun c!12135 () Bool)

(assert (=> bm!7241 (= c!12135 c!12134)))

(declare-fun d!18707 () Bool)

(declare-fun e!51473 () Bool)

(assert (=> d!18707 e!51473))

(declare-fun res!41203 () Bool)

(assert (=> d!18707 (=> (not res!41203) (not e!51473))))

(declare-fun lt!36467 () List!1533)

(assert (=> d!18707 (= res!41203 (isStrictlySorted!290 lt!36467))))

(declare-fun e!51470 () List!1533)

(assert (=> d!18707 (= lt!36467 e!51470)))

(assert (=> d!18707 (= c!12134 (and ((_ is Cons!1529) (toList!748 lt!35776)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35776))) (_1!1105 lt!35788))))))

(assert (=> d!18707 (isStrictlySorted!290 (toList!748 lt!35776))))

(assert (=> d!18707 (= (insertStrictlySorted!57 (toList!748 lt!35776) (_1!1105 lt!35788) (_2!1105 lt!35788)) lt!36467)))

(declare-fun c!12136 () Bool)

(declare-fun b!78766 () Bool)

(assert (=> b!78766 (= e!51471 (ite c!12136 (t!5183 (toList!748 lt!35776)) (ite c!12133 (Cons!1529 (h!2117 (toList!748 lt!35776)) (t!5183 (toList!748 lt!35776))) Nil!1530)))))

(declare-fun bm!7242 () Bool)

(declare-fun call!7245 () List!1533)

(assert (=> bm!7242 (= call!7245 call!7246)))

(declare-fun b!78767 () Bool)

(assert (=> b!78767 (= e!51470 call!7246)))

(declare-fun b!78768 () Bool)

(declare-fun res!41204 () Bool)

(assert (=> b!78768 (=> (not res!41204) (not e!51473))))

(assert (=> b!78768 (= res!41204 (containsKey!140 lt!36467 (_1!1105 lt!35788)))))

(declare-fun b!78769 () Bool)

(declare-fun call!7244 () List!1533)

(assert (=> b!78769 (= e!51469 call!7244)))

(declare-fun b!78770 () Bool)

(assert (=> b!78770 (= e!51472 call!7245)))

(declare-fun b!78771 () Bool)

(assert (=> b!78771 (= e!51470 e!51472)))

(assert (=> b!78771 (= c!12136 (and ((_ is Cons!1529) (toList!748 lt!35776)) (= (_1!1105 (h!2117 (toList!748 lt!35776))) (_1!1105 lt!35788))))))

(declare-fun bm!7243 () Bool)

(assert (=> bm!7243 (= call!7244 call!7245)))

(declare-fun b!78772 () Bool)

(assert (=> b!78772 (= e!51471 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35776)) (_1!1105 lt!35788) (_2!1105 lt!35788)))))

(declare-fun b!78773 () Bool)

(assert (=> b!78773 (= e!51473 (contains!748 lt!36467 (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun b!78774 () Bool)

(assert (=> b!78774 (= e!51469 call!7244)))

(assert (= (and d!18707 c!12134) b!78767))

(assert (= (and d!18707 (not c!12134)) b!78771))

(assert (= (and b!78771 c!12136) b!78770))

(assert (= (and b!78771 (not c!12136)) b!78765))

(assert (= (and b!78765 c!12133) b!78774))

(assert (= (and b!78765 (not c!12133)) b!78769))

(assert (= (or b!78774 b!78769) bm!7243))

(assert (= (or b!78770 bm!7243) bm!7242))

(assert (= (or b!78767 bm!7242) bm!7241))

(assert (= (and bm!7241 c!12135) b!78772))

(assert (= (and bm!7241 (not c!12135)) b!78766))

(assert (= (and d!18707 res!41203) b!78768))

(assert (= (and b!78768 res!41204) b!78773))

(declare-fun m!79095 () Bool)

(assert (=> b!78768 m!79095))

(declare-fun m!79097 () Bool)

(assert (=> b!78773 m!79097))

(declare-fun m!79099 () Bool)

(assert (=> d!18707 m!79099))

(declare-fun m!79101 () Bool)

(assert (=> d!18707 m!79101))

(declare-fun m!79103 () Bool)

(assert (=> bm!7241 m!79103))

(declare-fun m!79105 () Bool)

(assert (=> b!78772 m!79105))

(assert (=> d!18431 d!18707))

(declare-fun b!78776 () Bool)

(declare-fun e!51474 () Option!142)

(declare-fun e!51475 () Option!142)

(assert (=> b!78776 (= e!51474 e!51475)))

(declare-fun c!12138 () Bool)

(assert (=> b!78776 (= c!12138 (and ((_ is Cons!1529) (toList!748 lt!35907)) (not (= (_1!1105 (h!2117 (toList!748 lt!35907))) (_1!1105 lt!35784)))))))

(declare-fun b!78775 () Bool)

(assert (=> b!78775 (= e!51474 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35907)))))))

(declare-fun b!78777 () Bool)

(assert (=> b!78777 (= e!51475 (getValueByKey!136 (t!5183 (toList!748 lt!35907)) (_1!1105 lt!35784)))))

(declare-fun b!78778 () Bool)

(assert (=> b!78778 (= e!51475 None!140)))

(declare-fun d!18709 () Bool)

(declare-fun c!12137 () Bool)

(assert (=> d!18709 (= c!12137 (and ((_ is Cons!1529) (toList!748 lt!35907)) (= (_1!1105 (h!2117 (toList!748 lt!35907))) (_1!1105 lt!35784))))))

(assert (=> d!18709 (= (getValueByKey!136 (toList!748 lt!35907) (_1!1105 lt!35784)) e!51474)))

(assert (= (and d!18709 c!12137) b!78775))

(assert (= (and d!18709 (not c!12137)) b!78776))

(assert (= (and b!78776 c!12138) b!78777))

(assert (= (and b!78776 (not c!12138)) b!78778))

(declare-fun m!79107 () Bool)

(assert (=> b!78777 m!79107))

(assert (=> b!78015 d!18709))

(declare-fun d!18711 () Bool)

(declare-fun res!41205 () Bool)

(declare-fun e!51476 () Bool)

(assert (=> d!18711 (=> res!41205 e!51476)))

(assert (=> d!18711 (= res!41205 (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!18711 (= (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!51476)))

(declare-fun b!78779 () Bool)

(declare-fun e!51477 () Bool)

(assert (=> b!78779 (= e!51476 e!51477)))

(declare-fun res!41206 () Bool)

(assert (=> b!78779 (=> (not res!41206) (not e!51477))))

(assert (=> b!78779 (= res!41206 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!78780 () Bool)

(assert (=> b!78780 (= e!51477 (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!18711 (not res!41205)) b!78779))

(assert (= (and b!78779 res!41206) b!78780))

(assert (=> d!18711 m!78185))

(assert (=> b!78780 m!77749))

(declare-fun m!79109 () Bool)

(assert (=> b!78780 m!79109))

(assert (=> b!77943 d!18711))

(declare-fun b!78781 () Bool)

(declare-fun e!51478 () Bool)

(assert (=> b!78781 (= e!51478 tp_is_empty!2511)))

(declare-fun condMapEmpty!3315 () Bool)

(declare-fun mapDefault!3315 () ValueCell!912)

(assert (=> mapNonEmpty!3313 (= condMapEmpty!3315 (= mapRest!3313 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3315)))))

(declare-fun e!51479 () Bool)

(declare-fun mapRes!3315 () Bool)

(assert (=> mapNonEmpty!3313 (= tp!8785 (and e!51479 mapRes!3315))))

(declare-fun b!78782 () Bool)

(assert (=> b!78782 (= e!51479 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3315 () Bool)

(assert (=> mapIsEmpty!3315 mapRes!3315))

(declare-fun mapNonEmpty!3315 () Bool)

(declare-fun tp!8787 () Bool)

(assert (=> mapNonEmpty!3315 (= mapRes!3315 (and tp!8787 e!51478))))

(declare-fun mapValue!3315 () ValueCell!912)

(declare-fun mapKey!3315 () (_ BitVec 32))

(declare-fun mapRest!3315 () (Array (_ BitVec 32) ValueCell!912))

(assert (=> mapNonEmpty!3315 (= mapRest!3313 (store mapRest!3315 mapKey!3315 mapValue!3315))))

(assert (= (and mapNonEmpty!3313 condMapEmpty!3315) mapIsEmpty!3315))

(assert (= (and mapNonEmpty!3313 (not condMapEmpty!3315)) mapNonEmpty!3315))

(assert (= (and mapNonEmpty!3315 ((_ is ValueCellFull!912) mapValue!3315)) b!78781))

(assert (= (and mapNonEmpty!3313 ((_ is ValueCellFull!912) mapDefault!3315)) b!78782))

(declare-fun m!79111 () Bool)

(assert (=> mapNonEmpty!3315 m!79111))

(declare-fun b!78783 () Bool)

(declare-fun e!51480 () Bool)

(assert (=> b!78783 (= e!51480 tp_is_empty!2511)))

(declare-fun condMapEmpty!3316 () Bool)

(declare-fun mapDefault!3316 () ValueCell!912)

(assert (=> mapNonEmpty!3314 (= condMapEmpty!3316 (= mapRest!3314 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3316)))))

(declare-fun e!51481 () Bool)

(declare-fun mapRes!3316 () Bool)

(assert (=> mapNonEmpty!3314 (= tp!8786 (and e!51481 mapRes!3316))))

(declare-fun b!78784 () Bool)

(assert (=> b!78784 (= e!51481 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3316 () Bool)

(assert (=> mapIsEmpty!3316 mapRes!3316))

(declare-fun mapNonEmpty!3316 () Bool)

(declare-fun tp!8788 () Bool)

(assert (=> mapNonEmpty!3316 (= mapRes!3316 (and tp!8788 e!51480))))

(declare-fun mapRest!3316 () (Array (_ BitVec 32) ValueCell!912))

(declare-fun mapValue!3316 () ValueCell!912)

(declare-fun mapKey!3316 () (_ BitVec 32))

(assert (=> mapNonEmpty!3316 (= mapRest!3314 (store mapRest!3316 mapKey!3316 mapValue!3316))))

(assert (= (and mapNonEmpty!3314 condMapEmpty!3316) mapIsEmpty!3316))

(assert (= (and mapNonEmpty!3314 (not condMapEmpty!3316)) mapNonEmpty!3316))

(assert (= (and mapNonEmpty!3316 ((_ is ValueCellFull!912) mapValue!3316)) b!78783))

(assert (= (and mapNonEmpty!3314 ((_ is ValueCellFull!912) mapDefault!3316)) b!78784))

(declare-fun m!79113 () Bool)

(assert (=> mapNonEmpty!3316 m!79113))

(declare-fun b_lambda!3523 () Bool)

(assert (= b_lambda!3515 (or (and b!77850 b_free!2189) (and b!77841 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))))) b_lambda!3523)))

(declare-fun b_lambda!3525 () Bool)

(assert (= b_lambda!3517 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3525)))

(declare-fun b_lambda!3527 () Bool)

(assert (= b_lambda!3513 (or (and b!77850 b_free!2189) (and b!77841 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))))) b_lambda!3527)))

(declare-fun b_lambda!3529 () Bool)

(assert (= b_lambda!3521 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3529)))

(declare-fun b_lambda!3531 () Bool)

(assert (= b_lambda!3519 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3531)))

(check-sat (not d!18653) (not b!78500) (not b!78383) (not d!18531) (not b!78241) (not d!18663) (not d!18605) (not b!78465) (not b!78363) (not bm!7235) (not d!18549) (not d!18649) tp_is_empty!2511 (not d!18651) (not b!78586) (not bm!7181) (not b!78531) (not d!18475) (not b!78334) (not bm!7199) (not d!18701) (not b!78606) (not bm!7176) (not b!78756) (not b!78462) (not b_lambda!3523) (not b!78692) (not b!78460) (not d!18629) (not b!78675) b_and!4831 (not b!78714) (not b!78671) (not d!18697) (not b!78302) (not bm!7223) (not b!78644) (not d!18551) (not bm!7205) (not b!78299) (not b!78483) (not b!78476) (not b!78593) (not d!18525) (not b!78377) (not b!78682) (not b!78430) (not b!78477) (not b!78293) (not bm!7178) (not b_lambda!3525) (not b!78521) (not b!78768) (not d!18597) (not b!78552) (not b!78676) (not b!78495) (not b!78763) (not d!18561) (not b!78561) (not b!78303) (not b!78339) (not bm!7182) (not b!78423) (not b!78472) (not bm!7239) (not b!78369) (not d!18503) (not d!18477) (not b!78558) (not d!18641) (not d!18499) (not bm!7226) (not b!78414) (not d!18487) (not b!78360) (not b!78317) (not b!78422) (not bm!7193) (not d!18577) (not d!18689) (not b!78595) (not b!78556) (not b!78282) (not d!18619) (not b!78548) (not d!18587) (not b!78284) (not b!78726) (not d!18667) (not d!18559) (not b_lambda!3531) (not bm!7179) (not b!78427) (not d!18675) (not b_next!2191) (not b!78578) (not d!18575) (not d!18609) (not d!18555) (not b!78755) (not b!78748) (not bm!7184) (not d!18613) (not b_lambda!3507) (not b!78516) (not bm!7210) (not d!18465) (not b!78428) (not d!18469) (not bm!7225) (not b!78590) (not b!78371) (not b!78780) (not b!78563) (not b!78429) (not b!78705) (not b!78661) (not b!78291) (not b!78526) (not b!78378) (not b!78490) (not b!78598) (not b!78777) (not b_next!2189) (not b!78573) (not d!18479) (not b!78239) (not b!78773) (not d!18645) (not b!78298) (not b!78380) (not d!18537) (not b!78310) (not b!78286) (not bm!7209) (not b!78733) (not d!18695) (not b!78721) (not d!18491) (not d!18509) (not b!78431) (not b!78530) (not d!18547) (not b!78739) (not bm!7238) (not d!18567) (not d!18677) (not b!78686) (not b!78443) (not mapNonEmpty!3315) (not b!78294) (not b_lambda!3529) (not b!78419) (not b!78600) (not b!78366) (not b!78256) (not b!78290) (not b!78684) (not b!78519) (not b!78306) (not b!78481) (not d!18553) (not b!78390) (not b!78342) (not d!18621) (not b!78772) (not b!78326) (not d!18489) (not b!78442) (not bm!7227) (not bm!7212) (not b!78575) (not b!78743) (not d!18571) (not d!18627) (not d!18471) (not d!18665) (not b!78488) (not b!78585) (not b!78523) (not b!78301) (not d!18569) (not b!78321) (not b!78458) (not bm!7177) (not b!78555) (not b!78646) (not b!78659) (not b!78389) (not b!78300) (not b!78696) (not b!78288) (not b!78281) (not d!18647) (not b!78736) (not d!18633) (not b!78572) (not b!78467) (not d!18563) (not d!18535) (not b!78237) (not b!78732) (not d!18599) (not b!78332) (not b!78485) (not b!78744) (not d!18707) (not b!78329) (not d!18661) (not b!78344) (not b!78667) (not b!78444) (not d!18673) (not d!18669) (not d!18643) (not b!78751) (not b!78689) (not b!78468) (not d!18607) (not d!18505) (not b!78512) (not b!78758) (not bm!7204) (not b!78491) (not b!78651) (not d!18543) (not b!78522) (not b_lambda!3527) (not b!78603) (not b!78723) (not b!78524) (not b_lambda!3509) (not b!78480) (not b!78532) (not b!78607) (not d!18585) (not b!78436) (not d!18623) (not b!78308) (not bm!7241) (not bm!7230) (not b!78666) (not b!78254) b_and!4829 (not d!18657) (not b!78322) (not d!18637) (not b!78605) (not b!78340) (not d!18523) (not d!18565) (not d!18583) (not d!18581) (not b!78457) (not d!18539) (not b!78717) (not bm!7233) (not b!78295) (not b!78528) (not b!78525) (not d!18557) (not b!78553) (not b!78314) (not b!78341) (not b!78728) (not b!78710) (not d!18529) (not b!78440) (not d!18483) (not b!78311) (not d!18693) (not d!18591) (not b!78568) (not b!78703) (not bm!7185) (not b!78764) (not d!18635) (not d!18517) (not b!78513) (not d!18497) (not d!18685) (not d!18655) (not b!78761) (not b!78527) (not b_lambda!3511) (not b!78367) (not b!78731) (not b!78716) (not d!18541) (not d!18493) (not b!78754) (not b!78700) (not d!18625) (not d!18519) (not b!78418) (not b!78343) (not b!78482) (not d!18513) (not bm!7213) (not d!18579) (not b!78648) (not bm!7236) (not bm!7196) (not b!78581) (not b!78604) (not d!18593) (not b!78447) (not d!18705) (not d!18615) (not mapNonEmpty!3316) (not d!18611) (not d!18545) (not b!78602) (not bm!7171) (not b!78691) (not b!78601) (not b!78753) (not b!78437) (not b!78499) (not b!78654) (not b!78331) (not b!78253) (not d!18699) (not b!78564) (not b!78658) (not b!78354) (not b!78730) (not d!18511) (not b!78347) (not b!78296) (not d!18603) (not b_lambda!3499) (not b!78701) (not b!78719) (not b!78664) (not b!78425))
(check-sat b_and!4829 b_and!4831 (not b_next!2189) (not b_next!2191))
(get-model)

(declare-fun b!78786 () Bool)

(declare-fun e!51482 () Option!142)

(declare-fun e!51483 () Option!142)

(assert (=> b!78786 (= e!51482 e!51483)))

(declare-fun c!12140 () Bool)

(assert (=> b!78786 (= c!12140 (and ((_ is Cons!1529) (toList!748 lt!36132)) (not (= (_1!1105 (h!2117 (toList!748 lt!36132))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!78785 () Bool)

(assert (=> b!78785 (= e!51482 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36132)))))))

(declare-fun b!78787 () Bool)

(assert (=> b!78787 (= e!51483 (getValueByKey!136 (t!5183 (toList!748 lt!36132)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!78788 () Bool)

(assert (=> b!78788 (= e!51483 None!140)))

(declare-fun d!18713 () Bool)

(declare-fun c!12139 () Bool)

(assert (=> d!18713 (= c!12139 (and ((_ is Cons!1529) (toList!748 lt!36132)) (= (_1!1105 (h!2117 (toList!748 lt!36132))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!18713 (= (getValueByKey!136 (toList!748 lt!36132) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!51482)))

(assert (= (and d!18713 c!12139) b!78785))

(assert (= (and d!18713 (not c!12139)) b!78786))

(assert (= (and b!78786 c!12140) b!78787))

(assert (= (and b!78786 (not c!12140)) b!78788))

(declare-fun m!79115 () Bool)

(assert (=> b!78787 m!79115))

(assert (=> b!78341 d!18713))

(declare-fun d!18715 () Bool)

(declare-fun res!41207 () Bool)

(declare-fun e!51484 () Bool)

(assert (=> d!18715 (=> res!41207 e!51484)))

(assert (=> d!18715 (= res!41207 (and ((_ is Cons!1529) lt!35904) (= (_1!1105 (h!2117 lt!35904)) (_1!1105 lt!35784))))))

(assert (=> d!18715 (= (containsKey!140 lt!35904 (_1!1105 lt!35784)) e!51484)))

(declare-fun b!78789 () Bool)

(declare-fun e!51485 () Bool)

(assert (=> b!78789 (= e!51484 e!51485)))

(declare-fun res!41208 () Bool)

(assert (=> b!78789 (=> (not res!41208) (not e!51485))))

(assert (=> b!78789 (= res!41208 (and (or (not ((_ is Cons!1529) lt!35904)) (bvsle (_1!1105 (h!2117 lt!35904)) (_1!1105 lt!35784))) ((_ is Cons!1529) lt!35904) (bvslt (_1!1105 (h!2117 lt!35904)) (_1!1105 lt!35784))))))

(declare-fun b!78790 () Bool)

(assert (=> b!78790 (= e!51485 (containsKey!140 (t!5183 lt!35904) (_1!1105 lt!35784)))))

(assert (= (and d!18715 (not res!41207)) b!78789))

(assert (= (and b!78789 res!41208) b!78790))

(declare-fun m!79117 () Bool)

(assert (=> b!78790 m!79117))

(assert (=> b!78467 d!18715))

(declare-fun d!18717 () Bool)

(assert (=> d!18717 (= (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78590 d!18717))

(declare-fun b!78792 () Bool)

(declare-fun e!51486 () Option!142)

(declare-fun e!51487 () Option!142)

(assert (=> b!78792 (= e!51486 e!51487)))

(declare-fun c!12142 () Bool)

(assert (=> b!78792 (= c!12142 (and ((_ is Cons!1529) (toList!748 lt!36461)) (not (= (_1!1105 (h!2117 (toList!748 lt!36461))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!78791 () Bool)

(assert (=> b!78791 (= e!51486 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36461)))))))

(declare-fun b!78793 () Bool)

(assert (=> b!78793 (= e!51487 (getValueByKey!136 (t!5183 (toList!748 lt!36461)) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!78794 () Bool)

(assert (=> b!78794 (= e!51487 None!140)))

(declare-fun d!18719 () Bool)

(declare-fun c!12141 () Bool)

(assert (=> d!18719 (= c!12141 (and ((_ is Cons!1529) (toList!748 lt!36461)) (= (_1!1105 (h!2117 (toList!748 lt!36461))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18719 (= (getValueByKey!136 (toList!748 lt!36461) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!51486)))

(assert (= (and d!18719 c!12141) b!78791))

(assert (= (and d!18719 (not c!12141)) b!78792))

(assert (= (and b!78792 c!12142) b!78793))

(assert (= (and b!78792 (not c!12142)) b!78794))

(declare-fun m!79119 () Bool)

(assert (=> b!78793 m!79119))

(assert (=> b!78754 d!18719))

(assert (=> d!18645 d!18641))

(assert (=> d!18645 d!18649))

(assert (=> d!18645 d!18647))

(assert (=> d!18645 d!18643))

(declare-fun d!18721 () Bool)

(assert (=> d!18721 (= (apply!79 (+!109 lt!36116 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16))) lt!36106) (apply!79 lt!36116 lt!36106))))

(declare-fun lt!36468 () Unit!2263)

(assert (=> d!18721 (= lt!36468 (choose!469 lt!36116 lt!36102 (zeroValue!2170 newMap!16) lt!36106))))

(declare-fun e!51488 () Bool)

(assert (=> d!18721 e!51488))

(declare-fun res!41209 () Bool)

(assert (=> d!18721 (=> (not res!41209) (not e!51488))))

(assert (=> d!18721 (= res!41209 (contains!745 lt!36116 lt!36106))))

(assert (=> d!18721 (= (addApplyDifferent!55 lt!36116 lt!36102 (zeroValue!2170 newMap!16) lt!36106) lt!36468)))

(declare-fun b!78795 () Bool)

(assert (=> b!78795 (= e!51488 (not (= lt!36106 lt!36102)))))

(assert (= (and d!18721 res!41209) b!78795))

(assert (=> d!18721 m!78255))

(assert (=> d!18721 m!78257))

(assert (=> d!18721 m!78245))

(declare-fun m!79121 () Bool)

(assert (=> d!18721 m!79121))

(assert (=> d!18721 m!78255))

(declare-fun m!79123 () Bool)

(assert (=> d!18721 m!79123))

(assert (=> b!78321 d!18721))

(declare-fun d!18723 () Bool)

(assert (=> d!18723 (= (apply!79 lt!36101 lt!36115) (get!1192 (getValueByKey!136 (toList!748 lt!36101) lt!36115)))))

(declare-fun bs!3320 () Bool)

(assert (= bs!3320 d!18723))

(declare-fun m!79125 () Bool)

(assert (=> bs!3320 m!79125))

(assert (=> bs!3320 m!79125))

(declare-fun m!79127 () Bool)

(assert (=> bs!3320 m!79127))

(assert (=> b!78321 d!18723))

(declare-fun d!18725 () Bool)

(assert (=> d!18725 (= (apply!79 (+!109 lt!36116 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16))) lt!36106) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!36116 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16)))) lt!36106)))))

(declare-fun bs!3321 () Bool)

(assert (= bs!3321 d!18725))

(declare-fun m!79129 () Bool)

(assert (=> bs!3321 m!79129))

(assert (=> bs!3321 m!79129))

(declare-fun m!79131 () Bool)

(assert (=> bs!3321 m!79131))

(assert (=> b!78321 d!18725))

(declare-fun d!18727 () Bool)

(declare-fun e!51489 () Bool)

(assert (=> d!18727 e!51489))

(declare-fun res!41210 () Bool)

(assert (=> d!18727 (=> (not res!41210) (not e!51489))))

(declare-fun lt!36472 () ListLongMap!1465)

(assert (=> d!18727 (= res!41210 (contains!745 lt!36472 (_1!1105 (tuple2!2191 lt!36121 (minValue!2170 newMap!16)))))))

(declare-fun lt!36469 () List!1533)

(assert (=> d!18727 (= lt!36472 (ListLongMap!1466 lt!36469))))

(declare-fun lt!36471 () Unit!2263)

(declare-fun lt!36470 () Unit!2263)

(assert (=> d!18727 (= lt!36471 lt!36470)))

(assert (=> d!18727 (= (getValueByKey!136 lt!36469 (_1!1105 (tuple2!2191 lt!36121 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36121 (minValue!2170 newMap!16)))))))

(assert (=> d!18727 (= lt!36470 (lemmaContainsTupThenGetReturnValue!55 lt!36469 (_1!1105 (tuple2!2191 lt!36121 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36121 (minValue!2170 newMap!16)))))))

(assert (=> d!18727 (= lt!36469 (insertStrictlySorted!57 (toList!748 lt!36120) (_1!1105 (tuple2!2191 lt!36121 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36121 (minValue!2170 newMap!16)))))))

(assert (=> d!18727 (= (+!109 lt!36120 (tuple2!2191 lt!36121 (minValue!2170 newMap!16))) lt!36472)))

(declare-fun b!78796 () Bool)

(declare-fun res!41211 () Bool)

(assert (=> b!78796 (=> (not res!41211) (not e!51489))))

(assert (=> b!78796 (= res!41211 (= (getValueByKey!136 (toList!748 lt!36472) (_1!1105 (tuple2!2191 lt!36121 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36121 (minValue!2170 newMap!16))))))))

(declare-fun b!78797 () Bool)

(assert (=> b!78797 (= e!51489 (contains!748 (toList!748 lt!36472) (tuple2!2191 lt!36121 (minValue!2170 newMap!16))))))

(assert (= (and d!18727 res!41210) b!78796))

(assert (= (and b!78796 res!41211) b!78797))

(declare-fun m!79133 () Bool)

(assert (=> d!18727 m!79133))

(declare-fun m!79135 () Bool)

(assert (=> d!18727 m!79135))

(declare-fun m!79137 () Bool)

(assert (=> d!18727 m!79137))

(declare-fun m!79139 () Bool)

(assert (=> d!18727 m!79139))

(declare-fun m!79141 () Bool)

(assert (=> b!78796 m!79141))

(declare-fun m!79143 () Bool)

(assert (=> b!78797 m!79143))

(assert (=> b!78321 d!18727))

(declare-fun d!18729 () Bool)

(assert (=> d!18729 (= (apply!79 (+!109 lt!36120 (tuple2!2191 lt!36121 (minValue!2170 newMap!16))) lt!36117) (apply!79 lt!36120 lt!36117))))

(declare-fun lt!36473 () Unit!2263)

(assert (=> d!18729 (= lt!36473 (choose!469 lt!36120 lt!36121 (minValue!2170 newMap!16) lt!36117))))

(declare-fun e!51490 () Bool)

(assert (=> d!18729 e!51490))

(declare-fun res!41212 () Bool)

(assert (=> d!18729 (=> (not res!41212) (not e!51490))))

(assert (=> d!18729 (= res!41212 (contains!745 lt!36120 lt!36117))))

(assert (=> d!18729 (= (addApplyDifferent!55 lt!36120 lt!36121 (minValue!2170 newMap!16) lt!36117) lt!36473)))

(declare-fun b!78798 () Bool)

(assert (=> b!78798 (= e!51490 (not (= lt!36117 lt!36121)))))

(assert (= (and d!18729 res!41212) b!78798))

(assert (=> d!18729 m!78241))

(assert (=> d!18729 m!78259))

(assert (=> d!18729 m!78239))

(declare-fun m!79145 () Bool)

(assert (=> d!18729 m!79145))

(assert (=> d!18729 m!78241))

(declare-fun m!79147 () Bool)

(assert (=> d!18729 m!79147))

(assert (=> b!78321 d!18729))

(declare-fun d!18731 () Bool)

(declare-fun e!51491 () Bool)

(assert (=> d!18731 e!51491))

(declare-fun res!41213 () Bool)

(assert (=> d!18731 (=> (not res!41213) (not e!51491))))

(declare-fun lt!36477 () ListLongMap!1465)

(assert (=> d!18731 (= res!41213 (contains!745 lt!36477 (_1!1105 (tuple2!2191 lt!36103 (minValue!2170 newMap!16)))))))

(declare-fun lt!36474 () List!1533)

(assert (=> d!18731 (= lt!36477 (ListLongMap!1466 lt!36474))))

(declare-fun lt!36476 () Unit!2263)

(declare-fun lt!36475 () Unit!2263)

(assert (=> d!18731 (= lt!36476 lt!36475)))

(assert (=> d!18731 (= (getValueByKey!136 lt!36474 (_1!1105 (tuple2!2191 lt!36103 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36103 (minValue!2170 newMap!16)))))))

(assert (=> d!18731 (= lt!36475 (lemmaContainsTupThenGetReturnValue!55 lt!36474 (_1!1105 (tuple2!2191 lt!36103 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36103 (minValue!2170 newMap!16)))))))

(assert (=> d!18731 (= lt!36474 (insertStrictlySorted!57 (toList!748 lt!36101) (_1!1105 (tuple2!2191 lt!36103 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36103 (minValue!2170 newMap!16)))))))

(assert (=> d!18731 (= (+!109 lt!36101 (tuple2!2191 lt!36103 (minValue!2170 newMap!16))) lt!36477)))

(declare-fun b!78799 () Bool)

(declare-fun res!41214 () Bool)

(assert (=> b!78799 (=> (not res!41214) (not e!51491))))

(assert (=> b!78799 (= res!41214 (= (getValueByKey!136 (toList!748 lt!36477) (_1!1105 (tuple2!2191 lt!36103 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36103 (minValue!2170 newMap!16))))))))

(declare-fun b!78800 () Bool)

(assert (=> b!78800 (= e!51491 (contains!748 (toList!748 lt!36477) (tuple2!2191 lt!36103 (minValue!2170 newMap!16))))))

(assert (= (and d!18731 res!41213) b!78799))

(assert (= (and b!78799 res!41214) b!78800))

(declare-fun m!79149 () Bool)

(assert (=> d!18731 m!79149))

(declare-fun m!79151 () Bool)

(assert (=> d!18731 m!79151))

(declare-fun m!79153 () Bool)

(assert (=> d!18731 m!79153))

(declare-fun m!79155 () Bool)

(assert (=> d!18731 m!79155))

(declare-fun m!79157 () Bool)

(assert (=> b!78799 m!79157))

(declare-fun m!79159 () Bool)

(assert (=> b!78800 m!79159))

(assert (=> b!78321 d!18731))

(declare-fun d!18733 () Bool)

(assert (=> d!18733 (contains!745 (+!109 lt!36113 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16))) lt!36110)))

(declare-fun lt!36478 () Unit!2263)

(assert (=> d!18733 (= lt!36478 (choose!470 lt!36113 lt!36119 (zeroValue!2170 newMap!16) lt!36110))))

(assert (=> d!18733 (contains!745 lt!36113 lt!36110)))

(assert (=> d!18733 (= (addStillContains!55 lt!36113 lt!36119 (zeroValue!2170 newMap!16) lt!36110) lt!36478)))

(declare-fun bs!3322 () Bool)

(assert (= bs!3322 d!18733))

(assert (=> bs!3322 m!78243))

(assert (=> bs!3322 m!78243))

(assert (=> bs!3322 m!78253))

(declare-fun m!79161 () Bool)

(assert (=> bs!3322 m!79161))

(declare-fun m!79163 () Bool)

(assert (=> bs!3322 m!79163))

(assert (=> b!78321 d!18733))

(declare-fun d!18735 () Bool)

(declare-fun e!51493 () Bool)

(assert (=> d!18735 e!51493))

(declare-fun res!41215 () Bool)

(assert (=> d!18735 (=> res!41215 e!51493)))

(declare-fun lt!36479 () Bool)

(assert (=> d!18735 (= res!41215 (not lt!36479))))

(declare-fun lt!36480 () Bool)

(assert (=> d!18735 (= lt!36479 lt!36480)))

(declare-fun lt!36481 () Unit!2263)

(declare-fun e!51492 () Unit!2263)

(assert (=> d!18735 (= lt!36481 e!51492)))

(declare-fun c!12143 () Bool)

(assert (=> d!18735 (= c!12143 lt!36480)))

(assert (=> d!18735 (= lt!36480 (containsKey!140 (toList!748 (+!109 lt!36113 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16)))) lt!36110))))

(assert (=> d!18735 (= (contains!745 (+!109 lt!36113 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16))) lt!36110) lt!36479)))

(declare-fun b!78801 () Bool)

(declare-fun lt!36482 () Unit!2263)

(assert (=> b!78801 (= e!51492 lt!36482)))

(assert (=> b!78801 (= lt!36482 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (+!109 lt!36113 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16)))) lt!36110))))

(assert (=> b!78801 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!36113 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16)))) lt!36110))))

(declare-fun b!78802 () Bool)

(declare-fun Unit!2297 () Unit!2263)

(assert (=> b!78802 (= e!51492 Unit!2297)))

(declare-fun b!78803 () Bool)

(assert (=> b!78803 (= e!51493 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!36113 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16)))) lt!36110)))))

(assert (= (and d!18735 c!12143) b!78801))

(assert (= (and d!18735 (not c!12143)) b!78802))

(assert (= (and d!18735 (not res!41215)) b!78803))

(declare-fun m!79165 () Bool)

(assert (=> d!18735 m!79165))

(declare-fun m!79167 () Bool)

(assert (=> b!78801 m!79167))

(declare-fun m!79169 () Bool)

(assert (=> b!78801 m!79169))

(assert (=> b!78801 m!79169))

(declare-fun m!79171 () Bool)

(assert (=> b!78801 m!79171))

(assert (=> b!78803 m!79169))

(assert (=> b!78803 m!79169))

(assert (=> b!78803 m!79171))

(assert (=> b!78321 d!18735))

(declare-fun b!78804 () Bool)

(declare-fun lt!36483 () Unit!2263)

(declare-fun lt!36489 () Unit!2263)

(assert (=> b!78804 (= lt!36483 lt!36489)))

(declare-fun lt!36488 () V!2995)

(declare-fun lt!36485 () (_ BitVec 64))

(declare-fun lt!36486 () ListLongMap!1465)

(declare-fun lt!36487 () (_ BitVec 64))

(assert (=> b!78804 (not (contains!745 (+!109 lt!36486 (tuple2!2191 lt!36487 lt!36488)) lt!36485))))

(assert (=> b!78804 (= lt!36489 (addStillNotContains!30 lt!36486 lt!36487 lt!36488 lt!36485))))

(assert (=> b!78804 (= lt!36485 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!78804 (= lt!36488 (get!1189 (select (arr!1895 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!78804 (= lt!36487 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7247 () ListLongMap!1465)

(assert (=> b!78804 (= lt!36486 call!7247)))

(declare-fun e!51494 () ListLongMap!1465)

(assert (=> b!78804 (= e!51494 (+!109 call!7247 (tuple2!2191 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (get!1189 (select (arr!1895 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!78805 () Bool)

(declare-fun e!51497 () ListLongMap!1465)

(assert (=> b!78805 (= e!51497 (ListLongMap!1466 Nil!1530))))

(declare-fun b!78806 () Bool)

(declare-fun e!51499 () Bool)

(declare-fun lt!36484 () ListLongMap!1465)

(assert (=> b!78806 (= e!51499 (= lt!36484 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16))))))

(declare-fun b!78808 () Bool)

(declare-fun e!51496 () Bool)

(declare-fun e!51495 () Bool)

(assert (=> b!78808 (= e!51496 e!51495)))

(assert (=> b!78808 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun res!41217 () Bool)

(assert (=> b!78808 (= res!41217 (contains!745 lt!36484 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78808 (=> (not res!41217) (not e!51495))))

(declare-fun b!78809 () Bool)

(assert (=> b!78809 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> b!78809 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_values!2255 newMap!16))))))

(assert (=> b!78809 (= e!51495 (= (apply!79 lt!36484 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!7244 () Bool)

(assert (=> bm!7244 (= call!7247 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16)))))

(declare-fun b!78810 () Bool)

(assert (=> b!78810 (= e!51494 call!7247)))

(declare-fun b!78811 () Bool)

(declare-fun e!51500 () Bool)

(assert (=> b!78811 (= e!51500 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78811 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!78807 () Bool)

(declare-fun e!51498 () Bool)

(assert (=> b!78807 (= e!51498 e!51496)))

(declare-fun c!12146 () Bool)

(assert (=> b!78807 (= c!12146 e!51500)))

(declare-fun res!41216 () Bool)

(assert (=> b!78807 (=> (not res!41216) (not e!51500))))

(assert (=> b!78807 (= res!41216 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun d!18737 () Bool)

(assert (=> d!18737 e!51498))

(declare-fun res!41218 () Bool)

(assert (=> d!18737 (=> (not res!41218) (not e!51498))))

(assert (=> d!18737 (= res!41218 (not (contains!745 lt!36484 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18737 (= lt!36484 e!51497)))

(declare-fun c!12144 () Bool)

(assert (=> d!18737 (= c!12144 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18737 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18737 (= (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36484)))

(declare-fun b!78812 () Bool)

(assert (=> b!78812 (= e!51499 (isEmpty!331 lt!36484))))

(declare-fun b!78813 () Bool)

(assert (=> b!78813 (= e!51497 e!51494)))

(declare-fun c!12145 () Bool)

(assert (=> b!78813 (= c!12145 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78814 () Bool)

(declare-fun res!41219 () Bool)

(assert (=> b!78814 (=> (not res!41219) (not e!51498))))

(assert (=> b!78814 (= res!41219 (not (contains!745 lt!36484 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78815 () Bool)

(assert (=> b!78815 (= e!51496 e!51499)))

(declare-fun c!12147 () Bool)

(assert (=> b!78815 (= c!12147 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (= (and d!18737 c!12144) b!78805))

(assert (= (and d!18737 (not c!12144)) b!78813))

(assert (= (and b!78813 c!12145) b!78804))

(assert (= (and b!78813 (not c!12145)) b!78810))

(assert (= (or b!78804 b!78810) bm!7244))

(assert (= (and d!18737 res!41218) b!78814))

(assert (= (and b!78814 res!41219) b!78807))

(assert (= (and b!78807 res!41216) b!78811))

(assert (= (and b!78807 c!12146) b!78808))

(assert (= (and b!78807 (not c!12146)) b!78815))

(assert (= (and b!78808 res!41217) b!78809))

(assert (= (and b!78815 c!12147) b!78806))

(assert (= (and b!78815 (not c!12147)) b!78812))

(declare-fun b_lambda!3533 () Bool)

(assert (=> (not b_lambda!3533) (not b!78804)))

(assert (=> b!78804 t!5191))

(declare-fun b_and!4833 () Bool)

(assert (= b_and!4829 (and (=> t!5191 result!2829) b_and!4833)))

(assert (=> b!78804 t!5193))

(declare-fun b_and!4835 () Bool)

(assert (= b_and!4831 (and (=> t!5193 result!2831) b_and!4835)))

(declare-fun b_lambda!3535 () Bool)

(assert (=> (not b_lambda!3535) (not b!78809)))

(assert (=> b!78809 t!5191))

(declare-fun b_and!4837 () Bool)

(assert (= b_and!4833 (and (=> t!5191 result!2829) b_and!4837)))

(assert (=> b!78809 t!5193))

(declare-fun b_and!4839 () Bool)

(assert (= b_and!4835 (and (=> t!5193 result!2831) b_and!4839)))

(declare-fun m!79173 () Bool)

(assert (=> b!78812 m!79173))

(declare-fun m!79175 () Bool)

(assert (=> b!78814 m!79175))

(declare-fun m!79177 () Bool)

(assert (=> b!78806 m!79177))

(assert (=> b!78811 m!78153))

(assert (=> b!78811 m!78153))

(assert (=> b!78811 m!78155))

(declare-fun m!79179 () Bool)

(assert (=> d!18737 m!79179))

(assert (=> d!18737 m!78167))

(assert (=> b!78809 m!78273))

(assert (=> b!78809 m!78153))

(assert (=> b!78809 m!78269))

(assert (=> b!78809 m!78153))

(declare-fun m!79181 () Bool)

(assert (=> b!78809 m!79181))

(assert (=> b!78809 m!78269))

(assert (=> b!78809 m!78273))

(assert (=> b!78809 m!78275))

(assert (=> b!78808 m!78153))

(assert (=> b!78808 m!78153))

(declare-fun m!79183 () Bool)

(assert (=> b!78808 m!79183))

(assert (=> b!78813 m!78153))

(assert (=> b!78813 m!78153))

(assert (=> b!78813 m!78155))

(assert (=> bm!7244 m!79177))

(declare-fun m!79185 () Bool)

(assert (=> b!78804 m!79185))

(declare-fun m!79187 () Bool)

(assert (=> b!78804 m!79187))

(assert (=> b!78804 m!78269))

(assert (=> b!78804 m!78273))

(assert (=> b!78804 m!78275))

(declare-fun m!79189 () Bool)

(assert (=> b!78804 m!79189))

(assert (=> b!78804 m!78153))

(assert (=> b!78804 m!79185))

(assert (=> b!78804 m!78269))

(assert (=> b!78804 m!78273))

(declare-fun m!79191 () Bool)

(assert (=> b!78804 m!79191))

(assert (=> b!78321 d!18737))

(declare-fun d!18739 () Bool)

(assert (=> d!18739 (= (apply!79 lt!36120 lt!36117) (get!1192 (getValueByKey!136 (toList!748 lt!36120) lt!36117)))))

(declare-fun bs!3323 () Bool)

(assert (= bs!3323 d!18739))

(declare-fun m!79193 () Bool)

(assert (=> bs!3323 m!79193))

(assert (=> bs!3323 m!79193))

(declare-fun m!79195 () Bool)

(assert (=> bs!3323 m!79195))

(assert (=> b!78321 d!18739))

(declare-fun d!18741 () Bool)

(assert (=> d!18741 (= (apply!79 (+!109 lt!36120 (tuple2!2191 lt!36121 (minValue!2170 newMap!16))) lt!36117) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!36120 (tuple2!2191 lt!36121 (minValue!2170 newMap!16)))) lt!36117)))))

(declare-fun bs!3324 () Bool)

(assert (= bs!3324 d!18741))

(declare-fun m!79197 () Bool)

(assert (=> bs!3324 m!79197))

(assert (=> bs!3324 m!79197))

(declare-fun m!79199 () Bool)

(assert (=> bs!3324 m!79199))

(assert (=> b!78321 d!18741))

(declare-fun d!18743 () Bool)

(assert (=> d!18743 (= (apply!79 (+!109 lt!36101 (tuple2!2191 lt!36103 (minValue!2170 newMap!16))) lt!36115) (apply!79 lt!36101 lt!36115))))

(declare-fun lt!36490 () Unit!2263)

(assert (=> d!18743 (= lt!36490 (choose!469 lt!36101 lt!36103 (minValue!2170 newMap!16) lt!36115))))

(declare-fun e!51501 () Bool)

(assert (=> d!18743 e!51501))

(declare-fun res!41220 () Bool)

(assert (=> d!18743 (=> (not res!41220) (not e!51501))))

(assert (=> d!18743 (= res!41220 (contains!745 lt!36101 lt!36115))))

(assert (=> d!18743 (= (addApplyDifferent!55 lt!36101 lt!36103 (minValue!2170 newMap!16) lt!36115) lt!36490)))

(declare-fun b!78816 () Bool)

(assert (=> b!78816 (= e!51501 (not (= lt!36115 lt!36103)))))

(assert (= (and d!18743 res!41220) b!78816))

(assert (=> d!18743 m!78261))

(assert (=> d!18743 m!78263))

(assert (=> d!18743 m!78249))

(declare-fun m!79201 () Bool)

(assert (=> d!18743 m!79201))

(assert (=> d!18743 m!78261))

(declare-fun m!79203 () Bool)

(assert (=> d!18743 m!79203))

(assert (=> b!78321 d!18743))

(declare-fun d!18745 () Bool)

(declare-fun e!51502 () Bool)

(assert (=> d!18745 e!51502))

(declare-fun res!41221 () Bool)

(assert (=> d!18745 (=> (not res!41221) (not e!51502))))

(declare-fun lt!36494 () ListLongMap!1465)

(assert (=> d!18745 (= res!41221 (contains!745 lt!36494 (_1!1105 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16)))))))

(declare-fun lt!36491 () List!1533)

(assert (=> d!18745 (= lt!36494 (ListLongMap!1466 lt!36491))))

(declare-fun lt!36493 () Unit!2263)

(declare-fun lt!36492 () Unit!2263)

(assert (=> d!18745 (= lt!36493 lt!36492)))

(assert (=> d!18745 (= (getValueByKey!136 lt!36491 (_1!1105 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16)))))))

(assert (=> d!18745 (= lt!36492 (lemmaContainsTupThenGetReturnValue!55 lt!36491 (_1!1105 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16)))))))

(assert (=> d!18745 (= lt!36491 (insertStrictlySorted!57 (toList!748 lt!36116) (_1!1105 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16)))))))

(assert (=> d!18745 (= (+!109 lt!36116 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16))) lt!36494)))

(declare-fun b!78817 () Bool)

(declare-fun res!41222 () Bool)

(assert (=> b!78817 (=> (not res!41222) (not e!51502))))

(assert (=> b!78817 (= res!41222 (= (getValueByKey!136 (toList!748 lt!36494) (_1!1105 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16))))))))

(declare-fun b!78818 () Bool)

(assert (=> b!78818 (= e!51502 (contains!748 (toList!748 lt!36494) (tuple2!2191 lt!36102 (zeroValue!2170 newMap!16))))))

(assert (= (and d!18745 res!41221) b!78817))

(assert (= (and b!78817 res!41222) b!78818))

(declare-fun m!79205 () Bool)

(assert (=> d!18745 m!79205))

(declare-fun m!79207 () Bool)

(assert (=> d!18745 m!79207))

(declare-fun m!79209 () Bool)

(assert (=> d!18745 m!79209))

(declare-fun m!79211 () Bool)

(assert (=> d!18745 m!79211))

(declare-fun m!79213 () Bool)

(assert (=> b!78817 m!79213))

(declare-fun m!79215 () Bool)

(assert (=> b!78818 m!79215))

(assert (=> b!78321 d!18745))

(declare-fun d!18747 () Bool)

(assert (=> d!18747 (= (apply!79 lt!36116 lt!36106) (get!1192 (getValueByKey!136 (toList!748 lt!36116) lt!36106)))))

(declare-fun bs!3325 () Bool)

(assert (= bs!3325 d!18747))

(declare-fun m!79217 () Bool)

(assert (=> bs!3325 m!79217))

(assert (=> bs!3325 m!79217))

(declare-fun m!79219 () Bool)

(assert (=> bs!3325 m!79219))

(assert (=> b!78321 d!18747))

(declare-fun d!18749 () Bool)

(assert (=> d!18749 (= (apply!79 (+!109 lt!36101 (tuple2!2191 lt!36103 (minValue!2170 newMap!16))) lt!36115) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!36101 (tuple2!2191 lt!36103 (minValue!2170 newMap!16)))) lt!36115)))))

(declare-fun bs!3326 () Bool)

(assert (= bs!3326 d!18749))

(declare-fun m!79221 () Bool)

(assert (=> bs!3326 m!79221))

(assert (=> bs!3326 m!79221))

(declare-fun m!79223 () Bool)

(assert (=> bs!3326 m!79223))

(assert (=> b!78321 d!18749))

(declare-fun d!18751 () Bool)

(declare-fun e!51503 () Bool)

(assert (=> d!18751 e!51503))

(declare-fun res!41223 () Bool)

(assert (=> d!18751 (=> (not res!41223) (not e!51503))))

(declare-fun lt!36498 () ListLongMap!1465)

(assert (=> d!18751 (= res!41223 (contains!745 lt!36498 (_1!1105 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16)))))))

(declare-fun lt!36495 () List!1533)

(assert (=> d!18751 (= lt!36498 (ListLongMap!1466 lt!36495))))

(declare-fun lt!36497 () Unit!2263)

(declare-fun lt!36496 () Unit!2263)

(assert (=> d!18751 (= lt!36497 lt!36496)))

(assert (=> d!18751 (= (getValueByKey!136 lt!36495 (_1!1105 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16)))))))

(assert (=> d!18751 (= lt!36496 (lemmaContainsTupThenGetReturnValue!55 lt!36495 (_1!1105 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16)))))))

(assert (=> d!18751 (= lt!36495 (insertStrictlySorted!57 (toList!748 lt!36113) (_1!1105 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16)))))))

(assert (=> d!18751 (= (+!109 lt!36113 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16))) lt!36498)))

(declare-fun b!78819 () Bool)

(declare-fun res!41224 () Bool)

(assert (=> b!78819 (=> (not res!41224) (not e!51503))))

(assert (=> b!78819 (= res!41224 (= (getValueByKey!136 (toList!748 lt!36498) (_1!1105 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16))))))))

(declare-fun b!78820 () Bool)

(assert (=> b!78820 (= e!51503 (contains!748 (toList!748 lt!36498) (tuple2!2191 lt!36119 (zeroValue!2170 newMap!16))))))

(assert (= (and d!18751 res!41223) b!78819))

(assert (= (and b!78819 res!41224) b!78820))

(declare-fun m!79225 () Bool)

(assert (=> d!18751 m!79225))

(declare-fun m!79227 () Bool)

(assert (=> d!18751 m!79227))

(declare-fun m!79229 () Bool)

(assert (=> d!18751 m!79229))

(declare-fun m!79231 () Bool)

(assert (=> d!18751 m!79231))

(declare-fun m!79233 () Bool)

(assert (=> b!78819 m!79233))

(declare-fun m!79235 () Bool)

(assert (=> b!78820 m!79235))

(assert (=> b!78321 d!18751))

(declare-fun lt!36499 () Bool)

(declare-fun d!18753 () Bool)

(assert (=> d!18753 (= lt!36499 (select (content!82 (toList!748 lt!36186)) (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun e!51504 () Bool)

(assert (=> d!18753 (= lt!36499 e!51504)))

(declare-fun res!41225 () Bool)

(assert (=> d!18753 (=> (not res!41225) (not e!51504))))

(assert (=> d!18753 (= res!41225 ((_ is Cons!1529) (toList!748 lt!36186)))))

(assert (=> d!18753 (= (contains!748 (toList!748 lt!36186) (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36499)))

(declare-fun b!78821 () Bool)

(declare-fun e!51505 () Bool)

(assert (=> b!78821 (= e!51504 e!51505)))

(declare-fun res!41226 () Bool)

(assert (=> b!78821 (=> res!41226 e!51505)))

(assert (=> b!78821 (= res!41226 (= (h!2117 (toList!748 lt!36186)) (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!78822 () Bool)

(assert (=> b!78822 (= e!51505 (contains!748 (t!5183 (toList!748 lt!36186)) (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18753 res!41225) b!78821))

(assert (= (and b!78821 (not res!41226)) b!78822))

(declare-fun m!79237 () Bool)

(assert (=> d!18753 m!79237))

(declare-fun m!79239 () Bool)

(assert (=> d!18753 m!79239))

(declare-fun m!79241 () Bool)

(assert (=> b!78822 m!79241))

(assert (=> b!78437 d!18753))

(declare-fun d!18755 () Bool)

(assert (=> d!18755 (= (inRange!0 (ite c!12098 (index!3135 lt!36393) (ite c!12097 (index!3134 lt!36376) (index!3137 lt!36376))) (mask!6268 newMap!16)) (and (bvsge (ite c!12098 (index!3135 lt!36393) (ite c!12097 (index!3134 lt!36376) (index!3137 lt!36376))) #b00000000000000000000000000000000) (bvslt (ite c!12098 (index!3135 lt!36393) (ite c!12097 (index!3134 lt!36376) (index!3137 lt!36376))) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7226 d!18755))

(declare-fun d!18757 () Bool)

(assert (=> d!18757 (isDefined!90 (getValueByKey!136 (toList!748 lt!35895) (_1!1105 lt!35783)))))

(declare-fun lt!36500 () Unit!2263)

(assert (=> d!18757 (= lt!36500 (choose!471 (toList!748 lt!35895) (_1!1105 lt!35783)))))

(declare-fun e!51506 () Bool)

(assert (=> d!18757 e!51506))

(declare-fun res!41227 () Bool)

(assert (=> d!18757 (=> (not res!41227) (not e!51506))))

(assert (=> d!18757 (= res!41227 (isStrictlySorted!290 (toList!748 lt!35895)))))

(assert (=> d!18757 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35895) (_1!1105 lt!35783)) lt!36500)))

(declare-fun b!78823 () Bool)

(assert (=> b!78823 (= e!51506 (containsKey!140 (toList!748 lt!35895) (_1!1105 lt!35783)))))

(assert (= (and d!18757 res!41227) b!78823))

(assert (=> d!18757 m!77963))

(assert (=> d!18757 m!77963))

(assert (=> d!18757 m!78911))

(declare-fun m!79243 () Bool)

(assert (=> d!18757 m!79243))

(declare-fun m!79245 () Bool)

(assert (=> d!18757 m!79245))

(assert (=> b!78823 m!78907))

(assert (=> b!78659 d!18757))

(declare-fun d!18759 () Bool)

(assert (=> d!18759 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35895) (_1!1105 lt!35783))) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35895) (_1!1105 lt!35783)))))))

(declare-fun bs!3327 () Bool)

(assert (= bs!3327 d!18759))

(assert (=> bs!3327 m!77963))

(declare-fun m!79247 () Bool)

(assert (=> bs!3327 m!79247))

(assert (=> b!78659 d!18759))

(assert (=> b!78659 d!18501))

(declare-fun d!18761 () Bool)

(assert (=> d!18761 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35907) (_1!1105 lt!35784))) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35907) (_1!1105 lt!35784)))))))

(declare-fun bs!3328 () Bool)

(assert (= bs!3328 d!18761))

(assert (=> bs!3328 m!77999))

(declare-fun m!79249 () Bool)

(assert (=> bs!3328 m!79249))

(assert (=> b!78462 d!18761))

(assert (=> b!78462 d!18709))

(declare-fun b!78825 () Bool)

(declare-fun e!51507 () Option!142)

(declare-fun e!51508 () Option!142)

(assert (=> b!78825 (= e!51507 e!51508)))

(declare-fun c!12149 () Bool)

(assert (=> b!78825 (= c!12149 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35787))) (not (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35787)))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun b!78824 () Bool)

(assert (=> b!78824 (= e!51507 (Some!141 (_2!1105 (h!2117 (t!5183 (toList!748 lt!35787))))))))

(declare-fun b!78826 () Bool)

(assert (=> b!78826 (= e!51508 (getValueByKey!136 (t!5183 (t!5183 (toList!748 lt!35787))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!78827 () Bool)

(assert (=> b!78827 (= e!51508 None!140)))

(declare-fun d!18763 () Bool)

(declare-fun c!12148 () Bool)

(assert (=> d!18763 (= c!12148 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35787))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35787)))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!18763 (= (getValueByKey!136 (t!5183 (toList!748 lt!35787)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) e!51507)))

(assert (= (and d!18763 c!12148) b!78824))

(assert (= (and d!18763 (not c!12148)) b!78825))

(assert (= (and b!78825 c!12149) b!78826))

(assert (= (and b!78825 (not c!12149)) b!78827))

(assert (=> b!78826 m!77749))

(declare-fun m!79251 () Bool)

(assert (=> b!78826 m!79251))

(assert (=> b!78519 d!18763))

(declare-fun d!18765 () Bool)

(declare-fun res!41228 () Bool)

(declare-fun e!51509 () Bool)

(assert (=> d!18765 (=> res!41228 e!51509)))

(assert (=> d!18765 (= res!41228 (and ((_ is Cons!1529) lt!36217) (= (_1!1105 (h!2117 lt!36217)) (_1!1105 lt!35788))))))

(assert (=> d!18765 (= (containsKey!140 lt!36217 (_1!1105 lt!35788)) e!51509)))

(declare-fun b!78828 () Bool)

(declare-fun e!51510 () Bool)

(assert (=> b!78828 (= e!51509 e!51510)))

(declare-fun res!41229 () Bool)

(assert (=> b!78828 (=> (not res!41229) (not e!51510))))

(assert (=> b!78828 (= res!41229 (and (or (not ((_ is Cons!1529) lt!36217)) (bvsle (_1!1105 (h!2117 lt!36217)) (_1!1105 lt!35788))) ((_ is Cons!1529) lt!36217) (bvslt (_1!1105 (h!2117 lt!36217)) (_1!1105 lt!35788))))))

(declare-fun b!78829 () Bool)

(assert (=> b!78829 (= e!51510 (containsKey!140 (t!5183 lt!36217) (_1!1105 lt!35788)))))

(assert (= (and d!18765 (not res!41228)) b!78828))

(assert (= (and b!78828 res!41229) b!78829))

(declare-fun m!79253 () Bool)

(assert (=> b!78829 m!79253))

(assert (=> b!78495 d!18765))

(assert (=> d!18565 d!18557))

(assert (=> d!18565 d!18541))

(declare-fun d!18767 () Bool)

(assert (=> d!18767 (contains!745 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35967)))

(assert (=> d!18767 true))

(declare-fun _$35!321 () Unit!2263)

(assert (=> d!18767 (= (choose!470 lt!35970 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35967) _$35!321)))

(declare-fun bs!3329 () Bool)

(assert (= bs!3329 d!18767))

(assert (=> bs!3329 m!78035))

(assert (=> bs!3329 m!78035))

(assert (=> bs!3329 m!78045))

(assert (=> d!18565 d!18767))

(declare-fun d!18769 () Bool)

(declare-fun e!51512 () Bool)

(assert (=> d!18769 e!51512))

(declare-fun res!41230 () Bool)

(assert (=> d!18769 (=> res!41230 e!51512)))

(declare-fun lt!36501 () Bool)

(assert (=> d!18769 (= res!41230 (not lt!36501))))

(declare-fun lt!36502 () Bool)

(assert (=> d!18769 (= lt!36501 lt!36502)))

(declare-fun lt!36503 () Unit!2263)

(declare-fun e!51511 () Unit!2263)

(assert (=> d!18769 (= lt!36503 e!51511)))

(declare-fun c!12150 () Bool)

(assert (=> d!18769 (= c!12150 lt!36502)))

(assert (=> d!18769 (= lt!36502 (containsKey!140 (toList!748 lt!35970) lt!35967))))

(assert (=> d!18769 (= (contains!745 lt!35970 lt!35967) lt!36501)))

(declare-fun b!78831 () Bool)

(declare-fun lt!36504 () Unit!2263)

(assert (=> b!78831 (= e!51511 lt!36504)))

(assert (=> b!78831 (= lt!36504 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35970) lt!35967))))

(assert (=> b!78831 (isDefined!90 (getValueByKey!136 (toList!748 lt!35970) lt!35967))))

(declare-fun b!78832 () Bool)

(declare-fun Unit!2298 () Unit!2263)

(assert (=> b!78832 (= e!51511 Unit!2298)))

(declare-fun b!78833 () Bool)

(assert (=> b!78833 (= e!51512 (isDefined!90 (getValueByKey!136 (toList!748 lt!35970) lt!35967)))))

(assert (= (and d!18769 c!12150) b!78831))

(assert (= (and d!18769 (not c!12150)) b!78832))

(assert (= (and d!18769 (not res!41230)) b!78833))

(declare-fun m!79255 () Bool)

(assert (=> d!18769 m!79255))

(declare-fun m!79257 () Bool)

(assert (=> b!78831 m!79257))

(declare-fun m!79259 () Bool)

(assert (=> b!78831 m!79259))

(assert (=> b!78831 m!79259))

(declare-fun m!79261 () Bool)

(assert (=> b!78831 m!79261))

(assert (=> b!78833 m!79259))

(assert (=> b!78833 m!79259))

(assert (=> b!78833 m!79261))

(assert (=> d!18565 d!18769))

(declare-fun d!18771 () Bool)

(declare-fun e!51515 () Bool)

(assert (=> d!18771 e!51515))

(declare-fun res!41233 () Bool)

(assert (=> d!18771 (=> (not res!41233) (not e!51515))))

(assert (=> d!18771 (= res!41233 (and (bvsge (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (size!2135 (_keys!3932 newMap!16)))))))

(declare-fun lt!36507 () Unit!2263)

(declare-fun choose!41 (array!3974 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1534) Unit!2263)

(assert (=> d!18771 (= lt!36507 (choose!41 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) lt!36373 lt!36385))))

(assert (=> d!18771 (bvslt (size!2135 (_keys!3932 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!18771 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) lt!36373 lt!36385) lt!36507)))

(declare-fun b!78836 () Bool)

(assert (=> b!78836 (= e!51515 (arrayNoDuplicates!0 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) lt!36373 lt!36385))))

(assert (= (and d!18771 res!41233) b!78836))

(assert (=> d!18771 m!77749))

(declare-fun m!79263 () Bool)

(assert (=> d!18771 m!79263))

(assert (=> b!78836 m!78855))

(assert (=> b!78836 m!78865))

(assert (=> d!18651 d!18771))

(declare-fun d!18773 () Bool)

(assert (=> d!18773 (= (arrayCountValidKeys!0 lt!36384 (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (bvadd (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!36510 () Unit!2263)

(declare-fun choose!2 (array!3974 (_ BitVec 32)) Unit!2263)

(assert (=> d!18773 (= lt!36510 (choose!2 lt!36384 (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063))))))

(declare-fun e!51518 () Bool)

(assert (=> d!18773 e!51518))

(declare-fun res!41238 () Bool)

(assert (=> d!18773 (=> (not res!41238) (not e!51518))))

(assert (=> d!18773 (= res!41238 (and (bvsge (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (size!2135 lt!36384))))))

(assert (=> d!18773 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!36384 (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063))) lt!36510)))

(declare-fun b!78841 () Bool)

(declare-fun res!41239 () Bool)

(assert (=> b!78841 (=> (not res!41239) (not e!51518))))

(assert (=> b!78841 (= res!41239 (validKeyInArray!0 (select (arr!1894 lt!36384) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)))))))

(declare-fun b!78842 () Bool)

(assert (=> b!78842 (= e!51518 (bvslt (size!2135 lt!36384) #b01111111111111111111111111111111))))

(assert (= (and d!18773 res!41238) b!78841))

(assert (= (and b!78841 res!41239) b!78842))

(assert (=> d!18773 m!78863))

(declare-fun m!79265 () Bool)

(assert (=> d!18773 m!79265))

(declare-fun m!79267 () Bool)

(assert (=> b!78841 m!79267))

(assert (=> b!78841 m!79267))

(declare-fun m!79269 () Bool)

(assert (=> b!78841 m!79269))

(assert (=> d!18651 d!18773))

(declare-fun d!18775 () Bool)

(declare-fun res!41241 () Bool)

(declare-fun e!51520 () Bool)

(assert (=> d!18775 (=> res!41241 e!51520)))

(assert (=> d!18775 (= res!41241 (bvsge lt!36373 (size!2135 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))))))

(assert (=> d!18775 (= (arrayNoDuplicates!0 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) lt!36373 lt!36385) e!51520)))

(declare-fun e!51519 () Bool)

(declare-fun b!78843 () Bool)

(assert (=> b!78843 (= e!51519 (contains!747 lt!36385 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) lt!36373)))))

(declare-fun call!7248 () Bool)

(declare-fun bm!7245 () Bool)

(declare-fun c!12151 () Bool)

(assert (=> bm!7245 (= call!7248 (arrayNoDuplicates!0 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (bvadd lt!36373 #b00000000000000000000000000000001) (ite c!12151 (Cons!1530 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) lt!36373) lt!36385) lt!36385)))))

(declare-fun b!78844 () Bool)

(declare-fun e!51522 () Bool)

(declare-fun e!51521 () Bool)

(assert (=> b!78844 (= e!51522 e!51521)))

(assert (=> b!78844 (= c!12151 (validKeyInArray!0 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) lt!36373)))))

(declare-fun b!78845 () Bool)

(assert (=> b!78845 (= e!51521 call!7248)))

(declare-fun b!78846 () Bool)

(assert (=> b!78846 (= e!51520 e!51522)))

(declare-fun res!41240 () Bool)

(assert (=> b!78846 (=> (not res!41240) (not e!51522))))

(assert (=> b!78846 (= res!41240 (not e!51519))))

(declare-fun res!41242 () Bool)

(assert (=> b!78846 (=> (not res!41242) (not e!51519))))

(assert (=> b!78846 (= res!41242 (validKeyInArray!0 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) lt!36373)))))

(declare-fun b!78847 () Bool)

(assert (=> b!78847 (= e!51521 call!7248)))

(assert (= (and d!18775 (not res!41241)) b!78846))

(assert (= (and b!78846 res!41242) b!78843))

(assert (= (and b!78846 res!41240) b!78844))

(assert (= (and b!78844 c!12151) b!78845))

(assert (= (and b!78844 (not c!12151)) b!78847))

(assert (= (or b!78845 b!78847) bm!7245))

(declare-fun m!79271 () Bool)

(assert (=> b!78843 m!79271))

(assert (=> b!78843 m!79271))

(declare-fun m!79273 () Bool)

(assert (=> b!78843 m!79273))

(assert (=> bm!7245 m!79271))

(declare-fun m!79275 () Bool)

(assert (=> bm!7245 m!79275))

(assert (=> b!78844 m!79271))

(assert (=> b!78844 m!79271))

(declare-fun m!79277 () Bool)

(assert (=> b!78844 m!79277))

(assert (=> b!78846 m!79271))

(assert (=> b!78846 m!79271))

(assert (=> b!78846 m!79277))

(assert (=> d!18651 d!18775))

(assert (=> d!18651 d!18489))

(assert (=> d!18651 d!18411))

(assert (=> d!18651 d!18515))

(declare-fun b!78848 () Bool)

(declare-fun e!51526 () ListLongMap!1465)

(declare-fun call!7255 () ListLongMap!1465)

(assert (=> b!78848 (= e!51526 (+!109 call!7255 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(declare-fun b!78849 () Bool)

(declare-fun res!41246 () Bool)

(declare-fun e!51535 () Bool)

(assert (=> b!78849 (=> (not res!41246) (not e!51535))))

(declare-fun e!51533 () Bool)

(assert (=> b!78849 (= res!41246 e!51533)))

(declare-fun c!12157 () Bool)

(assert (=> b!78849 (= c!12157 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78850 () Bool)

(declare-fun e!51528 () ListLongMap!1465)

(declare-fun call!7254 () ListLongMap!1465)

(assert (=> b!78850 (= e!51528 call!7254)))

(declare-fun bm!7246 () Bool)

(declare-fun call!7253 () ListLongMap!1465)

(declare-fun call!7251 () ListLongMap!1465)

(assert (=> bm!7246 (= call!7253 call!7251)))

(declare-fun lt!36523 () ListLongMap!1465)

(declare-fun b!78851 () Bool)

(declare-fun e!51532 () Bool)

(assert (=> b!78851 (= e!51532 (= (apply!79 lt!36523 (select (arr!1894 lt!36389) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 lt!36375) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78851 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 lt!36375)))))

(assert (=> b!78851 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 lt!36389)))))

(declare-fun b!78852 () Bool)

(declare-fun e!51529 () Bool)

(assert (=> b!78852 (= e!51533 e!51529)))

(declare-fun res!41247 () Bool)

(declare-fun call!7250 () Bool)

(assert (=> b!78852 (= res!41247 call!7250)))

(assert (=> b!78852 (=> (not res!41247) (not e!51529))))

(declare-fun bm!7247 () Bool)

(declare-fun call!7252 () Bool)

(assert (=> bm!7247 (= call!7252 (contains!745 lt!36523 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78854 () Bool)

(declare-fun e!51527 () Bool)

(assert (=> b!78854 (= e!51527 (validKeyInArray!0 (select (arr!1894 lt!36389) #b00000000000000000000000000000000)))))

(declare-fun b!78855 () Bool)

(declare-fun e!51534 () Unit!2263)

(declare-fun Unit!2299 () Unit!2263)

(assert (=> b!78855 (= e!51534 Unit!2299)))

(declare-fun bm!7248 () Bool)

(assert (=> bm!7248 (= call!7251 (getCurrentListMapNoExtraKeys!73 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78856 () Bool)

(declare-fun e!51524 () ListLongMap!1465)

(declare-fun call!7249 () ListLongMap!1465)

(assert (=> b!78856 (= e!51524 call!7249)))

(declare-fun b!78857 () Bool)

(declare-fun e!51523 () Bool)

(assert (=> b!78857 (= e!51535 e!51523)))

(declare-fun c!12153 () Bool)

(assert (=> b!78857 (= c!12153 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78858 () Bool)

(declare-fun lt!36525 () Unit!2263)

(assert (=> b!78858 (= e!51534 lt!36525)))

(declare-fun lt!36524 () ListLongMap!1465)

(assert (=> b!78858 (= lt!36524 (getCurrentListMapNoExtraKeys!73 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36530 () (_ BitVec 64))

(assert (=> b!78858 (= lt!36530 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36521 () (_ BitVec 64))

(assert (=> b!78858 (= lt!36521 (select (arr!1894 lt!36389) #b00000000000000000000000000000000))))

(declare-fun lt!36515 () Unit!2263)

(assert (=> b!78858 (= lt!36515 (addStillContains!55 lt!36524 lt!36530 (zeroValue!2170 newMap!16) lt!36521))))

(assert (=> b!78858 (contains!745 (+!109 lt!36524 (tuple2!2191 lt!36530 (zeroValue!2170 newMap!16))) lt!36521)))

(declare-fun lt!36520 () Unit!2263)

(assert (=> b!78858 (= lt!36520 lt!36515)))

(declare-fun lt!36531 () ListLongMap!1465)

(assert (=> b!78858 (= lt!36531 (getCurrentListMapNoExtraKeys!73 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36532 () (_ BitVec 64))

(assert (=> b!78858 (= lt!36532 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36528 () (_ BitVec 64))

(assert (=> b!78858 (= lt!36528 (select (arr!1894 lt!36389) #b00000000000000000000000000000000))))

(declare-fun lt!36519 () Unit!2263)

(assert (=> b!78858 (= lt!36519 (addApplyDifferent!55 lt!36531 lt!36532 (minValue!2170 newMap!16) lt!36528))))

(assert (=> b!78858 (= (apply!79 (+!109 lt!36531 (tuple2!2191 lt!36532 (minValue!2170 newMap!16))) lt!36528) (apply!79 lt!36531 lt!36528))))

(declare-fun lt!36511 () Unit!2263)

(assert (=> b!78858 (= lt!36511 lt!36519)))

(declare-fun lt!36527 () ListLongMap!1465)

(assert (=> b!78858 (= lt!36527 (getCurrentListMapNoExtraKeys!73 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36513 () (_ BitVec 64))

(assert (=> b!78858 (= lt!36513 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36517 () (_ BitVec 64))

(assert (=> b!78858 (= lt!36517 (select (arr!1894 lt!36389) #b00000000000000000000000000000000))))

(declare-fun lt!36529 () Unit!2263)

(assert (=> b!78858 (= lt!36529 (addApplyDifferent!55 lt!36527 lt!36513 (zeroValue!2170 newMap!16) lt!36517))))

(assert (=> b!78858 (= (apply!79 (+!109 lt!36527 (tuple2!2191 lt!36513 (zeroValue!2170 newMap!16))) lt!36517) (apply!79 lt!36527 lt!36517))))

(declare-fun lt!36516 () Unit!2263)

(assert (=> b!78858 (= lt!36516 lt!36529)))

(declare-fun lt!36512 () ListLongMap!1465)

(assert (=> b!78858 (= lt!36512 (getCurrentListMapNoExtraKeys!73 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36514 () (_ BitVec 64))

(assert (=> b!78858 (= lt!36514 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36526 () (_ BitVec 64))

(assert (=> b!78858 (= lt!36526 (select (arr!1894 lt!36389) #b00000000000000000000000000000000))))

(assert (=> b!78858 (= lt!36525 (addApplyDifferent!55 lt!36512 lt!36514 (minValue!2170 newMap!16) lt!36526))))

(assert (=> b!78858 (= (apply!79 (+!109 lt!36512 (tuple2!2191 lt!36514 (minValue!2170 newMap!16))) lt!36526) (apply!79 lt!36512 lt!36526))))

(declare-fun b!78859 () Bool)

(declare-fun e!51525 () Bool)

(assert (=> b!78859 (= e!51525 e!51532)))

(declare-fun res!41245 () Bool)

(assert (=> b!78859 (=> (not res!41245) (not e!51532))))

(assert (=> b!78859 (= res!41245 (contains!745 lt!36523 (select (arr!1894 lt!36389) #b00000000000000000000000000000000)))))

(assert (=> b!78859 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 lt!36389)))))

(declare-fun b!78860 () Bool)

(assert (=> b!78860 (= e!51526 e!51528)))

(declare-fun c!12154 () Bool)

(assert (=> b!78860 (= c!12154 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7249 () Bool)

(assert (=> bm!7249 (= call!7254 call!7255)))

(declare-fun b!78861 () Bool)

(declare-fun res!41243 () Bool)

(assert (=> b!78861 (=> (not res!41243) (not e!51535))))

(assert (=> b!78861 (= res!41243 e!51525)))

(declare-fun res!41244 () Bool)

(assert (=> b!78861 (=> res!41244 e!51525)))

(declare-fun e!51530 () Bool)

(assert (=> b!78861 (= res!41244 (not e!51530))))

(declare-fun res!41248 () Bool)

(assert (=> b!78861 (=> (not res!41248) (not e!51530))))

(assert (=> b!78861 (= res!41248 (bvslt #b00000000000000000000000000000000 (size!2135 lt!36389)))))

(declare-fun b!78862 () Bool)

(declare-fun c!12155 () Bool)

(assert (=> b!78862 (= c!12155 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78862 (= e!51528 e!51524)))

(declare-fun b!78863 () Bool)

(assert (=> b!78863 (= e!51530 (validKeyInArray!0 (select (arr!1894 lt!36389) #b00000000000000000000000000000000)))))

(declare-fun b!78864 () Bool)

(assert (=> b!78864 (= e!51524 call!7254)))

(declare-fun c!12152 () Bool)

(declare-fun bm!7250 () Bool)

(assert (=> bm!7250 (= call!7255 (+!109 (ite c!12152 call!7251 (ite c!12154 call!7253 call!7249)) (ite (or c!12152 c!12154) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun bm!7251 () Bool)

(assert (=> bm!7251 (= call!7250 (contains!745 lt!36523 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78865 () Bool)

(assert (=> b!78865 (= e!51533 (not call!7250))))

(declare-fun b!78853 () Bool)

(declare-fun e!51531 () Bool)

(assert (=> b!78853 (= e!51523 e!51531)))

(declare-fun res!41250 () Bool)

(assert (=> b!78853 (= res!41250 call!7252)))

(assert (=> b!78853 (=> (not res!41250) (not e!51531))))

(declare-fun d!18777 () Bool)

(assert (=> d!18777 e!51535))

(declare-fun res!41251 () Bool)

(assert (=> d!18777 (=> (not res!41251) (not e!51535))))

(assert (=> d!18777 (= res!41251 (or (bvsge #b00000000000000000000000000000000 (size!2135 lt!36389)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 lt!36389)))))))

(declare-fun lt!36522 () ListLongMap!1465)

(assert (=> d!18777 (= lt!36523 lt!36522)))

(declare-fun lt!36518 () Unit!2263)

(assert (=> d!18777 (= lt!36518 e!51534)))

(declare-fun c!12156 () Bool)

(assert (=> d!18777 (= c!12156 e!51527)))

(declare-fun res!41249 () Bool)

(assert (=> d!18777 (=> (not res!41249) (not e!51527))))

(assert (=> d!18777 (= res!41249 (bvslt #b00000000000000000000000000000000 (size!2135 lt!36389)))))

(assert (=> d!18777 (= lt!36522 e!51526)))

(assert (=> d!18777 (= c!12152 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18777 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18777 (= (getCurrentListMap!435 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36523)))

(declare-fun bm!7252 () Bool)

(assert (=> bm!7252 (= call!7249 call!7253)))

(declare-fun b!78866 () Bool)

(assert (=> b!78866 (= e!51531 (= (apply!79 lt!36523 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!78867 () Bool)

(assert (=> b!78867 (= e!51523 (not call!7252))))

(declare-fun b!78868 () Bool)

(assert (=> b!78868 (= e!51529 (= (apply!79 lt!36523 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(assert (= (and d!18777 c!12152) b!78848))

(assert (= (and d!18777 (not c!12152)) b!78860))

(assert (= (and b!78860 c!12154) b!78850))

(assert (= (and b!78860 (not c!12154)) b!78862))

(assert (= (and b!78862 c!12155) b!78864))

(assert (= (and b!78862 (not c!12155)) b!78856))

(assert (= (or b!78864 b!78856) bm!7252))

(assert (= (or b!78850 bm!7252) bm!7246))

(assert (= (or b!78850 b!78864) bm!7249))

(assert (= (or b!78848 bm!7246) bm!7248))

(assert (= (or b!78848 bm!7249) bm!7250))

(assert (= (and d!18777 res!41249) b!78854))

(assert (= (and d!18777 c!12156) b!78858))

(assert (= (and d!18777 (not c!12156)) b!78855))

(assert (= (and d!18777 res!41251) b!78861))

(assert (= (and b!78861 res!41248) b!78863))

(assert (= (and b!78861 (not res!41244)) b!78859))

(assert (= (and b!78859 res!41245) b!78851))

(assert (= (and b!78861 res!41243) b!78849))

(assert (= (and b!78849 c!12157) b!78852))

(assert (= (and b!78849 (not c!12157)) b!78865))

(assert (= (and b!78852 res!41247) b!78868))

(assert (= (or b!78852 b!78865) bm!7251))

(assert (= (and b!78849 res!41246) b!78857))

(assert (= (and b!78857 c!12153) b!78853))

(assert (= (and b!78857 (not c!12153)) b!78867))

(assert (= (and b!78853 res!41250) b!78866))

(assert (= (or b!78853 b!78867) bm!7247))

(declare-fun b_lambda!3537 () Bool)

(assert (=> (not b_lambda!3537) (not b!78851)))

(assert (=> b!78851 t!5191))

(declare-fun b_and!4841 () Bool)

(assert (= b_and!4837 (and (=> t!5191 result!2829) b_and!4841)))

(assert (=> b!78851 t!5193))

(declare-fun b_and!4843 () Bool)

(assert (= b_and!4839 (and (=> t!5193 result!2831) b_and!4843)))

(declare-fun m!79279 () Bool)

(assert (=> bm!7251 m!79279))

(declare-fun m!79281 () Bool)

(assert (=> bm!7248 m!79281))

(declare-fun m!79283 () Bool)

(assert (=> bm!7247 m!79283))

(declare-fun m!79285 () Bool)

(assert (=> b!78858 m!79285))

(declare-fun m!79287 () Bool)

(assert (=> b!78858 m!79287))

(declare-fun m!79289 () Bool)

(assert (=> b!78858 m!79289))

(declare-fun m!79291 () Bool)

(assert (=> b!78858 m!79291))

(declare-fun m!79293 () Bool)

(assert (=> b!78858 m!79293))

(declare-fun m!79295 () Bool)

(assert (=> b!78858 m!79295))

(declare-fun m!79297 () Bool)

(assert (=> b!78858 m!79297))

(assert (=> b!78858 m!79289))

(declare-fun m!79299 () Bool)

(assert (=> b!78858 m!79299))

(declare-fun m!79301 () Bool)

(assert (=> b!78858 m!79301))

(declare-fun m!79303 () Bool)

(assert (=> b!78858 m!79303))

(assert (=> b!78858 m!79301))

(declare-fun m!79305 () Bool)

(assert (=> b!78858 m!79305))

(assert (=> b!78858 m!79287))

(declare-fun m!79307 () Bool)

(assert (=> b!78858 m!79307))

(declare-fun m!79309 () Bool)

(assert (=> b!78858 m!79309))

(assert (=> b!78858 m!79309))

(declare-fun m!79311 () Bool)

(assert (=> b!78858 m!79311))

(declare-fun m!79313 () Bool)

(assert (=> b!78858 m!79313))

(assert (=> b!78858 m!79281))

(declare-fun m!79315 () Bool)

(assert (=> b!78858 m!79315))

(assert (=> d!18777 m!78167))

(declare-fun m!79317 () Bool)

(assert (=> b!78851 m!79317))

(assert (=> b!78851 m!79303))

(declare-fun m!79319 () Bool)

(assert (=> b!78851 m!79319))

(assert (=> b!78851 m!79317))

(assert (=> b!78851 m!78273))

(declare-fun m!79321 () Bool)

(assert (=> b!78851 m!79321))

(assert (=> b!78851 m!78273))

(assert (=> b!78851 m!79303))

(declare-fun m!79323 () Bool)

(assert (=> bm!7250 m!79323))

(declare-fun m!79325 () Bool)

(assert (=> b!78848 m!79325))

(assert (=> b!78854 m!79303))

(assert (=> b!78854 m!79303))

(declare-fun m!79327 () Bool)

(assert (=> b!78854 m!79327))

(assert (=> b!78859 m!79303))

(assert (=> b!78859 m!79303))

(declare-fun m!79329 () Bool)

(assert (=> b!78859 m!79329))

(declare-fun m!79331 () Bool)

(assert (=> b!78868 m!79331))

(declare-fun m!79333 () Bool)

(assert (=> b!78866 m!79333))

(assert (=> b!78863 m!79303))

(assert (=> b!78863 m!79303))

(assert (=> b!78863 m!79327))

(assert (=> d!18651 d!18777))

(declare-fun d!18779 () Bool)

(assert (=> d!18779 (arrayContainsKey!0 lt!36398 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!36535 () Unit!2263)

(declare-fun choose!13 (array!3974 (_ BitVec 64) (_ BitVec 32)) Unit!2263)

(assert (=> d!18779 (= lt!36535 (choose!13 lt!36398 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063))))))

(assert (=> d!18779 (bvsge (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000000)))

(assert (=> d!18779 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!36398 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063))) lt!36535)))

(declare-fun bs!3330 () Bool)

(assert (= bs!3330 d!18779))

(assert (=> bs!3330 m!77749))

(assert (=> bs!3330 m!78867))

(assert (=> bs!3330 m!77749))

(declare-fun m!79335 () Bool)

(assert (=> bs!3330 m!79335))

(assert (=> d!18651 d!18779))

(declare-fun e!51540 () Bool)

(declare-fun b!78880 () Bool)

(assert (=> b!78880 (= e!51540 (= (arrayCountValidKeys!0 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3932 newMap!16) #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!78879 () Bool)

(declare-fun e!51541 () Bool)

(assert (=> b!78879 (= e!51541 (bvslt (size!2135 (_keys!3932 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!18781 () Bool)

(assert (=> d!18781 e!51540))

(declare-fun res!41260 () Bool)

(assert (=> d!18781 (=> (not res!41260) (not e!51540))))

(assert (=> d!18781 (= res!41260 (and (bvsge (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (size!2135 (_keys!3932 newMap!16)))))))

(declare-fun lt!36538 () Unit!2263)

(declare-fun choose!1 (array!3974 (_ BitVec 32) (_ BitVec 64)) Unit!2263)

(assert (=> d!18781 (= lt!36538 (choose!1 (_keys!3932 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!18781 e!51541))

(declare-fun res!41262 () Bool)

(assert (=> d!18781 (=> (not res!41262) (not e!51541))))

(assert (=> d!18781 (= res!41262 (and (bvsge (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (size!2135 (_keys!3932 newMap!16)))))))

(assert (=> d!18781 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3932 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) lt!36538)))

(declare-fun b!78877 () Bool)

(declare-fun res!41263 () Bool)

(assert (=> b!78877 (=> (not res!41263) (not e!51541))))

(assert (=> b!78877 (= res!41263 (not (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063))))))))

(declare-fun b!78878 () Bool)

(declare-fun res!41261 () Bool)

(assert (=> b!78878 (=> (not res!41261) (not e!51541))))

(assert (=> b!78878 (= res!41261 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!18781 res!41262) b!78877))

(assert (= (and b!78877 res!41263) b!78878))

(assert (= (and b!78878 res!41261) b!78879))

(assert (= (and d!18781 res!41260) b!78880))

(assert (=> b!78880 m!78855))

(assert (=> b!78880 m!78857))

(assert (=> b!78880 m!77873))

(assert (=> d!18781 m!77749))

(declare-fun m!79337 () Bool)

(assert (=> d!18781 m!79337))

(declare-fun m!79339 () Bool)

(assert (=> b!78877 m!79339))

(assert (=> b!78877 m!79339))

(declare-fun m!79341 () Bool)

(assert (=> b!78877 m!79341))

(assert (=> b!78878 m!77749))

(assert (=> b!78878 m!77893))

(assert (=> d!18651 d!18781))

(declare-fun b!78881 () Bool)

(declare-fun e!51543 () (_ BitVec 32))

(declare-fun call!7256 () (_ BitVec 32))

(assert (=> b!78881 (= e!51543 (bvadd #b00000000000000000000000000000001 call!7256))))

(declare-fun b!78882 () Bool)

(declare-fun e!51542 () (_ BitVec 32))

(assert (=> b!78882 (= e!51542 #b00000000000000000000000000000000)))

(declare-fun bm!7253 () Bool)

(assert (=> bm!7253 (= call!7256 (arrayCountValidKeys!0 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78883 () Bool)

(assert (=> b!78883 (= e!51543 call!7256)))

(declare-fun b!78884 () Bool)

(assert (=> b!78884 (= e!51542 e!51543)))

(declare-fun c!12158 () Bool)

(assert (=> b!78884 (= c!12158 (validKeyInArray!0 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!18783 () Bool)

(declare-fun lt!36539 () (_ BitVec 32))

(assert (=> d!18783 (and (bvsge lt!36539 #b00000000000000000000000000000000) (bvsle lt!36539 (bvsub (size!2135 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!18783 (= lt!36539 e!51542)))

(declare-fun c!12159 () Bool)

(assert (=> d!18783 (= c!12159 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18783 (and (bvsle #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2135 (_keys!3932 newMap!16)) (size!2135 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))))))

(assert (=> d!18783 (= (arrayCountValidKeys!0 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) lt!36539)))

(assert (= (and d!18783 c!12159) b!78882))

(assert (= (and d!18783 (not c!12159)) b!78884))

(assert (= (and b!78884 c!12158) b!78881))

(assert (= (and b!78884 (not c!12158)) b!78883))

(assert (= (or b!78881 b!78883) bm!7253))

(declare-fun m!79343 () Bool)

(assert (=> bm!7253 m!79343))

(declare-fun m!79345 () Bool)

(assert (=> b!78884 m!79345))

(assert (=> b!78884 m!79345))

(declare-fun m!79347 () Bool)

(assert (=> b!78884 m!79347))

(assert (=> d!18651 d!18783))

(declare-fun b!78885 () Bool)

(declare-fun e!51547 () ListLongMap!1465)

(declare-fun call!7263 () ListLongMap!1465)

(assert (=> b!78885 (= e!51547 (+!109 call!7263 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(declare-fun b!78886 () Bool)

(declare-fun res!41267 () Bool)

(declare-fun e!51556 () Bool)

(assert (=> b!78886 (=> (not res!41267) (not e!51556))))

(declare-fun e!51554 () Bool)

(assert (=> b!78886 (= res!41267 e!51554)))

(declare-fun c!12165 () Bool)

(assert (=> b!78886 (= c!12165 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78887 () Bool)

(declare-fun e!51549 () ListLongMap!1465)

(declare-fun call!7262 () ListLongMap!1465)

(assert (=> b!78887 (= e!51549 call!7262)))

(declare-fun bm!7254 () Bool)

(declare-fun call!7261 () ListLongMap!1465)

(declare-fun call!7259 () ListLongMap!1465)

(assert (=> bm!7254 (= call!7261 call!7259)))

(declare-fun e!51553 () Bool)

(declare-fun lt!36552 () ListLongMap!1465)

(declare-fun b!78888 () Bool)

(assert (=> b!78888 (= e!51553 (= (apply!79 lt!36552 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78888 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))))))

(assert (=> b!78888 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))))))

(declare-fun b!78889 () Bool)

(declare-fun e!51550 () Bool)

(assert (=> b!78889 (= e!51554 e!51550)))

(declare-fun res!41268 () Bool)

(declare-fun call!7258 () Bool)

(assert (=> b!78889 (= res!41268 call!7258)))

(assert (=> b!78889 (=> (not res!41268) (not e!51550))))

(declare-fun bm!7255 () Bool)

(declare-fun call!7260 () Bool)

(assert (=> bm!7255 (= call!7260 (contains!745 lt!36552 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51548 () Bool)

(declare-fun b!78891 () Bool)

(assert (=> b!78891 (= e!51548 (validKeyInArray!0 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!78892 () Bool)

(declare-fun e!51555 () Unit!2263)

(declare-fun Unit!2300 () Unit!2263)

(assert (=> b!78892 (= e!51555 Unit!2300)))

(declare-fun bm!7256 () Bool)

(assert (=> bm!7256 (= call!7259 (getCurrentListMapNoExtraKeys!73 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78893 () Bool)

(declare-fun e!51545 () ListLongMap!1465)

(declare-fun call!7257 () ListLongMap!1465)

(assert (=> b!78893 (= e!51545 call!7257)))

(declare-fun b!78894 () Bool)

(declare-fun e!51544 () Bool)

(assert (=> b!78894 (= e!51556 e!51544)))

(declare-fun c!12161 () Bool)

(assert (=> b!78894 (= c!12161 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78895 () Bool)

(declare-fun lt!36554 () Unit!2263)

(assert (=> b!78895 (= e!51555 lt!36554)))

(declare-fun lt!36553 () ListLongMap!1465)

(assert (=> b!78895 (= lt!36553 (getCurrentListMapNoExtraKeys!73 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36559 () (_ BitVec 64))

(assert (=> b!78895 (= lt!36559 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36550 () (_ BitVec 64))

(assert (=> b!78895 (= lt!36550 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36544 () Unit!2263)

(assert (=> b!78895 (= lt!36544 (addStillContains!55 lt!36553 lt!36559 (zeroValue!2170 newMap!16) lt!36550))))

(assert (=> b!78895 (contains!745 (+!109 lt!36553 (tuple2!2191 lt!36559 (zeroValue!2170 newMap!16))) lt!36550)))

(declare-fun lt!36549 () Unit!2263)

(assert (=> b!78895 (= lt!36549 lt!36544)))

(declare-fun lt!36560 () ListLongMap!1465)

(assert (=> b!78895 (= lt!36560 (getCurrentListMapNoExtraKeys!73 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36561 () (_ BitVec 64))

(assert (=> b!78895 (= lt!36561 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36557 () (_ BitVec 64))

(assert (=> b!78895 (= lt!36557 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36548 () Unit!2263)

(assert (=> b!78895 (= lt!36548 (addApplyDifferent!55 lt!36560 lt!36561 (minValue!2170 newMap!16) lt!36557))))

(assert (=> b!78895 (= (apply!79 (+!109 lt!36560 (tuple2!2191 lt!36561 (minValue!2170 newMap!16))) lt!36557) (apply!79 lt!36560 lt!36557))))

(declare-fun lt!36540 () Unit!2263)

(assert (=> b!78895 (= lt!36540 lt!36548)))

(declare-fun lt!36556 () ListLongMap!1465)

(assert (=> b!78895 (= lt!36556 (getCurrentListMapNoExtraKeys!73 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36542 () (_ BitVec 64))

(assert (=> b!78895 (= lt!36542 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36546 () (_ BitVec 64))

(assert (=> b!78895 (= lt!36546 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36558 () Unit!2263)

(assert (=> b!78895 (= lt!36558 (addApplyDifferent!55 lt!36556 lt!36542 (zeroValue!2170 newMap!16) lt!36546))))

(assert (=> b!78895 (= (apply!79 (+!109 lt!36556 (tuple2!2191 lt!36542 (zeroValue!2170 newMap!16))) lt!36546) (apply!79 lt!36556 lt!36546))))

(declare-fun lt!36545 () Unit!2263)

(assert (=> b!78895 (= lt!36545 lt!36558)))

(declare-fun lt!36541 () ListLongMap!1465)

(assert (=> b!78895 (= lt!36541 (getCurrentListMapNoExtraKeys!73 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36543 () (_ BitVec 64))

(assert (=> b!78895 (= lt!36543 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36555 () (_ BitVec 64))

(assert (=> b!78895 (= lt!36555 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!78895 (= lt!36554 (addApplyDifferent!55 lt!36541 lt!36543 (minValue!2170 newMap!16) lt!36555))))

(assert (=> b!78895 (= (apply!79 (+!109 lt!36541 (tuple2!2191 lt!36543 (minValue!2170 newMap!16))) lt!36555) (apply!79 lt!36541 lt!36555))))

(declare-fun b!78896 () Bool)

(declare-fun e!51546 () Bool)

(assert (=> b!78896 (= e!51546 e!51553)))

(declare-fun res!41266 () Bool)

(assert (=> b!78896 (=> (not res!41266) (not e!51553))))

(assert (=> b!78896 (= res!41266 (contains!745 lt!36552 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!78896 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))))))

(declare-fun b!78897 () Bool)

(assert (=> b!78897 (= e!51547 e!51549)))

(declare-fun c!12162 () Bool)

(assert (=> b!78897 (= c!12162 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7257 () Bool)

(assert (=> bm!7257 (= call!7262 call!7263)))

(declare-fun b!78898 () Bool)

(declare-fun res!41264 () Bool)

(assert (=> b!78898 (=> (not res!41264) (not e!51556))))

(assert (=> b!78898 (= res!41264 e!51546)))

(declare-fun res!41265 () Bool)

(assert (=> b!78898 (=> res!41265 e!51546)))

(declare-fun e!51551 () Bool)

(assert (=> b!78898 (= res!41265 (not e!51551))))

(declare-fun res!41269 () Bool)

(assert (=> b!78898 (=> (not res!41269) (not e!51551))))

(assert (=> b!78898 (= res!41269 (bvslt #b00000000000000000000000000000000 (size!2135 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))))))

(declare-fun b!78899 () Bool)

(declare-fun c!12163 () Bool)

(assert (=> b!78899 (= c!12163 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78899 (= e!51549 e!51545)))

(declare-fun b!78900 () Bool)

(assert (=> b!78900 (= e!51551 (validKeyInArray!0 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!78901 () Bool)

(assert (=> b!78901 (= e!51545 call!7262)))

(declare-fun bm!7258 () Bool)

(declare-fun c!12160 () Bool)

(assert (=> bm!7258 (= call!7263 (+!109 (ite c!12160 call!7259 (ite c!12162 call!7261 call!7257)) (ite (or c!12160 c!12162) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun bm!7259 () Bool)

(assert (=> bm!7259 (= call!7258 (contains!745 lt!36552 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78902 () Bool)

(assert (=> b!78902 (= e!51554 (not call!7258))))

(declare-fun b!78890 () Bool)

(declare-fun e!51552 () Bool)

(assert (=> b!78890 (= e!51544 e!51552)))

(declare-fun res!41271 () Bool)

(assert (=> b!78890 (= res!41271 call!7260)))

(assert (=> b!78890 (=> (not res!41271) (not e!51552))))

(declare-fun d!18785 () Bool)

(assert (=> d!18785 e!51556))

(declare-fun res!41272 () Bool)

(assert (=> d!18785 (=> (not res!41272) (not e!51556))))

(assert (=> d!18785 (= res!41272 (or (bvsge #b00000000000000000000000000000000 (size!2135 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))))))))

(declare-fun lt!36551 () ListLongMap!1465)

(assert (=> d!18785 (= lt!36552 lt!36551)))

(declare-fun lt!36547 () Unit!2263)

(assert (=> d!18785 (= lt!36547 e!51555)))

(declare-fun c!12164 () Bool)

(assert (=> d!18785 (= c!12164 e!51548)))

(declare-fun res!41270 () Bool)

(assert (=> d!18785 (=> (not res!41270) (not e!51548))))

(assert (=> d!18785 (= res!41270 (bvslt #b00000000000000000000000000000000 (size!2135 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))))))

(assert (=> d!18785 (= lt!36551 e!51547)))

(assert (=> d!18785 (= c!12160 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18785 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18785 (= (getCurrentListMap!435 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36552)))

(declare-fun bm!7260 () Bool)

(assert (=> bm!7260 (= call!7257 call!7261)))

(declare-fun b!78903 () Bool)

(assert (=> b!78903 (= e!51552 (= (apply!79 lt!36552 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!78904 () Bool)

(assert (=> b!78904 (= e!51544 (not call!7260))))

(declare-fun b!78905 () Bool)

(assert (=> b!78905 (= e!51550 (= (apply!79 lt!36552 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(assert (= (and d!18785 c!12160) b!78885))

(assert (= (and d!18785 (not c!12160)) b!78897))

(assert (= (and b!78897 c!12162) b!78887))

(assert (= (and b!78897 (not c!12162)) b!78899))

(assert (= (and b!78899 c!12163) b!78901))

(assert (= (and b!78899 (not c!12163)) b!78893))

(assert (= (or b!78901 b!78893) bm!7260))

(assert (= (or b!78887 bm!7260) bm!7254))

(assert (= (or b!78887 b!78901) bm!7257))

(assert (= (or b!78885 bm!7254) bm!7256))

(assert (= (or b!78885 bm!7257) bm!7258))

(assert (= (and d!18785 res!41270) b!78891))

(assert (= (and d!18785 c!12164) b!78895))

(assert (= (and d!18785 (not c!12164)) b!78892))

(assert (= (and d!18785 res!41272) b!78898))

(assert (= (and b!78898 res!41269) b!78900))

(assert (= (and b!78898 (not res!41265)) b!78896))

(assert (= (and b!78896 res!41266) b!78888))

(assert (= (and b!78898 res!41264) b!78886))

(assert (= (and b!78886 c!12165) b!78889))

(assert (= (and b!78886 (not c!12165)) b!78902))

(assert (= (and b!78889 res!41268) b!78905))

(assert (= (or b!78889 b!78902) bm!7259))

(assert (= (and b!78886 res!41267) b!78894))

(assert (= (and b!78894 c!12161) b!78890))

(assert (= (and b!78894 (not c!12161)) b!78904))

(assert (= (and b!78890 res!41271) b!78903))

(assert (= (or b!78890 b!78904) bm!7255))

(declare-fun b_lambda!3539 () Bool)

(assert (=> (not b_lambda!3539) (not b!78888)))

(assert (=> b!78888 t!5191))

(declare-fun b_and!4845 () Bool)

(assert (= b_and!4841 (and (=> t!5191 result!2829) b_and!4845)))

(assert (=> b!78888 t!5193))

(declare-fun b_and!4847 () Bool)

(assert (= b_and!4843 (and (=> t!5193 result!2831) b_and!4847)))

(declare-fun m!79349 () Bool)

(assert (=> bm!7259 m!79349))

(declare-fun m!79351 () Bool)

(assert (=> bm!7256 m!79351))

(declare-fun m!79353 () Bool)

(assert (=> bm!7255 m!79353))

(declare-fun m!79355 () Bool)

(assert (=> b!78895 m!79355))

(declare-fun m!79357 () Bool)

(assert (=> b!78895 m!79357))

(declare-fun m!79359 () Bool)

(assert (=> b!78895 m!79359))

(declare-fun m!79361 () Bool)

(assert (=> b!78895 m!79361))

(declare-fun m!79363 () Bool)

(assert (=> b!78895 m!79363))

(declare-fun m!79365 () Bool)

(assert (=> b!78895 m!79365))

(declare-fun m!79367 () Bool)

(assert (=> b!78895 m!79367))

(assert (=> b!78895 m!79359))

(declare-fun m!79369 () Bool)

(assert (=> b!78895 m!79369))

(declare-fun m!79371 () Bool)

(assert (=> b!78895 m!79371))

(assert (=> b!78895 m!79345))

(assert (=> b!78895 m!79371))

(declare-fun m!79373 () Bool)

(assert (=> b!78895 m!79373))

(assert (=> b!78895 m!79357))

(declare-fun m!79375 () Bool)

(assert (=> b!78895 m!79375))

(declare-fun m!79377 () Bool)

(assert (=> b!78895 m!79377))

(assert (=> b!78895 m!79377))

(declare-fun m!79379 () Bool)

(assert (=> b!78895 m!79379))

(declare-fun m!79381 () Bool)

(assert (=> b!78895 m!79381))

(assert (=> b!78895 m!79351))

(declare-fun m!79383 () Bool)

(assert (=> b!78895 m!79383))

(assert (=> d!18785 m!78167))

(declare-fun m!79385 () Bool)

(assert (=> b!78888 m!79385))

(assert (=> b!78888 m!79345))

(declare-fun m!79387 () Bool)

(assert (=> b!78888 m!79387))

(assert (=> b!78888 m!79385))

(assert (=> b!78888 m!78273))

(declare-fun m!79389 () Bool)

(assert (=> b!78888 m!79389))

(assert (=> b!78888 m!78273))

(assert (=> b!78888 m!79345))

(declare-fun m!79391 () Bool)

(assert (=> bm!7258 m!79391))

(declare-fun m!79393 () Bool)

(assert (=> b!78885 m!79393))

(assert (=> b!78891 m!79345))

(assert (=> b!78891 m!79345))

(assert (=> b!78891 m!79347))

(assert (=> b!78896 m!79345))

(assert (=> b!78896 m!79345))

(declare-fun m!79395 () Bool)

(assert (=> b!78896 m!79395))

(declare-fun m!79397 () Bool)

(assert (=> b!78905 m!79397))

(declare-fun m!79399 () Bool)

(assert (=> b!78903 m!79399))

(assert (=> b!78900 m!79345))

(assert (=> b!78900 m!79345))

(assert (=> b!78900 m!79347))

(assert (=> d!18651 d!18785))

(declare-fun d!18787 () Bool)

(declare-fun e!51558 () Bool)

(assert (=> d!18787 e!51558))

(declare-fun res!41273 () Bool)

(assert (=> d!18787 (=> res!41273 e!51558)))

(declare-fun lt!36562 () Bool)

(assert (=> d!18787 (= res!41273 (not lt!36562))))

(declare-fun lt!36563 () Bool)

(assert (=> d!18787 (= lt!36562 lt!36563)))

(declare-fun lt!36564 () Unit!2263)

(declare-fun e!51557 () Unit!2263)

(assert (=> d!18787 (= lt!36564 e!51557)))

(declare-fun c!12166 () Bool)

(assert (=> d!18787 (= c!12166 lt!36563)))

(assert (=> d!18787 (= lt!36563 (containsKey!140 (toList!748 (getCurrentListMap!435 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)))))))

(assert (=> d!18787 (= (contains!745 (getCurrentListMap!435 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)))) lt!36562)))

(declare-fun b!78906 () Bool)

(declare-fun lt!36565 () Unit!2263)

(assert (=> b!78906 (= e!51557 lt!36565)))

(assert (=> b!78906 (= lt!36565 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (getCurrentListMap!435 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)))))))

(assert (=> b!78906 (isDefined!90 (getValueByKey!136 (toList!748 (getCurrentListMap!435 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)))))))

(declare-fun b!78907 () Bool)

(declare-fun Unit!2301 () Unit!2263)

(assert (=> b!78907 (= e!51557 Unit!2301)))

(declare-fun b!78908 () Bool)

(assert (=> b!78908 (= e!51558 (isDefined!90 (getValueByKey!136 (toList!748 (getCurrentListMap!435 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063))))))))

(assert (= (and d!18787 c!12166) b!78906))

(assert (= (and d!18787 (not c!12166)) b!78907))

(assert (= (and d!18787 (not res!41273)) b!78908))

(assert (=> d!18787 m!78877))

(declare-fun m!79401 () Bool)

(assert (=> d!18787 m!79401))

(assert (=> b!78906 m!78877))

(declare-fun m!79403 () Bool)

(assert (=> b!78906 m!79403))

(assert (=> b!78906 m!78877))

(declare-fun m!79405 () Bool)

(assert (=> b!78906 m!79405))

(assert (=> b!78906 m!79405))

(declare-fun m!79407 () Bool)

(assert (=> b!78906 m!79407))

(assert (=> b!78908 m!78877))

(assert (=> b!78908 m!79405))

(assert (=> b!78908 m!79405))

(assert (=> b!78908 m!79407))

(assert (=> d!18651 d!18787))

(declare-fun call!7264 () Bool)

(declare-fun bm!7261 () Bool)

(assert (=> bm!7261 (= call!7264 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (mask!6268 newMap!16)))))

(declare-fun b!78909 () Bool)

(declare-fun e!51561 () Bool)

(assert (=> b!78909 (= e!51561 call!7264)))

(declare-fun b!78910 () Bool)

(declare-fun e!51560 () Bool)

(assert (=> b!78910 (= e!51560 call!7264)))

(declare-fun d!18789 () Bool)

(declare-fun res!41275 () Bool)

(declare-fun e!51559 () Bool)

(assert (=> d!18789 (=> res!41275 e!51559)))

(assert (=> d!18789 (= res!41275 (bvsge #b00000000000000000000000000000000 (size!2135 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))))))))

(assert (=> d!18789 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (mask!6268 newMap!16)) e!51559)))

(declare-fun b!78911 () Bool)

(assert (=> b!78911 (= e!51561 e!51560)))

(declare-fun lt!36566 () (_ BitVec 64))

(assert (=> b!78911 (= lt!36566 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!36568 () Unit!2263)

(assert (=> b!78911 (= lt!36568 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) lt!36566 #b00000000000000000000000000000000))))

(assert (=> b!78911 (arrayContainsKey!0 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) lt!36566 #b00000000000000000000000000000000)))

(declare-fun lt!36567 () Unit!2263)

(assert (=> b!78911 (= lt!36567 lt!36568)))

(declare-fun res!41274 () Bool)

(assert (=> b!78911 (= res!41274 (= (seekEntryOrOpen!0 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000) (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (mask!6268 newMap!16)) (Found!250 #b00000000000000000000000000000000)))))

(assert (=> b!78911 (=> (not res!41274) (not e!51560))))

(declare-fun b!78912 () Bool)

(assert (=> b!78912 (= e!51559 e!51561)))

(declare-fun c!12167 () Bool)

(assert (=> b!78912 (= c!12167 (validKeyInArray!0 (select (arr!1894 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!18789 (not res!41275)) b!78912))

(assert (= (and b!78912 c!12167) b!78911))

(assert (= (and b!78912 (not c!12167)) b!78909))

(assert (= (and b!78911 res!41274) b!78910))

(assert (= (or b!78910 b!78909) bm!7261))

(declare-fun m!79409 () Bool)

(assert (=> bm!7261 m!79409))

(assert (=> b!78911 m!79345))

(declare-fun m!79411 () Bool)

(assert (=> b!78911 m!79411))

(declare-fun m!79413 () Bool)

(assert (=> b!78911 m!79413))

(assert (=> b!78911 m!79345))

(declare-fun m!79415 () Bool)

(assert (=> b!78911 m!79415))

(assert (=> b!78912 m!79345))

(assert (=> b!78912 m!79345))

(assert (=> b!78912 m!79347))

(assert (=> d!18651 d!18789))

(declare-fun d!18791 () Bool)

(declare-fun e!51564 () Bool)

(assert (=> d!18791 e!51564))

(declare-fun res!41278 () Bool)

(assert (=> d!18791 (=> (not res!41278) (not e!51564))))

(assert (=> d!18791 (= res!41278 (and (bvsge (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (size!2135 (_keys!3932 newMap!16)))))))

(declare-fun lt!36571 () Unit!2263)

(declare-fun choose!102 ((_ BitVec 64) array!3974 (_ BitVec 32) (_ BitVec 32)) Unit!2263)

(assert (=> d!18791 (= lt!36571 (choose!102 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (mask!6268 newMap!16)))))

(assert (=> d!18791 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18791 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (mask!6268 newMap!16)) lt!36571)))

(declare-fun b!78915 () Bool)

(assert (=> b!78915 (= e!51564 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (mask!6268 newMap!16)))))

(assert (= (and d!18791 res!41278) b!78915))

(assert (=> d!18791 m!77749))

(declare-fun m!79417 () Bool)

(assert (=> d!18791 m!79417))

(assert (=> d!18791 m!78167))

(assert (=> b!78915 m!78855))

(assert (=> b!78915 m!78849))

(assert (=> d!18651 d!18791))

(assert (=> d!18651 d!18513))

(declare-fun d!18793 () Bool)

(declare-fun e!51565 () Bool)

(assert (=> d!18793 e!51565))

(declare-fun res!41279 () Bool)

(assert (=> d!18793 (=> (not res!41279) (not e!51565))))

(assert (=> d!18793 (= res!41279 (and (bvsge (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (size!2135 lt!36389))))))

(declare-fun lt!36572 () Unit!2263)

(assert (=> d!18793 (= lt!36572 (choose!466 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (defaultEntry!2272 newMap!16)))))

(assert (=> d!18793 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18793 (= (lemmaValidKeyInArrayIsInListMap!86 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (defaultEntry!2272 newMap!16)) lt!36572)))

(declare-fun b!78916 () Bool)

(assert (=> b!78916 (= e!51565 (contains!745 (getCurrentListMap!435 lt!36389 lt!36375 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1894 lt!36389) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)))))))

(assert (= (and d!18793 res!41279) b!78916))

(declare-fun m!79419 () Bool)

(assert (=> d!18793 m!79419))

(assert (=> d!18793 m!78167))

(assert (=> b!78916 m!78873))

(declare-fun m!79421 () Bool)

(assert (=> b!78916 m!79421))

(assert (=> b!78916 m!78873))

(assert (=> b!78916 m!79421))

(declare-fun m!79423 () Bool)

(assert (=> b!78916 m!79423))

(assert (=> d!18651 d!18793))

(declare-fun d!18795 () Bool)

(declare-fun e!51566 () Bool)

(assert (=> d!18795 e!51566))

(declare-fun res!41280 () Bool)

(assert (=> d!18795 (=> (not res!41280) (not e!51566))))

(declare-fun lt!36576 () ListLongMap!1465)

(assert (=> d!18795 (= res!41280 (contains!745 lt!36576 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!36573 () List!1533)

(assert (=> d!18795 (= lt!36576 (ListLongMap!1466 lt!36573))))

(declare-fun lt!36575 () Unit!2263)

(declare-fun lt!36574 () Unit!2263)

(assert (=> d!18795 (= lt!36575 lt!36574)))

(assert (=> d!18795 (= (getValueByKey!136 lt!36573 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18795 (= lt!36574 (lemmaContainsTupThenGetReturnValue!55 lt!36573 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18795 (= lt!36573 (insertStrictlySorted!57 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18795 (= (+!109 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!36576)))

(declare-fun b!78917 () Bool)

(declare-fun res!41281 () Bool)

(assert (=> b!78917 (=> (not res!41281) (not e!51566))))

(assert (=> b!78917 (= res!41281 (= (getValueByKey!136 (toList!748 lt!36576) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!78918 () Bool)

(assert (=> b!78918 (= e!51566 (contains!748 (toList!748 lt!36576) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!18795 res!41280) b!78917))

(assert (= (and b!78917 res!41281) b!78918))

(declare-fun m!79425 () Bool)

(assert (=> d!18795 m!79425))

(declare-fun m!79427 () Bool)

(assert (=> d!18795 m!79427))

(declare-fun m!79429 () Bool)

(assert (=> d!18795 m!79429))

(declare-fun m!79431 () Bool)

(assert (=> d!18795 m!79431))

(declare-fun m!79433 () Bool)

(assert (=> b!78917 m!79433))

(declare-fun m!79435 () Bool)

(assert (=> b!78918 m!79435))

(assert (=> d!18651 d!18795))

(declare-fun b!78919 () Bool)

(declare-fun e!51568 () (_ BitVec 32))

(declare-fun call!7265 () (_ BitVec 32))

(assert (=> b!78919 (= e!51568 (bvadd #b00000000000000000000000000000001 call!7265))))

(declare-fun b!78920 () Bool)

(declare-fun e!51567 () (_ BitVec 32))

(assert (=> b!78920 (= e!51567 #b00000000000000000000000000000000)))

(declare-fun bm!7262 () Bool)

(assert (=> bm!7262 (= call!7265 (arrayCountValidKeys!0 lt!36384 (bvadd (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000001) (bvadd (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000001)))))

(declare-fun b!78921 () Bool)

(assert (=> b!78921 (= e!51568 call!7265)))

(declare-fun b!78922 () Bool)

(assert (=> b!78922 (= e!51567 e!51568)))

(declare-fun c!12168 () Bool)

(assert (=> b!78922 (= c!12168 (validKeyInArray!0 (select (arr!1894 lt!36384) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)))))))

(declare-fun d!18797 () Bool)

(declare-fun lt!36577 () (_ BitVec 32))

(assert (=> d!18797 (and (bvsge lt!36577 #b00000000000000000000000000000000) (bvsle lt!36577 (bvsub (size!2135 lt!36384) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)))))))

(assert (=> d!18797 (= lt!36577 e!51567)))

(declare-fun c!12169 () Bool)

(assert (=> d!18797 (= c!12169 (bvsge (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (bvadd (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000001)))))

(assert (=> d!18797 (and (bvsle (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (bvadd (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000001)) (bvsge (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000001) (size!2135 lt!36384)))))

(assert (=> d!18797 (= (arrayCountValidKeys!0 lt!36384 (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (bvadd (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000001)) lt!36577)))

(assert (= (and d!18797 c!12169) b!78920))

(assert (= (and d!18797 (not c!12169)) b!78922))

(assert (= (and b!78922 c!12168) b!78919))

(assert (= (and b!78922 (not c!12168)) b!78921))

(assert (= (or b!78919 b!78921) bm!7262))

(declare-fun m!79437 () Bool)

(assert (=> bm!7262 m!79437))

(assert (=> b!78922 m!79267))

(assert (=> b!78922 m!79267))

(assert (=> b!78922 m!79269))

(assert (=> d!18651 d!18797))

(assert (=> d!18651 d!18467))

(declare-fun d!18799 () Bool)

(declare-fun res!41282 () Bool)

(declare-fun e!51569 () Bool)

(assert (=> d!18799 (=> res!41282 e!51569)))

(assert (=> d!18799 (= res!41282 (= (select (arr!1894 lt!36398) #b00000000000000000000000000000000) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!18799 (= (arrayContainsKey!0 lt!36398 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000) e!51569)))

(declare-fun b!78923 () Bool)

(declare-fun e!51570 () Bool)

(assert (=> b!78923 (= e!51569 e!51570)))

(declare-fun res!41283 () Bool)

(assert (=> b!78923 (=> (not res!41283) (not e!51570))))

(assert (=> b!78923 (= res!41283 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 lt!36398)))))

(declare-fun b!78924 () Bool)

(assert (=> b!78924 (= e!51570 (arrayContainsKey!0 lt!36398 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!18799 (not res!41282)) b!78923))

(assert (= (and b!78923 res!41283) b!78924))

(declare-fun m!79439 () Bool)

(assert (=> d!18799 m!79439))

(assert (=> b!78924 m!77749))

(declare-fun m!79441 () Bool)

(assert (=> b!78924 m!79441))

(assert (=> d!18651 d!18799))

(declare-fun d!18801 () Bool)

(declare-fun e!51573 () Bool)

(assert (=> d!18801 e!51573))

(declare-fun res!41286 () Bool)

(assert (=> d!18801 (=> (not res!41286) (not e!51573))))

(assert (=> d!18801 (= res!41286 (and (bvsge (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) #b00000000000000000000000000000000) (bvslt (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (size!2135 (_keys!3932 newMap!16))) (bvslt (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (size!2136 (_values!2255 newMap!16)))))))

(declare-fun lt!36580 () Unit!2263)

(declare-fun choose!474 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 32) (_ BitVec 64) V!2995 Int) Unit!2263)

(assert (=> d!18801 (= lt!36580 (choose!474 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 (defaultEntry!2272 newMap!16)))))

(assert (=> d!18801 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18801 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!16 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 (defaultEntry!2272 newMap!16)) lt!36580)))

(declare-fun b!78927 () Bool)

(assert (=> b!78927 (= e!51573 (= (+!109 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (getCurrentListMap!435 (array!3975 (store (arr!1894 (_keys!3932 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (size!2135 (_keys!3932 newMap!16))) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (ite c!11978 (index!3137 lt!36063) (index!3134 lt!36063)) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))))

(assert (= (and d!18801 res!41286) b!78927))

(assert (=> d!18801 m!77749))

(declare-fun m!79443 () Bool)

(assert (=> d!18801 m!79443))

(assert (=> d!18801 m!78167))

(assert (=> b!78927 m!78025))

(assert (=> b!78927 m!78859))

(assert (=> b!78927 m!78855))

(assert (=> b!78927 m!78025))

(assert (=> b!78927 m!78351))

(assert (=> b!78927 m!78871))

(assert (=> d!18651 d!18801))

(declare-fun b!78928 () Bool)

(declare-fun e!51575 () (_ BitVec 32))

(declare-fun call!7266 () (_ BitVec 32))

(assert (=> b!78928 (= e!51575 (bvadd #b00000000000000000000000000000001 call!7266))))

(declare-fun b!78929 () Bool)

(declare-fun e!51574 () (_ BitVec 32))

(assert (=> b!78929 (= e!51574 #b00000000000000000000000000000000)))

(declare-fun bm!7263 () Bool)

(assert (=> bm!7263 (= call!7266 (arrayCountValidKeys!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78930 () Bool)

(assert (=> b!78930 (= e!51575 call!7266)))

(declare-fun b!78931 () Bool)

(assert (=> b!78931 (= e!51574 e!51575)))

(declare-fun c!12170 () Bool)

(assert (=> b!78931 (= c!12170 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!18803 () Bool)

(declare-fun lt!36581 () (_ BitVec 32))

(assert (=> d!18803 (and (bvsge lt!36581 #b00000000000000000000000000000000) (bvsle lt!36581 (bvsub (size!2135 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!18803 (= lt!36581 e!51574)))

(declare-fun c!12171 () Bool)

(assert (=> d!18803 (= c!12171 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18803 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 (_keys!3932 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2135 (_keys!3932 newMap!16)) (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18803 (= (arrayCountValidKeys!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 (_keys!3932 newMap!16))) lt!36581)))

(assert (= (and d!18803 c!12171) b!78929))

(assert (= (and d!18803 (not c!12171)) b!78931))

(assert (= (and b!78931 c!12170) b!78928))

(assert (= (and b!78931 (not c!12170)) b!78930))

(assert (= (or b!78928 b!78930) bm!7263))

(declare-fun m!79445 () Bool)

(assert (=> bm!7263 m!79445))

(declare-fun m!79447 () Bool)

(assert (=> b!78931 m!79447))

(assert (=> b!78931 m!79447))

(declare-fun m!79449 () Bool)

(assert (=> b!78931 m!79449))

(assert (=> bm!7171 d!18803))

(declare-fun d!18805 () Bool)

(declare-fun lt!36582 () Bool)

(assert (=> d!18805 (= lt!36582 (select (content!82 (toList!748 lt!36237)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun e!51576 () Bool)

(assert (=> d!18805 (= lt!36582 e!51576)))

(declare-fun res!41287 () Bool)

(assert (=> d!18805 (=> (not res!41287) (not e!51576))))

(assert (=> d!18805 (= res!41287 ((_ is Cons!1529) (toList!748 lt!36237)))))

(assert (=> d!18805 (= (contains!748 (toList!748 lt!36237) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36582)))

(declare-fun b!78932 () Bool)

(declare-fun e!51577 () Bool)

(assert (=> b!78932 (= e!51576 e!51577)))

(declare-fun res!41288 () Bool)

(assert (=> b!78932 (=> res!41288 e!51577)))

(assert (=> b!78932 (= res!41288 (= (h!2117 (toList!748 lt!36237)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!78933 () Bool)

(assert (=> b!78933 (= e!51577 (contains!748 (t!5183 (toList!748 lt!36237)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18805 res!41287) b!78932))

(assert (= (and b!78932 (not res!41288)) b!78933))

(declare-fun m!79451 () Bool)

(assert (=> d!18805 m!79451))

(declare-fun m!79453 () Bool)

(assert (=> d!18805 m!79453))

(declare-fun m!79455 () Bool)

(assert (=> b!78933 m!79455))

(assert (=> b!78524 d!18805))

(declare-fun b!78935 () Bool)

(declare-fun e!51578 () Option!142)

(declare-fun e!51579 () Option!142)

(assert (=> b!78935 (= e!51578 e!51579)))

(declare-fun c!12173 () Bool)

(assert (=> b!78935 (= c!12173 (and ((_ is Cons!1529) (toList!748 lt!36435)) (not (= (_1!1105 (h!2117 (toList!748 lt!36435))) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))))

(declare-fun b!78934 () Bool)

(assert (=> b!78934 (= e!51578 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36435)))))))

(declare-fun b!78936 () Bool)

(assert (=> b!78936 (= e!51579 (getValueByKey!136 (t!5183 (toList!748 lt!36435)) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!78937 () Bool)

(assert (=> b!78937 (= e!51579 None!140)))

(declare-fun d!18807 () Bool)

(declare-fun c!12172 () Bool)

(assert (=> d!18807 (= c!12172 (and ((_ is Cons!1529) (toList!748 lt!36435)) (= (_1!1105 (h!2117 (toList!748 lt!36435))) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(assert (=> d!18807 (= (getValueByKey!136 (toList!748 lt!36435) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) e!51578)))

(assert (= (and d!18807 c!12172) b!78934))

(assert (= (and d!18807 (not c!12172)) b!78935))

(assert (= (and b!78935 c!12173) b!78936))

(assert (= (and b!78935 (not c!12173)) b!78937))

(declare-fun m!79457 () Bool)

(assert (=> b!78936 m!79457))

(assert (=> b!78731 d!18807))

(declare-fun d!18809 () Bool)

(declare-fun c!12176 () Bool)

(assert (=> d!18809 (= c!12176 ((_ is Nil!1530) (toList!748 lt!35903)))))

(declare-fun e!51582 () (InoxSet tuple2!2190))

(assert (=> d!18809 (= (content!82 (toList!748 lt!35903)) e!51582)))

(declare-fun b!78942 () Bool)

(assert (=> b!78942 (= e!51582 ((as const (Array tuple2!2190 Bool)) false))))

(declare-fun b!78943 () Bool)

(assert (=> b!78943 (= e!51582 ((_ map or) (store ((as const (Array tuple2!2190 Bool)) false) (h!2117 (toList!748 lt!35903)) true) (content!82 (t!5183 (toList!748 lt!35903)))))))

(assert (= (and d!18809 c!12176) b!78942))

(assert (= (and d!18809 (not c!12176)) b!78943))

(declare-fun m!79459 () Bool)

(assert (=> b!78943 m!79459))

(declare-fun m!79461 () Bool)

(assert (=> b!78943 m!79461))

(assert (=> d!18529 d!18809))

(assert (=> d!18493 d!18491))

(assert (=> d!18493 d!18499))

(declare-fun d!18811 () Bool)

(assert (=> d!18811 (not (contains!745 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)) lt!35868))))

(assert (=> d!18811 true))

(declare-fun _$36!304 () Unit!2263)

(assert (=> d!18811 (= (choose!464 lt!35869 lt!35870 lt!35871 lt!35868) _$36!304)))

(declare-fun bs!3331 () Bool)

(assert (= bs!3331 d!18811))

(assert (=> bs!3331 m!77913))

(assert (=> bs!3331 m!77913))

(assert (=> bs!3331 m!77915))

(assert (=> d!18493 d!18811))

(declare-fun d!18813 () Bool)

(declare-fun e!51584 () Bool)

(assert (=> d!18813 e!51584))

(declare-fun res!41289 () Bool)

(assert (=> d!18813 (=> res!41289 e!51584)))

(declare-fun lt!36583 () Bool)

(assert (=> d!18813 (= res!41289 (not lt!36583))))

(declare-fun lt!36584 () Bool)

(assert (=> d!18813 (= lt!36583 lt!36584)))

(declare-fun lt!36585 () Unit!2263)

(declare-fun e!51583 () Unit!2263)

(assert (=> d!18813 (= lt!36585 e!51583)))

(declare-fun c!12177 () Bool)

(assert (=> d!18813 (= c!12177 lt!36584)))

(assert (=> d!18813 (= lt!36584 (containsKey!140 (toList!748 lt!35869) lt!35868))))

(assert (=> d!18813 (= (contains!745 lt!35869 lt!35868) lt!36583)))

(declare-fun b!78945 () Bool)

(declare-fun lt!36586 () Unit!2263)

(assert (=> b!78945 (= e!51583 lt!36586)))

(assert (=> b!78945 (= lt!36586 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35869) lt!35868))))

(assert (=> b!78945 (isDefined!90 (getValueByKey!136 (toList!748 lt!35869) lt!35868))))

(declare-fun b!78946 () Bool)

(declare-fun Unit!2302 () Unit!2263)

(assert (=> b!78946 (= e!51583 Unit!2302)))

(declare-fun b!78947 () Bool)

(assert (=> b!78947 (= e!51584 (isDefined!90 (getValueByKey!136 (toList!748 lt!35869) lt!35868)))))

(assert (= (and d!18813 c!12177) b!78945))

(assert (= (and d!18813 (not c!12177)) b!78946))

(assert (= (and d!18813 (not res!41289)) b!78947))

(declare-fun m!79463 () Bool)

(assert (=> d!18813 m!79463))

(declare-fun m!79465 () Bool)

(assert (=> b!78945 m!79465))

(declare-fun m!79467 () Bool)

(assert (=> b!78945 m!79467))

(assert (=> b!78945 m!79467))

(declare-fun m!79469 () Bool)

(assert (=> b!78945 m!79469))

(assert (=> b!78947 m!79467))

(assert (=> b!78947 m!79467))

(assert (=> b!78947 m!79469))

(assert (=> d!18493 d!18813))

(declare-fun d!18815 () Bool)

(assert (=> d!18815 (= (size!2139 newMap!16) (bvadd (_size!415 newMap!16) (bvsdiv (bvadd (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!78457 d!18815))

(declare-fun d!18817 () Bool)

(declare-fun c!12178 () Bool)

(assert (=> d!18817 (= c!12178 ((_ is Nil!1530) (toList!748 lt!35907)))))

(declare-fun e!51585 () (InoxSet tuple2!2190))

(assert (=> d!18817 (= (content!82 (toList!748 lt!35907)) e!51585)))

(declare-fun b!78948 () Bool)

(assert (=> b!78948 (= e!51585 ((as const (Array tuple2!2190 Bool)) false))))

(declare-fun b!78949 () Bool)

(assert (=> b!78949 (= e!51585 ((_ map or) (store ((as const (Array tuple2!2190 Bool)) false) (h!2117 (toList!748 lt!35907)) true) (content!82 (t!5183 (toList!748 lt!35907)))))))

(assert (= (and d!18817 c!12178) b!78948))

(assert (= (and d!18817 (not c!12178)) b!78949))

(declare-fun m!79471 () Bool)

(assert (=> b!78949 m!79471))

(declare-fun m!79473 () Bool)

(assert (=> b!78949 m!79473))

(assert (=> d!18535 d!18817))

(declare-fun d!18819 () Bool)

(assert (=> d!18819 (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!36587 () Unit!2263)

(assert (=> d!18819 (= lt!36587 (choose!471 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51586 () Bool)

(assert (=> d!18819 e!51586))

(declare-fun res!41290 () Bool)

(assert (=> d!18819 (=> (not res!41290) (not e!51586))))

(assert (=> d!18819 (= res!41290 (isStrictlySorted!290 (toList!748 lt!35969)))))

(assert (=> d!18819 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000) lt!36587)))

(declare-fun b!78950 () Bool)

(assert (=> b!78950 (= e!51586 (containsKey!140 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!18819 res!41290) b!78950))

(assert (=> d!18819 m!78901))

(assert (=> d!18819 m!78901))

(assert (=> d!18819 m!78971))

(declare-fun m!79475 () Bool)

(assert (=> d!18819 m!79475))

(declare-fun m!79477 () Bool)

(assert (=> d!18819 m!79477))

(assert (=> b!78950 m!78967))

(assert (=> b!78703 d!18819))

(declare-fun d!18821 () Bool)

(assert (=> d!18821 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3332 () Bool)

(assert (= bs!3332 d!18821))

(assert (=> bs!3332 m!78901))

(declare-fun m!79479 () Bool)

(assert (=> bs!3332 m!79479))

(assert (=> b!78703 d!18821))

(declare-fun b!78952 () Bool)

(declare-fun e!51587 () Option!142)

(declare-fun e!51588 () Option!142)

(assert (=> b!78952 (= e!51587 e!51588)))

(declare-fun c!12180 () Bool)

(assert (=> b!78952 (= c!12180 (and ((_ is Cons!1529) (toList!748 lt!35969)) (not (= (_1!1105 (h!2117 (toList!748 lt!35969))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!78951 () Bool)

(assert (=> b!78951 (= e!51587 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35969)))))))

(declare-fun b!78953 () Bool)

(assert (=> b!78953 (= e!51588 (getValueByKey!136 (t!5183 (toList!748 lt!35969)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78954 () Bool)

(assert (=> b!78954 (= e!51588 None!140)))

(declare-fun d!18823 () Bool)

(declare-fun c!12179 () Bool)

(assert (=> d!18823 (= c!12179 (and ((_ is Cons!1529) (toList!748 lt!35969)) (= (_1!1105 (h!2117 (toList!748 lt!35969))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18823 (= (getValueByKey!136 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000) e!51587)))

(assert (= (and d!18823 c!12179) b!78951))

(assert (= (and d!18823 (not c!12179)) b!78952))

(assert (= (and b!78952 c!12180) b!78953))

(assert (= (and b!78952 (not c!12180)) b!78954))

(declare-fun m!79481 () Bool)

(assert (=> b!78953 m!79481))

(assert (=> b!78703 d!18823))

(declare-fun d!18825 () Bool)

(assert (=> d!18825 (= (apply!79 lt!36112 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1192 (getValueByKey!136 (toList!748 lt!36112) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3333 () Bool)

(assert (= bs!3333 d!18825))

(assert (=> bs!3333 m!78153))

(declare-fun m!79483 () Bool)

(assert (=> bs!3333 m!79483))

(assert (=> bs!3333 m!79483))

(declare-fun m!79485 () Bool)

(assert (=> bs!3333 m!79485))

(assert (=> b!78314 d!18825))

(declare-fun d!18827 () Bool)

(declare-fun c!12181 () Bool)

(assert (=> d!18827 (= c!12181 ((_ is ValueCellFull!912) (select (arr!1895 (_values!2255 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!51589 () V!2995)

(assert (=> d!18827 (= (get!1189 (select (arr!1895 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51589)))

(declare-fun b!78955 () Bool)

(assert (=> b!78955 (= e!51589 (get!1190 (select (arr!1895 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78956 () Bool)

(assert (=> b!78956 (= e!51589 (get!1191 (select (arr!1895 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18827 c!12181) b!78955))

(assert (= (and d!18827 (not c!12181)) b!78956))

(assert (=> b!78955 m!78269))

(assert (=> b!78955 m!78273))

(declare-fun m!79487 () Bool)

(assert (=> b!78955 m!79487))

(assert (=> b!78956 m!78269))

(assert (=> b!78956 m!78273))

(declare-fun m!79489 () Bool)

(assert (=> b!78956 m!79489))

(assert (=> b!78314 d!18827))

(declare-fun d!18829 () Bool)

(declare-fun res!41291 () Bool)

(declare-fun e!51590 () Bool)

(assert (=> d!18829 (=> (not res!41291) (not e!51590))))

(assert (=> d!18829 (= res!41291 (simpleValid!54 (_2!1104 lt!36386)))))

(assert (=> d!18829 (= (valid!313 (_2!1104 lt!36386)) e!51590)))

(declare-fun b!78957 () Bool)

(declare-fun res!41292 () Bool)

(assert (=> b!78957 (=> (not res!41292) (not e!51590))))

(assert (=> b!78957 (= res!41292 (= (arrayCountValidKeys!0 (_keys!3932 (_2!1104 lt!36386)) #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36386)))) (_size!415 (_2!1104 lt!36386))))))

(declare-fun b!78958 () Bool)

(declare-fun res!41293 () Bool)

(assert (=> b!78958 (=> (not res!41293) (not e!51590))))

(assert (=> b!78958 (= res!41293 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 (_2!1104 lt!36386)) (mask!6268 (_2!1104 lt!36386))))))

(declare-fun b!78959 () Bool)

(assert (=> b!78959 (= e!51590 (arrayNoDuplicates!0 (_keys!3932 (_2!1104 lt!36386)) #b00000000000000000000000000000000 Nil!1531))))

(assert (= (and d!18829 res!41291) b!78957))

(assert (= (and b!78957 res!41292) b!78958))

(assert (= (and b!78958 res!41293) b!78959))

(declare-fun m!79491 () Bool)

(assert (=> d!18829 m!79491))

(declare-fun m!79493 () Bool)

(assert (=> b!78957 m!79493))

(declare-fun m!79495 () Bool)

(assert (=> b!78958 m!79495))

(declare-fun m!79497 () Bool)

(assert (=> b!78959 m!79497))

(assert (=> b!78644 d!18829))

(declare-fun b!78960 () Bool)

(declare-fun lt!36588 () Unit!2263)

(declare-fun lt!36594 () Unit!2263)

(assert (=> b!78960 (= lt!36588 lt!36594)))

(declare-fun lt!36591 () ListLongMap!1465)

(declare-fun lt!36592 () (_ BitVec 64))

(declare-fun lt!36590 () (_ BitVec 64))

(declare-fun lt!36593 () V!2995)

(assert (=> b!78960 (not (contains!745 (+!109 lt!36591 (tuple2!2191 lt!36592 lt!36593)) lt!36590))))

(assert (=> b!78960 (= lt!36594 (addStillNotContains!30 lt!36591 lt!36592 lt!36593 lt!36590))))

(assert (=> b!78960 (= lt!36590 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!78960 (= lt!36593 (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!78960 (= lt!36592 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!7267 () ListLongMap!1465)

(assert (=> b!78960 (= lt!36591 call!7267)))

(declare-fun e!51591 () ListLongMap!1465)

(assert (=> b!78960 (= e!51591 (+!109 call!7267 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!78961 () Bool)

(declare-fun e!51594 () ListLongMap!1465)

(assert (=> b!78961 (= e!51594 (ListLongMap!1466 Nil!1530))))

(declare-fun lt!36589 () ListLongMap!1465)

(declare-fun b!78962 () Bool)

(declare-fun e!51596 () Bool)

(assert (=> b!78962 (= e!51596 (= lt!36589 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!78964 () Bool)

(declare-fun e!51593 () Bool)

(declare-fun e!51592 () Bool)

(assert (=> b!78964 (= e!51593 e!51592)))

(assert (=> b!78964 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun res!41295 () Bool)

(assert (=> b!78964 (= res!41295 (contains!745 lt!36589 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!78964 (=> (not res!41295) (not e!51592))))

(declare-fun b!78965 () Bool)

(assert (=> b!78965 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> b!78965 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2136 (_values!2255 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> b!78965 (= e!51592 (= (apply!79 lt!36589 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!7264 () Bool)

(assert (=> bm!7264 (= call!7267 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun b!78966 () Bool)

(assert (=> b!78966 (= e!51591 call!7267)))

(declare-fun b!78967 () Bool)

(declare-fun e!51597 () Bool)

(assert (=> b!78967 (= e!51597 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!78967 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!78963 () Bool)

(declare-fun e!51595 () Bool)

(assert (=> b!78963 (= e!51595 e!51593)))

(declare-fun c!12184 () Bool)

(assert (=> b!78963 (= c!12184 e!51597)))

(declare-fun res!41294 () Bool)

(assert (=> b!78963 (=> (not res!41294) (not e!51597))))

(assert (=> b!78963 (= res!41294 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun d!18831 () Bool)

(assert (=> d!18831 e!51595))

(declare-fun res!41296 () Bool)

(assert (=> d!18831 (=> (not res!41296) (not e!51595))))

(assert (=> d!18831 (= res!41296 (not (contains!745 lt!36589 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18831 (= lt!36589 e!51594)))

(declare-fun c!12182 () Bool)

(assert (=> d!18831 (= c!12182 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> d!18831 (validMask!0 (mask!6268 (v!2594 (underlying!281 thiss!992))))))

(assert (=> d!18831 (= (getCurrentListMapNoExtraKeys!73 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (_values!2255 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992))) (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) (minValue!2170 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992)))) lt!36589)))

(declare-fun b!78968 () Bool)

(assert (=> b!78968 (= e!51596 (isEmpty!331 lt!36589))))

(declare-fun b!78969 () Bool)

(assert (=> b!78969 (= e!51594 e!51591)))

(declare-fun c!12183 () Bool)

(assert (=> b!78969 (= c!12183 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!78970 () Bool)

(declare-fun res!41297 () Bool)

(assert (=> b!78970 (=> (not res!41297) (not e!51595))))

(assert (=> b!78970 (= res!41297 (not (contains!745 lt!36589 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!78971 () Bool)

(assert (=> b!78971 (= e!51593 e!51596)))

(declare-fun c!12185 () Bool)

(assert (=> b!78971 (= c!12185 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18831 c!12182) b!78961))

(assert (= (and d!18831 (not c!12182)) b!78969))

(assert (= (and b!78969 c!12183) b!78960))

(assert (= (and b!78969 (not c!12183)) b!78966))

(assert (= (or b!78960 b!78966) bm!7264))

(assert (= (and d!18831 res!41296) b!78970))

(assert (= (and b!78970 res!41297) b!78963))

(assert (= (and b!78963 res!41294) b!78967))

(assert (= (and b!78963 c!12184) b!78964))

(assert (= (and b!78963 (not c!12184)) b!78971))

(assert (= (and b!78964 res!41295) b!78965))

(assert (= (and b!78971 c!12185) b!78962))

(assert (= (and b!78971 (not c!12185)) b!78968))

(declare-fun b_lambda!3541 () Bool)

(assert (=> (not b_lambda!3541) (not b!78960)))

(assert (=> b!78960 t!5180))

(declare-fun b_and!4849 () Bool)

(assert (= b_and!4845 (and (=> t!5180 result!2815) b_and!4849)))

(assert (=> b!78960 t!5182))

(declare-fun b_and!4851 () Bool)

(assert (= b_and!4847 (and (=> t!5182 result!2819) b_and!4851)))

(declare-fun b_lambda!3543 () Bool)

(assert (=> (not b_lambda!3543) (not b!78965)))

(assert (=> b!78965 t!5180))

(declare-fun b_and!4853 () Bool)

(assert (= b_and!4849 (and (=> t!5180 result!2815) b_and!4853)))

(assert (=> b!78965 t!5182))

(declare-fun b_and!4855 () Bool)

(assert (= b_and!4851 (and (=> t!5182 result!2819) b_and!4855)))

(declare-fun m!79499 () Bool)

(assert (=> b!78968 m!79499))

(declare-fun m!79501 () Bool)

(assert (=> b!78970 m!79501))

(declare-fun m!79503 () Bool)

(assert (=> b!78962 m!79503))

(declare-fun m!79505 () Bool)

(assert (=> b!78967 m!79505))

(assert (=> b!78967 m!79505))

(declare-fun m!79507 () Bool)

(assert (=> b!78967 m!79507))

(declare-fun m!79509 () Bool)

(assert (=> d!18831 m!79509))

(assert (=> d!18831 m!77777))

(assert (=> b!78965 m!77769))

(assert (=> b!78965 m!79505))

(declare-fun m!79511 () Bool)

(assert (=> b!78965 m!79511))

(assert (=> b!78965 m!79505))

(declare-fun m!79513 () Bool)

(assert (=> b!78965 m!79513))

(assert (=> b!78965 m!79511))

(assert (=> b!78965 m!77769))

(declare-fun m!79515 () Bool)

(assert (=> b!78965 m!79515))

(assert (=> b!78964 m!79505))

(assert (=> b!78964 m!79505))

(declare-fun m!79517 () Bool)

(assert (=> b!78964 m!79517))

(assert (=> b!78969 m!79505))

(assert (=> b!78969 m!79505))

(assert (=> b!78969 m!79507))

(assert (=> bm!7264 m!79503))

(declare-fun m!79519 () Bool)

(assert (=> b!78960 m!79519))

(declare-fun m!79521 () Bool)

(assert (=> b!78960 m!79521))

(assert (=> b!78960 m!79511))

(assert (=> b!78960 m!77769))

(assert (=> b!78960 m!79515))

(declare-fun m!79523 () Bool)

(assert (=> b!78960 m!79523))

(assert (=> b!78960 m!79505))

(assert (=> b!78960 m!79519))

(assert (=> b!78960 m!79511))

(assert (=> b!78960 m!77769))

(declare-fun m!79525 () Bool)

(assert (=> b!78960 m!79525))

(assert (=> bm!7179 d!18831))

(declare-fun d!18833 () Bool)

(assert (=> d!18833 (isDefined!90 (getValueByKey!136 (toList!748 lt!35911) (_1!1105 lt!35788)))))

(declare-fun lt!36595 () Unit!2263)

(assert (=> d!18833 (= lt!36595 (choose!471 (toList!748 lt!35911) (_1!1105 lt!35788)))))

(declare-fun e!51598 () Bool)

(assert (=> d!18833 e!51598))

(declare-fun res!41298 () Bool)

(assert (=> d!18833 (=> (not res!41298) (not e!51598))))

(assert (=> d!18833 (= res!41298 (isStrictlySorted!290 (toList!748 lt!35911)))))

(assert (=> d!18833 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35911) (_1!1105 lt!35788)) lt!36595)))

(declare-fun b!78972 () Bool)

(assert (=> b!78972 (= e!51598 (containsKey!140 (toList!748 lt!35911) (_1!1105 lt!35788)))))

(assert (= (and d!18833 res!41298) b!78972))

(assert (=> d!18833 m!78011))

(assert (=> d!18833 m!78011))

(assert (=> d!18833 m!78575))

(declare-fun m!79527 () Bool)

(assert (=> d!18833 m!79527))

(declare-fun m!79529 () Bool)

(assert (=> d!18833 m!79529))

(assert (=> b!78972 m!78571))

(assert (=> b!78483 d!18833))

(declare-fun d!18835 () Bool)

(assert (=> d!18835 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35911) (_1!1105 lt!35788))) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35911) (_1!1105 lt!35788)))))))

(declare-fun bs!3334 () Bool)

(assert (= bs!3334 d!18835))

(assert (=> bs!3334 m!78011))

(declare-fun m!79531 () Bool)

(assert (=> bs!3334 m!79531))

(assert (=> b!78483 d!18835))

(assert (=> b!78483 d!18639))

(declare-fun d!18837 () Bool)

(declare-fun res!41299 () Bool)

(declare-fun e!51599 () Bool)

(assert (=> d!18837 (=> res!41299 e!51599)))

(assert (=> d!18837 (= res!41299 (and ((_ is Cons!1529) (toList!748 lt!35895)) (= (_1!1105 (h!2117 (toList!748 lt!35895))) (_1!1105 lt!35783))))))

(assert (=> d!18837 (= (containsKey!140 (toList!748 lt!35895) (_1!1105 lt!35783)) e!51599)))

(declare-fun b!78973 () Bool)

(declare-fun e!51600 () Bool)

(assert (=> b!78973 (= e!51599 e!51600)))

(declare-fun res!41300 () Bool)

(assert (=> b!78973 (=> (not res!41300) (not e!51600))))

(assert (=> b!78973 (= res!41300 (and (or (not ((_ is Cons!1529) (toList!748 lt!35895))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35895))) (_1!1105 lt!35783))) ((_ is Cons!1529) (toList!748 lt!35895)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35895))) (_1!1105 lt!35783))))))

(declare-fun b!78974 () Bool)

(assert (=> b!78974 (= e!51600 (containsKey!140 (t!5183 (toList!748 lt!35895)) (_1!1105 lt!35783)))))

(assert (= (and d!18837 (not res!41299)) b!78973))

(assert (= (and b!78973 res!41300) b!78974))

(declare-fun m!79533 () Bool)

(assert (=> b!78974 m!79533))

(assert (=> d!18657 d!18837))

(assert (=> b!78748 d!18717))

(declare-fun b!78976 () Bool)

(declare-fun e!51601 () Option!142)

(declare-fun e!51602 () Option!142)

(assert (=> b!78976 (= e!51601 e!51602)))

(declare-fun c!12187 () Bool)

(assert (=> b!78976 (= c!12187 (and ((_ is Cons!1529) (t!5183 lt!35881)) (not (= (_1!1105 (h!2117 (t!5183 lt!35881))) (_1!1105 lt!35783)))))))

(declare-fun b!78975 () Bool)

(assert (=> b!78975 (= e!51601 (Some!141 (_2!1105 (h!2117 (t!5183 lt!35881)))))))

(declare-fun b!78977 () Bool)

(assert (=> b!78977 (= e!51602 (getValueByKey!136 (t!5183 (t!5183 lt!35881)) (_1!1105 lt!35783)))))

(declare-fun b!78978 () Bool)

(assert (=> b!78978 (= e!51602 None!140)))

(declare-fun d!18839 () Bool)

(declare-fun c!12186 () Bool)

(assert (=> d!18839 (= c!12186 (and ((_ is Cons!1529) (t!5183 lt!35881)) (= (_1!1105 (h!2117 (t!5183 lt!35881))) (_1!1105 lt!35783))))))

(assert (=> d!18839 (= (getValueByKey!136 (t!5183 lt!35881) (_1!1105 lt!35783)) e!51601)))

(assert (= (and d!18839 c!12186) b!78975))

(assert (= (and d!18839 (not c!12186)) b!78976))

(assert (= (and b!78976 c!12187) b!78977))

(assert (= (and b!78976 (not c!12187)) b!78978))

(declare-fun m!79535 () Bool)

(assert (=> b!78977 m!79535))

(assert (=> b!78383 d!18839))

(declare-fun bm!7265 () Bool)

(declare-fun call!7268 () Bool)

(assert (=> bm!7265 (= call!7268 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!78979 () Bool)

(declare-fun e!51605 () Bool)

(assert (=> b!78979 (= e!51605 call!7268)))

(declare-fun b!78980 () Bool)

(declare-fun e!51604 () Bool)

(assert (=> b!78980 (= e!51604 call!7268)))

(declare-fun d!18841 () Bool)

(declare-fun res!41302 () Bool)

(declare-fun e!51603 () Bool)

(assert (=> d!18841 (=> res!41302 e!51603)))

(assert (=> d!18841 (= res!41302 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18841 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3932 newMap!16) (mask!6268 newMap!16)) e!51603)))

(declare-fun b!78981 () Bool)

(assert (=> b!78981 (= e!51605 e!51604)))

(declare-fun lt!36596 () (_ BitVec 64))

(assert (=> b!78981 (= lt!36596 (select (arr!1894 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!36598 () Unit!2263)

(assert (=> b!78981 (= lt!36598 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3932 newMap!16) lt!36596 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!78981 (arrayContainsKey!0 (_keys!3932 newMap!16) lt!36596 #b00000000000000000000000000000000)))

(declare-fun lt!36597 () Unit!2263)

(assert (=> b!78981 (= lt!36597 lt!36598)))

(declare-fun res!41301 () Bool)

(assert (=> b!78981 (= res!41301 (= (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3932 newMap!16) (mask!6268 newMap!16)) (Found!250 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!78981 (=> (not res!41301) (not e!51604))))

(declare-fun b!78982 () Bool)

(assert (=> b!78982 (= e!51603 e!51605)))

(declare-fun c!12188 () Bool)

(assert (=> b!78982 (= c!12188 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!18841 (not res!41302)) b!78982))

(assert (= (and b!78982 c!12188) b!78981))

(assert (= (and b!78982 (not c!12188)) b!78979))

(assert (= (and b!78981 res!41301) b!78980))

(assert (= (or b!78980 b!78979) bm!7265))

(declare-fun m!79537 () Bool)

(assert (=> bm!7265 m!79537))

(assert (=> b!78981 m!79447))

(declare-fun m!79539 () Bool)

(assert (=> b!78981 m!79539))

(declare-fun m!79541 () Bool)

(assert (=> b!78981 m!79541))

(assert (=> b!78981 m!79447))

(declare-fun m!79543 () Bool)

(assert (=> b!78981 m!79543))

(assert (=> b!78982 m!79447))

(assert (=> b!78982 m!79447))

(assert (=> b!78982 m!79449))

(assert (=> bm!7204 d!18841))

(declare-fun b!78983 () Bool)

(declare-fun e!51609 () ListLongMap!1465)

(declare-fun call!7275 () ListLongMap!1465)

(assert (=> b!78983 (= e!51609 (+!109 call!7275 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)))))

(declare-fun b!78984 () Bool)

(declare-fun res!41306 () Bool)

(declare-fun e!51618 () Bool)

(assert (=> b!78984 (=> (not res!41306) (not e!51618))))

(declare-fun e!51616 () Bool)

(assert (=> b!78984 (= res!41306 e!51616)))

(declare-fun c!12194 () Bool)

(assert (=> b!78984 (= c!12194 (not (= (bvand lt!36055 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!78985 () Bool)

(declare-fun e!51611 () ListLongMap!1465)

(declare-fun call!7274 () ListLongMap!1465)

(assert (=> b!78985 (= e!51611 call!7274)))

(declare-fun bm!7266 () Bool)

(declare-fun call!7273 () ListLongMap!1465)

(declare-fun call!7271 () ListLongMap!1465)

(assert (=> bm!7266 (= call!7273 call!7271)))

(declare-fun b!78986 () Bool)

(declare-fun e!51615 () Bool)

(declare-fun lt!36611 () ListLongMap!1465)

(assert (=> b!78986 (= e!51615 (= (apply!79 lt!36611 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78986 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_values!2255 newMap!16))))))

(assert (=> b!78986 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78987 () Bool)

(declare-fun e!51612 () Bool)

(assert (=> b!78987 (= e!51616 e!51612)))

(declare-fun res!41307 () Bool)

(declare-fun call!7270 () Bool)

(assert (=> b!78987 (= res!41307 call!7270)))

(assert (=> b!78987 (=> (not res!41307) (not e!51612))))

(declare-fun bm!7267 () Bool)

(declare-fun call!7272 () Bool)

(assert (=> bm!7267 (= call!7272 (contains!745 lt!36611 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!78989 () Bool)

(declare-fun e!51610 () Bool)

(assert (=> b!78989 (= e!51610 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78990 () Bool)

(declare-fun e!51617 () Unit!2263)

(declare-fun Unit!2303 () Unit!2263)

(assert (=> b!78990 (= e!51617 Unit!2303)))

(declare-fun bm!7268 () Bool)

(assert (=> bm!7268 (= call!7271 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36055 (zeroValue!2170 newMap!16) lt!35780 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!78991 () Bool)

(declare-fun e!51607 () ListLongMap!1465)

(declare-fun call!7269 () ListLongMap!1465)

(assert (=> b!78991 (= e!51607 call!7269)))

(declare-fun b!78992 () Bool)

(declare-fun e!51606 () Bool)

(assert (=> b!78992 (= e!51618 e!51606)))

(declare-fun c!12190 () Bool)

(assert (=> b!78992 (= c!12190 (not (= (bvand lt!36055 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!78993 () Bool)

(declare-fun lt!36613 () Unit!2263)

(assert (=> b!78993 (= e!51617 lt!36613)))

(declare-fun lt!36612 () ListLongMap!1465)

(assert (=> b!78993 (= lt!36612 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36055 (zeroValue!2170 newMap!16) lt!35780 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36618 () (_ BitVec 64))

(assert (=> b!78993 (= lt!36618 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36609 () (_ BitVec 64))

(assert (=> b!78993 (= lt!36609 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36603 () Unit!2263)

(assert (=> b!78993 (= lt!36603 (addStillContains!55 lt!36612 lt!36618 (zeroValue!2170 newMap!16) lt!36609))))

(assert (=> b!78993 (contains!745 (+!109 lt!36612 (tuple2!2191 lt!36618 (zeroValue!2170 newMap!16))) lt!36609)))

(declare-fun lt!36608 () Unit!2263)

(assert (=> b!78993 (= lt!36608 lt!36603)))

(declare-fun lt!36619 () ListLongMap!1465)

(assert (=> b!78993 (= lt!36619 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36055 (zeroValue!2170 newMap!16) lt!35780 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36620 () (_ BitVec 64))

(assert (=> b!78993 (= lt!36620 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36616 () (_ BitVec 64))

(assert (=> b!78993 (= lt!36616 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36607 () Unit!2263)

(assert (=> b!78993 (= lt!36607 (addApplyDifferent!55 lt!36619 lt!36620 lt!35780 lt!36616))))

(assert (=> b!78993 (= (apply!79 (+!109 lt!36619 (tuple2!2191 lt!36620 lt!35780)) lt!36616) (apply!79 lt!36619 lt!36616))))

(declare-fun lt!36599 () Unit!2263)

(assert (=> b!78993 (= lt!36599 lt!36607)))

(declare-fun lt!36615 () ListLongMap!1465)

(assert (=> b!78993 (= lt!36615 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36055 (zeroValue!2170 newMap!16) lt!35780 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36601 () (_ BitVec 64))

(assert (=> b!78993 (= lt!36601 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36605 () (_ BitVec 64))

(assert (=> b!78993 (= lt!36605 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36617 () Unit!2263)

(assert (=> b!78993 (= lt!36617 (addApplyDifferent!55 lt!36615 lt!36601 (zeroValue!2170 newMap!16) lt!36605))))

(assert (=> b!78993 (= (apply!79 (+!109 lt!36615 (tuple2!2191 lt!36601 (zeroValue!2170 newMap!16))) lt!36605) (apply!79 lt!36615 lt!36605))))

(declare-fun lt!36604 () Unit!2263)

(assert (=> b!78993 (= lt!36604 lt!36617)))

(declare-fun lt!36600 () ListLongMap!1465)

(assert (=> b!78993 (= lt!36600 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36055 (zeroValue!2170 newMap!16) lt!35780 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36602 () (_ BitVec 64))

(assert (=> b!78993 (= lt!36602 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36614 () (_ BitVec 64))

(assert (=> b!78993 (= lt!36614 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!78993 (= lt!36613 (addApplyDifferent!55 lt!36600 lt!36602 lt!35780 lt!36614))))

(assert (=> b!78993 (= (apply!79 (+!109 lt!36600 (tuple2!2191 lt!36602 lt!35780)) lt!36614) (apply!79 lt!36600 lt!36614))))

(declare-fun b!78994 () Bool)

(declare-fun e!51608 () Bool)

(assert (=> b!78994 (= e!51608 e!51615)))

(declare-fun res!41305 () Bool)

(assert (=> b!78994 (=> (not res!41305) (not e!51615))))

(assert (=> b!78994 (= res!41305 (contains!745 lt!36611 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!78994 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78995 () Bool)

(assert (=> b!78995 (= e!51609 e!51611)))

(declare-fun c!12191 () Bool)

(assert (=> b!78995 (= c!12191 (and (not (= (bvand lt!36055 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!36055 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7269 () Bool)

(assert (=> bm!7269 (= call!7274 call!7275)))

(declare-fun b!78996 () Bool)

(declare-fun res!41303 () Bool)

(assert (=> b!78996 (=> (not res!41303) (not e!51618))))

(assert (=> b!78996 (= res!41303 e!51608)))

(declare-fun res!41304 () Bool)

(assert (=> b!78996 (=> res!41304 e!51608)))

(declare-fun e!51613 () Bool)

(assert (=> b!78996 (= res!41304 (not e!51613))))

(declare-fun res!41308 () Bool)

(assert (=> b!78996 (=> (not res!41308) (not e!51613))))

(assert (=> b!78996 (= res!41308 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!78997 () Bool)

(declare-fun c!12192 () Bool)

(assert (=> b!78997 (= c!12192 (and (not (= (bvand lt!36055 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!36055 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!78997 (= e!51611 e!51607)))

(declare-fun b!78998 () Bool)

(assert (=> b!78998 (= e!51613 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!78999 () Bool)

(assert (=> b!78999 (= e!51607 call!7274)))

(declare-fun c!12189 () Bool)

(declare-fun bm!7270 () Bool)

(assert (=> bm!7270 (= call!7275 (+!109 (ite c!12189 call!7271 (ite c!12191 call!7273 call!7269)) (ite (or c!12189 c!12191) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780))))))

(declare-fun bm!7271 () Bool)

(assert (=> bm!7271 (= call!7270 (contains!745 lt!36611 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79000 () Bool)

(assert (=> b!79000 (= e!51616 (not call!7270))))

(declare-fun b!78988 () Bool)

(declare-fun e!51614 () Bool)

(assert (=> b!78988 (= e!51606 e!51614)))

(declare-fun res!41310 () Bool)

(assert (=> b!78988 (= res!41310 call!7272)))

(assert (=> b!78988 (=> (not res!41310) (not e!51614))))

(declare-fun d!18843 () Bool)

(assert (=> d!18843 e!51618))

(declare-fun res!41311 () Bool)

(assert (=> d!18843 (=> (not res!41311) (not e!51618))))

(assert (=> d!18843 (= res!41311 (or (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))))

(declare-fun lt!36610 () ListLongMap!1465)

(assert (=> d!18843 (= lt!36611 lt!36610)))

(declare-fun lt!36606 () Unit!2263)

(assert (=> d!18843 (= lt!36606 e!51617)))

(declare-fun c!12193 () Bool)

(assert (=> d!18843 (= c!12193 e!51610)))

(declare-fun res!41309 () Bool)

(assert (=> d!18843 (=> (not res!41309) (not e!51610))))

(assert (=> d!18843 (= res!41309 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18843 (= lt!36610 e!51609)))

(assert (=> d!18843 (= c!12189 (and (not (= (bvand lt!36055 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!36055 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18843 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18843 (= (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36055 (zeroValue!2170 newMap!16) lt!35780 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36611)))

(declare-fun bm!7272 () Bool)

(assert (=> bm!7272 (= call!7269 call!7273)))

(declare-fun b!79001 () Bool)

(assert (=> b!79001 (= e!51614 (= (apply!79 lt!36611 #b1000000000000000000000000000000000000000000000000000000000000000) lt!35780))))

(declare-fun b!79002 () Bool)

(assert (=> b!79002 (= e!51606 (not call!7272))))

(declare-fun b!79003 () Bool)

(assert (=> b!79003 (= e!51612 (= (apply!79 lt!36611 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(assert (= (and d!18843 c!12189) b!78983))

(assert (= (and d!18843 (not c!12189)) b!78995))

(assert (= (and b!78995 c!12191) b!78985))

(assert (= (and b!78995 (not c!12191)) b!78997))

(assert (= (and b!78997 c!12192) b!78999))

(assert (= (and b!78997 (not c!12192)) b!78991))

(assert (= (or b!78999 b!78991) bm!7272))

(assert (= (or b!78985 bm!7272) bm!7266))

(assert (= (or b!78985 b!78999) bm!7269))

(assert (= (or b!78983 bm!7266) bm!7268))

(assert (= (or b!78983 bm!7269) bm!7270))

(assert (= (and d!18843 res!41309) b!78989))

(assert (= (and d!18843 c!12193) b!78993))

(assert (= (and d!18843 (not c!12193)) b!78990))

(assert (= (and d!18843 res!41311) b!78996))

(assert (= (and b!78996 res!41308) b!78998))

(assert (= (and b!78996 (not res!41304)) b!78994))

(assert (= (and b!78994 res!41305) b!78986))

(assert (= (and b!78996 res!41303) b!78984))

(assert (= (and b!78984 c!12194) b!78987))

(assert (= (and b!78984 (not c!12194)) b!79000))

(assert (= (and b!78987 res!41307) b!79003))

(assert (= (or b!78987 b!79000) bm!7271))

(assert (= (and b!78984 res!41306) b!78992))

(assert (= (and b!78992 c!12190) b!78988))

(assert (= (and b!78992 (not c!12190)) b!79002))

(assert (= (and b!78988 res!41310) b!79001))

(assert (= (or b!78988 b!79002) bm!7267))

(declare-fun b_lambda!3545 () Bool)

(assert (=> (not b_lambda!3545) (not b!78986)))

(assert (=> b!78986 t!5191))

(declare-fun b_and!4857 () Bool)

(assert (= b_and!4853 (and (=> t!5191 result!2829) b_and!4857)))

(assert (=> b!78986 t!5193))

(declare-fun b_and!4859 () Bool)

(assert (= b_and!4855 (and (=> t!5193 result!2831) b_and!4859)))

(declare-fun m!79545 () Bool)

(assert (=> bm!7271 m!79545))

(declare-fun m!79547 () Bool)

(assert (=> bm!7268 m!79547))

(declare-fun m!79549 () Bool)

(assert (=> bm!7267 m!79549))

(declare-fun m!79551 () Bool)

(assert (=> b!78993 m!79551))

(declare-fun m!79553 () Bool)

(assert (=> b!78993 m!79553))

(declare-fun m!79555 () Bool)

(assert (=> b!78993 m!79555))

(declare-fun m!79557 () Bool)

(assert (=> b!78993 m!79557))

(declare-fun m!79559 () Bool)

(assert (=> b!78993 m!79559))

(declare-fun m!79561 () Bool)

(assert (=> b!78993 m!79561))

(declare-fun m!79563 () Bool)

(assert (=> b!78993 m!79563))

(assert (=> b!78993 m!79555))

(declare-fun m!79565 () Bool)

(assert (=> b!78993 m!79565))

(declare-fun m!79567 () Bool)

(assert (=> b!78993 m!79567))

(assert (=> b!78993 m!78153))

(assert (=> b!78993 m!79567))

(declare-fun m!79569 () Bool)

(assert (=> b!78993 m!79569))

(assert (=> b!78993 m!79553))

(declare-fun m!79571 () Bool)

(assert (=> b!78993 m!79571))

(declare-fun m!79573 () Bool)

(assert (=> b!78993 m!79573))

(assert (=> b!78993 m!79573))

(declare-fun m!79575 () Bool)

(assert (=> b!78993 m!79575))

(declare-fun m!79577 () Bool)

(assert (=> b!78993 m!79577))

(assert (=> b!78993 m!79547))

(declare-fun m!79579 () Bool)

(assert (=> b!78993 m!79579))

(assert (=> d!18843 m!78167))

(assert (=> b!78986 m!78269))

(assert (=> b!78986 m!78153))

(declare-fun m!79581 () Bool)

(assert (=> b!78986 m!79581))

(assert (=> b!78986 m!78269))

(assert (=> b!78986 m!78273))

(assert (=> b!78986 m!78275))

(assert (=> b!78986 m!78273))

(assert (=> b!78986 m!78153))

(declare-fun m!79583 () Bool)

(assert (=> bm!7270 m!79583))

(declare-fun m!79585 () Bool)

(assert (=> b!78983 m!79585))

(assert (=> b!78989 m!78153))

(assert (=> b!78989 m!78153))

(assert (=> b!78989 m!78155))

(assert (=> b!78994 m!78153))

(assert (=> b!78994 m!78153))

(declare-fun m!79587 () Bool)

(assert (=> b!78994 m!79587))

(declare-fun m!79589 () Bool)

(assert (=> b!79003 m!79589))

(declare-fun m!79591 () Bool)

(assert (=> b!79001 m!79591))

(assert (=> b!78998 m!78153))

(assert (=> b!78998 m!78153))

(assert (=> b!78998 m!78155))

(assert (=> d!18503 d!18843))

(assert (=> d!18503 d!18489))

(declare-fun d!18845 () Bool)

(assert (=> d!18845 (= (+!109 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36055 (zeroValue!2170 newMap!16) lt!35780 #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(assert (=> d!18845 true))

(declare-fun _$8!67 () Unit!2263)

(assert (=> d!18845 (= (choose!465 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36055 (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) lt!35780 (defaultEntry!2272 newMap!16)) _$8!67)))

(declare-fun bs!3335 () Bool)

(assert (= bs!3335 d!18845))

(assert (=> bs!3335 m!78025))

(assert (=> bs!3335 m!78025))

(assert (=> bs!3335 m!78331))

(assert (=> bs!3335 m!78333))

(assert (=> d!18503 d!18845))

(declare-fun d!18847 () Bool)

(assert (=> d!18847 (= (validMask!0 (mask!6268 newMap!16)) (and (or (= (mask!6268 newMap!16) #b00000000000000000000000000000111) (= (mask!6268 newMap!16) #b00000000000000000000000000001111) (= (mask!6268 newMap!16) #b00000000000000000000000000011111) (= (mask!6268 newMap!16) #b00000000000000000000000000111111) (= (mask!6268 newMap!16) #b00000000000000000000000001111111) (= (mask!6268 newMap!16) #b00000000000000000000000011111111) (= (mask!6268 newMap!16) #b00000000000000000000000111111111) (= (mask!6268 newMap!16) #b00000000000000000000001111111111) (= (mask!6268 newMap!16) #b00000000000000000000011111111111) (= (mask!6268 newMap!16) #b00000000000000000000111111111111) (= (mask!6268 newMap!16) #b00000000000000000001111111111111) (= (mask!6268 newMap!16) #b00000000000000000011111111111111) (= (mask!6268 newMap!16) #b00000000000000000111111111111111) (= (mask!6268 newMap!16) #b00000000000000001111111111111111) (= (mask!6268 newMap!16) #b00000000000000011111111111111111) (= (mask!6268 newMap!16) #b00000000000000111111111111111111) (= (mask!6268 newMap!16) #b00000000000001111111111111111111) (= (mask!6268 newMap!16) #b00000000000011111111111111111111) (= (mask!6268 newMap!16) #b00000000000111111111111111111111) (= (mask!6268 newMap!16) #b00000000001111111111111111111111) (= (mask!6268 newMap!16) #b00000000011111111111111111111111) (= (mask!6268 newMap!16) #b00000000111111111111111111111111) (= (mask!6268 newMap!16) #b00000001111111111111111111111111) (= (mask!6268 newMap!16) #b00000011111111111111111111111111) (= (mask!6268 newMap!16) #b00000111111111111111111111111111) (= (mask!6268 newMap!16) #b00001111111111111111111111111111) (= (mask!6268 newMap!16) #b00011111111111111111111111111111) (= (mask!6268 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6268 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!18503 d!18847))

(declare-fun d!18849 () Bool)

(declare-fun e!51619 () Bool)

(assert (=> d!18849 e!51619))

(declare-fun res!41312 () Bool)

(assert (=> d!18849 (=> (not res!41312) (not e!51619))))

(declare-fun lt!36624 () ListLongMap!1465)

(assert (=> d!18849 (= res!41312 (contains!745 lt!36624 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780))))))

(declare-fun lt!36621 () List!1533)

(assert (=> d!18849 (= lt!36624 (ListLongMap!1466 lt!36621))))

(declare-fun lt!36623 () Unit!2263)

(declare-fun lt!36622 () Unit!2263)

(assert (=> d!18849 (= lt!36623 lt!36622)))

(assert (=> d!18849 (= (getValueByKey!136 lt!36621 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780))))))

(assert (=> d!18849 (= lt!36622 (lemmaContainsTupThenGetReturnValue!55 lt!36621 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780))))))

(assert (=> d!18849 (= lt!36621 (insertStrictlySorted!57 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780))))))

(assert (=> d!18849 (= (+!109 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) lt!36624)))

(declare-fun b!79004 () Bool)

(declare-fun res!41313 () Bool)

(assert (=> b!79004 (=> (not res!41313) (not e!51619))))

(assert (=> b!79004 (= res!41313 (= (getValueByKey!136 (toList!748 lt!36624) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)))))))

(declare-fun b!79005 () Bool)

(assert (=> b!79005 (= e!51619 (contains!748 (toList!748 lt!36624) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)))))

(assert (= (and d!18849 res!41312) b!79004))

(assert (= (and b!79004 res!41313) b!79005))

(declare-fun m!79593 () Bool)

(assert (=> d!18849 m!79593))

(declare-fun m!79595 () Bool)

(assert (=> d!18849 m!79595))

(declare-fun m!79597 () Bool)

(assert (=> d!18849 m!79597))

(declare-fun m!79599 () Bool)

(assert (=> d!18849 m!79599))

(declare-fun m!79601 () Bool)

(assert (=> b!79004 m!79601))

(declare-fun m!79603 () Bool)

(assert (=> b!79005 m!79603))

(assert (=> d!18503 d!18849))

(declare-fun d!18851 () Bool)

(assert (=> d!18851 (= (apply!79 lt!36286 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!136 (toList!748 lt!36286) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3336 () Bool)

(assert (= bs!3336 d!18851))

(declare-fun m!79605 () Bool)

(assert (=> bs!3336 m!79605))

(assert (=> bs!3336 m!79605))

(declare-fun m!79607 () Bool)

(assert (=> bs!3336 m!79607))

(assert (=> b!78595 d!18851))

(declare-fun d!18853 () Bool)

(declare-fun lt!36625 () Bool)

(assert (=> d!18853 (= lt!36625 (select (content!82 lt!35896) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun e!51620 () Bool)

(assert (=> d!18853 (= lt!36625 e!51620)))

(declare-fun res!41314 () Bool)

(assert (=> d!18853 (=> (not res!41314) (not e!51620))))

(assert (=> d!18853 (= res!41314 ((_ is Cons!1529) lt!35896))))

(assert (=> d!18853 (= (contains!748 lt!35896 (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))) lt!36625)))

(declare-fun b!79006 () Bool)

(declare-fun e!51621 () Bool)

(assert (=> b!79006 (= e!51620 e!51621)))

(declare-fun res!41315 () Bool)

(assert (=> b!79006 (=> res!41315 e!51621)))

(assert (=> b!79006 (= res!41315 (= (h!2117 lt!35896) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun b!79007 () Bool)

(assert (=> b!79007 (= e!51621 (contains!748 (t!5183 lt!35896) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(assert (= (and d!18853 res!41314) b!79006))

(assert (= (and b!79006 (not res!41315)) b!79007))

(declare-fun m!79609 () Bool)

(assert (=> d!18853 m!79609))

(declare-fun m!79611 () Bool)

(assert (=> d!18853 m!79611))

(declare-fun m!79613 () Bool)

(assert (=> b!79007 m!79613))

(assert (=> b!78692 d!18853))

(declare-fun d!18855 () Bool)

(declare-fun e!51622 () Bool)

(assert (=> d!18855 e!51622))

(declare-fun res!41316 () Bool)

(assert (=> d!18855 (=> (not res!41316) (not e!51622))))

(declare-fun lt!36629 () ListLongMap!1465)

(assert (=> d!18855 (= res!41316 (contains!745 lt!36629 (_1!1105 (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(declare-fun lt!36626 () List!1533)

(assert (=> d!18855 (= lt!36629 (ListLongMap!1466 lt!36626))))

(declare-fun lt!36628 () Unit!2263)

(declare-fun lt!36627 () Unit!2263)

(assert (=> d!18855 (= lt!36628 lt!36627)))

(assert (=> d!18855 (= (getValueByKey!136 lt!36626 (_1!1105 (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))) (Some!141 (_2!1105 (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!18855 (= lt!36627 (lemmaContainsTupThenGetReturnValue!55 lt!36626 (_1!1105 (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (_2!1105 (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!18855 (= lt!36626 (insertStrictlySorted!57 (toList!748 (ite c!12015 call!7185 (ite c!12017 call!7187 call!7183))) (_1!1105 (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (_2!1105 (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!18855 (= (+!109 (ite c!12015 call!7185 (ite c!12017 call!7187 call!7183)) (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) lt!36629)))

(declare-fun b!79008 () Bool)

(declare-fun res!41317 () Bool)

(assert (=> b!79008 (=> (not res!41317) (not e!51622))))

(assert (=> b!79008 (= res!41317 (= (getValueByKey!136 (toList!748 lt!36629) (_1!1105 (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))) (Some!141 (_2!1105 (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))))

(declare-fun b!79009 () Bool)

(assert (=> b!79009 (= e!51622 (contains!748 (toList!748 lt!36629) (ite (or c!12015 c!12017) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (= (and d!18855 res!41316) b!79008))

(assert (= (and b!79008 res!41317) b!79009))

(declare-fun m!79615 () Bool)

(assert (=> d!18855 m!79615))

(declare-fun m!79617 () Bool)

(assert (=> d!18855 m!79617))

(declare-fun m!79619 () Bool)

(assert (=> d!18855 m!79619))

(declare-fun m!79621 () Bool)

(assert (=> d!18855 m!79621))

(declare-fun m!79623 () Bool)

(assert (=> b!79008 m!79623))

(declare-fun m!79625 () Bool)

(assert (=> b!79009 m!79625))

(assert (=> bm!7184 d!18855))

(declare-fun b!79011 () Bool)

(declare-fun e!51623 () Option!142)

(declare-fun e!51624 () Option!142)

(assert (=> b!79011 (= e!51623 e!51624)))

(declare-fun c!12196 () Bool)

(assert (=> b!79011 (= c!12196 (and ((_ is Cons!1529) (t!5183 lt!35908)) (not (= (_1!1105 (h!2117 (t!5183 lt!35908))) (_1!1105 lt!35788)))))))

(declare-fun b!79010 () Bool)

(assert (=> b!79010 (= e!51623 (Some!141 (_2!1105 (h!2117 (t!5183 lt!35908)))))))

(declare-fun b!79012 () Bool)

(assert (=> b!79012 (= e!51624 (getValueByKey!136 (t!5183 (t!5183 lt!35908)) (_1!1105 lt!35788)))))

(declare-fun b!79013 () Bool)

(assert (=> b!79013 (= e!51624 None!140)))

(declare-fun d!18857 () Bool)

(declare-fun c!12195 () Bool)

(assert (=> d!18857 (= c!12195 (and ((_ is Cons!1529) (t!5183 lt!35908)) (= (_1!1105 (h!2117 (t!5183 lt!35908))) (_1!1105 lt!35788))))))

(assert (=> d!18857 (= (getValueByKey!136 (t!5183 lt!35908) (_1!1105 lt!35788)) e!51623)))

(assert (= (and d!18857 c!12195) b!79010))

(assert (= (and d!18857 (not c!12195)) b!79011))

(assert (= (and b!79011 c!12196) b!79012))

(assert (= (and b!79011 (not c!12196)) b!79013))

(declare-fun m!79627 () Bool)

(assert (=> b!79012 m!79627))

(assert (=> b!78488 d!18857))

(declare-fun d!18859 () Bool)

(declare-fun lt!36630 () Bool)

(assert (=> d!18859 (= lt!36630 (select (content!82 lt!36165) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun e!51625 () Bool)

(assert (=> d!18859 (= lt!36630 e!51625)))

(declare-fun res!41318 () Bool)

(assert (=> d!18859 (=> (not res!41318) (not e!51625))))

(assert (=> d!18859 (= res!41318 ((_ is Cons!1529) lt!36165))))

(assert (=> d!18859 (= (contains!748 lt!36165 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))) lt!36630)))

(declare-fun b!79014 () Bool)

(declare-fun e!51626 () Bool)

(assert (=> b!79014 (= e!51625 e!51626)))

(declare-fun res!41319 () Bool)

(assert (=> b!79014 (=> res!41319 e!51626)))

(assert (=> b!79014 (= res!41319 (= (h!2117 lt!36165) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!79015 () Bool)

(assert (=> b!79015 (= e!51626 (contains!748 (t!5183 lt!36165) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(assert (= (and d!18859 res!41318) b!79014))

(assert (= (and b!79014 (not res!41319)) b!79015))

(declare-fun m!79629 () Bool)

(assert (=> d!18859 m!79629))

(declare-fun m!79631 () Bool)

(assert (=> d!18859 m!79631))

(declare-fun m!79633 () Bool)

(assert (=> b!79015 m!79633))

(assert (=> b!78419 d!18859))

(declare-fun d!18861 () Bool)

(assert (=> d!18861 (= (get!1192 (getValueByKey!136 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2598 (getValueByKey!136 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18667 d!18861))

(declare-fun b!79017 () Bool)

(declare-fun e!51627 () Option!142)

(declare-fun e!51628 () Option!142)

(assert (=> b!79017 (= e!51627 e!51628)))

(declare-fun c!12198 () Bool)

(assert (=> b!79017 (= c!12198 (and ((_ is Cons!1529) (toList!748 lt!35969)) (not (= (_1!1105 (h!2117 (toList!748 lt!35969))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79016 () Bool)

(assert (=> b!79016 (= e!51627 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35969)))))))

(declare-fun b!79018 () Bool)

(assert (=> b!79018 (= e!51628 (getValueByKey!136 (t!5183 (toList!748 lt!35969)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79019 () Bool)

(assert (=> b!79019 (= e!51628 None!140)))

(declare-fun d!18863 () Bool)

(declare-fun c!12197 () Bool)

(assert (=> d!18863 (= c!12197 (and ((_ is Cons!1529) (toList!748 lt!35969)) (= (_1!1105 (h!2117 (toList!748 lt!35969))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18863 (= (getValueByKey!136 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000) e!51627)))

(assert (= (and d!18863 c!12197) b!79016))

(assert (= (and d!18863 (not c!12197)) b!79017))

(assert (= (and b!79017 c!12198) b!79018))

(assert (= (and b!79017 (not c!12198)) b!79019))

(declare-fun m!79635 () Bool)

(assert (=> b!79018 m!79635))

(assert (=> d!18667 d!18863))

(declare-fun d!18865 () Bool)

(declare-fun lt!36631 () Bool)

(assert (=> d!18865 (= lt!36631 (select (content!82 (toList!748 lt!36179)) (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun e!51629 () Bool)

(assert (=> d!18865 (= lt!36631 e!51629)))

(declare-fun res!41320 () Bool)

(assert (=> d!18865 (=> (not res!41320) (not e!51629))))

(assert (=> d!18865 (= res!41320 ((_ is Cons!1529) (toList!748 lt!36179)))))

(assert (=> d!18865 (= (contains!748 (toList!748 lt!36179) (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36631)))

(declare-fun b!79020 () Bool)

(declare-fun e!51630 () Bool)

(assert (=> b!79020 (= e!51629 e!51630)))

(declare-fun res!41321 () Bool)

(assert (=> b!79020 (=> res!41321 e!51630)))

(assert (=> b!79020 (= res!41321 (= (h!2117 (toList!748 lt!36179)) (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!79021 () Bool)

(assert (=> b!79021 (= e!51630 (contains!748 (t!5183 (toList!748 lt!36179)) (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18865 res!41320) b!79020))

(assert (= (and b!79020 (not res!41321)) b!79021))

(declare-fun m!79637 () Bool)

(assert (=> d!18865 m!79637))

(declare-fun m!79639 () Bool)

(assert (=> d!18865 m!79639))

(declare-fun m!79641 () Bool)

(assert (=> b!79021 m!79641))

(assert (=> b!78431 d!18865))

(declare-fun d!18867 () Bool)

(assert (=> d!18867 (= (isDefined!90 (getValueByKey!136 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063))))) (not (isEmpty!332 (getValueByKey!136 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))))

(declare-fun bs!3337 () Bool)

(assert (= bs!3337 d!18867))

(assert (=> bs!3337 m!78989))

(declare-fun m!79643 () Bool)

(assert (=> bs!3337 m!79643))

(assert (=> b!78723 d!18867))

(declare-fun b!79023 () Bool)

(declare-fun e!51631 () Option!142)

(declare-fun e!51632 () Option!142)

(assert (=> b!79023 (= e!51631 e!51632)))

(declare-fun c!12200 () Bool)

(assert (=> b!79023 (= c!12200 (and ((_ is Cons!1529) (toList!748 e!51143)) (not (= (_1!1105 (h!2117 (toList!748 e!51143))) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))))

(declare-fun b!79022 () Bool)

(assert (=> b!79022 (= e!51631 (Some!141 (_2!1105 (h!2117 (toList!748 e!51143)))))))

(declare-fun b!79024 () Bool)

(assert (=> b!79024 (= e!51632 (getValueByKey!136 (t!5183 (toList!748 e!51143)) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))

(declare-fun b!79025 () Bool)

(assert (=> b!79025 (= e!51632 None!140)))

(declare-fun d!18869 () Bool)

(declare-fun c!12199 () Bool)

(assert (=> d!18869 (= c!12199 (and ((_ is Cons!1529) (toList!748 e!51143)) (= (_1!1105 (h!2117 (toList!748 e!51143))) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063))))))))

(assert (=> d!18869 (= (getValueByKey!136 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))) e!51631)))

(assert (= (and d!18869 c!12199) b!79022))

(assert (= (and d!18869 (not c!12199)) b!79023))

(assert (= (and b!79023 c!12200) b!79024))

(assert (= (and b!79023 (not c!12200)) b!79025))

(declare-fun m!79645 () Bool)

(assert (=> b!79024 m!79645))

(assert (=> b!78723 d!18869))

(declare-fun d!18871 () Bool)

(declare-fun e!51634 () Bool)

(assert (=> d!18871 e!51634))

(declare-fun res!41322 () Bool)

(assert (=> d!18871 (=> res!41322 e!51634)))

(declare-fun lt!36632 () Bool)

(assert (=> d!18871 (= res!41322 (not lt!36632))))

(declare-fun lt!36633 () Bool)

(assert (=> d!18871 (= lt!36632 lt!36633)))

(declare-fun lt!36634 () Unit!2263)

(declare-fun e!51633 () Unit!2263)

(assert (=> d!18871 (= lt!36634 e!51633)))

(declare-fun c!12201 () Bool)

(assert (=> d!18871 (= c!12201 lt!36633)))

(assert (=> d!18871 (= lt!36633 (containsKey!140 (toList!748 lt!36237) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18871 (= (contains!745 lt!36237 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36632)))

(declare-fun b!79026 () Bool)

(declare-fun lt!36635 () Unit!2263)

(assert (=> b!79026 (= e!51633 lt!36635)))

(assert (=> b!79026 (= lt!36635 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36237) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> b!79026 (isDefined!90 (getValueByKey!136 (toList!748 lt!36237) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79027 () Bool)

(declare-fun Unit!2304 () Unit!2263)

(assert (=> b!79027 (= e!51633 Unit!2304)))

(declare-fun b!79028 () Bool)

(assert (=> b!79028 (= e!51634 (isDefined!90 (getValueByKey!136 (toList!748 lt!36237) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!18871 c!12201) b!79026))

(assert (= (and d!18871 (not c!12201)) b!79027))

(assert (= (and d!18871 (not res!41322)) b!79028))

(declare-fun m!79647 () Bool)

(assert (=> d!18871 m!79647))

(declare-fun m!79649 () Bool)

(assert (=> b!79026 m!79649))

(assert (=> b!79026 m!78635))

(assert (=> b!79026 m!78635))

(declare-fun m!79651 () Bool)

(assert (=> b!79026 m!79651))

(assert (=> b!79028 m!78635))

(assert (=> b!79028 m!78635))

(assert (=> b!79028 m!79651))

(assert (=> d!18607 d!18871))

(declare-fun b!79030 () Bool)

(declare-fun e!51635 () Option!142)

(declare-fun e!51636 () Option!142)

(assert (=> b!79030 (= e!51635 e!51636)))

(declare-fun c!12203 () Bool)

(assert (=> b!79030 (= c!12203 (and ((_ is Cons!1529) lt!36234) (not (= (_1!1105 (h!2117 lt!36234)) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79029 () Bool)

(assert (=> b!79029 (= e!51635 (Some!141 (_2!1105 (h!2117 lt!36234))))))

(declare-fun b!79031 () Bool)

(assert (=> b!79031 (= e!51636 (getValueByKey!136 (t!5183 lt!36234) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79032 () Bool)

(assert (=> b!79032 (= e!51636 None!140)))

(declare-fun d!18873 () Bool)

(declare-fun c!12202 () Bool)

(assert (=> d!18873 (= c!12202 (and ((_ is Cons!1529) lt!36234) (= (_1!1105 (h!2117 lt!36234)) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18873 (= (getValueByKey!136 lt!36234 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!51635)))

(assert (= (and d!18873 c!12202) b!79029))

(assert (= (and d!18873 (not c!12202)) b!79030))

(assert (= (and b!79030 c!12203) b!79031))

(assert (= (and b!79030 (not c!12203)) b!79032))

(declare-fun m!79653 () Bool)

(assert (=> b!79031 m!79653))

(assert (=> d!18607 d!18873))

(declare-fun d!18875 () Bool)

(assert (=> d!18875 (= (getValueByKey!136 lt!36234 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36636 () Unit!2263)

(assert (=> d!18875 (= lt!36636 (choose!468 lt!36234 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun e!51637 () Bool)

(assert (=> d!18875 e!51637))

(declare-fun res!41323 () Bool)

(assert (=> d!18875 (=> (not res!41323) (not e!51637))))

(assert (=> d!18875 (= res!41323 (isStrictlySorted!290 lt!36234))))

(assert (=> d!18875 (= (lemmaContainsTupThenGetReturnValue!55 lt!36234 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36636)))

(declare-fun b!79033 () Bool)

(declare-fun res!41324 () Bool)

(assert (=> b!79033 (=> (not res!41324) (not e!51637))))

(assert (=> b!79033 (= res!41324 (containsKey!140 lt!36234 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79034 () Bool)

(assert (=> b!79034 (= e!51637 (contains!748 lt!36234 (tuple2!2191 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!18875 res!41323) b!79033))

(assert (= (and b!79033 res!41324) b!79034))

(assert (=> d!18875 m!78629))

(declare-fun m!79655 () Bool)

(assert (=> d!18875 m!79655))

(declare-fun m!79657 () Bool)

(assert (=> d!18875 m!79657))

(declare-fun m!79659 () Bool)

(assert (=> b!79033 m!79659))

(declare-fun m!79661 () Bool)

(assert (=> b!79034 m!79661))

(assert (=> d!18607 d!18875))

(declare-fun b!79035 () Bool)

(declare-fun c!12204 () Bool)

(assert (=> b!79035 (= c!12204 (and ((_ is Cons!1529) (toList!748 lt!35785)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun e!51641 () List!1533)

(declare-fun e!51638 () List!1533)

(assert (=> b!79035 (= e!51641 e!51638)))

(declare-fun bm!7273 () Bool)

(declare-fun call!7278 () List!1533)

(declare-fun c!12205 () Bool)

(declare-fun e!51640 () List!1533)

(assert (=> bm!7273 (= call!7278 ($colon$colon!68 e!51640 (ite c!12205 (h!2117 (toList!748 lt!35785)) (tuple2!2191 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun c!12206 () Bool)

(assert (=> bm!7273 (= c!12206 c!12205)))

(declare-fun d!18877 () Bool)

(declare-fun e!51642 () Bool)

(assert (=> d!18877 e!51642))

(declare-fun res!41325 () Bool)

(assert (=> d!18877 (=> (not res!41325) (not e!51642))))

(declare-fun lt!36637 () List!1533)

(assert (=> d!18877 (= res!41325 (isStrictlySorted!290 lt!36637))))

(declare-fun e!51639 () List!1533)

(assert (=> d!18877 (= lt!36637 e!51639)))

(assert (=> d!18877 (= c!12205 (and ((_ is Cons!1529) (toList!748 lt!35785)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18877 (isStrictlySorted!290 (toList!748 lt!35785))))

(assert (=> d!18877 (= (insertStrictlySorted!57 (toList!748 lt!35785) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36637)))

(declare-fun b!79036 () Bool)

(declare-fun c!12207 () Bool)

(assert (=> b!79036 (= e!51640 (ite c!12207 (t!5183 (toList!748 lt!35785)) (ite c!12204 (Cons!1529 (h!2117 (toList!748 lt!35785)) (t!5183 (toList!748 lt!35785))) Nil!1530)))))

(declare-fun bm!7274 () Bool)

(declare-fun call!7277 () List!1533)

(assert (=> bm!7274 (= call!7277 call!7278)))

(declare-fun b!79037 () Bool)

(assert (=> b!79037 (= e!51639 call!7278)))

(declare-fun b!79038 () Bool)

(declare-fun res!41326 () Bool)

(assert (=> b!79038 (=> (not res!41326) (not e!51642))))

(assert (=> b!79038 (= res!41326 (containsKey!140 lt!36637 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79039 () Bool)

(declare-fun call!7276 () List!1533)

(assert (=> b!79039 (= e!51638 call!7276)))

(declare-fun b!79040 () Bool)

(assert (=> b!79040 (= e!51641 call!7277)))

(declare-fun b!79041 () Bool)

(assert (=> b!79041 (= e!51639 e!51641)))

(assert (=> b!79041 (= c!12207 (and ((_ is Cons!1529) (toList!748 lt!35785)) (= (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun bm!7275 () Bool)

(assert (=> bm!7275 (= call!7276 call!7277)))

(declare-fun b!79042 () Bool)

(assert (=> b!79042 (= e!51640 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35785)) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79043 () Bool)

(assert (=> b!79043 (= e!51642 (contains!748 lt!36637 (tuple2!2191 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79044 () Bool)

(assert (=> b!79044 (= e!51638 call!7276)))

(assert (= (and d!18877 c!12205) b!79037))

(assert (= (and d!18877 (not c!12205)) b!79041))

(assert (= (and b!79041 c!12207) b!79040))

(assert (= (and b!79041 (not c!12207)) b!79035))

(assert (= (and b!79035 c!12204) b!79044))

(assert (= (and b!79035 (not c!12204)) b!79039))

(assert (= (or b!79044 b!79039) bm!7275))

(assert (= (or b!79040 bm!7275) bm!7274))

(assert (= (or b!79037 bm!7274) bm!7273))

(assert (= (and bm!7273 c!12206) b!79042))

(assert (= (and bm!7273 (not c!12206)) b!79036))

(assert (= (and d!18877 res!41325) b!79038))

(assert (= (and b!79038 res!41326) b!79043))

(declare-fun m!79663 () Bool)

(assert (=> b!79038 m!79663))

(declare-fun m!79665 () Bool)

(assert (=> b!79043 m!79665))

(declare-fun m!79667 () Bool)

(assert (=> d!18877 m!79667))

(assert (=> d!18877 m!78593))

(declare-fun m!79669 () Bool)

(assert (=> bm!7273 m!79669))

(declare-fun m!79671 () Bool)

(assert (=> b!79042 m!79671))

(assert (=> d!18607 d!18877))

(declare-fun b!79045 () Bool)

(declare-fun c!12208 () Bool)

(assert (=> b!79045 (= c!12208 (and ((_ is Cons!1529) (t!5183 (toList!748 (+!109 lt!35777 lt!35784)))) (bvsgt (_1!1105 (h!2117 (t!5183 (toList!748 (+!109 lt!35777 lt!35784))))) (_1!1105 lt!35783))))))

(declare-fun e!51646 () List!1533)

(declare-fun e!51643 () List!1533)

(assert (=> b!79045 (= e!51646 e!51643)))

(declare-fun bm!7276 () Bool)

(declare-fun e!51645 () List!1533)

(declare-fun c!12209 () Bool)

(declare-fun call!7281 () List!1533)

(assert (=> bm!7276 (= call!7281 ($colon$colon!68 e!51645 (ite c!12209 (h!2117 (t!5183 (toList!748 (+!109 lt!35777 lt!35784)))) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783)))))))

(declare-fun c!12210 () Bool)

(assert (=> bm!7276 (= c!12210 c!12209)))

(declare-fun d!18879 () Bool)

(declare-fun e!51647 () Bool)

(assert (=> d!18879 e!51647))

(declare-fun res!41327 () Bool)

(assert (=> d!18879 (=> (not res!41327) (not e!51647))))

(declare-fun lt!36638 () List!1533)

(assert (=> d!18879 (= res!41327 (isStrictlySorted!290 lt!36638))))

(declare-fun e!51644 () List!1533)

(assert (=> d!18879 (= lt!36638 e!51644)))

(assert (=> d!18879 (= c!12209 (and ((_ is Cons!1529) (t!5183 (toList!748 (+!109 lt!35777 lt!35784)))) (bvslt (_1!1105 (h!2117 (t!5183 (toList!748 (+!109 lt!35777 lt!35784))))) (_1!1105 lt!35783))))))

(assert (=> d!18879 (isStrictlySorted!290 (t!5183 (toList!748 (+!109 lt!35777 lt!35784))))))

(assert (=> d!18879 (= (insertStrictlySorted!57 (t!5183 (toList!748 (+!109 lt!35777 lt!35784))) (_1!1105 lt!35783) (_2!1105 lt!35783)) lt!36638)))

(declare-fun b!79046 () Bool)

(declare-fun c!12211 () Bool)

(assert (=> b!79046 (= e!51645 (ite c!12211 (t!5183 (t!5183 (toList!748 (+!109 lt!35777 lt!35784)))) (ite c!12208 (Cons!1529 (h!2117 (t!5183 (toList!748 (+!109 lt!35777 lt!35784)))) (t!5183 (t!5183 (toList!748 (+!109 lt!35777 lt!35784))))) Nil!1530)))))

(declare-fun bm!7277 () Bool)

(declare-fun call!7280 () List!1533)

(assert (=> bm!7277 (= call!7280 call!7281)))

(declare-fun b!79047 () Bool)

(assert (=> b!79047 (= e!51644 call!7281)))

(declare-fun b!79048 () Bool)

(declare-fun res!41328 () Bool)

(assert (=> b!79048 (=> (not res!41328) (not e!51647))))

(assert (=> b!79048 (= res!41328 (containsKey!140 lt!36638 (_1!1105 lt!35783)))))

(declare-fun b!79049 () Bool)

(declare-fun call!7279 () List!1533)

(assert (=> b!79049 (= e!51643 call!7279)))

(declare-fun b!79050 () Bool)

(assert (=> b!79050 (= e!51646 call!7280)))

(declare-fun b!79051 () Bool)

(assert (=> b!79051 (= e!51644 e!51646)))

(assert (=> b!79051 (= c!12211 (and ((_ is Cons!1529) (t!5183 (toList!748 (+!109 lt!35777 lt!35784)))) (= (_1!1105 (h!2117 (t!5183 (toList!748 (+!109 lt!35777 lt!35784))))) (_1!1105 lt!35783))))))

(declare-fun bm!7278 () Bool)

(assert (=> bm!7278 (= call!7279 call!7280)))

(declare-fun b!79052 () Bool)

(assert (=> b!79052 (= e!51645 (insertStrictlySorted!57 (t!5183 (t!5183 (toList!748 (+!109 lt!35777 lt!35784)))) (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(declare-fun b!79053 () Bool)

(assert (=> b!79053 (= e!51647 (contains!748 lt!36638 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!79054 () Bool)

(assert (=> b!79054 (= e!51643 call!7279)))

(assert (= (and d!18879 c!12209) b!79047))

(assert (= (and d!18879 (not c!12209)) b!79051))

(assert (= (and b!79051 c!12211) b!79050))

(assert (= (and b!79051 (not c!12211)) b!79045))

(assert (= (and b!79045 c!12208) b!79054))

(assert (= (and b!79045 (not c!12208)) b!79049))

(assert (= (or b!79054 b!79049) bm!7278))

(assert (= (or b!79050 bm!7278) bm!7277))

(assert (= (or b!79047 bm!7277) bm!7276))

(assert (= (and bm!7276 c!12210) b!79052))

(assert (= (and bm!7276 (not c!12210)) b!79046))

(assert (= (and d!18879 res!41327) b!79048))

(assert (= (and b!79048 res!41328) b!79053))

(declare-fun m!79673 () Bool)

(assert (=> b!79048 m!79673))

(declare-fun m!79675 () Bool)

(assert (=> b!79053 m!79675))

(declare-fun m!79677 () Bool)

(assert (=> d!18879 m!79677))

(declare-fun m!79679 () Bool)

(assert (=> d!18879 m!79679))

(declare-fun m!79681 () Bool)

(assert (=> bm!7276 m!79681))

(declare-fun m!79683 () Bool)

(assert (=> b!79052 m!79683))

(assert (=> b!78572 d!18879))

(assert (=> d!18633 d!18631))

(declare-fun d!18881 () Bool)

(assert (=> d!18881 (= (getValueByKey!136 lt!35900 (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783)))))

(assert (=> d!18881 true))

(declare-fun _$22!391 () Unit!2263)

(assert (=> d!18881 (= (choose!468 lt!35900 (_1!1105 lt!35783) (_2!1105 lt!35783)) _$22!391)))

(declare-fun bs!3338 () Bool)

(assert (= bs!3338 d!18881))

(assert (=> bs!3338 m!77981))

(assert (=> d!18633 d!18881))

(declare-fun d!18883 () Bool)

(declare-fun res!41333 () Bool)

(declare-fun e!51652 () Bool)

(assert (=> d!18883 (=> res!41333 e!51652)))

(assert (=> d!18883 (= res!41333 (or ((_ is Nil!1530) lt!35900) ((_ is Nil!1530) (t!5183 lt!35900))))))

(assert (=> d!18883 (= (isStrictlySorted!290 lt!35900) e!51652)))

(declare-fun b!79059 () Bool)

(declare-fun e!51653 () Bool)

(assert (=> b!79059 (= e!51652 e!51653)))

(declare-fun res!41334 () Bool)

(assert (=> b!79059 (=> (not res!41334) (not e!51653))))

(assert (=> b!79059 (= res!41334 (bvslt (_1!1105 (h!2117 lt!35900)) (_1!1105 (h!2117 (t!5183 lt!35900)))))))

(declare-fun b!79060 () Bool)

(assert (=> b!79060 (= e!51653 (isStrictlySorted!290 (t!5183 lt!35900)))))

(assert (= (and d!18883 (not res!41333)) b!79059))

(assert (= (and b!79059 res!41334) b!79060))

(declare-fun m!79685 () Bool)

(assert (=> b!79060 m!79685))

(assert (=> d!18633 d!18883))

(declare-fun b!79061 () Bool)

(declare-fun lt!36639 () Unit!2263)

(declare-fun lt!36645 () Unit!2263)

(assert (=> b!79061 (= lt!36639 lt!36645)))

(declare-fun lt!36644 () V!2995)

(declare-fun lt!36641 () (_ BitVec 64))

(declare-fun lt!36643 () (_ BitVec 64))

(declare-fun lt!36642 () ListLongMap!1465)

(assert (=> b!79061 (not (contains!745 (+!109 lt!36642 (tuple2!2191 lt!36643 lt!36644)) lt!36641))))

(assert (=> b!79061 (= lt!36645 (addStillNotContains!30 lt!36642 lt!36643 lt!36644 lt!36641))))

(assert (=> b!79061 (= lt!36641 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!79061 (= lt!36644 (get!1189 (select (arr!1895 (ite c!11979 (_values!2255 newMap!16) lt!36057)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79061 (= lt!36643 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7282 () ListLongMap!1465)

(assert (=> b!79061 (= lt!36642 call!7282)))

(declare-fun e!51654 () ListLongMap!1465)

(assert (=> b!79061 (= e!51654 (+!109 call!7282 (tuple2!2191 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (get!1189 (select (arr!1895 (ite c!11979 (_values!2255 newMap!16) lt!36057)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79062 () Bool)

(declare-fun e!51657 () ListLongMap!1465)

(assert (=> b!79062 (= e!51657 (ListLongMap!1466 Nil!1530))))

(declare-fun lt!36640 () ListLongMap!1465)

(declare-fun e!51659 () Bool)

(declare-fun b!79063 () Bool)

(assert (=> b!79063 (= e!51659 (= lt!36640 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36057) (mask!6268 newMap!16) (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16))))))

(declare-fun b!79065 () Bool)

(declare-fun e!51656 () Bool)

(declare-fun e!51655 () Bool)

(assert (=> b!79065 (= e!51656 e!51655)))

(assert (=> b!79065 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun res!41336 () Bool)

(assert (=> b!79065 (= res!41336 (contains!745 lt!36640 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79065 (=> (not res!41336) (not e!51655))))

(declare-fun b!79066 () Bool)

(assert (=> b!79066 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> b!79066 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (ite c!11979 (_values!2255 newMap!16) lt!36057))))))

(assert (=> b!79066 (= e!51655 (= (apply!79 lt!36640 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 (ite c!11979 (_values!2255 newMap!16) lt!36057)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!7279 () Bool)

(assert (=> bm!7279 (= call!7282 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36057) (mask!6268 newMap!16) (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16)))))

(declare-fun b!79067 () Bool)

(assert (=> b!79067 (= e!51654 call!7282)))

(declare-fun b!79068 () Bool)

(declare-fun e!51660 () Bool)

(assert (=> b!79068 (= e!51660 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79068 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!79064 () Bool)

(declare-fun e!51658 () Bool)

(assert (=> b!79064 (= e!51658 e!51656)))

(declare-fun c!12214 () Bool)

(assert (=> b!79064 (= c!12214 e!51660)))

(declare-fun res!41335 () Bool)

(assert (=> b!79064 (=> (not res!41335) (not e!51660))))

(assert (=> b!79064 (= res!41335 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun d!18885 () Bool)

(assert (=> d!18885 e!51658))

(declare-fun res!41337 () Bool)

(assert (=> d!18885 (=> (not res!41337) (not e!51658))))

(assert (=> d!18885 (= res!41337 (not (contains!745 lt!36640 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18885 (= lt!36640 e!51657)))

(declare-fun c!12212 () Bool)

(assert (=> d!18885 (= c!12212 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18885 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18885 (= (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite c!11979 (_values!2255 newMap!16) lt!36057) (mask!6268 newMap!16) (ite c!11979 (ite c!11986 lt!36052 lt!36055) (extraKeys!2123 newMap!16)) (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36640)))

(declare-fun b!79069 () Bool)

(assert (=> b!79069 (= e!51659 (isEmpty!331 lt!36640))))

(declare-fun b!79070 () Bool)

(assert (=> b!79070 (= e!51657 e!51654)))

(declare-fun c!12213 () Bool)

(assert (=> b!79070 (= c!12213 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79071 () Bool)

(declare-fun res!41338 () Bool)

(assert (=> b!79071 (=> (not res!41338) (not e!51658))))

(assert (=> b!79071 (= res!41338 (not (contains!745 lt!36640 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79072 () Bool)

(assert (=> b!79072 (= e!51656 e!51659)))

(declare-fun c!12215 () Bool)

(assert (=> b!79072 (= c!12215 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (= (and d!18885 c!12212) b!79062))

(assert (= (and d!18885 (not c!12212)) b!79070))

(assert (= (and b!79070 c!12213) b!79061))

(assert (= (and b!79070 (not c!12213)) b!79067))

(assert (= (or b!79061 b!79067) bm!7279))

(assert (= (and d!18885 res!41337) b!79071))

(assert (= (and b!79071 res!41338) b!79064))

(assert (= (and b!79064 res!41335) b!79068))

(assert (= (and b!79064 c!12214) b!79065))

(assert (= (and b!79064 (not c!12214)) b!79072))

(assert (= (and b!79065 res!41336) b!79066))

(assert (= (and b!79072 c!12215) b!79063))

(assert (= (and b!79072 (not c!12215)) b!79069))

(declare-fun b_lambda!3547 () Bool)

(assert (=> (not b_lambda!3547) (not b!79061)))

(assert (=> b!79061 t!5191))

(declare-fun b_and!4861 () Bool)

(assert (= b_and!4857 (and (=> t!5191 result!2829) b_and!4861)))

(assert (=> b!79061 t!5193))

(declare-fun b_and!4863 () Bool)

(assert (= b_and!4859 (and (=> t!5193 result!2831) b_and!4863)))

(declare-fun b_lambda!3549 () Bool)

(assert (=> (not b_lambda!3549) (not b!79066)))

(assert (=> b!79066 t!5191))

(declare-fun b_and!4865 () Bool)

(assert (= b_and!4861 (and (=> t!5191 result!2829) b_and!4865)))

(assert (=> b!79066 t!5193))

(declare-fun b_and!4867 () Bool)

(assert (= b_and!4863 (and (=> t!5193 result!2831) b_and!4867)))

(declare-fun m!79687 () Bool)

(assert (=> b!79069 m!79687))

(declare-fun m!79689 () Bool)

(assert (=> b!79071 m!79689))

(declare-fun m!79691 () Bool)

(assert (=> b!79063 m!79691))

(assert (=> b!79068 m!78153))

(assert (=> b!79068 m!78153))

(assert (=> b!79068 m!78155))

(declare-fun m!79693 () Bool)

(assert (=> d!18885 m!79693))

(assert (=> d!18885 m!78167))

(assert (=> b!79066 m!78273))

(assert (=> b!79066 m!78153))

(assert (=> b!79066 m!78781))

(assert (=> b!79066 m!78153))

(declare-fun m!79695 () Bool)

(assert (=> b!79066 m!79695))

(assert (=> b!79066 m!78781))

(assert (=> b!79066 m!78273))

(assert (=> b!79066 m!78785))

(assert (=> b!79065 m!78153))

(assert (=> b!79065 m!78153))

(declare-fun m!79697 () Bool)

(assert (=> b!79065 m!79697))

(assert (=> b!79070 m!78153))

(assert (=> b!79070 m!78153))

(assert (=> b!79070 m!78155))

(assert (=> bm!7279 m!79691))

(declare-fun m!79699 () Bool)

(assert (=> b!79061 m!79699))

(declare-fun m!79701 () Bool)

(assert (=> b!79061 m!79701))

(assert (=> b!79061 m!78781))

(assert (=> b!79061 m!78273))

(assert (=> b!79061 m!78785))

(declare-fun m!79703 () Bool)

(assert (=> b!79061 m!79703))

(assert (=> b!79061 m!78153))

(assert (=> b!79061 m!79699))

(assert (=> b!79061 m!78781))

(assert (=> b!79061 m!78273))

(declare-fun m!79705 () Bool)

(assert (=> b!79061 m!79705))

(assert (=> bm!7210 d!18885))

(declare-fun d!18887 () Bool)

(assert (=> d!18887 (= (content!83 Nil!1531) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!18517 d!18887))

(declare-fun d!18889 () Bool)

(declare-fun res!41339 () Bool)

(declare-fun e!51661 () Bool)

(assert (=> d!18889 (=> res!41339 e!51661)))

(assert (=> d!18889 (= res!41339 (and ((_ is Cons!1529) (toList!748 lt!35969)) (= (_1!1105 (h!2117 (toList!748 lt!35969))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18889 (= (containsKey!140 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000) e!51661)))

(declare-fun b!79073 () Bool)

(declare-fun e!51662 () Bool)

(assert (=> b!79073 (= e!51661 e!51662)))

(declare-fun res!41340 () Bool)

(assert (=> b!79073 (=> (not res!41340) (not e!51662))))

(assert (=> b!79073 (= res!41340 (and (or (not ((_ is Cons!1529) (toList!748 lt!35969))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35969))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1529) (toList!748 lt!35969)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35969))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79074 () Bool)

(assert (=> b!79074 (= e!51662 (containsKey!140 (t!5183 (toList!748 lt!35969)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!18889 (not res!41339)) b!79073))

(assert (= (and b!79073 res!41340) b!79074))

(declare-fun m!79707 () Bool)

(assert (=> b!79074 m!79707))

(assert (=> d!18677 d!18889))

(declare-fun b!79076 () Bool)

(declare-fun e!51663 () Option!142)

(declare-fun e!51664 () Option!142)

(assert (=> b!79076 (= e!51663 e!51664)))

(declare-fun c!12217 () Bool)

(assert (=> b!79076 (= c!12217 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35903))) (not (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35903)))) (_1!1105 lt!35783)))))))

(declare-fun b!79075 () Bool)

(assert (=> b!79075 (= e!51663 (Some!141 (_2!1105 (h!2117 (t!5183 (toList!748 lt!35903))))))))

(declare-fun b!79077 () Bool)

(assert (=> b!79077 (= e!51664 (getValueByKey!136 (t!5183 (t!5183 (toList!748 lt!35903))) (_1!1105 lt!35783)))))

(declare-fun b!79078 () Bool)

(assert (=> b!79078 (= e!51664 None!140)))

(declare-fun d!18891 () Bool)

(declare-fun c!12216 () Bool)

(assert (=> d!18891 (= c!12216 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35903))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35903)))) (_1!1105 lt!35783))))))

(assert (=> d!18891 (= (getValueByKey!136 (t!5183 (toList!748 lt!35903)) (_1!1105 lt!35783)) e!51663)))

(assert (= (and d!18891 c!12216) b!79075))

(assert (= (and d!18891 (not c!12216)) b!79076))

(assert (= (and b!79076 c!12217) b!79077))

(assert (= (and b!79076 (not c!12217)) b!79078))

(declare-fun m!79709 () Bool)

(assert (=> b!79077 m!79709))

(assert (=> b!78726 d!18891))

(declare-fun d!18893 () Bool)

(assert (=> d!18893 (isDefined!90 (getValueByKey!136 (toList!748 lt!35884) (_1!1105 lt!35783)))))

(declare-fun lt!36646 () Unit!2263)

(assert (=> d!18893 (= lt!36646 (choose!471 (toList!748 lt!35884) (_1!1105 lt!35783)))))

(declare-fun e!51665 () Bool)

(assert (=> d!18893 e!51665))

(declare-fun res!41341 () Bool)

(assert (=> d!18893 (=> (not res!41341) (not e!51665))))

(assert (=> d!18893 (= res!41341 (isStrictlySorted!290 (toList!748 lt!35884)))))

(assert (=> d!18893 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35884) (_1!1105 lt!35783)) lt!36646)))

(declare-fun b!79079 () Bool)

(assert (=> b!79079 (= e!51665 (containsKey!140 (toList!748 lt!35884) (_1!1105 lt!35783)))))

(assert (= (and d!18893 res!41341) b!79079))

(assert (=> d!18893 m!77929))

(assert (=> d!18893 m!77929))

(assert (=> d!18893 m!78375))

(declare-fun m!79711 () Bool)

(assert (=> d!18893 m!79711))

(declare-fun m!79713 () Bool)

(assert (=> d!18893 m!79713))

(assert (=> b!79079 m!78371))

(assert (=> b!78378 d!18893))

(declare-fun d!18895 () Bool)

(assert (=> d!18895 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35884) (_1!1105 lt!35783))) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35884) (_1!1105 lt!35783)))))))

(declare-fun bs!3339 () Bool)

(assert (= bs!3339 d!18895))

(assert (=> bs!3339 m!77929))

(declare-fun m!79715 () Bool)

(assert (=> bs!3339 m!79715))

(assert (=> b!78378 d!18895))

(assert (=> b!78378 d!18681))

(declare-fun b!79081 () Bool)

(declare-fun e!51666 () Option!142)

(declare-fun e!51667 () Option!142)

(assert (=> b!79081 (= e!51666 e!51667)))

(declare-fun c!12219 () Bool)

(assert (=> b!79081 (= c!12219 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35911))) (not (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35911)))) (_1!1105 lt!35788)))))))

(declare-fun b!79080 () Bool)

(assert (=> b!79080 (= e!51666 (Some!141 (_2!1105 (h!2117 (t!5183 (toList!748 lt!35911))))))))

(declare-fun b!79082 () Bool)

(assert (=> b!79082 (= e!51667 (getValueByKey!136 (t!5183 (t!5183 (toList!748 lt!35911))) (_1!1105 lt!35788)))))

(declare-fun b!79083 () Bool)

(assert (=> b!79083 (= e!51667 None!140)))

(declare-fun d!18897 () Bool)

(declare-fun c!12218 () Bool)

(assert (=> d!18897 (= c!12218 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35911))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35911)))) (_1!1105 lt!35788))))))

(assert (=> d!18897 (= (getValueByKey!136 (t!5183 (toList!748 lt!35911)) (_1!1105 lt!35788)) e!51666)))

(assert (= (and d!18897 c!12218) b!79080))

(assert (= (and d!18897 (not c!12218)) b!79081))

(assert (= (and b!79081 c!12219) b!79082))

(assert (= (and b!79081 (not c!12219)) b!79083))

(declare-fun m!79717 () Bool)

(assert (=> b!79082 m!79717))

(assert (=> b!78598 d!18897))

(declare-fun d!18899 () Bool)

(declare-fun e!51669 () Bool)

(assert (=> d!18899 e!51669))

(declare-fun res!41342 () Bool)

(assert (=> d!18899 (=> res!41342 e!51669)))

(declare-fun lt!36647 () Bool)

(assert (=> d!18899 (= res!41342 (not lt!36647))))

(declare-fun lt!36648 () Bool)

(assert (=> d!18899 (= lt!36647 lt!36648)))

(declare-fun lt!36649 () Unit!2263)

(declare-fun e!51668 () Unit!2263)

(assert (=> d!18899 (= lt!36649 e!51668)))

(declare-fun c!12220 () Bool)

(assert (=> d!18899 (= c!12220 lt!36648)))

(assert (=> d!18899 (= lt!36648 (containsKey!140 (toList!748 lt!36186) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18899 (= (contains!745 lt!36186 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36647)))

(declare-fun b!79084 () Bool)

(declare-fun lt!36650 () Unit!2263)

(assert (=> b!79084 (= e!51668 lt!36650)))

(assert (=> b!79084 (= lt!36650 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36186) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> b!79084 (isDefined!90 (getValueByKey!136 (toList!748 lt!36186) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79085 () Bool)

(declare-fun Unit!2305 () Unit!2263)

(assert (=> b!79085 (= e!51668 Unit!2305)))

(declare-fun b!79086 () Bool)

(assert (=> b!79086 (= e!51669 (isDefined!90 (getValueByKey!136 (toList!748 lt!36186) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!18899 c!12220) b!79084))

(assert (= (and d!18899 (not c!12220)) b!79085))

(assert (= (and d!18899 (not res!41342)) b!79086))

(declare-fun m!79719 () Bool)

(assert (=> d!18899 m!79719))

(declare-fun m!79721 () Bool)

(assert (=> b!79084 m!79721))

(assert (=> b!79084 m!78471))

(assert (=> b!79084 m!78471))

(declare-fun m!79723 () Bool)

(assert (=> b!79084 m!79723))

(assert (=> b!79086 m!78471))

(assert (=> b!79086 m!78471))

(assert (=> b!79086 m!79723))

(assert (=> d!18551 d!18899))

(declare-fun b!79088 () Bool)

(declare-fun e!51670 () Option!142)

(declare-fun e!51671 () Option!142)

(assert (=> b!79088 (= e!51670 e!51671)))

(declare-fun c!12222 () Bool)

(assert (=> b!79088 (= c!12222 (and ((_ is Cons!1529) lt!36183) (not (= (_1!1105 (h!2117 lt!36183)) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79087 () Bool)

(assert (=> b!79087 (= e!51670 (Some!141 (_2!1105 (h!2117 lt!36183))))))

(declare-fun b!79089 () Bool)

(assert (=> b!79089 (= e!51671 (getValueByKey!136 (t!5183 lt!36183) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79090 () Bool)

(assert (=> b!79090 (= e!51671 None!140)))

(declare-fun d!18901 () Bool)

(declare-fun c!12221 () Bool)

(assert (=> d!18901 (= c!12221 (and ((_ is Cons!1529) lt!36183) (= (_1!1105 (h!2117 lt!36183)) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18901 (= (getValueByKey!136 lt!36183 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!51670)))

(assert (= (and d!18901 c!12221) b!79087))

(assert (= (and d!18901 (not c!12221)) b!79088))

(assert (= (and b!79088 c!12222) b!79089))

(assert (= (and b!79088 (not c!12222)) b!79090))

(declare-fun m!79725 () Bool)

(assert (=> b!79089 m!79725))

(assert (=> d!18551 d!18901))

(declare-fun d!18903 () Bool)

(assert (=> d!18903 (= (getValueByKey!136 lt!36183 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36651 () Unit!2263)

(assert (=> d!18903 (= lt!36651 (choose!468 lt!36183 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun e!51672 () Bool)

(assert (=> d!18903 e!51672))

(declare-fun res!41343 () Bool)

(assert (=> d!18903 (=> (not res!41343) (not e!51672))))

(assert (=> d!18903 (= res!41343 (isStrictlySorted!290 lt!36183))))

(assert (=> d!18903 (= (lemmaContainsTupThenGetReturnValue!55 lt!36183 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36651)))

(declare-fun b!79091 () Bool)

(declare-fun res!41344 () Bool)

(assert (=> b!79091 (=> (not res!41344) (not e!51672))))

(assert (=> b!79091 (= res!41344 (containsKey!140 lt!36183 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79092 () Bool)

(assert (=> b!79092 (= e!51672 (contains!748 lt!36183 (tuple2!2191 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!18903 res!41343) b!79091))

(assert (= (and b!79091 res!41344) b!79092))

(assert (=> d!18903 m!78465))

(declare-fun m!79727 () Bool)

(assert (=> d!18903 m!79727))

(declare-fun m!79729 () Bool)

(assert (=> d!18903 m!79729))

(declare-fun m!79731 () Bool)

(assert (=> b!79091 m!79731))

(declare-fun m!79733 () Bool)

(assert (=> b!79092 m!79733))

(assert (=> d!18551 d!18903))

(declare-fun c!12223 () Bool)

(declare-fun b!79093 () Bool)

(assert (=> b!79093 (= c!12223 (and ((_ is Cons!1529) (toList!748 lt!35973)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35973))) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun e!51676 () List!1533)

(declare-fun e!51673 () List!1533)

(assert (=> b!79093 (= e!51676 e!51673)))

(declare-fun call!7285 () List!1533)

(declare-fun bm!7280 () Bool)

(declare-fun e!51675 () List!1533)

(declare-fun c!12224 () Bool)

(assert (=> bm!7280 (= call!7285 ($colon$colon!68 e!51675 (ite c!12224 (h!2117 (toList!748 lt!35973)) (tuple2!2191 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun c!12225 () Bool)

(assert (=> bm!7280 (= c!12225 c!12224)))

(declare-fun d!18905 () Bool)

(declare-fun e!51677 () Bool)

(assert (=> d!18905 e!51677))

(declare-fun res!41345 () Bool)

(assert (=> d!18905 (=> (not res!41345) (not e!51677))))

(declare-fun lt!36652 () List!1533)

(assert (=> d!18905 (= res!41345 (isStrictlySorted!290 lt!36652))))

(declare-fun e!51674 () List!1533)

(assert (=> d!18905 (= lt!36652 e!51674)))

(assert (=> d!18905 (= c!12224 (and ((_ is Cons!1529) (toList!748 lt!35973)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35973))) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18905 (isStrictlySorted!290 (toList!748 lt!35973))))

(assert (=> d!18905 (= (insertStrictlySorted!57 (toList!748 lt!35973) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36652)))

(declare-fun b!79094 () Bool)

(declare-fun c!12226 () Bool)

(assert (=> b!79094 (= e!51675 (ite c!12226 (t!5183 (toList!748 lt!35973)) (ite c!12223 (Cons!1529 (h!2117 (toList!748 lt!35973)) (t!5183 (toList!748 lt!35973))) Nil!1530)))))

(declare-fun bm!7281 () Bool)

(declare-fun call!7284 () List!1533)

(assert (=> bm!7281 (= call!7284 call!7285)))

(declare-fun b!79095 () Bool)

(assert (=> b!79095 (= e!51674 call!7285)))

(declare-fun b!79096 () Bool)

(declare-fun res!41346 () Bool)

(assert (=> b!79096 (=> (not res!41346) (not e!51677))))

(assert (=> b!79096 (= res!41346 (containsKey!140 lt!36652 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79097 () Bool)

(declare-fun call!7283 () List!1533)

(assert (=> b!79097 (= e!51673 call!7283)))

(declare-fun b!79098 () Bool)

(assert (=> b!79098 (= e!51676 call!7284)))

(declare-fun b!79099 () Bool)

(assert (=> b!79099 (= e!51674 e!51676)))

(assert (=> b!79099 (= c!12226 (and ((_ is Cons!1529) (toList!748 lt!35973)) (= (_1!1105 (h!2117 (toList!748 lt!35973))) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun bm!7282 () Bool)

(assert (=> bm!7282 (= call!7283 call!7284)))

(declare-fun b!79100 () Bool)

(assert (=> b!79100 (= e!51675 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35973)) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79101 () Bool)

(assert (=> b!79101 (= e!51677 (contains!748 lt!36652 (tuple2!2191 (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79102 () Bool)

(assert (=> b!79102 (= e!51673 call!7283)))

(assert (= (and d!18905 c!12224) b!79095))

(assert (= (and d!18905 (not c!12224)) b!79099))

(assert (= (and b!79099 c!12226) b!79098))

(assert (= (and b!79099 (not c!12226)) b!79093))

(assert (= (and b!79093 c!12223) b!79102))

(assert (= (and b!79093 (not c!12223)) b!79097))

(assert (= (or b!79102 b!79097) bm!7282))

(assert (= (or b!79098 bm!7282) bm!7281))

(assert (= (or b!79095 bm!7281) bm!7280))

(assert (= (and bm!7280 c!12225) b!79100))

(assert (= (and bm!7280 (not c!12225)) b!79094))

(assert (= (and d!18905 res!41345) b!79096))

(assert (= (and b!79096 res!41346) b!79101))

(declare-fun m!79735 () Bool)

(assert (=> b!79096 m!79735))

(declare-fun m!79737 () Bool)

(assert (=> b!79101 m!79737))

(declare-fun m!79739 () Bool)

(assert (=> d!18905 m!79739))

(declare-fun m!79741 () Bool)

(assert (=> d!18905 m!79741))

(declare-fun m!79743 () Bool)

(assert (=> bm!7280 m!79743))

(declare-fun m!79745 () Bool)

(assert (=> b!79100 m!79745))

(assert (=> d!18551 d!18905))

(declare-fun d!18907 () Bool)

(declare-fun res!41348 () Bool)

(declare-fun e!51679 () Bool)

(assert (=> d!18907 (=> res!41348 e!51679)))

(assert (=> d!18907 (= res!41348 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> d!18907 (= (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12119 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531))) e!51679)))

(declare-fun b!79103 () Bool)

(declare-fun e!51678 () Bool)

(assert (=> b!79103 (= e!51678 (contains!747 (ite c!12119 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun call!7286 () Bool)

(declare-fun bm!7283 () Bool)

(declare-fun c!12227 () Bool)

(assert (=> bm!7283 (= call!7286 (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12227 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!12119 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531))) (ite c!12119 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)))))))

(declare-fun b!79104 () Bool)

(declare-fun e!51681 () Bool)

(declare-fun e!51680 () Bool)

(assert (=> b!79104 (= e!51681 e!51680)))

(assert (=> b!79104 (= c!12227 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!79105 () Bool)

(assert (=> b!79105 (= e!51680 call!7286)))

(declare-fun b!79106 () Bool)

(assert (=> b!79106 (= e!51679 e!51681)))

(declare-fun res!41347 () Bool)

(assert (=> b!79106 (=> (not res!41347) (not e!51681))))

(assert (=> b!79106 (= res!41347 (not e!51678))))

(declare-fun res!41349 () Bool)

(assert (=> b!79106 (=> (not res!41349) (not e!51678))))

(assert (=> b!79106 (= res!41349 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!79107 () Bool)

(assert (=> b!79107 (= e!51680 call!7286)))

(assert (= (and d!18907 (not res!41348)) b!79106))

(assert (= (and b!79106 res!41349) b!79103))

(assert (= (and b!79106 res!41347) b!79104))

(assert (= (and b!79104 c!12227) b!79105))

(assert (= (and b!79104 (not c!12227)) b!79107))

(assert (= (or b!79105 b!79107) bm!7283))

(declare-fun m!79747 () Bool)

(assert (=> b!79103 m!79747))

(assert (=> b!79103 m!79747))

(declare-fun m!79749 () Bool)

(assert (=> b!79103 m!79749))

(assert (=> bm!7283 m!79747))

(declare-fun m!79751 () Bool)

(assert (=> bm!7283 m!79751))

(assert (=> b!79104 m!79747))

(assert (=> b!79104 m!79747))

(declare-fun m!79753 () Bool)

(assert (=> b!79104 m!79753))

(assert (=> b!79106 m!79747))

(assert (=> b!79106 m!79747))

(assert (=> b!79106 m!79753))

(assert (=> bm!7233 d!18907))

(declare-fun b!79109 () Bool)

(declare-fun e!51682 () Option!142)

(declare-fun e!51683 () Option!142)

(assert (=> b!79109 (= e!51682 e!51683)))

(declare-fun c!12229 () Bool)

(assert (=> b!79109 (= c!12229 (and ((_ is Cons!1529) (toList!748 lt!36233)) (not (= (_1!1105 (h!2117 (toList!748 lt!36233))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79108 () Bool)

(assert (=> b!79108 (= e!51682 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36233)))))))

(declare-fun b!79110 () Bool)

(assert (=> b!79110 (= e!51683 (getValueByKey!136 (t!5183 (toList!748 lt!36233)) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79111 () Bool)

(assert (=> b!79111 (= e!51683 None!140)))

(declare-fun d!18909 () Bool)

(declare-fun c!12228 () Bool)

(assert (=> d!18909 (= c!12228 (and ((_ is Cons!1529) (toList!748 lt!36233)) (= (_1!1105 (h!2117 (toList!748 lt!36233))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18909 (= (getValueByKey!136 (toList!748 lt!36233) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!51682)))

(assert (= (and d!18909 c!12228) b!79108))

(assert (= (and d!18909 (not c!12228)) b!79109))

(assert (= (and b!79109 c!12229) b!79110))

(assert (= (and b!79109 (not c!12229)) b!79111))

(declare-fun m!79755 () Bool)

(assert (=> b!79110 m!79755))

(assert (=> b!78521 d!18909))

(declare-fun d!18911 () Bool)

(declare-fun e!51685 () Bool)

(assert (=> d!18911 e!51685))

(declare-fun res!41350 () Bool)

(assert (=> d!18911 (=> res!41350 e!51685)))

(declare-fun lt!36653 () Bool)

(assert (=> d!18911 (= res!41350 (not lt!36653))))

(declare-fun lt!36654 () Bool)

(assert (=> d!18911 (= lt!36653 lt!36654)))

(declare-fun lt!36655 () Unit!2263)

(declare-fun e!51684 () Unit!2263)

(assert (=> d!18911 (= lt!36655 e!51684)))

(declare-fun c!12230 () Bool)

(assert (=> d!18911 (= c!12230 lt!36654)))

(assert (=> d!18911 (= lt!36654 (containsKey!140 (toList!748 lt!36112) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!18911 (= (contains!745 lt!36112 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) lt!36653)))

(declare-fun b!79112 () Bool)

(declare-fun lt!36656 () Unit!2263)

(assert (=> b!79112 (= e!51684 lt!36656)))

(assert (=> b!79112 (= lt!36656 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36112) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79112 (isDefined!90 (getValueByKey!136 (toList!748 lt!36112) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79113 () Bool)

(declare-fun Unit!2306 () Unit!2263)

(assert (=> b!79113 (= e!51684 Unit!2306)))

(declare-fun b!79114 () Bool)

(assert (=> b!79114 (= e!51685 (isDefined!90 (getValueByKey!136 (toList!748 lt!36112) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!18911 c!12230) b!79112))

(assert (= (and d!18911 (not c!12230)) b!79113))

(assert (= (and d!18911 (not res!41350)) b!79114))

(assert (=> d!18911 m!78153))

(declare-fun m!79757 () Bool)

(assert (=> d!18911 m!79757))

(assert (=> b!79112 m!78153))

(declare-fun m!79759 () Bool)

(assert (=> b!79112 m!79759))

(assert (=> b!79112 m!78153))

(assert (=> b!79112 m!79483))

(assert (=> b!79112 m!79483))

(declare-fun m!79761 () Bool)

(assert (=> b!79112 m!79761))

(assert (=> b!79114 m!78153))

(assert (=> b!79114 m!79483))

(assert (=> b!79114 m!79483))

(assert (=> b!79114 m!79761))

(assert (=> b!78322 d!18911))

(declare-fun d!18913 () Bool)

(assert (=> d!18913 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967))))

(declare-fun lt!36657 () Unit!2263)

(assert (=> d!18913 (= lt!36657 (choose!471 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967))))

(declare-fun e!51686 () Bool)

(assert (=> d!18913 e!51686))

(declare-fun res!41351 () Bool)

(assert (=> d!18913 (=> (not res!41351) (not e!51686))))

(assert (=> d!18913 (= res!41351 (isStrictlySorted!290 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18913 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967) lt!36657)))

(declare-fun b!79115 () Bool)

(assert (=> b!79115 (= e!51686 (containsKey!140 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967))))

(assert (= (and d!18913 res!41351) b!79115))

(assert (=> d!18913 m!78487))

(assert (=> d!18913 m!78487))

(assert (=> d!18913 m!78489))

(declare-fun m!79763 () Bool)

(assert (=> d!18913 m!79763))

(declare-fun m!79765 () Bool)

(assert (=> d!18913 m!79765))

(assert (=> b!79115 m!78483))

(assert (=> b!78440 d!18913))

(declare-fun d!18915 () Bool)

(assert (=> d!18915 (= (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967)) (not (isEmpty!332 (getValueByKey!136 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967))))))

(declare-fun bs!3340 () Bool)

(assert (= bs!3340 d!18915))

(assert (=> bs!3340 m!78487))

(declare-fun m!79767 () Bool)

(assert (=> bs!3340 m!79767))

(assert (=> b!78440 d!18915))

(declare-fun b!79117 () Bool)

(declare-fun e!51687 () Option!142)

(declare-fun e!51688 () Option!142)

(assert (=> b!79117 (= e!51687 e!51688)))

(declare-fun c!12232 () Bool)

(assert (=> b!79117 (= c!12232 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (not (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) lt!35967))))))

(declare-fun b!79116 () Bool)

(assert (=> b!79116 (= e!51687 (Some!141 (_2!1105 (h!2117 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))))

(declare-fun b!79118 () Bool)

(assert (=> b!79118 (= e!51688 (getValueByKey!136 (t!5183 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) lt!35967))))

(declare-fun b!79119 () Bool)

(assert (=> b!79119 (= e!51688 None!140)))

(declare-fun c!12231 () Bool)

(declare-fun d!18917 () Bool)

(assert (=> d!18917 (= c!12231 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) lt!35967)))))

(assert (=> d!18917 (= (getValueByKey!136 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967) e!51687)))

(assert (= (and d!18917 c!12231) b!79116))

(assert (= (and d!18917 (not c!12231)) b!79117))

(assert (= (and b!79117 c!12232) b!79118))

(assert (= (and b!79117 (not c!12232)) b!79119))

(declare-fun m!79769 () Bool)

(assert (=> b!79118 m!79769))

(assert (=> b!78440 d!18917))

(declare-fun b!79120 () Bool)

(declare-fun e!51692 () ListLongMap!1465)

(declare-fun call!7293 () ListLongMap!1465)

(assert (=> b!79120 (= e!51692 (+!109 call!7293 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (_2!1104 lt!36056)))))))

(declare-fun b!79121 () Bool)

(declare-fun res!41355 () Bool)

(declare-fun e!51701 () Bool)

(assert (=> b!79121 (=> (not res!41355) (not e!51701))))

(declare-fun e!51699 () Bool)

(assert (=> b!79121 (= res!41355 e!51699)))

(declare-fun c!12238 () Bool)

(assert (=> b!79121 (= c!12238 (not (= (bvand (extraKeys!2123 (_2!1104 lt!36056)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79122 () Bool)

(declare-fun e!51694 () ListLongMap!1465)

(declare-fun call!7292 () ListLongMap!1465)

(assert (=> b!79122 (= e!51694 call!7292)))

(declare-fun bm!7284 () Bool)

(declare-fun call!7291 () ListLongMap!1465)

(declare-fun call!7289 () ListLongMap!1465)

(assert (=> bm!7284 (= call!7291 call!7289)))

(declare-fun b!79123 () Bool)

(declare-fun e!51698 () Bool)

(declare-fun lt!36670 () ListLongMap!1465)

(assert (=> b!79123 (= e!51698 (= (apply!79 lt!36670 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 (_values!2255 (_2!1104 lt!36056))) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 (_2!1104 lt!36056)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79123 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_values!2255 (_2!1104 lt!36056)))))))

(assert (=> b!79123 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))))))

(declare-fun b!79124 () Bool)

(declare-fun e!51695 () Bool)

(assert (=> b!79124 (= e!51699 e!51695)))

(declare-fun res!41356 () Bool)

(declare-fun call!7288 () Bool)

(assert (=> b!79124 (= res!41356 call!7288)))

(assert (=> b!79124 (=> (not res!41356) (not e!51695))))

(declare-fun bm!7285 () Bool)

(declare-fun call!7290 () Bool)

(assert (=> bm!7285 (= call!7290 (contains!745 lt!36670 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79126 () Bool)

(declare-fun e!51693 () Bool)

(assert (=> b!79126 (= e!51693 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000)))))

(declare-fun b!79127 () Bool)

(declare-fun e!51700 () Unit!2263)

(declare-fun Unit!2307 () Unit!2263)

(assert (=> b!79127 (= e!51700 Unit!2307)))

(declare-fun bm!7286 () Bool)

(assert (=> bm!7286 (= call!7289 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (_2!1104 lt!36056)) (_values!2255 (_2!1104 lt!36056)) (mask!6268 (_2!1104 lt!36056)) (extraKeys!2123 (_2!1104 lt!36056)) (zeroValue!2170 (_2!1104 lt!36056)) (minValue!2170 (_2!1104 lt!36056)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1104 lt!36056))))))

(declare-fun b!79128 () Bool)

(declare-fun e!51690 () ListLongMap!1465)

(declare-fun call!7287 () ListLongMap!1465)

(assert (=> b!79128 (= e!51690 call!7287)))

(declare-fun b!79129 () Bool)

(declare-fun e!51689 () Bool)

(assert (=> b!79129 (= e!51701 e!51689)))

(declare-fun c!12234 () Bool)

(assert (=> b!79129 (= c!12234 (not (= (bvand (extraKeys!2123 (_2!1104 lt!36056)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79130 () Bool)

(declare-fun lt!36672 () Unit!2263)

(assert (=> b!79130 (= e!51700 lt!36672)))

(declare-fun lt!36671 () ListLongMap!1465)

(assert (=> b!79130 (= lt!36671 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (_2!1104 lt!36056)) (_values!2255 (_2!1104 lt!36056)) (mask!6268 (_2!1104 lt!36056)) (extraKeys!2123 (_2!1104 lt!36056)) (zeroValue!2170 (_2!1104 lt!36056)) (minValue!2170 (_2!1104 lt!36056)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1104 lt!36056))))))

(declare-fun lt!36677 () (_ BitVec 64))

(assert (=> b!79130 (= lt!36677 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36668 () (_ BitVec 64))

(assert (=> b!79130 (= lt!36668 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000))))

(declare-fun lt!36662 () Unit!2263)

(assert (=> b!79130 (= lt!36662 (addStillContains!55 lt!36671 lt!36677 (zeroValue!2170 (_2!1104 lt!36056)) lt!36668))))

(assert (=> b!79130 (contains!745 (+!109 lt!36671 (tuple2!2191 lt!36677 (zeroValue!2170 (_2!1104 lt!36056)))) lt!36668)))

(declare-fun lt!36667 () Unit!2263)

(assert (=> b!79130 (= lt!36667 lt!36662)))

(declare-fun lt!36678 () ListLongMap!1465)

(assert (=> b!79130 (= lt!36678 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (_2!1104 lt!36056)) (_values!2255 (_2!1104 lt!36056)) (mask!6268 (_2!1104 lt!36056)) (extraKeys!2123 (_2!1104 lt!36056)) (zeroValue!2170 (_2!1104 lt!36056)) (minValue!2170 (_2!1104 lt!36056)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1104 lt!36056))))))

(declare-fun lt!36679 () (_ BitVec 64))

(assert (=> b!79130 (= lt!36679 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36675 () (_ BitVec 64))

(assert (=> b!79130 (= lt!36675 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000))))

(declare-fun lt!36666 () Unit!2263)

(assert (=> b!79130 (= lt!36666 (addApplyDifferent!55 lt!36678 lt!36679 (minValue!2170 (_2!1104 lt!36056)) lt!36675))))

(assert (=> b!79130 (= (apply!79 (+!109 lt!36678 (tuple2!2191 lt!36679 (minValue!2170 (_2!1104 lt!36056)))) lt!36675) (apply!79 lt!36678 lt!36675))))

(declare-fun lt!36658 () Unit!2263)

(assert (=> b!79130 (= lt!36658 lt!36666)))

(declare-fun lt!36674 () ListLongMap!1465)

(assert (=> b!79130 (= lt!36674 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (_2!1104 lt!36056)) (_values!2255 (_2!1104 lt!36056)) (mask!6268 (_2!1104 lt!36056)) (extraKeys!2123 (_2!1104 lt!36056)) (zeroValue!2170 (_2!1104 lt!36056)) (minValue!2170 (_2!1104 lt!36056)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1104 lt!36056))))))

(declare-fun lt!36660 () (_ BitVec 64))

(assert (=> b!79130 (= lt!36660 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36664 () (_ BitVec 64))

(assert (=> b!79130 (= lt!36664 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000))))

(declare-fun lt!36676 () Unit!2263)

(assert (=> b!79130 (= lt!36676 (addApplyDifferent!55 lt!36674 lt!36660 (zeroValue!2170 (_2!1104 lt!36056)) lt!36664))))

(assert (=> b!79130 (= (apply!79 (+!109 lt!36674 (tuple2!2191 lt!36660 (zeroValue!2170 (_2!1104 lt!36056)))) lt!36664) (apply!79 lt!36674 lt!36664))))

(declare-fun lt!36663 () Unit!2263)

(assert (=> b!79130 (= lt!36663 lt!36676)))

(declare-fun lt!36659 () ListLongMap!1465)

(assert (=> b!79130 (= lt!36659 (getCurrentListMapNoExtraKeys!73 (_keys!3932 (_2!1104 lt!36056)) (_values!2255 (_2!1104 lt!36056)) (mask!6268 (_2!1104 lt!36056)) (extraKeys!2123 (_2!1104 lt!36056)) (zeroValue!2170 (_2!1104 lt!36056)) (minValue!2170 (_2!1104 lt!36056)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1104 lt!36056))))))

(declare-fun lt!36661 () (_ BitVec 64))

(assert (=> b!79130 (= lt!36661 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36673 () (_ BitVec 64))

(assert (=> b!79130 (= lt!36673 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000))))

(assert (=> b!79130 (= lt!36672 (addApplyDifferent!55 lt!36659 lt!36661 (minValue!2170 (_2!1104 lt!36056)) lt!36673))))

(assert (=> b!79130 (= (apply!79 (+!109 lt!36659 (tuple2!2191 lt!36661 (minValue!2170 (_2!1104 lt!36056)))) lt!36673) (apply!79 lt!36659 lt!36673))))

(declare-fun b!79131 () Bool)

(declare-fun e!51691 () Bool)

(assert (=> b!79131 (= e!51691 e!51698)))

(declare-fun res!41354 () Bool)

(assert (=> b!79131 (=> (not res!41354) (not e!51698))))

(assert (=> b!79131 (= res!41354 (contains!745 lt!36670 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000)))))

(assert (=> b!79131 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))))))

(declare-fun b!79132 () Bool)

(assert (=> b!79132 (= e!51692 e!51694)))

(declare-fun c!12235 () Bool)

(assert (=> b!79132 (= c!12235 (and (not (= (bvand (extraKeys!2123 (_2!1104 lt!36056)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 (_2!1104 lt!36056)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7287 () Bool)

(assert (=> bm!7287 (= call!7292 call!7293)))

(declare-fun b!79133 () Bool)

(declare-fun res!41352 () Bool)

(assert (=> b!79133 (=> (not res!41352) (not e!51701))))

(assert (=> b!79133 (= res!41352 e!51691)))

(declare-fun res!41353 () Bool)

(assert (=> b!79133 (=> res!41353 e!51691)))

(declare-fun e!51696 () Bool)

(assert (=> b!79133 (= res!41353 (not e!51696))))

(declare-fun res!41357 () Bool)

(assert (=> b!79133 (=> (not res!41357) (not e!51696))))

(assert (=> b!79133 (= res!41357 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))))))

(declare-fun b!79134 () Bool)

(declare-fun c!12236 () Bool)

(assert (=> b!79134 (= c!12236 (and (not (= (bvand (extraKeys!2123 (_2!1104 lt!36056)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 (_2!1104 lt!36056)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79134 (= e!51694 e!51690)))

(declare-fun b!79135 () Bool)

(assert (=> b!79135 (= e!51696 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000)))))

(declare-fun b!79136 () Bool)

(assert (=> b!79136 (= e!51690 call!7292)))

(declare-fun bm!7288 () Bool)

(declare-fun c!12233 () Bool)

(assert (=> bm!7288 (= call!7293 (+!109 (ite c!12233 call!7289 (ite c!12235 call!7291 call!7287)) (ite (or c!12233 c!12235) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (_2!1104 lt!36056))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (_2!1104 lt!36056))))))))

(declare-fun bm!7289 () Bool)

(assert (=> bm!7289 (= call!7288 (contains!745 lt!36670 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79137 () Bool)

(assert (=> b!79137 (= e!51699 (not call!7288))))

(declare-fun b!79125 () Bool)

(declare-fun e!51697 () Bool)

(assert (=> b!79125 (= e!51689 e!51697)))

(declare-fun res!41359 () Bool)

(assert (=> b!79125 (= res!41359 call!7290)))

(assert (=> b!79125 (=> (not res!41359) (not e!51697))))

(declare-fun d!18919 () Bool)

(assert (=> d!18919 e!51701))

(declare-fun res!41360 () Bool)

(assert (=> d!18919 (=> (not res!41360) (not e!51701))))

(assert (=> d!18919 (= res!41360 (or (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))))))))

(declare-fun lt!36669 () ListLongMap!1465)

(assert (=> d!18919 (= lt!36670 lt!36669)))

(declare-fun lt!36665 () Unit!2263)

(assert (=> d!18919 (= lt!36665 e!51700)))

(declare-fun c!12237 () Bool)

(assert (=> d!18919 (= c!12237 e!51693)))

(declare-fun res!41358 () Bool)

(assert (=> d!18919 (=> (not res!41358) (not e!51693))))

(assert (=> d!18919 (= res!41358 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))))))

(assert (=> d!18919 (= lt!36669 e!51692)))

(assert (=> d!18919 (= c!12233 (and (not (= (bvand (extraKeys!2123 (_2!1104 lt!36056)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 (_2!1104 lt!36056)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18919 (validMask!0 (mask!6268 (_2!1104 lt!36056)))))

(assert (=> d!18919 (= (getCurrentListMap!435 (_keys!3932 (_2!1104 lt!36056)) (_values!2255 (_2!1104 lt!36056)) (mask!6268 (_2!1104 lt!36056)) (extraKeys!2123 (_2!1104 lt!36056)) (zeroValue!2170 (_2!1104 lt!36056)) (minValue!2170 (_2!1104 lt!36056)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1104 lt!36056))) lt!36670)))

(declare-fun bm!7290 () Bool)

(assert (=> bm!7290 (= call!7287 call!7291)))

(declare-fun b!79138 () Bool)

(assert (=> b!79138 (= e!51697 (= (apply!79 lt!36670 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 (_2!1104 lt!36056))))))

(declare-fun b!79139 () Bool)

(assert (=> b!79139 (= e!51689 (not call!7290))))

(declare-fun b!79140 () Bool)

(assert (=> b!79140 (= e!51695 (= (apply!79 lt!36670 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 (_2!1104 lt!36056))))))

(assert (= (and d!18919 c!12233) b!79120))

(assert (= (and d!18919 (not c!12233)) b!79132))

(assert (= (and b!79132 c!12235) b!79122))

(assert (= (and b!79132 (not c!12235)) b!79134))

(assert (= (and b!79134 c!12236) b!79136))

(assert (= (and b!79134 (not c!12236)) b!79128))

(assert (= (or b!79136 b!79128) bm!7290))

(assert (= (or b!79122 bm!7290) bm!7284))

(assert (= (or b!79122 b!79136) bm!7287))

(assert (= (or b!79120 bm!7284) bm!7286))

(assert (= (or b!79120 bm!7287) bm!7288))

(assert (= (and d!18919 res!41358) b!79126))

(assert (= (and d!18919 c!12237) b!79130))

(assert (= (and d!18919 (not c!12237)) b!79127))

(assert (= (and d!18919 res!41360) b!79133))

(assert (= (and b!79133 res!41357) b!79135))

(assert (= (and b!79133 (not res!41353)) b!79131))

(assert (= (and b!79131 res!41354) b!79123))

(assert (= (and b!79133 res!41352) b!79121))

(assert (= (and b!79121 c!12238) b!79124))

(assert (= (and b!79121 (not c!12238)) b!79137))

(assert (= (and b!79124 res!41356) b!79140))

(assert (= (or b!79124 b!79137) bm!7289))

(assert (= (and b!79121 res!41355) b!79129))

(assert (= (and b!79129 c!12234) b!79125))

(assert (= (and b!79129 (not c!12234)) b!79139))

(assert (= (and b!79125 res!41359) b!79138))

(assert (= (or b!79125 b!79139) bm!7285))

(declare-fun b_lambda!3551 () Bool)

(assert (=> (not b_lambda!3551) (not b!79123)))

(declare-fun tb!1633 () Bool)

(declare-fun t!5195 () Bool)

(assert (=> (and b!77850 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 (_2!1104 lt!36056))) t!5195) tb!1633))

(declare-fun result!2833 () Bool)

(assert (=> tb!1633 (= result!2833 tp_is_empty!2511)))

(assert (=> b!79123 t!5195))

(declare-fun b_and!4869 () Bool)

(assert (= b_and!4865 (and (=> t!5195 result!2833) b_and!4869)))

(declare-fun t!5197 () Bool)

(declare-fun tb!1635 () Bool)

(assert (=> (and b!77841 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (_2!1104 lt!36056))) t!5197) tb!1635))

(declare-fun result!2835 () Bool)

(assert (= result!2835 result!2833))

(assert (=> b!79123 t!5197))

(declare-fun b_and!4871 () Bool)

(assert (= b_and!4867 (and (=> t!5197 result!2835) b_and!4871)))

(declare-fun m!79771 () Bool)

(assert (=> bm!7289 m!79771))

(declare-fun m!79773 () Bool)

(assert (=> bm!7286 m!79773))

(declare-fun m!79775 () Bool)

(assert (=> bm!7285 m!79775))

(declare-fun m!79777 () Bool)

(assert (=> b!79130 m!79777))

(declare-fun m!79779 () Bool)

(assert (=> b!79130 m!79779))

(declare-fun m!79781 () Bool)

(assert (=> b!79130 m!79781))

(declare-fun m!79783 () Bool)

(assert (=> b!79130 m!79783))

(declare-fun m!79785 () Bool)

(assert (=> b!79130 m!79785))

(declare-fun m!79787 () Bool)

(assert (=> b!79130 m!79787))

(declare-fun m!79789 () Bool)

(assert (=> b!79130 m!79789))

(assert (=> b!79130 m!79781))

(declare-fun m!79791 () Bool)

(assert (=> b!79130 m!79791))

(declare-fun m!79793 () Bool)

(assert (=> b!79130 m!79793))

(declare-fun m!79795 () Bool)

(assert (=> b!79130 m!79795))

(assert (=> b!79130 m!79793))

(declare-fun m!79797 () Bool)

(assert (=> b!79130 m!79797))

(assert (=> b!79130 m!79779))

(declare-fun m!79799 () Bool)

(assert (=> b!79130 m!79799))

(declare-fun m!79801 () Bool)

(assert (=> b!79130 m!79801))

(assert (=> b!79130 m!79801))

(declare-fun m!79803 () Bool)

(assert (=> b!79130 m!79803))

(declare-fun m!79805 () Bool)

(assert (=> b!79130 m!79805))

(assert (=> b!79130 m!79773))

(declare-fun m!79807 () Bool)

(assert (=> b!79130 m!79807))

(declare-fun m!79809 () Bool)

(assert (=> d!18919 m!79809))

(declare-fun m!79811 () Bool)

(assert (=> b!79123 m!79811))

(assert (=> b!79123 m!79795))

(declare-fun m!79813 () Bool)

(assert (=> b!79123 m!79813))

(assert (=> b!79123 m!79811))

(declare-fun m!79815 () Bool)

(assert (=> b!79123 m!79815))

(declare-fun m!79817 () Bool)

(assert (=> b!79123 m!79817))

(assert (=> b!79123 m!79815))

(assert (=> b!79123 m!79795))

(declare-fun m!79819 () Bool)

(assert (=> bm!7288 m!79819))

(declare-fun m!79821 () Bool)

(assert (=> b!79120 m!79821))

(assert (=> b!79126 m!79795))

(assert (=> b!79126 m!79795))

(declare-fun m!79823 () Bool)

(assert (=> b!79126 m!79823))

(assert (=> b!79131 m!79795))

(assert (=> b!79131 m!79795))

(declare-fun m!79825 () Bool)

(assert (=> b!79131 m!79825))

(declare-fun m!79827 () Bool)

(assert (=> b!79140 m!79827))

(declare-fun m!79829 () Bool)

(assert (=> b!79138 m!79829))

(assert (=> b!79135 m!79795))

(assert (=> b!79135 m!79795))

(assert (=> b!79135 m!79823))

(assert (=> d!18625 d!18919))

(declare-fun d!18921 () Bool)

(declare-fun e!51703 () Bool)

(assert (=> d!18921 e!51703))

(declare-fun res!41361 () Bool)

(assert (=> d!18921 (=> res!41361 e!51703)))

(declare-fun lt!36680 () Bool)

(assert (=> d!18921 (= res!41361 (not lt!36680))))

(declare-fun lt!36681 () Bool)

(assert (=> d!18921 (= lt!36680 lt!36681)))

(declare-fun lt!36682 () Unit!2263)

(declare-fun e!51702 () Unit!2263)

(assert (=> d!18921 (= lt!36682 e!51702)))

(declare-fun c!12239 () Bool)

(assert (=> d!18921 (= c!12239 lt!36681)))

(assert (=> d!18921 (= lt!36681 (containsKey!140 (toList!748 lt!36211) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!18921 (= (contains!745 lt!36211 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36680)))

(declare-fun b!79141 () Bool)

(declare-fun lt!36683 () Unit!2263)

(assert (=> b!79141 (= e!51702 lt!36683)))

(assert (=> b!79141 (= lt!36683 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36211) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> b!79141 (isDefined!90 (getValueByKey!136 (toList!748 lt!36211) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79142 () Bool)

(declare-fun Unit!2308 () Unit!2263)

(assert (=> b!79142 (= e!51702 Unit!2308)))

(declare-fun b!79143 () Bool)

(assert (=> b!79143 (= e!51703 (isDefined!90 (getValueByKey!136 (toList!748 lt!36211) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (= (and d!18921 c!12239) b!79141))

(assert (= (and d!18921 (not c!12239)) b!79142))

(assert (= (and d!18921 (not res!41361)) b!79143))

(declare-fun m!79831 () Bool)

(assert (=> d!18921 m!79831))

(declare-fun m!79833 () Bool)

(assert (=> b!79141 m!79833))

(assert (=> b!79141 m!78567))

(assert (=> b!79141 m!78567))

(declare-fun m!79835 () Bool)

(assert (=> b!79141 m!79835))

(assert (=> b!79143 m!78567))

(assert (=> b!79143 m!78567))

(assert (=> b!79143 m!79835))

(assert (=> d!18585 d!18921))

(declare-fun b!79145 () Bool)

(declare-fun e!51704 () Option!142)

(declare-fun e!51705 () Option!142)

(assert (=> b!79145 (= e!51704 e!51705)))

(declare-fun c!12241 () Bool)

(assert (=> b!79145 (= c!12241 (and ((_ is Cons!1529) lt!36208) (not (= (_1!1105 (h!2117 lt!36208)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!79144 () Bool)

(assert (=> b!79144 (= e!51704 (Some!141 (_2!1105 (h!2117 lt!36208))))))

(declare-fun b!79146 () Bool)

(assert (=> b!79146 (= e!51705 (getValueByKey!136 (t!5183 lt!36208) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79147 () Bool)

(assert (=> b!79147 (= e!51705 None!140)))

(declare-fun d!18923 () Bool)

(declare-fun c!12240 () Bool)

(assert (=> d!18923 (= c!12240 (and ((_ is Cons!1529) lt!36208) (= (_1!1105 (h!2117 lt!36208)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!18923 (= (getValueByKey!136 lt!36208 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) e!51704)))

(assert (= (and d!18923 c!12240) b!79144))

(assert (= (and d!18923 (not c!12240)) b!79145))

(assert (= (and b!79145 c!12241) b!79146))

(assert (= (and b!79145 (not c!12241)) b!79147))

(declare-fun m!79837 () Bool)

(assert (=> b!79146 m!79837))

(assert (=> d!18585 d!18923))

(declare-fun d!18925 () Bool)

(assert (=> d!18925 (= (getValueByKey!136 lt!36208 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!36684 () Unit!2263)

(assert (=> d!18925 (= lt!36684 (choose!468 lt!36208 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun e!51706 () Bool)

(assert (=> d!18925 e!51706))

(declare-fun res!41362 () Bool)

(assert (=> d!18925 (=> (not res!41362) (not e!51706))))

(assert (=> d!18925 (= res!41362 (isStrictlySorted!290 lt!36208))))

(assert (=> d!18925 (= (lemmaContainsTupThenGetReturnValue!55 lt!36208 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36684)))

(declare-fun b!79148 () Bool)

(declare-fun res!41363 () Bool)

(assert (=> b!79148 (=> (not res!41363) (not e!51706))))

(assert (=> b!79148 (= res!41363 (containsKey!140 lt!36208 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79149 () Bool)

(assert (=> b!79149 (= e!51706 (contains!748 lt!36208 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (= (and d!18925 res!41362) b!79148))

(assert (= (and b!79148 res!41363) b!79149))

(assert (=> d!18925 m!78561))

(declare-fun m!79839 () Bool)

(assert (=> d!18925 m!79839))

(declare-fun m!79841 () Bool)

(assert (=> d!18925 m!79841))

(declare-fun m!79843 () Bool)

(assert (=> b!79148 m!79843))

(declare-fun m!79845 () Bool)

(assert (=> b!79149 m!79845))

(assert (=> d!18585 d!18925))

(declare-fun b!79150 () Bool)

(declare-fun c!12242 () Bool)

(assert (=> b!79150 (= c!12242 (and ((_ is Cons!1529) (toList!748 call!7148)) (bvsgt (_1!1105 (h!2117 (toList!748 call!7148))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun e!51710 () List!1533)

(declare-fun e!51707 () List!1533)

(assert (=> b!79150 (= e!51710 e!51707)))

(declare-fun bm!7291 () Bool)

(declare-fun e!51709 () List!1533)

(declare-fun call!7296 () List!1533)

(declare-fun c!12243 () Bool)

(assert (=> bm!7291 (= call!7296 ($colon$colon!68 e!51709 (ite c!12243 (h!2117 (toList!748 call!7148)) (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun c!12244 () Bool)

(assert (=> bm!7291 (= c!12244 c!12243)))

(declare-fun d!18927 () Bool)

(declare-fun e!51711 () Bool)

(assert (=> d!18927 e!51711))

(declare-fun res!41364 () Bool)

(assert (=> d!18927 (=> (not res!41364) (not e!51711))))

(declare-fun lt!36685 () List!1533)

(assert (=> d!18927 (= res!41364 (isStrictlySorted!290 lt!36685))))

(declare-fun e!51708 () List!1533)

(assert (=> d!18927 (= lt!36685 e!51708)))

(assert (=> d!18927 (= c!12243 (and ((_ is Cons!1529) (toList!748 call!7148)) (bvslt (_1!1105 (h!2117 (toList!748 call!7148))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!18927 (isStrictlySorted!290 (toList!748 call!7148))))

(assert (=> d!18927 (= (insertStrictlySorted!57 (toList!748 call!7148) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36685)))

(declare-fun b!79151 () Bool)

(declare-fun c!12245 () Bool)

(assert (=> b!79151 (= e!51709 (ite c!12245 (t!5183 (toList!748 call!7148)) (ite c!12242 (Cons!1529 (h!2117 (toList!748 call!7148)) (t!5183 (toList!748 call!7148))) Nil!1530)))))

(declare-fun bm!7292 () Bool)

(declare-fun call!7295 () List!1533)

(assert (=> bm!7292 (= call!7295 call!7296)))

(declare-fun b!79152 () Bool)

(assert (=> b!79152 (= e!51708 call!7296)))

(declare-fun b!79153 () Bool)

(declare-fun res!41365 () Bool)

(assert (=> b!79153 (=> (not res!41365) (not e!51711))))

(assert (=> b!79153 (= res!41365 (containsKey!140 lt!36685 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79154 () Bool)

(declare-fun call!7294 () List!1533)

(assert (=> b!79154 (= e!51707 call!7294)))

(declare-fun b!79155 () Bool)

(assert (=> b!79155 (= e!51710 call!7295)))

(declare-fun b!79156 () Bool)

(assert (=> b!79156 (= e!51708 e!51710)))

(assert (=> b!79156 (= c!12245 (and ((_ is Cons!1529) (toList!748 call!7148)) (= (_1!1105 (h!2117 (toList!748 call!7148))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun bm!7293 () Bool)

(assert (=> bm!7293 (= call!7294 call!7295)))

(declare-fun b!79157 () Bool)

(assert (=> b!79157 (= e!51709 (insertStrictlySorted!57 (t!5183 (toList!748 call!7148)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79158 () Bool)

(assert (=> b!79158 (= e!51711 (contains!748 lt!36685 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79159 () Bool)

(assert (=> b!79159 (= e!51707 call!7294)))

(assert (= (and d!18927 c!12243) b!79152))

(assert (= (and d!18927 (not c!12243)) b!79156))

(assert (= (and b!79156 c!12245) b!79155))

(assert (= (and b!79156 (not c!12245)) b!79150))

(assert (= (and b!79150 c!12242) b!79159))

(assert (= (and b!79150 (not c!12242)) b!79154))

(assert (= (or b!79159 b!79154) bm!7293))

(assert (= (or b!79155 bm!7293) bm!7292))

(assert (= (or b!79152 bm!7292) bm!7291))

(assert (= (and bm!7291 c!12244) b!79157))

(assert (= (and bm!7291 (not c!12244)) b!79151))

(assert (= (and d!18927 res!41364) b!79153))

(assert (= (and b!79153 res!41365) b!79158))

(declare-fun m!79847 () Bool)

(assert (=> b!79153 m!79847))

(declare-fun m!79849 () Bool)

(assert (=> b!79158 m!79849))

(declare-fun m!79851 () Bool)

(assert (=> d!18927 m!79851))

(declare-fun m!79853 () Bool)

(assert (=> d!18927 m!79853))

(declare-fun m!79855 () Bool)

(assert (=> bm!7291 m!79855))

(declare-fun m!79857 () Bool)

(assert (=> b!79157 m!79857))

(assert (=> d!18585 d!18927))

(assert (=> d!18613 d!18489))

(declare-fun d!18929 () Bool)

(assert (=> d!18929 (= (+!109 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36052 lt!35780 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(assert (=> d!18929 true))

(declare-fun _$7!65 () Unit!2263)

(assert (=> d!18929 (= (choose!472 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) lt!36052 (zeroValue!2170 newMap!16) lt!35780 (minValue!2170 newMap!16) (defaultEntry!2272 newMap!16)) _$7!65)))

(declare-fun bs!3341 () Bool)

(assert (= bs!3341 d!18929))

(assert (=> bs!3341 m!78025))

(assert (=> bs!3341 m!78025))

(assert (=> bs!3341 m!78667))

(assert (=> bs!3341 m!78663))

(assert (=> d!18613 d!18929))

(assert (=> d!18613 d!18847))

(declare-fun d!18931 () Bool)

(declare-fun e!51712 () Bool)

(assert (=> d!18931 e!51712))

(declare-fun res!41366 () Bool)

(assert (=> d!18931 (=> (not res!41366) (not e!51712))))

(declare-fun lt!36689 () ListLongMap!1465)

(assert (=> d!18931 (= res!41366 (contains!745 lt!36689 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780))))))

(declare-fun lt!36686 () List!1533)

(assert (=> d!18931 (= lt!36689 (ListLongMap!1466 lt!36686))))

(declare-fun lt!36688 () Unit!2263)

(declare-fun lt!36687 () Unit!2263)

(assert (=> d!18931 (= lt!36688 lt!36687)))

(assert (=> d!18931 (= (getValueByKey!136 lt!36686 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780))) (Some!141 (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780))))))

(assert (=> d!18931 (= lt!36687 (lemmaContainsTupThenGetReturnValue!55 lt!36686 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780))))))

(assert (=> d!18931 (= lt!36686 (insertStrictlySorted!57 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780))))))

(assert (=> d!18931 (= (+!109 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780)) lt!36689)))

(declare-fun b!79160 () Bool)

(declare-fun res!41367 () Bool)

(assert (=> b!79160 (=> (not res!41367) (not e!51712))))

(assert (=> b!79160 (= res!41367 (= (getValueByKey!136 (toList!748 lt!36689) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780))) (Some!141 (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780)))))))

(declare-fun b!79161 () Bool)

(assert (=> b!79161 (= e!51712 (contains!748 (toList!748 lt!36689) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780)))))

(assert (= (and d!18931 res!41366) b!79160))

(assert (= (and b!79160 res!41367) b!79161))

(declare-fun m!79859 () Bool)

(assert (=> d!18931 m!79859))

(declare-fun m!79861 () Bool)

(assert (=> d!18931 m!79861))

(declare-fun m!79863 () Bool)

(assert (=> d!18931 m!79863))

(declare-fun m!79865 () Bool)

(assert (=> d!18931 m!79865))

(declare-fun m!79867 () Bool)

(assert (=> b!79160 m!79867))

(declare-fun m!79869 () Bool)

(assert (=> b!79161 m!79869))

(assert (=> d!18613 d!18931))

(declare-fun b!79162 () Bool)

(declare-fun e!51716 () ListLongMap!1465)

(declare-fun call!7303 () ListLongMap!1465)

(assert (=> b!79162 (= e!51716 (+!109 call!7303 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(declare-fun b!79163 () Bool)

(declare-fun res!41371 () Bool)

(declare-fun e!51725 () Bool)

(assert (=> b!79163 (=> (not res!41371) (not e!51725))))

(declare-fun e!51723 () Bool)

(assert (=> b!79163 (= res!41371 e!51723)))

(declare-fun c!12251 () Bool)

(assert (=> b!79163 (= c!12251 (not (= (bvand lt!36052 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79164 () Bool)

(declare-fun e!51718 () ListLongMap!1465)

(declare-fun call!7302 () ListLongMap!1465)

(assert (=> b!79164 (= e!51718 call!7302)))

(declare-fun bm!7294 () Bool)

(declare-fun call!7301 () ListLongMap!1465)

(declare-fun call!7299 () ListLongMap!1465)

(assert (=> bm!7294 (= call!7301 call!7299)))

(declare-fun b!79165 () Bool)

(declare-fun e!51722 () Bool)

(declare-fun lt!36702 () ListLongMap!1465)

(assert (=> b!79165 (= e!51722 (= (apply!79 lt!36702 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 (_values!2255 newMap!16)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79165 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (_values!2255 newMap!16))))))

(assert (=> b!79165 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!79166 () Bool)

(declare-fun e!51719 () Bool)

(assert (=> b!79166 (= e!51723 e!51719)))

(declare-fun res!41372 () Bool)

(declare-fun call!7298 () Bool)

(assert (=> b!79166 (= res!41372 call!7298)))

(assert (=> b!79166 (=> (not res!41372) (not e!51719))))

(declare-fun bm!7295 () Bool)

(declare-fun call!7300 () Bool)

(assert (=> bm!7295 (= call!7300 (contains!745 lt!36702 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79168 () Bool)

(declare-fun e!51717 () Bool)

(assert (=> b!79168 (= e!51717 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79169 () Bool)

(declare-fun e!51724 () Unit!2263)

(declare-fun Unit!2309 () Unit!2263)

(assert (=> b!79169 (= e!51724 Unit!2309)))

(declare-fun bm!7296 () Bool)

(assert (=> bm!7296 (= call!7299 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36052 lt!35780 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!79170 () Bool)

(declare-fun e!51714 () ListLongMap!1465)

(declare-fun call!7297 () ListLongMap!1465)

(assert (=> b!79170 (= e!51714 call!7297)))

(declare-fun b!79171 () Bool)

(declare-fun e!51713 () Bool)

(assert (=> b!79171 (= e!51725 e!51713)))

(declare-fun c!12247 () Bool)

(assert (=> b!79171 (= c!12247 (not (= (bvand lt!36052 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79172 () Bool)

(declare-fun lt!36704 () Unit!2263)

(assert (=> b!79172 (= e!51724 lt!36704)))

(declare-fun lt!36703 () ListLongMap!1465)

(assert (=> b!79172 (= lt!36703 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36052 lt!35780 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36709 () (_ BitVec 64))

(assert (=> b!79172 (= lt!36709 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36700 () (_ BitVec 64))

(assert (=> b!79172 (= lt!36700 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36694 () Unit!2263)

(assert (=> b!79172 (= lt!36694 (addStillContains!55 lt!36703 lt!36709 lt!35780 lt!36700))))

(assert (=> b!79172 (contains!745 (+!109 lt!36703 (tuple2!2191 lt!36709 lt!35780)) lt!36700)))

(declare-fun lt!36699 () Unit!2263)

(assert (=> b!79172 (= lt!36699 lt!36694)))

(declare-fun lt!36710 () ListLongMap!1465)

(assert (=> b!79172 (= lt!36710 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36052 lt!35780 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36711 () (_ BitVec 64))

(assert (=> b!79172 (= lt!36711 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36707 () (_ BitVec 64))

(assert (=> b!79172 (= lt!36707 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36698 () Unit!2263)

(assert (=> b!79172 (= lt!36698 (addApplyDifferent!55 lt!36710 lt!36711 (minValue!2170 newMap!16) lt!36707))))

(assert (=> b!79172 (= (apply!79 (+!109 lt!36710 (tuple2!2191 lt!36711 (minValue!2170 newMap!16))) lt!36707) (apply!79 lt!36710 lt!36707))))

(declare-fun lt!36690 () Unit!2263)

(assert (=> b!79172 (= lt!36690 lt!36698)))

(declare-fun lt!36706 () ListLongMap!1465)

(assert (=> b!79172 (= lt!36706 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36052 lt!35780 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36692 () (_ BitVec 64))

(assert (=> b!79172 (= lt!36692 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36696 () (_ BitVec 64))

(assert (=> b!79172 (= lt!36696 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36708 () Unit!2263)

(assert (=> b!79172 (= lt!36708 (addApplyDifferent!55 lt!36706 lt!36692 lt!35780 lt!36696))))

(assert (=> b!79172 (= (apply!79 (+!109 lt!36706 (tuple2!2191 lt!36692 lt!35780)) lt!36696) (apply!79 lt!36706 lt!36696))))

(declare-fun lt!36695 () Unit!2263)

(assert (=> b!79172 (= lt!36695 lt!36708)))

(declare-fun lt!36691 () ListLongMap!1465)

(assert (=> b!79172 (= lt!36691 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36052 lt!35780 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36693 () (_ BitVec 64))

(assert (=> b!79172 (= lt!36693 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36705 () (_ BitVec 64))

(assert (=> b!79172 (= lt!36705 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79172 (= lt!36704 (addApplyDifferent!55 lt!36691 lt!36693 (minValue!2170 newMap!16) lt!36705))))

(assert (=> b!79172 (= (apply!79 (+!109 lt!36691 (tuple2!2191 lt!36693 (minValue!2170 newMap!16))) lt!36705) (apply!79 lt!36691 lt!36705))))

(declare-fun b!79173 () Bool)

(declare-fun e!51715 () Bool)

(assert (=> b!79173 (= e!51715 e!51722)))

(declare-fun res!41370 () Bool)

(assert (=> b!79173 (=> (not res!41370) (not e!51722))))

(assert (=> b!79173 (= res!41370 (contains!745 lt!36702 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79173 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!79174 () Bool)

(assert (=> b!79174 (= e!51716 e!51718)))

(declare-fun c!12248 () Bool)

(assert (=> b!79174 (= c!12248 (and (not (= (bvand lt!36052 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!36052 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7297 () Bool)

(assert (=> bm!7297 (= call!7302 call!7303)))

(declare-fun b!79175 () Bool)

(declare-fun res!41368 () Bool)

(assert (=> b!79175 (=> (not res!41368) (not e!51725))))

(assert (=> b!79175 (= res!41368 e!51715)))

(declare-fun res!41369 () Bool)

(assert (=> b!79175 (=> res!41369 e!51715)))

(declare-fun e!51720 () Bool)

(assert (=> b!79175 (= res!41369 (not e!51720))))

(declare-fun res!41373 () Bool)

(assert (=> b!79175 (=> (not res!41373) (not e!51720))))

(assert (=> b!79175 (= res!41373 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!79176 () Bool)

(declare-fun c!12249 () Bool)

(assert (=> b!79176 (= c!12249 (and (not (= (bvand lt!36052 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!36052 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79176 (= e!51718 e!51714)))

(declare-fun b!79177 () Bool)

(assert (=> b!79177 (= e!51720 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79178 () Bool)

(assert (=> b!79178 (= e!51714 call!7302)))

(declare-fun c!12246 () Bool)

(declare-fun bm!7298 () Bool)

(assert (=> bm!7298 (= call!7303 (+!109 (ite c!12246 call!7299 (ite c!12248 call!7301 call!7297)) (ite (or c!12246 c!12248) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun bm!7299 () Bool)

(assert (=> bm!7299 (= call!7298 (contains!745 lt!36702 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79179 () Bool)

(assert (=> b!79179 (= e!51723 (not call!7298))))

(declare-fun b!79167 () Bool)

(declare-fun e!51721 () Bool)

(assert (=> b!79167 (= e!51713 e!51721)))

(declare-fun res!41375 () Bool)

(assert (=> b!79167 (= res!41375 call!7300)))

(assert (=> b!79167 (=> (not res!41375) (not e!51721))))

(declare-fun d!18933 () Bool)

(assert (=> d!18933 e!51725))

(declare-fun res!41376 () Bool)

(assert (=> d!18933 (=> (not res!41376) (not e!51725))))

(assert (=> d!18933 (= res!41376 (or (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))))

(declare-fun lt!36701 () ListLongMap!1465)

(assert (=> d!18933 (= lt!36702 lt!36701)))

(declare-fun lt!36697 () Unit!2263)

(assert (=> d!18933 (= lt!36697 e!51724)))

(declare-fun c!12250 () Bool)

(assert (=> d!18933 (= c!12250 e!51717)))

(declare-fun res!41374 () Bool)

(assert (=> d!18933 (=> (not res!41374) (not e!51717))))

(assert (=> d!18933 (= res!41374 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!18933 (= lt!36701 e!51716)))

(assert (=> d!18933 (= c!12246 (and (not (= (bvand lt!36052 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!36052 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!18933 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18933 (= (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) lt!36052 lt!35780 (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36702)))

(declare-fun bm!7300 () Bool)

(assert (=> bm!7300 (= call!7297 call!7301)))

(declare-fun b!79180 () Bool)

(assert (=> b!79180 (= e!51721 (= (apply!79 lt!36702 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!79181 () Bool)

(assert (=> b!79181 (= e!51713 (not call!7300))))

(declare-fun b!79182 () Bool)

(assert (=> b!79182 (= e!51719 (= (apply!79 lt!36702 #b0000000000000000000000000000000000000000000000000000000000000000) lt!35780))))

(assert (= (and d!18933 c!12246) b!79162))

(assert (= (and d!18933 (not c!12246)) b!79174))

(assert (= (and b!79174 c!12248) b!79164))

(assert (= (and b!79174 (not c!12248)) b!79176))

(assert (= (and b!79176 c!12249) b!79178))

(assert (= (and b!79176 (not c!12249)) b!79170))

(assert (= (or b!79178 b!79170) bm!7300))

(assert (= (or b!79164 bm!7300) bm!7294))

(assert (= (or b!79164 b!79178) bm!7297))

(assert (= (or b!79162 bm!7294) bm!7296))

(assert (= (or b!79162 bm!7297) bm!7298))

(assert (= (and d!18933 res!41374) b!79168))

(assert (= (and d!18933 c!12250) b!79172))

(assert (= (and d!18933 (not c!12250)) b!79169))

(assert (= (and d!18933 res!41376) b!79175))

(assert (= (and b!79175 res!41373) b!79177))

(assert (= (and b!79175 (not res!41369)) b!79173))

(assert (= (and b!79173 res!41370) b!79165))

(assert (= (and b!79175 res!41368) b!79163))

(assert (= (and b!79163 c!12251) b!79166))

(assert (= (and b!79163 (not c!12251)) b!79179))

(assert (= (and b!79166 res!41372) b!79182))

(assert (= (or b!79166 b!79179) bm!7299))

(assert (= (and b!79163 res!41371) b!79171))

(assert (= (and b!79171 c!12247) b!79167))

(assert (= (and b!79171 (not c!12247)) b!79181))

(assert (= (and b!79167 res!41375) b!79180))

(assert (= (or b!79167 b!79181) bm!7295))

(declare-fun b_lambda!3553 () Bool)

(assert (=> (not b_lambda!3553) (not b!79165)))

(assert (=> b!79165 t!5191))

(declare-fun b_and!4873 () Bool)

(assert (= b_and!4869 (and (=> t!5191 result!2829) b_and!4873)))

(assert (=> b!79165 t!5193))

(declare-fun b_and!4875 () Bool)

(assert (= b_and!4871 (and (=> t!5193 result!2831) b_and!4875)))

(declare-fun m!79871 () Bool)

(assert (=> bm!7299 m!79871))

(declare-fun m!79873 () Bool)

(assert (=> bm!7296 m!79873))

(declare-fun m!79875 () Bool)

(assert (=> bm!7295 m!79875))

(declare-fun m!79877 () Bool)

(assert (=> b!79172 m!79877))

(declare-fun m!79879 () Bool)

(assert (=> b!79172 m!79879))

(declare-fun m!79881 () Bool)

(assert (=> b!79172 m!79881))

(declare-fun m!79883 () Bool)

(assert (=> b!79172 m!79883))

(declare-fun m!79885 () Bool)

(assert (=> b!79172 m!79885))

(declare-fun m!79887 () Bool)

(assert (=> b!79172 m!79887))

(declare-fun m!79889 () Bool)

(assert (=> b!79172 m!79889))

(assert (=> b!79172 m!79881))

(declare-fun m!79891 () Bool)

(assert (=> b!79172 m!79891))

(declare-fun m!79893 () Bool)

(assert (=> b!79172 m!79893))

(assert (=> b!79172 m!78153))

(assert (=> b!79172 m!79893))

(declare-fun m!79895 () Bool)

(assert (=> b!79172 m!79895))

(assert (=> b!79172 m!79879))

(declare-fun m!79897 () Bool)

(assert (=> b!79172 m!79897))

(declare-fun m!79899 () Bool)

(assert (=> b!79172 m!79899))

(assert (=> b!79172 m!79899))

(declare-fun m!79901 () Bool)

(assert (=> b!79172 m!79901))

(declare-fun m!79903 () Bool)

(assert (=> b!79172 m!79903))

(assert (=> b!79172 m!79873))

(declare-fun m!79905 () Bool)

(assert (=> b!79172 m!79905))

(assert (=> d!18933 m!78167))

(assert (=> b!79165 m!78269))

(assert (=> b!79165 m!78153))

(declare-fun m!79907 () Bool)

(assert (=> b!79165 m!79907))

(assert (=> b!79165 m!78269))

(assert (=> b!79165 m!78273))

(assert (=> b!79165 m!78275))

(assert (=> b!79165 m!78273))

(assert (=> b!79165 m!78153))

(declare-fun m!79909 () Bool)

(assert (=> bm!7298 m!79909))

(declare-fun m!79911 () Bool)

(assert (=> b!79162 m!79911))

(assert (=> b!79168 m!78153))

(assert (=> b!79168 m!78153))

(assert (=> b!79168 m!78155))

(assert (=> b!79173 m!78153))

(assert (=> b!79173 m!78153))

(declare-fun m!79913 () Bool)

(assert (=> b!79173 m!79913))

(declare-fun m!79915 () Bool)

(assert (=> b!79182 m!79915))

(declare-fun m!79917 () Bool)

(assert (=> b!79180 m!79917))

(assert (=> b!79177 m!78153))

(assert (=> b!79177 m!78153))

(assert (=> b!79177 m!78155))

(assert (=> d!18613 d!18933))

(declare-fun d!18935 () Bool)

(assert (=> d!18935 (= (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35963)) (v!2598 (getValueByKey!136 (toList!748 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35963)))))

(assert (=> d!18563 d!18935))

(declare-fun b!79184 () Bool)

(declare-fun e!51726 () Option!142)

(declare-fun e!51727 () Option!142)

(assert (=> b!79184 (= e!51726 e!51727)))

(declare-fun c!12253 () Bool)

(assert (=> b!79184 (= c!12253 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (not (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) lt!35963))))))

(declare-fun b!79183 () Bool)

(assert (=> b!79183 (= e!51726 (Some!141 (_2!1105 (h!2117 (toList!748 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))))

(declare-fun b!79185 () Bool)

(assert (=> b!79185 (= e!51727 (getValueByKey!136 (t!5183 (toList!748 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) lt!35963))))

(declare-fun b!79186 () Bool)

(assert (=> b!79186 (= e!51727 None!140)))

(declare-fun c!12252 () Bool)

(declare-fun d!18937 () Bool)

(assert (=> d!18937 (= c!12252 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) lt!35963)))))

(assert (=> d!18937 (= (getValueByKey!136 (toList!748 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35963) e!51726)))

(assert (= (and d!18937 c!12252) b!79183))

(assert (= (and d!18937 (not c!12252)) b!79184))

(assert (= (and b!79184 c!12253) b!79185))

(assert (= (and b!79184 (not c!12253)) b!79186))

(declare-fun m!79919 () Bool)

(assert (=> b!79185 m!79919))

(assert (=> d!18563 d!18937))

(declare-fun d!18939 () Bool)

(declare-fun lt!36712 () Bool)

(assert (=> d!18939 (= lt!36712 (select (content!82 (t!5183 (toList!748 lt!35899))) lt!35784))))

(declare-fun e!51728 () Bool)

(assert (=> d!18939 (= lt!36712 e!51728)))

(declare-fun res!41377 () Bool)

(assert (=> d!18939 (=> (not res!41377) (not e!51728))))

(assert (=> d!18939 (= res!41377 ((_ is Cons!1529) (t!5183 (toList!748 lt!35899))))))

(assert (=> d!18939 (= (contains!748 (t!5183 (toList!748 lt!35899)) lt!35784) lt!36712)))

(declare-fun b!79187 () Bool)

(declare-fun e!51729 () Bool)

(assert (=> b!79187 (= e!51728 e!51729)))

(declare-fun res!41378 () Bool)

(assert (=> b!79187 (=> res!41378 e!51729)))

(assert (=> b!79187 (= res!41378 (= (h!2117 (t!5183 (toList!748 lt!35899))) lt!35784))))

(declare-fun b!79188 () Bool)

(assert (=> b!79188 (= e!51729 (contains!748 (t!5183 (t!5183 (toList!748 lt!35899))) lt!35784))))

(assert (= (and d!18939 res!41377) b!79187))

(assert (= (and b!79187 (not res!41378)) b!79188))

(declare-fun m!79921 () Bool)

(assert (=> d!18939 m!79921))

(declare-fun m!79923 () Bool)

(assert (=> d!18939 m!79923))

(declare-fun m!79925 () Bool)

(assert (=> b!79188 m!79925))

(assert (=> b!78480 d!18939))

(declare-fun d!18941 () Bool)

(declare-fun e!51731 () Bool)

(assert (=> d!18941 e!51731))

(declare-fun res!41379 () Bool)

(assert (=> d!18941 (=> res!41379 e!51731)))

(declare-fun lt!36713 () Bool)

(assert (=> d!18941 (= res!41379 (not lt!36713))))

(declare-fun lt!36714 () Bool)

(assert (=> d!18941 (= lt!36713 lt!36714)))

(declare-fun lt!36715 () Unit!2263)

(declare-fun e!51730 () Unit!2263)

(assert (=> d!18941 (= lt!36715 e!51730)))

(declare-fun c!12254 () Bool)

(assert (=> d!18941 (= c!12254 lt!36714)))

(assert (=> d!18941 (= lt!36714 (containsKey!140 (toList!748 lt!36175) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!18941 (= (contains!745 lt!36175 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36713)))

(declare-fun b!79189 () Bool)

(declare-fun lt!36716 () Unit!2263)

(assert (=> b!79189 (= e!51730 lt!36716)))

(assert (=> b!79189 (= lt!36716 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36175) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> b!79189 (isDefined!90 (getValueByKey!136 (toList!748 lt!36175) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79190 () Bool)

(declare-fun Unit!2310 () Unit!2263)

(assert (=> b!79190 (= e!51730 Unit!2310)))

(declare-fun b!79191 () Bool)

(assert (=> b!79191 (= e!51731 (isDefined!90 (getValueByKey!136 (toList!748 lt!36175) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!18941 c!12254) b!79189))

(assert (= (and d!18941 (not c!12254)) b!79190))

(assert (= (and d!18941 (not res!41379)) b!79191))

(declare-fun m!79927 () Bool)

(assert (=> d!18941 m!79927))

(declare-fun m!79929 () Bool)

(assert (=> b!79189 m!79929))

(assert (=> b!79189 m!78431))

(assert (=> b!79189 m!78431))

(declare-fun m!79931 () Bool)

(assert (=> b!79189 m!79931))

(assert (=> b!79191 m!78431))

(assert (=> b!79191 m!78431))

(assert (=> b!79191 m!79931))

(assert (=> d!18539 d!18941))

(declare-fun b!79193 () Bool)

(declare-fun e!51732 () Option!142)

(declare-fun e!51733 () Option!142)

(assert (=> b!79193 (= e!51732 e!51733)))

(declare-fun c!12256 () Bool)

(assert (=> b!79193 (= c!12256 (and ((_ is Cons!1529) lt!36172) (not (= (_1!1105 (h!2117 lt!36172)) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79192 () Bool)

(assert (=> b!79192 (= e!51732 (Some!141 (_2!1105 (h!2117 lt!36172))))))

(declare-fun b!79194 () Bool)

(assert (=> b!79194 (= e!51733 (getValueByKey!136 (t!5183 lt!36172) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79195 () Bool)

(assert (=> b!79195 (= e!51733 None!140)))

(declare-fun d!18943 () Bool)

(declare-fun c!12255 () Bool)

(assert (=> d!18943 (= c!12255 (and ((_ is Cons!1529) lt!36172) (= (_1!1105 (h!2117 lt!36172)) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18943 (= (getValueByKey!136 lt!36172 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!51732)))

(assert (= (and d!18943 c!12255) b!79192))

(assert (= (and d!18943 (not c!12255)) b!79193))

(assert (= (and b!79193 c!12256) b!79194))

(assert (= (and b!79193 (not c!12256)) b!79195))

(declare-fun m!79933 () Bool)

(assert (=> b!79194 m!79933))

(assert (=> d!18539 d!18943))

(declare-fun d!18945 () Bool)

(assert (=> d!18945 (= (getValueByKey!136 lt!36172 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36717 () Unit!2263)

(assert (=> d!18945 (= lt!36717 (choose!468 lt!36172 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun e!51734 () Bool)

(assert (=> d!18945 e!51734))

(declare-fun res!41380 () Bool)

(assert (=> d!18945 (=> (not res!41380) (not e!51734))))

(assert (=> d!18945 (= res!41380 (isStrictlySorted!290 lt!36172))))

(assert (=> d!18945 (= (lemmaContainsTupThenGetReturnValue!55 lt!36172 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36717)))

(declare-fun b!79196 () Bool)

(declare-fun res!41381 () Bool)

(assert (=> b!79196 (=> (not res!41381) (not e!51734))))

(assert (=> b!79196 (= res!41381 (containsKey!140 lt!36172 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79197 () Bool)

(assert (=> b!79197 (= e!51734 (contains!748 lt!36172 (tuple2!2191 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!18945 res!41380) b!79196))

(assert (= (and b!79196 res!41381) b!79197))

(assert (=> d!18945 m!78425))

(declare-fun m!79935 () Bool)

(assert (=> d!18945 m!79935))

(declare-fun m!79937 () Bool)

(assert (=> d!18945 m!79937))

(declare-fun m!79939 () Bool)

(assert (=> b!79196 m!79939))

(declare-fun m!79941 () Bool)

(assert (=> b!79197 m!79941))

(assert (=> d!18539 d!18945))

(declare-fun c!12257 () Bool)

(declare-fun b!79198 () Bool)

(assert (=> b!79198 (= c!12257 (and ((_ is Cons!1529) (toList!748 lt!35977)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35977))) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun e!51738 () List!1533)

(declare-fun e!51735 () List!1533)

(assert (=> b!79198 (= e!51738 e!51735)))

(declare-fun e!51737 () List!1533)

(declare-fun c!12258 () Bool)

(declare-fun call!7306 () List!1533)

(declare-fun bm!7301 () Bool)

(assert (=> bm!7301 (= call!7306 ($colon$colon!68 e!51737 (ite c!12258 (h!2117 (toList!748 lt!35977)) (tuple2!2191 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun c!12259 () Bool)

(assert (=> bm!7301 (= c!12259 c!12258)))

(declare-fun d!18947 () Bool)

(declare-fun e!51739 () Bool)

(assert (=> d!18947 e!51739))

(declare-fun res!41382 () Bool)

(assert (=> d!18947 (=> (not res!41382) (not e!51739))))

(declare-fun lt!36718 () List!1533)

(assert (=> d!18947 (= res!41382 (isStrictlySorted!290 lt!36718))))

(declare-fun e!51736 () List!1533)

(assert (=> d!18947 (= lt!36718 e!51736)))

(assert (=> d!18947 (= c!12258 (and ((_ is Cons!1529) (toList!748 lt!35977)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35977))) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18947 (isStrictlySorted!290 (toList!748 lt!35977))))

(assert (=> d!18947 (= (insertStrictlySorted!57 (toList!748 lt!35977) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36718)))

(declare-fun c!12260 () Bool)

(declare-fun b!79199 () Bool)

(assert (=> b!79199 (= e!51737 (ite c!12260 (t!5183 (toList!748 lt!35977)) (ite c!12257 (Cons!1529 (h!2117 (toList!748 lt!35977)) (t!5183 (toList!748 lt!35977))) Nil!1530)))))

(declare-fun bm!7302 () Bool)

(declare-fun call!7305 () List!1533)

(assert (=> bm!7302 (= call!7305 call!7306)))

(declare-fun b!79200 () Bool)

(assert (=> b!79200 (= e!51736 call!7306)))

(declare-fun b!79201 () Bool)

(declare-fun res!41383 () Bool)

(assert (=> b!79201 (=> (not res!41383) (not e!51739))))

(assert (=> b!79201 (= res!41383 (containsKey!140 lt!36718 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79202 () Bool)

(declare-fun call!7304 () List!1533)

(assert (=> b!79202 (= e!51735 call!7304)))

(declare-fun b!79203 () Bool)

(assert (=> b!79203 (= e!51738 call!7305)))

(declare-fun b!79204 () Bool)

(assert (=> b!79204 (= e!51736 e!51738)))

(assert (=> b!79204 (= c!12260 (and ((_ is Cons!1529) (toList!748 lt!35977)) (= (_1!1105 (h!2117 (toList!748 lt!35977))) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun bm!7303 () Bool)

(assert (=> bm!7303 (= call!7304 call!7305)))

(declare-fun b!79205 () Bool)

(assert (=> b!79205 (= e!51737 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35977)) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79206 () Bool)

(assert (=> b!79206 (= e!51739 (contains!748 lt!36718 (tuple2!2191 (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79207 () Bool)

(assert (=> b!79207 (= e!51735 call!7304)))

(assert (= (and d!18947 c!12258) b!79200))

(assert (= (and d!18947 (not c!12258)) b!79204))

(assert (= (and b!79204 c!12260) b!79203))

(assert (= (and b!79204 (not c!12260)) b!79198))

(assert (= (and b!79198 c!12257) b!79207))

(assert (= (and b!79198 (not c!12257)) b!79202))

(assert (= (or b!79207 b!79202) bm!7303))

(assert (= (or b!79203 bm!7303) bm!7302))

(assert (= (or b!79200 bm!7302) bm!7301))

(assert (= (and bm!7301 c!12259) b!79205))

(assert (= (and bm!7301 (not c!12259)) b!79199))

(assert (= (and d!18947 res!41382) b!79201))

(assert (= (and b!79201 res!41383) b!79206))

(declare-fun m!79943 () Bool)

(assert (=> b!79201 m!79943))

(declare-fun m!79945 () Bool)

(assert (=> b!79206 m!79945))

(declare-fun m!79947 () Bool)

(assert (=> d!18947 m!79947))

(declare-fun m!79949 () Bool)

(assert (=> d!18947 m!79949))

(declare-fun m!79951 () Bool)

(assert (=> bm!7301 m!79951))

(declare-fun m!79953 () Bool)

(assert (=> b!79205 m!79953))

(assert (=> d!18539 d!18947))

(declare-fun d!18949 () Bool)

(assert (=> d!18949 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35888) (_1!1105 lt!35788))) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35888) (_1!1105 lt!35788)))))))

(declare-fun bs!3342 () Bool)

(assert (= bs!3342 d!18949))

(assert (=> bs!3342 m!77941))

(declare-fun m!79955 () Bool)

(assert (=> bs!3342 m!79955))

(assert (=> b!78758 d!18949))

(assert (=> b!78758 d!18485))

(declare-fun d!18951 () Bool)

(assert (=> d!18951 (= (get!1192 (getValueByKey!136 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2598 (getValueByKey!136 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18581 d!18951))

(declare-fun b!79209 () Bool)

(declare-fun e!51740 () Option!142)

(declare-fun e!51741 () Option!142)

(assert (=> b!79209 (= e!51740 e!51741)))

(declare-fun c!12262 () Bool)

(assert (=> b!79209 (= c!12262 (and ((_ is Cons!1529) (toList!748 lt!35867)) (not (= (_1!1105 (h!2117 (toList!748 lt!35867))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!79208 () Bool)

(assert (=> b!79208 (= e!51740 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35867)))))))

(declare-fun b!79210 () Bool)

(assert (=> b!79210 (= e!51741 (getValueByKey!136 (t!5183 (toList!748 lt!35867)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!79211 () Bool)

(assert (=> b!79211 (= e!51741 None!140)))

(declare-fun c!12261 () Bool)

(declare-fun d!18953 () Bool)

(assert (=> d!18953 (= c!12261 (and ((_ is Cons!1529) (toList!748 lt!35867)) (= (_1!1105 (h!2117 (toList!748 lt!35867))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18953 (= (getValueByKey!136 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!51740)))

(assert (= (and d!18953 c!12261) b!79208))

(assert (= (and d!18953 (not c!12261)) b!79209))

(assert (= (and b!79209 c!12262) b!79210))

(assert (= (and b!79209 (not c!12262)) b!79211))

(assert (=> b!79210 m!77883))

(declare-fun m!79957 () Bool)

(assert (=> b!79210 m!79957))

(assert (=> d!18581 d!18953))

(declare-fun d!18955 () Bool)

(assert (=> d!18955 (= (get!1192 (getValueByKey!136 (toList!748 lt!35958) lt!35972)) (v!2598 (getValueByKey!136 (toList!748 lt!35958) lt!35972)))))

(assert (=> d!18549 d!18955))

(declare-fun b!79213 () Bool)

(declare-fun e!51742 () Option!142)

(declare-fun e!51743 () Option!142)

(assert (=> b!79213 (= e!51742 e!51743)))

(declare-fun c!12264 () Bool)

(assert (=> b!79213 (= c!12264 (and ((_ is Cons!1529) (toList!748 lt!35958)) (not (= (_1!1105 (h!2117 (toList!748 lt!35958))) lt!35972))))))

(declare-fun b!79212 () Bool)

(assert (=> b!79212 (= e!51742 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35958)))))))

(declare-fun b!79214 () Bool)

(assert (=> b!79214 (= e!51743 (getValueByKey!136 (t!5183 (toList!748 lt!35958)) lt!35972))))

(declare-fun b!79215 () Bool)

(assert (=> b!79215 (= e!51743 None!140)))

(declare-fun d!18957 () Bool)

(declare-fun c!12263 () Bool)

(assert (=> d!18957 (= c!12263 (and ((_ is Cons!1529) (toList!748 lt!35958)) (= (_1!1105 (h!2117 (toList!748 lt!35958))) lt!35972)))))

(assert (=> d!18957 (= (getValueByKey!136 (toList!748 lt!35958) lt!35972) e!51742)))

(assert (= (and d!18957 c!12263) b!79212))

(assert (= (and d!18957 (not c!12263)) b!79213))

(assert (= (and b!79213 c!12264) b!79214))

(assert (= (and b!79213 (not c!12264)) b!79215))

(declare-fun m!79959 () Bool)

(assert (=> b!79214 m!79959))

(assert (=> d!18549 d!18957))

(declare-fun d!18959 () Bool)

(declare-fun lt!36719 () Bool)

(assert (=> d!18959 (= lt!36719 (select (content!82 (toList!748 lt!36435)) (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun e!51744 () Bool)

(assert (=> d!18959 (= lt!36719 e!51744)))

(declare-fun res!41384 () Bool)

(assert (=> d!18959 (=> (not res!41384) (not e!51744))))

(assert (=> d!18959 (= res!41384 ((_ is Cons!1529) (toList!748 lt!36435)))))

(assert (=> d!18959 (= (contains!748 (toList!748 lt!36435) (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36719)))

(declare-fun b!79216 () Bool)

(declare-fun e!51745 () Bool)

(assert (=> b!79216 (= e!51744 e!51745)))

(declare-fun res!41385 () Bool)

(assert (=> b!79216 (=> res!41385 e!51745)))

(assert (=> b!79216 (= res!41385 (= (h!2117 (toList!748 lt!36435)) (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79217 () Bool)

(assert (=> b!79217 (= e!51745 (contains!748 (t!5183 (toList!748 lt!36435)) (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (= (and d!18959 res!41384) b!79216))

(assert (= (and b!79216 (not res!41385)) b!79217))

(declare-fun m!79961 () Bool)

(assert (=> d!18959 m!79961))

(declare-fun m!79963 () Bool)

(assert (=> d!18959 m!79963))

(declare-fun m!79965 () Bool)

(assert (=> b!79217 m!79965))

(assert (=> b!78732 d!18959))

(declare-fun lt!36720 () Bool)

(declare-fun d!18961 () Bool)

(assert (=> d!18961 (= lt!36720 (select (content!82 (toList!748 lt!36132)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!51746 () Bool)

(assert (=> d!18961 (= lt!36720 e!51746)))

(declare-fun res!41386 () Bool)

(assert (=> d!18961 (=> (not res!41386) (not e!51746))))

(assert (=> d!18961 (= res!41386 ((_ is Cons!1529) (toList!748 lt!36132)))))

(assert (=> d!18961 (= (contains!748 (toList!748 lt!36132) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!36720)))

(declare-fun b!79218 () Bool)

(declare-fun e!51747 () Bool)

(assert (=> b!79218 (= e!51746 e!51747)))

(declare-fun res!41387 () Bool)

(assert (=> b!79218 (=> res!41387 e!51747)))

(assert (=> b!79218 (= res!41387 (= (h!2117 (toList!748 lt!36132)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79219 () Bool)

(assert (=> b!79219 (= e!51747 (contains!748 (t!5183 (toList!748 lt!36132)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!18961 res!41386) b!79218))

(assert (= (and b!79218 (not res!41387)) b!79219))

(declare-fun m!79967 () Bool)

(assert (=> d!18961 m!79967))

(declare-fun m!79969 () Bool)

(assert (=> d!18961 m!79969))

(declare-fun m!79971 () Bool)

(assert (=> b!79219 m!79971))

(assert (=> b!78342 d!18961))

(declare-fun e!51762 () SeekEntryResult!250)

(declare-fun b!79238 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!79238 (= e!51762 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (mask!6268 newMap!16)) #b00000000000000000000000000000000 (mask!6268 newMap!16)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!79239 () Bool)

(assert (=> b!79239 (= e!51762 (Intermediate!250 false (toIndex!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (mask!6268 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun e!51758 () SeekEntryResult!250)

(declare-fun b!79240 () Bool)

(assert (=> b!79240 (= e!51758 (Intermediate!250 true (toIndex!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (mask!6268 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!79241 () Bool)

(declare-fun lt!36726 () SeekEntryResult!250)

(assert (=> b!79241 (and (bvsge (index!3136 lt!36726) #b00000000000000000000000000000000) (bvslt (index!3136 lt!36726) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun res!41394 () Bool)

(assert (=> b!79241 (= res!41394 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3136 lt!36726)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51760 () Bool)

(assert (=> b!79241 (=> res!41394 e!51760)))

(declare-fun b!79242 () Bool)

(declare-fun e!51759 () Bool)

(assert (=> b!79242 (= e!51759 (bvsge (x!11557 lt!36726) #b01111111111111111111111111111110))))

(declare-fun b!79243 () Bool)

(assert (=> b!79243 (= e!51758 e!51762)))

(declare-fun lt!36725 () (_ BitVec 64))

(declare-fun c!12272 () Bool)

(assert (=> b!79243 (= c!12272 (or (= lt!36725 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (= (bvadd lt!36725 lt!36725) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79244 () Bool)

(assert (=> b!79244 (and (bvsge (index!3136 lt!36726) #b00000000000000000000000000000000) (bvslt (index!3136 lt!36726) (size!2135 (_keys!3932 newMap!16))))))

(assert (=> b!79244 (= e!51760 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3136 lt!36726)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!18963 () Bool)

(assert (=> d!18963 e!51759))

(declare-fun c!12271 () Bool)

(assert (=> d!18963 (= c!12271 (and ((_ is Intermediate!250) lt!36726) (undefined!1062 lt!36726)))))

(assert (=> d!18963 (= lt!36726 e!51758)))

(declare-fun c!12273 () Bool)

(assert (=> d!18963 (= c!12273 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!18963 (= lt!36725 (select (arr!1894 (_keys!3932 newMap!16)) (toIndex!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (mask!6268 newMap!16))))))

(assert (=> d!18963 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!18963 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (mask!6268 newMap!16)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)) lt!36726)))

(declare-fun b!79245 () Bool)

(declare-fun e!51761 () Bool)

(assert (=> b!79245 (= e!51759 e!51761)))

(declare-fun res!41396 () Bool)

(assert (=> b!79245 (= res!41396 (and ((_ is Intermediate!250) lt!36726) (not (undefined!1062 lt!36726)) (bvslt (x!11557 lt!36726) #b01111111111111111111111111111110) (bvsge (x!11557 lt!36726) #b00000000000000000000000000000000) (bvsge (x!11557 lt!36726) #b00000000000000000000000000000000)))))

(assert (=> b!79245 (=> (not res!41396) (not e!51761))))

(declare-fun b!79246 () Bool)

(assert (=> b!79246 (and (bvsge (index!3136 lt!36726) #b00000000000000000000000000000000) (bvslt (index!3136 lt!36726) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun res!41395 () Bool)

(assert (=> b!79246 (= res!41395 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3136 lt!36726)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!79246 (=> res!41395 e!51760)))

(assert (=> b!79246 (= e!51761 e!51760)))

(assert (= (and d!18963 c!12273) b!79240))

(assert (= (and d!18963 (not c!12273)) b!79243))

(assert (= (and b!79243 c!12272) b!79239))

(assert (= (and b!79243 (not c!12272)) b!79238))

(assert (= (and d!18963 c!12271) b!79242))

(assert (= (and d!18963 (not c!12271)) b!79245))

(assert (= (and b!79245 res!41396) b!79246))

(assert (= (and b!79246 (not res!41395)) b!79241))

(assert (= (and b!79241 (not res!41394)) b!79244))

(declare-fun m!79973 () Bool)

(assert (=> b!79241 m!79973))

(assert (=> b!79238 m!78691))

(declare-fun m!79975 () Bool)

(assert (=> b!79238 m!79975))

(assert (=> b!79238 m!79975))

(assert (=> b!79238 m!77749))

(declare-fun m!79977 () Bool)

(assert (=> b!79238 m!79977))

(assert (=> d!18963 m!78691))

(declare-fun m!79979 () Bool)

(assert (=> d!18963 m!79979))

(assert (=> d!18963 m!78167))

(assert (=> b!79246 m!79973))

(assert (=> b!79244 m!79973))

(assert (=> d!18621 d!18963))

(declare-fun d!18965 () Bool)

(declare-fun lt!36732 () (_ BitVec 32))

(declare-fun lt!36731 () (_ BitVec 32))

(assert (=> d!18965 (= lt!36732 (bvmul (bvxor lt!36731 (bvlshr lt!36731 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!18965 (= lt!36731 ((_ extract 31 0) (bvand (bvxor (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvlshr (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!18965 (and (bvsge (mask!6268 newMap!16) #b00000000000000000000000000000000) (let ((res!41397 (let ((h!2120 ((_ extract 31 0) (bvand (bvxor (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvlshr (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11659 (bvmul (bvxor h!2120 (bvlshr h!2120 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11659 (bvlshr x!11659 #b00000000000000000000000000001101)) (mask!6268 newMap!16)))))) (and (bvslt res!41397 (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001)) (bvsge res!41397 #b00000000000000000000000000000000))))))

(assert (=> d!18965 (= (toIndex!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (mask!6268 newMap!16)) (bvand (bvxor lt!36732 (bvlshr lt!36732 #b00000000000000000000000000001101)) (mask!6268 newMap!16)))))

(assert (=> d!18621 d!18965))

(assert (=> d!18621 d!18847))

(assert (=> b!78458 d!18815))

(declare-fun d!18967 () Bool)

(assert (=> d!18967 (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!36733 () Unit!2263)

(assert (=> d!18967 (= lt!36733 (choose!471 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51763 () Bool)

(assert (=> d!18967 e!51763))

(declare-fun res!41398 () Bool)

(assert (=> d!18967 (=> (not res!41398) (not e!51763))))

(assert (=> d!18967 (= res!41398 (isStrictlySorted!290 (toList!748 lt!35867)))))

(assert (=> d!18967 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000) lt!36733)))

(declare-fun b!79247 () Bool)

(assert (=> b!79247 (= e!51763 (containsKey!140 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!18967 res!41398) b!79247))

(assert (=> d!18967 m!78229))

(assert (=> d!18967 m!78229))

(assert (=> d!18967 m!78231))

(declare-fun m!79981 () Bool)

(assert (=> d!18967 m!79981))

(declare-fun m!79983 () Bool)

(assert (=> d!18967 m!79983))

(assert (=> b!79247 m!78225))

(assert (=> b!78308 d!18967))

(declare-fun d!18969 () Bool)

(assert (=> d!18969 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3343 () Bool)

(assert (= bs!3343 d!18969))

(assert (=> bs!3343 m!78229))

(declare-fun m!79985 () Bool)

(assert (=> bs!3343 m!79985))

(assert (=> b!78308 d!18969))

(declare-fun b!79249 () Bool)

(declare-fun e!51764 () Option!142)

(declare-fun e!51765 () Option!142)

(assert (=> b!79249 (= e!51764 e!51765)))

(declare-fun c!12275 () Bool)

(assert (=> b!79249 (= c!12275 (and ((_ is Cons!1529) (toList!748 lt!35867)) (not (= (_1!1105 (h!2117 (toList!748 lt!35867))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79248 () Bool)

(assert (=> b!79248 (= e!51764 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35867)))))))

(declare-fun b!79250 () Bool)

(assert (=> b!79250 (= e!51765 (getValueByKey!136 (t!5183 (toList!748 lt!35867)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79251 () Bool)

(assert (=> b!79251 (= e!51765 None!140)))

(declare-fun d!18971 () Bool)

(declare-fun c!12274 () Bool)

(assert (=> d!18971 (= c!12274 (and ((_ is Cons!1529) (toList!748 lt!35867)) (= (_1!1105 (h!2117 (toList!748 lt!35867))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18971 (= (getValueByKey!136 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000) e!51764)))

(assert (= (and d!18971 c!12274) b!79248))

(assert (= (and d!18971 (not c!12274)) b!79249))

(assert (= (and b!79249 c!12275) b!79250))

(assert (= (and b!79249 (not c!12275)) b!79251))

(declare-fun m!79987 () Bool)

(assert (=> b!79250 m!79987))

(assert (=> b!78308 d!18971))

(declare-fun d!18973 () Bool)

(declare-fun lt!36734 () Bool)

(assert (=> d!18973 (= lt!36734 (select (content!82 (toList!748 lt!36461)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun e!51766 () Bool)

(assert (=> d!18973 (= lt!36734 e!51766)))

(declare-fun res!41399 () Bool)

(assert (=> d!18973 (=> (not res!41399) (not e!51766))))

(assert (=> d!18973 (= res!41399 ((_ is Cons!1529) (toList!748 lt!36461)))))

(assert (=> d!18973 (= (contains!748 (toList!748 lt!36461) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36734)))

(declare-fun b!79252 () Bool)

(declare-fun e!51767 () Bool)

(assert (=> b!79252 (= e!51766 e!51767)))

(declare-fun res!41400 () Bool)

(assert (=> b!79252 (=> res!41400 e!51767)))

(assert (=> b!79252 (= res!41400 (= (h!2117 (toList!748 lt!36461)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!79253 () Bool)

(assert (=> b!79253 (= e!51767 (contains!748 (t!5183 (toList!748 lt!36461)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!18973 res!41399) b!79252))

(assert (= (and b!79252 (not res!41400)) b!79253))

(declare-fun m!79989 () Bool)

(assert (=> d!18973 m!79989))

(declare-fun m!79991 () Bool)

(assert (=> d!18973 m!79991))

(declare-fun m!79993 () Bool)

(assert (=> b!79253 m!79993))

(assert (=> b!78755 d!18973))

(declare-fun d!18975 () Bool)

(declare-fun lt!36735 () Bool)

(assert (=> d!18975 (= lt!36735 (select (content!82 lt!35904) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun e!51768 () Bool)

(assert (=> d!18975 (= lt!36735 e!51768)))

(declare-fun res!41401 () Bool)

(assert (=> d!18975 (=> (not res!41401) (not e!51768))))

(assert (=> d!18975 (= res!41401 ((_ is Cons!1529) lt!35904))))

(assert (=> d!18975 (= (contains!748 lt!35904 (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))) lt!36735)))

(declare-fun b!79254 () Bool)

(declare-fun e!51769 () Bool)

(assert (=> b!79254 (= e!51768 e!51769)))

(declare-fun res!41402 () Bool)

(assert (=> b!79254 (=> res!41402 e!51769)))

(assert (=> b!79254 (= res!41402 (= (h!2117 lt!35904) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun b!79255 () Bool)

(assert (=> b!79255 (= e!51769 (contains!748 (t!5183 lt!35904) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(assert (= (and d!18975 res!41401) b!79254))

(assert (= (and b!79254 (not res!41402)) b!79255))

(declare-fun m!79995 () Bool)

(assert (=> d!18975 m!79995))

(declare-fun m!79997 () Bool)

(assert (=> d!18975 m!79997))

(declare-fun m!79999 () Bool)

(assert (=> b!79255 m!79999))

(assert (=> b!78468 d!18975))

(declare-fun d!18977 () Bool)

(declare-fun res!41403 () Bool)

(declare-fun e!51770 () Bool)

(assert (=> d!18977 (=> res!41403 e!51770)))

(assert (=> d!18977 (= res!41403 (and ((_ is Cons!1529) lt!35885) (= (_1!1105 (h!2117 lt!35885)) (_1!1105 lt!35788))))))

(assert (=> d!18977 (= (containsKey!140 lt!35885 (_1!1105 lt!35788)) e!51770)))

(declare-fun b!79256 () Bool)

(declare-fun e!51771 () Bool)

(assert (=> b!79256 (= e!51770 e!51771)))

(declare-fun res!41404 () Bool)

(assert (=> b!79256 (=> (not res!41404) (not e!51771))))

(assert (=> b!79256 (= res!41404 (and (or (not ((_ is Cons!1529) lt!35885)) (bvsle (_1!1105 (h!2117 lt!35885)) (_1!1105 lt!35788))) ((_ is Cons!1529) lt!35885) (bvslt (_1!1105 (h!2117 lt!35885)) (_1!1105 lt!35788))))))

(declare-fun b!79257 () Bool)

(assert (=> b!79257 (= e!51771 (containsKey!140 (t!5183 lt!35885) (_1!1105 lt!35788)))))

(assert (= (and d!18977 (not res!41403)) b!79256))

(assert (= (and b!79256 res!41404) b!79257))

(declare-fun m!80001 () Bool)

(assert (=> b!79257 m!80001))

(assert (=> b!78763 d!18977))

(declare-fun d!18979 () Bool)

(declare-fun e!51773 () Bool)

(assert (=> d!18979 e!51773))

(declare-fun res!41405 () Bool)

(assert (=> d!18979 (=> res!41405 e!51773)))

(declare-fun lt!36736 () Bool)

(assert (=> d!18979 (= res!41405 (not lt!36736))))

(declare-fun lt!36737 () Bool)

(assert (=> d!18979 (= lt!36736 lt!36737)))

(declare-fun lt!36738 () Unit!2263)

(declare-fun e!51772 () Unit!2263)

(assert (=> d!18979 (= lt!36738 e!51772)))

(declare-fun c!12276 () Bool)

(assert (=> d!18979 (= c!12276 lt!36737)))

(assert (=> d!18979 (= lt!36737 (containsKey!140 (toList!748 lt!36112) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!18979 (= (contains!745 lt!36112 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36736)))

(declare-fun b!79258 () Bool)

(declare-fun lt!36739 () Unit!2263)

(assert (=> b!79258 (= e!51772 lt!36739)))

(assert (=> b!79258 (= lt!36739 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36112) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79258 (isDefined!90 (getValueByKey!136 (toList!748 lt!36112) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79259 () Bool)

(declare-fun Unit!2311 () Unit!2263)

(assert (=> b!79259 (= e!51772 Unit!2311)))

(declare-fun b!79260 () Bool)

(assert (=> b!79260 (= e!51773 (isDefined!90 (getValueByKey!136 (toList!748 lt!36112) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!18979 c!12276) b!79258))

(assert (= (and d!18979 (not c!12276)) b!79259))

(assert (= (and d!18979 (not res!41405)) b!79260))

(declare-fun m!80003 () Bool)

(assert (=> d!18979 m!80003))

(declare-fun m!80005 () Bool)

(assert (=> b!79258 m!80005))

(declare-fun m!80007 () Bool)

(assert (=> b!79258 m!80007))

(assert (=> b!79258 m!80007))

(declare-fun m!80009 () Bool)

(assert (=> b!79258 m!80009))

(assert (=> b!79260 m!80007))

(assert (=> b!79260 m!80007))

(assert (=> b!79260 m!80009))

(assert (=> bm!7185 d!18979))

(declare-fun b!79262 () Bool)

(declare-fun e!51774 () Option!142)

(declare-fun e!51775 () Option!142)

(assert (=> b!79262 (= e!51774 e!51775)))

(declare-fun c!12278 () Bool)

(assert (=> b!79262 (= c!12278 (and ((_ is Cons!1529) (toList!748 lt!36211)) (not (= (_1!1105 (h!2117 (toList!748 lt!36211))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!79261 () Bool)

(assert (=> b!79261 (= e!51774 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36211)))))))

(declare-fun b!79263 () Bool)

(assert (=> b!79263 (= e!51775 (getValueByKey!136 (t!5183 (toList!748 lt!36211)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79264 () Bool)

(assert (=> b!79264 (= e!51775 None!140)))

(declare-fun c!12277 () Bool)

(declare-fun d!18981 () Bool)

(assert (=> d!18981 (= c!12277 (and ((_ is Cons!1529) (toList!748 lt!36211)) (= (_1!1105 (h!2117 (toList!748 lt!36211))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!18981 (= (getValueByKey!136 (toList!748 lt!36211) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) e!51774)))

(assert (= (and d!18981 c!12277) b!79261))

(assert (= (and d!18981 (not c!12277)) b!79262))

(assert (= (and b!79262 c!12278) b!79263))

(assert (= (and b!79262 (not c!12278)) b!79264))

(declare-fun m!80011 () Bool)

(assert (=> b!79263 m!80011))

(assert (=> b!78481 d!18981))

(declare-fun d!18983 () Bool)

(assert (=> d!18983 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3344 () Bool)

(assert (= bs!3344 d!18983))

(assert (=> bs!3344 m!78409))

(declare-fun m!80013 () Bool)

(assert (=> bs!3344 m!80013))

(assert (=> b!78425 d!18983))

(assert (=> b!78425 d!18863))

(declare-fun d!18985 () Bool)

(declare-fun e!51777 () Bool)

(assert (=> d!18985 e!51777))

(declare-fun res!41406 () Bool)

(assert (=> d!18985 (=> res!41406 e!51777)))

(declare-fun lt!36740 () Bool)

(assert (=> d!18985 (= res!41406 (not lt!36740))))

(declare-fun lt!36741 () Bool)

(assert (=> d!18985 (= lt!36740 lt!36741)))

(declare-fun lt!36742 () Unit!2263)

(declare-fun e!51776 () Unit!2263)

(assert (=> d!18985 (= lt!36742 e!51776)))

(declare-fun c!12279 () Bool)

(assert (=> d!18985 (= c!12279 lt!36741)))

(assert (=> d!18985 (= lt!36741 (containsKey!140 (toList!748 lt!36435) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!18985 (= (contains!745 lt!36435 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) lt!36740)))

(declare-fun b!79265 () Bool)

(declare-fun lt!36743 () Unit!2263)

(assert (=> b!79265 (= e!51776 lt!36743)))

(assert (=> b!79265 (= lt!36743 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36435) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> b!79265 (isDefined!90 (getValueByKey!136 (toList!748 lt!36435) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79266 () Bool)

(declare-fun Unit!2312 () Unit!2263)

(assert (=> b!79266 (= e!51776 Unit!2312)))

(declare-fun b!79267 () Bool)

(assert (=> b!79267 (= e!51777 (isDefined!90 (getValueByKey!136 (toList!748 lt!36435) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(assert (= (and d!18985 c!12279) b!79265))

(assert (= (and d!18985 (not c!12279)) b!79266))

(assert (= (and d!18985 (not res!41406)) b!79267))

(declare-fun m!80015 () Bool)

(assert (=> d!18985 m!80015))

(declare-fun m!80017 () Bool)

(assert (=> b!79265 m!80017))

(assert (=> b!79265 m!79011))

(assert (=> b!79265 m!79011))

(declare-fun m!80019 () Bool)

(assert (=> b!79265 m!80019))

(assert (=> b!79267 m!79011))

(assert (=> b!79267 m!79011))

(assert (=> b!79267 m!80019))

(assert (=> d!18695 d!18985))

(declare-fun b!79269 () Bool)

(declare-fun e!51778 () Option!142)

(declare-fun e!51779 () Option!142)

(assert (=> b!79269 (= e!51778 e!51779)))

(declare-fun c!12281 () Bool)

(assert (=> b!79269 (= c!12281 (and ((_ is Cons!1529) lt!36432) (not (= (_1!1105 (h!2117 lt!36432)) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))))

(declare-fun b!79268 () Bool)

(assert (=> b!79268 (= e!51778 (Some!141 (_2!1105 (h!2117 lt!36432))))))

(declare-fun b!79270 () Bool)

(assert (=> b!79270 (= e!51779 (getValueByKey!136 (t!5183 lt!36432) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79271 () Bool)

(assert (=> b!79271 (= e!51779 None!140)))

(declare-fun c!12280 () Bool)

(declare-fun d!18987 () Bool)

(assert (=> d!18987 (= c!12280 (and ((_ is Cons!1529) lt!36432) (= (_1!1105 (h!2117 lt!36432)) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(assert (=> d!18987 (= (getValueByKey!136 lt!36432 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) e!51778)))

(assert (= (and d!18987 c!12280) b!79268))

(assert (= (and d!18987 (not c!12280)) b!79269))

(assert (= (and b!79269 c!12281) b!79270))

(assert (= (and b!79269 (not c!12281)) b!79271))

(declare-fun m!80021 () Bool)

(assert (=> b!79270 m!80021))

(assert (=> d!18695 d!18987))

(declare-fun d!18989 () Bool)

(assert (=> d!18989 (= (getValueByKey!136 lt!36432 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (Some!141 (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun lt!36744 () Unit!2263)

(assert (=> d!18989 (= lt!36744 (choose!468 lt!36432 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun e!51780 () Bool)

(assert (=> d!18989 e!51780))

(declare-fun res!41407 () Bool)

(assert (=> d!18989 (=> (not res!41407) (not e!51780))))

(assert (=> d!18989 (= res!41407 (isStrictlySorted!290 lt!36432))))

(assert (=> d!18989 (= (lemmaContainsTupThenGetReturnValue!55 lt!36432 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) lt!36744)))

(declare-fun b!79272 () Bool)

(declare-fun res!41408 () Bool)

(assert (=> b!79272 (=> (not res!41408) (not e!51780))))

(assert (=> b!79272 (= res!41408 (containsKey!140 lt!36432 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79273 () Bool)

(assert (=> b!79273 (= e!51780 (contains!748 lt!36432 (tuple2!2191 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(assert (= (and d!18989 res!41407) b!79272))

(assert (= (and b!79272 res!41408) b!79273))

(assert (=> d!18989 m!79005))

(declare-fun m!80023 () Bool)

(assert (=> d!18989 m!80023))

(declare-fun m!80025 () Bool)

(assert (=> d!18989 m!80025))

(declare-fun m!80027 () Bool)

(assert (=> b!79272 m!80027))

(declare-fun m!80029 () Bool)

(assert (=> b!79273 m!80029))

(assert (=> d!18695 d!18989))

(declare-fun c!12282 () Bool)

(declare-fun b!79274 () Bool)

(assert (=> b!79274 (= c!12282 (and ((_ is Cons!1529) (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093)))) (bvsgt (_1!1105 (h!2117 (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093))))) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun e!51784 () List!1533)

(declare-fun e!51781 () List!1533)

(assert (=> b!79274 (= e!51784 e!51781)))

(declare-fun c!12283 () Bool)

(declare-fun e!51783 () List!1533)

(declare-fun bm!7304 () Bool)

(declare-fun call!7309 () List!1533)

(assert (=> bm!7304 (= call!7309 ($colon$colon!68 e!51783 (ite c!12283 (h!2117 (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093)))) (tuple2!2191 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))))

(declare-fun c!12284 () Bool)

(assert (=> bm!7304 (= c!12284 c!12283)))

(declare-fun d!18991 () Bool)

(declare-fun e!51785 () Bool)

(assert (=> d!18991 e!51785))

(declare-fun res!41409 () Bool)

(assert (=> d!18991 (=> (not res!41409) (not e!51785))))

(declare-fun lt!36745 () List!1533)

(assert (=> d!18991 (= res!41409 (isStrictlySorted!290 lt!36745))))

(declare-fun e!51782 () List!1533)

(assert (=> d!18991 (= lt!36745 e!51782)))

(assert (=> d!18991 (= c!12283 (and ((_ is Cons!1529) (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093)))) (bvslt (_1!1105 (h!2117 (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093))))) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(assert (=> d!18991 (isStrictlySorted!290 (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093))))))

(assert (=> d!18991 (= (insertStrictlySorted!57 (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093))) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) lt!36745)))

(declare-fun b!79275 () Bool)

(declare-fun c!12285 () Bool)

(assert (=> b!79275 (= e!51783 (ite c!12285 (t!5183 (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093)))) (ite c!12282 (Cons!1529 (h!2117 (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093)))) (t!5183 (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093))))) Nil!1530)))))

(declare-fun bm!7305 () Bool)

(declare-fun call!7308 () List!1533)

(assert (=> bm!7305 (= call!7308 call!7309)))

(declare-fun b!79276 () Bool)

(assert (=> b!79276 (= e!51782 call!7309)))

(declare-fun b!79277 () Bool)

(declare-fun res!41410 () Bool)

(assert (=> b!79277 (=> (not res!41410) (not e!51785))))

(assert (=> b!79277 (= res!41410 (containsKey!140 lt!36745 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79278 () Bool)

(declare-fun call!7307 () List!1533)

(assert (=> b!79278 (= e!51781 call!7307)))

(declare-fun b!79279 () Bool)

(assert (=> b!79279 (= e!51784 call!7308)))

(declare-fun b!79280 () Bool)

(assert (=> b!79280 (= e!51782 e!51784)))

(assert (=> b!79280 (= c!12285 (and ((_ is Cons!1529) (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093)))) (= (_1!1105 (h!2117 (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093))))) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun bm!7306 () Bool)

(assert (=> bm!7306 (= call!7307 call!7308)))

(declare-fun b!79281 () Bool)

(assert (=> b!79281 (= e!51783 (insertStrictlySorted!57 (t!5183 (toList!748 (ite c!11936 call!7095 (ite c!11938 call!7097 call!7093)))) (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79282 () Bool)

(assert (=> b!79282 (= e!51785 (contains!748 lt!36745 (tuple2!2191 (_1!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_2!1105 (ite (or c!11936 c!11938) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79283 () Bool)

(assert (=> b!79283 (= e!51781 call!7307)))

(assert (= (and d!18991 c!12283) b!79276))

(assert (= (and d!18991 (not c!12283)) b!79280))

(assert (= (and b!79280 c!12285) b!79279))

(assert (= (and b!79280 (not c!12285)) b!79274))

(assert (= (and b!79274 c!12282) b!79283))

(assert (= (and b!79274 (not c!12282)) b!79278))

(assert (= (or b!79283 b!79278) bm!7306))

(assert (= (or b!79279 bm!7306) bm!7305))

(assert (= (or b!79276 bm!7305) bm!7304))

(assert (= (and bm!7304 c!12284) b!79281))

(assert (= (and bm!7304 (not c!12284)) b!79275))

(assert (= (and d!18991 res!41409) b!79277))

(assert (= (and b!79277 res!41410) b!79282))

(declare-fun m!80031 () Bool)

(assert (=> b!79277 m!80031))

(declare-fun m!80033 () Bool)

(assert (=> b!79282 m!80033))

(declare-fun m!80035 () Bool)

(assert (=> d!18991 m!80035))

(declare-fun m!80037 () Bool)

(assert (=> d!18991 m!80037))

(declare-fun m!80039 () Bool)

(assert (=> bm!7304 m!80039))

(declare-fun m!80041 () Bool)

(assert (=> b!79281 m!80041))

(assert (=> d!18695 d!18991))

(declare-fun d!18993 () Bool)

(assert (=> d!18993 (= (isDefined!90 (getValueByKey!136 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))) (not (isEmpty!332 (getValueByKey!136 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun bs!3345 () Bool)

(assert (= bs!3345 d!18993))

(assert (=> bs!3345 m!78713))

(declare-fun m!80043 () Bool)

(assert (=> bs!3345 m!80043))

(assert (=> b!78555 d!18993))

(declare-fun b!79285 () Bool)

(declare-fun e!51786 () Option!142)

(declare-fun e!51787 () Option!142)

(assert (=> b!79285 (= e!51786 e!51787)))

(declare-fun c!12287 () Bool)

(assert (=> b!79285 (= c!12287 (and ((_ is Cons!1529) (toList!748 call!7149)) (not (= (_1!1105 (h!2117 (toList!748 call!7149))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun b!79284 () Bool)

(assert (=> b!79284 (= e!51786 (Some!141 (_2!1105 (h!2117 (toList!748 call!7149)))))))

(declare-fun b!79286 () Bool)

(assert (=> b!79286 (= e!51787 (getValueByKey!136 (t!5183 (toList!748 call!7149)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!79287 () Bool)

(assert (=> b!79287 (= e!51787 None!140)))

(declare-fun d!18995 () Bool)

(declare-fun c!12286 () Bool)

(assert (=> d!18995 (= c!12286 (and ((_ is Cons!1529) (toList!748 call!7149)) (= (_1!1105 (h!2117 (toList!748 call!7149))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!18995 (= (getValueByKey!136 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) e!51786)))

(assert (= (and d!18995 c!12286) b!79284))

(assert (= (and d!18995 (not c!12286)) b!79285))

(assert (= (and b!79285 c!12287) b!79286))

(assert (= (and b!79285 (not c!12287)) b!79287))

(assert (=> b!79286 m!77749))

(declare-fun m!80045 () Bool)

(assert (=> b!79286 m!80045))

(assert (=> b!78555 d!18995))

(declare-fun d!18997 () Bool)

(declare-fun lt!36746 () Bool)

(assert (=> d!18997 (= lt!36746 (select (content!82 lt!36273) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun e!51788 () Bool)

(assert (=> d!18997 (= lt!36746 e!51788)))

(declare-fun res!41411 () Bool)

(assert (=> d!18997 (=> (not res!41411) (not e!51788))))

(assert (=> d!18997 (= res!41411 ((_ is Cons!1529) lt!36273))))

(assert (=> d!18997 (= (contains!748 lt!36273 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))) lt!36746)))

(declare-fun b!79288 () Bool)

(declare-fun e!51789 () Bool)

(assert (=> b!79288 (= e!51788 e!51789)))

(declare-fun res!41412 () Bool)

(assert (=> b!79288 (=> res!41412 e!51789)))

(assert (=> b!79288 (= res!41412 (= (h!2117 lt!36273) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!79289 () Bool)

(assert (=> b!79289 (= e!51789 (contains!748 (t!5183 lt!36273) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(assert (= (and d!18997 res!41411) b!79288))

(assert (= (and b!79288 (not res!41412)) b!79289))

(declare-fun m!80047 () Bool)

(assert (=> d!18997 m!80047))

(declare-fun m!80049 () Bool)

(assert (=> d!18997 m!80049))

(declare-fun m!80051 () Bool)

(assert (=> b!79289 m!80051))

(assert (=> b!78573 d!18997))

(declare-fun d!18999 () Bool)

(declare-fun e!51791 () Bool)

(assert (=> d!18999 e!51791))

(declare-fun res!41413 () Bool)

(assert (=> d!18999 (=> res!41413 e!51791)))

(declare-fun lt!36747 () Bool)

(assert (=> d!18999 (= res!41413 (not lt!36747))))

(declare-fun lt!36748 () Bool)

(assert (=> d!18999 (= lt!36747 lt!36748)))

(declare-fun lt!36749 () Unit!2263)

(declare-fun e!51790 () Unit!2263)

(assert (=> d!18999 (= lt!36749 e!51790)))

(declare-fun c!12288 () Bool)

(assert (=> d!18999 (= c!12288 lt!36748)))

(assert (=> d!18999 (= lt!36748 (containsKey!140 (toList!748 lt!36132) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!18999 (= (contains!745 lt!36132 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!36747)))

(declare-fun b!79290 () Bool)

(declare-fun lt!36750 () Unit!2263)

(assert (=> b!79290 (= e!51790 lt!36750)))

(assert (=> b!79290 (= lt!36750 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36132) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!79290 (isDefined!90 (getValueByKey!136 (toList!748 lt!36132) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79291 () Bool)

(declare-fun Unit!2313 () Unit!2263)

(assert (=> b!79291 (= e!51790 Unit!2313)))

(declare-fun b!79292 () Bool)

(assert (=> b!79292 (= e!51791 (isDefined!90 (getValueByKey!136 (toList!748 lt!36132) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!18999 c!12288) b!79290))

(assert (= (and d!18999 (not c!12288)) b!79291))

(assert (= (and d!18999 (not res!41413)) b!79292))

(declare-fun m!80053 () Bool)

(assert (=> d!18999 m!80053))

(declare-fun m!80055 () Bool)

(assert (=> b!79290 m!80055))

(assert (=> b!79290 m!78311))

(assert (=> b!79290 m!78311))

(declare-fun m!80057 () Bool)

(assert (=> b!79290 m!80057))

(assert (=> b!79292 m!78311))

(assert (=> b!79292 m!78311))

(assert (=> b!79292 m!80057))

(assert (=> d!18497 d!18999))

(declare-fun b!79294 () Bool)

(declare-fun e!51792 () Option!142)

(declare-fun e!51793 () Option!142)

(assert (=> b!79294 (= e!51792 e!51793)))

(declare-fun c!12290 () Bool)

(assert (=> b!79294 (= c!12290 (and ((_ is Cons!1529) lt!36129) (not (= (_1!1105 (h!2117 lt!36129)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!79293 () Bool)

(assert (=> b!79293 (= e!51792 (Some!141 (_2!1105 (h!2117 lt!36129))))))

(declare-fun b!79295 () Bool)

(assert (=> b!79295 (= e!51793 (getValueByKey!136 (t!5183 lt!36129) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79296 () Bool)

(assert (=> b!79296 (= e!51793 None!140)))

(declare-fun d!19001 () Bool)

(declare-fun c!12289 () Bool)

(assert (=> d!19001 (= c!12289 (and ((_ is Cons!1529) lt!36129) (= (_1!1105 (h!2117 lt!36129)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!19001 (= (getValueByKey!136 lt!36129 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!51792)))

(assert (= (and d!19001 c!12289) b!79293))

(assert (= (and d!19001 (not c!12289)) b!79294))

(assert (= (and b!79294 c!12290) b!79295))

(assert (= (and b!79294 (not c!12290)) b!79296))

(declare-fun m!80059 () Bool)

(assert (=> b!79295 m!80059))

(assert (=> d!18497 d!19001))

(declare-fun d!19003 () Bool)

(assert (=> d!19003 (= (getValueByKey!136 lt!36129 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!36751 () Unit!2263)

(assert (=> d!19003 (= lt!36751 (choose!468 lt!36129 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!51794 () Bool)

(assert (=> d!19003 e!51794))

(declare-fun res!41414 () Bool)

(assert (=> d!19003 (=> (not res!41414) (not e!51794))))

(assert (=> d!19003 (= res!41414 (isStrictlySorted!290 lt!36129))))

(assert (=> d!19003 (= (lemmaContainsTupThenGetReturnValue!55 lt!36129 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!36751)))

(declare-fun b!79297 () Bool)

(declare-fun res!41415 () Bool)

(assert (=> b!79297 (=> (not res!41415) (not e!51794))))

(assert (=> b!79297 (= res!41415 (containsKey!140 lt!36129 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79298 () Bool)

(assert (=> b!79298 (= e!51794 (contains!748 lt!36129 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!19003 res!41414) b!79297))

(assert (= (and b!79297 res!41415) b!79298))

(assert (=> d!19003 m!78305))

(declare-fun m!80061 () Bool)

(assert (=> d!19003 m!80061))

(declare-fun m!80063 () Bool)

(assert (=> d!19003 m!80063))

(declare-fun m!80065 () Bool)

(assert (=> b!79297 m!80065))

(declare-fun m!80067 () Bool)

(assert (=> b!79298 m!80067))

(assert (=> d!18497 d!19003))

(declare-fun b!79299 () Bool)

(declare-fun c!12291 () Bool)

(assert (=> b!79299 (= c!12291 (and ((_ is Cons!1529) (toList!748 call!7078)) (bvsgt (_1!1105 (h!2117 (toList!748 call!7078))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!51798 () List!1533)

(declare-fun e!51795 () List!1533)

(assert (=> b!79299 (= e!51798 e!51795)))

(declare-fun call!7312 () List!1533)

(declare-fun e!51797 () List!1533)

(declare-fun bm!7307 () Bool)

(declare-fun c!12292 () Bool)

(assert (=> bm!7307 (= call!7312 ($colon$colon!68 e!51797 (ite c!12292 (h!2117 (toList!748 call!7078)) (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!12293 () Bool)

(assert (=> bm!7307 (= c!12293 c!12292)))

(declare-fun d!19005 () Bool)

(declare-fun e!51799 () Bool)

(assert (=> d!19005 e!51799))

(declare-fun res!41416 () Bool)

(assert (=> d!19005 (=> (not res!41416) (not e!51799))))

(declare-fun lt!36752 () List!1533)

(assert (=> d!19005 (= res!41416 (isStrictlySorted!290 lt!36752))))

(declare-fun e!51796 () List!1533)

(assert (=> d!19005 (= lt!36752 e!51796)))

(assert (=> d!19005 (= c!12292 (and ((_ is Cons!1529) (toList!748 call!7078)) (bvslt (_1!1105 (h!2117 (toList!748 call!7078))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!19005 (isStrictlySorted!290 (toList!748 call!7078))))

(assert (=> d!19005 (= (insertStrictlySorted!57 (toList!748 call!7078) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!36752)))

(declare-fun c!12294 () Bool)

(declare-fun b!79300 () Bool)

(assert (=> b!79300 (= e!51797 (ite c!12294 (t!5183 (toList!748 call!7078)) (ite c!12291 (Cons!1529 (h!2117 (toList!748 call!7078)) (t!5183 (toList!748 call!7078))) Nil!1530)))))

(declare-fun bm!7308 () Bool)

(declare-fun call!7311 () List!1533)

(assert (=> bm!7308 (= call!7311 call!7312)))

(declare-fun b!79301 () Bool)

(assert (=> b!79301 (= e!51796 call!7312)))

(declare-fun b!79302 () Bool)

(declare-fun res!41417 () Bool)

(assert (=> b!79302 (=> (not res!41417) (not e!51799))))

(assert (=> b!79302 (= res!41417 (containsKey!140 lt!36752 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79303 () Bool)

(declare-fun call!7310 () List!1533)

(assert (=> b!79303 (= e!51795 call!7310)))

(declare-fun b!79304 () Bool)

(assert (=> b!79304 (= e!51798 call!7311)))

(declare-fun b!79305 () Bool)

(assert (=> b!79305 (= e!51796 e!51798)))

(assert (=> b!79305 (= c!12294 (and ((_ is Cons!1529) (toList!748 call!7078)) (= (_1!1105 (h!2117 (toList!748 call!7078))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!7309 () Bool)

(assert (=> bm!7309 (= call!7310 call!7311)))

(declare-fun b!79306 () Bool)

(assert (=> b!79306 (= e!51797 (insertStrictlySorted!57 (t!5183 (toList!748 call!7078)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!79307 () Bool)

(assert (=> b!79307 (= e!51799 (contains!748 lt!36752 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!79308 () Bool)

(assert (=> b!79308 (= e!51795 call!7310)))

(assert (= (and d!19005 c!12292) b!79301))

(assert (= (and d!19005 (not c!12292)) b!79305))

(assert (= (and b!79305 c!12294) b!79304))

(assert (= (and b!79305 (not c!12294)) b!79299))

(assert (= (and b!79299 c!12291) b!79308))

(assert (= (and b!79299 (not c!12291)) b!79303))

(assert (= (or b!79308 b!79303) bm!7309))

(assert (= (or b!79304 bm!7309) bm!7308))

(assert (= (or b!79301 bm!7308) bm!7307))

(assert (= (and bm!7307 c!12293) b!79306))

(assert (= (and bm!7307 (not c!12293)) b!79300))

(assert (= (and d!19005 res!41416) b!79302))

(assert (= (and b!79302 res!41417) b!79307))

(declare-fun m!80069 () Bool)

(assert (=> b!79302 m!80069))

(declare-fun m!80071 () Bool)

(assert (=> b!79307 m!80071))

(declare-fun m!80073 () Bool)

(assert (=> d!19005 m!80073))

(declare-fun m!80075 () Bool)

(assert (=> d!19005 m!80075))

(declare-fun m!80077 () Bool)

(assert (=> bm!7307 m!80077))

(declare-fun m!80079 () Bool)

(assert (=> b!79306 m!80079))

(assert (=> d!18497 d!19005))

(declare-fun d!19007 () Bool)

(declare-fun res!41418 () Bool)

(declare-fun e!51800 () Bool)

(assert (=> d!19007 (=> res!41418 e!51800)))

(assert (=> d!19007 (= res!41418 (and ((_ is Cons!1529) lt!36407) (= (_1!1105 (h!2117 lt!36407)) (_1!1105 lt!35783))))))

(assert (=> d!19007 (= (containsKey!140 lt!36407 (_1!1105 lt!35783)) e!51800)))

(declare-fun b!79309 () Bool)

(declare-fun e!51801 () Bool)

(assert (=> b!79309 (= e!51800 e!51801)))

(declare-fun res!41419 () Bool)

(assert (=> b!79309 (=> (not res!41419) (not e!51801))))

(assert (=> b!79309 (= res!41419 (and (or (not ((_ is Cons!1529) lt!36407)) (bvsle (_1!1105 (h!2117 lt!36407)) (_1!1105 lt!35783))) ((_ is Cons!1529) lt!36407) (bvslt (_1!1105 (h!2117 lt!36407)) (_1!1105 lt!35783))))))

(declare-fun b!79310 () Bool)

(assert (=> b!79310 (= e!51801 (containsKey!140 (t!5183 lt!36407) (_1!1105 lt!35783)))))

(assert (= (and d!19007 (not res!41418)) b!79309))

(assert (= (and b!79309 res!41419) b!79310))

(declare-fun m!80081 () Bool)

(assert (=> b!79310 m!80081))

(assert (=> b!78671 d!19007))

(declare-fun d!19009 () Bool)

(declare-fun res!41420 () Bool)

(declare-fun e!51802 () Bool)

(assert (=> d!19009 (=> res!41420 e!51802)))

(assert (=> d!19009 (= res!41420 (and ((_ is Cons!1529) (toList!748 lt!35867)) (= (_1!1105 (h!2117 (toList!748 lt!35867))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19009 (= (containsKey!140 (toList!748 lt!35867) #b0000000000000000000000000000000000000000000000000000000000000000) e!51802)))

(declare-fun b!79311 () Bool)

(declare-fun e!51803 () Bool)

(assert (=> b!79311 (= e!51802 e!51803)))

(declare-fun res!41421 () Bool)

(assert (=> b!79311 (=> (not res!41421) (not e!51803))))

(assert (=> b!79311 (= res!41421 (and (or (not ((_ is Cons!1529) (toList!748 lt!35867))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35867))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1529) (toList!748 lt!35867)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35867))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79312 () Bool)

(assert (=> b!79312 (= e!51803 (containsKey!140 (t!5183 (toList!748 lt!35867)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19009 (not res!41420)) b!79311))

(assert (= (and b!79311 res!41421) b!79312))

(declare-fun m!80083 () Bool)

(assert (=> b!79312 m!80083))

(assert (=> d!18487 d!19009))

(declare-fun b!79314 () Bool)

(declare-fun e!51804 () Option!142)

(declare-fun e!51805 () Option!142)

(assert (=> b!79314 (= e!51804 e!51805)))

(declare-fun c!12296 () Bool)

(assert (=> b!79314 (= c!12296 (and ((_ is Cons!1529) (toList!748 lt!36175)) (not (= (_1!1105 (h!2117 (toList!748 lt!36175))) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79313 () Bool)

(assert (=> b!79313 (= e!51804 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36175)))))))

(declare-fun b!79315 () Bool)

(assert (=> b!79315 (= e!51805 (getValueByKey!136 (t!5183 (toList!748 lt!36175)) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79316 () Bool)

(assert (=> b!79316 (= e!51805 None!140)))

(declare-fun d!19011 () Bool)

(declare-fun c!12295 () Bool)

(assert (=> d!19011 (= c!12295 (and ((_ is Cons!1529) (toList!748 lt!36175)) (= (_1!1105 (h!2117 (toList!748 lt!36175))) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19011 (= (getValueByKey!136 (toList!748 lt!36175) (_1!1105 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!51804)))

(assert (= (and d!19011 c!12295) b!79313))

(assert (= (and d!19011 (not c!12295)) b!79314))

(assert (= (and b!79314 c!12296) b!79315))

(assert (= (and b!79314 (not c!12296)) b!79316))

(declare-fun m!80085 () Bool)

(assert (=> b!79315 m!80085))

(assert (=> b!78428 d!19011))

(declare-fun b!79318 () Bool)

(declare-fun e!51806 () Option!142)

(declare-fun e!51807 () Option!142)

(assert (=> b!79318 (= e!51806 e!51807)))

(declare-fun c!12298 () Bool)

(assert (=> b!79318 (= c!12298 (and ((_ is Cons!1529) (t!5183 lt!35892)) (not (= (_1!1105 (h!2117 (t!5183 lt!35892))) (_1!1105 lt!35783)))))))

(declare-fun b!79317 () Bool)

(assert (=> b!79317 (= e!51806 (Some!141 (_2!1105 (h!2117 (t!5183 lt!35892)))))))

(declare-fun b!79319 () Bool)

(assert (=> b!79319 (= e!51807 (getValueByKey!136 (t!5183 (t!5183 lt!35892)) (_1!1105 lt!35783)))))

(declare-fun b!79320 () Bool)

(assert (=> b!79320 (= e!51807 None!140)))

(declare-fun d!19013 () Bool)

(declare-fun c!12297 () Bool)

(assert (=> d!19013 (= c!12297 (and ((_ is Cons!1529) (t!5183 lt!35892)) (= (_1!1105 (h!2117 (t!5183 lt!35892))) (_1!1105 lt!35783))))))

(assert (=> d!19013 (= (getValueByKey!136 (t!5183 lt!35892) (_1!1105 lt!35783)) e!51806)))

(assert (= (and d!19013 c!12297) b!79317))

(assert (= (and d!19013 (not c!12297)) b!79318))

(assert (= (and b!79318 c!12298) b!79319))

(assert (= (and b!79318 (not c!12298)) b!79320))

(declare-fun m!80087 () Bool)

(assert (=> b!79319 m!80087))

(assert (=> b!78664 d!19013))

(declare-fun d!19015 () Bool)

(assert (=> d!19015 (= (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78717 d!19015))

(declare-fun d!19017 () Bool)

(declare-fun e!51809 () Bool)

(assert (=> d!19017 e!51809))

(declare-fun res!41422 () Bool)

(assert (=> d!19017 (=> res!41422 e!51809)))

(declare-fun lt!36753 () Bool)

(assert (=> d!19017 (= res!41422 (not lt!36753))))

(declare-fun lt!36754 () Bool)

(assert (=> d!19017 (= lt!36753 lt!36754)))

(declare-fun lt!36755 () Unit!2263)

(declare-fun e!51808 () Unit!2263)

(assert (=> d!19017 (= lt!36755 e!51808)))

(declare-fun c!12299 () Bool)

(assert (=> d!19017 (= c!12299 lt!36754)))

(assert (=> d!19017 (= lt!36754 (containsKey!140 (toList!748 lt!36461) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!19017 (= (contains!745 lt!36461 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36753)))

(declare-fun b!79321 () Bool)

(declare-fun lt!36756 () Unit!2263)

(assert (=> b!79321 (= e!51808 lt!36756)))

(assert (=> b!79321 (= lt!36756 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36461) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> b!79321 (isDefined!90 (getValueByKey!136 (toList!748 lt!36461) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79322 () Bool)

(declare-fun Unit!2314 () Unit!2263)

(assert (=> b!79322 (= e!51808 Unit!2314)))

(declare-fun b!79323 () Bool)

(assert (=> b!79323 (= e!51809 (isDefined!90 (getValueByKey!136 (toList!748 lt!36461) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19017 c!12299) b!79321))

(assert (= (and d!19017 (not c!12299)) b!79322))

(assert (= (and d!19017 (not res!41422)) b!79323))

(declare-fun m!80089 () Bool)

(assert (=> d!19017 m!80089))

(declare-fun m!80091 () Bool)

(assert (=> b!79321 m!80091))

(assert (=> b!79321 m!79075))

(assert (=> b!79321 m!79075))

(declare-fun m!80093 () Bool)

(assert (=> b!79321 m!80093))

(assert (=> b!79323 m!79075))

(assert (=> b!79323 m!79075))

(assert (=> b!79323 m!80093))

(assert (=> d!18699 d!19017))

(declare-fun b!79325 () Bool)

(declare-fun e!51810 () Option!142)

(declare-fun e!51811 () Option!142)

(assert (=> b!79325 (= e!51810 e!51811)))

(declare-fun c!12301 () Bool)

(assert (=> b!79325 (= c!12301 (and ((_ is Cons!1529) lt!36458) (not (= (_1!1105 (h!2117 lt!36458)) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79324 () Bool)

(assert (=> b!79324 (= e!51810 (Some!141 (_2!1105 (h!2117 lt!36458))))))

(declare-fun b!79326 () Bool)

(assert (=> b!79326 (= e!51811 (getValueByKey!136 (t!5183 lt!36458) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79327 () Bool)

(assert (=> b!79327 (= e!51811 None!140)))

(declare-fun d!19019 () Bool)

(declare-fun c!12300 () Bool)

(assert (=> d!19019 (= c!12300 (and ((_ is Cons!1529) lt!36458) (= (_1!1105 (h!2117 lt!36458)) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19019 (= (getValueByKey!136 lt!36458 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!51810)))

(assert (= (and d!19019 c!12300) b!79324))

(assert (= (and d!19019 (not c!12300)) b!79325))

(assert (= (and b!79325 c!12301) b!79326))

(assert (= (and b!79325 (not c!12301)) b!79327))

(declare-fun m!80095 () Bool)

(assert (=> b!79326 m!80095))

(assert (=> d!18699 d!19019))

(declare-fun d!19021 () Bool)

(assert (=> d!19021 (= (getValueByKey!136 lt!36458 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36757 () Unit!2263)

(assert (=> d!19021 (= lt!36757 (choose!468 lt!36458 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun e!51812 () Bool)

(assert (=> d!19021 e!51812))

(declare-fun res!41423 () Bool)

(assert (=> d!19021 (=> (not res!41423) (not e!51812))))

(assert (=> d!19021 (= res!41423 (isStrictlySorted!290 lt!36458))))

(assert (=> d!19021 (= (lemmaContainsTupThenGetReturnValue!55 lt!36458 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36757)))

(declare-fun b!79328 () Bool)

(declare-fun res!41424 () Bool)

(assert (=> b!79328 (=> (not res!41424) (not e!51812))))

(assert (=> b!79328 (= res!41424 (containsKey!140 lt!36458 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79329 () Bool)

(assert (=> b!79329 (= e!51812 (contains!748 lt!36458 (tuple2!2191 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19021 res!41423) b!79328))

(assert (= (and b!79328 res!41424) b!79329))

(assert (=> d!19021 m!79069))

(declare-fun m!80097 () Bool)

(assert (=> d!19021 m!80097))

(declare-fun m!80099 () Bool)

(assert (=> d!19021 m!80099))

(declare-fun m!80101 () Bool)

(assert (=> b!79328 m!80101))

(declare-fun m!80103 () Bool)

(assert (=> b!79329 m!80103))

(assert (=> d!18699 d!19021))

(declare-fun b!79330 () Bool)

(declare-fun c!12302 () Bool)

(assert (=> b!79330 (= c!12302 (and ((_ is Cons!1529) (toList!748 call!7099)) (bvsgt (_1!1105 (h!2117 (toList!748 call!7099))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun e!51816 () List!1533)

(declare-fun e!51813 () List!1533)

(assert (=> b!79330 (= e!51816 e!51813)))

(declare-fun c!12303 () Bool)

(declare-fun call!7315 () List!1533)

(declare-fun bm!7310 () Bool)

(declare-fun e!51815 () List!1533)

(assert (=> bm!7310 (= call!7315 ($colon$colon!68 e!51815 (ite c!12303 (h!2117 (toList!748 call!7099)) (tuple2!2191 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun c!12304 () Bool)

(assert (=> bm!7310 (= c!12304 c!12303)))

(declare-fun d!19023 () Bool)

(declare-fun e!51817 () Bool)

(assert (=> d!19023 e!51817))

(declare-fun res!41425 () Bool)

(assert (=> d!19023 (=> (not res!41425) (not e!51817))))

(declare-fun lt!36758 () List!1533)

(assert (=> d!19023 (= res!41425 (isStrictlySorted!290 lt!36758))))

(declare-fun e!51814 () List!1533)

(assert (=> d!19023 (= lt!36758 e!51814)))

(assert (=> d!19023 (= c!12303 (and ((_ is Cons!1529) (toList!748 call!7099)) (bvslt (_1!1105 (h!2117 (toList!748 call!7099))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19023 (isStrictlySorted!290 (toList!748 call!7099))))

(assert (=> d!19023 (= (insertStrictlySorted!57 (toList!748 call!7099) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36758)))

(declare-fun c!12305 () Bool)

(declare-fun b!79331 () Bool)

(assert (=> b!79331 (= e!51815 (ite c!12305 (t!5183 (toList!748 call!7099)) (ite c!12302 (Cons!1529 (h!2117 (toList!748 call!7099)) (t!5183 (toList!748 call!7099))) Nil!1530)))))

(declare-fun bm!7311 () Bool)

(declare-fun call!7314 () List!1533)

(assert (=> bm!7311 (= call!7314 call!7315)))

(declare-fun b!79332 () Bool)

(assert (=> b!79332 (= e!51814 call!7315)))

(declare-fun b!79333 () Bool)

(declare-fun res!41426 () Bool)

(assert (=> b!79333 (=> (not res!41426) (not e!51817))))

(assert (=> b!79333 (= res!41426 (containsKey!140 lt!36758 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79334 () Bool)

(declare-fun call!7313 () List!1533)

(assert (=> b!79334 (= e!51813 call!7313)))

(declare-fun b!79335 () Bool)

(assert (=> b!79335 (= e!51816 call!7314)))

(declare-fun b!79336 () Bool)

(assert (=> b!79336 (= e!51814 e!51816)))

(assert (=> b!79336 (= c!12305 (and ((_ is Cons!1529) (toList!748 call!7099)) (= (_1!1105 (h!2117 (toList!748 call!7099))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun bm!7312 () Bool)

(assert (=> bm!7312 (= call!7313 call!7314)))

(declare-fun b!79337 () Bool)

(assert (=> b!79337 (= e!51815 (insertStrictlySorted!57 (t!5183 (toList!748 call!7099)) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79338 () Bool)

(assert (=> b!79338 (= e!51817 (contains!748 lt!36758 (tuple2!2191 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79339 () Bool)

(assert (=> b!79339 (= e!51813 call!7313)))

(assert (= (and d!19023 c!12303) b!79332))

(assert (= (and d!19023 (not c!12303)) b!79336))

(assert (= (and b!79336 c!12305) b!79335))

(assert (= (and b!79336 (not c!12305)) b!79330))

(assert (= (and b!79330 c!12302) b!79339))

(assert (= (and b!79330 (not c!12302)) b!79334))

(assert (= (or b!79339 b!79334) bm!7312))

(assert (= (or b!79335 bm!7312) bm!7311))

(assert (= (or b!79332 bm!7311) bm!7310))

(assert (= (and bm!7310 c!12304) b!79337))

(assert (= (and bm!7310 (not c!12304)) b!79331))

(assert (= (and d!19023 res!41425) b!79333))

(assert (= (and b!79333 res!41426) b!79338))

(declare-fun m!80105 () Bool)

(assert (=> b!79333 m!80105))

(declare-fun m!80107 () Bool)

(assert (=> b!79338 m!80107))

(declare-fun m!80109 () Bool)

(assert (=> d!19023 m!80109))

(declare-fun m!80111 () Bool)

(assert (=> d!19023 m!80111))

(declare-fun m!80113 () Bool)

(assert (=> bm!7310 m!80113))

(declare-fun m!80115 () Bool)

(assert (=> b!79337 m!80115))

(assert (=> d!18699 d!19023))

(declare-fun d!19025 () Bool)

(declare-fun lt!36759 () Bool)

(assert (=> d!19025 (= lt!36759 (select (content!83 Nil!1531) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!51819 () Bool)

(assert (=> d!19025 (= lt!36759 e!51819)))

(declare-fun res!41428 () Bool)

(assert (=> d!19025 (=> (not res!41428) (not e!51819))))

(assert (=> d!19025 (= res!41428 ((_ is Cons!1530) Nil!1531))))

(assert (=> d!19025 (= (contains!747 Nil!1531 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) lt!36759)))

(declare-fun b!79340 () Bool)

(declare-fun e!51818 () Bool)

(assert (=> b!79340 (= e!51819 e!51818)))

(declare-fun res!41427 () Bool)

(assert (=> b!79340 (=> res!41427 e!51818)))

(assert (=> b!79340 (= res!41427 (= (h!2118 Nil!1531) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79341 () Bool)

(assert (=> b!79341 (= e!51818 (contains!747 (t!5184 Nil!1531) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!19025 res!41428) b!79340))

(assert (= (and b!79340 (not res!41427)) b!79341))

(assert (=> d!19025 m!78365))

(assert (=> d!19025 m!78153))

(declare-fun m!80117 () Bool)

(assert (=> d!19025 m!80117))

(assert (=> b!79341 m!78153))

(declare-fun m!80119 () Bool)

(assert (=> b!79341 m!80119))

(assert (=> b!78281 d!19025))

(declare-fun d!19027 () Bool)

(declare-fun res!41429 () Bool)

(declare-fun e!51820 () Bool)

(assert (=> d!19027 (=> res!41429 e!51820)))

(assert (=> d!19027 (= res!41429 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) lt!35967)))))

(assert (=> d!19027 (= (containsKey!140 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35967) e!51820)))

(declare-fun b!79342 () Bool)

(declare-fun e!51821 () Bool)

(assert (=> b!79342 (= e!51820 e!51821)))

(declare-fun res!41430 () Bool)

(assert (=> b!79342 (=> (not res!41430) (not e!51821))))

(assert (=> b!79342 (= res!41430 (and (or (not ((_ is Cons!1529) (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) (bvsle (_1!1105 (h!2117 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) lt!35967)) ((_ is Cons!1529) (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (bvslt (_1!1105 (h!2117 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) lt!35967)))))

(declare-fun b!79343 () Bool)

(assert (=> b!79343 (= e!51821 (containsKey!140 (t!5183 (toList!748 (+!109 lt!35970 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) lt!35967))))

(assert (= (and d!19027 (not res!41429)) b!79342))

(assert (= (and b!79342 res!41430) b!79343))

(declare-fun m!80121 () Bool)

(assert (=> b!79343 m!80121))

(assert (=> d!18557 d!19027))

(declare-fun d!19029 () Bool)

(declare-fun res!41431 () Bool)

(declare-fun e!51822 () Bool)

(assert (=> d!19029 (=> res!41431 e!51822)))

(assert (=> d!19029 (= res!41431 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35787))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35787)))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!19029 (= (containsKey!140 (t!5183 (toList!748 lt!35787)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) e!51822)))

(declare-fun b!79344 () Bool)

(declare-fun e!51823 () Bool)

(assert (=> b!79344 (= e!51822 e!51823)))

(declare-fun res!41432 () Bool)

(assert (=> b!79344 (=> (not res!41432) (not e!51823))))

(assert (=> b!79344 (= res!41432 (and (or (not ((_ is Cons!1529) (t!5183 (toList!748 lt!35787)))) (bvsle (_1!1105 (h!2117 (t!5183 (toList!748 lt!35787)))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))) ((_ is Cons!1529) (t!5183 (toList!748 lt!35787))) (bvslt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35787)))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(declare-fun b!79345 () Bool)

(assert (=> b!79345 (= e!51823 (containsKey!140 (t!5183 (t!5183 (toList!748 lt!35787))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!19029 (not res!41431)) b!79344))

(assert (= (and b!79344 res!41432) b!79345))

(assert (=> b!79345 m!77749))

(declare-fun m!80123 () Bool)

(assert (=> b!79345 m!80123))

(assert (=> b!78360 d!19029))

(declare-fun d!19031 () Bool)

(declare-fun res!41433 () Bool)

(declare-fun e!51824 () Bool)

(assert (=> d!19031 (=> res!41433 e!51824)))

(assert (=> d!19031 (= res!41433 (and ((_ is Cons!1529) lt!36165) (= (_1!1105 (h!2117 lt!36165)) (_1!1105 lt!35783))))))

(assert (=> d!19031 (= (containsKey!140 lt!36165 (_1!1105 lt!35783)) e!51824)))

(declare-fun b!79346 () Bool)

(declare-fun e!51825 () Bool)

(assert (=> b!79346 (= e!51824 e!51825)))

(declare-fun res!41434 () Bool)

(assert (=> b!79346 (=> (not res!41434) (not e!51825))))

(assert (=> b!79346 (= res!41434 (and (or (not ((_ is Cons!1529) lt!36165)) (bvsle (_1!1105 (h!2117 lt!36165)) (_1!1105 lt!35783))) ((_ is Cons!1529) lt!36165) (bvslt (_1!1105 (h!2117 lt!36165)) (_1!1105 lt!35783))))))

(declare-fun b!79347 () Bool)

(assert (=> b!79347 (= e!51825 (containsKey!140 (t!5183 lt!36165) (_1!1105 lt!35783)))))

(assert (= (and d!19031 (not res!41433)) b!79346))

(assert (= (and b!79346 res!41434) b!79347))

(declare-fun m!80125 () Bool)

(assert (=> b!79347 m!80125))

(assert (=> b!78414 d!19031))

(declare-fun b!79348 () Bool)

(declare-fun c!12306 () Bool)

(assert (=> b!79348 (= c!12306 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35777))) (bvsgt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35777)))) (_1!1105 lt!35784))))))

(declare-fun e!51829 () List!1533)

(declare-fun e!51826 () List!1533)

(assert (=> b!79348 (= e!51829 e!51826)))

(declare-fun e!51828 () List!1533)

(declare-fun bm!7313 () Bool)

(declare-fun call!7318 () List!1533)

(declare-fun c!12307 () Bool)

(assert (=> bm!7313 (= call!7318 ($colon$colon!68 e!51828 (ite c!12307 (h!2117 (t!5183 (toList!748 lt!35777))) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784)))))))

(declare-fun c!12308 () Bool)

(assert (=> bm!7313 (= c!12308 c!12307)))

(declare-fun d!19033 () Bool)

(declare-fun e!51830 () Bool)

(assert (=> d!19033 e!51830))

(declare-fun res!41435 () Bool)

(assert (=> d!19033 (=> (not res!41435) (not e!51830))))

(declare-fun lt!36760 () List!1533)

(assert (=> d!19033 (= res!41435 (isStrictlySorted!290 lt!36760))))

(declare-fun e!51827 () List!1533)

(assert (=> d!19033 (= lt!36760 e!51827)))

(assert (=> d!19033 (= c!12307 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35777))) (bvslt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35777)))) (_1!1105 lt!35784))))))

(assert (=> d!19033 (isStrictlySorted!290 (t!5183 (toList!748 lt!35777)))))

(assert (=> d!19033 (= (insertStrictlySorted!57 (t!5183 (toList!748 lt!35777)) (_1!1105 lt!35784) (_2!1105 lt!35784)) lt!36760)))

(declare-fun b!79349 () Bool)

(declare-fun c!12309 () Bool)

(assert (=> b!79349 (= e!51828 (ite c!12309 (t!5183 (t!5183 (toList!748 lt!35777))) (ite c!12306 (Cons!1529 (h!2117 (t!5183 (toList!748 lt!35777))) (t!5183 (t!5183 (toList!748 lt!35777)))) Nil!1530)))))

(declare-fun bm!7314 () Bool)

(declare-fun call!7317 () List!1533)

(assert (=> bm!7314 (= call!7317 call!7318)))

(declare-fun b!79350 () Bool)

(assert (=> b!79350 (= e!51827 call!7318)))

(declare-fun b!79351 () Bool)

(declare-fun res!41436 () Bool)

(assert (=> b!79351 (=> (not res!41436) (not e!51830))))

(assert (=> b!79351 (= res!41436 (containsKey!140 lt!36760 (_1!1105 lt!35784)))))

(declare-fun b!79352 () Bool)

(declare-fun call!7316 () List!1533)

(assert (=> b!79352 (= e!51826 call!7316)))

(declare-fun b!79353 () Bool)

(assert (=> b!79353 (= e!51829 call!7317)))

(declare-fun b!79354 () Bool)

(assert (=> b!79354 (= e!51827 e!51829)))

(assert (=> b!79354 (= c!12309 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35777))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35777)))) (_1!1105 lt!35784))))))

(declare-fun bm!7315 () Bool)

(assert (=> bm!7315 (= call!7316 call!7317)))

(declare-fun b!79355 () Bool)

(assert (=> b!79355 (= e!51828 (insertStrictlySorted!57 (t!5183 (t!5183 (toList!748 lt!35777))) (_1!1105 lt!35784) (_2!1105 lt!35784)))))

(declare-fun b!79356 () Bool)

(assert (=> b!79356 (= e!51830 (contains!748 lt!36760 (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun b!79357 () Bool)

(assert (=> b!79357 (= e!51826 call!7316)))

(assert (= (and d!19033 c!12307) b!79350))

(assert (= (and d!19033 (not c!12307)) b!79354))

(assert (= (and b!79354 c!12309) b!79353))

(assert (= (and b!79354 (not c!12309)) b!79348))

(assert (= (and b!79348 c!12306) b!79357))

(assert (= (and b!79348 (not c!12306)) b!79352))

(assert (= (or b!79357 b!79352) bm!7315))

(assert (= (or b!79353 bm!7315) bm!7314))

(assert (= (or b!79350 bm!7314) bm!7313))

(assert (= (and bm!7313 c!12308) b!79355))

(assert (= (and bm!7313 (not c!12308)) b!79349))

(assert (= (and d!19033 res!41435) b!79351))

(assert (= (and b!79351 res!41436) b!79356))

(declare-fun m!80127 () Bool)

(assert (=> b!79351 m!80127))

(declare-fun m!80129 () Bool)

(assert (=> b!79356 m!80129))

(declare-fun m!80131 () Bool)

(assert (=> d!19033 m!80131))

(declare-fun m!80133 () Bool)

(assert (=> d!19033 m!80133))

(declare-fun m!80135 () Bool)

(assert (=> bm!7313 m!80135))

(declare-fun m!80137 () Bool)

(assert (=> b!79355 m!80137))

(assert (=> b!78700 d!19033))

(assert (=> d!18673 d!18671))

(declare-fun d!19035 () Bool)

(assert (=> d!19035 (= (getValueByKey!136 lt!35896 (_1!1105 lt!35784)) (Some!141 (_2!1105 lt!35784)))))

(assert (=> d!19035 true))

(declare-fun _$22!392 () Unit!2263)

(assert (=> d!19035 (= (choose!468 lt!35896 (_1!1105 lt!35784) (_2!1105 lt!35784)) _$22!392)))

(declare-fun bs!3346 () Bool)

(assert (= bs!3346 d!19035))

(assert (=> bs!3346 m!77969))

(assert (=> d!18673 d!19035))

(declare-fun d!19037 () Bool)

(declare-fun res!41437 () Bool)

(declare-fun e!51831 () Bool)

(assert (=> d!19037 (=> res!41437 e!51831)))

(assert (=> d!19037 (= res!41437 (or ((_ is Nil!1530) lt!35896) ((_ is Nil!1530) (t!5183 lt!35896))))))

(assert (=> d!19037 (= (isStrictlySorted!290 lt!35896) e!51831)))

(declare-fun b!79358 () Bool)

(declare-fun e!51832 () Bool)

(assert (=> b!79358 (= e!51831 e!51832)))

(declare-fun res!41438 () Bool)

(assert (=> b!79358 (=> (not res!41438) (not e!51832))))

(assert (=> b!79358 (= res!41438 (bvslt (_1!1105 (h!2117 lt!35896)) (_1!1105 (h!2117 (t!5183 lt!35896)))))))

(declare-fun b!79359 () Bool)

(assert (=> b!79359 (= e!51832 (isStrictlySorted!290 (t!5183 lt!35896)))))

(assert (= (and d!19037 (not res!41437)) b!79358))

(assert (= (and b!79358 res!41438) b!79359))

(declare-fun m!80139 () Bool)

(assert (=> b!79359 m!80139))

(assert (=> d!18673 d!19037))

(declare-fun d!19039 () Bool)

(assert (=> d!19039 (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!36761 () Unit!2263)

(assert (=> d!19039 (= lt!36761 (choose!471 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!51833 () Bool)

(assert (=> d!19039 e!51833))

(declare-fun res!41439 () Bool)

(assert (=> d!19039 (=> (not res!41439) (not e!51833))))

(assert (=> d!19039 (= res!41439 (isStrictlySorted!290 (toList!748 lt!35969)))))

(assert (=> d!19039 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36761)))

(declare-fun b!79360 () Bool)

(assert (=> b!79360 (= e!51833 (containsKey!140 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19039 res!41439) b!79360))

(assert (=> d!19039 m!77883))

(assert (=> d!19039 m!78147))

(assert (=> d!19039 m!78147))

(assert (=> d!19039 m!78149))

(assert (=> d!19039 m!77883))

(declare-fun m!80141 () Bool)

(assert (=> d!19039 m!80141))

(assert (=> d!19039 m!79477))

(assert (=> b!79360 m!77883))

(assert (=> b!79360 m!78143))

(assert (=> b!78239 d!19039))

(declare-fun d!19041 () Bool)

(assert (=> d!19041 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3347 () Bool)

(assert (= bs!3347 d!19041))

(assert (=> bs!3347 m!78147))

(declare-fun m!80143 () Bool)

(assert (=> bs!3347 m!80143))

(assert (=> b!78239 d!19041))

(declare-fun b!79362 () Bool)

(declare-fun e!51834 () Option!142)

(declare-fun e!51835 () Option!142)

(assert (=> b!79362 (= e!51834 e!51835)))

(declare-fun c!12311 () Bool)

(assert (=> b!79362 (= c!12311 (and ((_ is Cons!1529) (toList!748 lt!35969)) (not (= (_1!1105 (h!2117 (toList!748 lt!35969))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!79361 () Bool)

(assert (=> b!79361 (= e!51834 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35969)))))))

(declare-fun b!79363 () Bool)

(assert (=> b!79363 (= e!51835 (getValueByKey!136 (t!5183 (toList!748 lt!35969)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!79364 () Bool)

(assert (=> b!79364 (= e!51835 None!140)))

(declare-fun c!12310 () Bool)

(declare-fun d!19043 () Bool)

(assert (=> d!19043 (= c!12310 (and ((_ is Cons!1529) (toList!748 lt!35969)) (= (_1!1105 (h!2117 (toList!748 lt!35969))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19043 (= (getValueByKey!136 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!51834)))

(assert (= (and d!19043 c!12310) b!79361))

(assert (= (and d!19043 (not c!12310)) b!79362))

(assert (= (and b!79362 c!12311) b!79363))

(assert (= (and b!79362 (not c!12311)) b!79364))

(assert (=> b!79363 m!77883))

(declare-fun m!80145 () Bool)

(assert (=> b!79363 m!80145))

(assert (=> b!78239 d!19043))

(declare-fun b!79365 () Bool)

(declare-fun e!51837 () (_ BitVec 32))

(declare-fun call!7319 () (_ BitVec 32))

(assert (=> b!79365 (= e!51837 (bvadd #b00000000000000000000000000000001 call!7319))))

(declare-fun b!79366 () Bool)

(declare-fun e!51836 () (_ BitVec 32))

(assert (=> b!79366 (= e!51836 #b00000000000000000000000000000000)))

(declare-fun bm!7316 () Bool)

(assert (=> bm!7316 (= call!7319 (arrayCountValidKeys!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!79367 () Bool)

(assert (=> b!79367 (= e!51837 call!7319)))

(declare-fun b!79368 () Bool)

(assert (=> b!79368 (= e!51836 e!51837)))

(declare-fun c!12312 () Bool)

(assert (=> b!79368 (= c!12312 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!19045 () Bool)

(declare-fun lt!36762 () (_ BitVec 32))

(assert (=> d!19045 (and (bvsge lt!36762 #b00000000000000000000000000000000) (bvsle lt!36762 (bvsub (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!19045 (= lt!36762 e!51836)))

(declare-fun c!12313 () Bool)

(assert (=> d!19045 (= c!12313 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> d!19045 (and (bvsle #b00000000000000000000000000000000 (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> d!19045 (= (arrayCountValidKeys!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000000 (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))) lt!36762)))

(assert (= (and d!19045 c!12313) b!79366))

(assert (= (and d!19045 (not c!12313)) b!79368))

(assert (= (and b!79368 c!12312) b!79365))

(assert (= (and b!79368 (not c!12312)) b!79367))

(assert (= (or b!79365 b!79367) bm!7316))

(declare-fun m!80147 () Bool)

(assert (=> bm!7316 m!80147))

(declare-fun m!80149 () Bool)

(assert (=> b!79368 m!80149))

(assert (=> b!79368 m!80149))

(declare-fun m!80151 () Bool)

(assert (=> b!79368 m!80151))

(assert (=> b!78298 d!19045))

(assert (=> b!78661 d!18759))

(assert (=> b!78661 d!18501))

(declare-fun d!19047 () Bool)

(assert (=> d!19047 (= (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35974)) (v!2598 (getValueByKey!136 (toList!748 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35974)))))

(assert (=> d!18547 d!19047))

(declare-fun b!79370 () Bool)

(declare-fun e!51838 () Option!142)

(declare-fun e!51839 () Option!142)

(assert (=> b!79370 (= e!51838 e!51839)))

(declare-fun c!12315 () Bool)

(assert (=> b!79370 (= c!12315 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (not (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))) lt!35974))))))

(declare-fun b!79369 () Bool)

(assert (=> b!79369 (= e!51838 (Some!141 (_2!1105 (h!2117 (toList!748 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))))

(declare-fun b!79371 () Bool)

(assert (=> b!79371 (= e!51839 (getValueByKey!136 (t!5183 (toList!748 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) lt!35974))))

(declare-fun b!79372 () Bool)

(assert (=> b!79372 (= e!51839 None!140)))

(declare-fun c!12314 () Bool)

(declare-fun d!19049 () Bool)

(assert (=> d!19049 (= c!12314 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))) lt!35974)))))

(assert (=> d!19049 (= (getValueByKey!136 (toList!748 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35974) e!51838)))

(assert (= (and d!19049 c!12314) b!79369))

(assert (= (and d!19049 (not c!12314)) b!79370))

(assert (= (and b!79370 c!12315) b!79371))

(assert (= (and b!79370 (not c!12315)) b!79372))

(declare-fun m!80153 () Bool)

(assert (=> b!79371 m!80153))

(assert (=> d!18547 d!19049))

(declare-fun d!19051 () Bool)

(declare-fun e!51841 () Bool)

(assert (=> d!19051 e!51841))

(declare-fun res!41440 () Bool)

(assert (=> d!19051 (=> res!41440 e!51841)))

(declare-fun lt!36763 () Bool)

(assert (=> d!19051 (= res!41440 (not lt!36763))))

(declare-fun lt!36764 () Bool)

(assert (=> d!19051 (= lt!36763 lt!36764)))

(declare-fun lt!36765 () Unit!2263)

(declare-fun e!51840 () Unit!2263)

(assert (=> d!19051 (= lt!36765 e!51840)))

(declare-fun c!12316 () Bool)

(assert (=> d!19051 (= c!12316 lt!36764)))

(assert (=> d!19051 (= lt!36764 (containsKey!140 (toList!748 lt!36303) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!19051 (= (contains!745 lt!36303 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36763)))

(declare-fun b!79373 () Bool)

(declare-fun lt!36766 () Unit!2263)

(assert (=> b!79373 (= e!51840 lt!36766)))

(assert (=> b!79373 (= lt!36766 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36303) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> b!79373 (isDefined!90 (getValueByKey!136 (toList!748 lt!36303) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79374 () Bool)

(declare-fun Unit!2315 () Unit!2263)

(assert (=> b!79374 (= e!51840 Unit!2315)))

(declare-fun b!79375 () Bool)

(assert (=> b!79375 (= e!51841 (isDefined!90 (getValueByKey!136 (toList!748 lt!36303) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19051 c!12316) b!79373))

(assert (= (and d!19051 (not c!12316)) b!79374))

(assert (= (and d!19051 (not res!41440)) b!79375))

(declare-fun m!80155 () Bool)

(assert (=> d!19051 m!80155))

(declare-fun m!80157 () Bool)

(assert (=> b!79373 m!80157))

(assert (=> b!79373 m!78819))

(assert (=> b!79373 m!78819))

(declare-fun m!80159 () Bool)

(assert (=> b!79373 m!80159))

(assert (=> b!79375 m!78819))

(assert (=> b!79375 m!78819))

(assert (=> b!79375 m!80159))

(assert (=> d!18643 d!19051))

(declare-fun b!79377 () Bool)

(declare-fun e!51842 () Option!142)

(declare-fun e!51843 () Option!142)

(assert (=> b!79377 (= e!51842 e!51843)))

(declare-fun c!12318 () Bool)

(assert (=> b!79377 (= c!12318 (and ((_ is Cons!1529) lt!36300) (not (= (_1!1105 (h!2117 lt!36300)) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79376 () Bool)

(assert (=> b!79376 (= e!51842 (Some!141 (_2!1105 (h!2117 lt!36300))))))

(declare-fun b!79378 () Bool)

(assert (=> b!79378 (= e!51843 (getValueByKey!136 (t!5183 lt!36300) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79379 () Bool)

(assert (=> b!79379 (= e!51843 None!140)))

(declare-fun d!19053 () Bool)

(declare-fun c!12317 () Bool)

(assert (=> d!19053 (= c!12317 (and ((_ is Cons!1529) lt!36300) (= (_1!1105 (h!2117 lt!36300)) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19053 (= (getValueByKey!136 lt!36300 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!51842)))

(assert (= (and d!19053 c!12317) b!79376))

(assert (= (and d!19053 (not c!12317)) b!79377))

(assert (= (and b!79377 c!12318) b!79378))

(assert (= (and b!79377 (not c!12318)) b!79379))

(declare-fun m!80161 () Bool)

(assert (=> b!79378 m!80161))

(assert (=> d!18643 d!19053))

(declare-fun d!19055 () Bool)

(assert (=> d!19055 (= (getValueByKey!136 lt!36300 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36767 () Unit!2263)

(assert (=> d!19055 (= lt!36767 (choose!468 lt!36300 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun e!51844 () Bool)

(assert (=> d!19055 e!51844))

(declare-fun res!41441 () Bool)

(assert (=> d!19055 (=> (not res!41441) (not e!51844))))

(assert (=> d!19055 (= res!41441 (isStrictlySorted!290 lt!36300))))

(assert (=> d!19055 (= (lemmaContainsTupThenGetReturnValue!55 lt!36300 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36767)))

(declare-fun b!79380 () Bool)

(declare-fun res!41442 () Bool)

(assert (=> b!79380 (=> (not res!41442) (not e!51844))))

(assert (=> b!79380 (= res!41442 (containsKey!140 lt!36300 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79381 () Bool)

(assert (=> b!79381 (= e!51844 (contains!748 lt!36300 (tuple2!2191 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19055 res!41441) b!79380))

(assert (= (and b!79380 res!41442) b!79381))

(assert (=> d!19055 m!78813))

(declare-fun m!80163 () Bool)

(assert (=> d!19055 m!80163))

(declare-fun m!80165 () Bool)

(assert (=> d!19055 m!80165))

(declare-fun m!80167 () Bool)

(assert (=> b!79380 m!80167))

(declare-fun m!80169 () Bool)

(assert (=> b!79381 m!80169))

(assert (=> d!18643 d!19055))

(declare-fun b!79382 () Bool)

(declare-fun c!12319 () Bool)

(assert (=> b!79382 (= c!12319 (and ((_ is Cons!1529) (toList!748 lt!35777)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun e!51848 () List!1533)

(declare-fun e!51845 () List!1533)

(assert (=> b!79382 (= e!51848 e!51845)))

(declare-fun call!7322 () List!1533)

(declare-fun c!12320 () Bool)

(declare-fun bm!7317 () Bool)

(declare-fun e!51847 () List!1533)

(assert (=> bm!7317 (= call!7322 ($colon$colon!68 e!51847 (ite c!12320 (h!2117 (toList!748 lt!35777)) (tuple2!2191 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun c!12321 () Bool)

(assert (=> bm!7317 (= c!12321 c!12320)))

(declare-fun d!19057 () Bool)

(declare-fun e!51849 () Bool)

(assert (=> d!19057 e!51849))

(declare-fun res!41443 () Bool)

(assert (=> d!19057 (=> (not res!41443) (not e!51849))))

(declare-fun lt!36768 () List!1533)

(assert (=> d!19057 (= res!41443 (isStrictlySorted!290 lt!36768))))

(declare-fun e!51846 () List!1533)

(assert (=> d!19057 (= lt!36768 e!51846)))

(assert (=> d!19057 (= c!12320 (and ((_ is Cons!1529) (toList!748 lt!35777)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19057 (isStrictlySorted!290 (toList!748 lt!35777))))

(assert (=> d!19057 (= (insertStrictlySorted!57 (toList!748 lt!35777) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36768)))

(declare-fun b!79383 () Bool)

(declare-fun c!12322 () Bool)

(assert (=> b!79383 (= e!51847 (ite c!12322 (t!5183 (toList!748 lt!35777)) (ite c!12319 (Cons!1529 (h!2117 (toList!748 lt!35777)) (t!5183 (toList!748 lt!35777))) Nil!1530)))))

(declare-fun bm!7318 () Bool)

(declare-fun call!7321 () List!1533)

(assert (=> bm!7318 (= call!7321 call!7322)))

(declare-fun b!79384 () Bool)

(assert (=> b!79384 (= e!51846 call!7322)))

(declare-fun b!79385 () Bool)

(declare-fun res!41444 () Bool)

(assert (=> b!79385 (=> (not res!41444) (not e!51849))))

(assert (=> b!79385 (= res!41444 (containsKey!140 lt!36768 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79386 () Bool)

(declare-fun call!7320 () List!1533)

(assert (=> b!79386 (= e!51845 call!7320)))

(declare-fun b!79387 () Bool)

(assert (=> b!79387 (= e!51848 call!7321)))

(declare-fun b!79388 () Bool)

(assert (=> b!79388 (= e!51846 e!51848)))

(assert (=> b!79388 (= c!12322 (and ((_ is Cons!1529) (toList!748 lt!35777)) (= (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun bm!7319 () Bool)

(assert (=> bm!7319 (= call!7320 call!7321)))

(declare-fun b!79389 () Bool)

(assert (=> b!79389 (= e!51847 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35777)) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79390 () Bool)

(assert (=> b!79390 (= e!51849 (contains!748 lt!36768 (tuple2!2191 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79391 () Bool)

(assert (=> b!79391 (= e!51845 call!7320)))

(assert (= (and d!19057 c!12320) b!79384))

(assert (= (and d!19057 (not c!12320)) b!79388))

(assert (= (and b!79388 c!12322) b!79387))

(assert (= (and b!79388 (not c!12322)) b!79382))

(assert (= (and b!79382 c!12319) b!79391))

(assert (= (and b!79382 (not c!12319)) b!79386))

(assert (= (or b!79391 b!79386) bm!7319))

(assert (= (or b!79387 bm!7319) bm!7318))

(assert (= (or b!79384 bm!7318) bm!7317))

(assert (= (and bm!7317 c!12321) b!79389))

(assert (= (and bm!7317 (not c!12321)) b!79383))

(assert (= (and d!19057 res!41443) b!79385))

(assert (= (and b!79385 res!41444) b!79390))

(declare-fun m!80171 () Bool)

(assert (=> b!79385 m!80171))

(declare-fun m!80173 () Bool)

(assert (=> b!79390 m!80173))

(declare-fun m!80175 () Bool)

(assert (=> d!19057 m!80175))

(assert (=> d!19057 m!78393))

(declare-fun m!80177 () Bool)

(assert (=> bm!7317 m!80177))

(declare-fun m!80179 () Bool)

(assert (=> b!79389 m!80179))

(assert (=> d!18643 d!19057))

(assert (=> b!78366 d!18795))

(assert (=> b!78366 d!18489))

(declare-fun b!79392 () Bool)

(declare-fun e!51853 () ListLongMap!1465)

(declare-fun call!7329 () ListLongMap!1465)

(assert (=> b!79392 (= e!51853 (+!109 call!7329 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(declare-fun b!79393 () Bool)

(declare-fun res!41448 () Bool)

(declare-fun e!51862 () Bool)

(assert (=> b!79393 (=> (not res!41448) (not e!51862))))

(declare-fun e!51860 () Bool)

(assert (=> b!79393 (= res!41448 e!51860)))

(declare-fun c!12328 () Bool)

(assert (=> b!79393 (= c!12328 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79394 () Bool)

(declare-fun e!51855 () ListLongMap!1465)

(declare-fun call!7328 () ListLongMap!1465)

(assert (=> b!79394 (= e!51855 call!7328)))

(declare-fun bm!7320 () Bool)

(declare-fun call!7327 () ListLongMap!1465)

(declare-fun call!7325 () ListLongMap!1465)

(assert (=> bm!7320 (= call!7327 call!7325)))

(declare-fun lt!36781 () ListLongMap!1465)

(declare-fun e!51859 () Bool)

(declare-fun b!79395 () Bool)

(assert (=> b!79395 (= e!51859 (= (apply!79 lt!36781 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79395 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))))))

(assert (=> b!79395 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!79396 () Bool)

(declare-fun e!51856 () Bool)

(assert (=> b!79396 (= e!51860 e!51856)))

(declare-fun res!41449 () Bool)

(declare-fun call!7324 () Bool)

(assert (=> b!79396 (= res!41449 call!7324)))

(assert (=> b!79396 (=> (not res!41449) (not e!51856))))

(declare-fun bm!7321 () Bool)

(declare-fun call!7326 () Bool)

(assert (=> bm!7321 (= call!7326 (contains!745 lt!36781 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79398 () Bool)

(declare-fun e!51854 () Bool)

(assert (=> b!79398 (= e!51854 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79399 () Bool)

(declare-fun e!51861 () Unit!2263)

(declare-fun Unit!2316 () Unit!2263)

(assert (=> b!79399 (= e!51861 Unit!2316)))

(declare-fun bm!7322 () Bool)

(assert (=> bm!7322 (= call!7325 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!79400 () Bool)

(declare-fun e!51851 () ListLongMap!1465)

(declare-fun call!7323 () ListLongMap!1465)

(assert (=> b!79400 (= e!51851 call!7323)))

(declare-fun b!79401 () Bool)

(declare-fun e!51850 () Bool)

(assert (=> b!79401 (= e!51862 e!51850)))

(declare-fun c!12324 () Bool)

(assert (=> b!79401 (= c!12324 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79402 () Bool)

(declare-fun lt!36783 () Unit!2263)

(assert (=> b!79402 (= e!51861 lt!36783)))

(declare-fun lt!36782 () ListLongMap!1465)

(assert (=> b!79402 (= lt!36782 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36788 () (_ BitVec 64))

(assert (=> b!79402 (= lt!36788 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36779 () (_ BitVec 64))

(assert (=> b!79402 (= lt!36779 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36773 () Unit!2263)

(assert (=> b!79402 (= lt!36773 (addStillContains!55 lt!36782 lt!36788 (zeroValue!2170 newMap!16) lt!36779))))

(assert (=> b!79402 (contains!745 (+!109 lt!36782 (tuple2!2191 lt!36788 (zeroValue!2170 newMap!16))) lt!36779)))

(declare-fun lt!36778 () Unit!2263)

(assert (=> b!79402 (= lt!36778 lt!36773)))

(declare-fun lt!36789 () ListLongMap!1465)

(assert (=> b!79402 (= lt!36789 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36790 () (_ BitVec 64))

(assert (=> b!79402 (= lt!36790 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36786 () (_ BitVec 64))

(assert (=> b!79402 (= lt!36786 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36777 () Unit!2263)

(assert (=> b!79402 (= lt!36777 (addApplyDifferent!55 lt!36789 lt!36790 (minValue!2170 newMap!16) lt!36786))))

(assert (=> b!79402 (= (apply!79 (+!109 lt!36789 (tuple2!2191 lt!36790 (minValue!2170 newMap!16))) lt!36786) (apply!79 lt!36789 lt!36786))))

(declare-fun lt!36769 () Unit!2263)

(assert (=> b!79402 (= lt!36769 lt!36777)))

(declare-fun lt!36785 () ListLongMap!1465)

(assert (=> b!79402 (= lt!36785 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36771 () (_ BitVec 64))

(assert (=> b!79402 (= lt!36771 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36775 () (_ BitVec 64))

(assert (=> b!79402 (= lt!36775 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36787 () Unit!2263)

(assert (=> b!79402 (= lt!36787 (addApplyDifferent!55 lt!36785 lt!36771 (zeroValue!2170 newMap!16) lt!36775))))

(assert (=> b!79402 (= (apply!79 (+!109 lt!36785 (tuple2!2191 lt!36771 (zeroValue!2170 newMap!16))) lt!36775) (apply!79 lt!36785 lt!36775))))

(declare-fun lt!36774 () Unit!2263)

(assert (=> b!79402 (= lt!36774 lt!36787)))

(declare-fun lt!36770 () ListLongMap!1465)

(assert (=> b!79402 (= lt!36770 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36772 () (_ BitVec 64))

(assert (=> b!79402 (= lt!36772 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36784 () (_ BitVec 64))

(assert (=> b!79402 (= lt!36784 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79402 (= lt!36783 (addApplyDifferent!55 lt!36770 lt!36772 (minValue!2170 newMap!16) lt!36784))))

(assert (=> b!79402 (= (apply!79 (+!109 lt!36770 (tuple2!2191 lt!36772 (minValue!2170 newMap!16))) lt!36784) (apply!79 lt!36770 lt!36784))))

(declare-fun b!79403 () Bool)

(declare-fun e!51852 () Bool)

(assert (=> b!79403 (= e!51852 e!51859)))

(declare-fun res!41447 () Bool)

(assert (=> b!79403 (=> (not res!41447) (not e!51859))))

(assert (=> b!79403 (= res!41447 (contains!745 lt!36781 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79403 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!79404 () Bool)

(assert (=> b!79404 (= e!51853 e!51855)))

(declare-fun c!12325 () Bool)

(assert (=> b!79404 (= c!12325 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7323 () Bool)

(assert (=> bm!7323 (= call!7328 call!7329)))

(declare-fun b!79405 () Bool)

(declare-fun res!41445 () Bool)

(assert (=> b!79405 (=> (not res!41445) (not e!51862))))

(assert (=> b!79405 (= res!41445 e!51852)))

(declare-fun res!41446 () Bool)

(assert (=> b!79405 (=> res!41446 e!51852)))

(declare-fun e!51857 () Bool)

(assert (=> b!79405 (= res!41446 (not e!51857))))

(declare-fun res!41450 () Bool)

(assert (=> b!79405 (=> (not res!41450) (not e!51857))))

(assert (=> b!79405 (= res!41450 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!79406 () Bool)

(declare-fun c!12326 () Bool)

(assert (=> b!79406 (= c!12326 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79406 (= e!51855 e!51851)))

(declare-fun b!79407 () Bool)

(assert (=> b!79407 (= e!51857 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79408 () Bool)

(assert (=> b!79408 (= e!51851 call!7328)))

(declare-fun bm!7324 () Bool)

(declare-fun c!12323 () Bool)

(assert (=> bm!7324 (= call!7329 (+!109 (ite c!12323 call!7325 (ite c!12325 call!7327 call!7323)) (ite (or c!12323 c!12325) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun bm!7325 () Bool)

(assert (=> bm!7325 (= call!7324 (contains!745 lt!36781 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79409 () Bool)

(assert (=> b!79409 (= e!51860 (not call!7324))))

(declare-fun b!79397 () Bool)

(declare-fun e!51858 () Bool)

(assert (=> b!79397 (= e!51850 e!51858)))

(declare-fun res!41452 () Bool)

(assert (=> b!79397 (= res!41452 call!7326)))

(assert (=> b!79397 (=> (not res!41452) (not e!51858))))

(declare-fun d!19059 () Bool)

(assert (=> d!19059 e!51862))

(declare-fun res!41453 () Bool)

(assert (=> d!19059 (=> (not res!41453) (not e!51862))))

(assert (=> d!19059 (= res!41453 (or (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))))

(declare-fun lt!36780 () ListLongMap!1465)

(assert (=> d!19059 (= lt!36781 lt!36780)))

(declare-fun lt!36776 () Unit!2263)

(assert (=> d!19059 (= lt!36776 e!51861)))

(declare-fun c!12327 () Bool)

(assert (=> d!19059 (= c!12327 e!51854)))

(declare-fun res!41451 () Bool)

(assert (=> d!19059 (=> (not res!41451) (not e!51854))))

(assert (=> d!19059 (= res!41451 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!19059 (= lt!36780 e!51853)))

(assert (=> d!19059 (= c!12323 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19059 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19059 (= (getCurrentListMap!435 (_keys!3932 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36781)))

(declare-fun bm!7326 () Bool)

(assert (=> bm!7326 (= call!7323 call!7327)))

(declare-fun b!79410 () Bool)

(assert (=> b!79410 (= e!51858 (= (apply!79 lt!36781 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!79411 () Bool)

(assert (=> b!79411 (= e!51850 (not call!7326))))

(declare-fun b!79412 () Bool)

(assert (=> b!79412 (= e!51856 (= (apply!79 lt!36781 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(assert (= (and d!19059 c!12323) b!79392))

(assert (= (and d!19059 (not c!12323)) b!79404))

(assert (= (and b!79404 c!12325) b!79394))

(assert (= (and b!79404 (not c!12325)) b!79406))

(assert (= (and b!79406 c!12326) b!79408))

(assert (= (and b!79406 (not c!12326)) b!79400))

(assert (= (or b!79408 b!79400) bm!7326))

(assert (= (or b!79394 bm!7326) bm!7320))

(assert (= (or b!79394 b!79408) bm!7323))

(assert (= (or b!79392 bm!7320) bm!7322))

(assert (= (or b!79392 bm!7323) bm!7324))

(assert (= (and d!19059 res!41451) b!79398))

(assert (= (and d!19059 c!12327) b!79402))

(assert (= (and d!19059 (not c!12327)) b!79399))

(assert (= (and d!19059 res!41453) b!79405))

(assert (= (and b!79405 res!41450) b!79407))

(assert (= (and b!79405 (not res!41446)) b!79403))

(assert (= (and b!79403 res!41447) b!79395))

(assert (= (and b!79405 res!41445) b!79393))

(assert (= (and b!79393 c!12328) b!79396))

(assert (= (and b!79393 (not c!12328)) b!79409))

(assert (= (and b!79396 res!41449) b!79412))

(assert (= (or b!79396 b!79409) bm!7325))

(assert (= (and b!79393 res!41448) b!79401))

(assert (= (and b!79401 c!12324) b!79397))

(assert (= (and b!79401 (not c!12324)) b!79411))

(assert (= (and b!79397 res!41452) b!79410))

(assert (= (or b!79397 b!79411) bm!7321))

(declare-fun b_lambda!3555 () Bool)

(assert (=> (not b_lambda!3555) (not b!79395)))

(assert (=> b!79395 t!5191))

(declare-fun b_and!4877 () Bool)

(assert (= b_and!4873 (and (=> t!5191 result!2829) b_and!4877)))

(assert (=> b!79395 t!5193))

(declare-fun b_and!4879 () Bool)

(assert (= b_and!4875 (and (=> t!5193 result!2831) b_and!4879)))

(declare-fun m!80181 () Bool)

(assert (=> bm!7325 m!80181))

(declare-fun m!80183 () Bool)

(assert (=> bm!7322 m!80183))

(declare-fun m!80185 () Bool)

(assert (=> bm!7321 m!80185))

(declare-fun m!80187 () Bool)

(assert (=> b!79402 m!80187))

(declare-fun m!80189 () Bool)

(assert (=> b!79402 m!80189))

(declare-fun m!80191 () Bool)

(assert (=> b!79402 m!80191))

(declare-fun m!80193 () Bool)

(assert (=> b!79402 m!80193))

(declare-fun m!80195 () Bool)

(assert (=> b!79402 m!80195))

(declare-fun m!80197 () Bool)

(assert (=> b!79402 m!80197))

(declare-fun m!80199 () Bool)

(assert (=> b!79402 m!80199))

(assert (=> b!79402 m!80191))

(declare-fun m!80201 () Bool)

(assert (=> b!79402 m!80201))

(declare-fun m!80203 () Bool)

(assert (=> b!79402 m!80203))

(assert (=> b!79402 m!78153))

(assert (=> b!79402 m!80203))

(declare-fun m!80205 () Bool)

(assert (=> b!79402 m!80205))

(assert (=> b!79402 m!80189))

(declare-fun m!80207 () Bool)

(assert (=> b!79402 m!80207))

(declare-fun m!80209 () Bool)

(assert (=> b!79402 m!80209))

(assert (=> b!79402 m!80209))

(declare-fun m!80211 () Bool)

(assert (=> b!79402 m!80211))

(declare-fun m!80213 () Bool)

(assert (=> b!79402 m!80213))

(assert (=> b!79402 m!80183))

(declare-fun m!80215 () Bool)

(assert (=> b!79402 m!80215))

(assert (=> d!19059 m!78167))

(declare-fun m!80217 () Bool)

(assert (=> b!79395 m!80217))

(assert (=> b!79395 m!78153))

(declare-fun m!80219 () Bool)

(assert (=> b!79395 m!80219))

(assert (=> b!79395 m!80217))

(assert (=> b!79395 m!78273))

(declare-fun m!80221 () Bool)

(assert (=> b!79395 m!80221))

(assert (=> b!79395 m!78273))

(assert (=> b!79395 m!78153))

(declare-fun m!80223 () Bool)

(assert (=> bm!7324 m!80223))

(declare-fun m!80225 () Bool)

(assert (=> b!79392 m!80225))

(assert (=> b!79398 m!78153))

(assert (=> b!79398 m!78153))

(assert (=> b!79398 m!78155))

(assert (=> b!79403 m!78153))

(assert (=> b!79403 m!78153))

(declare-fun m!80227 () Bool)

(assert (=> b!79403 m!80227))

(declare-fun m!80229 () Bool)

(assert (=> b!79412 m!80229))

(declare-fun m!80231 () Bool)

(assert (=> b!79410 m!80231))

(assert (=> b!79407 m!78153))

(assert (=> b!79407 m!78153))

(assert (=> b!79407 m!78155))

(assert (=> b!78366 d!19059))

(declare-fun d!19061 () Bool)

(declare-fun lt!36791 () Bool)

(assert (=> d!19061 (= lt!36791 (select (content!82 lt!35908) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun e!51863 () Bool)

(assert (=> d!19061 (= lt!36791 e!51863)))

(declare-fun res!41454 () Bool)

(assert (=> d!19061 (=> (not res!41454) (not e!51863))))

(assert (=> d!19061 (= res!41454 ((_ is Cons!1529) lt!35908))))

(assert (=> d!19061 (= (contains!748 lt!35908 (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))) lt!36791)))

(declare-fun b!79413 () Bool)

(declare-fun e!51864 () Bool)

(assert (=> b!79413 (= e!51863 e!51864)))

(declare-fun res!41455 () Bool)

(assert (=> b!79413 (=> res!41455 e!51864)))

(assert (=> b!79413 (= res!41455 (= (h!2117 lt!35908) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun b!79414 () Bool)

(assert (=> b!79414 (= e!51864 (contains!748 (t!5183 lt!35908) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(assert (= (and d!19061 res!41454) b!79413))

(assert (= (and b!79413 (not res!41455)) b!79414))

(declare-fun m!80233 () Bool)

(assert (=> d!19061 m!80233))

(declare-fun m!80235 () Bool)

(assert (=> d!19061 m!80235))

(declare-fun m!80237 () Bool)

(assert (=> b!79414 m!80237))

(assert (=> b!78491 d!19061))

(declare-fun d!19063 () Bool)

(declare-fun res!41456 () Bool)

(declare-fun e!51865 () Bool)

(assert (=> d!19063 (=> res!41456 e!51865)))

(assert (=> d!19063 (= res!41456 (and ((_ is Cons!1529) (toList!748 lt!35903)) (= (_1!1105 (h!2117 (toList!748 lt!35903))) (_1!1105 lt!35783))))))

(assert (=> d!19063 (= (containsKey!140 (toList!748 lt!35903) (_1!1105 lt!35783)) e!51865)))

(declare-fun b!79415 () Bool)

(declare-fun e!51866 () Bool)

(assert (=> b!79415 (= e!51865 e!51866)))

(declare-fun res!41457 () Bool)

(assert (=> b!79415 (=> (not res!41457) (not e!51866))))

(assert (=> b!79415 (= res!41457 (and (or (not ((_ is Cons!1529) (toList!748 lt!35903))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35903))) (_1!1105 lt!35783))) ((_ is Cons!1529) (toList!748 lt!35903)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35903))) (_1!1105 lt!35783))))))

(declare-fun b!79416 () Bool)

(assert (=> b!79416 (= e!51866 (containsKey!140 (t!5183 (toList!748 lt!35903)) (_1!1105 lt!35783)))))

(assert (= (and d!19063 (not res!41456)) b!79415))

(assert (= (and b!79415 res!41457) b!79416))

(declare-fun m!80239 () Bool)

(assert (=> b!79416 m!80239))

(assert (=> d!18629 d!19063))

(declare-fun b!79418 () Bool)

(declare-fun e!51867 () Option!142)

(declare-fun e!51868 () Option!142)

(assert (=> b!79418 (= e!51867 e!51868)))

(declare-fun c!12330 () Bool)

(assert (=> b!79418 (= c!12330 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35907))) (not (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35907)))) (_1!1105 lt!35784)))))))

(declare-fun b!79417 () Bool)

(assert (=> b!79417 (= e!51867 (Some!141 (_2!1105 (h!2117 (t!5183 (toList!748 lt!35907))))))))

(declare-fun b!79419 () Bool)

(assert (=> b!79419 (= e!51868 (getValueByKey!136 (t!5183 (t!5183 (toList!748 lt!35907))) (_1!1105 lt!35784)))))

(declare-fun b!79420 () Bool)

(assert (=> b!79420 (= e!51868 None!140)))

(declare-fun d!19065 () Bool)

(declare-fun c!12329 () Bool)

(assert (=> d!19065 (= c!12329 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35907))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35907)))) (_1!1105 lt!35784))))))

(assert (=> d!19065 (= (getValueByKey!136 (t!5183 (toList!748 lt!35907)) (_1!1105 lt!35784)) e!51867)))

(assert (= (and d!19065 c!12329) b!79417))

(assert (= (and d!19065 (not c!12329)) b!79418))

(assert (= (and b!79418 c!12330) b!79419))

(assert (= (and b!79418 (not c!12330)) b!79420))

(declare-fun m!80241 () Bool)

(assert (=> b!79419 m!80241))

(assert (=> b!78777 d!19065))

(declare-fun b!79422 () Bool)

(declare-fun e!51869 () Option!142)

(declare-fun e!51870 () Option!142)

(assert (=> b!79422 (= e!51869 e!51870)))

(declare-fun c!12332 () Bool)

(assert (=> b!79422 (= c!12332 (and ((_ is Cons!1529) (toList!748 lt!36303)) (not (= (_1!1105 (h!2117 (toList!748 lt!36303))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79421 () Bool)

(assert (=> b!79421 (= e!51869 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36303)))))))

(declare-fun b!79423 () Bool)

(assert (=> b!79423 (= e!51870 (getValueByKey!136 (t!5183 (toList!748 lt!36303)) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79424 () Bool)

(assert (=> b!79424 (= e!51870 None!140)))

(declare-fun d!19067 () Bool)

(declare-fun c!12331 () Bool)

(assert (=> d!19067 (= c!12331 (and ((_ is Cons!1529) (toList!748 lt!36303)) (= (_1!1105 (h!2117 (toList!748 lt!36303))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19067 (= (getValueByKey!136 (toList!748 lt!36303) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!51869)))

(assert (= (and d!19067 c!12331) b!79421))

(assert (= (and d!19067 (not c!12331)) b!79422))

(assert (= (and b!79422 c!12332) b!79423))

(assert (= (and b!79422 (not c!12332)) b!79424))

(declare-fun m!80243 () Bool)

(assert (=> b!79423 m!80243))

(assert (=> b!78602 d!19067))

(declare-fun d!19069 () Bool)

(declare-fun e!51872 () Bool)

(assert (=> d!19069 e!51872))

(declare-fun res!41458 () Bool)

(assert (=> d!19069 (=> res!41458 e!51872)))

(declare-fun lt!36792 () Bool)

(assert (=> d!19069 (= res!41458 (not lt!36792))))

(declare-fun lt!36793 () Bool)

(assert (=> d!19069 (= lt!36792 lt!36793)))

(declare-fun lt!36794 () Unit!2263)

(declare-fun e!51871 () Unit!2263)

(assert (=> d!19069 (= lt!36794 e!51871)))

(declare-fun c!12333 () Bool)

(assert (=> d!19069 (= c!12333 lt!36793)))

(assert (=> d!19069 (= lt!36793 (containsKey!140 (toList!748 (+!109 lt!36092 (tuple2!2191 lt!36093 lt!36094))) lt!36091))))

(assert (=> d!19069 (= (contains!745 (+!109 lt!36092 (tuple2!2191 lt!36093 lt!36094)) lt!36091) lt!36792)))

(declare-fun b!79425 () Bool)

(declare-fun lt!36795 () Unit!2263)

(assert (=> b!79425 (= e!51871 lt!36795)))

(assert (=> b!79425 (= lt!36795 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (+!109 lt!36092 (tuple2!2191 lt!36093 lt!36094))) lt!36091))))

(assert (=> b!79425 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!36092 (tuple2!2191 lt!36093 lt!36094))) lt!36091))))

(declare-fun b!79426 () Bool)

(declare-fun Unit!2317 () Unit!2263)

(assert (=> b!79426 (= e!51871 Unit!2317)))

(declare-fun b!79427 () Bool)

(assert (=> b!79427 (= e!51872 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!36092 (tuple2!2191 lt!36093 lt!36094))) lt!36091)))))

(assert (= (and d!19069 c!12333) b!79425))

(assert (= (and d!19069 (not c!12333)) b!79426))

(assert (= (and d!19069 (not res!41458)) b!79427))

(declare-fun m!80245 () Bool)

(assert (=> d!19069 m!80245))

(declare-fun m!80247 () Bool)

(assert (=> b!79425 m!80247))

(declare-fun m!80249 () Bool)

(assert (=> b!79425 m!80249))

(assert (=> b!79425 m!80249))

(declare-fun m!80251 () Bool)

(assert (=> b!79425 m!80251))

(assert (=> b!79427 m!80249))

(assert (=> b!79427 m!80249))

(assert (=> b!79427 m!80251))

(assert (=> b!78286 d!19069))

(declare-fun d!19071 () Bool)

(declare-fun c!12334 () Bool)

(assert (=> d!19071 (= c!12334 ((_ is ValueCellFull!912) (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!51873 () V!2995)

(assert (=> d!19071 (= (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51873)))

(declare-fun b!79428 () Bool)

(assert (=> b!79428 (= e!51873 (get!1190 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79429 () Bool)

(assert (=> b!79429 (= e!51873 (get!1191 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19071 c!12334) b!79428))

(assert (= (and d!19071 (not c!12334)) b!79429))

(assert (=> b!79428 m!78191))

(assert (=> b!79428 m!77769))

(declare-fun m!80253 () Bool)

(assert (=> b!79428 m!80253))

(assert (=> b!79429 m!78191))

(assert (=> b!79429 m!77769))

(declare-fun m!80255 () Bool)

(assert (=> b!79429 m!80255))

(assert (=> b!78286 d!19071))

(declare-fun d!19073 () Bool)

(assert (=> d!19073 (not (contains!745 (+!109 lt!36092 (tuple2!2191 lt!36093 lt!36094)) lt!36091))))

(declare-fun lt!36796 () Unit!2263)

(assert (=> d!19073 (= lt!36796 (choose!464 lt!36092 lt!36093 lt!36094 lt!36091))))

(declare-fun e!51874 () Bool)

(assert (=> d!19073 e!51874))

(declare-fun res!41459 () Bool)

(assert (=> d!19073 (=> (not res!41459) (not e!51874))))

(assert (=> d!19073 (= res!41459 (not (contains!745 lt!36092 lt!36091)))))

(assert (=> d!19073 (= (addStillNotContains!30 lt!36092 lt!36093 lt!36094 lt!36091) lt!36796)))

(declare-fun b!79430 () Bool)

(assert (=> b!79430 (= e!51874 (not (= lt!36093 lt!36091)))))

(assert (= (and d!19073 res!41459) b!79430))

(assert (=> d!19073 m!78199))

(assert (=> d!19073 m!78199))

(assert (=> d!19073 m!78201))

(declare-fun m!80257 () Bool)

(assert (=> d!19073 m!80257))

(declare-fun m!80259 () Bool)

(assert (=> d!19073 m!80259))

(assert (=> b!78286 d!19073))

(declare-fun d!19075 () Bool)

(declare-fun e!51875 () Bool)

(assert (=> d!19075 e!51875))

(declare-fun res!41460 () Bool)

(assert (=> d!19075 (=> (not res!41460) (not e!51875))))

(declare-fun lt!36800 () ListLongMap!1465)

(assert (=> d!19075 (= res!41460 (contains!745 lt!36800 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!36797 () List!1533)

(assert (=> d!19075 (= lt!36800 (ListLongMap!1466 lt!36797))))

(declare-fun lt!36799 () Unit!2263)

(declare-fun lt!36798 () Unit!2263)

(assert (=> d!19075 (= lt!36799 lt!36798)))

(assert (=> d!19075 (= (getValueByKey!136 lt!36797 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19075 (= lt!36798 (lemmaContainsTupThenGetReturnValue!55 lt!36797 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19075 (= lt!36797 (insertStrictlySorted!57 (toList!748 call!7182) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19075 (= (+!109 call!7182 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!36800)))

(declare-fun b!79431 () Bool)

(declare-fun res!41461 () Bool)

(assert (=> b!79431 (=> (not res!41461) (not e!51875))))

(assert (=> b!79431 (= res!41461 (= (getValueByKey!136 (toList!748 lt!36800) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!79432 () Bool)

(assert (=> b!79432 (= e!51875 (contains!748 (toList!748 lt!36800) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1189 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!19075 res!41460) b!79431))

(assert (= (and b!79431 res!41461) b!79432))

(declare-fun m!80261 () Bool)

(assert (=> d!19075 m!80261))

(declare-fun m!80263 () Bool)

(assert (=> d!19075 m!80263))

(declare-fun m!80265 () Bool)

(assert (=> d!19075 m!80265))

(declare-fun m!80267 () Bool)

(assert (=> d!19075 m!80267))

(declare-fun m!80269 () Bool)

(assert (=> b!79431 m!80269))

(declare-fun m!80271 () Bool)

(assert (=> b!79432 m!80271))

(assert (=> b!78286 d!19075))

(declare-fun d!19077 () Bool)

(declare-fun e!51876 () Bool)

(assert (=> d!19077 e!51876))

(declare-fun res!41462 () Bool)

(assert (=> d!19077 (=> (not res!41462) (not e!51876))))

(declare-fun lt!36804 () ListLongMap!1465)

(assert (=> d!19077 (= res!41462 (contains!745 lt!36804 (_1!1105 (tuple2!2191 lt!36093 lt!36094))))))

(declare-fun lt!36801 () List!1533)

(assert (=> d!19077 (= lt!36804 (ListLongMap!1466 lt!36801))))

(declare-fun lt!36803 () Unit!2263)

(declare-fun lt!36802 () Unit!2263)

(assert (=> d!19077 (= lt!36803 lt!36802)))

(assert (=> d!19077 (= (getValueByKey!136 lt!36801 (_1!1105 (tuple2!2191 lt!36093 lt!36094))) (Some!141 (_2!1105 (tuple2!2191 lt!36093 lt!36094))))))

(assert (=> d!19077 (= lt!36802 (lemmaContainsTupThenGetReturnValue!55 lt!36801 (_1!1105 (tuple2!2191 lt!36093 lt!36094)) (_2!1105 (tuple2!2191 lt!36093 lt!36094))))))

(assert (=> d!19077 (= lt!36801 (insertStrictlySorted!57 (toList!748 lt!36092) (_1!1105 (tuple2!2191 lt!36093 lt!36094)) (_2!1105 (tuple2!2191 lt!36093 lt!36094))))))

(assert (=> d!19077 (= (+!109 lt!36092 (tuple2!2191 lt!36093 lt!36094)) lt!36804)))

(declare-fun b!79433 () Bool)

(declare-fun res!41463 () Bool)

(assert (=> b!79433 (=> (not res!41463) (not e!51876))))

(assert (=> b!79433 (= res!41463 (= (getValueByKey!136 (toList!748 lt!36804) (_1!1105 (tuple2!2191 lt!36093 lt!36094))) (Some!141 (_2!1105 (tuple2!2191 lt!36093 lt!36094)))))))

(declare-fun b!79434 () Bool)

(assert (=> b!79434 (= e!51876 (contains!748 (toList!748 lt!36804) (tuple2!2191 lt!36093 lt!36094)))))

(assert (= (and d!19077 res!41462) b!79433))

(assert (= (and b!79433 res!41463) b!79434))

(declare-fun m!80273 () Bool)

(assert (=> d!19077 m!80273))

(declare-fun m!80275 () Bool)

(assert (=> d!19077 m!80275))

(declare-fun m!80277 () Bool)

(assert (=> d!19077 m!80277))

(declare-fun m!80279 () Bool)

(assert (=> d!19077 m!80279))

(declare-fun m!80281 () Bool)

(assert (=> b!79433 m!80281))

(declare-fun m!80283 () Bool)

(assert (=> b!79434 m!80283))

(assert (=> b!78286 d!19077))

(assert (=> b!78705 d!18821))

(assert (=> b!78705 d!18823))

(declare-fun d!19079 () Bool)

(declare-fun e!51877 () Bool)

(assert (=> d!19079 e!51877))

(declare-fun res!41464 () Bool)

(assert (=> d!19079 (=> (not res!41464) (not e!51877))))

(declare-fun lt!36808 () ListLongMap!1465)

(assert (=> d!19079 (= res!41464 (contains!745 lt!36808 (_1!1105 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16)))))))

(declare-fun lt!36805 () List!1533)

(assert (=> d!19079 (= lt!36808 (ListLongMap!1466 lt!36805))))

(declare-fun lt!36807 () Unit!2263)

(declare-fun lt!36806 () Unit!2263)

(assert (=> d!19079 (= lt!36807 lt!36806)))

(assert (=> d!19079 (= (getValueByKey!136 lt!36805 (_1!1105 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19079 (= lt!36806 (lemmaContainsTupThenGetReturnValue!55 lt!36805 (_1!1105 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19079 (= lt!36805 (insertStrictlySorted!57 (toList!748 lt!36452) (_1!1105 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19079 (= (+!109 lt!36452 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16))) lt!36808)))

(declare-fun b!79435 () Bool)

(declare-fun res!41465 () Bool)

(assert (=> b!79435 (=> (not res!41465) (not e!51877))))

(assert (=> b!79435 (= res!41465 (= (getValueByKey!136 (toList!748 lt!36808) (_1!1105 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16))))))))

(declare-fun b!79436 () Bool)

(assert (=> b!79436 (= e!51877 (contains!748 (toList!748 lt!36808) (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16))))))

(assert (= (and d!19079 res!41464) b!79435))

(assert (= (and b!79435 res!41465) b!79436))

(declare-fun m!80285 () Bool)

(assert (=> d!19079 m!80285))

(declare-fun m!80287 () Bool)

(assert (=> d!19079 m!80287))

(declare-fun m!80289 () Bool)

(assert (=> d!19079 m!80289))

(declare-fun m!80291 () Bool)

(assert (=> d!19079 m!80291))

(declare-fun m!80293 () Bool)

(assert (=> b!79435 m!80293))

(declare-fun m!80295 () Bool)

(assert (=> b!79436 m!80295))

(assert (=> b!78743 d!19079))

(declare-fun d!19081 () Bool)

(assert (=> d!19081 (= (apply!79 (+!109 lt!36452 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16))) lt!36442) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!36452 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16)))) lt!36442)))))

(declare-fun bs!3348 () Bool)

(assert (= bs!3348 d!19081))

(declare-fun m!80297 () Bool)

(assert (=> bs!3348 m!80297))

(assert (=> bs!3348 m!80297))

(declare-fun m!80299 () Bool)

(assert (=> bs!3348 m!80299))

(assert (=> b!78743 d!19081))

(declare-fun d!19083 () Bool)

(assert (=> d!19083 (= (apply!79 (+!109 lt!36456 (tuple2!2191 lt!36457 (minValue!2170 newMap!16))) lt!36453) (apply!79 lt!36456 lt!36453))))

(declare-fun lt!36809 () Unit!2263)

(assert (=> d!19083 (= lt!36809 (choose!469 lt!36456 lt!36457 (minValue!2170 newMap!16) lt!36453))))

(declare-fun e!51878 () Bool)

(assert (=> d!19083 e!51878))

(declare-fun res!41466 () Bool)

(assert (=> d!19083 (=> (not res!41466) (not e!51878))))

(assert (=> d!19083 (= res!41466 (contains!745 lt!36456 lt!36453))))

(assert (=> d!19083 (= (addApplyDifferent!55 lt!36456 lt!36457 (minValue!2170 newMap!16) lt!36453) lt!36809)))

(declare-fun b!79437 () Bool)

(assert (=> b!79437 (= e!51878 (not (= lt!36453 lt!36457)))))

(assert (= (and d!19083 res!41466) b!79437))

(assert (=> d!19083 m!79023))

(assert (=> d!19083 m!79041))

(assert (=> d!19083 m!79021))

(declare-fun m!80301 () Bool)

(assert (=> d!19083 m!80301))

(assert (=> d!19083 m!79023))

(declare-fun m!80303 () Bool)

(assert (=> d!19083 m!80303))

(assert (=> b!78743 d!19083))

(declare-fun d!19085 () Bool)

(assert (=> d!19085 (contains!745 (+!109 lt!36449 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16))) lt!36446)))

(declare-fun lt!36810 () Unit!2263)

(assert (=> d!19085 (= lt!36810 (choose!470 lt!36449 lt!36455 (zeroValue!2170 newMap!16) lt!36446))))

(assert (=> d!19085 (contains!745 lt!36449 lt!36446)))

(assert (=> d!19085 (= (addStillContains!55 lt!36449 lt!36455 (zeroValue!2170 newMap!16) lt!36446) lt!36810)))

(declare-fun bs!3349 () Bool)

(assert (= bs!3349 d!19085))

(assert (=> bs!3349 m!79025))

(assert (=> bs!3349 m!79025))

(assert (=> bs!3349 m!79035))

(declare-fun m!80305 () Bool)

(assert (=> bs!3349 m!80305))

(declare-fun m!80307 () Bool)

(assert (=> bs!3349 m!80307))

(assert (=> b!78743 d!19085))

(declare-fun d!19087 () Bool)

(assert (=> d!19087 (= (apply!79 lt!36437 lt!36451) (get!1192 (getValueByKey!136 (toList!748 lt!36437) lt!36451)))))

(declare-fun bs!3350 () Bool)

(assert (= bs!3350 d!19087))

(declare-fun m!80309 () Bool)

(assert (=> bs!3350 m!80309))

(assert (=> bs!3350 m!80309))

(declare-fun m!80311 () Bool)

(assert (=> bs!3350 m!80311))

(assert (=> b!78743 d!19087))

(declare-fun d!19089 () Bool)

(assert (=> d!19089 (= (apply!79 lt!36452 lt!36442) (get!1192 (getValueByKey!136 (toList!748 lt!36452) lt!36442)))))

(declare-fun bs!3351 () Bool)

(assert (= bs!3351 d!19089))

(declare-fun m!80313 () Bool)

(assert (=> bs!3351 m!80313))

(assert (=> bs!3351 m!80313))

(declare-fun m!80315 () Bool)

(assert (=> bs!3351 m!80315))

(assert (=> b!78743 d!19089))

(declare-fun d!19091 () Bool)

(assert (=> d!19091 (= (apply!79 (+!109 lt!36456 (tuple2!2191 lt!36457 (minValue!2170 newMap!16))) lt!36453) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!36456 (tuple2!2191 lt!36457 (minValue!2170 newMap!16)))) lt!36453)))))

(declare-fun bs!3352 () Bool)

(assert (= bs!3352 d!19091))

(declare-fun m!80317 () Bool)

(assert (=> bs!3352 m!80317))

(assert (=> bs!3352 m!80317))

(declare-fun m!80319 () Bool)

(assert (=> bs!3352 m!80319))

(assert (=> b!78743 d!19091))

(declare-fun d!19093 () Bool)

(assert (=> d!19093 (= (apply!79 (+!109 lt!36437 (tuple2!2191 lt!36439 (minValue!2170 newMap!16))) lt!36451) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!36437 (tuple2!2191 lt!36439 (minValue!2170 newMap!16)))) lt!36451)))))

(declare-fun bs!3353 () Bool)

(assert (= bs!3353 d!19093))

(declare-fun m!80321 () Bool)

(assert (=> bs!3353 m!80321))

(assert (=> bs!3353 m!80321))

(declare-fun m!80323 () Bool)

(assert (=> bs!3353 m!80323))

(assert (=> b!78743 d!19093))

(declare-fun d!19095 () Bool)

(declare-fun e!51879 () Bool)

(assert (=> d!19095 e!51879))

(declare-fun res!41467 () Bool)

(assert (=> d!19095 (=> (not res!41467) (not e!51879))))

(declare-fun lt!36814 () ListLongMap!1465)

(assert (=> d!19095 (= res!41467 (contains!745 lt!36814 (_1!1105 (tuple2!2191 lt!36439 (minValue!2170 newMap!16)))))))

(declare-fun lt!36811 () List!1533)

(assert (=> d!19095 (= lt!36814 (ListLongMap!1466 lt!36811))))

(declare-fun lt!36813 () Unit!2263)

(declare-fun lt!36812 () Unit!2263)

(assert (=> d!19095 (= lt!36813 lt!36812)))

(assert (=> d!19095 (= (getValueByKey!136 lt!36811 (_1!1105 (tuple2!2191 lt!36439 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36439 (minValue!2170 newMap!16)))))))

(assert (=> d!19095 (= lt!36812 (lemmaContainsTupThenGetReturnValue!55 lt!36811 (_1!1105 (tuple2!2191 lt!36439 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36439 (minValue!2170 newMap!16)))))))

(assert (=> d!19095 (= lt!36811 (insertStrictlySorted!57 (toList!748 lt!36437) (_1!1105 (tuple2!2191 lt!36439 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36439 (minValue!2170 newMap!16)))))))

(assert (=> d!19095 (= (+!109 lt!36437 (tuple2!2191 lt!36439 (minValue!2170 newMap!16))) lt!36814)))

(declare-fun b!79438 () Bool)

(declare-fun res!41468 () Bool)

(assert (=> b!79438 (=> (not res!41468) (not e!51879))))

(assert (=> b!79438 (= res!41468 (= (getValueByKey!136 (toList!748 lt!36814) (_1!1105 (tuple2!2191 lt!36439 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36439 (minValue!2170 newMap!16))))))))

(declare-fun b!79439 () Bool)

(assert (=> b!79439 (= e!51879 (contains!748 (toList!748 lt!36814) (tuple2!2191 lt!36439 (minValue!2170 newMap!16))))))

(assert (= (and d!19095 res!41467) b!79438))

(assert (= (and b!79438 res!41468) b!79439))

(declare-fun m!80325 () Bool)

(assert (=> d!19095 m!80325))

(declare-fun m!80327 () Bool)

(assert (=> d!19095 m!80327))

(declare-fun m!80329 () Bool)

(assert (=> d!19095 m!80329))

(declare-fun m!80331 () Bool)

(assert (=> d!19095 m!80331))

(declare-fun m!80333 () Bool)

(assert (=> b!79438 m!80333))

(declare-fun m!80335 () Bool)

(assert (=> b!79439 m!80335))

(assert (=> b!78743 d!19095))

(declare-fun d!19097 () Bool)

(assert (=> d!19097 (= (apply!79 lt!36456 lt!36453) (get!1192 (getValueByKey!136 (toList!748 lt!36456) lt!36453)))))

(declare-fun bs!3354 () Bool)

(assert (= bs!3354 d!19097))

(declare-fun m!80337 () Bool)

(assert (=> bs!3354 m!80337))

(assert (=> bs!3354 m!80337))

(declare-fun m!80339 () Bool)

(assert (=> bs!3354 m!80339))

(assert (=> b!78743 d!19097))

(declare-fun d!19099 () Bool)

(declare-fun e!51880 () Bool)

(assert (=> d!19099 e!51880))

(declare-fun res!41469 () Bool)

(assert (=> d!19099 (=> (not res!41469) (not e!51880))))

(declare-fun lt!36818 () ListLongMap!1465)

(assert (=> d!19099 (= res!41469 (contains!745 lt!36818 (_1!1105 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16)))))))

(declare-fun lt!36815 () List!1533)

(assert (=> d!19099 (= lt!36818 (ListLongMap!1466 lt!36815))))

(declare-fun lt!36817 () Unit!2263)

(declare-fun lt!36816 () Unit!2263)

(assert (=> d!19099 (= lt!36817 lt!36816)))

(assert (=> d!19099 (= (getValueByKey!136 lt!36815 (_1!1105 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19099 (= lt!36816 (lemmaContainsTupThenGetReturnValue!55 lt!36815 (_1!1105 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19099 (= lt!36815 (insertStrictlySorted!57 (toList!748 lt!36449) (_1!1105 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16)))))))

(assert (=> d!19099 (= (+!109 lt!36449 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16))) lt!36818)))

(declare-fun b!79440 () Bool)

(declare-fun res!41470 () Bool)

(assert (=> b!79440 (=> (not res!41470) (not e!51880))))

(assert (=> b!79440 (= res!41470 (= (getValueByKey!136 (toList!748 lt!36818) (_1!1105 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16))))))))

(declare-fun b!79441 () Bool)

(assert (=> b!79441 (= e!51880 (contains!748 (toList!748 lt!36818) (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16))))))

(assert (= (and d!19099 res!41469) b!79440))

(assert (= (and b!79440 res!41470) b!79441))

(declare-fun m!80341 () Bool)

(assert (=> d!19099 m!80341))

(declare-fun m!80343 () Bool)

(assert (=> d!19099 m!80343))

(declare-fun m!80345 () Bool)

(assert (=> d!19099 m!80345))

(declare-fun m!80347 () Bool)

(assert (=> d!19099 m!80347))

(declare-fun m!80349 () Bool)

(assert (=> b!79440 m!80349))

(declare-fun m!80351 () Bool)

(assert (=> b!79441 m!80351))

(assert (=> b!78743 d!19099))

(declare-fun d!19101 () Bool)

(declare-fun e!51881 () Bool)

(assert (=> d!19101 e!51881))

(declare-fun res!41471 () Bool)

(assert (=> d!19101 (=> (not res!41471) (not e!51881))))

(declare-fun lt!36822 () ListLongMap!1465)

(assert (=> d!19101 (= res!41471 (contains!745 lt!36822 (_1!1105 (tuple2!2191 lt!36457 (minValue!2170 newMap!16)))))))

(declare-fun lt!36819 () List!1533)

(assert (=> d!19101 (= lt!36822 (ListLongMap!1466 lt!36819))))

(declare-fun lt!36821 () Unit!2263)

(declare-fun lt!36820 () Unit!2263)

(assert (=> d!19101 (= lt!36821 lt!36820)))

(assert (=> d!19101 (= (getValueByKey!136 lt!36819 (_1!1105 (tuple2!2191 lt!36457 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36457 (minValue!2170 newMap!16)))))))

(assert (=> d!19101 (= lt!36820 (lemmaContainsTupThenGetReturnValue!55 lt!36819 (_1!1105 (tuple2!2191 lt!36457 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36457 (minValue!2170 newMap!16)))))))

(assert (=> d!19101 (= lt!36819 (insertStrictlySorted!57 (toList!748 lt!36456) (_1!1105 (tuple2!2191 lt!36457 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 lt!36457 (minValue!2170 newMap!16)))))))

(assert (=> d!19101 (= (+!109 lt!36456 (tuple2!2191 lt!36457 (minValue!2170 newMap!16))) lt!36822)))

(declare-fun b!79442 () Bool)

(declare-fun res!41472 () Bool)

(assert (=> b!79442 (=> (not res!41472) (not e!51881))))

(assert (=> b!79442 (= res!41472 (= (getValueByKey!136 (toList!748 lt!36822) (_1!1105 (tuple2!2191 lt!36457 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 lt!36457 (minValue!2170 newMap!16))))))))

(declare-fun b!79443 () Bool)

(assert (=> b!79443 (= e!51881 (contains!748 (toList!748 lt!36822) (tuple2!2191 lt!36457 (minValue!2170 newMap!16))))))

(assert (= (and d!19101 res!41471) b!79442))

(assert (= (and b!79442 res!41472) b!79443))

(declare-fun m!80353 () Bool)

(assert (=> d!19101 m!80353))

(declare-fun m!80355 () Bool)

(assert (=> d!19101 m!80355))

(declare-fun m!80357 () Bool)

(assert (=> d!19101 m!80357))

(declare-fun m!80359 () Bool)

(assert (=> d!19101 m!80359))

(declare-fun m!80361 () Bool)

(assert (=> b!79442 m!80361))

(declare-fun m!80363 () Bool)

(assert (=> b!79443 m!80363))

(assert (=> b!78743 d!19101))

(declare-fun d!19103 () Bool)

(assert (=> d!19103 (= (apply!79 (+!109 lt!36437 (tuple2!2191 lt!36439 (minValue!2170 newMap!16))) lt!36451) (apply!79 lt!36437 lt!36451))))

(declare-fun lt!36823 () Unit!2263)

(assert (=> d!19103 (= lt!36823 (choose!469 lt!36437 lt!36439 (minValue!2170 newMap!16) lt!36451))))

(declare-fun e!51882 () Bool)

(assert (=> d!19103 e!51882))

(declare-fun res!41473 () Bool)

(assert (=> d!19103 (=> (not res!41473) (not e!51882))))

(assert (=> d!19103 (= res!41473 (contains!745 lt!36437 lt!36451))))

(assert (=> d!19103 (= (addApplyDifferent!55 lt!36437 lt!36439 (minValue!2170 newMap!16) lt!36451) lt!36823)))

(declare-fun b!79444 () Bool)

(assert (=> b!79444 (= e!51882 (not (= lt!36451 lt!36439)))))

(assert (= (and d!19103 res!41473) b!79444))

(assert (=> d!19103 m!79043))

(assert (=> d!19103 m!79045))

(assert (=> d!19103 m!79031))

(declare-fun m!80365 () Bool)

(assert (=> d!19103 m!80365))

(assert (=> d!19103 m!79043))

(declare-fun m!80367 () Bool)

(assert (=> d!19103 m!80367))

(assert (=> b!78743 d!19103))

(declare-fun d!19105 () Bool)

(assert (=> d!19105 (= (apply!79 (+!109 lt!36452 (tuple2!2191 lt!36438 (zeroValue!2170 newMap!16))) lt!36442) (apply!79 lt!36452 lt!36442))))

(declare-fun lt!36824 () Unit!2263)

(assert (=> d!19105 (= lt!36824 (choose!469 lt!36452 lt!36438 (zeroValue!2170 newMap!16) lt!36442))))

(declare-fun e!51883 () Bool)

(assert (=> d!19105 e!51883))

(declare-fun res!41474 () Bool)

(assert (=> d!19105 (=> (not res!41474) (not e!51883))))

(assert (=> d!19105 (= res!41474 (contains!745 lt!36452 lt!36442))))

(assert (=> d!19105 (= (addApplyDifferent!55 lt!36452 lt!36438 (zeroValue!2170 newMap!16) lt!36442) lt!36824)))

(declare-fun b!79445 () Bool)

(assert (=> b!79445 (= e!51883 (not (= lt!36442 lt!36438)))))

(assert (= (and d!19105 res!41474) b!79445))

(assert (=> d!19105 m!79037))

(assert (=> d!19105 m!79039))

(assert (=> d!19105 m!79027))

(declare-fun m!80369 () Bool)

(assert (=> d!19105 m!80369))

(assert (=> d!19105 m!79037))

(declare-fun m!80371 () Bool)

(assert (=> d!19105 m!80371))

(assert (=> b!78743 d!19105))

(declare-fun b!79446 () Bool)

(declare-fun lt!36825 () Unit!2263)

(declare-fun lt!36831 () Unit!2263)

(assert (=> b!79446 (= lt!36825 lt!36831)))

(declare-fun lt!36827 () (_ BitVec 64))

(declare-fun lt!36830 () V!2995)

(declare-fun lt!36829 () (_ BitVec 64))

(declare-fun lt!36828 () ListLongMap!1465)

(assert (=> b!79446 (not (contains!745 (+!109 lt!36828 (tuple2!2191 lt!36829 lt!36830)) lt!36827))))

(assert (=> b!79446 (= lt!36831 (addStillNotContains!30 lt!36828 lt!36829 lt!36830 lt!36827))))

(assert (=> b!79446 (= lt!36827 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!79446 (= lt!36830 (get!1189 (select (arr!1895 (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79446 (= lt!36829 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!7330 () ListLongMap!1465)

(assert (=> b!79446 (= lt!36828 call!7330)))

(declare-fun e!51884 () ListLongMap!1465)

(assert (=> b!79446 (= e!51884 (+!109 call!7330 (tuple2!2191 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (get!1189 (select (arr!1895 (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!79447 () Bool)

(declare-fun e!51887 () ListLongMap!1465)

(assert (=> b!79447 (= e!51887 (ListLongMap!1466 Nil!1530))))

(declare-fun b!79448 () Bool)

(declare-fun lt!36826 () ListLongMap!1465)

(declare-fun e!51889 () Bool)

(assert (=> b!79448 (= e!51889 (= lt!36826 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16))))))

(declare-fun b!79450 () Bool)

(declare-fun e!51886 () Bool)

(declare-fun e!51885 () Bool)

(assert (=> b!79450 (= e!51886 e!51885)))

(assert (=> b!79450 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun res!41476 () Bool)

(assert (=> b!79450 (= res!41476 (contains!745 lt!36826 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79450 (=> (not res!41476) (not e!51885))))

(declare-fun b!79451 () Bool)

(assert (=> b!79451 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> b!79451 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))))))))

(assert (=> b!79451 (= e!51885 (= (apply!79 lt!36826 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!7327 () Bool)

(assert (=> bm!7327 (= call!7330 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2272 newMap!16)))))

(declare-fun b!79452 () Bool)

(assert (=> b!79452 (= e!51884 call!7330)))

(declare-fun b!79453 () Bool)

(declare-fun e!51890 () Bool)

(assert (=> b!79453 (= e!51890 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79453 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!79449 () Bool)

(declare-fun e!51888 () Bool)

(assert (=> b!79449 (= e!51888 e!51886)))

(declare-fun c!12337 () Bool)

(assert (=> b!79449 (= c!12337 e!51890)))

(declare-fun res!41475 () Bool)

(assert (=> b!79449 (=> (not res!41475) (not e!51890))))

(assert (=> b!79449 (= res!41475 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun d!19107 () Bool)

(assert (=> d!19107 e!51888))

(declare-fun res!41477 () Bool)

(assert (=> d!19107 (=> (not res!41477) (not e!51888))))

(assert (=> d!19107 (= res!41477 (not (contains!745 lt!36826 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19107 (= lt!36826 e!51887)))

(declare-fun c!12335 () Bool)

(assert (=> d!19107 (= c!12335 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!19107 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19107 (= (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16)))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36826)))

(declare-fun b!79454 () Bool)

(assert (=> b!79454 (= e!51889 (isEmpty!331 lt!36826))))

(declare-fun b!79455 () Bool)

(assert (=> b!79455 (= e!51887 e!51884)))

(declare-fun c!12336 () Bool)

(assert (=> b!79455 (= c!12336 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79456 () Bool)

(declare-fun res!41478 () Bool)

(assert (=> b!79456 (=> (not res!41478) (not e!51888))))

(assert (=> b!79456 (= res!41478 (not (contains!745 lt!36826 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79457 () Bool)

(assert (=> b!79457 (= e!51886 e!51889)))

(declare-fun c!12338 () Bool)

(assert (=> b!79457 (= c!12338 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (= (and d!19107 c!12335) b!79447))

(assert (= (and d!19107 (not c!12335)) b!79455))

(assert (= (and b!79455 c!12336) b!79446))

(assert (= (and b!79455 (not c!12336)) b!79452))

(assert (= (or b!79446 b!79452) bm!7327))

(assert (= (and d!19107 res!41477) b!79456))

(assert (= (and b!79456 res!41478) b!79449))

(assert (= (and b!79449 res!41475) b!79453))

(assert (= (and b!79449 c!12337) b!79450))

(assert (= (and b!79449 (not c!12337)) b!79457))

(assert (= (and b!79450 res!41476) b!79451))

(assert (= (and b!79457 c!12338) b!79448))

(assert (= (and b!79457 (not c!12338)) b!79454))

(declare-fun b_lambda!3557 () Bool)

(assert (=> (not b_lambda!3557) (not b!79446)))

(assert (=> b!79446 t!5191))

(declare-fun b_and!4881 () Bool)

(assert (= b_and!4877 (and (=> t!5191 result!2829) b_and!4881)))

(assert (=> b!79446 t!5193))

(declare-fun b_and!4883 () Bool)

(assert (= b_and!4879 (and (=> t!5193 result!2831) b_and!4883)))

(declare-fun b_lambda!3559 () Bool)

(assert (=> (not b_lambda!3559) (not b!79451)))

(assert (=> b!79451 t!5191))

(declare-fun b_and!4885 () Bool)

(assert (= b_and!4881 (and (=> t!5191 result!2829) b_and!4885)))

(assert (=> b!79451 t!5193))

(declare-fun b_and!4887 () Bool)

(assert (= b_and!4883 (and (=> t!5193 result!2831) b_and!4887)))

(declare-fun m!80373 () Bool)

(assert (=> b!79454 m!80373))

(declare-fun m!80375 () Bool)

(assert (=> b!79456 m!80375))

(declare-fun m!80377 () Bool)

(assert (=> b!79448 m!80377))

(assert (=> b!79453 m!78153))

(assert (=> b!79453 m!78153))

(assert (=> b!79453 m!78155))

(declare-fun m!80379 () Bool)

(assert (=> d!19107 m!80379))

(assert (=> d!19107 m!78167))

(assert (=> b!79451 m!78273))

(assert (=> b!79451 m!78153))

(assert (=> b!79451 m!79051))

(assert (=> b!79451 m!78153))

(declare-fun m!80381 () Bool)

(assert (=> b!79451 m!80381))

(assert (=> b!79451 m!79051))

(assert (=> b!79451 m!78273))

(assert (=> b!79451 m!79055))

(assert (=> b!79450 m!78153))

(assert (=> b!79450 m!78153))

(declare-fun m!80383 () Bool)

(assert (=> b!79450 m!80383))

(assert (=> b!79455 m!78153))

(assert (=> b!79455 m!78153))

(assert (=> b!79455 m!78155))

(assert (=> bm!7327 m!80377))

(declare-fun m!80385 () Bool)

(assert (=> b!79446 m!80385))

(declare-fun m!80387 () Bool)

(assert (=> b!79446 m!80387))

(assert (=> b!79446 m!79051))

(assert (=> b!79446 m!78273))

(assert (=> b!79446 m!79055))

(declare-fun m!80389 () Bool)

(assert (=> b!79446 m!80389))

(assert (=> b!79446 m!78153))

(assert (=> b!79446 m!80385))

(assert (=> b!79446 m!79051))

(assert (=> b!79446 m!78273))

(declare-fun m!80391 () Bool)

(assert (=> b!79446 m!80391))

(assert (=> b!78743 d!19107))

(declare-fun d!19109 () Bool)

(declare-fun e!51892 () Bool)

(assert (=> d!19109 e!51892))

(declare-fun res!41479 () Bool)

(assert (=> d!19109 (=> res!41479 e!51892)))

(declare-fun lt!36832 () Bool)

(assert (=> d!19109 (= res!41479 (not lt!36832))))

(declare-fun lt!36833 () Bool)

(assert (=> d!19109 (= lt!36832 lt!36833)))

(declare-fun lt!36834 () Unit!2263)

(declare-fun e!51891 () Unit!2263)

(assert (=> d!19109 (= lt!36834 e!51891)))

(declare-fun c!12339 () Bool)

(assert (=> d!19109 (= c!12339 lt!36833)))

(assert (=> d!19109 (= lt!36833 (containsKey!140 (toList!748 (+!109 lt!36449 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16)))) lt!36446))))

(assert (=> d!19109 (= (contains!745 (+!109 lt!36449 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16))) lt!36446) lt!36832)))

(declare-fun b!79458 () Bool)

(declare-fun lt!36835 () Unit!2263)

(assert (=> b!79458 (= e!51891 lt!36835)))

(assert (=> b!79458 (= lt!36835 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (+!109 lt!36449 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16)))) lt!36446))))

(assert (=> b!79458 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!36449 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16)))) lt!36446))))

(declare-fun b!79459 () Bool)

(declare-fun Unit!2318 () Unit!2263)

(assert (=> b!79459 (= e!51891 Unit!2318)))

(declare-fun b!79460 () Bool)

(assert (=> b!79460 (= e!51892 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!36449 (tuple2!2191 lt!36455 (zeroValue!2170 newMap!16)))) lt!36446)))))

(assert (= (and d!19109 c!12339) b!79458))

(assert (= (and d!19109 (not c!12339)) b!79459))

(assert (= (and d!19109 (not res!41479)) b!79460))

(declare-fun m!80393 () Bool)

(assert (=> d!19109 m!80393))

(declare-fun m!80395 () Bool)

(assert (=> b!79458 m!80395))

(declare-fun m!80397 () Bool)

(assert (=> b!79458 m!80397))

(assert (=> b!79458 m!80397))

(declare-fun m!80399 () Bool)

(assert (=> b!79458 m!80399))

(assert (=> b!79460 m!80397))

(assert (=> b!79460 m!80397))

(assert (=> b!79460 m!80399))

(assert (=> b!78743 d!19109))

(declare-fun d!19111 () Bool)

(declare-fun res!41480 () Bool)

(declare-fun e!51893 () Bool)

(assert (=> d!19111 (=> res!41480 e!51893)))

(assert (=> d!19111 (= res!41480 (and ((_ is Cons!1529) (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (= (_1!1105 (h!2117 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!19111 (= (containsKey!140 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) e!51893)))

(declare-fun b!79461 () Bool)

(declare-fun e!51894 () Bool)

(assert (=> b!79461 (= e!51893 e!51894)))

(declare-fun res!41481 () Bool)

(assert (=> b!79461 (=> (not res!41481) (not e!51894))))

(assert (=> b!79461 (= res!41481 (and (or (not ((_ is Cons!1529) (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (bvsle (_1!1105 (h!2117 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))) ((_ is Cons!1529) (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (bvslt (_1!1105 (h!2117 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(declare-fun b!79462 () Bool)

(assert (=> b!79462 (= e!51894 (containsKey!140 (t!5183 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!19111 (not res!41480)) b!79461))

(assert (= (and b!79461 res!41481) b!79462))

(assert (=> b!79462 m!77749))

(declare-fun m!80401 () Bool)

(assert (=> b!79462 m!80401))

(assert (=> d!18513 d!19111))

(declare-fun d!19113 () Bool)

(declare-fun e!51896 () Bool)

(assert (=> d!19113 e!51896))

(declare-fun res!41482 () Bool)

(assert (=> d!19113 (=> res!41482 e!51896)))

(declare-fun lt!36836 () Bool)

(assert (=> d!19113 (= res!41482 (not lt!36836))))

(declare-fun lt!36837 () Bool)

(assert (=> d!19113 (= lt!36836 lt!36837)))

(declare-fun lt!36838 () Unit!2263)

(declare-fun e!51895 () Unit!2263)

(assert (=> d!19113 (= lt!36838 e!51895)))

(declare-fun c!12340 () Bool)

(assert (=> d!19113 (= c!12340 lt!36837)))

(assert (=> d!19113 (= lt!36837 (containsKey!140 (toList!748 lt!36311) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!19113 (= (contains!745 lt!36311 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36836)))

(declare-fun b!79463 () Bool)

(declare-fun lt!36839 () Unit!2263)

(assert (=> b!79463 (= e!51895 lt!36839)))

(assert (=> b!79463 (= lt!36839 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36311) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> b!79463 (isDefined!90 (getValueByKey!136 (toList!748 lt!36311) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79464 () Bool)

(declare-fun Unit!2319 () Unit!2263)

(assert (=> b!79464 (= e!51895 Unit!2319)))

(declare-fun b!79465 () Bool)

(assert (=> b!79465 (= e!51896 (isDefined!90 (getValueByKey!136 (toList!748 lt!36311) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (= (and d!19113 c!12340) b!79463))

(assert (= (and d!19113 (not c!12340)) b!79464))

(assert (= (and d!19113 (not res!41482)) b!79465))

(declare-fun m!80403 () Bool)

(assert (=> d!19113 m!80403))

(declare-fun m!80405 () Bool)

(assert (=> b!79463 m!80405))

(assert (=> b!79463 m!78843))

(assert (=> b!79463 m!78843))

(declare-fun m!80407 () Bool)

(assert (=> b!79463 m!80407))

(assert (=> b!79465 m!78843))

(assert (=> b!79465 m!78843))

(assert (=> b!79465 m!80407))

(assert (=> d!18649 d!19113))

(declare-fun b!79467 () Bool)

(declare-fun e!51897 () Option!142)

(declare-fun e!51898 () Option!142)

(assert (=> b!79467 (= e!51897 e!51898)))

(declare-fun c!12342 () Bool)

(assert (=> b!79467 (= c!12342 (and ((_ is Cons!1529) lt!36308) (not (= (_1!1105 (h!2117 lt!36308)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!79466 () Bool)

(assert (=> b!79466 (= e!51897 (Some!141 (_2!1105 (h!2117 lt!36308))))))

(declare-fun b!79468 () Bool)

(assert (=> b!79468 (= e!51898 (getValueByKey!136 (t!5183 lt!36308) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79469 () Bool)

(assert (=> b!79469 (= e!51898 None!140)))

(declare-fun c!12341 () Bool)

(declare-fun d!19115 () Bool)

(assert (=> d!19115 (= c!12341 (and ((_ is Cons!1529) lt!36308) (= (_1!1105 (h!2117 lt!36308)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19115 (= (getValueByKey!136 lt!36308 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) e!51897)))

(assert (= (and d!19115 c!12341) b!79466))

(assert (= (and d!19115 (not c!12341)) b!79467))

(assert (= (and b!79467 c!12342) b!79468))

(assert (= (and b!79467 (not c!12342)) b!79469))

(declare-fun m!80409 () Bool)

(assert (=> b!79468 m!80409))

(assert (=> d!18649 d!19115))

(declare-fun d!19117 () Bool)

(assert (=> d!19117 (= (getValueByKey!136 lt!36308 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!36840 () Unit!2263)

(assert (=> d!19117 (= lt!36840 (choose!468 lt!36308 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun e!51899 () Bool)

(assert (=> d!19117 e!51899))

(declare-fun res!41483 () Bool)

(assert (=> d!19117 (=> (not res!41483) (not e!51899))))

(assert (=> d!19117 (= res!41483 (isStrictlySorted!290 lt!36308))))

(assert (=> d!19117 (= (lemmaContainsTupThenGetReturnValue!55 lt!36308 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36840)))

(declare-fun b!79470 () Bool)

(declare-fun res!41484 () Bool)

(assert (=> b!79470 (=> (not res!41484) (not e!51899))))

(assert (=> b!79470 (= res!41484 (containsKey!140 lt!36308 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79471 () Bool)

(assert (=> b!79471 (= e!51899 (contains!748 lt!36308 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (= (and d!19117 res!41483) b!79470))

(assert (= (and b!79470 res!41484) b!79471))

(assert (=> d!19117 m!78837))

(declare-fun m!80411 () Bool)

(assert (=> d!19117 m!80411))

(declare-fun m!80413 () Bool)

(assert (=> d!19117 m!80413))

(declare-fun m!80415 () Bool)

(assert (=> b!79470 m!80415))

(declare-fun m!80417 () Bool)

(assert (=> b!79471 m!80417))

(assert (=> d!18649 d!19117))

(declare-fun b!79472 () Bool)

(declare-fun c!12343 () Bool)

(assert (=> b!79472 (= c!12343 (and ((_ is Cons!1529) (toList!748 lt!35777)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun e!51903 () List!1533)

(declare-fun e!51900 () List!1533)

(assert (=> b!79472 (= e!51903 e!51900)))

(declare-fun e!51902 () List!1533)

(declare-fun c!12344 () Bool)

(declare-fun call!7333 () List!1533)

(declare-fun bm!7328 () Bool)

(assert (=> bm!7328 (= call!7333 ($colon$colon!68 e!51902 (ite c!12344 (h!2117 (toList!748 lt!35777)) (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun c!12345 () Bool)

(assert (=> bm!7328 (= c!12345 c!12344)))

(declare-fun d!19119 () Bool)

(declare-fun e!51904 () Bool)

(assert (=> d!19119 e!51904))

(declare-fun res!41485 () Bool)

(assert (=> d!19119 (=> (not res!41485) (not e!51904))))

(declare-fun lt!36841 () List!1533)

(assert (=> d!19119 (= res!41485 (isStrictlySorted!290 lt!36841))))

(declare-fun e!51901 () List!1533)

(assert (=> d!19119 (= lt!36841 e!51901)))

(assert (=> d!19119 (= c!12344 (and ((_ is Cons!1529) (toList!748 lt!35777)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19119 (isStrictlySorted!290 (toList!748 lt!35777))))

(assert (=> d!19119 (= (insertStrictlySorted!57 (toList!748 lt!35777) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36841)))

(declare-fun c!12346 () Bool)

(declare-fun b!79473 () Bool)

(assert (=> b!79473 (= e!51902 (ite c!12346 (t!5183 (toList!748 lt!35777)) (ite c!12343 (Cons!1529 (h!2117 (toList!748 lt!35777)) (t!5183 (toList!748 lt!35777))) Nil!1530)))))

(declare-fun bm!7329 () Bool)

(declare-fun call!7332 () List!1533)

(assert (=> bm!7329 (= call!7332 call!7333)))

(declare-fun b!79474 () Bool)

(assert (=> b!79474 (= e!51901 call!7333)))

(declare-fun b!79475 () Bool)

(declare-fun res!41486 () Bool)

(assert (=> b!79475 (=> (not res!41486) (not e!51904))))

(assert (=> b!79475 (= res!41486 (containsKey!140 lt!36841 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79476 () Bool)

(declare-fun call!7331 () List!1533)

(assert (=> b!79476 (= e!51900 call!7331)))

(declare-fun b!79477 () Bool)

(assert (=> b!79477 (= e!51903 call!7332)))

(declare-fun b!79478 () Bool)

(assert (=> b!79478 (= e!51901 e!51903)))

(assert (=> b!79478 (= c!12346 (and ((_ is Cons!1529) (toList!748 lt!35777)) (= (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun bm!7330 () Bool)

(assert (=> bm!7330 (= call!7331 call!7332)))

(declare-fun b!79479 () Bool)

(assert (=> b!79479 (= e!51902 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35777)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79480 () Bool)

(assert (=> b!79480 (= e!51904 (contains!748 lt!36841 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79481 () Bool)

(assert (=> b!79481 (= e!51900 call!7331)))

(assert (= (and d!19119 c!12344) b!79474))

(assert (= (and d!19119 (not c!12344)) b!79478))

(assert (= (and b!79478 c!12346) b!79477))

(assert (= (and b!79478 (not c!12346)) b!79472))

(assert (= (and b!79472 c!12343) b!79481))

(assert (= (and b!79472 (not c!12343)) b!79476))

(assert (= (or b!79481 b!79476) bm!7330))

(assert (= (or b!79477 bm!7330) bm!7329))

(assert (= (or b!79474 bm!7329) bm!7328))

(assert (= (and bm!7328 c!12345) b!79479))

(assert (= (and bm!7328 (not c!12345)) b!79473))

(assert (= (and d!19119 res!41485) b!79475))

(assert (= (and b!79475 res!41486) b!79480))

(declare-fun m!80419 () Bool)

(assert (=> b!79475 m!80419))

(declare-fun m!80421 () Bool)

(assert (=> b!79480 m!80421))

(declare-fun m!80423 () Bool)

(assert (=> d!19119 m!80423))

(assert (=> d!19119 m!78393))

(declare-fun m!80425 () Bool)

(assert (=> bm!7328 m!80425))

(declare-fun m!80427 () Bool)

(assert (=> b!79479 m!80427))

(assert (=> d!18649 d!19119))

(declare-fun d!19121 () Bool)

(declare-fun res!41487 () Bool)

(declare-fun e!51905 () Bool)

(assert (=> d!19121 (=> res!41487 e!51905)))

(assert (=> d!19121 (= res!41487 (and ((_ is Cons!1529) lt!35892) (= (_1!1105 (h!2117 lt!35892)) (_1!1105 lt!35783))))))

(assert (=> d!19121 (= (containsKey!140 lt!35892 (_1!1105 lt!35783)) e!51905)))

(declare-fun b!79482 () Bool)

(declare-fun e!51906 () Bool)

(assert (=> b!79482 (= e!51905 e!51906)))

(declare-fun res!41488 () Bool)

(assert (=> b!79482 (=> (not res!41488) (not e!51906))))

(assert (=> b!79482 (= res!41488 (and (or (not ((_ is Cons!1529) lt!35892)) (bvsle (_1!1105 (h!2117 lt!35892)) (_1!1105 lt!35783))) ((_ is Cons!1529) lt!35892) (bvslt (_1!1105 (h!2117 lt!35892)) (_1!1105 lt!35783))))))

(declare-fun b!79483 () Bool)

(assert (=> b!79483 (= e!51906 (containsKey!140 (t!5183 lt!35892) (_1!1105 lt!35783)))))

(assert (= (and d!19121 (not res!41487)) b!79482))

(assert (= (and b!79482 res!41488) b!79483))

(declare-fun m!80429 () Bool)

(assert (=> b!79483 m!80429))

(assert (=> b!78666 d!19121))

(declare-fun d!19123 () Bool)

(declare-fun e!51907 () Bool)

(assert (=> d!19123 e!51907))

(declare-fun res!41489 () Bool)

(assert (=> d!19123 (=> (not res!41489) (not e!51907))))

(declare-fun lt!36845 () ListLongMap!1465)

(assert (=> d!19123 (= res!41489 (contains!745 lt!36845 (_1!1105 (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))))))

(declare-fun lt!36842 () List!1533)

(assert (=> d!19123 (= lt!36845 (ListLongMap!1466 lt!36842))))

(declare-fun lt!36844 () Unit!2263)

(declare-fun lt!36843 () Unit!2263)

(assert (=> d!19123 (= lt!36844 lt!36843)))

(assert (=> d!19123 (= (getValueByKey!136 lt!36842 (_1!1105 (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))) (Some!141 (_2!1105 (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))))))

(assert (=> d!19123 (= lt!36843 (lemmaContainsTupThenGetReturnValue!55 lt!36842 (_1!1105 (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))) (_2!1105 (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))))))

(assert (=> d!19123 (= lt!36842 (insertStrictlySorted!57 (toList!748 (ite c!12079 call!7213 (ite c!12081 call!7215 call!7211))) (_1!1105 (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))) (_2!1105 (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))))))

(assert (=> d!19123 (= (+!109 (ite c!12079 call!7213 (ite c!12081 call!7215 call!7211)) (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))) lt!36845)))

(declare-fun b!79484 () Bool)

(declare-fun res!41490 () Bool)

(assert (=> b!79484 (=> (not res!41490) (not e!51907))))

(assert (=> b!79484 (= res!41490 (= (getValueByKey!136 (toList!748 lt!36845) (_1!1105 (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))) (Some!141 (_2!1105 (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))))

(declare-fun b!79485 () Bool)

(assert (=> b!79485 (= e!51907 (contains!748 (toList!748 lt!36845) (ite (or c!12079 c!12081) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(assert (= (and d!19123 res!41489) b!79484))

(assert (= (and b!79484 res!41490) b!79485))

(declare-fun m!80431 () Bool)

(assert (=> d!19123 m!80431))

(declare-fun m!80433 () Bool)

(assert (=> d!19123 m!80433))

(declare-fun m!80435 () Bool)

(assert (=> d!19123 m!80435))

(declare-fun m!80437 () Bool)

(assert (=> d!19123 m!80437))

(declare-fun m!80439 () Bool)

(assert (=> b!79484 m!80439))

(declare-fun m!80441 () Bool)

(assert (=> b!79485 m!80441))

(assert (=> bm!7212 d!19123))

(declare-fun d!19125 () Bool)

(assert (=> d!19125 (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!36846 () Unit!2263)

(assert (=> d!19125 (= lt!36846 (choose!471 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!51908 () Bool)

(assert (=> d!19125 e!51908))

(declare-fun res!41491 () Bool)

(assert (=> d!19125 (=> (not res!41491) (not e!51908))))

(assert (=> d!19125 (= res!41491 (isStrictlySorted!290 (toList!748 lt!35867)))))

(assert (=> d!19125 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!36846)))

(declare-fun b!79486 () Bool)

(assert (=> b!79486 (= e!51908 (containsKey!140 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19125 res!41491) b!79486))

(assert (=> d!19125 m!77883))

(assert (=> d!19125 m!78161))

(assert (=> d!19125 m!78161))

(assert (=> d!19125 m!78163))

(assert (=> d!19125 m!77883))

(declare-fun m!80443 () Bool)

(assert (=> d!19125 m!80443))

(assert (=> d!19125 m!79983))

(assert (=> b!79486 m!77883))

(assert (=> b!79486 m!78157))

(assert (=> b!78254 d!19125))

(declare-fun d!19127 () Bool)

(assert (=> d!19127 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3355 () Bool)

(assert (= bs!3355 d!19127))

(assert (=> bs!3355 m!78161))

(declare-fun m!80445 () Bool)

(assert (=> bs!3355 m!80445))

(assert (=> b!78254 d!19127))

(assert (=> b!78254 d!18953))

(declare-fun d!19129 () Bool)

(assert (=> d!19129 (= (isEmpty!332 (getValueByKey!136 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))) (not ((_ is Some!141) (getValueByKey!136 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))))

(assert (=> d!18599 d!19129))

(declare-fun d!19131 () Bool)

(declare-fun lt!36847 () Bool)

(assert (=> d!19131 (= lt!36847 (select (content!82 (toList!748 lt!36233)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun e!51909 () Bool)

(assert (=> d!19131 (= lt!36847 e!51909)))

(declare-fun res!41492 () Bool)

(assert (=> d!19131 (=> (not res!41492) (not e!51909))))

(assert (=> d!19131 (= res!41492 ((_ is Cons!1529) (toList!748 lt!36233)))))

(assert (=> d!19131 (= (contains!748 (toList!748 lt!36233) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36847)))

(declare-fun b!79487 () Bool)

(declare-fun e!51910 () Bool)

(assert (=> b!79487 (= e!51909 e!51910)))

(declare-fun res!41493 () Bool)

(assert (=> b!79487 (=> res!41493 e!51910)))

(assert (=> b!79487 (= res!41493 (= (h!2117 (toList!748 lt!36233)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!79488 () Bool)

(assert (=> b!79488 (= e!51910 (contains!748 (t!5183 (toList!748 lt!36233)) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!19131 res!41492) b!79487))

(assert (= (and b!79487 (not res!41493)) b!79488))

(declare-fun m!80447 () Bool)

(assert (=> d!19131 m!80447))

(declare-fun m!80449 () Bool)

(assert (=> d!19131 m!80449))

(declare-fun m!80451 () Bool)

(assert (=> b!79488 m!80451))

(assert (=> b!78522 d!19131))

(declare-fun b!79489 () Bool)

(declare-fun e!51912 () (_ BitVec 32))

(declare-fun call!7334 () (_ BitVec 32))

(assert (=> b!79489 (= e!51912 (bvadd #b00000000000000000000000000000001 call!7334))))

(declare-fun b!79490 () Bool)

(declare-fun e!51911 () (_ BitVec 32))

(assert (=> b!79490 (= e!51911 #b00000000000000000000000000000000)))

(declare-fun bm!7331 () Bool)

(assert (=> bm!7331 (= call!7334 (arrayCountValidKeys!0 (_keys!3932 (_2!1104 lt!36056)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (_2!1104 lt!36056)))))))

(declare-fun b!79491 () Bool)

(assert (=> b!79491 (= e!51912 call!7334)))

(declare-fun b!79492 () Bool)

(assert (=> b!79492 (= e!51911 e!51912)))

(declare-fun c!12347 () Bool)

(assert (=> b!79492 (= c!12347 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000)))))

(declare-fun d!19133 () Bool)

(declare-fun lt!36848 () (_ BitVec 32))

(assert (=> d!19133 (and (bvsge lt!36848 #b00000000000000000000000000000000) (bvsle lt!36848 (bvsub (size!2135 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000)))))

(assert (=> d!19133 (= lt!36848 e!51911)))

(declare-fun c!12348 () Bool)

(assert (=> d!19133 (= c!12348 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))))))

(assert (=> d!19133 (and (bvsle #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2135 (_keys!3932 (_2!1104 lt!36056))) (size!2135 (_keys!3932 (_2!1104 lt!36056)))))))

(assert (=> d!19133 (= (arrayCountValidKeys!0 (_keys!3932 (_2!1104 lt!36056)) #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))) lt!36848)))

(assert (= (and d!19133 c!12348) b!79490))

(assert (= (and d!19133 (not c!12348)) b!79492))

(assert (= (and b!79492 c!12347) b!79489))

(assert (= (and b!79492 (not c!12347)) b!79491))

(assert (= (or b!79489 b!79491) bm!7331))

(declare-fun m!80453 () Bool)

(assert (=> bm!7331 m!80453))

(assert (=> b!79492 m!79795))

(assert (=> b!79492 m!79795))

(assert (=> b!79492 m!79823))

(assert (=> b!78301 d!19133))

(declare-fun b!79505 () Bool)

(declare-fun e!51920 () SeekEntryResult!250)

(declare-fun e!51919 () SeekEntryResult!250)

(assert (=> b!79505 (= e!51920 e!51919)))

(declare-fun c!12357 () Bool)

(declare-fun lt!36853 () (_ BitVec 64))

(assert (=> b!79505 (= c!12357 (= lt!36853 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!79506 () Bool)

(declare-fun c!12355 () Bool)

(assert (=> b!79506 (= c!12355 (= lt!36853 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!51921 () SeekEntryResult!250)

(assert (=> b!79506 (= e!51919 e!51921)))

(declare-fun b!79507 () Bool)

(assert (=> b!79507 (= e!51919 (Found!250 (index!3136 lt!36260)))))

(declare-fun b!79508 () Bool)

(assert (=> b!79508 (= e!51920 Undefined!250)))

(declare-fun d!19135 () Bool)

(declare-fun lt!36854 () SeekEntryResult!250)

(assert (=> d!19135 (and (or ((_ is Undefined!250) lt!36854) (not ((_ is Found!250) lt!36854)) (and (bvsge (index!3135 lt!36854) #b00000000000000000000000000000000) (bvslt (index!3135 lt!36854) (size!2135 (_keys!3932 newMap!16))))) (or ((_ is Undefined!250) lt!36854) ((_ is Found!250) lt!36854) (not ((_ is MissingVacant!250) lt!36854)) (not (= (index!3137 lt!36854) (index!3136 lt!36260))) (and (bvsge (index!3137 lt!36854) #b00000000000000000000000000000000) (bvslt (index!3137 lt!36854) (size!2135 (_keys!3932 newMap!16))))) (or ((_ is Undefined!250) lt!36854) (ite ((_ is Found!250) lt!36854) (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36854)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) (and ((_ is MissingVacant!250) lt!36854) (= (index!3137 lt!36854) (index!3136 lt!36260)) (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3137 lt!36854)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!19135 (= lt!36854 e!51920)))

(declare-fun c!12356 () Bool)

(assert (=> d!19135 (= c!12356 (bvsge (x!11557 lt!36260) #b01111111111111111111111111111110))))

(assert (=> d!19135 (= lt!36853 (select (arr!1894 (_keys!3932 newMap!16)) (index!3136 lt!36260)))))

(assert (=> d!19135 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19135 (= (seekKeyOrZeroReturnVacant!0 (x!11557 lt!36260) (index!3136 lt!36260) (index!3136 lt!36260) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)) lt!36854)))

(declare-fun b!79509 () Bool)

(assert (=> b!79509 (= e!51921 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11557 lt!36260) #b00000000000000000000000000000001) (nextIndex!0 (index!3136 lt!36260) (x!11557 lt!36260) (mask!6268 newMap!16)) (index!3136 lt!36260) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun b!79510 () Bool)

(assert (=> b!79510 (= e!51921 (MissingVacant!250 (index!3136 lt!36260)))))

(assert (= (and d!19135 c!12356) b!79508))

(assert (= (and d!19135 (not c!12356)) b!79505))

(assert (= (and b!79505 c!12357) b!79507))

(assert (= (and b!79505 (not c!12357)) b!79506))

(assert (= (and b!79506 c!12355) b!79510))

(assert (= (and b!79506 (not c!12355)) b!79509))

(declare-fun m!80455 () Bool)

(assert (=> d!19135 m!80455))

(declare-fun m!80457 () Bool)

(assert (=> d!19135 m!80457))

(assert (=> d!19135 m!78687))

(assert (=> d!19135 m!78167))

(declare-fun m!80459 () Bool)

(assert (=> b!79509 m!80459))

(assert (=> b!79509 m!80459))

(assert (=> b!79509 m!77749))

(declare-fun m!80461 () Bool)

(assert (=> b!79509 m!80461))

(assert (=> b!78548 d!19135))

(declare-fun lt!36855 () Bool)

(declare-fun d!19137 () Bool)

(assert (=> d!19137 (= lt!36855 (select (content!82 (toList!748 lt!36211)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun e!51922 () Bool)

(assert (=> d!19137 (= lt!36855 e!51922)))

(declare-fun res!41494 () Bool)

(assert (=> d!19137 (=> (not res!41494) (not e!51922))))

(assert (=> d!19137 (= res!41494 ((_ is Cons!1529) (toList!748 lt!36211)))))

(assert (=> d!19137 (= (contains!748 (toList!748 lt!36211) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!36855)))

(declare-fun b!79511 () Bool)

(declare-fun e!51923 () Bool)

(assert (=> b!79511 (= e!51922 e!51923)))

(declare-fun res!41495 () Bool)

(assert (=> b!79511 (=> res!41495 e!51923)))

(assert (=> b!79511 (= res!41495 (= (h!2117 (toList!748 lt!36211)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun b!79512 () Bool)

(assert (=> b!79512 (= e!51923 (contains!748 (t!5183 (toList!748 lt!36211)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!19137 res!41494) b!79511))

(assert (= (and b!79511 (not res!41495)) b!79512))

(declare-fun m!80463 () Bool)

(assert (=> d!19137 m!80463))

(declare-fun m!80465 () Bool)

(assert (=> d!19137 m!80465))

(declare-fun m!80467 () Bool)

(assert (=> b!79512 m!80467))

(assert (=> b!78482 d!19137))

(declare-fun d!19139 () Bool)

(declare-fun lt!36856 () Bool)

(assert (=> d!19139 (= lt!36856 (select (content!82 lt!35885) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun e!51924 () Bool)

(assert (=> d!19139 (= lt!36856 e!51924)))

(declare-fun res!41496 () Bool)

(assert (=> d!19139 (=> (not res!41496) (not e!51924))))

(assert (=> d!19139 (= res!41496 ((_ is Cons!1529) lt!35885))))

(assert (=> d!19139 (= (contains!748 lt!35885 (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))) lt!36856)))

(declare-fun b!79513 () Bool)

(declare-fun e!51925 () Bool)

(assert (=> b!79513 (= e!51924 e!51925)))

(declare-fun res!41497 () Bool)

(assert (=> b!79513 (=> res!41497 e!51925)))

(assert (=> b!79513 (= res!41497 (= (h!2117 lt!35885) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun b!79514 () Bool)

(assert (=> b!79514 (= e!51925 (contains!748 (t!5183 lt!35885) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(assert (= (and d!19139 res!41496) b!79513))

(assert (= (and b!79513 (not res!41497)) b!79514))

(declare-fun m!80469 () Bool)

(assert (=> d!19139 m!80469))

(declare-fun m!80471 () Bool)

(assert (=> d!19139 m!80471))

(declare-fun m!80473 () Bool)

(assert (=> b!79514 m!80473))

(assert (=> b!78764 d!19139))

(declare-fun d!19141 () Bool)

(assert (=> d!19141 (= (get!1190 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2593 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!78339 d!19141))

(assert (=> b!78253 d!18717))

(declare-fun d!19143 () Bool)

(assert (=> d!19143 (= (apply!79 lt!36286 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1192 (getValueByKey!136 (toList!748 lt!36286) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3356 () Bool)

(assert (= bs!3356 d!19143))

(assert (=> bs!3356 m!78153))

(declare-fun m!80475 () Bool)

(assert (=> bs!3356 m!80475))

(assert (=> bs!3356 m!80475))

(declare-fun m!80477 () Bool)

(assert (=> bs!3356 m!80477))

(assert (=> b!78578 d!19143))

(declare-fun d!19145 () Bool)

(declare-fun c!12358 () Bool)

(assert (=> d!19145 (= c!12358 ((_ is ValueCellFull!912) (select (arr!1895 (ite c!11979 (_values!2255 newMap!16) lt!36057)) #b00000000000000000000000000000000)))))

(declare-fun e!51926 () V!2995)

(assert (=> d!19145 (= (get!1189 (select (arr!1895 (ite c!11979 (_values!2255 newMap!16) lt!36057)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51926)))

(declare-fun b!79515 () Bool)

(assert (=> b!79515 (= e!51926 (get!1190 (select (arr!1895 (ite c!11979 (_values!2255 newMap!16) lt!36057)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79516 () Bool)

(assert (=> b!79516 (= e!51926 (get!1191 (select (arr!1895 (ite c!11979 (_values!2255 newMap!16) lt!36057)) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19145 c!12358) b!79515))

(assert (= (and d!19145 (not c!12358)) b!79516))

(assert (=> b!79515 m!78781))

(assert (=> b!79515 m!78273))

(declare-fun m!80479 () Bool)

(assert (=> b!79515 m!80479))

(assert (=> b!79516 m!78781))

(assert (=> b!79516 m!78273))

(declare-fun m!80481 () Bool)

(assert (=> b!79516 m!80481))

(assert (=> b!78578 d!19145))

(declare-fun d!19147 () Bool)

(declare-fun res!41498 () Bool)

(declare-fun e!51927 () Bool)

(assert (=> d!19147 (=> res!41498 e!51927)))

(assert (=> d!19147 (= res!41498 (and ((_ is Cons!1529) lt!35908) (= (_1!1105 (h!2117 lt!35908)) (_1!1105 lt!35788))))))

(assert (=> d!19147 (= (containsKey!140 lt!35908 (_1!1105 lt!35788)) e!51927)))

(declare-fun b!79517 () Bool)

(declare-fun e!51928 () Bool)

(assert (=> b!79517 (= e!51927 e!51928)))

(declare-fun res!41499 () Bool)

(assert (=> b!79517 (=> (not res!41499) (not e!51928))))

(assert (=> b!79517 (= res!41499 (and (or (not ((_ is Cons!1529) lt!35908)) (bvsle (_1!1105 (h!2117 lt!35908)) (_1!1105 lt!35788))) ((_ is Cons!1529) lt!35908) (bvslt (_1!1105 (h!2117 lt!35908)) (_1!1105 lt!35788))))))

(declare-fun b!79518 () Bool)

(assert (=> b!79518 (= e!51928 (containsKey!140 (t!5183 lt!35908) (_1!1105 lt!35788)))))

(assert (= (and d!19147 (not res!41498)) b!79517))

(assert (= (and b!79517 res!41499) b!79518))

(declare-fun m!80483 () Bool)

(assert (=> b!79518 m!80483))

(assert (=> b!78490 d!19147))

(declare-fun d!19149 () Bool)

(declare-fun res!41500 () Bool)

(declare-fun e!51929 () Bool)

(assert (=> d!19149 (=> res!41500 e!51929)))

(assert (=> d!19149 (= res!41500 (or ((_ is Nil!1530) lt!36419) ((_ is Nil!1530) (t!5183 lt!36419))))))

(assert (=> d!19149 (= (isStrictlySorted!290 lt!36419) e!51929)))

(declare-fun b!79519 () Bool)

(declare-fun e!51930 () Bool)

(assert (=> b!79519 (= e!51929 e!51930)))

(declare-fun res!41501 () Bool)

(assert (=> b!79519 (=> (not res!41501) (not e!51930))))

(assert (=> b!79519 (= res!41501 (bvslt (_1!1105 (h!2117 lt!36419)) (_1!1105 (h!2117 (t!5183 lt!36419)))))))

(declare-fun b!79520 () Bool)

(assert (=> b!79520 (= e!51930 (isStrictlySorted!290 (t!5183 lt!36419)))))

(assert (= (and d!19149 (not res!41500)) b!79519))

(assert (= (and b!79519 res!41501) b!79520))

(declare-fun m!80485 () Bool)

(assert (=> b!79520 m!80485))

(assert (=> d!18675 d!19149))

(declare-fun d!19151 () Bool)

(declare-fun res!41502 () Bool)

(declare-fun e!51931 () Bool)

(assert (=> d!19151 (=> res!41502 e!51931)))

(assert (=> d!19151 (= res!41502 (or ((_ is Nil!1530) (toList!748 lt!35777)) ((_ is Nil!1530) (t!5183 (toList!748 lt!35777)))))))

(assert (=> d!19151 (= (isStrictlySorted!290 (toList!748 lt!35777)) e!51931)))

(declare-fun b!79521 () Bool)

(declare-fun e!51932 () Bool)

(assert (=> b!79521 (= e!51931 e!51932)))

(declare-fun res!41503 () Bool)

(assert (=> b!79521 (=> (not res!41503) (not e!51932))))

(assert (=> b!79521 (= res!41503 (bvslt (_1!1105 (h!2117 (toList!748 lt!35777))) (_1!1105 (h!2117 (t!5183 (toList!748 lt!35777))))))))

(declare-fun b!79522 () Bool)

(assert (=> b!79522 (= e!51932 (isStrictlySorted!290 (t!5183 (toList!748 lt!35777))))))

(assert (= (and d!19151 (not res!41502)) b!79521))

(assert (= (and b!79521 res!41503) b!79522))

(assert (=> b!79522 m!80133))

(assert (=> d!18675 d!19151))

(declare-fun d!19153 () Bool)

(assert (=> d!19153 (= (apply!79 lt!36448 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1192 (getValueByKey!136 (toList!748 lt!36448) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3357 () Bool)

(assert (= bs!3357 d!19153))

(assert (=> bs!3357 m!78153))

(declare-fun m!80487 () Bool)

(assert (=> bs!3357 m!80487))

(assert (=> bs!3357 m!80487))

(declare-fun m!80489 () Bool)

(assert (=> bs!3357 m!80489))

(assert (=> b!78736 d!19153))

(declare-fun c!12359 () Bool)

(declare-fun d!19155 () Bool)

(assert (=> d!19155 (= c!12359 ((_ is ValueCellFull!912) (select (arr!1895 (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!51933 () V!2995)

(assert (=> d!19155 (= (get!1189 (select (arr!1895 (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!51933)))

(declare-fun b!79523 () Bool)

(assert (=> b!79523 (= e!51933 (get!1190 (select (arr!1895 (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79524 () Bool)

(assert (=> b!79524 (= e!51933 (get!1191 (select (arr!1895 (ite (or c!11979 c!11983) (_values!2255 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19155 c!12359) b!79523))

(assert (= (and d!19155 (not c!12359)) b!79524))

(assert (=> b!79523 m!79051))

(assert (=> b!79523 m!78273))

(declare-fun m!80491 () Bool)

(assert (=> b!79523 m!80491))

(assert (=> b!79524 m!79051))

(assert (=> b!79524 m!78273))

(declare-fun m!80493 () Bool)

(assert (=> b!79524 m!80493))

(assert (=> b!78736 d!19155))

(declare-fun lt!36857 () Bool)

(declare-fun d!19157 () Bool)

(assert (=> d!19157 (= lt!36857 (select (content!82 (toList!748 lt!36175)) (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun e!51934 () Bool)

(assert (=> d!19157 (= lt!36857 e!51934)))

(declare-fun res!41504 () Bool)

(assert (=> d!19157 (=> (not res!41504) (not e!51934))))

(assert (=> d!19157 (= res!41504 ((_ is Cons!1529) (toList!748 lt!36175)))))

(assert (=> d!19157 (= (contains!748 (toList!748 lt!36175) (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36857)))

(declare-fun b!79525 () Bool)

(declare-fun e!51935 () Bool)

(assert (=> b!79525 (= e!51934 e!51935)))

(declare-fun res!41505 () Bool)

(assert (=> b!79525 (=> res!41505 e!51935)))

(assert (=> b!79525 (= res!41505 (= (h!2117 (toList!748 lt!36175)) (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!79526 () Bool)

(assert (=> b!79526 (= e!51935 (contains!748 (t!5183 (toList!748 lt!36175)) (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!19157 res!41504) b!79525))

(assert (= (and b!79525 (not res!41505)) b!79526))

(declare-fun m!80495 () Bool)

(assert (=> d!19157 m!80495))

(declare-fun m!80497 () Bool)

(assert (=> d!19157 m!80497))

(declare-fun m!80499 () Bool)

(assert (=> b!79526 m!80499))

(assert (=> b!78429 d!19157))

(declare-fun d!19159 () Bool)

(declare-fun res!41506 () Bool)

(declare-fun e!51936 () Bool)

(assert (=> d!19159 (=> res!41506 e!51936)))

(assert (=> d!19159 (= res!41506 (and ((_ is Cons!1529) (toList!748 lt!35867)) (= (_1!1105 (h!2117 (toList!748 lt!35867))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19159 (= (containsKey!140 (toList!748 lt!35867) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!51936)))

(declare-fun b!79527 () Bool)

(declare-fun e!51937 () Bool)

(assert (=> b!79527 (= e!51936 e!51937)))

(declare-fun res!41507 () Bool)

(assert (=> b!79527 (=> (not res!41507) (not e!51937))))

(assert (=> b!79527 (= res!41507 (and (or (not ((_ is Cons!1529) (toList!748 lt!35867))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35867))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1529) (toList!748 lt!35867)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35867))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!79528 () Bool)

(assert (=> b!79528 (= e!51937 (containsKey!140 (t!5183 (toList!748 lt!35867)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19159 (not res!41506)) b!79527))

(assert (= (and b!79527 res!41507) b!79528))

(assert (=> b!79528 m!77883))

(declare-fun m!80501 () Bool)

(assert (=> b!79528 m!80501))

(assert (=> d!18469 d!19159))

(assert (=> b!78710 d!18421))

(assert (=> b!78380 d!18895))

(assert (=> b!78380 d!18681))

(declare-fun d!19161 () Bool)

(declare-fun e!51939 () Bool)

(assert (=> d!19161 e!51939))

(declare-fun res!41508 () Bool)

(assert (=> d!19161 (=> res!41508 e!51939)))

(declare-fun lt!36858 () Bool)

(assert (=> d!19161 (= res!41508 (not lt!36858))))

(declare-fun lt!36859 () Bool)

(assert (=> d!19161 (= lt!36858 lt!36859)))

(declare-fun lt!36860 () Unit!2263)

(declare-fun e!51938 () Unit!2263)

(assert (=> d!19161 (= lt!36860 e!51938)))

(declare-fun c!12360 () Bool)

(assert (=> d!19161 (= c!12360 lt!36859)))

(assert (=> d!19161 (= lt!36859 (containsKey!140 (toList!748 lt!36233) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!19161 (= (contains!745 lt!36233 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36858)))

(declare-fun b!79529 () Bool)

(declare-fun lt!36861 () Unit!2263)

(assert (=> b!79529 (= e!51938 lt!36861)))

(assert (=> b!79529 (= lt!36861 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36233) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> b!79529 (isDefined!90 (getValueByKey!136 (toList!748 lt!36233) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79530 () Bool)

(declare-fun Unit!2320 () Unit!2263)

(assert (=> b!79530 (= e!51938 Unit!2320)))

(declare-fun b!79531 () Bool)

(assert (=> b!79531 (= e!51939 (isDefined!90 (getValueByKey!136 (toList!748 lt!36233) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19161 c!12360) b!79529))

(assert (= (and d!19161 (not c!12360)) b!79530))

(assert (= (and d!19161 (not res!41508)) b!79531))

(declare-fun m!80503 () Bool)

(assert (=> d!19161 m!80503))

(declare-fun m!80505 () Bool)

(assert (=> b!79529 m!80505))

(assert (=> b!79529 m!78623))

(assert (=> b!79529 m!78623))

(declare-fun m!80507 () Bool)

(assert (=> b!79529 m!80507))

(assert (=> b!79531 m!78623))

(assert (=> b!79531 m!78623))

(assert (=> b!79531 m!80507))

(assert (=> d!18605 d!19161))

(declare-fun b!79533 () Bool)

(declare-fun e!51940 () Option!142)

(declare-fun e!51941 () Option!142)

(assert (=> b!79533 (= e!51940 e!51941)))

(declare-fun c!12362 () Bool)

(assert (=> b!79533 (= c!12362 (and ((_ is Cons!1529) lt!36230) (not (= (_1!1105 (h!2117 lt!36230)) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79532 () Bool)

(assert (=> b!79532 (= e!51940 (Some!141 (_2!1105 (h!2117 lt!36230))))))

(declare-fun b!79534 () Bool)

(assert (=> b!79534 (= e!51941 (getValueByKey!136 (t!5183 lt!36230) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79535 () Bool)

(assert (=> b!79535 (= e!51941 None!140)))

(declare-fun d!19163 () Bool)

(declare-fun c!12361 () Bool)

(assert (=> d!19163 (= c!12361 (and ((_ is Cons!1529) lt!36230) (= (_1!1105 (h!2117 lt!36230)) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19163 (= (getValueByKey!136 lt!36230 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!51940)))

(assert (= (and d!19163 c!12361) b!79532))

(assert (= (and d!19163 (not c!12361)) b!79533))

(assert (= (and b!79533 c!12362) b!79534))

(assert (= (and b!79533 (not c!12362)) b!79535))

(declare-fun m!80509 () Bool)

(assert (=> b!79534 m!80509))

(assert (=> d!18605 d!19163))

(declare-fun d!19165 () Bool)

(assert (=> d!19165 (= (getValueByKey!136 lt!36230 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36862 () Unit!2263)

(assert (=> d!19165 (= lt!36862 (choose!468 lt!36230 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun e!51942 () Bool)

(assert (=> d!19165 e!51942))

(declare-fun res!41509 () Bool)

(assert (=> d!19165 (=> (not res!41509) (not e!51942))))

(assert (=> d!19165 (= res!41509 (isStrictlySorted!290 lt!36230))))

(assert (=> d!19165 (= (lemmaContainsTupThenGetReturnValue!55 lt!36230 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36862)))

(declare-fun b!79536 () Bool)

(declare-fun res!41510 () Bool)

(assert (=> b!79536 (=> (not res!41510) (not e!51942))))

(assert (=> b!79536 (= res!41510 (containsKey!140 lt!36230 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79537 () Bool)

(assert (=> b!79537 (= e!51942 (contains!748 lt!36230 (tuple2!2191 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19165 res!41509) b!79536))

(assert (= (and b!79536 res!41510) b!79537))

(assert (=> d!19165 m!78617))

(declare-fun m!80511 () Bool)

(assert (=> d!19165 m!80511))

(declare-fun m!80513 () Bool)

(assert (=> d!19165 m!80513))

(declare-fun m!80515 () Bool)

(assert (=> b!79536 m!80515))

(declare-fun m!80517 () Bool)

(assert (=> b!79537 m!80517))

(assert (=> d!18605 d!19165))

(declare-fun b!79538 () Bool)

(declare-fun c!12363 () Bool)

(assert (=> b!79538 (= c!12363 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (bvsgt (_1!1105 (h!2117 (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun e!51946 () List!1533)

(declare-fun e!51943 () List!1533)

(assert (=> b!79538 (= e!51946 e!51943)))

(declare-fun call!7337 () List!1533)

(declare-fun e!51945 () List!1533)

(declare-fun c!12364 () Bool)

(declare-fun bm!7332 () Bool)

(assert (=> bm!7332 (= call!7337 ($colon$colon!68 e!51945 (ite c!12364 (h!2117 (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (tuple2!2191 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun c!12365 () Bool)

(assert (=> bm!7332 (= c!12365 c!12364)))

(declare-fun d!19167 () Bool)

(declare-fun e!51947 () Bool)

(assert (=> d!19167 e!51947))

(declare-fun res!41511 () Bool)

(assert (=> d!19167 (=> (not res!41511) (not e!51947))))

(declare-fun lt!36863 () List!1533)

(assert (=> d!19167 (= res!41511 (isStrictlySorted!290 lt!36863))))

(declare-fun e!51944 () List!1533)

(assert (=> d!19167 (= lt!36863 e!51944)))

(assert (=> d!19167 (= c!12364 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (bvslt (_1!1105 (h!2117 (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19167 (isStrictlySorted!290 (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!19167 (= (insertStrictlySorted!57 (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36863)))

(declare-fun c!12366 () Bool)

(declare-fun b!79539 () Bool)

(assert (=> b!79539 (= e!51945 (ite c!12366 (t!5183 (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (ite c!12363 (Cons!1529 (h!2117 (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (t!5183 (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))) Nil!1530)))))

(declare-fun bm!7333 () Bool)

(declare-fun call!7336 () List!1533)

(assert (=> bm!7333 (= call!7336 call!7337)))

(declare-fun b!79540 () Bool)

(assert (=> b!79540 (= e!51944 call!7337)))

(declare-fun b!79541 () Bool)

(declare-fun res!41512 () Bool)

(assert (=> b!79541 (=> (not res!41512) (not e!51947))))

(assert (=> b!79541 (= res!41512 (containsKey!140 lt!36863 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79542 () Bool)

(declare-fun call!7335 () List!1533)

(assert (=> b!79542 (= e!51943 call!7335)))

(declare-fun b!79543 () Bool)

(assert (=> b!79543 (= e!51946 call!7336)))

(declare-fun b!79544 () Bool)

(assert (=> b!79544 (= e!51944 e!51946)))

(assert (=> b!79544 (= c!12366 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun bm!7334 () Bool)

(assert (=> bm!7334 (= call!7335 call!7336)))

(declare-fun b!79545 () Bool)

(assert (=> b!79545 (= e!51945 (insertStrictlySorted!57 (t!5183 (toList!748 (+!109 lt!35785 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79546 () Bool)

(assert (=> b!79546 (= e!51947 (contains!748 lt!36863 (tuple2!2191 (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79547 () Bool)

(assert (=> b!79547 (= e!51943 call!7335)))

(assert (= (and d!19167 c!12364) b!79540))

(assert (= (and d!19167 (not c!12364)) b!79544))

(assert (= (and b!79544 c!12366) b!79543))

(assert (= (and b!79544 (not c!12366)) b!79538))

(assert (= (and b!79538 c!12363) b!79547))

(assert (= (and b!79538 (not c!12363)) b!79542))

(assert (= (or b!79547 b!79542) bm!7334))

(assert (= (or b!79543 bm!7334) bm!7333))

(assert (= (or b!79540 bm!7333) bm!7332))

(assert (= (and bm!7332 c!12365) b!79545))

(assert (= (and bm!7332 (not c!12365)) b!79539))

(assert (= (and d!19167 res!41511) b!79541))

(assert (= (and b!79541 res!41512) b!79546))

(declare-fun m!80519 () Bool)

(assert (=> b!79541 m!80519))

(declare-fun m!80521 () Bool)

(assert (=> b!79546 m!80521))

(declare-fun m!80523 () Bool)

(assert (=> d!19167 m!80523))

(declare-fun m!80525 () Bool)

(assert (=> d!19167 m!80525))

(declare-fun m!80527 () Bool)

(assert (=> bm!7332 m!80527))

(declare-fun m!80529 () Bool)

(assert (=> b!79545 m!80529))

(assert (=> d!18605 d!19167))

(declare-fun d!19169 () Bool)

(declare-fun res!41513 () Bool)

(declare-fun e!51948 () Bool)

(assert (=> d!19169 (=> res!41513 e!51948)))

(assert (=> d!19169 (= res!41513 (and ((_ is Cons!1529) lt!35881) (= (_1!1105 (h!2117 lt!35881)) (_1!1105 lt!35783))))))

(assert (=> d!19169 (= (containsKey!140 lt!35881 (_1!1105 lt!35783)) e!51948)))

(declare-fun b!79548 () Bool)

(declare-fun e!51949 () Bool)

(assert (=> b!79548 (= e!51948 e!51949)))

(declare-fun res!41514 () Bool)

(assert (=> b!79548 (=> (not res!41514) (not e!51949))))

(assert (=> b!79548 (= res!41514 (and (or (not ((_ is Cons!1529) lt!35881)) (bvsle (_1!1105 (h!2117 lt!35881)) (_1!1105 lt!35783))) ((_ is Cons!1529) lt!35881) (bvslt (_1!1105 (h!2117 lt!35881)) (_1!1105 lt!35783))))))

(declare-fun b!79549 () Bool)

(assert (=> b!79549 (= e!51949 (containsKey!140 (t!5183 lt!35881) (_1!1105 lt!35783)))))

(assert (= (and d!19169 (not res!41513)) b!79548))

(assert (= (and b!79548 res!41514) b!79549))

(declare-fun m!80531 () Bool)

(assert (=> b!79549 m!80531))

(assert (=> b!78389 d!19169))

(declare-fun d!19171 () Bool)

(declare-fun e!51951 () Bool)

(assert (=> d!19171 e!51951))

(declare-fun res!41515 () Bool)

(assert (=> d!19171 (=> res!41515 e!51951)))

(declare-fun lt!36864 () Bool)

(assert (=> d!19171 (= res!41515 (not lt!36864))))

(declare-fun lt!36865 () Bool)

(assert (=> d!19171 (= lt!36864 lt!36865)))

(declare-fun lt!36866 () Unit!2263)

(declare-fun e!51950 () Unit!2263)

(assert (=> d!19171 (= lt!36866 e!51950)))

(declare-fun c!12367 () Bool)

(assert (=> d!19171 (= c!12367 lt!36865)))

(assert (=> d!19171 (= lt!36865 (containsKey!140 (toList!748 lt!36112) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19171 (= (contains!745 lt!36112 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36864)))

(declare-fun b!79550 () Bool)

(declare-fun lt!36867 () Unit!2263)

(assert (=> b!79550 (= e!51950 lt!36867)))

(assert (=> b!79550 (= lt!36867 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36112) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79550 (isDefined!90 (getValueByKey!136 (toList!748 lt!36112) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79551 () Bool)

(declare-fun Unit!2321 () Unit!2263)

(assert (=> b!79551 (= e!51950 Unit!2321)))

(declare-fun b!79552 () Bool)

(assert (=> b!79552 (= e!51951 (isDefined!90 (getValueByKey!136 (toList!748 lt!36112) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19171 c!12367) b!79550))

(assert (= (and d!19171 (not c!12367)) b!79551))

(assert (= (and d!19171 (not res!41515)) b!79552))

(declare-fun m!80533 () Bool)

(assert (=> d!19171 m!80533))

(declare-fun m!80535 () Bool)

(assert (=> b!79550 m!80535))

(declare-fun m!80537 () Bool)

(assert (=> b!79550 m!80537))

(assert (=> b!79550 m!80537))

(declare-fun m!80539 () Bool)

(assert (=> b!79550 m!80539))

(assert (=> b!79552 m!80537))

(assert (=> b!79552 m!80537))

(assert (=> b!79552 m!80539))

(assert (=> bm!7181 d!19171))

(declare-fun d!19173 () Bool)

(declare-fun lt!36868 () Bool)

(assert (=> d!19173 (= lt!36868 (select (content!82 (t!5183 (toList!748 lt!35888))) lt!35788))))

(declare-fun e!51952 () Bool)

(assert (=> d!19173 (= lt!36868 e!51952)))

(declare-fun res!41516 () Bool)

(assert (=> d!19173 (=> (not res!41516) (not e!51952))))

(assert (=> d!19173 (= res!41516 ((_ is Cons!1529) (t!5183 (toList!748 lt!35888))))))

(assert (=> d!19173 (= (contains!748 (t!5183 (toList!748 lt!35888)) lt!35788) lt!36868)))

(declare-fun b!79553 () Bool)

(declare-fun e!51953 () Bool)

(assert (=> b!79553 (= e!51952 e!51953)))

(declare-fun res!41517 () Bool)

(assert (=> b!79553 (=> res!41517 e!51953)))

(assert (=> b!79553 (= res!41517 (= (h!2117 (t!5183 (toList!748 lt!35888))) lt!35788))))

(declare-fun b!79554 () Bool)

(assert (=> b!79554 (= e!51953 (contains!748 (t!5183 (t!5183 (toList!748 lt!35888))) lt!35788))))

(assert (= (and d!19173 res!41516) b!79553))

(assert (= (and b!79553 (not res!41517)) b!79554))

(declare-fun m!80541 () Bool)

(assert (=> d!19173 m!80541))

(declare-fun m!80543 () Bool)

(assert (=> d!19173 m!80543))

(declare-fun m!80545 () Bool)

(assert (=> b!79554 m!80545))

(assert (=> b!78552 d!19173))

(declare-fun d!19175 () Bool)

(declare-fun res!41519 () Bool)

(declare-fun e!51955 () Bool)

(assert (=> d!19175 (=> res!41519 e!51955)))

(assert (=> d!19175 (= res!41519 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!19175 (= (arrayNoDuplicates!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12007 (Cons!1530 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) Nil!1531) Nil!1531)) e!51955)))

(declare-fun b!79555 () Bool)

(declare-fun e!51954 () Bool)

(assert (=> b!79555 (= e!51954 (contains!747 (ite c!12007 (Cons!1530 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) Nil!1531) Nil!1531) (select (arr!1894 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun call!7338 () Bool)

(declare-fun bm!7335 () Bool)

(declare-fun c!12368 () Bool)

(assert (=> bm!7335 (= call!7338 (arrayNoDuplicates!0 (_keys!3932 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!12368 (Cons!1530 (select (arr!1894 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!12007 (Cons!1530 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) Nil!1531) Nil!1531)) (ite c!12007 (Cons!1530 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) Nil!1531) Nil!1531))))))

(declare-fun b!79556 () Bool)

(declare-fun e!51957 () Bool)

(declare-fun e!51956 () Bool)

(assert (=> b!79556 (= e!51957 e!51956)))

(assert (=> b!79556 (= c!12368 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!79557 () Bool)

(assert (=> b!79557 (= e!51956 call!7338)))

(declare-fun b!79558 () Bool)

(assert (=> b!79558 (= e!51955 e!51957)))

(declare-fun res!41518 () Bool)

(assert (=> b!79558 (=> (not res!41518) (not e!51957))))

(assert (=> b!79558 (= res!41518 (not e!51954))))

(declare-fun res!41520 () Bool)

(assert (=> b!79558 (=> (not res!41520) (not e!51954))))

(assert (=> b!79558 (= res!41520 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!79559 () Bool)

(assert (=> b!79559 (= e!51956 call!7338)))

(assert (= (and d!19175 (not res!41519)) b!79558))

(assert (= (and b!79558 res!41520) b!79555))

(assert (= (and b!79558 res!41518) b!79556))

(assert (= (and b!79556 c!12368) b!79557))

(assert (= (and b!79556 (not c!12368)) b!79559))

(assert (= (or b!79557 b!79559) bm!7335))

(assert (=> b!79555 m!79447))

(assert (=> b!79555 m!79447))

(declare-fun m!80547 () Bool)

(assert (=> b!79555 m!80547))

(assert (=> bm!7335 m!79447))

(declare-fun m!80549 () Bool)

(assert (=> bm!7335 m!80549))

(assert (=> b!79556 m!79447))

(assert (=> b!79556 m!79447))

(assert (=> b!79556 m!79449))

(assert (=> b!79558 m!79447))

(assert (=> b!79558 m!79447))

(assert (=> b!79558 m!79449))

(assert (=> bm!7178 d!19175))

(declare-fun d!19177 () Bool)

(assert (=> d!19177 (= (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!78293 d!19177))

(assert (=> b!78485 d!18835))

(assert (=> b!78485 d!18639))

(declare-fun d!19179 () Bool)

(declare-fun e!51958 () Bool)

(assert (=> d!19179 e!51958))

(declare-fun res!41521 () Bool)

(assert (=> d!19179 (=> (not res!41521) (not e!51958))))

(declare-fun lt!36872 () ListLongMap!1465)

(assert (=> d!19179 (= res!41521 (contains!745 lt!36872 (_1!1105 (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(declare-fun lt!36869 () List!1533)

(assert (=> d!19179 (= lt!36872 (ListLongMap!1466 lt!36869))))

(declare-fun lt!36871 () Unit!2263)

(declare-fun lt!36870 () Unit!2263)

(assert (=> d!19179 (= lt!36871 lt!36870)))

(assert (=> d!19179 (= (getValueByKey!136 lt!36869 (_1!1105 (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))) (Some!141 (_2!1105 (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!19179 (= lt!36870 (lemmaContainsTupThenGetReturnValue!55 lt!36869 (_1!1105 (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (_2!1105 (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!19179 (= lt!36869 (insertStrictlySorted!57 (toList!748 (ite c!12124 call!7239 (ite c!12126 call!7241 call!7237))) (_1!1105 (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (_2!1105 (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(assert (=> d!19179 (= (+!109 (ite c!12124 call!7239 (ite c!12126 call!7241 call!7237)) (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) lt!36872)))

(declare-fun b!79560 () Bool)

(declare-fun res!41522 () Bool)

(assert (=> b!79560 (=> (not res!41522) (not e!51958))))

(assert (=> b!79560 (= res!41522 (= (getValueByKey!136 (toList!748 lt!36872) (_1!1105 (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))) (Some!141 (_2!1105 (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))))

(declare-fun b!79561 () Bool)

(assert (=> b!79561 (= e!51958 (contains!748 (toList!748 lt!36872) (ite (or c!12124 c!12126) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (= (and d!19179 res!41521) b!79560))

(assert (= (and b!79560 res!41522) b!79561))

(declare-fun m!80551 () Bool)

(assert (=> d!19179 m!80551))

(declare-fun m!80553 () Bool)

(assert (=> d!19179 m!80553))

(declare-fun m!80555 () Bool)

(assert (=> d!19179 m!80555))

(declare-fun m!80557 () Bool)

(assert (=> d!19179 m!80557))

(declare-fun m!80559 () Bool)

(assert (=> b!79560 m!80559))

(declare-fun m!80561 () Bool)

(assert (=> b!79561 m!80561))

(assert (=> bm!7238 d!19179))

(declare-fun d!19181 () Bool)

(declare-fun res!41523 () Bool)

(declare-fun e!51959 () Bool)

(assert (=> d!19181 (=> res!41523 e!51959)))

(assert (=> d!19181 (= res!41523 (and ((_ is Cons!1529) (toList!748 lt!35969)) (= (_1!1105 (h!2117 (toList!748 lt!35969))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!19181 (= (containsKey!140 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!51959)))

(declare-fun b!79562 () Bool)

(declare-fun e!51960 () Bool)

(assert (=> b!79562 (= e!51959 e!51960)))

(declare-fun res!41524 () Bool)

(assert (=> b!79562 (=> (not res!41524) (not e!51960))))

(assert (=> b!79562 (= res!41524 (and (or (not ((_ is Cons!1529) (toList!748 lt!35969))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35969))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1529) (toList!748 lt!35969)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35969))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!79563 () Bool)

(assert (=> b!79563 (= e!51960 (containsKey!140 (t!5183 (toList!748 lt!35969)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!19181 (not res!41523)) b!79562))

(assert (= (and b!79562 res!41524) b!79563))

(assert (=> b!79563 m!77883))

(declare-fun m!80563 () Bool)

(assert (=> b!79563 m!80563))

(assert (=> d!18465 d!19181))

(assert (=> b!78646 d!18471))

(declare-fun d!19183 () Bool)

(assert (=> d!19183 (= ($colon$colon!68 e!51429 (ite c!12110 (h!2117 (toList!748 lt!35777)) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784)))) (Cons!1529 (ite c!12110 (h!2117 (toList!748 lt!35777)) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))) e!51429))))

(assert (=> bm!7230 d!19183))

(declare-fun b!79565 () Bool)

(declare-fun e!51961 () Option!142)

(declare-fun e!51962 () Option!142)

(assert (=> b!79565 (= e!51961 e!51962)))

(declare-fun c!12370 () Bool)

(assert (=> b!79565 (= c!12370 (and ((_ is Cons!1529) (toList!748 lt!36311)) (not (= (_1!1105 (h!2117 (toList!748 lt!36311))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!79564 () Bool)

(assert (=> b!79564 (= e!51961 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36311)))))))

(declare-fun b!79566 () Bool)

(assert (=> b!79566 (= e!51962 (getValueByKey!136 (t!5183 (toList!748 lt!36311)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79567 () Bool)

(assert (=> b!79567 (= e!51962 None!140)))

(declare-fun d!19185 () Bool)

(declare-fun c!12369 () Bool)

(assert (=> d!19185 (= c!12369 (and ((_ is Cons!1529) (toList!748 lt!36311)) (= (_1!1105 (h!2117 (toList!748 lt!36311))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19185 (= (getValueByKey!136 (toList!748 lt!36311) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) e!51961)))

(assert (= (and d!19185 c!12369) b!79564))

(assert (= (and d!19185 (not c!12369)) b!79565))

(assert (= (and b!79565 c!12370) b!79566))

(assert (= (and b!79565 (not c!12370)) b!79567))

(declare-fun m!80565 () Bool)

(assert (=> b!79566 m!80565))

(assert (=> b!78606 d!19185))

(declare-fun d!19187 () Bool)

(declare-fun e!51964 () Bool)

(assert (=> d!19187 e!51964))

(declare-fun res!41525 () Bool)

(assert (=> d!19187 (=> res!41525 e!51964)))

(declare-fun lt!36873 () Bool)

(assert (=> d!19187 (= res!41525 (not lt!36873))))

(declare-fun lt!36874 () Bool)

(assert (=> d!19187 (= lt!36873 lt!36874)))

(declare-fun lt!36875 () Unit!2263)

(declare-fun e!51963 () Unit!2263)

(assert (=> d!19187 (= lt!36875 e!51963)))

(declare-fun c!12371 () Bool)

(assert (=> d!19187 (= c!12371 lt!36874)))

(assert (=> d!19187 (= lt!36874 (containsKey!140 (toList!748 lt!36253) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19187 (= (contains!745 lt!36253 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) lt!36873)))

(declare-fun b!79568 () Bool)

(declare-fun lt!36876 () Unit!2263)

(assert (=> b!79568 (= e!51963 lt!36876)))

(assert (=> b!79568 (= lt!36876 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36253) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> b!79568 (isDefined!90 (getValueByKey!136 (toList!748 lt!36253) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79569 () Bool)

(declare-fun Unit!2322 () Unit!2263)

(assert (=> b!79569 (= e!51963 Unit!2322)))

(declare-fun b!79570 () Bool)

(assert (=> b!79570 (= e!51964 (isDefined!90 (getValueByKey!136 (toList!748 lt!36253) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(assert (= (and d!19187 c!12371) b!79568))

(assert (= (and d!19187 (not c!12371)) b!79569))

(assert (= (and d!19187 (not res!41525)) b!79570))

(declare-fun m!80567 () Bool)

(assert (=> d!19187 m!80567))

(declare-fun m!80569 () Bool)

(assert (=> b!79568 m!80569))

(assert (=> b!79568 m!78683))

(assert (=> b!79568 m!78683))

(declare-fun m!80571 () Bool)

(assert (=> b!79568 m!80571))

(assert (=> b!79570 m!78683))

(assert (=> b!79570 m!78683))

(assert (=> b!79570 m!80571))

(assert (=> d!18619 d!19187))

(declare-fun b!79572 () Bool)

(declare-fun e!51965 () Option!142)

(declare-fun e!51966 () Option!142)

(assert (=> b!79572 (= e!51965 e!51966)))

(declare-fun c!12373 () Bool)

(assert (=> b!79572 (= c!12373 (and ((_ is Cons!1529) lt!36250) (not (= (_1!1105 (h!2117 lt!36250)) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))))

(declare-fun b!79571 () Bool)

(assert (=> b!79571 (= e!51965 (Some!141 (_2!1105 (h!2117 lt!36250))))))

(declare-fun b!79573 () Bool)

(assert (=> b!79573 (= e!51966 (getValueByKey!136 (t!5183 lt!36250) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79574 () Bool)

(assert (=> b!79574 (= e!51966 None!140)))

(declare-fun d!19189 () Bool)

(declare-fun c!12372 () Bool)

(assert (=> d!19189 (= c!12372 (and ((_ is Cons!1529) lt!36250) (= (_1!1105 (h!2117 lt!36250)) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(assert (=> d!19189 (= (getValueByKey!136 lt!36250 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) e!51965)))

(assert (= (and d!19189 c!12372) b!79571))

(assert (= (and d!19189 (not c!12372)) b!79572))

(assert (= (and b!79572 c!12373) b!79573))

(assert (= (and b!79572 (not c!12373)) b!79574))

(declare-fun m!80573 () Bool)

(assert (=> b!79573 m!80573))

(assert (=> d!18619 d!19189))

(declare-fun d!19191 () Bool)

(assert (=> d!19191 (= (getValueByKey!136 lt!36250 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (Some!141 (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun lt!36877 () Unit!2263)

(assert (=> d!19191 (= lt!36877 (choose!468 lt!36250 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun e!51967 () Bool)

(assert (=> d!19191 e!51967))

(declare-fun res!41526 () Bool)

(assert (=> d!19191 (=> (not res!41526) (not e!51967))))

(assert (=> d!19191 (= res!41526 (isStrictlySorted!290 lt!36250))))

(assert (=> d!19191 (= (lemmaContainsTupThenGetReturnValue!55 lt!36250 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) lt!36877)))

(declare-fun b!79575 () Bool)

(declare-fun res!41527 () Bool)

(assert (=> b!79575 (=> (not res!41527) (not e!51967))))

(assert (=> b!79575 (= res!41527 (containsKey!140 lt!36250 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79576 () Bool)

(assert (=> b!79576 (= e!51967 (contains!748 lt!36250 (tuple2!2191 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(assert (= (and d!19191 res!41526) b!79575))

(assert (= (and b!79575 res!41527) b!79576))

(assert (=> d!19191 m!78677))

(declare-fun m!80575 () Bool)

(assert (=> d!19191 m!80575))

(declare-fun m!80577 () Bool)

(assert (=> d!19191 m!80577))

(declare-fun m!80579 () Bool)

(assert (=> b!79575 m!80579))

(declare-fun m!80581 () Bool)

(assert (=> b!79576 m!80581))

(assert (=> d!18619 d!19191))

(declare-fun b!79577 () Bool)

(declare-fun c!12374 () Bool)

(assert (=> b!79577 (= c!12374 (and ((_ is Cons!1529) (toList!748 e!51148)) (bvsgt (_1!1105 (h!2117 (toList!748 e!51148))) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun e!51971 () List!1533)

(declare-fun e!51968 () List!1533)

(assert (=> b!79577 (= e!51971 e!51968)))

(declare-fun call!7341 () List!1533)

(declare-fun c!12375 () Bool)

(declare-fun bm!7336 () Bool)

(declare-fun e!51970 () List!1533)

(assert (=> bm!7336 (= call!7341 ($colon$colon!68 e!51970 (ite c!12375 (h!2117 (toList!748 e!51148)) (tuple2!2191 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))))

(declare-fun c!12376 () Bool)

(assert (=> bm!7336 (= c!12376 c!12375)))

(declare-fun d!19193 () Bool)

(declare-fun e!51972 () Bool)

(assert (=> d!19193 e!51972))

(declare-fun res!41528 () Bool)

(assert (=> d!19193 (=> (not res!41528) (not e!51972))))

(declare-fun lt!36878 () List!1533)

(assert (=> d!19193 (= res!41528 (isStrictlySorted!290 lt!36878))))

(declare-fun e!51969 () List!1533)

(assert (=> d!19193 (= lt!36878 e!51969)))

(assert (=> d!19193 (= c!12375 (and ((_ is Cons!1529) (toList!748 e!51148)) (bvslt (_1!1105 (h!2117 (toList!748 e!51148))) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(assert (=> d!19193 (isStrictlySorted!290 (toList!748 e!51148))))

(assert (=> d!19193 (= (insertStrictlySorted!57 (toList!748 e!51148) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) lt!36878)))

(declare-fun b!79578 () Bool)

(declare-fun c!12377 () Bool)

(assert (=> b!79578 (= e!51970 (ite c!12377 (t!5183 (toList!748 e!51148)) (ite c!12374 (Cons!1529 (h!2117 (toList!748 e!51148)) (t!5183 (toList!748 e!51148))) Nil!1530)))))

(declare-fun bm!7337 () Bool)

(declare-fun call!7340 () List!1533)

(assert (=> bm!7337 (= call!7340 call!7341)))

(declare-fun b!79579 () Bool)

(assert (=> b!79579 (= e!51969 call!7341)))

(declare-fun b!79580 () Bool)

(declare-fun res!41529 () Bool)

(assert (=> b!79580 (=> (not res!41529) (not e!51972))))

(assert (=> b!79580 (= res!41529 (containsKey!140 lt!36878 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79581 () Bool)

(declare-fun call!7339 () List!1533)

(assert (=> b!79581 (= e!51968 call!7339)))

(declare-fun b!79582 () Bool)

(assert (=> b!79582 (= e!51971 call!7340)))

(declare-fun b!79583 () Bool)

(assert (=> b!79583 (= e!51969 e!51971)))

(assert (=> b!79583 (= c!12377 (and ((_ is Cons!1529) (toList!748 e!51148)) (= (_1!1105 (h!2117 (toList!748 e!51148))) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun bm!7338 () Bool)

(assert (=> bm!7338 (= call!7339 call!7340)))

(declare-fun b!79584 () Bool)

(assert (=> b!79584 (= e!51970 (insertStrictlySorted!57 (t!5183 (toList!748 e!51148)) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79585 () Bool)

(assert (=> b!79585 (= e!51972 (contains!748 lt!36878 (tuple2!2191 (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_2!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!79586 () Bool)

(assert (=> b!79586 (= e!51968 call!7339)))

(assert (= (and d!19193 c!12375) b!79579))

(assert (= (and d!19193 (not c!12375)) b!79583))

(assert (= (and b!79583 c!12377) b!79582))

(assert (= (and b!79583 (not c!12377)) b!79577))

(assert (= (and b!79577 c!12374) b!79586))

(assert (= (and b!79577 (not c!12374)) b!79581))

(assert (= (or b!79586 b!79581) bm!7338))

(assert (= (or b!79582 bm!7338) bm!7337))

(assert (= (or b!79579 bm!7337) bm!7336))

(assert (= (and bm!7336 c!12376) b!79584))

(assert (= (and bm!7336 (not c!12376)) b!79578))

(assert (= (and d!19193 res!41528) b!79580))

(assert (= (and b!79580 res!41529) b!79585))

(declare-fun m!80583 () Bool)

(assert (=> b!79580 m!80583))

(declare-fun m!80585 () Bool)

(assert (=> b!79585 m!80585))

(declare-fun m!80587 () Bool)

(assert (=> d!19193 m!80587))

(declare-fun m!80589 () Bool)

(assert (=> d!19193 m!80589))

(declare-fun m!80591 () Bool)

(assert (=> bm!7336 m!80591))

(declare-fun m!80593 () Bool)

(assert (=> b!79584 m!80593))

(assert (=> d!18619 d!19193))

(declare-fun bm!7339 () Bool)

(declare-fun call!7342 () Bool)

(assert (=> bm!7339 (= call!7342 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3932 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun b!79587 () Bool)

(declare-fun e!51975 () Bool)

(assert (=> b!79587 (= e!51975 call!7342)))

(declare-fun b!79588 () Bool)

(declare-fun e!51974 () Bool)

(assert (=> b!79588 (= e!51974 call!7342)))

(declare-fun d!19195 () Bool)

(declare-fun res!41531 () Bool)

(declare-fun e!51973 () Bool)

(assert (=> d!19195 (=> res!41531 e!51973)))

(assert (=> d!19195 (= res!41531 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> d!19195 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992)))) e!51973)))

(declare-fun b!79589 () Bool)

(assert (=> b!79589 (= e!51975 e!51974)))

(declare-fun lt!36879 () (_ BitVec 64))

(assert (=> b!79589 (= lt!36879 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!36881 () Unit!2263)

(assert (=> b!79589 (= lt!36881 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) lt!36879 #b00000000000000000000000000000000))))

(assert (=> b!79589 (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) lt!36879 #b00000000000000000000000000000000)))

(declare-fun lt!36880 () Unit!2263)

(assert (=> b!79589 (= lt!36880 lt!36881)))

(declare-fun res!41530 () Bool)

(assert (=> b!79589 (= res!41530 (= (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b00000000000000000000000000000000) (_keys!3932 (v!2594 (underlying!281 thiss!992))) (mask!6268 (v!2594 (underlying!281 thiss!992)))) (Found!250 #b00000000000000000000000000000000)))))

(assert (=> b!79589 (=> (not res!41530) (not e!51974))))

(declare-fun b!79590 () Bool)

(assert (=> b!79590 (= e!51973 e!51975)))

(declare-fun c!12378 () Bool)

(assert (=> b!79590 (= c!12378 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!19195 (not res!41531)) b!79590))

(assert (= (and b!79590 c!12378) b!79589))

(assert (= (and b!79590 (not c!12378)) b!79587))

(assert (= (and b!79589 res!41530) b!79588))

(assert (= (or b!79588 b!79587) bm!7339))

(declare-fun m!80595 () Bool)

(assert (=> bm!7339 m!80595))

(assert (=> b!79589 m!80149))

(declare-fun m!80597 () Bool)

(assert (=> b!79589 m!80597))

(declare-fun m!80599 () Bool)

(assert (=> b!79589 m!80599))

(assert (=> b!79589 m!80149))

(declare-fun m!80601 () Bool)

(assert (=> b!79589 m!80601))

(assert (=> b!79590 m!80149))

(assert (=> b!79590 m!80149))

(assert (=> b!79590 m!80151))

(assert (=> b!78299 d!19195))

(declare-fun d!19197 () Bool)

(declare-fun res!41532 () Bool)

(declare-fun e!51976 () Bool)

(assert (=> d!19197 (=> res!41532 e!51976)))

(assert (=> d!19197 (= res!41532 (or ((_ is Nil!1530) lt!36467) ((_ is Nil!1530) (t!5183 lt!36467))))))

(assert (=> d!19197 (= (isStrictlySorted!290 lt!36467) e!51976)))

(declare-fun b!79591 () Bool)

(declare-fun e!51977 () Bool)

(assert (=> b!79591 (= e!51976 e!51977)))

(declare-fun res!41533 () Bool)

(assert (=> b!79591 (=> (not res!41533) (not e!51977))))

(assert (=> b!79591 (= res!41533 (bvslt (_1!1105 (h!2117 lt!36467)) (_1!1105 (h!2117 (t!5183 lt!36467)))))))

(declare-fun b!79592 () Bool)

(assert (=> b!79592 (= e!51977 (isStrictlySorted!290 (t!5183 lt!36467)))))

(assert (= (and d!19197 (not res!41532)) b!79591))

(assert (= (and b!79591 res!41533) b!79592))

(declare-fun m!80603 () Bool)

(assert (=> b!79592 m!80603))

(assert (=> d!18707 d!19197))

(declare-fun d!19199 () Bool)

(declare-fun res!41534 () Bool)

(declare-fun e!51978 () Bool)

(assert (=> d!19199 (=> res!41534 e!51978)))

(assert (=> d!19199 (= res!41534 (or ((_ is Nil!1530) (toList!748 lt!35776)) ((_ is Nil!1530) (t!5183 (toList!748 lt!35776)))))))

(assert (=> d!19199 (= (isStrictlySorted!290 (toList!748 lt!35776)) e!51978)))

(declare-fun b!79593 () Bool)

(declare-fun e!51979 () Bool)

(assert (=> b!79593 (= e!51978 e!51979)))

(declare-fun res!41535 () Bool)

(assert (=> b!79593 (=> (not res!41535) (not e!51979))))

(assert (=> b!79593 (= res!41535 (bvslt (_1!1105 (h!2117 (toList!748 lt!35776))) (_1!1105 (h!2117 (t!5183 (toList!748 lt!35776))))))))

(declare-fun b!79594 () Bool)

(assert (=> b!79594 (= e!51979 (isStrictlySorted!290 (t!5183 (toList!748 lt!35776))))))

(assert (= (and d!19199 (not res!41534)) b!79593))

(assert (= (and b!79593 res!41535) b!79594))

(declare-fun m!80605 () Bool)

(assert (=> b!79594 m!80605))

(assert (=> d!18707 d!19199))

(declare-fun d!19201 () Bool)

(declare-fun e!51981 () Bool)

(assert (=> d!19201 e!51981))

(declare-fun res!41536 () Bool)

(assert (=> d!19201 (=> res!41536 e!51981)))

(declare-fun lt!36882 () Bool)

(assert (=> d!19201 (= res!41536 (not lt!36882))))

(declare-fun lt!36883 () Bool)

(assert (=> d!19201 (= lt!36882 lt!36883)))

(declare-fun lt!36884 () Unit!2263)

(declare-fun e!51980 () Unit!2263)

(assert (=> d!19201 (= lt!36884 e!51980)))

(declare-fun c!12379 () Bool)

(assert (=> d!19201 (= c!12379 lt!36883)))

(assert (=> d!19201 (= lt!36883 (containsKey!140 (toList!748 lt!36448) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19201 (= (contains!745 lt!36448 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36882)))

(declare-fun b!79595 () Bool)

(declare-fun lt!36885 () Unit!2263)

(assert (=> b!79595 (= e!51980 lt!36885)))

(assert (=> b!79595 (= lt!36885 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36448) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79595 (isDefined!90 (getValueByKey!136 (toList!748 lt!36448) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79596 () Bool)

(declare-fun Unit!2323 () Unit!2263)

(assert (=> b!79596 (= e!51980 Unit!2323)))

(declare-fun b!79597 () Bool)

(assert (=> b!79597 (= e!51981 (isDefined!90 (getValueByKey!136 (toList!748 lt!36448) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19201 c!12379) b!79595))

(assert (= (and d!19201 (not c!12379)) b!79596))

(assert (= (and d!19201 (not res!41536)) b!79597))

(declare-fun m!80607 () Bool)

(assert (=> d!19201 m!80607))

(declare-fun m!80609 () Bool)

(assert (=> b!79595 m!80609))

(declare-fun m!80611 () Bool)

(assert (=> b!79595 m!80611))

(assert (=> b!79595 m!80611))

(declare-fun m!80613 () Bool)

(assert (=> b!79595 m!80613))

(assert (=> b!79597 m!80611))

(assert (=> b!79597 m!80611))

(assert (=> b!79597 m!80613))

(assert (=> bm!7235 d!19201))

(declare-fun d!19203 () Bool)

(declare-fun e!51983 () Bool)

(assert (=> d!19203 e!51983))

(declare-fun res!41537 () Bool)

(assert (=> d!19203 (=> res!41537 e!51983)))

(declare-fun lt!36886 () Bool)

(assert (=> d!19203 (= res!41537 (not lt!36886))))

(declare-fun lt!36887 () Bool)

(assert (=> d!19203 (= lt!36886 lt!36887)))

(declare-fun lt!36888 () Unit!2263)

(declare-fun e!51982 () Unit!2263)

(assert (=> d!19203 (= lt!36888 e!51982)))

(declare-fun c!12380 () Bool)

(assert (=> d!19203 (= c!12380 lt!36887)))

(assert (=> d!19203 (= lt!36887 (containsKey!140 (toList!748 lt!36245) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!19203 (= (contains!745 lt!36245 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36886)))

(declare-fun b!79598 () Bool)

(declare-fun lt!36889 () Unit!2263)

(assert (=> b!79598 (= e!51982 lt!36889)))

(assert (=> b!79598 (= lt!36889 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36245) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> b!79598 (isDefined!90 (getValueByKey!136 (toList!748 lt!36245) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79599 () Bool)

(declare-fun Unit!2324 () Unit!2263)

(assert (=> b!79599 (= e!51982 Unit!2324)))

(declare-fun b!79600 () Bool)

(assert (=> b!79600 (= e!51983 (isDefined!90 (getValueByKey!136 (toList!748 lt!36245) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (= (and d!19203 c!12380) b!79598))

(assert (= (and d!19203 (not c!12380)) b!79599))

(assert (= (and d!19203 (not res!41537)) b!79600))

(declare-fun m!80615 () Bool)

(assert (=> d!19203 m!80615))

(declare-fun m!80617 () Bool)

(assert (=> b!79598 m!80617))

(assert (=> b!79598 m!78659))

(assert (=> b!79598 m!78659))

(declare-fun m!80619 () Bool)

(assert (=> b!79598 m!80619))

(assert (=> b!79600 m!78659))

(assert (=> b!79600 m!78659))

(assert (=> b!79600 m!80619))

(assert (=> d!18611 d!19203))

(declare-fun b!79602 () Bool)

(declare-fun e!51984 () Option!142)

(declare-fun e!51985 () Option!142)

(assert (=> b!79602 (= e!51984 e!51985)))

(declare-fun c!12382 () Bool)

(assert (=> b!79602 (= c!12382 (and ((_ is Cons!1529) lt!36242) (not (= (_1!1105 (h!2117 lt!36242)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!79601 () Bool)

(assert (=> b!79601 (= e!51984 (Some!141 (_2!1105 (h!2117 lt!36242))))))

(declare-fun b!79603 () Bool)

(assert (=> b!79603 (= e!51985 (getValueByKey!136 (t!5183 lt!36242) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79604 () Bool)

(assert (=> b!79604 (= e!51985 None!140)))

(declare-fun d!19205 () Bool)

(declare-fun c!12381 () Bool)

(assert (=> d!19205 (= c!12381 (and ((_ is Cons!1529) lt!36242) (= (_1!1105 (h!2117 lt!36242)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19205 (= (getValueByKey!136 lt!36242 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) e!51984)))

(assert (= (and d!19205 c!12381) b!79601))

(assert (= (and d!19205 (not c!12381)) b!79602))

(assert (= (and b!79602 c!12382) b!79603))

(assert (= (and b!79602 (not c!12382)) b!79604))

(declare-fun m!80621 () Bool)

(assert (=> b!79603 m!80621))

(assert (=> d!18611 d!19205))

(declare-fun d!19207 () Bool)

(assert (=> d!19207 (= (getValueByKey!136 lt!36242 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!36890 () Unit!2263)

(assert (=> d!19207 (= lt!36890 (choose!468 lt!36242 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun e!51986 () Bool)

(assert (=> d!19207 e!51986))

(declare-fun res!41538 () Bool)

(assert (=> d!19207 (=> (not res!41538) (not e!51986))))

(assert (=> d!19207 (= res!41538 (isStrictlySorted!290 lt!36242))))

(assert (=> d!19207 (= (lemmaContainsTupThenGetReturnValue!55 lt!36242 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36890)))

(declare-fun b!79605 () Bool)

(declare-fun res!41539 () Bool)

(assert (=> b!79605 (=> (not res!41539) (not e!51986))))

(assert (=> b!79605 (= res!41539 (containsKey!140 lt!36242 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79606 () Bool)

(assert (=> b!79606 (= e!51986 (contains!748 lt!36242 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (= (and d!19207 res!41538) b!79605))

(assert (= (and b!79605 res!41539) b!79606))

(assert (=> d!19207 m!78653))

(declare-fun m!80623 () Bool)

(assert (=> d!19207 m!80623))

(declare-fun m!80625 () Bool)

(assert (=> d!19207 m!80625))

(declare-fun m!80627 () Bool)

(assert (=> b!79605 m!80627))

(declare-fun m!80629 () Bool)

(assert (=> b!79606 m!80629))

(assert (=> d!18611 d!19207))

(declare-fun b!79607 () Bool)

(declare-fun c!12383 () Bool)

(assert (=> b!79607 (= c!12383 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (bvsgt (_1!1105 (h!2117 (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun e!51990 () List!1533)

(declare-fun e!51987 () List!1533)

(assert (=> b!79607 (= e!51990 e!51987)))

(declare-fun bm!7340 () Bool)

(declare-fun c!12384 () Bool)

(declare-fun e!51989 () List!1533)

(declare-fun call!7345 () List!1533)

(assert (=> bm!7340 (= call!7345 ($colon$colon!68 e!51989 (ite c!12384 (h!2117 (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun c!12385 () Bool)

(assert (=> bm!7340 (= c!12385 c!12384)))

(declare-fun d!19209 () Bool)

(declare-fun e!51991 () Bool)

(assert (=> d!19209 e!51991))

(declare-fun res!41540 () Bool)

(assert (=> d!19209 (=> (not res!41540) (not e!51991))))

(declare-fun lt!36891 () List!1533)

(assert (=> d!19209 (= res!41540 (isStrictlySorted!290 lt!36891))))

(declare-fun e!51988 () List!1533)

(assert (=> d!19209 (= lt!36891 e!51988)))

(assert (=> d!19209 (= c!12384 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (bvslt (_1!1105 (h!2117 (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19209 (isStrictlySorted!290 (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!19209 (= (insertStrictlySorted!57 (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36891)))

(declare-fun c!12386 () Bool)

(declare-fun b!79608 () Bool)

(assert (=> b!79608 (= e!51989 (ite c!12386 (t!5183 (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (ite c!12383 (Cons!1529 (h!2117 (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (t!5183 (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) Nil!1530)))))

(declare-fun bm!7341 () Bool)

(declare-fun call!7344 () List!1533)

(assert (=> bm!7341 (= call!7344 call!7345)))

(declare-fun b!79609 () Bool)

(assert (=> b!79609 (= e!51988 call!7345)))

(declare-fun b!79610 () Bool)

(declare-fun res!41541 () Bool)

(assert (=> b!79610 (=> (not res!41541) (not e!51991))))

(assert (=> b!79610 (= res!41541 (containsKey!140 lt!36891 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79611 () Bool)

(declare-fun call!7343 () List!1533)

(assert (=> b!79611 (= e!51987 call!7343)))

(declare-fun b!79612 () Bool)

(assert (=> b!79612 (= e!51990 call!7344)))

(declare-fun b!79613 () Bool)

(assert (=> b!79613 (= e!51988 e!51990)))

(assert (=> b!79613 (= c!12386 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun bm!7342 () Bool)

(assert (=> bm!7342 (= call!7343 call!7344)))

(declare-fun b!79614 () Bool)

(assert (=> b!79614 (= e!51989 (insertStrictlySorted!57 (t!5183 (toList!748 (+!109 lt!35785 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79615 () Bool)

(assert (=> b!79615 (= e!51991 (contains!748 lt!36891 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79616 () Bool)

(assert (=> b!79616 (= e!51987 call!7343)))

(assert (= (and d!19209 c!12384) b!79609))

(assert (= (and d!19209 (not c!12384)) b!79613))

(assert (= (and b!79613 c!12386) b!79612))

(assert (= (and b!79613 (not c!12386)) b!79607))

(assert (= (and b!79607 c!12383) b!79616))

(assert (= (and b!79607 (not c!12383)) b!79611))

(assert (= (or b!79616 b!79611) bm!7342))

(assert (= (or b!79612 bm!7342) bm!7341))

(assert (= (or b!79609 bm!7341) bm!7340))

(assert (= (and bm!7340 c!12385) b!79614))

(assert (= (and bm!7340 (not c!12385)) b!79608))

(assert (= (and d!19209 res!41540) b!79610))

(assert (= (and b!79610 res!41541) b!79615))

(declare-fun m!80631 () Bool)

(assert (=> b!79610 m!80631))

(declare-fun m!80633 () Bool)

(assert (=> b!79615 m!80633))

(declare-fun m!80635 () Bool)

(assert (=> d!19209 m!80635))

(declare-fun m!80637 () Bool)

(assert (=> d!19209 m!80637))

(declare-fun m!80639 () Bool)

(assert (=> bm!7340 m!80639))

(declare-fun m!80641 () Bool)

(assert (=> b!79614 m!80641))

(assert (=> d!18611 d!19209))

(declare-fun d!19211 () Bool)

(declare-fun e!51993 () Bool)

(assert (=> d!19211 e!51993))

(declare-fun res!41542 () Bool)

(assert (=> d!19211 (=> res!41542 e!51993)))

(declare-fun lt!36892 () Bool)

(assert (=> d!19211 (= res!41542 (not lt!36892))))

(declare-fun lt!36893 () Bool)

(assert (=> d!19211 (= lt!36892 lt!36893)))

(declare-fun lt!36894 () Unit!2263)

(declare-fun e!51992 () Unit!2263)

(assert (=> d!19211 (= lt!36894 e!51992)))

(declare-fun c!12387 () Bool)

(assert (=> d!19211 (= c!12387 lt!36893)))

(assert (=> d!19211 (= lt!36893 (containsKey!140 (toList!748 lt!36196) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!19211 (= (contains!745 lt!36196 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36892)))

(declare-fun b!79617 () Bool)

(declare-fun lt!36895 () Unit!2263)

(assert (=> b!79617 (= e!51992 lt!36895)))

(assert (=> b!79617 (= lt!36895 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36196) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> b!79617 (isDefined!90 (getValueByKey!136 (toList!748 lt!36196) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79618 () Bool)

(declare-fun Unit!2325 () Unit!2263)

(assert (=> b!79618 (= e!51992 Unit!2325)))

(declare-fun b!79619 () Bool)

(assert (=> b!79619 (= e!51993 (isDefined!90 (getValueByKey!136 (toList!748 lt!36196) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19211 c!12387) b!79617))

(assert (= (and d!19211 (not c!12387)) b!79618))

(assert (= (and d!19211 (not res!41542)) b!79619))

(declare-fun m!80643 () Bool)

(assert (=> d!19211 m!80643))

(declare-fun m!80645 () Bool)

(assert (=> b!79617 m!80645))

(assert (=> b!79617 m!78503))

(assert (=> b!79617 m!78503))

(declare-fun m!80647 () Bool)

(assert (=> b!79617 m!80647))

(assert (=> b!79619 m!78503))

(assert (=> b!79619 m!78503))

(assert (=> b!79619 m!80647))

(assert (=> d!18561 d!19211))

(declare-fun b!79621 () Bool)

(declare-fun e!51994 () Option!142)

(declare-fun e!51995 () Option!142)

(assert (=> b!79621 (= e!51994 e!51995)))

(declare-fun c!12389 () Bool)

(assert (=> b!79621 (= c!12389 (and ((_ is Cons!1529) lt!36193) (not (= (_1!1105 (h!2117 lt!36193)) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79620 () Bool)

(assert (=> b!79620 (= e!51994 (Some!141 (_2!1105 (h!2117 lt!36193))))))

(declare-fun b!79622 () Bool)

(assert (=> b!79622 (= e!51995 (getValueByKey!136 (t!5183 lt!36193) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79623 () Bool)

(assert (=> b!79623 (= e!51995 None!140)))

(declare-fun c!12388 () Bool)

(declare-fun d!19213 () Bool)

(assert (=> d!19213 (= c!12388 (and ((_ is Cons!1529) lt!36193) (= (_1!1105 (h!2117 lt!36193)) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19213 (= (getValueByKey!136 lt!36193 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!51994)))

(assert (= (and d!19213 c!12388) b!79620))

(assert (= (and d!19213 (not c!12388)) b!79621))

(assert (= (and b!79621 c!12389) b!79622))

(assert (= (and b!79621 (not c!12389)) b!79623))

(declare-fun m!80649 () Bool)

(assert (=> b!79622 m!80649))

(assert (=> d!18561 d!19213))

(declare-fun d!19215 () Bool)

(assert (=> d!19215 (= (getValueByKey!136 lt!36193 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!36896 () Unit!2263)

(assert (=> d!19215 (= lt!36896 (choose!468 lt!36193 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun e!51996 () Bool)

(assert (=> d!19215 e!51996))

(declare-fun res!41543 () Bool)

(assert (=> d!19215 (=> (not res!41543) (not e!51996))))

(assert (=> d!19215 (= res!41543 (isStrictlySorted!290 lt!36193))))

(assert (=> d!19215 (= (lemmaContainsTupThenGetReturnValue!55 lt!36193 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36896)))

(declare-fun b!79624 () Bool)

(declare-fun res!41544 () Bool)

(assert (=> b!79624 (=> (not res!41544) (not e!51996))))

(assert (=> b!79624 (= res!41544 (containsKey!140 lt!36193 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79625 () Bool)

(assert (=> b!79625 (= e!51996 (contains!748 lt!36193 (tuple2!2191 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19215 res!41543) b!79624))

(assert (= (and b!79624 res!41544) b!79625))

(assert (=> d!19215 m!78497))

(declare-fun m!80651 () Bool)

(assert (=> d!19215 m!80651))

(declare-fun m!80653 () Bool)

(assert (=> d!19215 m!80653))

(declare-fun m!80655 () Bool)

(assert (=> b!79624 m!80655))

(declare-fun m!80657 () Bool)

(assert (=> b!79625 m!80657))

(assert (=> d!18561 d!19215))

(declare-fun b!79626 () Bool)

(declare-fun c!12390 () Bool)

(assert (=> b!79626 (= c!12390 (and ((_ is Cons!1529) (toList!748 lt!35958)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35958))) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun e!52000 () List!1533)

(declare-fun e!51997 () List!1533)

(assert (=> b!79626 (= e!52000 e!51997)))

(declare-fun e!51999 () List!1533)

(declare-fun c!12391 () Bool)

(declare-fun bm!7343 () Bool)

(declare-fun call!7348 () List!1533)

(assert (=> bm!7343 (= call!7348 ($colon$colon!68 e!51999 (ite c!12391 (h!2117 (toList!748 lt!35958)) (tuple2!2191 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun c!12392 () Bool)

(assert (=> bm!7343 (= c!12392 c!12391)))

(declare-fun d!19217 () Bool)

(declare-fun e!52001 () Bool)

(assert (=> d!19217 e!52001))

(declare-fun res!41545 () Bool)

(assert (=> d!19217 (=> (not res!41545) (not e!52001))))

(declare-fun lt!36897 () List!1533)

(assert (=> d!19217 (= res!41545 (isStrictlySorted!290 lt!36897))))

(declare-fun e!51998 () List!1533)

(assert (=> d!19217 (= lt!36897 e!51998)))

(assert (=> d!19217 (= c!12391 (and ((_ is Cons!1529) (toList!748 lt!35958)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35958))) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19217 (isStrictlySorted!290 (toList!748 lt!35958))))

(assert (=> d!19217 (= (insertStrictlySorted!57 (toList!748 lt!35958) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!36897)))

(declare-fun b!79627 () Bool)

(declare-fun c!12393 () Bool)

(assert (=> b!79627 (= e!51999 (ite c!12393 (t!5183 (toList!748 lt!35958)) (ite c!12390 (Cons!1529 (h!2117 (toList!748 lt!35958)) (t!5183 (toList!748 lt!35958))) Nil!1530)))))

(declare-fun bm!7344 () Bool)

(declare-fun call!7347 () List!1533)

(assert (=> bm!7344 (= call!7347 call!7348)))

(declare-fun b!79628 () Bool)

(assert (=> b!79628 (= e!51998 call!7348)))

(declare-fun b!79629 () Bool)

(declare-fun res!41546 () Bool)

(assert (=> b!79629 (=> (not res!41546) (not e!52001))))

(assert (=> b!79629 (= res!41546 (containsKey!140 lt!36897 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79630 () Bool)

(declare-fun call!7346 () List!1533)

(assert (=> b!79630 (= e!51997 call!7346)))

(declare-fun b!79631 () Bool)

(assert (=> b!79631 (= e!52000 call!7347)))

(declare-fun b!79632 () Bool)

(assert (=> b!79632 (= e!51998 e!52000)))

(assert (=> b!79632 (= c!12393 (and ((_ is Cons!1529) (toList!748 lt!35958)) (= (_1!1105 (h!2117 (toList!748 lt!35958))) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun bm!7345 () Bool)

(assert (=> bm!7345 (= call!7346 call!7347)))

(declare-fun b!79633 () Bool)

(assert (=> b!79633 (= e!51999 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35958)) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79634 () Bool)

(assert (=> b!79634 (= e!52001 (contains!748 lt!36897 (tuple2!2191 (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79635 () Bool)

(assert (=> b!79635 (= e!51997 call!7346)))

(assert (= (and d!19217 c!12391) b!79628))

(assert (= (and d!19217 (not c!12391)) b!79632))

(assert (= (and b!79632 c!12393) b!79631))

(assert (= (and b!79632 (not c!12393)) b!79626))

(assert (= (and b!79626 c!12390) b!79635))

(assert (= (and b!79626 (not c!12390)) b!79630))

(assert (= (or b!79635 b!79630) bm!7345))

(assert (= (or b!79631 bm!7345) bm!7344))

(assert (= (or b!79628 bm!7344) bm!7343))

(assert (= (and bm!7343 c!12392) b!79633))

(assert (= (and bm!7343 (not c!12392)) b!79627))

(assert (= (and d!19217 res!41545) b!79629))

(assert (= (and b!79629 res!41546) b!79634))

(declare-fun m!80659 () Bool)

(assert (=> b!79629 m!80659))

(declare-fun m!80661 () Bool)

(assert (=> b!79634 m!80661))

(declare-fun m!80663 () Bool)

(assert (=> d!19217 m!80663))

(declare-fun m!80665 () Bool)

(assert (=> d!19217 m!80665))

(declare-fun m!80667 () Bool)

(assert (=> bm!7343 m!80667))

(declare-fun m!80669 () Bool)

(assert (=> b!79633 m!80669))

(assert (=> d!18561 d!19217))

(declare-fun d!19219 () Bool)

(declare-fun e!52003 () Bool)

(assert (=> d!19219 e!52003))

(declare-fun res!41547 () Bool)

(assert (=> d!19219 (=> res!41547 e!52003)))

(declare-fun lt!36898 () Bool)

(assert (=> d!19219 (= res!41547 (not lt!36898))))

(declare-fun lt!36899 () Bool)

(assert (=> d!19219 (= lt!36898 lt!36899)))

(declare-fun lt!36900 () Unit!2263)

(declare-fun e!52002 () Unit!2263)

(assert (=> d!19219 (= lt!36900 e!52002)))

(declare-fun c!12394 () Bool)

(assert (=> d!19219 (= c!12394 lt!36899)))

(assert (=> d!19219 (= lt!36899 (containsKey!140 (toList!748 lt!36286) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19219 (= (contains!745 lt!36286 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) lt!36898)))

(declare-fun b!79636 () Bool)

(declare-fun lt!36901 () Unit!2263)

(assert (=> b!79636 (= e!52002 lt!36901)))

(assert (=> b!79636 (= lt!36901 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36286) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79636 (isDefined!90 (getValueByKey!136 (toList!748 lt!36286) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79637 () Bool)

(declare-fun Unit!2326 () Unit!2263)

(assert (=> b!79637 (= e!52002 Unit!2326)))

(declare-fun b!79638 () Bool)

(assert (=> b!79638 (= e!52003 (isDefined!90 (getValueByKey!136 (toList!748 lt!36286) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19219 c!12394) b!79636))

(assert (= (and d!19219 (not c!12394)) b!79637))

(assert (= (and d!19219 (not res!41547)) b!79638))

(assert (=> d!19219 m!78153))

(declare-fun m!80671 () Bool)

(assert (=> d!19219 m!80671))

(assert (=> b!79636 m!78153))

(declare-fun m!80673 () Bool)

(assert (=> b!79636 m!80673))

(assert (=> b!79636 m!78153))

(assert (=> b!79636 m!80475))

(assert (=> b!79636 m!80475))

(declare-fun m!80675 () Bool)

(assert (=> b!79636 m!80675))

(assert (=> b!79638 m!78153))

(assert (=> b!79638 m!80475))

(assert (=> b!79638 m!80475))

(assert (=> b!79638 m!80675))

(assert (=> b!78586 d!19219))

(declare-fun d!19221 () Bool)

(declare-fun e!52005 () Bool)

(assert (=> d!19221 e!52005))

(declare-fun res!41548 () Bool)

(assert (=> d!19221 (=> res!41548 e!52005)))

(declare-fun lt!36902 () Bool)

(assert (=> d!19221 (= res!41548 (not lt!36902))))

(declare-fun lt!36903 () Bool)

(assert (=> d!19221 (= lt!36902 lt!36903)))

(declare-fun lt!36904 () Unit!2263)

(declare-fun e!52004 () Unit!2263)

(assert (=> d!19221 (= lt!36904 e!52004)))

(declare-fun c!12395 () Bool)

(assert (=> d!19221 (= c!12395 lt!36903)))

(assert (=> d!19221 (= lt!36903 (containsKey!140 (toList!748 lt!36448) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!19221 (= (contains!745 lt!36448 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) lt!36902)))

(declare-fun b!79639 () Bool)

(declare-fun lt!36905 () Unit!2263)

(assert (=> b!79639 (= e!52004 lt!36905)))

(assert (=> b!79639 (= lt!36905 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36448) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79639 (isDefined!90 (getValueByKey!136 (toList!748 lt!36448) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79640 () Bool)

(declare-fun Unit!2327 () Unit!2263)

(assert (=> b!79640 (= e!52004 Unit!2327)))

(declare-fun b!79641 () Bool)

(assert (=> b!79641 (= e!52005 (isDefined!90 (getValueByKey!136 (toList!748 lt!36448) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!19221 c!12395) b!79639))

(assert (= (and d!19221 (not c!12395)) b!79640))

(assert (= (and d!19221 (not res!41548)) b!79641))

(assert (=> d!19221 m!78153))

(declare-fun m!80677 () Bool)

(assert (=> d!19221 m!80677))

(assert (=> b!79639 m!78153))

(declare-fun m!80679 () Bool)

(assert (=> b!79639 m!80679))

(assert (=> b!79639 m!78153))

(assert (=> b!79639 m!80487))

(assert (=> b!79639 m!80487))

(declare-fun m!80681 () Bool)

(assert (=> b!79639 m!80681))

(assert (=> b!79641 m!78153))

(assert (=> b!79641 m!80487))

(assert (=> b!79641 m!80487))

(assert (=> b!79641 m!80681))

(assert (=> b!78744 d!19221))

(declare-fun d!19223 () Bool)

(declare-fun e!52007 () Bool)

(assert (=> d!19223 e!52007))

(declare-fun res!41549 () Bool)

(assert (=> d!19223 (=> res!41549 e!52007)))

(declare-fun lt!36906 () Bool)

(assert (=> d!19223 (= res!41549 (not lt!36906))))

(declare-fun lt!36907 () Bool)

(assert (=> d!19223 (= lt!36906 lt!36907)))

(declare-fun lt!36908 () Unit!2263)

(declare-fun e!52006 () Unit!2263)

(assert (=> d!19223 (= lt!36908 e!52006)))

(declare-fun c!12396 () Bool)

(assert (=> d!19223 (= c!12396 lt!36907)))

(assert (=> d!19223 (= lt!36907 (containsKey!140 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063))))))

(assert (=> d!19223 (= (contains!745 (getCurrentListMap!435 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063))) lt!36906)))

(declare-fun b!79642 () Bool)

(declare-fun lt!36909 () Unit!2263)

(assert (=> b!79642 (= e!52006 lt!36909)))

(assert (=> b!79642 (= lt!36909 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063))))))

(assert (=> b!79642 (isDefined!90 (getValueByKey!136 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063))))))

(declare-fun b!79643 () Bool)

(declare-fun Unit!2328 () Unit!2263)

(assert (=> b!79643 (= e!52006 Unit!2328)))

(declare-fun b!79644 () Bool)

(assert (=> b!79644 (= e!52007 (isDefined!90 (getValueByKey!136 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))

(assert (= (and d!19223 c!12396) b!79642))

(assert (= (and d!19223 (not c!12396)) b!79643))

(assert (= (and d!19223 (not res!41549)) b!79644))

(assert (=> d!19223 m!78131))

(declare-fun m!80683 () Bool)

(assert (=> d!19223 m!80683))

(assert (=> b!79642 m!78131))

(declare-fun m!80685 () Bool)

(assert (=> b!79642 m!80685))

(assert (=> b!79642 m!78131))

(declare-fun m!80687 () Bool)

(assert (=> b!79642 m!80687))

(assert (=> b!79642 m!80687))

(declare-fun m!80689 () Bool)

(assert (=> b!79642 m!80689))

(assert (=> b!79644 m!78131))

(assert (=> b!79644 m!80687))

(assert (=> b!79644 m!80687))

(assert (=> b!79644 m!80689))

(assert (=> b!78363 d!19223))

(declare-fun b!79645 () Bool)

(declare-fun e!52011 () ListLongMap!1465)

(declare-fun call!7355 () ListLongMap!1465)

(assert (=> b!79645 (= e!52011 (+!109 call!7355 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(declare-fun b!79646 () Bool)

(declare-fun res!41553 () Bool)

(declare-fun e!52020 () Bool)

(assert (=> b!79646 (=> (not res!41553) (not e!52020))))

(declare-fun e!52018 () Bool)

(assert (=> b!79646 (= res!41553 e!52018)))

(declare-fun c!12402 () Bool)

(assert (=> b!79646 (= c!12402 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!79647 () Bool)

(declare-fun e!52013 () ListLongMap!1465)

(declare-fun call!7354 () ListLongMap!1465)

(assert (=> b!79647 (= e!52013 call!7354)))

(declare-fun bm!7346 () Bool)

(declare-fun call!7353 () ListLongMap!1465)

(declare-fun call!7351 () ListLongMap!1465)

(assert (=> bm!7346 (= call!7353 call!7351)))

(declare-fun e!52017 () Bool)

(declare-fun b!79648 () Bool)

(declare-fun lt!36922 () ListLongMap!1465)

(assert (=> b!79648 (= e!52017 (= (apply!79 lt!36922 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (get!1189 (select (arr!1895 lt!36057) #b00000000000000000000000000000000) (dynLambda!346 (defaultEntry!2272 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79648 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2136 lt!36057)))))

(assert (=> b!79648 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!79649 () Bool)

(declare-fun e!52014 () Bool)

(assert (=> b!79649 (= e!52018 e!52014)))

(declare-fun res!41554 () Bool)

(declare-fun call!7350 () Bool)

(assert (=> b!79649 (= res!41554 call!7350)))

(assert (=> b!79649 (=> (not res!41554) (not e!52014))))

(declare-fun bm!7347 () Bool)

(declare-fun call!7352 () Bool)

(assert (=> bm!7347 (= call!7352 (contains!745 lt!36922 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79651 () Bool)

(declare-fun e!52012 () Bool)

(assert (=> b!79651 (= e!52012 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79652 () Bool)

(declare-fun e!52019 () Unit!2263)

(declare-fun Unit!2329 () Unit!2263)

(assert (=> b!79652 (= e!52019 Unit!2329)))

(declare-fun bm!7348 () Bool)

(assert (=> bm!7348 (= call!7351 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun b!79653 () Bool)

(declare-fun e!52009 () ListLongMap!1465)

(declare-fun call!7349 () ListLongMap!1465)

(assert (=> b!79653 (= e!52009 call!7349)))

(declare-fun b!79654 () Bool)

(declare-fun e!52008 () Bool)

(assert (=> b!79654 (= e!52020 e!52008)))

(declare-fun c!12398 () Bool)

(assert (=> b!79654 (= c!12398 (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!79655 () Bool)

(declare-fun lt!36924 () Unit!2263)

(assert (=> b!79655 (= e!52019 lt!36924)))

(declare-fun lt!36923 () ListLongMap!1465)

(assert (=> b!79655 (= lt!36923 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36929 () (_ BitVec 64))

(assert (=> b!79655 (= lt!36929 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36920 () (_ BitVec 64))

(assert (=> b!79655 (= lt!36920 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36914 () Unit!2263)

(assert (=> b!79655 (= lt!36914 (addStillContains!55 lt!36923 lt!36929 (zeroValue!2170 newMap!16) lt!36920))))

(assert (=> b!79655 (contains!745 (+!109 lt!36923 (tuple2!2191 lt!36929 (zeroValue!2170 newMap!16))) lt!36920)))

(declare-fun lt!36919 () Unit!2263)

(assert (=> b!79655 (= lt!36919 lt!36914)))

(declare-fun lt!36930 () ListLongMap!1465)

(assert (=> b!79655 (= lt!36930 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36931 () (_ BitVec 64))

(assert (=> b!79655 (= lt!36931 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36927 () (_ BitVec 64))

(assert (=> b!79655 (= lt!36927 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36918 () Unit!2263)

(assert (=> b!79655 (= lt!36918 (addApplyDifferent!55 lt!36930 lt!36931 (minValue!2170 newMap!16) lt!36927))))

(assert (=> b!79655 (= (apply!79 (+!109 lt!36930 (tuple2!2191 lt!36931 (minValue!2170 newMap!16))) lt!36927) (apply!79 lt!36930 lt!36927))))

(declare-fun lt!36910 () Unit!2263)

(assert (=> b!79655 (= lt!36910 lt!36918)))

(declare-fun lt!36926 () ListLongMap!1465)

(assert (=> b!79655 (= lt!36926 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36912 () (_ BitVec 64))

(assert (=> b!79655 (= lt!36912 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36916 () (_ BitVec 64))

(assert (=> b!79655 (= lt!36916 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!36928 () Unit!2263)

(assert (=> b!79655 (= lt!36928 (addApplyDifferent!55 lt!36926 lt!36912 (zeroValue!2170 newMap!16) lt!36916))))

(assert (=> b!79655 (= (apply!79 (+!109 lt!36926 (tuple2!2191 lt!36912 (zeroValue!2170 newMap!16))) lt!36916) (apply!79 lt!36926 lt!36916))))

(declare-fun lt!36915 () Unit!2263)

(assert (=> b!79655 (= lt!36915 lt!36928)))

(declare-fun lt!36911 () ListLongMap!1465)

(assert (=> b!79655 (= lt!36911 (getCurrentListMapNoExtraKeys!73 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(declare-fun lt!36913 () (_ BitVec 64))

(assert (=> b!79655 (= lt!36913 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!36925 () (_ BitVec 64))

(assert (=> b!79655 (= lt!36925 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!79655 (= lt!36924 (addApplyDifferent!55 lt!36911 lt!36913 (minValue!2170 newMap!16) lt!36925))))

(assert (=> b!79655 (= (apply!79 (+!109 lt!36911 (tuple2!2191 lt!36913 (minValue!2170 newMap!16))) lt!36925) (apply!79 lt!36911 lt!36925))))

(declare-fun b!79656 () Bool)

(declare-fun e!52010 () Bool)

(assert (=> b!79656 (= e!52010 e!52017)))

(declare-fun res!41552 () Bool)

(assert (=> b!79656 (=> (not res!41552) (not e!52017))))

(assert (=> b!79656 (= res!41552 (contains!745 lt!36922 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!79656 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!79657 () Bool)

(assert (=> b!79657 (= e!52011 e!52013)))

(declare-fun c!12399 () Bool)

(assert (=> b!79657 (= c!12399 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7349 () Bool)

(assert (=> bm!7349 (= call!7354 call!7355)))

(declare-fun b!79658 () Bool)

(declare-fun res!41550 () Bool)

(assert (=> b!79658 (=> (not res!41550) (not e!52020))))

(assert (=> b!79658 (= res!41550 e!52010)))

(declare-fun res!41551 () Bool)

(assert (=> b!79658 (=> res!41551 e!52010)))

(declare-fun e!52015 () Bool)

(assert (=> b!79658 (= res!41551 (not e!52015))))

(declare-fun res!41555 () Bool)

(assert (=> b!79658 (=> (not res!41555) (not e!52015))))

(assert (=> b!79658 (= res!41555 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!79659 () Bool)

(declare-fun c!12400 () Bool)

(assert (=> b!79659 (= c!12400 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!79659 (= e!52013 e!52009)))

(declare-fun b!79660 () Bool)

(assert (=> b!79660 (= e!52015 (validKeyInArray!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79661 () Bool)

(assert (=> b!79661 (= e!52009 call!7354)))

(declare-fun bm!7350 () Bool)

(declare-fun c!12397 () Bool)

(assert (=> bm!7350 (= call!7355 (+!109 (ite c!12397 call!7351 (ite c!12399 call!7353 call!7349)) (ite (or c!12397 c!12399) (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 newMap!16)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun bm!7351 () Bool)

(assert (=> bm!7351 (= call!7350 (contains!745 lt!36922 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79662 () Bool)

(assert (=> b!79662 (= e!52018 (not call!7350))))

(declare-fun b!79650 () Bool)

(declare-fun e!52016 () Bool)

(assert (=> b!79650 (= e!52008 e!52016)))

(declare-fun res!41557 () Bool)

(assert (=> b!79650 (= res!41557 call!7352)))

(assert (=> b!79650 (=> (not res!41557) (not e!52016))))

(declare-fun d!19225 () Bool)

(assert (=> d!19225 e!52020))

(declare-fun res!41558 () Bool)

(assert (=> d!19225 (=> (not res!41558) (not e!52020))))

(assert (=> d!19225 (= res!41558 (or (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))))

(declare-fun lt!36921 () ListLongMap!1465)

(assert (=> d!19225 (= lt!36922 lt!36921)))

(declare-fun lt!36917 () Unit!2263)

(assert (=> d!19225 (= lt!36917 e!52019)))

(declare-fun c!12401 () Bool)

(assert (=> d!19225 (= c!12401 e!52012)))

(declare-fun res!41556 () Bool)

(assert (=> d!19225 (=> (not res!41556) (not e!52012))))

(assert (=> d!19225 (= res!41556 (bvslt #b00000000000000000000000000000000 (size!2135 (_keys!3932 newMap!16))))))

(assert (=> d!19225 (= lt!36921 e!52011)))

(assert (=> d!19225 (= c!12397 (and (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2123 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!19225 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19225 (= (getCurrentListMap!435 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!36922)))

(declare-fun bm!7352 () Bool)

(assert (=> bm!7352 (= call!7349 call!7353)))

(declare-fun b!79663 () Bool)

(assert (=> b!79663 (= e!52016 (= (apply!79 lt!36922 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2170 newMap!16)))))

(declare-fun b!79664 () Bool)

(assert (=> b!79664 (= e!52008 (not call!7352))))

(declare-fun b!79665 () Bool)

(assert (=> b!79665 (= e!52014 (= (apply!79 lt!36922 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2170 newMap!16)))))

(assert (= (and d!19225 c!12397) b!79645))

(assert (= (and d!19225 (not c!12397)) b!79657))

(assert (= (and b!79657 c!12399) b!79647))

(assert (= (and b!79657 (not c!12399)) b!79659))

(assert (= (and b!79659 c!12400) b!79661))

(assert (= (and b!79659 (not c!12400)) b!79653))

(assert (= (or b!79661 b!79653) bm!7352))

(assert (= (or b!79647 bm!7352) bm!7346))

(assert (= (or b!79647 b!79661) bm!7349))

(assert (= (or b!79645 bm!7346) bm!7348))

(assert (= (or b!79645 bm!7349) bm!7350))

(assert (= (and d!19225 res!41556) b!79651))

(assert (= (and d!19225 c!12401) b!79655))

(assert (= (and d!19225 (not c!12401)) b!79652))

(assert (= (and d!19225 res!41558) b!79658))

(assert (= (and b!79658 res!41555) b!79660))

(assert (= (and b!79658 (not res!41551)) b!79656))

(assert (= (and b!79656 res!41552) b!79648))

(assert (= (and b!79658 res!41550) b!79646))

(assert (= (and b!79646 c!12402) b!79649))

(assert (= (and b!79646 (not c!12402)) b!79662))

(assert (= (and b!79649 res!41554) b!79665))

(assert (= (or b!79649 b!79662) bm!7351))

(assert (= (and b!79646 res!41553) b!79654))

(assert (= (and b!79654 c!12398) b!79650))

(assert (= (and b!79654 (not c!12398)) b!79664))

(assert (= (and b!79650 res!41557) b!79663))

(assert (= (or b!79650 b!79664) bm!7347))

(declare-fun b_lambda!3561 () Bool)

(assert (=> (not b_lambda!3561) (not b!79648)))

(assert (=> b!79648 t!5191))

(declare-fun b_and!4889 () Bool)

(assert (= b_and!4885 (and (=> t!5191 result!2829) b_and!4889)))

(assert (=> b!79648 t!5193))

(declare-fun b_and!4891 () Bool)

(assert (= b_and!4887 (and (=> t!5193 result!2831) b_and!4891)))

(declare-fun m!80691 () Bool)

(assert (=> bm!7351 m!80691))

(declare-fun m!80693 () Bool)

(assert (=> bm!7348 m!80693))

(declare-fun m!80695 () Bool)

(assert (=> bm!7347 m!80695))

(declare-fun m!80697 () Bool)

(assert (=> b!79655 m!80697))

(declare-fun m!80699 () Bool)

(assert (=> b!79655 m!80699))

(declare-fun m!80701 () Bool)

(assert (=> b!79655 m!80701))

(declare-fun m!80703 () Bool)

(assert (=> b!79655 m!80703))

(declare-fun m!80705 () Bool)

(assert (=> b!79655 m!80705))

(declare-fun m!80707 () Bool)

(assert (=> b!79655 m!80707))

(declare-fun m!80709 () Bool)

(assert (=> b!79655 m!80709))

(assert (=> b!79655 m!80701))

(declare-fun m!80711 () Bool)

(assert (=> b!79655 m!80711))

(declare-fun m!80713 () Bool)

(assert (=> b!79655 m!80713))

(assert (=> b!79655 m!78153))

(assert (=> b!79655 m!80713))

(declare-fun m!80715 () Bool)

(assert (=> b!79655 m!80715))

(assert (=> b!79655 m!80699))

(declare-fun m!80717 () Bool)

(assert (=> b!79655 m!80717))

(declare-fun m!80719 () Bool)

(assert (=> b!79655 m!80719))

(assert (=> b!79655 m!80719))

(declare-fun m!80721 () Bool)

(assert (=> b!79655 m!80721))

(declare-fun m!80723 () Bool)

(assert (=> b!79655 m!80723))

(assert (=> b!79655 m!80693))

(declare-fun m!80725 () Bool)

(assert (=> b!79655 m!80725))

(assert (=> d!19225 m!78167))

(declare-fun m!80727 () Bool)

(assert (=> b!79648 m!80727))

(assert (=> b!79648 m!78153))

(declare-fun m!80729 () Bool)

(assert (=> b!79648 m!80729))

(assert (=> b!79648 m!80727))

(assert (=> b!79648 m!78273))

(declare-fun m!80731 () Bool)

(assert (=> b!79648 m!80731))

(assert (=> b!79648 m!78273))

(assert (=> b!79648 m!78153))

(declare-fun m!80733 () Bool)

(assert (=> bm!7350 m!80733))

(declare-fun m!80735 () Bool)

(assert (=> b!79645 m!80735))

(assert (=> b!79651 m!78153))

(assert (=> b!79651 m!78153))

(assert (=> b!79651 m!78155))

(assert (=> b!79656 m!78153))

(assert (=> b!79656 m!78153))

(declare-fun m!80737 () Bool)

(assert (=> b!79656 m!80737))

(declare-fun m!80739 () Bool)

(assert (=> b!79665 m!80739))

(declare-fun m!80741 () Bool)

(assert (=> b!79663 m!80741))

(assert (=> b!79660 m!78153))

(assert (=> b!79660 m!78153))

(assert (=> b!79660 m!78155))

(assert (=> b!78363 d!19225))

(declare-fun d!19227 () Bool)

(declare-fun lt!36932 () Bool)

(assert (=> d!19227 (= lt!36932 (select (content!82 (toList!748 lt!36303)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun e!52021 () Bool)

(assert (=> d!19227 (= lt!36932 e!52021)))

(declare-fun res!41559 () Bool)

(assert (=> d!19227 (=> (not res!41559) (not e!52021))))

(assert (=> d!19227 (= res!41559 ((_ is Cons!1529) (toList!748 lt!36303)))))

(assert (=> d!19227 (= (contains!748 (toList!748 lt!36303) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!36932)))

(declare-fun b!79666 () Bool)

(declare-fun e!52022 () Bool)

(assert (=> b!79666 (= e!52021 e!52022)))

(declare-fun res!41560 () Bool)

(assert (=> b!79666 (=> res!41560 e!52022)))

(assert (=> b!79666 (= res!41560 (= (h!2117 (toList!748 lt!36303)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!79667 () Bool)

(assert (=> b!79667 (= e!52022 (contains!748 (t!5183 (toList!748 lt!36303)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!19227 res!41559) b!79666))

(assert (= (and b!79666 (not res!41560)) b!79667))

(declare-fun m!80743 () Bool)

(assert (=> d!19227 m!80743))

(declare-fun m!80745 () Bool)

(assert (=> d!19227 m!80745))

(declare-fun m!80747 () Bool)

(assert (=> b!79667 m!80747))

(assert (=> b!78603 d!19227))

(declare-fun b!79669 () Bool)

(declare-fun e!52023 () Option!142)

(declare-fun e!52024 () Option!142)

(assert (=> b!79669 (= e!52023 e!52024)))

(declare-fun c!12404 () Bool)

(assert (=> b!79669 (= c!12404 (and ((_ is Cons!1529) (toList!748 lt!36245)) (not (= (_1!1105 (h!2117 (toList!748 lt!36245))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!79668 () Bool)

(assert (=> b!79668 (= e!52023 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36245)))))))

(declare-fun b!79670 () Bool)

(assert (=> b!79670 (= e!52024 (getValueByKey!136 (t!5183 (toList!748 lt!36245)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79671 () Bool)

(assert (=> b!79671 (= e!52024 None!140)))

(declare-fun c!12403 () Bool)

(declare-fun d!19229 () Bool)

(assert (=> d!19229 (= c!12403 (and ((_ is Cons!1529) (toList!748 lt!36245)) (= (_1!1105 (h!2117 (toList!748 lt!36245))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19229 (= (getValueByKey!136 (toList!748 lt!36245) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) e!52023)))

(assert (= (and d!19229 c!12403) b!79668))

(assert (= (and d!19229 (not c!12403)) b!79669))

(assert (= (and b!79669 c!12404) b!79670))

(assert (= (and b!79669 (not c!12404)) b!79671))

(declare-fun m!80749 () Bool)

(assert (=> b!79670 m!80749))

(assert (=> b!78527 d!19229))

(declare-fun b!79673 () Bool)

(declare-fun e!52025 () Option!142)

(declare-fun e!52026 () Option!142)

(assert (=> b!79673 (= e!52025 e!52026)))

(declare-fun c!12406 () Bool)

(assert (=> b!79673 (= c!12406 (and ((_ is Cons!1529) (toList!748 lt!36196)) (not (= (_1!1105 (h!2117 (toList!748 lt!36196))) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79672 () Bool)

(assert (=> b!79672 (= e!52025 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36196)))))))

(declare-fun b!79674 () Bool)

(assert (=> b!79674 (= e!52026 (getValueByKey!136 (t!5183 (toList!748 lt!36196)) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79675 () Bool)

(assert (=> b!79675 (= e!52026 None!140)))

(declare-fun c!12405 () Bool)

(declare-fun d!19231 () Bool)

(assert (=> d!19231 (= c!12405 (and ((_ is Cons!1529) (toList!748 lt!36196)) (= (_1!1105 (h!2117 (toList!748 lt!36196))) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19231 (= (getValueByKey!136 (toList!748 lt!36196) (_1!1105 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!52025)))

(assert (= (and d!19231 c!12405) b!79672))

(assert (= (and d!19231 (not c!12405)) b!79673))

(assert (= (and b!79673 c!12406) b!79674))

(assert (= (and b!79673 (not c!12406)) b!79675))

(declare-fun m!80751 () Bool)

(assert (=> b!79674 m!80751))

(assert (=> b!78443 d!19231))

(declare-fun b!79677 () Bool)

(declare-fun e!52027 () Option!142)

(declare-fun e!52028 () Option!142)

(assert (=> b!79677 (= e!52027 e!52028)))

(declare-fun c!12408 () Bool)

(assert (=> b!79677 (= c!12408 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35884))) (not (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35884)))) (_1!1105 lt!35783)))))))

(declare-fun b!79676 () Bool)

(assert (=> b!79676 (= e!52027 (Some!141 (_2!1105 (h!2117 (t!5183 (toList!748 lt!35884))))))))

(declare-fun b!79678 () Bool)

(assert (=> b!79678 (= e!52028 (getValueByKey!136 (t!5183 (t!5183 (toList!748 lt!35884))) (_1!1105 lt!35783)))))

(declare-fun b!79679 () Bool)

(assert (=> b!79679 (= e!52028 None!140)))

(declare-fun d!19233 () Bool)

(declare-fun c!12407 () Bool)

(assert (=> d!19233 (= c!12407 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35884))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35884)))) (_1!1105 lt!35783))))))

(assert (=> d!19233 (= (getValueByKey!136 (t!5183 (toList!748 lt!35884)) (_1!1105 lt!35783)) e!52027)))

(assert (= (and d!19233 c!12407) b!79676))

(assert (= (and d!19233 (not c!12407)) b!79677))

(assert (= (and b!79677 c!12408) b!79678))

(assert (= (and b!79677 (not c!12408)) b!79679))

(declare-fun m!80753 () Bool)

(assert (=> b!79678 m!80753))

(assert (=> b!78714 d!19233))

(declare-fun d!19235 () Bool)

(declare-fun lt!36933 () Bool)

(assert (=> d!19235 (= lt!36933 (select (content!82 lt!35892) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun e!52029 () Bool)

(assert (=> d!19235 (= lt!36933 e!52029)))

(declare-fun res!41561 () Bool)

(assert (=> d!19235 (=> (not res!41561) (not e!52029))))

(assert (=> d!19235 (= res!41561 ((_ is Cons!1529) lt!35892))))

(assert (=> d!19235 (= (contains!748 lt!35892 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))) lt!36933)))

(declare-fun b!79680 () Bool)

(declare-fun e!52030 () Bool)

(assert (=> b!79680 (= e!52029 e!52030)))

(declare-fun res!41562 () Bool)

(assert (=> b!79680 (=> res!41562 e!52030)))

(assert (=> b!79680 (= res!41562 (= (h!2117 lt!35892) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!79681 () Bool)

(assert (=> b!79681 (= e!52030 (contains!748 (t!5183 lt!35892) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(assert (= (and d!19235 res!41561) b!79680))

(assert (= (and b!79680 (not res!41562)) b!79681))

(declare-fun m!80755 () Bool)

(assert (=> d!19235 m!80755))

(declare-fun m!80757 () Bool)

(assert (=> d!19235 m!80757))

(declare-fun m!80759 () Bool)

(assert (=> b!79681 m!80759))

(assert (=> b!78667 d!19235))

(declare-fun d!19237 () Bool)

(declare-fun e!52032 () Bool)

(assert (=> d!19237 e!52032))

(declare-fun res!41563 () Bool)

(assert (=> d!19237 (=> res!41563 e!52032)))

(declare-fun lt!36934 () Bool)

(assert (=> d!19237 (= res!41563 (not lt!36934))))

(declare-fun lt!36935 () Bool)

(assert (=> d!19237 (= lt!36934 lt!36935)))

(declare-fun lt!36936 () Unit!2263)

(declare-fun e!52031 () Unit!2263)

(assert (=> d!19237 (= lt!36936 e!52031)))

(declare-fun c!12409 () Bool)

(assert (=> d!19237 (= c!12409 lt!36935)))

(assert (=> d!19237 (= lt!36935 (containsKey!140 (toList!748 lt!36286) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19237 (= (contains!745 lt!36286 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36934)))

(declare-fun b!79682 () Bool)

(declare-fun lt!36937 () Unit!2263)

(assert (=> b!79682 (= e!52031 lt!36937)))

(assert (=> b!79682 (= lt!36937 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36286) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79682 (isDefined!90 (getValueByKey!136 (toList!748 lt!36286) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79683 () Bool)

(declare-fun Unit!2330 () Unit!2263)

(assert (=> b!79683 (= e!52031 Unit!2330)))

(declare-fun b!79684 () Bool)

(assert (=> b!79684 (= e!52032 (isDefined!90 (getValueByKey!136 (toList!748 lt!36286) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19237 c!12409) b!79682))

(assert (= (and d!19237 (not c!12409)) b!79683))

(assert (= (and d!19237 (not res!41563)) b!79684))

(declare-fun m!80761 () Bool)

(assert (=> d!19237 m!80761))

(declare-fun m!80763 () Bool)

(assert (=> b!79682 m!80763))

(assert (=> b!79682 m!79605))

(assert (=> b!79682 m!79605))

(declare-fun m!80765 () Bool)

(assert (=> b!79682 m!80765))

(assert (=> b!79684 m!79605))

(assert (=> b!79684 m!79605))

(assert (=> b!79684 m!80765))

(assert (=> bm!7213 d!19237))

(declare-fun d!19239 () Bool)

(assert (=> d!19239 (= (get!1192 (getValueByKey!136 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2598 (getValueByKey!136 (toList!748 lt!35969) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!18655 d!19239))

(assert (=> d!18655 d!19043))

(assert (=> b!78310 d!18969))

(assert (=> b!78310 d!18971))

(declare-fun b!79686 () Bool)

(declare-fun e!52033 () Option!142)

(declare-fun e!52034 () Option!142)

(assert (=> b!79686 (= e!52033 e!52034)))

(declare-fun c!12411 () Bool)

(assert (=> b!79686 (= c!12411 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35895))) (not (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35895)))) (_1!1105 lt!35783)))))))

(declare-fun b!79685 () Bool)

(assert (=> b!79685 (= e!52033 (Some!141 (_2!1105 (h!2117 (t!5183 (toList!748 lt!35895))))))))

(declare-fun b!79687 () Bool)

(assert (=> b!79687 (= e!52034 (getValueByKey!136 (t!5183 (t!5183 (toList!748 lt!35895))) (_1!1105 lt!35783)))))

(declare-fun b!79688 () Bool)

(assert (=> b!79688 (= e!52034 None!140)))

(declare-fun d!19241 () Bool)

(declare-fun c!12410 () Bool)

(assert (=> d!19241 (= c!12410 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35895))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35895)))) (_1!1105 lt!35783))))))

(assert (=> d!19241 (= (getValueByKey!136 (t!5183 (toList!748 lt!35895)) (_1!1105 lt!35783)) e!52033)))

(assert (= (and d!19241 c!12410) b!79685))

(assert (= (and d!19241 (not c!12410)) b!79686))

(assert (= (and b!79686 c!12411) b!79687))

(assert (= (and b!79686 (not c!12411)) b!79688))

(declare-fun m!80767 () Bool)

(assert (=> b!79687 m!80767))

(assert (=> b!78347 d!19241))

(assert (=> b!78442 d!18915))

(assert (=> b!78442 d!18917))

(declare-fun d!19243 () Bool)

(declare-fun e!52036 () Bool)

(assert (=> d!19243 e!52036))

(declare-fun res!41564 () Bool)

(assert (=> d!19243 (=> res!41564 e!52036)))

(declare-fun lt!36938 () Bool)

(assert (=> d!19243 (= res!41564 (not lt!36938))))

(declare-fun lt!36939 () Bool)

(assert (=> d!19243 (= lt!36938 lt!36939)))

(declare-fun lt!36940 () Unit!2263)

(declare-fun e!52035 () Unit!2263)

(assert (=> d!19243 (= lt!36940 e!52035)))

(declare-fun c!12412 () Bool)

(assert (=> d!19243 (= c!12412 lt!36939)))

(assert (=> d!19243 (= lt!36939 (containsKey!140 (toList!748 (map!1179 (_2!1104 lt!36386))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!19243 (= (contains!745 (map!1179 (_2!1104 lt!36386)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) lt!36938)))

(declare-fun b!79689 () Bool)

(declare-fun lt!36941 () Unit!2263)

(assert (=> b!79689 (= e!52035 lt!36941)))

(assert (=> b!79689 (= lt!36941 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (map!1179 (_2!1104 lt!36386))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> b!79689 (isDefined!90 (getValueByKey!136 (toList!748 (map!1179 (_2!1104 lt!36386))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!79690 () Bool)

(declare-fun Unit!2331 () Unit!2263)

(assert (=> b!79690 (= e!52035 Unit!2331)))

(declare-fun b!79691 () Bool)

(assert (=> b!79691 (= e!52036 (isDefined!90 (getValueByKey!136 (toList!748 (map!1179 (_2!1104 lt!36386))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (= (and d!19243 c!12412) b!79689))

(assert (= (and d!19243 (not c!12412)) b!79690))

(assert (= (and d!19243 (not res!41564)) b!79691))

(assert (=> d!19243 m!77749))

(declare-fun m!80769 () Bool)

(assert (=> d!19243 m!80769))

(assert (=> b!79689 m!77749))

(declare-fun m!80771 () Bool)

(assert (=> b!79689 m!80771))

(assert (=> b!79689 m!77749))

(declare-fun m!80773 () Bool)

(assert (=> b!79689 m!80773))

(assert (=> b!79689 m!80773))

(declare-fun m!80775 () Bool)

(assert (=> b!79689 m!80775))

(assert (=> b!79691 m!77749))

(assert (=> b!79691 m!80773))

(assert (=> b!79691 m!80773))

(assert (=> b!79691 m!80775))

(assert (=> b!78654 d!19243))

(declare-fun d!19245 () Bool)

(assert (=> d!19245 (= (map!1179 (_2!1104 lt!36386)) (getCurrentListMap!435 (_keys!3932 (_2!1104 lt!36386)) (_values!2255 (_2!1104 lt!36386)) (mask!6268 (_2!1104 lt!36386)) (extraKeys!2123 (_2!1104 lt!36386)) (zeroValue!2170 (_2!1104 lt!36386)) (minValue!2170 (_2!1104 lt!36386)) #b00000000000000000000000000000000 (defaultEntry!2272 (_2!1104 lt!36386))))))

(declare-fun bs!3358 () Bool)

(assert (= bs!3358 d!19245))

(declare-fun m!80777 () Bool)

(assert (=> bs!3358 m!80777))

(assert (=> b!78654 d!19245))

(declare-fun d!19247 () Bool)

(declare-fun e!52038 () Bool)

(assert (=> d!19247 e!52038))

(declare-fun res!41565 () Bool)

(assert (=> d!19247 (=> res!41565 e!52038)))

(declare-fun lt!36942 () Bool)

(assert (=> d!19247 (= res!41565 (not lt!36942))))

(declare-fun lt!36943 () Bool)

(assert (=> d!19247 (= lt!36942 lt!36943)))

(declare-fun lt!36944 () Unit!2263)

(declare-fun e!52037 () Unit!2263)

(assert (=> d!19247 (= lt!36944 e!52037)))

(declare-fun c!12413 () Bool)

(assert (=> d!19247 (= c!12413 lt!36943)))

(assert (=> d!19247 (= lt!36943 (containsKey!140 (toList!748 lt!36090) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19247 (= (contains!745 lt!36090 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36942)))

(declare-fun b!79692 () Bool)

(declare-fun lt!36945 () Unit!2263)

(assert (=> b!79692 (= e!52037 lt!36945)))

(assert (=> b!79692 (= lt!36945 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36090) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79692 (isDefined!90 (getValueByKey!136 (toList!748 lt!36090) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79693 () Bool)

(declare-fun Unit!2332 () Unit!2263)

(assert (=> b!79693 (= e!52037 Unit!2332)))

(declare-fun b!79694 () Bool)

(assert (=> b!79694 (= e!52038 (isDefined!90 (getValueByKey!136 (toList!748 lt!36090) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19247 c!12413) b!79692))

(assert (= (and d!19247 (not c!12413)) b!79693))

(assert (= (and d!19247 (not res!41565)) b!79694))

(declare-fun m!80779 () Bool)

(assert (=> d!19247 m!80779))

(declare-fun m!80781 () Bool)

(assert (=> b!79692 m!80781))

(declare-fun m!80783 () Bool)

(assert (=> b!79692 m!80783))

(assert (=> b!79692 m!80783))

(declare-fun m!80785 () Bool)

(assert (=> b!79692 m!80785))

(assert (=> b!79694 m!80783))

(assert (=> b!79694 m!80783))

(assert (=> b!79694 m!80785))

(assert (=> d!18475 d!19247))

(assert (=> d!18475 d!18439))

(declare-fun d!19249 () Bool)

(declare-fun lt!36946 () Bool)

(assert (=> d!19249 (= lt!36946 (select (content!82 lt!36419) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun e!52039 () Bool)

(assert (=> d!19249 (= lt!36946 e!52039)))

(declare-fun res!41566 () Bool)

(assert (=> d!19249 (=> (not res!41566) (not e!52039))))

(assert (=> d!19249 (= res!41566 ((_ is Cons!1529) lt!36419))))

(assert (=> d!19249 (= (contains!748 lt!36419 (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))) lt!36946)))

(declare-fun b!79695 () Bool)

(declare-fun e!52040 () Bool)

(assert (=> b!79695 (= e!52039 e!52040)))

(declare-fun res!41567 () Bool)

(assert (=> b!79695 (=> res!41567 e!52040)))

(assert (=> b!79695 (= res!41567 (= (h!2117 lt!36419) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun b!79696 () Bool)

(assert (=> b!79696 (= e!52040 (contains!748 (t!5183 lt!36419) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(assert (= (and d!19249 res!41566) b!79695))

(assert (= (and b!79695 (not res!41567)) b!79696))

(declare-fun m!80787 () Bool)

(assert (=> d!19249 m!80787))

(declare-fun m!80789 () Bool)

(assert (=> d!19249 m!80789))

(declare-fun m!80791 () Bool)

(assert (=> b!79696 m!80791))

(assert (=> b!78701 d!19249))

(declare-fun d!19251 () Bool)

(declare-fun res!41568 () Bool)

(declare-fun e!52041 () Bool)

(assert (=> d!19251 (=> res!41568 e!52041)))

(assert (=> d!19251 (= res!41568 (or ((_ is Nil!1530) lt!36206) ((_ is Nil!1530) (t!5183 lt!36206))))))

(assert (=> d!19251 (= (isStrictlySorted!290 lt!36206) e!52041)))

(declare-fun b!79697 () Bool)

(declare-fun e!52042 () Bool)

(assert (=> b!79697 (= e!52041 e!52042)))

(declare-fun res!41569 () Bool)

(assert (=> b!79697 (=> (not res!41569) (not e!52042))))

(assert (=> b!79697 (= res!41569 (bvslt (_1!1105 (h!2117 lt!36206)) (_1!1105 (h!2117 (t!5183 lt!36206)))))))

(declare-fun b!79698 () Bool)

(assert (=> b!79698 (= e!52042 (isStrictlySorted!290 (t!5183 lt!36206)))))

(assert (= (and d!19251 (not res!41568)) b!79697))

(assert (= (and b!79697 res!41569) b!79698))

(declare-fun m!80793 () Bool)

(assert (=> b!79698 m!80793))

(assert (=> d!18577 d!19251))

(declare-fun d!19253 () Bool)

(declare-fun res!41570 () Bool)

(declare-fun e!52043 () Bool)

(assert (=> d!19253 (=> res!41570 e!52043)))

(assert (=> d!19253 (= res!41570 (or ((_ is Nil!1530) (toList!748 lt!35781)) ((_ is Nil!1530) (t!5183 (toList!748 lt!35781)))))))

(assert (=> d!19253 (= (isStrictlySorted!290 (toList!748 lt!35781)) e!52043)))

(declare-fun b!79699 () Bool)

(declare-fun e!52044 () Bool)

(assert (=> b!79699 (= e!52043 e!52044)))

(declare-fun res!41571 () Bool)

(assert (=> b!79699 (=> (not res!41571) (not e!52044))))

(assert (=> b!79699 (= res!41571 (bvslt (_1!1105 (h!2117 (toList!748 lt!35781))) (_1!1105 (h!2117 (t!5183 (toList!748 lt!35781))))))))

(declare-fun b!79700 () Bool)

(assert (=> b!79700 (= e!52044 (isStrictlySorted!290 (t!5183 (toList!748 lt!35781))))))

(assert (= (and d!19253 (not res!41570)) b!79699))

(assert (= (and b!79699 res!41571) b!79700))

(declare-fun m!80795 () Bool)

(assert (=> b!79700 m!80795))

(assert (=> d!18577 d!19253))

(declare-fun d!19255 () Bool)

(assert (=> d!19255 (= (inRange!0 (ite c!12006 (index!3134 lt!36087) (index!3137 lt!36087)) (mask!6268 newMap!16)) (and (bvsge (ite c!12006 (index!3134 lt!36087) (index!3137 lt!36087)) #b00000000000000000000000000000000) (bvslt (ite c!12006 (index!3134 lt!36087) (index!3137 lt!36087)) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7177 d!19255))

(declare-fun d!19257 () Bool)

(declare-fun c!12414 () Bool)

(assert (=> d!19257 (= c!12414 ((_ is Nil!1530) (toList!748 lt!35899)))))

(declare-fun e!52045 () (InoxSet tuple2!2190))

(assert (=> d!19257 (= (content!82 (toList!748 lt!35899)) e!52045)))

(declare-fun b!79701 () Bool)

(assert (=> b!79701 (= e!52045 ((as const (Array tuple2!2190 Bool)) false))))

(declare-fun b!79702 () Bool)

(assert (=> b!79702 (= e!52045 ((_ map or) (store ((as const (Array tuple2!2190 Bool)) false) (h!2117 (toList!748 lt!35899)) true) (content!82 (t!5183 (toList!748 lt!35899)))))))

(assert (= (and d!19257 c!12414) b!79701))

(assert (= (and d!19257 (not c!12414)) b!79702))

(declare-fun m!80797 () Bool)

(assert (=> b!79702 m!80797))

(assert (=> b!79702 m!79921))

(assert (=> d!18579 d!19257))

(assert (=> d!18665 d!18621))

(declare-fun d!19259 () Bool)

(declare-fun e!52048 () Bool)

(assert (=> d!19259 e!52048))

(declare-fun res!41576 () Bool)

(assert (=> d!19259 (=> (not res!41576) (not e!52048))))

(declare-fun lt!36949 () SeekEntryResult!250)

(assert (=> d!19259 (= res!41576 ((_ is Found!250) lt!36949))))

(assert (=> d!19259 (= lt!36949 (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(assert (=> d!19259 true))

(declare-fun _$33!63 () Unit!2263)

(assert (=> d!19259 (= (choose!473 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)) _$33!63)))

(declare-fun b!79707 () Bool)

(declare-fun res!41577 () Bool)

(assert (=> b!79707 (=> (not res!41577) (not e!52048))))

(assert (=> b!79707 (= res!41577 (inRange!0 (index!3135 lt!36949) (mask!6268 newMap!16)))))

(declare-fun b!79708 () Bool)

(assert (=> b!79708 (= e!52048 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36949)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!19259 res!41576) b!79707))

(assert (= (and b!79707 res!41577) b!79708))

(assert (=> d!19259 m!77749))

(assert (=> d!19259 m!78085))

(declare-fun m!80799 () Bool)

(assert (=> b!79707 m!80799))

(declare-fun m!80801 () Bool)

(assert (=> b!79708 m!80801))

(assert (=> d!18665 d!19259))

(assert (=> d!18665 d!18847))

(declare-fun d!19261 () Bool)

(declare-fun res!41578 () Bool)

(declare-fun e!52049 () Bool)

(assert (=> d!19261 (=> res!41578 e!52049)))

(assert (=> d!19261 (= res!41578 (and ((_ is Cons!1529) lt!36273) (= (_1!1105 (h!2117 lt!36273)) (_1!1105 lt!35783))))))

(assert (=> d!19261 (= (containsKey!140 lt!36273 (_1!1105 lt!35783)) e!52049)))

(declare-fun b!79709 () Bool)

(declare-fun e!52050 () Bool)

(assert (=> b!79709 (= e!52049 e!52050)))

(declare-fun res!41579 () Bool)

(assert (=> b!79709 (=> (not res!41579) (not e!52050))))

(assert (=> b!79709 (= res!41579 (and (or (not ((_ is Cons!1529) lt!36273)) (bvsle (_1!1105 (h!2117 lt!36273)) (_1!1105 lt!35783))) ((_ is Cons!1529) lt!36273) (bvslt (_1!1105 (h!2117 lt!36273)) (_1!1105 lt!35783))))))

(declare-fun b!79710 () Bool)

(assert (=> b!79710 (= e!52050 (containsKey!140 (t!5183 lt!36273) (_1!1105 lt!35783)))))

(assert (= (and d!19261 (not res!41578)) b!79709))

(assert (= (and b!79709 res!41579) b!79710))

(declare-fun m!80803 () Bool)

(assert (=> b!79710 m!80803))

(assert (=> b!78568 d!19261))

(declare-fun b!79712 () Bool)

(declare-fun e!52051 () Option!142)

(declare-fun e!52052 () Option!142)

(assert (=> b!79712 (= e!52051 e!52052)))

(declare-fun c!12416 () Bool)

(assert (=> b!79712 (= c!12416 (and ((_ is Cons!1529) (t!5183 lt!35900)) (not (= (_1!1105 (h!2117 (t!5183 lt!35900))) (_1!1105 lt!35783)))))))

(declare-fun b!79711 () Bool)

(assert (=> b!79711 (= e!52051 (Some!141 (_2!1105 (h!2117 (t!5183 lt!35900)))))))

(declare-fun b!79713 () Bool)

(assert (=> b!79713 (= e!52052 (getValueByKey!136 (t!5183 (t!5183 lt!35900)) (_1!1105 lt!35783)))))

(declare-fun b!79714 () Bool)

(assert (=> b!79714 (= e!52052 None!140)))

(declare-fun d!19263 () Bool)

(declare-fun c!12415 () Bool)

(assert (=> d!19263 (= c!12415 (and ((_ is Cons!1529) (t!5183 lt!35900)) (= (_1!1105 (h!2117 (t!5183 lt!35900))) (_1!1105 lt!35783))))))

(assert (=> d!19263 (= (getValueByKey!136 (t!5183 lt!35900) (_1!1105 lt!35783)) e!52051)))

(assert (= (and d!19263 c!12415) b!79711))

(assert (= (and d!19263 (not c!12415)) b!79712))

(assert (= (and b!79712 c!12416) b!79713))

(assert (= (and b!79712 (not c!12416)) b!79714))

(declare-fun m!80805 () Bool)

(assert (=> b!79713 m!80805))

(assert (=> b!78561 d!19263))

(declare-fun b!79716 () Bool)

(declare-fun e!52053 () Option!142)

(declare-fun e!52054 () Option!142)

(assert (=> b!79716 (= e!52053 e!52054)))

(declare-fun c!12418 () Bool)

(assert (=> b!79716 (= c!12418 (and ((_ is Cons!1529) (toList!748 lt!36253)) (not (= (_1!1105 (h!2117 (toList!748 lt!36253))) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))))

(declare-fun b!79715 () Bool)

(assert (=> b!79715 (= e!52053 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36253)))))))

(declare-fun b!79717 () Bool)

(assert (=> b!79717 (= e!52054 (getValueByKey!136 (t!5183 (toList!748 lt!36253)) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79718 () Bool)

(assert (=> b!79718 (= e!52054 None!140)))

(declare-fun c!12417 () Bool)

(declare-fun d!19265 () Bool)

(assert (=> d!19265 (= c!12417 (and ((_ is Cons!1529) (toList!748 lt!36253)) (= (_1!1105 (h!2117 (toList!748 lt!36253))) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(assert (=> d!19265 (= (getValueByKey!136 (toList!748 lt!36253) (_1!1105 (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) e!52053)))

(assert (= (and d!19265 c!12417) b!79715))

(assert (= (and d!19265 (not c!12417)) b!79716))

(assert (= (and b!79716 c!12418) b!79717))

(assert (= (and b!79716 (not c!12418)) b!79718))

(declare-fun m!80807 () Bool)

(assert (=> b!79717 m!80807))

(assert (=> b!78531 d!19265))

(declare-fun d!19267 () Bool)

(assert (=> d!19267 (= (get!1191 (select (arr!1895 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!346 (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!78340 d!19267))

(declare-fun d!19269 () Bool)

(assert (=> d!19269 (= ($colon$colon!68 e!51306 (ite c!12047 (h!2117 (toList!748 lt!35781)) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784)))) (Cons!1529 (ite c!12047 (h!2117 (toList!748 lt!35781)) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))) e!51306))))

(assert (=> bm!7196 d!19269))

(declare-fun d!19271 () Bool)

(declare-fun c!12419 () Bool)

(assert (=> d!19271 (= c!12419 ((_ is Nil!1530) (toList!748 lt!35888)))))

(declare-fun e!52055 () (InoxSet tuple2!2190))

(assert (=> d!19271 (= (content!82 (toList!748 lt!35888)) e!52055)))

(declare-fun b!79719 () Bool)

(assert (=> b!79719 (= e!52055 ((as const (Array tuple2!2190 Bool)) false))))

(declare-fun b!79720 () Bool)

(assert (=> b!79720 (= e!52055 ((_ map or) (store ((as const (Array tuple2!2190 Bool)) false) (h!2117 (toList!748 lt!35888)) true) (content!82 (t!5183 (toList!748 lt!35888)))))))

(assert (= (and d!19271 c!12419) b!79719))

(assert (= (and d!19271 (not c!12419)) b!79720))

(declare-fun m!80809 () Bool)

(assert (=> b!79720 m!80809))

(assert (=> b!79720 m!80541))

(assert (=> d!18623 d!19271))

(declare-fun d!19273 () Bool)

(assert (=> d!19273 (= (apply!79 (+!109 lt!36294 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) lt!36291) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!36294 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))) lt!36291)))))

(declare-fun bs!3359 () Bool)

(assert (= bs!3359 d!19273))

(declare-fun m!80811 () Bool)

(assert (=> bs!3359 m!80811))

(assert (=> bs!3359 m!80811))

(declare-fun m!80813 () Bool)

(assert (=> bs!3359 m!80813))

(assert (=> b!78585 d!19273))

(assert (=> b!78585 d!18885))

(declare-fun d!19275 () Bool)

(assert (=> d!19275 (= (apply!79 lt!36290 lt!36280) (get!1192 (getValueByKey!136 (toList!748 lt!36290) lt!36280)))))

(declare-fun bs!3360 () Bool)

(assert (= bs!3360 d!19275))

(declare-fun m!80815 () Bool)

(assert (=> bs!3360 m!80815))

(assert (=> bs!3360 m!80815))

(declare-fun m!80817 () Bool)

(assert (=> bs!3360 m!80817))

(assert (=> b!78585 d!19275))

(declare-fun d!19277 () Bool)

(declare-fun e!52057 () Bool)

(assert (=> d!19277 e!52057))

(declare-fun res!41580 () Bool)

(assert (=> d!19277 (=> res!41580 e!52057)))

(declare-fun lt!36950 () Bool)

(assert (=> d!19277 (= res!41580 (not lt!36950))))

(declare-fun lt!36951 () Bool)

(assert (=> d!19277 (= lt!36950 lt!36951)))

(declare-fun lt!36952 () Unit!2263)

(declare-fun e!52056 () Unit!2263)

(assert (=> d!19277 (= lt!36952 e!52056)))

(declare-fun c!12420 () Bool)

(assert (=> d!19277 (= c!12420 lt!36951)))

(assert (=> d!19277 (= lt!36951 (containsKey!140 (toList!748 (+!109 lt!36287 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))) lt!36284))))

(assert (=> d!19277 (= (contains!745 (+!109 lt!36287 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) lt!36284) lt!36950)))

(declare-fun b!79721 () Bool)

(declare-fun lt!36953 () Unit!2263)

(assert (=> b!79721 (= e!52056 lt!36953)))

(assert (=> b!79721 (= lt!36953 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (+!109 lt!36287 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))) lt!36284))))

(assert (=> b!79721 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!36287 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))) lt!36284))))

(declare-fun b!79722 () Bool)

(declare-fun Unit!2333 () Unit!2263)

(assert (=> b!79722 (= e!52056 Unit!2333)))

(declare-fun b!79723 () Bool)

(assert (=> b!79723 (= e!52057 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!36287 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))) lt!36284)))))

(assert (= (and d!19277 c!12420) b!79721))

(assert (= (and d!19277 (not c!12420)) b!79722))

(assert (= (and d!19277 (not res!41580)) b!79723))

(declare-fun m!80819 () Bool)

(assert (=> d!19277 m!80819))

(declare-fun m!80821 () Bool)

(assert (=> b!79721 m!80821))

(declare-fun m!80823 () Bool)

(assert (=> b!79721 m!80823))

(assert (=> b!79721 m!80823))

(declare-fun m!80825 () Bool)

(assert (=> b!79721 m!80825))

(assert (=> b!79723 m!80823))

(assert (=> b!79723 m!80823))

(assert (=> b!79723 m!80825))

(assert (=> b!78585 d!19277))

(declare-fun d!19279 () Bool)

(assert (=> d!19279 (contains!745 (+!109 lt!36287 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) lt!36284)))

(declare-fun lt!36954 () Unit!2263)

(assert (=> d!19279 (= lt!36954 (choose!470 lt!36287 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) lt!36284))))

(assert (=> d!19279 (contains!745 lt!36287 lt!36284)))

(assert (=> d!19279 (= (addStillContains!55 lt!36287 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) lt!36284) lt!36954)))

(declare-fun bs!3361 () Bool)

(assert (= bs!3361 d!19279))

(assert (=> bs!3361 m!78755))

(assert (=> bs!3361 m!78755))

(assert (=> bs!3361 m!78765))

(declare-fun m!80827 () Bool)

(assert (=> bs!3361 m!80827))

(declare-fun m!80829 () Bool)

(assert (=> bs!3361 m!80829))

(assert (=> b!78585 d!19279))

(declare-fun d!19281 () Bool)

(declare-fun e!52058 () Bool)

(assert (=> d!19281 e!52058))

(declare-fun res!41581 () Bool)

(assert (=> d!19281 (=> (not res!41581) (not e!52058))))

(declare-fun lt!36958 () ListLongMap!1465)

(assert (=> d!19281 (= res!41581 (contains!745 lt!36958 (_1!1105 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(declare-fun lt!36955 () List!1533)

(assert (=> d!19281 (= lt!36958 (ListLongMap!1466 lt!36955))))

(declare-fun lt!36957 () Unit!2263)

(declare-fun lt!36956 () Unit!2263)

(assert (=> d!19281 (= lt!36957 lt!36956)))

(assert (=> d!19281 (= (getValueByKey!136 lt!36955 (_1!1105 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))) (Some!141 (_2!1105 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(assert (=> d!19281 (= lt!36956 (lemmaContainsTupThenGetReturnValue!55 lt!36955 (_1!1105 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) (_2!1105 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(assert (=> d!19281 (= lt!36955 (insertStrictlySorted!57 (toList!748 lt!36275) (_1!1105 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) (_2!1105 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(assert (=> d!19281 (= (+!109 lt!36275 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) lt!36958)))

(declare-fun b!79724 () Bool)

(declare-fun res!41582 () Bool)

(assert (=> b!79724 (=> (not res!41582) (not e!52058))))

(assert (=> b!79724 (= res!41582 (= (getValueByKey!136 (toList!748 lt!36958) (_1!1105 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))) (Some!141 (_2!1105 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))))))

(declare-fun b!79725 () Bool)

(assert (=> b!79725 (= e!52058 (contains!748 (toList!748 lt!36958) (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))))

(assert (= (and d!19281 res!41581) b!79724))

(assert (= (and b!79724 res!41582) b!79725))

(declare-fun m!80831 () Bool)

(assert (=> d!19281 m!80831))

(declare-fun m!80833 () Bool)

(assert (=> d!19281 m!80833))

(declare-fun m!80835 () Bool)

(assert (=> d!19281 m!80835))

(declare-fun m!80837 () Bool)

(assert (=> d!19281 m!80837))

(declare-fun m!80839 () Bool)

(assert (=> b!79724 m!80839))

(declare-fun m!80841 () Bool)

(assert (=> b!79725 m!80841))

(assert (=> b!78585 d!19281))

(declare-fun d!19283 () Bool)

(declare-fun e!52059 () Bool)

(assert (=> d!19283 e!52059))

(declare-fun res!41583 () Bool)

(assert (=> d!19283 (=> (not res!41583) (not e!52059))))

(declare-fun lt!36962 () ListLongMap!1465)

(assert (=> d!19283 (= res!41583 (contains!745 lt!36962 (_1!1105 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(declare-fun lt!36959 () List!1533)

(assert (=> d!19283 (= lt!36962 (ListLongMap!1466 lt!36959))))

(declare-fun lt!36961 () Unit!2263)

(declare-fun lt!36960 () Unit!2263)

(assert (=> d!19283 (= lt!36961 lt!36960)))

(assert (=> d!19283 (= (getValueByKey!136 lt!36959 (_1!1105 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))) (Some!141 (_2!1105 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(assert (=> d!19283 (= lt!36960 (lemmaContainsTupThenGetReturnValue!55 lt!36959 (_1!1105 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) (_2!1105 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(assert (=> d!19283 (= lt!36959 (insertStrictlySorted!57 (toList!748 lt!36294) (_1!1105 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) (_2!1105 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(assert (=> d!19283 (= (+!109 lt!36294 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) lt!36962)))

(declare-fun b!79726 () Bool)

(declare-fun res!41584 () Bool)

(assert (=> b!79726 (=> (not res!41584) (not e!52059))))

(assert (=> b!79726 (= res!41584 (= (getValueByKey!136 (toList!748 lt!36962) (_1!1105 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))) (Some!141 (_2!1105 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))))))

(declare-fun b!79727 () Bool)

(assert (=> b!79727 (= e!52059 (contains!748 (toList!748 lt!36962) (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))))

(assert (= (and d!19283 res!41583) b!79726))

(assert (= (and b!79726 res!41584) b!79727))

(declare-fun m!80843 () Bool)

(assert (=> d!19283 m!80843))

(declare-fun m!80845 () Bool)

(assert (=> d!19283 m!80845))

(declare-fun m!80847 () Bool)

(assert (=> d!19283 m!80847))

(declare-fun m!80849 () Bool)

(assert (=> d!19283 m!80849))

(declare-fun m!80851 () Bool)

(assert (=> b!79726 m!80851))

(declare-fun m!80853 () Bool)

(assert (=> b!79727 m!80853))

(assert (=> b!78585 d!19283))

(declare-fun d!19285 () Bool)

(declare-fun e!52060 () Bool)

(assert (=> d!19285 e!52060))

(declare-fun res!41585 () Bool)

(assert (=> d!19285 (=> (not res!41585) (not e!52060))))

(declare-fun lt!36966 () ListLongMap!1465)

(assert (=> d!19285 (= res!41585 (contains!745 lt!36966 (_1!1105 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))))))

(declare-fun lt!36963 () List!1533)

(assert (=> d!19285 (= lt!36966 (ListLongMap!1466 lt!36963))))

(declare-fun lt!36965 () Unit!2263)

(declare-fun lt!36964 () Unit!2263)

(assert (=> d!19285 (= lt!36965 lt!36964)))

(assert (=> d!19285 (= (getValueByKey!136 lt!36963 (_1!1105 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))) (Some!141 (_2!1105 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))))))

(assert (=> d!19285 (= lt!36964 (lemmaContainsTupThenGetReturnValue!55 lt!36963 (_1!1105 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) (_2!1105 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))))))

(assert (=> d!19285 (= lt!36963 (insertStrictlySorted!57 (toList!748 lt!36290) (_1!1105 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) (_2!1105 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))))))

(assert (=> d!19285 (= (+!109 lt!36290 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) lt!36966)))

(declare-fun b!79728 () Bool)

(declare-fun res!41586 () Bool)

(assert (=> b!79728 (=> (not res!41586) (not e!52060))))

(assert (=> b!79728 (= res!41586 (= (getValueByKey!136 (toList!748 lt!36966) (_1!1105 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))) (Some!141 (_2!1105 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))))))))

(declare-fun b!79729 () Bool)

(assert (=> b!79729 (= e!52060 (contains!748 (toList!748 lt!36966) (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))))))

(assert (= (and d!19285 res!41585) b!79728))

(assert (= (and b!79728 res!41586) b!79729))

(declare-fun m!80855 () Bool)

(assert (=> d!19285 m!80855))

(declare-fun m!80857 () Bool)

(assert (=> d!19285 m!80857))

(declare-fun m!80859 () Bool)

(assert (=> d!19285 m!80859))

(declare-fun m!80861 () Bool)

(assert (=> d!19285 m!80861))

(declare-fun m!80863 () Bool)

(assert (=> b!79728 m!80863))

(declare-fun m!80865 () Bool)

(assert (=> b!79729 m!80865))

(assert (=> b!78585 d!19285))

(declare-fun d!19287 () Bool)

(assert (=> d!19287 (= (apply!79 (+!109 lt!36290 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) lt!36280) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!36290 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))) lt!36280)))))

(declare-fun bs!3362 () Bool)

(assert (= bs!3362 d!19287))

(declare-fun m!80867 () Bool)

(assert (=> bs!3362 m!80867))

(assert (=> bs!3362 m!80867))

(declare-fun m!80869 () Bool)

(assert (=> bs!3362 m!80869))

(assert (=> b!78585 d!19287))

(declare-fun d!19289 () Bool)

(assert (=> d!19289 (= (apply!79 lt!36294 lt!36291) (get!1192 (getValueByKey!136 (toList!748 lt!36294) lt!36291)))))

(declare-fun bs!3363 () Bool)

(assert (= bs!3363 d!19289))

(declare-fun m!80871 () Bool)

(assert (=> bs!3363 m!80871))

(assert (=> bs!3363 m!80871))

(declare-fun m!80873 () Bool)

(assert (=> bs!3363 m!80873))

(assert (=> b!78585 d!19289))

(declare-fun d!19291 () Bool)

(assert (=> d!19291 (= (apply!79 (+!109 lt!36290 (tuple2!2191 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) lt!36280) (apply!79 lt!36290 lt!36280))))

(declare-fun lt!36967 () Unit!2263)

(assert (=> d!19291 (= lt!36967 (choose!469 lt!36290 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) lt!36280))))

(declare-fun e!52061 () Bool)

(assert (=> d!19291 e!52061))

(declare-fun res!41587 () Bool)

(assert (=> d!19291 (=> (not res!41587) (not e!52061))))

(assert (=> d!19291 (= res!41587 (contains!745 lt!36290 lt!36280))))

(assert (=> d!19291 (= (addApplyDifferent!55 lt!36290 lt!36276 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)) lt!36280) lt!36967)))

(declare-fun b!79730 () Bool)

(assert (=> b!79730 (= e!52061 (not (= lt!36280 lt!36276)))))

(assert (= (and d!19291 res!41587) b!79730))

(assert (=> d!19291 m!78767))

(assert (=> d!19291 m!78769))

(assert (=> d!19291 m!78757))

(declare-fun m!80875 () Bool)

(assert (=> d!19291 m!80875))

(assert (=> d!19291 m!78767))

(declare-fun m!80877 () Bool)

(assert (=> d!19291 m!80877))

(assert (=> b!78585 d!19291))

(declare-fun d!19293 () Bool)

(assert (=> d!19293 (= (apply!79 lt!36275 lt!36289) (get!1192 (getValueByKey!136 (toList!748 lt!36275) lt!36289)))))

(declare-fun bs!3364 () Bool)

(assert (= bs!3364 d!19293))

(declare-fun m!80879 () Bool)

(assert (=> bs!3364 m!80879))

(assert (=> bs!3364 m!80879))

(declare-fun m!80881 () Bool)

(assert (=> bs!3364 m!80881))

(assert (=> b!78585 d!19293))

(declare-fun d!19295 () Bool)

(declare-fun e!52062 () Bool)

(assert (=> d!19295 e!52062))

(declare-fun res!41588 () Bool)

(assert (=> d!19295 (=> (not res!41588) (not e!52062))))

(declare-fun lt!36971 () ListLongMap!1465)

(assert (=> d!19295 (= res!41588 (contains!745 lt!36971 (_1!1105 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))))))

(declare-fun lt!36968 () List!1533)

(assert (=> d!19295 (= lt!36971 (ListLongMap!1466 lt!36968))))

(declare-fun lt!36970 () Unit!2263)

(declare-fun lt!36969 () Unit!2263)

(assert (=> d!19295 (= lt!36970 lt!36969)))

(assert (=> d!19295 (= (getValueByKey!136 lt!36968 (_1!1105 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))) (Some!141 (_2!1105 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))))))

(assert (=> d!19295 (= lt!36969 (lemmaContainsTupThenGetReturnValue!55 lt!36968 (_1!1105 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) (_2!1105 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))))))

(assert (=> d!19295 (= lt!36968 (insertStrictlySorted!57 (toList!748 lt!36287) (_1!1105 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) (_2!1105 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))))))

(assert (=> d!19295 (= (+!109 lt!36287 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))) lt!36971)))

(declare-fun b!79731 () Bool)

(declare-fun res!41589 () Bool)

(assert (=> b!79731 (=> (not res!41589) (not e!52062))))

(assert (=> b!79731 (= res!41589 (= (getValueByKey!136 (toList!748 lt!36971) (_1!1105 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16))))) (Some!141 (_2!1105 (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))))))))

(declare-fun b!79732 () Bool)

(assert (=> b!79732 (= e!52062 (contains!748 (toList!748 lt!36971) (tuple2!2191 lt!36293 (ite (and c!11979 c!11986) lt!35780 (zeroValue!2170 newMap!16)))))))

(assert (= (and d!19295 res!41588) b!79731))

(assert (= (and b!79731 res!41589) b!79732))

(declare-fun m!80883 () Bool)

(assert (=> d!19295 m!80883))

(declare-fun m!80885 () Bool)

(assert (=> d!19295 m!80885))

(declare-fun m!80887 () Bool)

(assert (=> d!19295 m!80887))

(declare-fun m!80889 () Bool)

(assert (=> d!19295 m!80889))

(declare-fun m!80891 () Bool)

(assert (=> b!79731 m!80891))

(declare-fun m!80893 () Bool)

(assert (=> b!79732 m!80893))

(assert (=> b!78585 d!19295))

(declare-fun d!19297 () Bool)

(assert (=> d!19297 (= (apply!79 (+!109 lt!36275 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) lt!36289) (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!36275 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))) lt!36289)))))

(declare-fun bs!3365 () Bool)

(assert (= bs!3365 d!19297))

(declare-fun m!80895 () Bool)

(assert (=> bs!3365 m!80895))

(assert (=> bs!3365 m!80895))

(declare-fun m!80897 () Bool)

(assert (=> bs!3365 m!80897))

(assert (=> b!78585 d!19297))

(declare-fun d!19299 () Bool)

(assert (=> d!19299 (= (apply!79 (+!109 lt!36275 (tuple2!2191 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) lt!36289) (apply!79 lt!36275 lt!36289))))

(declare-fun lt!36972 () Unit!2263)

(assert (=> d!19299 (= lt!36972 (choose!469 lt!36275 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) lt!36289))))

(declare-fun e!52063 () Bool)

(assert (=> d!19299 e!52063))

(declare-fun res!41590 () Bool)

(assert (=> d!19299 (=> (not res!41590) (not e!52063))))

(assert (=> d!19299 (= res!41590 (contains!745 lt!36275 lt!36289))))

(assert (=> d!19299 (= (addApplyDifferent!55 lt!36275 lt!36277 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) lt!36289) lt!36972)))

(declare-fun b!79733 () Bool)

(assert (=> b!79733 (= e!52063 (not (= lt!36289 lt!36277)))))

(assert (= (and d!19299 res!41590) b!79733))

(assert (=> d!19299 m!78773))

(assert (=> d!19299 m!78775))

(assert (=> d!19299 m!78761))

(declare-fun m!80899 () Bool)

(assert (=> d!19299 m!80899))

(assert (=> d!19299 m!78773))

(declare-fun m!80901 () Bool)

(assert (=> d!19299 m!80901))

(assert (=> b!78585 d!19299))

(declare-fun d!19301 () Bool)

(assert (=> d!19301 (= (apply!79 (+!109 lt!36294 (tuple2!2191 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) lt!36291) (apply!79 lt!36294 lt!36291))))

(declare-fun lt!36973 () Unit!2263)

(assert (=> d!19301 (= lt!36973 (choose!469 lt!36294 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) lt!36291))))

(declare-fun e!52064 () Bool)

(assert (=> d!19301 e!52064))

(declare-fun res!41591 () Bool)

(assert (=> d!19301 (=> (not res!41591) (not e!52064))))

(assert (=> d!19301 (= res!41591 (contains!745 lt!36294 lt!36291))))

(assert (=> d!19301 (= (addApplyDifferent!55 lt!36294 lt!36295 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)) lt!36291) lt!36973)))

(declare-fun b!79734 () Bool)

(assert (=> b!79734 (= e!52064 (not (= lt!36291 lt!36295)))))

(assert (= (and d!19301 res!41591) b!79734))

(assert (=> d!19301 m!78753))

(assert (=> d!19301 m!78771))

(assert (=> d!19301 m!78751))

(declare-fun m!80903 () Bool)

(assert (=> d!19301 m!80903))

(assert (=> d!19301 m!78753))

(declare-fun m!80905 () Bool)

(assert (=> d!19301 m!80905))

(assert (=> b!78585 d!19301))

(assert (=> b!78719 d!19015))

(declare-fun d!19303 () Bool)

(declare-fun lt!36974 () Bool)

(assert (=> d!19303 (= lt!36974 (select (content!82 lt!35881) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun e!52065 () Bool)

(assert (=> d!19303 (= lt!36974 e!52065)))

(declare-fun res!41592 () Bool)

(assert (=> d!19303 (=> (not res!41592) (not e!52065))))

(assert (=> d!19303 (= res!41592 ((_ is Cons!1529) lt!35881))))

(assert (=> d!19303 (= (contains!748 lt!35881 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))) lt!36974)))

(declare-fun b!79735 () Bool)

(declare-fun e!52066 () Bool)

(assert (=> b!79735 (= e!52065 e!52066)))

(declare-fun res!41593 () Bool)

(assert (=> b!79735 (=> res!41593 e!52066)))

(assert (=> b!79735 (= res!41593 (= (h!2117 lt!35881) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!79736 () Bool)

(assert (=> b!79736 (= e!52066 (contains!748 (t!5183 lt!35881) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(assert (= (and d!19303 res!41592) b!79735))

(assert (= (and b!79735 (not res!41593)) b!79736))

(declare-fun m!80907 () Bool)

(assert (=> d!19303 m!80907))

(declare-fun m!80909 () Bool)

(assert (=> d!19303 m!80909))

(declare-fun m!80911 () Bool)

(assert (=> b!79736 m!80911))

(assert (=> b!78390 d!19303))

(declare-fun d!19305 () Bool)

(assert (=> d!19305 (isDefined!90 (getValueByKey!136 (toList!748 lt!35903) (_1!1105 lt!35783)))))

(declare-fun lt!36975 () Unit!2263)

(assert (=> d!19305 (= lt!36975 (choose!471 (toList!748 lt!35903) (_1!1105 lt!35783)))))

(declare-fun e!52067 () Bool)

(assert (=> d!19305 e!52067))

(declare-fun res!41594 () Bool)

(assert (=> d!19305 (=> (not res!41594) (not e!52067))))

(assert (=> d!19305 (= res!41594 (isStrictlySorted!290 (toList!748 lt!35903)))))

(assert (=> d!19305 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35903) (_1!1105 lt!35783)) lt!36975)))

(declare-fun b!79737 () Bool)

(assert (=> b!79737 (= e!52067 (containsKey!140 (toList!748 lt!35903) (_1!1105 lt!35783)))))

(assert (= (and d!19305 res!41594) b!79737))

(assert (=> d!19305 m!77987))

(assert (=> d!19305 m!77987))

(assert (=> d!19305 m!78721))

(declare-fun m!80913 () Bool)

(assert (=> d!19305 m!80913))

(declare-fun m!80915 () Bool)

(assert (=> d!19305 m!80915))

(assert (=> b!79737 m!78717))

(assert (=> b!78556 d!19305))

(declare-fun d!19307 () Bool)

(assert (=> d!19307 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35903) (_1!1105 lt!35783))) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35903) (_1!1105 lt!35783)))))))

(declare-fun bs!3366 () Bool)

(assert (= bs!3366 d!19307))

(assert (=> bs!3366 m!77987))

(declare-fun m!80917 () Bool)

(assert (=> bs!3366 m!80917))

(assert (=> b!78556 d!19307))

(assert (=> b!78556 d!18691))

(assert (=> b!78282 d!18717))

(declare-fun d!19309 () Bool)

(declare-fun lt!36976 () Bool)

(assert (=> d!19309 (= lt!36976 (select (content!82 (toList!748 lt!36311)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun e!52068 () Bool)

(assert (=> d!19309 (= lt!36976 e!52068)))

(declare-fun res!41595 () Bool)

(assert (=> d!19309 (=> (not res!41595) (not e!52068))))

(assert (=> d!19309 (= res!41595 ((_ is Cons!1529) (toList!748 lt!36311)))))

(assert (=> d!19309 (= (contains!748 (toList!748 lt!36311) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!36976)))

(declare-fun b!79738 () Bool)

(declare-fun e!52069 () Bool)

(assert (=> b!79738 (= e!52068 e!52069)))

(declare-fun res!41596 () Bool)

(assert (=> b!79738 (=> res!41596 e!52069)))

(assert (=> b!79738 (= res!41596 (= (h!2117 (toList!748 lt!36311)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun b!79739 () Bool)

(assert (=> b!79739 (= e!52069 (contains!748 (t!5183 (toList!748 lt!36311)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!19309 res!41595) b!79738))

(assert (= (and b!79738 (not res!41596)) b!79739))

(declare-fun m!80919 () Bool)

(assert (=> d!19309 m!80919))

(declare-fun m!80921 () Bool)

(assert (=> d!19309 m!80921))

(declare-fun m!80923 () Bool)

(assert (=> b!79739 m!80923))

(assert (=> b!78607 d!19309))

(declare-fun d!19311 () Bool)

(declare-fun e!52071 () Bool)

(assert (=> d!19311 e!52071))

(declare-fun res!41597 () Bool)

(assert (=> d!19311 (=> res!41597 e!52071)))

(declare-fun lt!36977 () Bool)

(assert (=> d!19311 (= res!41597 (not lt!36977))))

(declare-fun lt!36978 () Bool)

(assert (=> d!19311 (= lt!36977 lt!36978)))

(declare-fun lt!36979 () Unit!2263)

(declare-fun e!52070 () Unit!2263)

(assert (=> d!19311 (= lt!36979 e!52070)))

(declare-fun c!12421 () Bool)

(assert (=> d!19311 (= c!12421 lt!36978)))

(assert (=> d!19311 (= lt!36978 (containsKey!140 (toList!748 lt!36448) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19311 (= (contains!745 lt!36448 #b0000000000000000000000000000000000000000000000000000000000000000) lt!36977)))

(declare-fun b!79740 () Bool)

(declare-fun lt!36980 () Unit!2263)

(assert (=> b!79740 (= e!52070 lt!36980)))

(assert (=> b!79740 (= lt!36980 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36448) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79740 (isDefined!90 (getValueByKey!136 (toList!748 lt!36448) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79741 () Bool)

(declare-fun Unit!2334 () Unit!2263)

(assert (=> b!79741 (= e!52070 Unit!2334)))

(declare-fun b!79742 () Bool)

(assert (=> b!79742 (= e!52071 (isDefined!90 (getValueByKey!136 (toList!748 lt!36448) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19311 c!12421) b!79740))

(assert (= (and d!19311 (not c!12421)) b!79741))

(assert (= (and d!19311 (not res!41597)) b!79742))

(declare-fun m!80925 () Bool)

(assert (=> d!19311 m!80925))

(declare-fun m!80927 () Bool)

(assert (=> b!79740 m!80927))

(declare-fun m!80929 () Bool)

(assert (=> b!79740 m!80929))

(assert (=> b!79740 m!80929))

(declare-fun m!80931 () Bool)

(assert (=> b!79740 m!80931))

(assert (=> b!79742 m!80929))

(assert (=> b!79742 m!80929))

(assert (=> b!79742 m!80931))

(assert (=> bm!7239 d!19311))

(declare-fun d!19313 () Bool)

(assert (=> d!19313 (= (+!109 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (getCurrentListMap!435 (_keys!3932 newMap!16) (array!3977 (store (arr!1895 (_values!2255 newMap!16)) (index!3135 lt!36063) (ValueCellFull!912 lt!35780)) (size!2136 (_values!2255 newMap!16))) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(assert (=> d!19313 true))

(declare-fun _$5!83 () Unit!2263)

(assert (=> d!19313 (= (choose!467 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3135 lt!36063) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780 (defaultEntry!2272 newMap!16)) _$5!83)))

(declare-fun bs!3367 () Bool)

(assert (= bs!3367 d!19313))

(assert (=> bs!3367 m!78025))

(assert (=> bs!3367 m!78025))

(assert (=> bs!3367 m!78351))

(assert (=> bs!3367 m!78097))

(assert (=> bs!3367 m!78353))

(assert (=> d!18511 d!19313))

(assert (=> d!18511 d!18847))

(declare-fun d!19315 () Bool)

(assert (=> d!19315 (= (isEmpty!331 lt!36090) (isEmpty!333 (toList!748 lt!36090)))))

(declare-fun bs!3368 () Bool)

(assert (= bs!3368 d!19315))

(declare-fun m!80933 () Bool)

(assert (=> bs!3368 m!80933))

(assert (=> b!78294 d!19315))

(declare-fun d!19317 () Bool)

(assert (=> d!19317 (isDefined!90 (getValueByKey!136 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun lt!36981 () Unit!2263)

(assert (=> d!19317 (= lt!36981 (choose!471 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun e!52072 () Bool)

(assert (=> d!19317 e!52072))

(declare-fun res!41598 () Bool)

(assert (=> d!19317 (=> (not res!41598) (not e!52072))))

(assert (=> d!19317 (= res!41598 (isStrictlySorted!290 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))))

(assert (=> d!19317 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) lt!36981)))

(declare-fun b!79743 () Bool)

(assert (=> b!79743 (= e!52072 (containsKey!140 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!19317 res!41598) b!79743))

(assert (=> d!19317 m!77749))

(assert (=> d!19317 m!78359))

(assert (=> d!19317 m!78359))

(assert (=> d!19317 m!78361))

(assert (=> d!19317 m!77749))

(declare-fun m!80935 () Bool)

(assert (=> d!19317 m!80935))

(declare-fun m!80937 () Bool)

(assert (=> d!19317 m!80937))

(assert (=> b!79743 m!77749))

(assert (=> b!79743 m!78355))

(assert (=> b!78367 d!19317))

(declare-fun d!19319 () Bool)

(assert (=> d!19319 (= (isDefined!90 (getValueByKey!136 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))) (not (isEmpty!332 (getValueByKey!136 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun bs!3369 () Bool)

(assert (= bs!3369 d!19319))

(assert (=> bs!3369 m!78359))

(declare-fun m!80939 () Bool)

(assert (=> bs!3369 m!80939))

(assert (=> b!78367 d!19319))

(declare-fun b!79745 () Bool)

(declare-fun e!52073 () Option!142)

(declare-fun e!52074 () Option!142)

(assert (=> b!79745 (= e!52073 e!52074)))

(declare-fun c!12423 () Bool)

(assert (=> b!79745 (= c!12423 (and ((_ is Cons!1529) (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (not (= (_1!1105 (h!2117 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))))

(declare-fun b!79744 () Bool)

(assert (=> b!79744 (= e!52073 (Some!141 (_2!1105 (h!2117 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))))))

(declare-fun b!79746 () Bool)

(assert (=> b!79746 (= e!52074 (getValueByKey!136 (t!5183 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun b!79747 () Bool)

(assert (=> b!79747 (= e!52074 None!140)))

(declare-fun d!19321 () Bool)

(declare-fun c!12422 () Bool)

(assert (=> d!19321 (= c!12422 (and ((_ is Cons!1529) (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))) (= (_1!1105 (h!2117 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!19321 (= (getValueByKey!136 (toList!748 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) e!52073)))

(assert (= (and d!19321 c!12422) b!79744))

(assert (= (and d!19321 (not c!12422)) b!79745))

(assert (= (and b!79745 c!12423) b!79746))

(assert (= (and b!79745 (not c!12423)) b!79747))

(assert (=> b!79746 m!77749))

(declare-fun m!80941 () Bool)

(assert (=> b!79746 m!80941))

(assert (=> b!78367 d!19321))

(declare-fun bm!7353 () Bool)

(declare-fun call!7356 () Bool)

(assert (=> bm!7353 (= call!7356 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3932 (_2!1104 lt!36056)) (mask!6268 (_2!1104 lt!36056))))))

(declare-fun b!79748 () Bool)

(declare-fun e!52077 () Bool)

(assert (=> b!79748 (= e!52077 call!7356)))

(declare-fun b!79749 () Bool)

(declare-fun e!52076 () Bool)

(assert (=> b!79749 (= e!52076 call!7356)))

(declare-fun d!19323 () Bool)

(declare-fun res!41600 () Bool)

(declare-fun e!52075 () Bool)

(assert (=> d!19323 (=> res!41600 e!52075)))

(assert (=> d!19323 (= res!41600 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))))))

(assert (=> d!19323 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3932 (_2!1104 lt!36056)) (mask!6268 (_2!1104 lt!36056))) e!52075)))

(declare-fun b!79750 () Bool)

(assert (=> b!79750 (= e!52077 e!52076)))

(declare-fun lt!36982 () (_ BitVec 64))

(assert (=> b!79750 (= lt!36982 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000))))

(declare-fun lt!36984 () Unit!2263)

(assert (=> b!79750 (= lt!36984 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3932 (_2!1104 lt!36056)) lt!36982 #b00000000000000000000000000000000))))

(assert (=> b!79750 (arrayContainsKey!0 (_keys!3932 (_2!1104 lt!36056)) lt!36982 #b00000000000000000000000000000000)))

(declare-fun lt!36983 () Unit!2263)

(assert (=> b!79750 (= lt!36983 lt!36984)))

(declare-fun res!41599 () Bool)

(assert (=> b!79750 (= res!41599 (= (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000) (_keys!3932 (_2!1104 lt!36056)) (mask!6268 (_2!1104 lt!36056))) (Found!250 #b00000000000000000000000000000000)))))

(assert (=> b!79750 (=> (not res!41599) (not e!52076))))

(declare-fun b!79751 () Bool)

(assert (=> b!79751 (= e!52075 e!52077)))

(declare-fun c!12424 () Bool)

(assert (=> b!79751 (= c!12424 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000)))))

(assert (= (and d!19323 (not res!41600)) b!79751))

(assert (= (and b!79751 c!12424) b!79750))

(assert (= (and b!79751 (not c!12424)) b!79748))

(assert (= (and b!79750 res!41599) b!79749))

(assert (= (or b!79749 b!79748) bm!7353))

(declare-fun m!80943 () Bool)

(assert (=> bm!7353 m!80943))

(assert (=> b!79750 m!79795))

(declare-fun m!80945 () Bool)

(assert (=> b!79750 m!80945))

(declare-fun m!80947 () Bool)

(assert (=> b!79750 m!80947))

(assert (=> b!79750 m!79795))

(declare-fun m!80949 () Bool)

(assert (=> b!79750 m!80949))

(assert (=> b!79751 m!79795))

(assert (=> b!79751 m!79795))

(assert (=> b!79751 m!79823))

(assert (=> b!78302 d!19323))

(declare-fun d!19325 () Bool)

(assert (=> d!19325 (arrayContainsKey!0 (_keys!3932 newMap!16) lt!36224 #b00000000000000000000000000000000)))

(declare-fun lt!36985 () Unit!2263)

(assert (=> d!19325 (= lt!36985 (choose!13 (_keys!3932 newMap!16) lt!36224 #b00000000000000000000000000000000))))

(assert (=> d!19325 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!19325 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3932 newMap!16) lt!36224 #b00000000000000000000000000000000) lt!36985)))

(declare-fun bs!3370 () Bool)

(assert (= bs!3370 d!19325))

(assert (=> bs!3370 m!78603))

(declare-fun m!80951 () Bool)

(assert (=> bs!3370 m!80951))

(assert (=> b!78512 d!19325))

(declare-fun d!19327 () Bool)

(declare-fun res!41601 () Bool)

(declare-fun e!52078 () Bool)

(assert (=> d!19327 (=> res!41601 e!52078)))

(assert (=> d!19327 (= res!41601 (= (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) lt!36224))))

(assert (=> d!19327 (= (arrayContainsKey!0 (_keys!3932 newMap!16) lt!36224 #b00000000000000000000000000000000) e!52078)))

(declare-fun b!79752 () Bool)

(declare-fun e!52079 () Bool)

(assert (=> b!79752 (= e!52078 e!52079)))

(declare-fun res!41602 () Bool)

(assert (=> b!79752 (=> (not res!41602) (not e!52079))))

(assert (=> b!79752 (= res!41602 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!79753 () Bool)

(assert (=> b!79753 (= e!52079 (arrayContainsKey!0 (_keys!3932 newMap!16) lt!36224 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!19327 (not res!41601)) b!79752))

(assert (= (and b!79752 res!41602) b!79753))

(assert (=> d!19327 m!78153))

(declare-fun m!80953 () Bool)

(assert (=> b!79753 m!80953))

(assert (=> b!78512 d!19327))

(declare-fun b!79754 () Bool)

(declare-fun e!52080 () SeekEntryResult!250)

(declare-fun lt!36986 () SeekEntryResult!250)

(assert (=> b!79754 (= e!52080 (Found!250 (index!3136 lt!36986)))))

(declare-fun b!79755 () Bool)

(declare-fun e!52082 () SeekEntryResult!250)

(assert (=> b!79755 (= e!52082 e!52080)))

(declare-fun lt!36987 () (_ BitVec 64))

(assert (=> b!79755 (= lt!36987 (select (arr!1894 (_keys!3932 newMap!16)) (index!3136 lt!36986)))))

(declare-fun c!12426 () Bool)

(assert (=> b!79755 (= c!12426 (= lt!36987 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!79756 () Bool)

(assert (=> b!79756 (= e!52082 Undefined!250)))

(declare-fun b!79757 () Bool)

(declare-fun e!52081 () SeekEntryResult!250)

(assert (=> b!79757 (= e!52081 (seekKeyOrZeroReturnVacant!0 (x!11557 lt!36986) (index!3136 lt!36986) (index!3136 lt!36986) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(declare-fun d!19329 () Bool)

(declare-fun lt!36988 () SeekEntryResult!250)

(assert (=> d!19329 (and (or ((_ is Undefined!250) lt!36988) (not ((_ is Found!250) lt!36988)) (and (bvsge (index!3135 lt!36988) #b00000000000000000000000000000000) (bvslt (index!3135 lt!36988) (size!2135 (_keys!3932 newMap!16))))) (or ((_ is Undefined!250) lt!36988) ((_ is Found!250) lt!36988) (not ((_ is MissingZero!250) lt!36988)) (and (bvsge (index!3134 lt!36988) #b00000000000000000000000000000000) (bvslt (index!3134 lt!36988) (size!2135 (_keys!3932 newMap!16))))) (or ((_ is Undefined!250) lt!36988) ((_ is Found!250) lt!36988) ((_ is MissingZero!250) lt!36988) (not ((_ is MissingVacant!250) lt!36988)) (and (bvsge (index!3137 lt!36988) #b00000000000000000000000000000000) (bvslt (index!3137 lt!36988) (size!2135 (_keys!3932 newMap!16))))) (or ((_ is Undefined!250) lt!36988) (ite ((_ is Found!250) lt!36988) (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36988)) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!250) lt!36988) (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3134 lt!36988)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!250) lt!36988) (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3137 lt!36988)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!19329 (= lt!36988 e!52082)))

(declare-fun c!12427 () Bool)

(assert (=> d!19329 (= c!12427 (and ((_ is Intermediate!250) lt!36986) (undefined!1062 lt!36986)))))

(assert (=> d!19329 (= lt!36986 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (mask!6268 newMap!16)) (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(assert (=> d!19329 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19329 (= (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 newMap!16)) #b00000000000000000000000000000000) (_keys!3932 newMap!16) (mask!6268 newMap!16)) lt!36988)))

(declare-fun b!79758 () Bool)

(assert (=> b!79758 (= e!52081 (MissingZero!250 (index!3136 lt!36986)))))

(declare-fun b!79759 () Bool)

(declare-fun c!12425 () Bool)

(assert (=> b!79759 (= c!12425 (= lt!36987 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79759 (= e!52080 e!52081)))

(assert (= (and d!19329 c!12427) b!79756))

(assert (= (and d!19329 (not c!12427)) b!79755))

(assert (= (and b!79755 c!12426) b!79754))

(assert (= (and b!79755 (not c!12426)) b!79759))

(assert (= (and b!79759 c!12425) b!79758))

(assert (= (and b!79759 (not c!12425)) b!79757))

(declare-fun m!80955 () Bool)

(assert (=> b!79755 m!80955))

(assert (=> b!79757 m!78153))

(declare-fun m!80957 () Bool)

(assert (=> b!79757 m!80957))

(assert (=> d!19329 m!78153))

(declare-fun m!80959 () Bool)

(assert (=> d!19329 m!80959))

(declare-fun m!80961 () Bool)

(assert (=> d!19329 m!80961))

(assert (=> d!19329 m!80959))

(assert (=> d!19329 m!78153))

(declare-fun m!80963 () Bool)

(assert (=> d!19329 m!80963))

(assert (=> d!19329 m!78167))

(declare-fun m!80965 () Bool)

(assert (=> d!19329 m!80965))

(declare-fun m!80967 () Bool)

(assert (=> d!19329 m!80967))

(assert (=> b!78512 d!19329))

(declare-fun d!19331 () Bool)

(declare-fun res!41603 () Bool)

(declare-fun e!52083 () Bool)

(assert (=> d!19331 (=> res!41603 e!52083)))

(assert (=> d!19331 (= res!41603 (and ((_ is Cons!1529) lt!35900) (= (_1!1105 (h!2117 lt!35900)) (_1!1105 lt!35783))))))

(assert (=> d!19331 (= (containsKey!140 lt!35900 (_1!1105 lt!35783)) e!52083)))

(declare-fun b!79760 () Bool)

(declare-fun e!52084 () Bool)

(assert (=> b!79760 (= e!52083 e!52084)))

(declare-fun res!41604 () Bool)

(assert (=> b!79760 (=> (not res!41604) (not e!52084))))

(assert (=> b!79760 (= res!41604 (and (or (not ((_ is Cons!1529) lt!35900)) (bvsle (_1!1105 (h!2117 lt!35900)) (_1!1105 lt!35783))) ((_ is Cons!1529) lt!35900) (bvslt (_1!1105 (h!2117 lt!35900)) (_1!1105 lt!35783))))))

(declare-fun b!79761 () Bool)

(assert (=> b!79761 (= e!52084 (containsKey!140 (t!5183 lt!35900) (_1!1105 lt!35783)))))

(assert (= (and d!19331 (not res!41603)) b!79760))

(assert (= (and b!79760 res!41604) b!79761))

(declare-fun m!80969 () Bool)

(assert (=> b!79761 m!80969))

(assert (=> b!78563 d!19331))

(declare-fun d!19333 () Bool)

(assert (=> d!19333 (= (get!1192 (getValueByKey!136 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2598 (getValueByKey!136 (toList!748 lt!35969) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!18653 d!19333))

(assert (=> d!18653 d!18823))

(declare-fun d!19335 () Bool)

(declare-fun res!41605 () Bool)

(declare-fun e!52085 () Bool)

(assert (=> d!19335 (=> res!41605 e!52085)))

(assert (=> d!19335 (= res!41605 (and ((_ is Cons!1529) (toList!748 lt!35867)) (= (_1!1105 (h!2117 (toList!748 lt!35867))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19335 (= (containsKey!140 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000) e!52085)))

(declare-fun b!79762 () Bool)

(declare-fun e!52086 () Bool)

(assert (=> b!79762 (= e!52085 e!52086)))

(declare-fun res!41606 () Bool)

(assert (=> b!79762 (=> (not res!41606) (not e!52086))))

(assert (=> b!79762 (= res!41606 (and (or (not ((_ is Cons!1529) (toList!748 lt!35867))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35867))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1529) (toList!748 lt!35867)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35867))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79763 () Bool)

(assert (=> b!79763 (= e!52086 (containsKey!140 (t!5183 (toList!748 lt!35867)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19335 (not res!41605)) b!79762))

(assert (= (and b!79762 res!41606) b!79763))

(declare-fun m!80971 () Bool)

(assert (=> b!79763 m!80971))

(assert (=> d!18693 d!19335))

(declare-fun d!19337 () Bool)

(declare-fun lt!36989 () Bool)

(assert (=> d!19337 (= lt!36989 (select (content!82 lt!36206) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun e!52087 () Bool)

(assert (=> d!19337 (= lt!36989 e!52087)))

(declare-fun res!41607 () Bool)

(assert (=> d!19337 (=> (not res!41607) (not e!52087))))

(assert (=> d!19337 (= res!41607 ((_ is Cons!1529) lt!36206))))

(assert (=> d!19337 (= (contains!748 lt!36206 (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))) lt!36989)))

(declare-fun b!79764 () Bool)

(declare-fun e!52088 () Bool)

(assert (=> b!79764 (= e!52087 e!52088)))

(declare-fun res!41608 () Bool)

(assert (=> b!79764 (=> res!41608 e!52088)))

(assert (=> b!79764 (= res!41608 (= (h!2117 lt!36206) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun b!79765 () Bool)

(assert (=> b!79765 (= e!52088 (contains!748 (t!5183 lt!36206) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(assert (= (and d!19337 res!41607) b!79764))

(assert (= (and b!79764 (not res!41608)) b!79765))

(declare-fun m!80973 () Bool)

(assert (=> d!19337 m!80973))

(declare-fun m!80975 () Bool)

(assert (=> d!19337 m!80975))

(declare-fun m!80977 () Bool)

(assert (=> b!79765 m!80977))

(assert (=> b!78477 d!19337))

(assert (=> b!78516 d!18507))

(declare-fun d!19339 () Bool)

(declare-fun res!41609 () Bool)

(declare-fun e!52089 () Bool)

(assert (=> d!19339 (=> res!41609 e!52089)))

(assert (=> d!19339 (= res!41609 (or ((_ is Nil!1530) lt!36217) ((_ is Nil!1530) (t!5183 lt!36217))))))

(assert (=> d!19339 (= (isStrictlySorted!290 lt!36217) e!52089)))

(declare-fun b!79766 () Bool)

(declare-fun e!52090 () Bool)

(assert (=> b!79766 (= e!52089 e!52090)))

(declare-fun res!41610 () Bool)

(assert (=> b!79766 (=> (not res!41610) (not e!52090))))

(assert (=> b!79766 (= res!41610 (bvslt (_1!1105 (h!2117 lt!36217)) (_1!1105 (h!2117 (t!5183 lt!36217)))))))

(declare-fun b!79767 () Bool)

(assert (=> b!79767 (= e!52090 (isStrictlySorted!290 (t!5183 lt!36217)))))

(assert (= (and d!19339 (not res!41609)) b!79766))

(assert (= (and b!79766 res!41610) b!79767))

(declare-fun m!80979 () Bool)

(assert (=> b!79767 m!80979))

(assert (=> d!18593 d!19339))

(declare-fun d!19341 () Bool)

(declare-fun res!41611 () Bool)

(declare-fun e!52091 () Bool)

(assert (=> d!19341 (=> res!41611 e!52091)))

(assert (=> d!19341 (= res!41611 (or ((_ is Nil!1530) (toList!748 lt!35785)) ((_ is Nil!1530) (t!5183 (toList!748 lt!35785)))))))

(assert (=> d!19341 (= (isStrictlySorted!290 (toList!748 lt!35785)) e!52091)))

(declare-fun b!79768 () Bool)

(declare-fun e!52092 () Bool)

(assert (=> b!79768 (= e!52091 e!52092)))

(declare-fun res!41612 () Bool)

(assert (=> b!79768 (=> (not res!41612) (not e!52092))))

(assert (=> b!79768 (= res!41612 (bvslt (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 (h!2117 (t!5183 (toList!748 lt!35785))))))))

(declare-fun b!79769 () Bool)

(assert (=> b!79769 (= e!52092 (isStrictlySorted!290 (t!5183 (toList!748 lt!35785))))))

(assert (= (and d!19341 (not res!41611)) b!79768))

(assert (= (and b!79768 res!41612) b!79769))

(declare-fun m!80981 () Bool)

(assert (=> b!79769 m!80981))

(assert (=> d!18593 d!19341))

(assert (=> b!78256 d!19127))

(assert (=> b!78256 d!18953))

(assert (=> d!18705 d!18703))

(declare-fun d!19343 () Bool)

(assert (=> d!19343 (= (getValueByKey!136 lt!35885 (_1!1105 lt!35788)) (Some!141 (_2!1105 lt!35788)))))

(assert (=> d!19343 true))

(declare-fun _$22!393 () Unit!2263)

(assert (=> d!19343 (= (choose!468 lt!35885 (_1!1105 lt!35788) (_2!1105 lt!35788)) _$22!393)))

(declare-fun bs!3371 () Bool)

(assert (= bs!3371 d!19343))

(assert (=> bs!3371 m!77935))

(assert (=> d!18705 d!19343))

(declare-fun d!19345 () Bool)

(declare-fun res!41613 () Bool)

(declare-fun e!52093 () Bool)

(assert (=> d!19345 (=> res!41613 e!52093)))

(assert (=> d!19345 (= res!41613 (or ((_ is Nil!1530) lt!35885) ((_ is Nil!1530) (t!5183 lt!35885))))))

(assert (=> d!19345 (= (isStrictlySorted!290 lt!35885) e!52093)))

(declare-fun b!79770 () Bool)

(declare-fun e!52094 () Bool)

(assert (=> b!79770 (= e!52093 e!52094)))

(declare-fun res!41614 () Bool)

(assert (=> b!79770 (=> (not res!41614) (not e!52094))))

(assert (=> b!79770 (= res!41614 (bvslt (_1!1105 (h!2117 lt!35885)) (_1!1105 (h!2117 (t!5183 lt!35885)))))))

(declare-fun b!79771 () Bool)

(assert (=> b!79771 (= e!52094 (isStrictlySorted!290 (t!5183 lt!35885)))))

(assert (= (and d!19345 (not res!41613)) b!79770))

(assert (= (and b!79770 res!41614) b!79771))

(declare-fun m!80983 () Bool)

(assert (=> b!79771 m!80983))

(assert (=> d!18705 d!19345))

(declare-fun d!19347 () Bool)

(declare-fun res!41615 () Bool)

(declare-fun e!52095 () Bool)

(assert (=> d!19347 (=> res!41615 e!52095)))

(assert (=> d!19347 (= res!41615 (or ((_ is Nil!1530) lt!36165) ((_ is Nil!1530) (t!5183 lt!36165))))))

(assert (=> d!19347 (= (isStrictlySorted!290 lt!36165) e!52095)))

(declare-fun b!79772 () Bool)

(declare-fun e!52096 () Bool)

(assert (=> b!79772 (= e!52095 e!52096)))

(declare-fun res!41616 () Bool)

(assert (=> b!79772 (=> (not res!41616) (not e!52096))))

(assert (=> b!79772 (= res!41616 (bvslt (_1!1105 (h!2117 lt!36165)) (_1!1105 (h!2117 (t!5183 lt!36165)))))))

(declare-fun b!79773 () Bool)

(assert (=> b!79773 (= e!52096 (isStrictlySorted!290 (t!5183 lt!36165)))))

(assert (= (and d!19347 (not res!41615)) b!79772))

(assert (= (and b!79772 res!41616) b!79773))

(declare-fun m!80985 () Bool)

(assert (=> b!79773 m!80985))

(assert (=> d!18525 d!19347))

(assert (=> d!18525 d!19151))

(declare-fun d!19349 () Bool)

(declare-fun e!52098 () Bool)

(assert (=> d!19349 e!52098))

(declare-fun res!41617 () Bool)

(assert (=> d!19349 (=> res!41617 e!52098)))

(declare-fun lt!36990 () Bool)

(assert (=> d!19349 (= res!41617 (not lt!36990))))

(declare-fun lt!36991 () Bool)

(assert (=> d!19349 (= lt!36990 lt!36991)))

(declare-fun lt!36992 () Unit!2263)

(declare-fun e!52097 () Unit!2263)

(assert (=> d!19349 (= lt!36992 e!52097)))

(declare-fun c!12428 () Bool)

(assert (=> d!19349 (= c!12428 lt!36991)))

(assert (=> d!19349 (= lt!36991 (containsKey!140 (toList!748 lt!36307) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!19349 (= (contains!745 lt!36307 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36990)))

(declare-fun b!79774 () Bool)

(declare-fun lt!36993 () Unit!2263)

(assert (=> b!79774 (= e!52097 lt!36993)))

(assert (=> b!79774 (= lt!36993 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36307) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> b!79774 (isDefined!90 (getValueByKey!136 (toList!748 lt!36307) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79775 () Bool)

(declare-fun Unit!2335 () Unit!2263)

(assert (=> b!79775 (= e!52097 Unit!2335)))

(declare-fun b!79776 () Bool)

(assert (=> b!79776 (= e!52098 (isDefined!90 (getValueByKey!136 (toList!748 lt!36307) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (= (and d!19349 c!12428) b!79774))

(assert (= (and d!19349 (not c!12428)) b!79775))

(assert (= (and d!19349 (not res!41617)) b!79776))

(declare-fun m!80987 () Bool)

(assert (=> d!19349 m!80987))

(declare-fun m!80989 () Bool)

(assert (=> b!79774 m!80989))

(assert (=> b!79774 m!78831))

(assert (=> b!79774 m!78831))

(declare-fun m!80991 () Bool)

(assert (=> b!79774 m!80991))

(assert (=> b!79776 m!78831))

(assert (=> b!79776 m!78831))

(assert (=> b!79776 m!80991))

(assert (=> d!18647 d!19349))

(declare-fun b!79778 () Bool)

(declare-fun e!52099 () Option!142)

(declare-fun e!52100 () Option!142)

(assert (=> b!79778 (= e!52099 e!52100)))

(declare-fun c!12430 () Bool)

(assert (=> b!79778 (= c!12430 (and ((_ is Cons!1529) lt!36304) (not (= (_1!1105 (h!2117 lt!36304)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!79777 () Bool)

(assert (=> b!79777 (= e!52099 (Some!141 (_2!1105 (h!2117 lt!36304))))))

(declare-fun b!79779 () Bool)

(assert (=> b!79779 (= e!52100 (getValueByKey!136 (t!5183 lt!36304) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79780 () Bool)

(assert (=> b!79780 (= e!52100 None!140)))

(declare-fun c!12429 () Bool)

(declare-fun d!19351 () Bool)

(assert (=> d!19351 (= c!12429 (and ((_ is Cons!1529) lt!36304) (= (_1!1105 (h!2117 lt!36304)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19351 (= (getValueByKey!136 lt!36304 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) e!52099)))

(assert (= (and d!19351 c!12429) b!79777))

(assert (= (and d!19351 (not c!12429)) b!79778))

(assert (= (and b!79778 c!12430) b!79779))

(assert (= (and b!79778 (not c!12430)) b!79780))

(declare-fun m!80993 () Bool)

(assert (=> b!79779 m!80993))

(assert (=> d!18647 d!19351))

(declare-fun d!19353 () Bool)

(assert (=> d!19353 (= (getValueByKey!136 lt!36304 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!36994 () Unit!2263)

(assert (=> d!19353 (= lt!36994 (choose!468 lt!36304 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun e!52101 () Bool)

(assert (=> d!19353 e!52101))

(declare-fun res!41618 () Bool)

(assert (=> d!19353 (=> (not res!41618) (not e!52101))))

(assert (=> d!19353 (= res!41618 (isStrictlySorted!290 lt!36304))))

(assert (=> d!19353 (= (lemmaContainsTupThenGetReturnValue!55 lt!36304 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36994)))

(declare-fun b!79781 () Bool)

(declare-fun res!41619 () Bool)

(assert (=> b!79781 (=> (not res!41619) (not e!52101))))

(assert (=> b!79781 (= res!41619 (containsKey!140 lt!36304 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79782 () Bool)

(assert (=> b!79782 (= e!52101 (contains!748 lt!36304 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (= (and d!19353 res!41618) b!79781))

(assert (= (and b!79781 res!41619) b!79782))

(assert (=> d!19353 m!78825))

(declare-fun m!80995 () Bool)

(assert (=> d!19353 m!80995))

(declare-fun m!80997 () Bool)

(assert (=> d!19353 m!80997))

(declare-fun m!80999 () Bool)

(assert (=> b!79781 m!80999))

(declare-fun m!81001 () Bool)

(assert (=> b!79782 m!81001))

(assert (=> d!18647 d!19353))

(declare-fun c!12431 () Bool)

(declare-fun b!79783 () Bool)

(assert (=> b!79783 (= c!12431 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (bvsgt (_1!1105 (h!2117 (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun e!52105 () List!1533)

(declare-fun e!52102 () List!1533)

(assert (=> b!79783 (= e!52105 e!52102)))

(declare-fun call!7359 () List!1533)

(declare-fun bm!7354 () Bool)

(declare-fun e!52104 () List!1533)

(declare-fun c!12432 () Bool)

(assert (=> bm!7354 (= call!7359 ($colon$colon!68 e!52104 (ite c!12432 (h!2117 (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun c!12433 () Bool)

(assert (=> bm!7354 (= c!12433 c!12432)))

(declare-fun d!19355 () Bool)

(declare-fun e!52106 () Bool)

(assert (=> d!19355 e!52106))

(declare-fun res!41620 () Bool)

(assert (=> d!19355 (=> (not res!41620) (not e!52106))))

(declare-fun lt!36995 () List!1533)

(assert (=> d!19355 (= res!41620 (isStrictlySorted!290 lt!36995))))

(declare-fun e!52103 () List!1533)

(assert (=> d!19355 (= lt!36995 e!52103)))

(assert (=> d!19355 (= c!12432 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (bvslt (_1!1105 (h!2117 (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19355 (isStrictlySorted!290 (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!19355 (= (insertStrictlySorted!57 (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!36995)))

(declare-fun b!79784 () Bool)

(declare-fun c!12434 () Bool)

(assert (=> b!79784 (= e!52104 (ite c!12434 (t!5183 (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (ite c!12431 (Cons!1529 (h!2117 (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (t!5183 (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))) Nil!1530)))))

(declare-fun bm!7355 () Bool)

(declare-fun call!7358 () List!1533)

(assert (=> bm!7355 (= call!7358 call!7359)))

(declare-fun b!79785 () Bool)

(assert (=> b!79785 (= e!52103 call!7359)))

(declare-fun b!79786 () Bool)

(declare-fun res!41621 () Bool)

(assert (=> b!79786 (=> (not res!41621) (not e!52106))))

(assert (=> b!79786 (= res!41621 (containsKey!140 lt!36995 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79787 () Bool)

(declare-fun call!7357 () List!1533)

(assert (=> b!79787 (= e!52102 call!7357)))

(declare-fun b!79788 () Bool)

(assert (=> b!79788 (= e!52105 call!7358)))

(declare-fun b!79789 () Bool)

(assert (=> b!79789 (= e!52103 e!52105)))

(assert (=> b!79789 (= c!12434 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun bm!7356 () Bool)

(assert (=> bm!7356 (= call!7357 call!7358)))

(declare-fun b!79790 () Bool)

(assert (=> b!79790 (= e!52104 (insertStrictlySorted!57 (t!5183 (toList!748 (+!109 lt!35777 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79791 () Bool)

(assert (=> b!79791 (= e!52106 (contains!748 lt!36995 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79792 () Bool)

(assert (=> b!79792 (= e!52102 call!7357)))

(assert (= (and d!19355 c!12432) b!79785))

(assert (= (and d!19355 (not c!12432)) b!79789))

(assert (= (and b!79789 c!12434) b!79788))

(assert (= (and b!79789 (not c!12434)) b!79783))

(assert (= (and b!79783 c!12431) b!79792))

(assert (= (and b!79783 (not c!12431)) b!79787))

(assert (= (or b!79792 b!79787) bm!7356))

(assert (= (or b!79788 bm!7356) bm!7355))

(assert (= (or b!79785 bm!7355) bm!7354))

(assert (= (and bm!7354 c!12433) b!79790))

(assert (= (and bm!7354 (not c!12433)) b!79784))

(assert (= (and d!19355 res!41620) b!79786))

(assert (= (and b!79786 res!41621) b!79791))

(declare-fun m!81003 () Bool)

(assert (=> b!79786 m!81003))

(declare-fun m!81005 () Bool)

(assert (=> b!79791 m!81005))

(declare-fun m!81007 () Bool)

(assert (=> d!19355 m!81007))

(declare-fun m!81009 () Bool)

(assert (=> d!19355 m!81009))

(declare-fun m!81011 () Bool)

(assert (=> bm!7354 m!81011))

(declare-fun m!81013 () Bool)

(assert (=> b!79790 m!81013))

(assert (=> d!18647 d!19355))

(declare-fun b!79794 () Bool)

(declare-fun e!52107 () Option!142)

(declare-fun e!52108 () Option!142)

(assert (=> b!79794 (= e!52107 e!52108)))

(declare-fun c!12436 () Bool)

(assert (=> b!79794 (= c!12436 (and ((_ is Cons!1529) (toList!748 lt!36299)) (not (= (_1!1105 (h!2117 (toList!748 lt!36299))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79793 () Bool)

(assert (=> b!79793 (= e!52107 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36299)))))))

(declare-fun b!79795 () Bool)

(assert (=> b!79795 (= e!52108 (getValueByKey!136 (t!5183 (toList!748 lt!36299)) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79796 () Bool)

(assert (=> b!79796 (= e!52108 None!140)))

(declare-fun d!19357 () Bool)

(declare-fun c!12435 () Bool)

(assert (=> d!19357 (= c!12435 (and ((_ is Cons!1529) (toList!748 lt!36299)) (= (_1!1105 (h!2117 (toList!748 lt!36299))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19357 (= (getValueByKey!136 (toList!748 lt!36299) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!52107)))

(assert (= (and d!19357 c!12435) b!79793))

(assert (= (and d!19357 (not c!12435)) b!79794))

(assert (= (and b!79794 c!12436) b!79795))

(assert (= (and b!79794 (not c!12436)) b!79796))

(declare-fun m!81015 () Bool)

(assert (=> b!79795 m!81015))

(assert (=> b!78600 d!19357))

(declare-fun b!79797 () Bool)

(declare-fun c!12437 () Bool)

(assert (=> b!79797 (= c!12437 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35776))) (bvsgt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35776)))) (_1!1105 lt!35788))))))

(declare-fun e!52112 () List!1533)

(declare-fun e!52109 () List!1533)

(assert (=> b!79797 (= e!52112 e!52109)))

(declare-fun bm!7357 () Bool)

(declare-fun c!12438 () Bool)

(declare-fun call!7362 () List!1533)

(declare-fun e!52111 () List!1533)

(assert (=> bm!7357 (= call!7362 ($colon$colon!68 e!52111 (ite c!12438 (h!2117 (t!5183 (toList!748 lt!35776))) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788)))))))

(declare-fun c!12439 () Bool)

(assert (=> bm!7357 (= c!12439 c!12438)))

(declare-fun d!19359 () Bool)

(declare-fun e!52113 () Bool)

(assert (=> d!19359 e!52113))

(declare-fun res!41622 () Bool)

(assert (=> d!19359 (=> (not res!41622) (not e!52113))))

(declare-fun lt!36996 () List!1533)

(assert (=> d!19359 (= res!41622 (isStrictlySorted!290 lt!36996))))

(declare-fun e!52110 () List!1533)

(assert (=> d!19359 (= lt!36996 e!52110)))

(assert (=> d!19359 (= c!12438 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35776))) (bvslt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35776)))) (_1!1105 lt!35788))))))

(assert (=> d!19359 (isStrictlySorted!290 (t!5183 (toList!748 lt!35776)))))

(assert (=> d!19359 (= (insertStrictlySorted!57 (t!5183 (toList!748 lt!35776)) (_1!1105 lt!35788) (_2!1105 lt!35788)) lt!36996)))

(declare-fun b!79798 () Bool)

(declare-fun c!12440 () Bool)

(assert (=> b!79798 (= e!52111 (ite c!12440 (t!5183 (t!5183 (toList!748 lt!35776))) (ite c!12437 (Cons!1529 (h!2117 (t!5183 (toList!748 lt!35776))) (t!5183 (t!5183 (toList!748 lt!35776)))) Nil!1530)))))

(declare-fun bm!7358 () Bool)

(declare-fun call!7361 () List!1533)

(assert (=> bm!7358 (= call!7361 call!7362)))

(declare-fun b!79799 () Bool)

(assert (=> b!79799 (= e!52110 call!7362)))

(declare-fun b!79800 () Bool)

(declare-fun res!41623 () Bool)

(assert (=> b!79800 (=> (not res!41623) (not e!52113))))

(assert (=> b!79800 (= res!41623 (containsKey!140 lt!36996 (_1!1105 lt!35788)))))

(declare-fun b!79801 () Bool)

(declare-fun call!7360 () List!1533)

(assert (=> b!79801 (= e!52109 call!7360)))

(declare-fun b!79802 () Bool)

(assert (=> b!79802 (= e!52112 call!7361)))

(declare-fun b!79803 () Bool)

(assert (=> b!79803 (= e!52110 e!52112)))

(assert (=> b!79803 (= c!12440 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35776))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35776)))) (_1!1105 lt!35788))))))

(declare-fun bm!7359 () Bool)

(assert (=> bm!7359 (= call!7360 call!7361)))

(declare-fun b!79804 () Bool)

(assert (=> b!79804 (= e!52111 (insertStrictlySorted!57 (t!5183 (t!5183 (toList!748 lt!35776))) (_1!1105 lt!35788) (_2!1105 lt!35788)))))

(declare-fun b!79805 () Bool)

(assert (=> b!79805 (= e!52113 (contains!748 lt!36996 (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun b!79806 () Bool)

(assert (=> b!79806 (= e!52109 call!7360)))

(assert (= (and d!19359 c!12438) b!79799))

(assert (= (and d!19359 (not c!12438)) b!79803))

(assert (= (and b!79803 c!12440) b!79802))

(assert (= (and b!79803 (not c!12440)) b!79797))

(assert (= (and b!79797 c!12437) b!79806))

(assert (= (and b!79797 (not c!12437)) b!79801))

(assert (= (or b!79806 b!79801) bm!7359))

(assert (= (or b!79802 bm!7359) bm!7358))

(assert (= (or b!79799 bm!7358) bm!7357))

(assert (= (and bm!7357 c!12439) b!79804))

(assert (= (and bm!7357 (not c!12439)) b!79798))

(assert (= (and d!19359 res!41622) b!79800))

(assert (= (and b!79800 res!41623) b!79805))

(declare-fun m!81017 () Bool)

(assert (=> b!79800 m!81017))

(declare-fun m!81019 () Bool)

(assert (=> b!79805 m!81019))

(declare-fun m!81021 () Bool)

(assert (=> d!19359 m!81021))

(assert (=> d!19359 m!80605))

(declare-fun m!81023 () Bool)

(assert (=> bm!7357 m!81023))

(declare-fun m!81025 () Bool)

(assert (=> b!79804 m!81025))

(assert (=> b!78772 d!19359))

(declare-fun d!19361 () Bool)

(assert (=> d!19361 (= ($colon$colon!68 e!51319 (ite c!12054 (h!2117 (toList!748 lt!35785)) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788)))) (Cons!1529 (ite c!12054 (h!2117 (toList!748 lt!35785)) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))) e!51319))))

(assert (=> bm!7199 d!19361))

(declare-fun d!19363 () Bool)

(declare-fun res!41624 () Bool)

(declare-fun e!52114 () Bool)

(assert (=> d!19363 (=> res!41624 e!52114)))

(assert (=> d!19363 (= res!41624 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))))) lt!35868)))))

(assert (=> d!19363 (= (containsKey!140 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868) e!52114)))

(declare-fun b!79807 () Bool)

(declare-fun e!52115 () Bool)

(assert (=> b!79807 (= e!52114 e!52115)))

(declare-fun res!41625 () Bool)

(assert (=> b!79807 (=> (not res!41625) (not e!52115))))

(assert (=> b!79807 (= res!41625 (and (or (not ((_ is Cons!1529) (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))))) (bvsle (_1!1105 (h!2117 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))))) lt!35868)) ((_ is Cons!1529) (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)))) (bvslt (_1!1105 (h!2117 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))))) lt!35868)))))

(declare-fun b!79808 () Bool)

(assert (=> b!79808 (= e!52115 (containsKey!140 (t!5183 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)))) lt!35868))))

(assert (= (and d!19363 (not res!41624)) b!79807))

(assert (= (and b!79807 res!41625) b!79808))

(declare-fun m!81027 () Bool)

(assert (=> b!79808 m!81027))

(assert (=> d!18491 d!19363))

(assert (=> b!78241 d!19041))

(assert (=> b!78241 d!19043))

(declare-fun d!19365 () Bool)

(declare-fun res!41627 () Bool)

(declare-fun e!52117 () Bool)

(assert (=> d!19365 (=> res!41627 e!52117)))

(assert (=> d!19365 (= res!41627 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(assert (=> d!19365 (= (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000000 Nil!1531) e!52117)))

(declare-fun b!79809 () Bool)

(declare-fun e!52116 () Bool)

(assert (=> b!79809 (= e!52116 (contains!747 Nil!1531 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7360 () Bool)

(declare-fun call!7363 () Bool)

(declare-fun c!12441 () Bool)

(assert (=> bm!7360 (= call!7363 (arrayNoDuplicates!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12441 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b00000000000000000000000000000000) Nil!1531) Nil!1531)))))

(declare-fun b!79810 () Bool)

(declare-fun e!52119 () Bool)

(declare-fun e!52118 () Bool)

(assert (=> b!79810 (= e!52119 e!52118)))

(assert (=> b!79810 (= c!12441 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!79811 () Bool)

(assert (=> b!79811 (= e!52118 call!7363)))

(declare-fun b!79812 () Bool)

(assert (=> b!79812 (= e!52117 e!52119)))

(declare-fun res!41626 () Bool)

(assert (=> b!79812 (=> (not res!41626) (not e!52119))))

(assert (=> b!79812 (= res!41626 (not e!52116))))

(declare-fun res!41628 () Bool)

(assert (=> b!79812 (=> (not res!41628) (not e!52116))))

(assert (=> b!79812 (= res!41628 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!79813 () Bool)

(assert (=> b!79813 (= e!52118 call!7363)))

(assert (= (and d!19365 (not res!41627)) b!79812))

(assert (= (and b!79812 res!41628) b!79809))

(assert (= (and b!79812 res!41626) b!79810))

(assert (= (and b!79810 c!12441) b!79811))

(assert (= (and b!79810 (not c!12441)) b!79813))

(assert (= (or b!79811 b!79813) bm!7360))

(assert (=> b!79809 m!80149))

(assert (=> b!79809 m!80149))

(declare-fun m!81029 () Bool)

(assert (=> b!79809 m!81029))

(assert (=> bm!7360 m!80149))

(declare-fun m!81031 () Bool)

(assert (=> bm!7360 m!81031))

(assert (=> b!79810 m!80149))

(assert (=> b!79810 m!80149))

(assert (=> b!79810 m!80151))

(assert (=> b!79812 m!80149))

(assert (=> b!79812 m!80149))

(assert (=> b!79812 m!80151))

(assert (=> b!78300 d!19365))

(declare-fun b!79815 () Bool)

(declare-fun e!52120 () Option!142)

(declare-fun e!52121 () Option!142)

(assert (=> b!79815 (= e!52120 e!52121)))

(declare-fun c!12443 () Bool)

(assert (=> b!79815 (= c!12443 (and ((_ is Cons!1529) (toList!748 lt!36307)) (not (= (_1!1105 (h!2117 (toList!748 lt!36307))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!79814 () Bool)

(assert (=> b!79814 (= e!52120 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36307)))))))

(declare-fun b!79816 () Bool)

(assert (=> b!79816 (= e!52121 (getValueByKey!136 (t!5183 (toList!748 lt!36307)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79817 () Bool)

(assert (=> b!79817 (= e!52121 None!140)))

(declare-fun d!19367 () Bool)

(declare-fun c!12442 () Bool)

(assert (=> d!19367 (= c!12442 (and ((_ is Cons!1529) (toList!748 lt!36307)) (= (_1!1105 (h!2117 (toList!748 lt!36307))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19367 (= (getValueByKey!136 (toList!748 lt!36307) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) e!52120)))

(assert (= (and d!19367 c!12442) b!79814))

(assert (= (and d!19367 (not c!12442)) b!79815))

(assert (= (and b!79815 c!12443) b!79816))

(assert (= (and b!79815 (not c!12443)) b!79817))

(declare-fun m!81033 () Bool)

(assert (=> b!79816 m!81033))

(assert (=> b!78604 d!19367))

(declare-fun d!19369 () Bool)

(assert (=> d!19369 (= (apply!79 lt!36112 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!136 (toList!748 lt!36112) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3372 () Bool)

(assert (= bs!3372 d!19369))

(assert (=> bs!3372 m!80537))

(assert (=> bs!3372 m!80537))

(declare-fun m!81035 () Bool)

(assert (=> bs!3372 m!81035))

(assert (=> b!78329 d!19369))

(declare-fun d!19371 () Bool)

(declare-fun e!52123 () Bool)

(assert (=> d!19371 e!52123))

(declare-fun res!41629 () Bool)

(assert (=> d!19371 (=> res!41629 e!52123)))

(declare-fun lt!36997 () Bool)

(assert (=> d!19371 (= res!41629 (not lt!36997))))

(declare-fun lt!36998 () Bool)

(assert (=> d!19371 (= lt!36997 lt!36998)))

(declare-fun lt!36999 () Unit!2263)

(declare-fun e!52122 () Unit!2263)

(assert (=> d!19371 (= lt!36999 e!52122)))

(declare-fun c!12444 () Bool)

(assert (=> d!19371 (= c!12444 lt!36998)))

(assert (=> d!19371 (= lt!36998 (containsKey!140 (toList!748 lt!36286) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19371 (= (contains!745 lt!36286 #b1000000000000000000000000000000000000000000000000000000000000000) lt!36997)))

(declare-fun b!79818 () Bool)

(declare-fun lt!37000 () Unit!2263)

(assert (=> b!79818 (= e!52122 lt!37000)))

(assert (=> b!79818 (= lt!37000 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36286) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79818 (isDefined!90 (getValueByKey!136 (toList!748 lt!36286) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79819 () Bool)

(declare-fun Unit!2336 () Unit!2263)

(assert (=> b!79819 (= e!52122 Unit!2336)))

(declare-fun b!79820 () Bool)

(assert (=> b!79820 (= e!52123 (isDefined!90 (getValueByKey!136 (toList!748 lt!36286) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19371 c!12444) b!79818))

(assert (= (and d!19371 (not c!12444)) b!79819))

(assert (= (and d!19371 (not res!41629)) b!79820))

(declare-fun m!81037 () Bool)

(assert (=> d!19371 m!81037))

(declare-fun m!81039 () Bool)

(assert (=> b!79818 m!81039))

(declare-fun m!81041 () Bool)

(assert (=> b!79818 m!81041))

(assert (=> b!79818 m!81041))

(declare-fun m!81043 () Bool)

(assert (=> b!79818 m!81043))

(assert (=> b!79820 m!81041))

(assert (=> b!79820 m!81041))

(assert (=> b!79820 m!81043))

(assert (=> bm!7209 d!19371))

(declare-fun d!19373 () Bool)

(declare-fun res!41630 () Bool)

(declare-fun e!52124 () Bool)

(assert (=> d!19373 (=> res!41630 e!52124)))

(assert (=> d!19373 (= res!41630 (= (select (arr!1894 (_keys!3932 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!19373 (= (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!52124)))

(declare-fun b!79821 () Bool)

(declare-fun e!52125 () Bool)

(assert (=> b!79821 (= e!52124 e!52125)))

(declare-fun res!41631 () Bool)

(assert (=> b!79821 (=> (not res!41631) (not e!52125))))

(assert (=> b!79821 (= res!41631 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2135 (_keys!3932 newMap!16))))))

(declare-fun b!79822 () Bool)

(assert (=> b!79822 (= e!52125 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19373 (not res!41630)) b!79821))

(assert (= (and b!79821 res!41631) b!79822))

(assert (=> d!19373 m!79447))

(assert (=> b!79822 m!77749))

(declare-fun m!81045 () Bool)

(assert (=> b!79822 m!81045))

(assert (=> b!78371 d!19373))

(declare-fun lt!37001 () Bool)

(declare-fun d!19375 () Bool)

(assert (=> d!19375 (= lt!37001 (select (content!82 (toList!748 lt!36253)) (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun e!52126 () Bool)

(assert (=> d!19375 (= lt!37001 e!52126)))

(declare-fun res!41632 () Bool)

(assert (=> d!19375 (=> (not res!41632) (not e!52126))))

(assert (=> d!19375 (= res!41632 ((_ is Cons!1529) (toList!748 lt!36253)))))

(assert (=> d!19375 (= (contains!748 (toList!748 lt!36253) (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!37001)))

(declare-fun b!79823 () Bool)

(declare-fun e!52127 () Bool)

(assert (=> b!79823 (= e!52126 e!52127)))

(declare-fun res!41633 () Bool)

(assert (=> b!79823 (=> res!41633 e!52127)))

(assert (=> b!79823 (= res!41633 (= (h!2117 (toList!748 lt!36253)) (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79824 () Bool)

(assert (=> b!79824 (= e!52127 (contains!748 (t!5183 (toList!748 lt!36253)) (ite c!11979 (ite c!11986 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 lt!35780) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 lt!35780)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (= (and d!19375 res!41632) b!79823))

(assert (= (and b!79823 (not res!41633)) b!79824))

(declare-fun m!81047 () Bool)

(assert (=> d!19375 m!81047))

(declare-fun m!81049 () Bool)

(assert (=> d!19375 m!81049))

(declare-fun m!81051 () Bool)

(assert (=> b!79824 m!81051))

(assert (=> b!78532 d!19375))

(declare-fun b!79826 () Bool)

(declare-fun e!52128 () Option!142)

(declare-fun e!52129 () Option!142)

(assert (=> b!79826 (= e!52128 e!52129)))

(declare-fun c!12446 () Bool)

(assert (=> b!79826 (= c!12446 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35888))) (not (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35888)))) (_1!1105 lt!35788)))))))

(declare-fun b!79825 () Bool)

(assert (=> b!79825 (= e!52128 (Some!141 (_2!1105 (h!2117 (t!5183 (toList!748 lt!35888))))))))

(declare-fun b!79827 () Bool)

(assert (=> b!79827 (= e!52129 (getValueByKey!136 (t!5183 (t!5183 (toList!748 lt!35888))) (_1!1105 lt!35788)))))

(declare-fun b!79828 () Bool)

(assert (=> b!79828 (= e!52129 None!140)))

(declare-fun d!19377 () Bool)

(declare-fun c!12445 () Bool)

(assert (=> d!19377 (= c!12445 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35888))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35888)))) (_1!1105 lt!35788))))))

(assert (=> d!19377 (= (getValueByKey!136 (t!5183 (toList!748 lt!35888)) (_1!1105 lt!35788)) e!52128)))

(assert (= (and d!19377 c!12445) b!79825))

(assert (= (and d!19377 (not c!12445)) b!79826))

(assert (= (and b!79826 c!12446) b!79827))

(assert (= (and b!79826 (not c!12446)) b!79828))

(declare-fun m!81053 () Bool)

(assert (=> b!79827 m!81053))

(assert (=> b!78306 d!19377))

(declare-fun d!19379 () Bool)

(declare-fun e!52130 () Bool)

(assert (=> d!19379 e!52130))

(declare-fun res!41634 () Bool)

(assert (=> d!19379 (=> (not res!41634) (not e!52130))))

(declare-fun lt!37005 () ListLongMap!1465)

(assert (=> d!19379 (= res!41634 (contains!745 lt!37005 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun lt!37002 () List!1533)

(assert (=> d!19379 (= lt!37005 (ListLongMap!1466 lt!37002))))

(declare-fun lt!37004 () Unit!2263)

(declare-fun lt!37003 () Unit!2263)

(assert (=> d!19379 (= lt!37004 lt!37003)))

(assert (=> d!19379 (= (getValueByKey!136 lt!37002 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19379 (= lt!37003 (lemmaContainsTupThenGetReturnValue!55 lt!37002 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19379 (= lt!37002 (insertStrictlySorted!57 (toList!748 call!7189) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19379 (= (+!109 call!7189 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) lt!37005)))

(declare-fun b!79829 () Bool)

(declare-fun res!41635 () Bool)

(assert (=> b!79829 (=> (not res!41635) (not e!52130))))

(assert (=> b!79829 (= res!41635 (= (getValueByKey!136 (toList!748 lt!37005) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(declare-fun b!79830 () Bool)

(assert (=> b!79830 (= e!52130 (contains!748 (toList!748 lt!37005) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(assert (= (and d!19379 res!41634) b!79829))

(assert (= (and b!79829 res!41635) b!79830))

(declare-fun m!81055 () Bool)

(assert (=> d!19379 m!81055))

(declare-fun m!81057 () Bool)

(assert (=> d!19379 m!81057))

(declare-fun m!81059 () Bool)

(assert (=> d!19379 m!81059))

(declare-fun m!81061 () Bool)

(assert (=> d!19379 m!81061))

(declare-fun m!81063 () Bool)

(assert (=> b!79829 m!81063))

(declare-fun m!81065 () Bool)

(assert (=> b!79830 m!81065))

(assert (=> b!78311 d!19379))

(declare-fun lt!37006 () Bool)

(declare-fun d!19381 () Bool)

(assert (=> d!19381 (= lt!37006 (select (content!82 (toList!748 lt!36245)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun e!52131 () Bool)

(assert (=> d!19381 (= lt!37006 e!52131)))

(declare-fun res!41636 () Bool)

(assert (=> d!19381 (=> (not res!41636) (not e!52131))))

(assert (=> d!19381 (= res!41636 ((_ is Cons!1529) (toList!748 lt!36245)))))

(assert (=> d!19381 (= (contains!748 (toList!748 lt!36245) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!37006)))

(declare-fun b!79831 () Bool)

(declare-fun e!52132 () Bool)

(assert (=> b!79831 (= e!52131 e!52132)))

(declare-fun res!41637 () Bool)

(assert (=> b!79831 (=> res!41637 e!52132)))

(assert (=> b!79831 (= res!41637 (= (h!2117 (toList!748 lt!36245)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun b!79832 () Bool)

(assert (=> b!79832 (= e!52132 (contains!748 (t!5183 (toList!748 lt!36245)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!19381 res!41636) b!79831))

(assert (= (and b!79831 (not res!41637)) b!79832))

(declare-fun m!81067 () Bool)

(assert (=> d!19381 m!81067))

(declare-fun m!81069 () Bool)

(assert (=> d!19381 m!81069))

(declare-fun m!81071 () Bool)

(assert (=> b!79832 m!81071))

(assert (=> b!78528 d!19381))

(declare-fun d!19383 () Bool)

(declare-fun lt!37007 () Bool)

(assert (=> d!19383 (= lt!37007 (select (content!82 (toList!748 lt!36196)) (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun e!52133 () Bool)

(assert (=> d!19383 (= lt!37007 e!52133)))

(declare-fun res!41638 () Bool)

(assert (=> d!19383 (=> (not res!41638) (not e!52133))))

(assert (=> d!19383 (= res!41638 ((_ is Cons!1529) (toList!748 lt!36196)))))

(assert (=> d!19383 (= (contains!748 (toList!748 lt!36196) (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!37007)))

(declare-fun b!79833 () Bool)

(declare-fun e!52134 () Bool)

(assert (=> b!79833 (= e!52133 e!52134)))

(declare-fun res!41639 () Bool)

(assert (=> b!79833 (=> res!41639 e!52134)))

(assert (=> b!79833 (= res!41639 (= (h!2117 (toList!748 lt!36196)) (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!79834 () Bool)

(assert (=> b!79834 (= e!52134 (contains!748 (t!5183 (toList!748 lt!36196)) (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!19383 res!41638) b!79833))

(assert (= (and b!79833 (not res!41639)) b!79834))

(declare-fun m!81073 () Bool)

(assert (=> d!19383 m!81073))

(declare-fun m!81075 () Bool)

(assert (=> d!19383 m!81075))

(declare-fun m!81077 () Bool)

(assert (=> b!79834 m!81077))

(assert (=> b!78444 d!19383))

(assert (=> b!78288 d!18831))

(assert (=> d!18545 d!18551))

(declare-fun d!19385 () Bool)

(declare-fun e!52136 () Bool)

(assert (=> d!19385 e!52136))

(declare-fun res!41640 () Bool)

(assert (=> d!19385 (=> res!41640 e!52136)))

(declare-fun lt!37008 () Bool)

(assert (=> d!19385 (= res!41640 (not lt!37008))))

(declare-fun lt!37009 () Bool)

(assert (=> d!19385 (= lt!37008 lt!37009)))

(declare-fun lt!37010 () Unit!2263)

(declare-fun e!52135 () Unit!2263)

(assert (=> d!19385 (= lt!37010 e!52135)))

(declare-fun c!12447 () Bool)

(assert (=> d!19385 (= c!12447 lt!37009)))

(assert (=> d!19385 (= lt!37009 (containsKey!140 (toList!748 lt!35973) lt!35963))))

(assert (=> d!19385 (= (contains!745 lt!35973 lt!35963) lt!37008)))

(declare-fun b!79835 () Bool)

(declare-fun lt!37011 () Unit!2263)

(assert (=> b!79835 (= e!52135 lt!37011)))

(assert (=> b!79835 (= lt!37011 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35973) lt!35963))))

(assert (=> b!79835 (isDefined!90 (getValueByKey!136 (toList!748 lt!35973) lt!35963))))

(declare-fun b!79836 () Bool)

(declare-fun Unit!2337 () Unit!2263)

(assert (=> b!79836 (= e!52135 Unit!2337)))

(declare-fun b!79837 () Bool)

(assert (=> b!79837 (= e!52136 (isDefined!90 (getValueByKey!136 (toList!748 lt!35973) lt!35963)))))

(assert (= (and d!19385 c!12447) b!79835))

(assert (= (and d!19385 (not c!12447)) b!79836))

(assert (= (and d!19385 (not res!41640)) b!79837))

(declare-fun m!81079 () Bool)

(assert (=> d!19385 m!81079))

(declare-fun m!81081 () Bool)

(assert (=> b!79835 m!81081))

(assert (=> b!79835 m!78447))

(assert (=> b!79835 m!78447))

(declare-fun m!81083 () Bool)

(assert (=> b!79835 m!81083))

(assert (=> b!79837 m!78447))

(assert (=> b!79837 m!78447))

(assert (=> b!79837 m!81083))

(assert (=> d!18545 d!19385))

(assert (=> d!18545 d!18543))

(declare-fun d!19387 () Bool)

(assert (=> d!19387 (= (apply!79 (+!109 lt!35973 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35963) (apply!79 lt!35973 lt!35963))))

(assert (=> d!19387 true))

(declare-fun _$34!815 () Unit!2263)

(assert (=> d!19387 (= (choose!469 lt!35973 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35963) _$34!815)))

(declare-fun bs!3373 () Bool)

(assert (= bs!3373 d!19387))

(assert (=> bs!3373 m!78047))

(assert (=> bs!3373 m!78047))

(assert (=> bs!3373 m!78049))

(assert (=> bs!3373 m!78037))

(assert (=> d!18545 d!19387))

(assert (=> d!18545 d!18563))

(declare-fun d!19389 () Bool)

(assert (=> d!19389 (= ($colon$colon!68 e!51471 (ite c!12134 (h!2117 (toList!748 lt!35776)) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788)))) (Cons!1529 (ite c!12134 (h!2117 (toList!748 lt!35776)) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))) e!51471))))

(assert (=> bm!7241 d!19389))

(assert (=> d!18575 d!18573))

(declare-fun d!19391 () Bool)

(assert (=> d!19391 (= (getValueByKey!136 lt!35904 (_1!1105 lt!35784)) (Some!141 (_2!1105 lt!35784)))))

(assert (=> d!19391 true))

(declare-fun _$22!394 () Unit!2263)

(assert (=> d!19391 (= (choose!468 lt!35904 (_1!1105 lt!35784) (_2!1105 lt!35784)) _$22!394)))

(declare-fun bs!3374 () Bool)

(assert (= bs!3374 d!19391))

(assert (=> bs!3374 m!77993))

(assert (=> d!18575 d!19391))

(declare-fun d!19393 () Bool)

(declare-fun res!41641 () Bool)

(declare-fun e!52137 () Bool)

(assert (=> d!19393 (=> res!41641 e!52137)))

(assert (=> d!19393 (= res!41641 (or ((_ is Nil!1530) lt!35904) ((_ is Nil!1530) (t!5183 lt!35904))))))

(assert (=> d!19393 (= (isStrictlySorted!290 lt!35904) e!52137)))

(declare-fun b!79839 () Bool)

(declare-fun e!52138 () Bool)

(assert (=> b!79839 (= e!52137 e!52138)))

(declare-fun res!41642 () Bool)

(assert (=> b!79839 (=> (not res!41642) (not e!52138))))

(assert (=> b!79839 (= res!41642 (bvslt (_1!1105 (h!2117 lt!35904)) (_1!1105 (h!2117 (t!5183 lt!35904)))))))

(declare-fun b!79840 () Bool)

(assert (=> b!79840 (= e!52138 (isStrictlySorted!290 (t!5183 lt!35904)))))

(assert (= (and d!19393 (not res!41641)) b!79839))

(assert (= (and b!79839 res!41642) b!79840))

(declare-fun m!81085 () Bool)

(assert (=> b!79840 m!81085))

(assert (=> d!18575 d!19393))

(declare-fun b!79841 () Bool)

(declare-fun c!12448 () Bool)

(assert (=> b!79841 (= c!12448 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35781))) (bvsgt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35781)))) (_1!1105 lt!35784))))))

(declare-fun e!52142 () List!1533)

(declare-fun e!52139 () List!1533)

(assert (=> b!79841 (= e!52142 e!52139)))

(declare-fun call!7366 () List!1533)

(declare-fun e!52141 () List!1533)

(declare-fun bm!7361 () Bool)

(declare-fun c!12449 () Bool)

(assert (=> bm!7361 (= call!7366 ($colon$colon!68 e!52141 (ite c!12449 (h!2117 (t!5183 (toList!748 lt!35781))) (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784)))))))

(declare-fun c!12450 () Bool)

(assert (=> bm!7361 (= c!12450 c!12449)))

(declare-fun d!19395 () Bool)

(declare-fun e!52143 () Bool)

(assert (=> d!19395 e!52143))

(declare-fun res!41643 () Bool)

(assert (=> d!19395 (=> (not res!41643) (not e!52143))))

(declare-fun lt!37012 () List!1533)

(assert (=> d!19395 (= res!41643 (isStrictlySorted!290 lt!37012))))

(declare-fun e!52140 () List!1533)

(assert (=> d!19395 (= lt!37012 e!52140)))

(assert (=> d!19395 (= c!12449 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35781))) (bvslt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35781)))) (_1!1105 lt!35784))))))

(assert (=> d!19395 (isStrictlySorted!290 (t!5183 (toList!748 lt!35781)))))

(assert (=> d!19395 (= (insertStrictlySorted!57 (t!5183 (toList!748 lt!35781)) (_1!1105 lt!35784) (_2!1105 lt!35784)) lt!37012)))

(declare-fun c!12451 () Bool)

(declare-fun b!79842 () Bool)

(assert (=> b!79842 (= e!52141 (ite c!12451 (t!5183 (t!5183 (toList!748 lt!35781))) (ite c!12448 (Cons!1529 (h!2117 (t!5183 (toList!748 lt!35781))) (t!5183 (t!5183 (toList!748 lt!35781)))) Nil!1530)))))

(declare-fun bm!7362 () Bool)

(declare-fun call!7365 () List!1533)

(assert (=> bm!7362 (= call!7365 call!7366)))

(declare-fun b!79843 () Bool)

(assert (=> b!79843 (= e!52140 call!7366)))

(declare-fun b!79844 () Bool)

(declare-fun res!41644 () Bool)

(assert (=> b!79844 (=> (not res!41644) (not e!52143))))

(assert (=> b!79844 (= res!41644 (containsKey!140 lt!37012 (_1!1105 lt!35784)))))

(declare-fun b!79845 () Bool)

(declare-fun call!7364 () List!1533)

(assert (=> b!79845 (= e!52139 call!7364)))

(declare-fun b!79846 () Bool)

(assert (=> b!79846 (= e!52142 call!7365)))

(declare-fun b!79847 () Bool)

(assert (=> b!79847 (= e!52140 e!52142)))

(assert (=> b!79847 (= c!12451 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35781))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35781)))) (_1!1105 lt!35784))))))

(declare-fun bm!7363 () Bool)

(assert (=> bm!7363 (= call!7364 call!7365)))

(declare-fun b!79848 () Bool)

(assert (=> b!79848 (= e!52141 (insertStrictlySorted!57 (t!5183 (t!5183 (toList!748 lt!35781))) (_1!1105 lt!35784) (_2!1105 lt!35784)))))

(declare-fun b!79849 () Bool)

(assert (=> b!79849 (= e!52143 (contains!748 lt!37012 (tuple2!2191 (_1!1105 lt!35784) (_2!1105 lt!35784))))))

(declare-fun b!79850 () Bool)

(assert (=> b!79850 (= e!52139 call!7364)))

(assert (= (and d!19395 c!12449) b!79843))

(assert (= (and d!19395 (not c!12449)) b!79847))

(assert (= (and b!79847 c!12451) b!79846))

(assert (= (and b!79847 (not c!12451)) b!79841))

(assert (= (and b!79841 c!12448) b!79850))

(assert (= (and b!79841 (not c!12448)) b!79845))

(assert (= (or b!79850 b!79845) bm!7363))

(assert (= (or b!79846 bm!7363) bm!7362))

(assert (= (or b!79843 bm!7362) bm!7361))

(assert (= (and bm!7361 c!12450) b!79848))

(assert (= (and bm!7361 (not c!12450)) b!79842))

(assert (= (and d!19395 res!41643) b!79844))

(assert (= (and b!79844 res!41644) b!79849))

(declare-fun m!81087 () Bool)

(assert (=> b!79844 m!81087))

(declare-fun m!81089 () Bool)

(assert (=> b!79849 m!81089))

(declare-fun m!81091 () Bool)

(assert (=> d!19395 m!81091))

(assert (=> d!19395 m!80795))

(declare-fun m!81093 () Bool)

(assert (=> bm!7361 m!81093))

(declare-fun m!81095 () Bool)

(assert (=> b!79848 m!81095))

(assert (=> b!78476 d!19395))

(assert (=> b!78317 d!18717))

(assert (=> b!78648 d!19245))

(declare-fun d!19397 () Bool)

(declare-fun e!52144 () Bool)

(assert (=> d!19397 e!52144))

(declare-fun res!41645 () Bool)

(assert (=> d!19397 (=> (not res!41645) (not e!52144))))

(declare-fun lt!37016 () ListLongMap!1465)

(assert (=> d!19397 (= res!41645 (contains!745 lt!37016 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!37013 () List!1533)

(assert (=> d!19397 (= lt!37016 (ListLongMap!1466 lt!37013))))

(declare-fun lt!37015 () Unit!2263)

(declare-fun lt!37014 () Unit!2263)

(assert (=> d!19397 (= lt!37015 lt!37014)))

(assert (=> d!19397 (= (getValueByKey!136 lt!37013 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!19397 (= lt!37014 (lemmaContainsTupThenGetReturnValue!55 lt!37013 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!19397 (= lt!37013 (insertStrictlySorted!57 (toList!748 (map!1179 newMap!16)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!19397 (= (+!109 (map!1179 newMap!16) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!37016)))

(declare-fun b!79851 () Bool)

(declare-fun res!41646 () Bool)

(assert (=> b!79851 (=> (not res!41646) (not e!52144))))

(assert (=> b!79851 (= res!41646 (= (getValueByKey!136 (toList!748 lt!37016) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79852 () Bool)

(assert (=> b!79852 (= e!52144 (contains!748 (toList!748 lt!37016) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!19397 res!41645) b!79851))

(assert (= (and b!79851 res!41646) b!79852))

(declare-fun m!81097 () Bool)

(assert (=> d!19397 m!81097))

(declare-fun m!81099 () Bool)

(assert (=> d!19397 m!81099))

(declare-fun m!81101 () Bool)

(assert (=> d!19397 m!81101))

(declare-fun m!81103 () Bool)

(assert (=> d!19397 m!81103))

(declare-fun m!81105 () Bool)

(assert (=> b!79851 m!81105))

(declare-fun m!81107 () Bool)

(assert (=> b!79852 m!81107))

(assert (=> b!78648 d!19397))

(assert (=> b!78648 d!18449))

(assert (=> b!78295 d!19177))

(declare-fun d!19399 () Bool)

(declare-fun res!41648 () Bool)

(declare-fun e!52146 () Bool)

(assert (=> d!19399 (=> res!41648 e!52146)))

(assert (=> d!19399 (= res!41648 (bvsge #b00000000000000000000000000000000 (size!2135 (_keys!3932 (_2!1104 lt!36056)))))))

(assert (=> d!19399 (= (arrayNoDuplicates!0 (_keys!3932 (_2!1104 lt!36056)) #b00000000000000000000000000000000 Nil!1531) e!52146)))

(declare-fun b!79853 () Bool)

(declare-fun e!52145 () Bool)

(assert (=> b!79853 (= e!52145 (contains!747 Nil!1531 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000)))))

(declare-fun bm!7364 () Bool)

(declare-fun call!7367 () Bool)

(declare-fun c!12452 () Bool)

(assert (=> bm!7364 (= call!7367 (arrayNoDuplicates!0 (_keys!3932 (_2!1104 lt!36056)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!12452 (Cons!1530 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000) Nil!1531) Nil!1531)))))

(declare-fun b!79854 () Bool)

(declare-fun e!52148 () Bool)

(declare-fun e!52147 () Bool)

(assert (=> b!79854 (= e!52148 e!52147)))

(assert (=> b!79854 (= c!12452 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000)))))

(declare-fun b!79855 () Bool)

(assert (=> b!79855 (= e!52147 call!7367)))

(declare-fun b!79856 () Bool)

(assert (=> b!79856 (= e!52146 e!52148)))

(declare-fun res!41647 () Bool)

(assert (=> b!79856 (=> (not res!41647) (not e!52148))))

(assert (=> b!79856 (= res!41647 (not e!52145))))

(declare-fun res!41649 () Bool)

(assert (=> b!79856 (=> (not res!41649) (not e!52145))))

(assert (=> b!79856 (= res!41649 (validKeyInArray!0 (select (arr!1894 (_keys!3932 (_2!1104 lt!36056))) #b00000000000000000000000000000000)))))

(declare-fun b!79857 () Bool)

(assert (=> b!79857 (= e!52147 call!7367)))

(assert (= (and d!19399 (not res!41648)) b!79856))

(assert (= (and b!79856 res!41649) b!79853))

(assert (= (and b!79856 res!41647) b!79854))

(assert (= (and b!79854 c!12452) b!79855))

(assert (= (and b!79854 (not c!12452)) b!79857))

(assert (= (or b!79855 b!79857) bm!7364))

(assert (=> b!79853 m!79795))

(assert (=> b!79853 m!79795))

(declare-fun m!81109 () Bool)

(assert (=> b!79853 m!81109))

(assert (=> bm!7364 m!79795))

(declare-fun m!81111 () Bool)

(assert (=> bm!7364 m!81111))

(assert (=> b!79854 m!79795))

(assert (=> b!79854 m!79795))

(assert (=> b!79854 m!79823))

(assert (=> b!79856 m!79795))

(assert (=> b!79856 m!79795))

(assert (=> b!79856 m!79823))

(assert (=> b!78303 d!19399))

(assert (=> b!78513 d!18717))

(declare-fun d!19401 () Bool)

(assert (=> d!19401 (isDefined!90 (getValueByKey!136 (toList!748 lt!35899) (_1!1105 lt!35784)))))

(declare-fun lt!37017 () Unit!2263)

(assert (=> d!19401 (= lt!37017 (choose!471 (toList!748 lt!35899) (_1!1105 lt!35784)))))

(declare-fun e!52149 () Bool)

(assert (=> d!19401 e!52149))

(declare-fun res!41650 () Bool)

(assert (=> d!19401 (=> (not res!41650) (not e!52149))))

(assert (=> d!19401 (= res!41650 (isStrictlySorted!290 (toList!748 lt!35899)))))

(assert (=> d!19401 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35899) (_1!1105 lt!35784)) lt!37017)))

(declare-fun b!79858 () Bool)

(assert (=> b!79858 (= e!52149 (containsKey!140 (toList!748 lt!35899) (_1!1105 lt!35784)))))

(assert (= (and d!19401 res!41650) b!79858))

(assert (=> d!19401 m!77975))

(assert (=> d!19401 m!77975))

(assert (=> d!19401 m!78945))

(declare-fun m!81113 () Bool)

(assert (=> d!19401 m!81113))

(declare-fun m!81115 () Bool)

(assert (=> d!19401 m!81115))

(assert (=> b!79858 m!78941))

(assert (=> b!78684 d!19401))

(declare-fun d!19403 () Bool)

(assert (=> d!19403 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35899) (_1!1105 lt!35784))) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35899) (_1!1105 lt!35784)))))))

(declare-fun bs!3375 () Bool)

(assert (= bs!3375 d!19403))

(assert (=> bs!3375 m!77975))

(declare-fun m!81117 () Bool)

(assert (=> bs!3375 m!81117))

(assert (=> b!78684 d!19403))

(assert (=> b!78684 d!18463))

(assert (=> d!18603 d!18605))

(assert (=> d!18603 d!18609))

(assert (=> d!18603 d!18611))

(assert (=> d!18603 d!18607))

(declare-fun d!19405 () Bool)

(declare-fun lt!37018 () Bool)

(assert (=> d!19405 (= lt!37018 (select (content!82 lt!35900) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun e!52150 () Bool)

(assert (=> d!19405 (= lt!37018 e!52150)))

(declare-fun res!41651 () Bool)

(assert (=> d!19405 (=> (not res!41651) (not e!52150))))

(assert (=> d!19405 (= res!41651 ((_ is Cons!1529) lt!35900))))

(assert (=> d!19405 (= (contains!748 lt!35900 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))) lt!37018)))

(declare-fun b!79859 () Bool)

(declare-fun e!52151 () Bool)

(assert (=> b!79859 (= e!52150 e!52151)))

(declare-fun res!41652 () Bool)

(assert (=> b!79859 (=> res!41652 e!52151)))

(assert (=> b!79859 (= res!41652 (= (h!2117 lt!35900) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!79860 () Bool)

(assert (=> b!79860 (= e!52151 (contains!748 (t!5183 lt!35900) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(assert (= (and d!19405 res!41651) b!79859))

(assert (= (and b!79859 (not res!41652)) b!79860))

(declare-fun m!81119 () Bool)

(assert (=> d!19405 m!81119))

(declare-fun m!81121 () Bool)

(assert (=> d!19405 m!81121))

(declare-fun m!81123 () Bool)

(assert (=> b!79860 m!81123))

(assert (=> b!78564 d!19405))

(assert (=> b!78739 d!18717))

(declare-fun b!79861 () Bool)

(declare-fun c!12453 () Bool)

(assert (=> b!79861 (= c!12453 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35785))) (bvsgt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35785)))) (_1!1105 lt!35783))))))

(declare-fun e!52155 () List!1533)

(declare-fun e!52152 () List!1533)

(assert (=> b!79861 (= e!52155 e!52152)))

(declare-fun call!7370 () List!1533)

(declare-fun e!52154 () List!1533)

(declare-fun c!12454 () Bool)

(declare-fun bm!7365 () Bool)

(assert (=> bm!7365 (= call!7370 ($colon$colon!68 e!52154 (ite c!12454 (h!2117 (t!5183 (toList!748 lt!35785))) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783)))))))

(declare-fun c!12455 () Bool)

(assert (=> bm!7365 (= c!12455 c!12454)))

(declare-fun d!19407 () Bool)

(declare-fun e!52156 () Bool)

(assert (=> d!19407 e!52156))

(declare-fun res!41653 () Bool)

(assert (=> d!19407 (=> (not res!41653) (not e!52156))))

(declare-fun lt!37019 () List!1533)

(assert (=> d!19407 (= res!41653 (isStrictlySorted!290 lt!37019))))

(declare-fun e!52153 () List!1533)

(assert (=> d!19407 (= lt!37019 e!52153)))

(assert (=> d!19407 (= c!12454 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35785))) (bvslt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35785)))) (_1!1105 lt!35783))))))

(assert (=> d!19407 (isStrictlySorted!290 (t!5183 (toList!748 lt!35785)))))

(assert (=> d!19407 (= (insertStrictlySorted!57 (t!5183 (toList!748 lt!35785)) (_1!1105 lt!35783) (_2!1105 lt!35783)) lt!37019)))

(declare-fun c!12456 () Bool)

(declare-fun b!79862 () Bool)

(assert (=> b!79862 (= e!52154 (ite c!12456 (t!5183 (t!5183 (toList!748 lt!35785))) (ite c!12453 (Cons!1529 (h!2117 (t!5183 (toList!748 lt!35785))) (t!5183 (t!5183 (toList!748 lt!35785)))) Nil!1530)))))

(declare-fun bm!7366 () Bool)

(declare-fun call!7369 () List!1533)

(assert (=> bm!7366 (= call!7369 call!7370)))

(declare-fun b!79863 () Bool)

(assert (=> b!79863 (= e!52153 call!7370)))

(declare-fun b!79864 () Bool)

(declare-fun res!41654 () Bool)

(assert (=> b!79864 (=> (not res!41654) (not e!52156))))

(assert (=> b!79864 (= res!41654 (containsKey!140 lt!37019 (_1!1105 lt!35783)))))

(declare-fun b!79865 () Bool)

(declare-fun call!7368 () List!1533)

(assert (=> b!79865 (= e!52152 call!7368)))

(declare-fun b!79866 () Bool)

(assert (=> b!79866 (= e!52155 call!7369)))

(declare-fun b!79867 () Bool)

(assert (=> b!79867 (= e!52153 e!52155)))

(assert (=> b!79867 (= c!12456 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35785))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35785)))) (_1!1105 lt!35783))))))

(declare-fun bm!7367 () Bool)

(assert (=> bm!7367 (= call!7368 call!7369)))

(declare-fun b!79868 () Bool)

(assert (=> b!79868 (= e!52154 (insertStrictlySorted!57 (t!5183 (t!5183 (toList!748 lt!35785))) (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(declare-fun b!79869 () Bool)

(assert (=> b!79869 (= e!52156 (contains!748 lt!37019 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!79870 () Bool)

(assert (=> b!79870 (= e!52152 call!7368)))

(assert (= (and d!19407 c!12454) b!79863))

(assert (= (and d!19407 (not c!12454)) b!79867))

(assert (= (and b!79867 c!12456) b!79866))

(assert (= (and b!79867 (not c!12456)) b!79861))

(assert (= (and b!79861 c!12453) b!79870))

(assert (= (and b!79861 (not c!12453)) b!79865))

(assert (= (or b!79870 b!79865) bm!7367))

(assert (= (or b!79866 bm!7367) bm!7366))

(assert (= (or b!79863 bm!7366) bm!7365))

(assert (= (and bm!7365 c!12455) b!79868))

(assert (= (and bm!7365 (not c!12455)) b!79862))

(assert (= (and d!19407 res!41653) b!79864))

(assert (= (and b!79864 res!41654) b!79869))

(declare-fun m!81125 () Bool)

(assert (=> b!79864 m!81125))

(declare-fun m!81127 () Bool)

(assert (=> b!79869 m!81127))

(declare-fun m!81129 () Bool)

(assert (=> d!19407 m!81129))

(assert (=> d!19407 m!80981))

(declare-fun m!81131 () Bool)

(assert (=> bm!7365 m!81131))

(declare-fun m!81133 () Bool)

(assert (=> b!79868 m!81133))

(assert (=> b!78675 d!19407))

(assert (=> d!18661 d!18659))

(declare-fun d!19409 () Bool)

(assert (=> d!19409 (= (getValueByKey!136 lt!35892 (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783)))))

(assert (=> d!19409 true))

(declare-fun _$22!395 () Unit!2263)

(assert (=> d!19409 (= (choose!468 lt!35892 (_1!1105 lt!35783) (_2!1105 lt!35783)) _$22!395)))

(declare-fun bs!3376 () Bool)

(assert (= bs!3376 d!19409))

(assert (=> bs!3376 m!77957))

(assert (=> d!18661 d!19409))

(declare-fun d!19411 () Bool)

(declare-fun res!41655 () Bool)

(declare-fun e!52157 () Bool)

(assert (=> d!19411 (=> res!41655 e!52157)))

(assert (=> d!19411 (= res!41655 (or ((_ is Nil!1530) lt!35892) ((_ is Nil!1530) (t!5183 lt!35892))))))

(assert (=> d!19411 (= (isStrictlySorted!290 lt!35892) e!52157)))

(declare-fun b!79871 () Bool)

(declare-fun e!52158 () Bool)

(assert (=> b!79871 (= e!52157 e!52158)))

(declare-fun res!41656 () Bool)

(assert (=> b!79871 (=> (not res!41656) (not e!52158))))

(assert (=> b!79871 (= res!41656 (bvslt (_1!1105 (h!2117 lt!35892)) (_1!1105 (h!2117 (t!5183 lt!35892)))))))

(declare-fun b!79872 () Bool)

(assert (=> b!79872 (= e!52158 (isStrictlySorted!290 (t!5183 lt!35892)))))

(assert (= (and d!19411 (not res!41655)) b!79871))

(assert (= (and b!79871 res!41656) b!79872))

(declare-fun m!81135 () Bool)

(assert (=> b!79872 m!81135))

(assert (=> d!18661 d!19411))

(declare-fun b!79874 () Bool)

(declare-fun e!52159 () Option!142)

(declare-fun e!52160 () Option!142)

(assert (=> b!79874 (= e!52159 e!52160)))

(declare-fun c!12458 () Bool)

(assert (=> b!79874 (= c!12458 (and ((_ is Cons!1529) (t!5183 lt!35896)) (not (= (_1!1105 (h!2117 (t!5183 lt!35896))) (_1!1105 lt!35784)))))))

(declare-fun b!79873 () Bool)

(assert (=> b!79873 (= e!52159 (Some!141 (_2!1105 (h!2117 (t!5183 lt!35896)))))))

(declare-fun b!79875 () Bool)

(assert (=> b!79875 (= e!52160 (getValueByKey!136 (t!5183 (t!5183 lt!35896)) (_1!1105 lt!35784)))))

(declare-fun b!79876 () Bool)

(assert (=> b!79876 (= e!52160 None!140)))

(declare-fun d!19413 () Bool)

(declare-fun c!12457 () Bool)

(assert (=> d!19413 (= c!12457 (and ((_ is Cons!1529) (t!5183 lt!35896)) (= (_1!1105 (h!2117 (t!5183 lt!35896))) (_1!1105 lt!35784))))))

(assert (=> d!19413 (= (getValueByKey!136 (t!5183 lt!35896) (_1!1105 lt!35784)) e!52159)))

(assert (= (and d!19413 c!12457) b!79873))

(assert (= (and d!19413 (not c!12457)) b!79874))

(assert (= (and b!79874 c!12458) b!79875))

(assert (= (and b!79874 (not c!12458)) b!79876))

(declare-fun m!81137 () Bool)

(assert (=> b!79875 m!81137))

(assert (=> b!78689 d!19413))

(assert (=> bm!7182 d!18737))

(declare-fun d!19415 () Bool)

(declare-fun e!52162 () Bool)

(assert (=> d!19415 e!52162))

(declare-fun res!41657 () Bool)

(assert (=> d!19415 (=> res!41657 e!52162)))

(declare-fun lt!37020 () Bool)

(assert (=> d!19415 (= res!41657 (not lt!37020))))

(declare-fun lt!37021 () Bool)

(assert (=> d!19415 (= lt!37020 lt!37021)))

(declare-fun lt!37022 () Unit!2263)

(declare-fun e!52161 () Unit!2263)

(assert (=> d!19415 (= lt!37022 e!52161)))

(declare-fun c!12459 () Bool)

(assert (=> d!19415 (= c!12459 lt!37021)))

(assert (=> d!19415 (= lt!37021 (containsKey!140 (toList!748 lt!36241) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!19415 (= (contains!745 lt!36241 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!37020)))

(declare-fun b!79877 () Bool)

(declare-fun lt!37023 () Unit!2263)

(assert (=> b!79877 (= e!52161 lt!37023)))

(assert (=> b!79877 (= lt!37023 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36241) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> b!79877 (isDefined!90 (getValueByKey!136 (toList!748 lt!36241) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79878 () Bool)

(declare-fun Unit!2338 () Unit!2263)

(assert (=> b!79878 (= e!52161 Unit!2338)))

(declare-fun b!79879 () Bool)

(assert (=> b!79879 (= e!52162 (isDefined!90 (getValueByKey!136 (toList!748 lt!36241) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (= (and d!19415 c!12459) b!79877))

(assert (= (and d!19415 (not c!12459)) b!79878))

(assert (= (and d!19415 (not res!41657)) b!79879))

(declare-fun m!81139 () Bool)

(assert (=> d!19415 m!81139))

(declare-fun m!81141 () Bool)

(assert (=> b!79877 m!81141))

(assert (=> b!79877 m!78647))

(assert (=> b!79877 m!78647))

(declare-fun m!81143 () Bool)

(assert (=> b!79877 m!81143))

(assert (=> b!79879 m!78647))

(assert (=> b!79879 m!78647))

(assert (=> b!79879 m!81143))

(assert (=> d!18609 d!19415))

(declare-fun b!79881 () Bool)

(declare-fun e!52163 () Option!142)

(declare-fun e!52164 () Option!142)

(assert (=> b!79881 (= e!52163 e!52164)))

(declare-fun c!12461 () Bool)

(assert (=> b!79881 (= c!12461 (and ((_ is Cons!1529) lt!36238) (not (= (_1!1105 (h!2117 lt!36238)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!79880 () Bool)

(assert (=> b!79880 (= e!52163 (Some!141 (_2!1105 (h!2117 lt!36238))))))

(declare-fun b!79882 () Bool)

(assert (=> b!79882 (= e!52164 (getValueByKey!136 (t!5183 lt!36238) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79883 () Bool)

(assert (=> b!79883 (= e!52164 None!140)))

(declare-fun c!12460 () Bool)

(declare-fun d!19417 () Bool)

(assert (=> d!19417 (= c!12460 (and ((_ is Cons!1529) lt!36238) (= (_1!1105 (h!2117 lt!36238)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19417 (= (getValueByKey!136 lt!36238 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) e!52163)))

(assert (= (and d!19417 c!12460) b!79880))

(assert (= (and d!19417 (not c!12460)) b!79881))

(assert (= (and b!79881 c!12461) b!79882))

(assert (= (and b!79881 (not c!12461)) b!79883))

(declare-fun m!81145 () Bool)

(assert (=> b!79882 m!81145))

(assert (=> d!18609 d!19417))

(declare-fun d!19419 () Bool)

(assert (=> d!19419 (= (getValueByKey!136 lt!36238 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (Some!141 (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun lt!37024 () Unit!2263)

(assert (=> d!19419 (= lt!37024 (choose!468 lt!36238 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun e!52165 () Bool)

(assert (=> d!19419 e!52165))

(declare-fun res!41658 () Bool)

(assert (=> d!19419 (=> (not res!41658) (not e!52165))))

(assert (=> d!19419 (= res!41658 (isStrictlySorted!290 lt!36238))))

(assert (=> d!19419 (= (lemmaContainsTupThenGetReturnValue!55 lt!36238 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!37024)))

(declare-fun b!79884 () Bool)

(declare-fun res!41659 () Bool)

(assert (=> b!79884 (=> (not res!41659) (not e!52165))))

(assert (=> b!79884 (= res!41659 (containsKey!140 lt!36238 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79885 () Bool)

(assert (=> b!79885 (= e!52165 (contains!748 lt!36238 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (= (and d!19419 res!41658) b!79884))

(assert (= (and b!79884 res!41659) b!79885))

(assert (=> d!19419 m!78641))

(declare-fun m!81147 () Bool)

(assert (=> d!19419 m!81147))

(declare-fun m!81149 () Bool)

(assert (=> d!19419 m!81149))

(declare-fun m!81151 () Bool)

(assert (=> b!79884 m!81151))

(declare-fun m!81153 () Bool)

(assert (=> b!79885 m!81153))

(assert (=> d!18609 d!19419))

(declare-fun b!79886 () Bool)

(declare-fun c!12462 () Bool)

(assert (=> b!79886 (= c!12462 (and ((_ is Cons!1529) (toList!748 lt!35785)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun e!52169 () List!1533)

(declare-fun e!52166 () List!1533)

(assert (=> b!79886 (= e!52169 e!52166)))

(declare-fun bm!7368 () Bool)

(declare-fun c!12463 () Bool)

(declare-fun call!7373 () List!1533)

(declare-fun e!52168 () List!1533)

(assert (=> bm!7368 (= call!7373 ($colon$colon!68 e!52168 (ite c!12463 (h!2117 (toList!748 lt!35785)) (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun c!12464 () Bool)

(assert (=> bm!7368 (= c!12464 c!12463)))

(declare-fun d!19421 () Bool)

(declare-fun e!52170 () Bool)

(assert (=> d!19421 e!52170))

(declare-fun res!41660 () Bool)

(assert (=> d!19421 (=> (not res!41660) (not e!52170))))

(declare-fun lt!37025 () List!1533)

(assert (=> d!19421 (= res!41660 (isStrictlySorted!290 lt!37025))))

(declare-fun e!52167 () List!1533)

(assert (=> d!19421 (= lt!37025 e!52167)))

(assert (=> d!19421 (= c!12463 (and ((_ is Cons!1529) (toList!748 lt!35785)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19421 (isStrictlySorted!290 (toList!748 lt!35785))))

(assert (=> d!19421 (= (insertStrictlySorted!57 (toList!748 lt!35785) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) lt!37025)))

(declare-fun c!12465 () Bool)

(declare-fun b!79887 () Bool)

(assert (=> b!79887 (= e!52168 (ite c!12465 (t!5183 (toList!748 lt!35785)) (ite c!12462 (Cons!1529 (h!2117 (toList!748 lt!35785)) (t!5183 (toList!748 lt!35785))) Nil!1530)))))

(declare-fun bm!7369 () Bool)

(declare-fun call!7372 () List!1533)

(assert (=> bm!7369 (= call!7372 call!7373)))

(declare-fun b!79888 () Bool)

(assert (=> b!79888 (= e!52167 call!7373)))

(declare-fun b!79889 () Bool)

(declare-fun res!41661 () Bool)

(assert (=> b!79889 (=> (not res!41661) (not e!52170))))

(assert (=> b!79889 (= res!41661 (containsKey!140 lt!37025 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79890 () Bool)

(declare-fun call!7371 () List!1533)

(assert (=> b!79890 (= e!52166 call!7371)))

(declare-fun b!79891 () Bool)

(assert (=> b!79891 (= e!52169 call!7372)))

(declare-fun b!79892 () Bool)

(assert (=> b!79892 (= e!52167 e!52169)))

(assert (=> b!79892 (= c!12465 (and ((_ is Cons!1529) (toList!748 lt!35785)) (= (_1!1105 (h!2117 (toList!748 lt!35785))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun bm!7370 () Bool)

(assert (=> bm!7370 (= call!7371 call!7372)))

(declare-fun b!79893 () Bool)

(assert (=> b!79893 (= e!52168 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35785)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79894 () Bool)

(assert (=> b!79894 (= e!52170 (contains!748 lt!37025 (tuple2!2191 (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) (_2!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(declare-fun b!79895 () Bool)

(assert (=> b!79895 (= e!52166 call!7371)))

(assert (= (and d!19421 c!12463) b!79888))

(assert (= (and d!19421 (not c!12463)) b!79892))

(assert (= (and b!79892 c!12465) b!79891))

(assert (= (and b!79892 (not c!12465)) b!79886))

(assert (= (and b!79886 c!12462) b!79895))

(assert (= (and b!79886 (not c!12462)) b!79890))

(assert (= (or b!79895 b!79890) bm!7370))

(assert (= (or b!79891 bm!7370) bm!7369))

(assert (= (or b!79888 bm!7369) bm!7368))

(assert (= (and bm!7368 c!12464) b!79893))

(assert (= (and bm!7368 (not c!12464)) b!79887))

(assert (= (and d!19421 res!41660) b!79889))

(assert (= (and b!79889 res!41661) b!79894))

(declare-fun m!81155 () Bool)

(assert (=> b!79889 m!81155))

(declare-fun m!81157 () Bool)

(assert (=> b!79894 m!81157))

(declare-fun m!81159 () Bool)

(assert (=> d!19421 m!81159))

(assert (=> d!19421 m!78593))

(declare-fun m!81161 () Bool)

(assert (=> bm!7368 m!81161))

(declare-fun m!81163 () Bool)

(assert (=> b!79893 m!81163))

(assert (=> d!18609 d!19421))

(declare-fun b!79896 () Bool)

(declare-fun res!41663 () Bool)

(declare-fun e!52171 () Bool)

(assert (=> b!79896 (=> (not res!41663) (not e!52171))))

(assert (=> b!79896 (= res!41663 (and (= (size!2136 (_values!2255 (_2!1104 lt!36056))) (bvadd (mask!6268 (_2!1104 lt!36056)) #b00000000000000000000000000000001)) (= (size!2135 (_keys!3932 (_2!1104 lt!36056))) (size!2136 (_values!2255 (_2!1104 lt!36056)))) (bvsge (_size!415 (_2!1104 lt!36056)) #b00000000000000000000000000000000) (bvsle (_size!415 (_2!1104 lt!36056)) (bvadd (mask!6268 (_2!1104 lt!36056)) #b00000000000000000000000000000001))))))

(declare-fun d!19423 () Bool)

(declare-fun res!41664 () Bool)

(assert (=> d!19423 (=> (not res!41664) (not e!52171))))

(assert (=> d!19423 (= res!41664 (validMask!0 (mask!6268 (_2!1104 lt!36056))))))

(assert (=> d!19423 (= (simpleValid!54 (_2!1104 lt!36056)) e!52171)))

(declare-fun b!79899 () Bool)

(assert (=> b!79899 (= e!52171 (and (bvsge (extraKeys!2123 (_2!1104 lt!36056)) #b00000000000000000000000000000000) (bvsle (extraKeys!2123 (_2!1104 lt!36056)) #b00000000000000000000000000000011) (bvsge (_vacant!415 (_2!1104 lt!36056)) #b00000000000000000000000000000000)))))

(declare-fun b!79897 () Bool)

(declare-fun res!41662 () Bool)

(assert (=> b!79897 (=> (not res!41662) (not e!52171))))

(assert (=> b!79897 (= res!41662 (bvsge (size!2139 (_2!1104 lt!36056)) (_size!415 (_2!1104 lt!36056))))))

(declare-fun b!79898 () Bool)

(declare-fun res!41665 () Bool)

(assert (=> b!79898 (=> (not res!41665) (not e!52171))))

(assert (=> b!79898 (= res!41665 (= (size!2139 (_2!1104 lt!36056)) (bvadd (_size!415 (_2!1104 lt!36056)) (bvsdiv (bvadd (extraKeys!2123 (_2!1104 lt!36056)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!19423 res!41664) b!79896))

(assert (= (and b!79896 res!41663) b!79897))

(assert (= (and b!79897 res!41662) b!79898))

(assert (= (and b!79898 res!41665) b!79899))

(assert (=> d!19423 m!79809))

(declare-fun m!81165 () Bool)

(assert (=> b!79897 m!81165))

(assert (=> b!79898 m!81165))

(assert (=> d!18483 d!19423))

(declare-fun d!19425 () Bool)

(declare-fun res!41666 () Bool)

(declare-fun e!52172 () Bool)

(assert (=> d!19425 (=> res!41666 e!52172)))

(assert (=> d!19425 (= res!41666 (and ((_ is Cons!1529) (toList!748 e!51143)) (= (_1!1105 (h!2117 (toList!748 e!51143))) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063))))))))

(assert (=> d!19425 (= (containsKey!140 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))) e!52172)))

(declare-fun b!79900 () Bool)

(declare-fun e!52173 () Bool)

(assert (=> b!79900 (= e!52172 e!52173)))

(declare-fun res!41667 () Bool)

(assert (=> b!79900 (=> (not res!41667) (not e!52173))))

(assert (=> b!79900 (= res!41667 (and (or (not ((_ is Cons!1529) (toList!748 e!51143))) (bvsle (_1!1105 (h!2117 (toList!748 e!51143))) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063))))) ((_ is Cons!1529) (toList!748 e!51143)) (bvslt (_1!1105 (h!2117 (toList!748 e!51143))) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063))))))))

(declare-fun b!79901 () Bool)

(assert (=> b!79901 (= e!52173 (containsKey!140 (t!5183 (toList!748 e!51143)) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))

(assert (= (and d!19425 (not res!41666)) b!79900))

(assert (= (and b!79900 res!41667) b!79901))

(declare-fun m!81167 () Bool)

(assert (=> b!79901 m!81167))

(assert (=> d!18689 d!19425))

(assert (=> bm!7176 d!18515))

(declare-fun b!79903 () Bool)

(declare-fun e!52174 () Option!142)

(declare-fun e!52175 () Option!142)

(assert (=> b!79903 (= e!52174 e!52175)))

(declare-fun c!12467 () Bool)

(assert (=> b!79903 (= c!12467 (and ((_ is Cons!1529) (toList!748 lt!36241)) (not (= (_1!1105 (h!2117 (toList!748 lt!36241))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))))

(declare-fun b!79902 () Bool)

(assert (=> b!79902 (= e!52174 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36241)))))))

(declare-fun b!79904 () Bool)

(assert (=> b!79904 (= e!52175 (getValueByKey!136 (t!5183 (toList!748 lt!36241)) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(declare-fun b!79905 () Bool)

(assert (=> b!79905 (= e!52175 None!140)))

(declare-fun c!12466 () Bool)

(declare-fun d!19427 () Bool)

(assert (=> d!19427 (= c!12466 (and ((_ is Cons!1529) (toList!748 lt!36241)) (= (_1!1105 (h!2117 (toList!748 lt!36241))) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))))

(assert (=> d!19427 (= (getValueByKey!136 (toList!748 lt!36241) (_1!1105 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) e!52174)))

(assert (= (and d!19427 c!12466) b!79902))

(assert (= (and d!19427 (not c!12466)) b!79903))

(assert (= (and b!79903 c!12467) b!79904))

(assert (= (and b!79903 (not c!12467)) b!79905))

(declare-fun m!81169 () Bool)

(assert (=> b!79904 m!81169))

(assert (=> b!78525 d!19427))

(declare-fun d!19429 () Bool)

(assert (=> d!19429 (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!37026 () Unit!2263)

(assert (=> d!19429 (= lt!37026 (choose!471 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52176 () Bool)

(assert (=> d!19429 e!52176))

(declare-fun res!41668 () Bool)

(assert (=> d!19429 (=> (not res!41668) (not e!52176))))

(assert (=> d!19429 (= res!41668 (isStrictlySorted!290 (toList!748 lt!35867)))))

(assert (=> d!19429 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000) lt!37026)))

(declare-fun b!79906 () Bool)

(assert (=> b!79906 (= e!52176 (containsKey!140 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19429 res!41668) b!79906))

(assert (=> d!19429 m!78999))

(assert (=> d!19429 m!78999))

(assert (=> d!19429 m!79001))

(declare-fun m!81171 () Bool)

(assert (=> d!19429 m!81171))

(assert (=> d!19429 m!79983))

(assert (=> b!79906 m!78995))

(assert (=> b!78728 d!19429))

(declare-fun d!19431 () Bool)

(assert (=> d!19431 (= (isDefined!90 (getValueByKey!136 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!332 (getValueByKey!136 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3377 () Bool)

(assert (= bs!3377 d!19431))

(assert (=> bs!3377 m!78999))

(declare-fun m!81173 () Bool)

(assert (=> bs!3377 m!81173))

(assert (=> b!78728 d!19431))

(declare-fun b!79908 () Bool)

(declare-fun e!52177 () Option!142)

(declare-fun e!52178 () Option!142)

(assert (=> b!79908 (= e!52177 e!52178)))

(declare-fun c!12469 () Bool)

(assert (=> b!79908 (= c!12469 (and ((_ is Cons!1529) (toList!748 lt!35867)) (not (= (_1!1105 (h!2117 (toList!748 lt!35867))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!79907 () Bool)

(assert (=> b!79907 (= e!52177 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35867)))))))

(declare-fun b!79909 () Bool)

(assert (=> b!79909 (= e!52178 (getValueByKey!136 (t!5183 (toList!748 lt!35867)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79910 () Bool)

(assert (=> b!79910 (= e!52178 None!140)))

(declare-fun d!19433 () Bool)

(declare-fun c!12468 () Bool)

(assert (=> d!19433 (= c!12468 (and ((_ is Cons!1529) (toList!748 lt!35867)) (= (_1!1105 (h!2117 (toList!748 lt!35867))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19433 (= (getValueByKey!136 (toList!748 lt!35867) #b1000000000000000000000000000000000000000000000000000000000000000) e!52177)))

(assert (= (and d!19433 c!12468) b!79907))

(assert (= (and d!19433 (not c!12468)) b!79908))

(assert (= (and b!79908 c!12469) b!79909))

(assert (= (and b!79908 (not c!12469)) b!79910))

(declare-fun m!81175 () Bool)

(assert (=> b!79909 m!81175))

(assert (=> b!78728 d!19433))

(declare-fun d!19435 () Bool)

(declare-fun lt!37027 () Bool)

(assert (=> d!19435 (= lt!37027 (select (content!82 lt!36467) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun e!52179 () Bool)

(assert (=> d!19435 (= lt!37027 e!52179)))

(declare-fun res!41669 () Bool)

(assert (=> d!19435 (=> (not res!41669) (not e!52179))))

(assert (=> d!19435 (= res!41669 ((_ is Cons!1529) lt!36467))))

(assert (=> d!19435 (= (contains!748 lt!36467 (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))) lt!37027)))

(declare-fun b!79911 () Bool)

(declare-fun e!52180 () Bool)

(assert (=> b!79911 (= e!52179 e!52180)))

(declare-fun res!41670 () Bool)

(assert (=> b!79911 (=> res!41670 e!52180)))

(assert (=> b!79911 (= res!41670 (= (h!2117 lt!36467) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun b!79912 () Bool)

(assert (=> b!79912 (= e!52180 (contains!748 (t!5183 lt!36467) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(assert (= (and d!19435 res!41669) b!79911))

(assert (= (and b!79911 (not res!41670)) b!79912))

(declare-fun m!81177 () Bool)

(assert (=> d!19435 m!81177))

(declare-fun m!81179 () Bool)

(assert (=> d!19435 m!81179))

(declare-fun m!81181 () Bool)

(assert (=> b!79912 m!81181))

(assert (=> b!78773 d!19435))

(declare-fun d!19437 () Bool)

(declare-fun lt!37028 () Bool)

(assert (=> d!19437 (= lt!37028 (select (content!82 (toList!748 lt!36299)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun e!52181 () Bool)

(assert (=> d!19437 (= lt!37028 e!52181)))

(declare-fun res!41671 () Bool)

(assert (=> d!19437 (=> (not res!41671) (not e!52181))))

(assert (=> d!19437 (= res!41671 ((_ is Cons!1529) (toList!748 lt!36299)))))

(assert (=> d!19437 (= (contains!748 (toList!748 lt!36299) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!37028)))

(declare-fun b!79913 () Bool)

(declare-fun e!52182 () Bool)

(assert (=> b!79913 (= e!52181 e!52182)))

(declare-fun res!41672 () Bool)

(assert (=> b!79913 (=> res!41672 e!52182)))

(assert (=> b!79913 (= res!41672 (= (h!2117 (toList!748 lt!36299)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!79914 () Bool)

(assert (=> b!79914 (= e!52182 (contains!748 (t!5183 (toList!748 lt!36299)) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))

(assert (= (and d!19437 res!41671) b!79913))

(assert (= (and b!79913 (not res!41672)) b!79914))

(declare-fun m!81183 () Bool)

(assert (=> d!19437 m!81183))

(declare-fun m!81185 () Bool)

(assert (=> d!19437 m!81185))

(declare-fun m!81187 () Bool)

(assert (=> b!79914 m!81187))

(assert (=> b!78601 d!19437))

(assert (=> d!18597 d!18599))

(assert (=> d!18597 d!18601))

(declare-fun d!19439 () Bool)

(assert (=> d!19439 (isDefined!90 (getValueByKey!136 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!19439 true))

(declare-fun _$12!326 () Unit!2263)

(assert (=> d!19439 (= (choose!471 (toList!748 lt!35787) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) _$12!326)))

(declare-fun bs!3378 () Bool)

(assert (= bs!3378 d!19439))

(assert (=> bs!3378 m!77749))

(assert (=> bs!3378 m!78079))

(assert (=> bs!3378 m!78079))

(assert (=> bs!3378 m!78081))

(assert (=> d!18597 d!19439))

(declare-fun d!19441 () Bool)

(declare-fun res!41673 () Bool)

(declare-fun e!52183 () Bool)

(assert (=> d!19441 (=> res!41673 e!52183)))

(assert (=> d!19441 (= res!41673 (or ((_ is Nil!1530) (toList!748 lt!35787)) ((_ is Nil!1530) (t!5183 (toList!748 lt!35787)))))))

(assert (=> d!19441 (= (isStrictlySorted!290 (toList!748 lt!35787)) e!52183)))

(declare-fun b!79915 () Bool)

(declare-fun e!52184 () Bool)

(assert (=> b!79915 (= e!52183 e!52184)))

(declare-fun res!41674 () Bool)

(assert (=> b!79915 (=> (not res!41674) (not e!52184))))

(assert (=> b!79915 (= res!41674 (bvslt (_1!1105 (h!2117 (toList!748 lt!35787))) (_1!1105 (h!2117 (t!5183 (toList!748 lt!35787))))))))

(declare-fun b!79916 () Bool)

(assert (=> b!79916 (= e!52184 (isStrictlySorted!290 (t!5183 (toList!748 lt!35787))))))

(assert (= (and d!19441 (not res!41673)) b!79915))

(assert (= (and b!79915 res!41674) b!79916))

(declare-fun m!81189 () Bool)

(assert (=> b!79916 m!81189))

(assert (=> d!18597 d!19441))

(assert (=> d!18591 d!18589))

(declare-fun d!19443 () Bool)

(assert (=> d!19443 (= (getValueByKey!136 lt!35908 (_1!1105 lt!35788)) (Some!141 (_2!1105 lt!35788)))))

(assert (=> d!19443 true))

(declare-fun _$22!396 () Unit!2263)

(assert (=> d!19443 (= (choose!468 lt!35908 (_1!1105 lt!35788) (_2!1105 lt!35788)) _$22!396)))

(declare-fun bs!3379 () Bool)

(assert (= bs!3379 d!19443))

(assert (=> bs!3379 m!78005))

(assert (=> d!18591 d!19443))

(declare-fun d!19445 () Bool)

(declare-fun res!41675 () Bool)

(declare-fun e!52185 () Bool)

(assert (=> d!19445 (=> res!41675 e!52185)))

(assert (=> d!19445 (= res!41675 (or ((_ is Nil!1530) lt!35908) ((_ is Nil!1530) (t!5183 lt!35908))))))

(assert (=> d!19445 (= (isStrictlySorted!290 lt!35908) e!52185)))

(declare-fun b!79917 () Bool)

(declare-fun e!52186 () Bool)

(assert (=> b!79917 (= e!52185 e!52186)))

(declare-fun res!41676 () Bool)

(assert (=> b!79917 (=> (not res!41676) (not e!52186))))

(assert (=> b!79917 (= res!41676 (bvslt (_1!1105 (h!2117 lt!35908)) (_1!1105 (h!2117 (t!5183 lt!35908)))))))

(declare-fun b!79918 () Bool)

(assert (=> b!79918 (= e!52186 (isStrictlySorted!290 (t!5183 lt!35908)))))

(assert (= (and d!19445 (not res!41675)) b!79917))

(assert (= (and b!79917 res!41676) b!79918))

(declare-fun m!81191 () Bool)

(assert (=> b!79918 m!81191))

(assert (=> d!18591 d!19445))

(declare-fun d!19447 () Bool)

(assert (=> d!19447 (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868))))

(declare-fun lt!37029 () Unit!2263)

(assert (=> d!19447 (= lt!37029 (choose!471 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868))))

(declare-fun e!52187 () Bool)

(assert (=> d!19447 e!52187))

(declare-fun res!41677 () Bool)

(assert (=> d!19447 (=> (not res!41677) (not e!52187))))

(assert (=> d!19447 (= res!41677 (isStrictlySorted!290 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)))))))

(assert (=> d!19447 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868) lt!37029)))

(declare-fun b!79919 () Bool)

(assert (=> b!79919 (= e!52187 (containsKey!140 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868))))

(assert (= (and d!19447 res!41677) b!79919))

(assert (=> d!19447 m!78291))

(assert (=> d!19447 m!78291))

(assert (=> d!19447 m!78293))

(declare-fun m!81193 () Bool)

(assert (=> d!19447 m!81193))

(declare-fun m!81195 () Bool)

(assert (=> d!19447 m!81195))

(assert (=> b!79919 m!78287))

(assert (=> b!78332 d!19447))

(declare-fun d!19449 () Bool)

(assert (=> d!19449 (= (isDefined!90 (getValueByKey!136 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868)) (not (isEmpty!332 (getValueByKey!136 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868))))))

(declare-fun bs!3380 () Bool)

(assert (= bs!3380 d!19449))

(assert (=> bs!3380 m!78291))

(declare-fun m!81197 () Bool)

(assert (=> bs!3380 m!81197))

(assert (=> b!78332 d!19449))

(declare-fun b!79921 () Bool)

(declare-fun e!52188 () Option!142)

(declare-fun e!52189 () Option!142)

(assert (=> b!79921 (= e!52188 e!52189)))

(declare-fun c!12471 () Bool)

(assert (=> b!79921 (= c!12471 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)))) (not (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))))) lt!35868))))))

(declare-fun b!79920 () Bool)

(assert (=> b!79920 (= e!52188 (Some!141 (_2!1105 (h!2117 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)))))))))

(declare-fun b!79922 () Bool)

(assert (=> b!79922 (= e!52189 (getValueByKey!136 (t!5183 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)))) lt!35868))))

(declare-fun b!79923 () Bool)

(assert (=> b!79923 (= e!52189 None!140)))

(declare-fun c!12470 () Bool)

(declare-fun d!19451 () Bool)

(assert (=> d!19451 (= c!12470 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871)))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))))) lt!35868)))))

(assert (=> d!19451 (= (getValueByKey!136 (toList!748 (+!109 lt!35869 (tuple2!2191 lt!35870 lt!35871))) lt!35868) e!52188)))

(assert (= (and d!19451 c!12470) b!79920))

(assert (= (and d!19451 (not c!12470)) b!79921))

(assert (= (and b!79921 c!12471) b!79922))

(assert (= (and b!79921 (not c!12471)) b!79923))

(declare-fun m!81199 () Bool)

(assert (=> b!79922 m!81199))

(assert (=> b!78332 d!19451))

(declare-fun b!79924 () Bool)

(declare-fun c!12472 () Bool)

(assert (=> b!79924 (= c!12472 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35785))) (bvsgt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35785)))) (_1!1105 lt!35788))))))

(declare-fun e!52193 () List!1533)

(declare-fun e!52190 () List!1533)

(assert (=> b!79924 (= e!52193 e!52190)))

(declare-fun call!7376 () List!1533)

(declare-fun bm!7371 () Bool)

(declare-fun c!12473 () Bool)

(declare-fun e!52192 () List!1533)

(assert (=> bm!7371 (= call!7376 ($colon$colon!68 e!52192 (ite c!12473 (h!2117 (t!5183 (toList!748 lt!35785))) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788)))))))

(declare-fun c!12474 () Bool)

(assert (=> bm!7371 (= c!12474 c!12473)))

(declare-fun d!19453 () Bool)

(declare-fun e!52194 () Bool)

(assert (=> d!19453 e!52194))

(declare-fun res!41678 () Bool)

(assert (=> d!19453 (=> (not res!41678) (not e!52194))))

(declare-fun lt!37030 () List!1533)

(assert (=> d!19453 (= res!41678 (isStrictlySorted!290 lt!37030))))

(declare-fun e!52191 () List!1533)

(assert (=> d!19453 (= lt!37030 e!52191)))

(assert (=> d!19453 (= c!12473 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35785))) (bvslt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35785)))) (_1!1105 lt!35788))))))

(assert (=> d!19453 (isStrictlySorted!290 (t!5183 (toList!748 lt!35785)))))

(assert (=> d!19453 (= (insertStrictlySorted!57 (t!5183 (toList!748 lt!35785)) (_1!1105 lt!35788) (_2!1105 lt!35788)) lt!37030)))

(declare-fun b!79925 () Bool)

(declare-fun c!12475 () Bool)

(assert (=> b!79925 (= e!52192 (ite c!12475 (t!5183 (t!5183 (toList!748 lt!35785))) (ite c!12472 (Cons!1529 (h!2117 (t!5183 (toList!748 lt!35785))) (t!5183 (t!5183 (toList!748 lt!35785)))) Nil!1530)))))

(declare-fun bm!7372 () Bool)

(declare-fun call!7375 () List!1533)

(assert (=> bm!7372 (= call!7375 call!7376)))

(declare-fun b!79926 () Bool)

(assert (=> b!79926 (= e!52191 call!7376)))

(declare-fun b!79927 () Bool)

(declare-fun res!41679 () Bool)

(assert (=> b!79927 (=> (not res!41679) (not e!52194))))

(assert (=> b!79927 (= res!41679 (containsKey!140 lt!37030 (_1!1105 lt!35788)))))

(declare-fun b!79928 () Bool)

(declare-fun call!7374 () List!1533)

(assert (=> b!79928 (= e!52190 call!7374)))

(declare-fun b!79929 () Bool)

(assert (=> b!79929 (= e!52193 call!7375)))

(declare-fun b!79930 () Bool)

(assert (=> b!79930 (= e!52191 e!52193)))

(assert (=> b!79930 (= c!12475 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35785))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35785)))) (_1!1105 lt!35788))))))

(declare-fun bm!7373 () Bool)

(assert (=> bm!7373 (= call!7374 call!7375)))

(declare-fun b!79931 () Bool)

(assert (=> b!79931 (= e!52192 (insertStrictlySorted!57 (t!5183 (t!5183 (toList!748 lt!35785))) (_1!1105 lt!35788) (_2!1105 lt!35788)))))

(declare-fun b!79932 () Bool)

(assert (=> b!79932 (= e!52194 (contains!748 lt!37030 (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun b!79933 () Bool)

(assert (=> b!79933 (= e!52190 call!7374)))

(assert (= (and d!19453 c!12473) b!79926))

(assert (= (and d!19453 (not c!12473)) b!79930))

(assert (= (and b!79930 c!12475) b!79929))

(assert (= (and b!79930 (not c!12475)) b!79924))

(assert (= (and b!79924 c!12472) b!79933))

(assert (= (and b!79924 (not c!12472)) b!79928))

(assert (= (or b!79933 b!79928) bm!7373))

(assert (= (or b!79929 bm!7373) bm!7372))

(assert (= (or b!79926 bm!7372) bm!7371))

(assert (= (and bm!7371 c!12474) b!79931))

(assert (= (and bm!7371 (not c!12474)) b!79925))

(assert (= (and d!19453 res!41678) b!79927))

(assert (= (and b!79927 res!41679) b!79932))

(declare-fun m!81201 () Bool)

(assert (=> b!79927 m!81201))

(declare-fun m!81203 () Bool)

(assert (=> b!79932 m!81203))

(declare-fun m!81205 () Bool)

(assert (=> d!19453 m!81205))

(assert (=> d!19453 m!80981))

(declare-fun m!81207 () Bool)

(assert (=> bm!7371 m!81207))

(declare-fun m!81209 () Bool)

(assert (=> b!79931 m!81209))

(assert (=> b!78499 d!19453))

(declare-fun d!19455 () Bool)

(assert (=> d!19455 (= ($colon$colon!68 e!51416 (ite c!12103 (h!2117 (toList!748 lt!35785)) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783)))) (Cons!1529 (ite c!12103 (h!2117 (toList!748 lt!35785)) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))) e!51416))))

(assert (=> bm!7227 d!19455))

(declare-fun d!19457 () Bool)

(assert (=> d!19457 (= (get!1192 (getValueByKey!136 (toList!748 lt!35973) lt!35963)) (v!2598 (getValueByKey!136 (toList!748 lt!35973) lt!35963)))))

(assert (=> d!18543 d!19457))

(declare-fun b!79935 () Bool)

(declare-fun e!52195 () Option!142)

(declare-fun e!52196 () Option!142)

(assert (=> b!79935 (= e!52195 e!52196)))

(declare-fun c!12477 () Bool)

(assert (=> b!79935 (= c!12477 (and ((_ is Cons!1529) (toList!748 lt!35973)) (not (= (_1!1105 (h!2117 (toList!748 lt!35973))) lt!35963))))))

(declare-fun b!79934 () Bool)

(assert (=> b!79934 (= e!52195 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35973)))))))

(declare-fun b!79936 () Bool)

(assert (=> b!79936 (= e!52196 (getValueByKey!136 (t!5183 (toList!748 lt!35973)) lt!35963))))

(declare-fun b!79937 () Bool)

(assert (=> b!79937 (= e!52196 None!140)))

(declare-fun d!19459 () Bool)

(declare-fun c!12476 () Bool)

(assert (=> d!19459 (= c!12476 (and ((_ is Cons!1529) (toList!748 lt!35973)) (= (_1!1105 (h!2117 (toList!748 lt!35973))) lt!35963)))))

(assert (=> d!19459 (= (getValueByKey!136 (toList!748 lt!35973) lt!35963) e!52195)))

(assert (= (and d!19459 c!12476) b!79934))

(assert (= (and d!19459 (not c!12476)) b!79935))

(assert (= (and b!79935 c!12477) b!79936))

(assert (= (and b!79935 (not c!12477)) b!79937))

(declare-fun m!81211 () Bool)

(assert (=> b!79936 m!81211))

(assert (=> d!18543 d!19459))

(assert (=> bm!7223 d!18621))

(declare-fun b!79939 () Bool)

(declare-fun e!52197 () Option!142)

(declare-fun e!52198 () Option!142)

(assert (=> b!79939 (= e!52197 e!52198)))

(declare-fun c!12479 () Bool)

(assert (=> b!79939 (= c!12479 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35899))) (not (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35899)))) (_1!1105 lt!35784)))))))

(declare-fun b!79938 () Bool)

(assert (=> b!79938 (= e!52197 (Some!141 (_2!1105 (h!2117 (t!5183 (toList!748 lt!35899))))))))

(declare-fun b!79940 () Bool)

(assert (=> b!79940 (= e!52198 (getValueByKey!136 (t!5183 (t!5183 (toList!748 lt!35899))) (_1!1105 lt!35784)))))

(declare-fun b!79941 () Bool)

(assert (=> b!79941 (= e!52198 None!140)))

(declare-fun d!19461 () Bool)

(declare-fun c!12478 () Bool)

(assert (=> d!19461 (= c!12478 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35899))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35899)))) (_1!1105 lt!35784))))))

(assert (=> d!19461 (= (getValueByKey!136 (t!5183 (toList!748 lt!35899)) (_1!1105 lt!35784)) e!52197)))

(assert (= (and d!19461 c!12478) b!79938))

(assert (= (and d!19461 (not c!12478)) b!79939))

(assert (= (and b!79939 c!12479) b!79940))

(assert (= (and b!79939 (not c!12479)) b!79941))

(declare-fun m!81213 () Bool)

(assert (=> b!79940 m!81213))

(assert (=> b!78237 d!19461))

(assert (=> bm!7225 d!18515))

(declare-fun d!19463 () Bool)

(declare-fun res!41680 () Bool)

(declare-fun e!52199 () Bool)

(assert (=> d!19463 (=> res!41680 e!52199)))

(assert (=> d!19463 (= res!41680 (= (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (=> d!19463 (= (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!52199)))

(declare-fun b!79942 () Bool)

(declare-fun e!52200 () Bool)

(assert (=> b!79942 (= e!52199 e!52200)))

(declare-fun res!41681 () Bool)

(assert (=> b!79942 (=> (not res!41681) (not e!52200))))

(assert (=> b!79942 (= res!41681 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992))))))))

(declare-fun b!79943 () Bool)

(assert (=> b!79943 (= e!52200 (arrayContainsKey!0 (_keys!3932 (v!2594 (underlying!281 thiss!992))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!19463 (not res!41680)) b!79942))

(assert (= (and b!79942 res!41681) b!79943))

(assert (=> d!19463 m!79505))

(assert (=> b!79943 m!77749))

(declare-fun m!81215 () Bool)

(assert (=> b!79943 m!81215))

(assert (=> b!78780 d!19463))

(assert (=> b!78284 d!18717))

(declare-fun d!19465 () Bool)

(declare-fun e!52202 () Bool)

(assert (=> d!19465 e!52202))

(declare-fun res!41682 () Bool)

(assert (=> d!19465 (=> res!41682 e!52202)))

(declare-fun lt!37031 () Bool)

(assert (=> d!19465 (= res!41682 (not lt!37031))))

(declare-fun lt!37032 () Bool)

(assert (=> d!19465 (= lt!37031 lt!37032)))

(declare-fun lt!37033 () Unit!2263)

(declare-fun e!52201 () Unit!2263)

(assert (=> d!19465 (= lt!37033 e!52201)))

(declare-fun c!12480 () Bool)

(assert (=> d!19465 (= c!12480 lt!37032)))

(assert (=> d!19465 (= lt!37032 (containsKey!140 (toList!748 lt!36299) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!19465 (= (contains!745 lt!36299 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!37031)))

(declare-fun b!79944 () Bool)

(declare-fun lt!37034 () Unit!2263)

(assert (=> b!79944 (= e!52201 lt!37034)))

(assert (=> b!79944 (= lt!37034 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36299) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> b!79944 (isDefined!90 (getValueByKey!136 (toList!748 lt!36299) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79945 () Bool)

(declare-fun Unit!2339 () Unit!2263)

(assert (=> b!79945 (= e!52201 Unit!2339)))

(declare-fun b!79946 () Bool)

(assert (=> b!79946 (= e!52202 (isDefined!90 (getValueByKey!136 (toList!748 lt!36299) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19465 c!12480) b!79944))

(assert (= (and d!19465 (not c!12480)) b!79945))

(assert (= (and d!19465 (not res!41682)) b!79946))

(declare-fun m!81217 () Bool)

(assert (=> d!19465 m!81217))

(declare-fun m!81219 () Bool)

(assert (=> b!79944 m!81219))

(assert (=> b!79944 m!78807))

(assert (=> b!79944 m!78807))

(declare-fun m!81221 () Bool)

(assert (=> b!79944 m!81221))

(assert (=> b!79946 m!78807))

(assert (=> b!79946 m!78807))

(assert (=> b!79946 m!81221))

(assert (=> d!18641 d!19465))

(declare-fun b!79948 () Bool)

(declare-fun e!52203 () Option!142)

(declare-fun e!52204 () Option!142)

(assert (=> b!79948 (= e!52203 e!52204)))

(declare-fun c!12482 () Bool)

(assert (=> b!79948 (= c!12482 (and ((_ is Cons!1529) lt!36296) (not (= (_1!1105 (h!2117 lt!36296)) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!79947 () Bool)

(assert (=> b!79947 (= e!52203 (Some!141 (_2!1105 (h!2117 lt!36296))))))

(declare-fun b!79949 () Bool)

(assert (=> b!79949 (= e!52204 (getValueByKey!136 (t!5183 lt!36296) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79950 () Bool)

(assert (=> b!79950 (= e!52204 None!140)))

(declare-fun d!19467 () Bool)

(declare-fun c!12481 () Bool)

(assert (=> d!19467 (= c!12481 (and ((_ is Cons!1529) lt!36296) (= (_1!1105 (h!2117 lt!36296)) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19467 (= (getValueByKey!136 lt!36296 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!52203)))

(assert (= (and d!19467 c!12481) b!79947))

(assert (= (and d!19467 (not c!12481)) b!79948))

(assert (= (and b!79948 c!12482) b!79949))

(assert (= (and b!79948 (not c!12482)) b!79950))

(declare-fun m!81223 () Bool)

(assert (=> b!79949 m!81223))

(assert (=> d!18641 d!19467))

(declare-fun d!19469 () Bool)

(assert (=> d!19469 (= (getValueByKey!136 lt!36296 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!37035 () Unit!2263)

(assert (=> d!19469 (= lt!37035 (choose!468 lt!36296 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun e!52205 () Bool)

(assert (=> d!19469 e!52205))

(declare-fun res!41683 () Bool)

(assert (=> d!19469 (=> (not res!41683) (not e!52205))))

(assert (=> d!19469 (= res!41683 (isStrictlySorted!290 lt!36296))))

(assert (=> d!19469 (= (lemmaContainsTupThenGetReturnValue!55 lt!36296 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!37035)))

(declare-fun b!79951 () Bool)

(declare-fun res!41684 () Bool)

(assert (=> b!79951 (=> (not res!41684) (not e!52205))))

(assert (=> b!79951 (= res!41684 (containsKey!140 lt!36296 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79952 () Bool)

(assert (=> b!79952 (= e!52205 (contains!748 lt!36296 (tuple2!2191 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19469 res!41683) b!79951))

(assert (= (and b!79951 res!41684) b!79952))

(assert (=> d!19469 m!78801))

(declare-fun m!81225 () Bool)

(assert (=> d!19469 m!81225))

(declare-fun m!81227 () Bool)

(assert (=> d!19469 m!81227))

(declare-fun m!81229 () Bool)

(assert (=> b!79951 m!81229))

(declare-fun m!81231 () Bool)

(assert (=> b!79952 m!81231))

(assert (=> d!18641 d!19469))

(declare-fun c!12483 () Bool)

(declare-fun b!79953 () Bool)

(assert (=> b!79953 (= c!12483 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (bvsgt (_1!1105 (h!2117 (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun e!52209 () List!1533)

(declare-fun e!52206 () List!1533)

(assert (=> b!79953 (= e!52209 e!52206)))

(declare-fun bm!7374 () Bool)

(declare-fun c!12484 () Bool)

(declare-fun call!7379 () List!1533)

(declare-fun e!52208 () List!1533)

(assert (=> bm!7374 (= call!7379 ($colon$colon!68 e!52208 (ite c!12484 (h!2117 (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (tuple2!2191 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun c!12485 () Bool)

(assert (=> bm!7374 (= c!12485 c!12484)))

(declare-fun d!19471 () Bool)

(declare-fun e!52210 () Bool)

(assert (=> d!19471 e!52210))

(declare-fun res!41685 () Bool)

(assert (=> d!19471 (=> (not res!41685) (not e!52210))))

(declare-fun lt!37036 () List!1533)

(assert (=> d!19471 (= res!41685 (isStrictlySorted!290 lt!37036))))

(declare-fun e!52207 () List!1533)

(assert (=> d!19471 (= lt!37036 e!52207)))

(assert (=> d!19471 (= c!12484 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (bvslt (_1!1105 (h!2117 (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19471 (isStrictlySorted!290 (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))))

(assert (=> d!19471 (= (insertStrictlySorted!57 (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!37036)))

(declare-fun b!79954 () Bool)

(declare-fun c!12486 () Bool)

(assert (=> b!79954 (= e!52208 (ite c!12486 (t!5183 (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (ite c!12483 (Cons!1529 (h!2117 (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (t!5183 (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))) Nil!1530)))))

(declare-fun bm!7375 () Bool)

(declare-fun call!7378 () List!1533)

(assert (=> bm!7375 (= call!7378 call!7379)))

(declare-fun b!79955 () Bool)

(assert (=> b!79955 (= e!52207 call!7379)))

(declare-fun b!79956 () Bool)

(declare-fun res!41686 () Bool)

(assert (=> b!79956 (=> (not res!41686) (not e!52210))))

(assert (=> b!79956 (= res!41686 (containsKey!140 lt!37036 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79957 () Bool)

(declare-fun call!7377 () List!1533)

(assert (=> b!79957 (= e!52206 call!7377)))

(declare-fun b!79958 () Bool)

(assert (=> b!79958 (= e!52209 call!7378)))

(declare-fun b!79959 () Bool)

(assert (=> b!79959 (= e!52207 e!52209)))

(assert (=> b!79959 (= c!12486 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780))))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun bm!7376 () Bool)

(assert (=> bm!7376 (= call!7377 call!7378)))

(declare-fun b!79960 () Bool)

(assert (=> b!79960 (= e!52208 (insertStrictlySorted!57 (t!5183 (toList!748 (+!109 lt!35777 (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!79961 () Bool)

(assert (=> b!79961 (= e!52210 (contains!748 lt!37036 (tuple2!2191 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!79962 () Bool)

(assert (=> b!79962 (= e!52206 call!7377)))

(assert (= (and d!19471 c!12484) b!79955))

(assert (= (and d!19471 (not c!12484)) b!79959))

(assert (= (and b!79959 c!12486) b!79958))

(assert (= (and b!79959 (not c!12486)) b!79953))

(assert (= (and b!79953 c!12483) b!79962))

(assert (= (and b!79953 (not c!12483)) b!79957))

(assert (= (or b!79962 b!79957) bm!7376))

(assert (= (or b!79958 bm!7376) bm!7375))

(assert (= (or b!79955 bm!7375) bm!7374))

(assert (= (and bm!7374 c!12485) b!79960))

(assert (= (and bm!7374 (not c!12485)) b!79954))

(assert (= (and d!19471 res!41685) b!79956))

(assert (= (and b!79956 res!41686) b!79961))

(declare-fun m!81233 () Bool)

(assert (=> b!79956 m!81233))

(declare-fun m!81235 () Bool)

(assert (=> b!79961 m!81235))

(declare-fun m!81237 () Bool)

(assert (=> d!19471 m!81237))

(declare-fun m!81239 () Bool)

(assert (=> d!19471 m!81239))

(declare-fun m!81241 () Bool)

(assert (=> bm!7374 m!81241))

(declare-fun m!81243 () Bool)

(assert (=> b!79960 m!81243))

(assert (=> d!18641 d!19471))

(assert (=> b!78558 d!19307))

(assert (=> b!78558 d!18691))

(declare-fun d!19473 () Bool)

(declare-fun e!52212 () Bool)

(assert (=> d!19473 e!52212))

(declare-fun res!41687 () Bool)

(assert (=> d!19473 (=> res!41687 e!52212)))

(declare-fun lt!37037 () Bool)

(assert (=> d!19473 (= res!41687 (not lt!37037))))

(declare-fun lt!37038 () Bool)

(assert (=> d!19473 (= lt!37037 lt!37038)))

(declare-fun lt!37039 () Unit!2263)

(declare-fun e!52211 () Unit!2263)

(assert (=> d!19473 (= lt!37039 e!52211)))

(declare-fun c!12487 () Bool)

(assert (=> d!19473 (= c!12487 lt!37038)))

(assert (=> d!19473 (= lt!37038 (containsKey!140 (toList!748 lt!36090) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!19473 (= (contains!745 lt!36090 #b1000000000000000000000000000000000000000000000000000000000000000) lt!37037)))

(declare-fun b!79963 () Bool)

(declare-fun lt!37040 () Unit!2263)

(assert (=> b!79963 (= e!52211 lt!37040)))

(assert (=> b!79963 (= lt!37040 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36090) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!79963 (isDefined!90 (getValueByKey!136 (toList!748 lt!36090) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79964 () Bool)

(declare-fun Unit!2340 () Unit!2263)

(assert (=> b!79964 (= e!52211 Unit!2340)))

(declare-fun b!79965 () Bool)

(assert (=> b!79965 (= e!52212 (isDefined!90 (getValueByKey!136 (toList!748 lt!36090) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!19473 c!12487) b!79963))

(assert (= (and d!19473 (not c!12487)) b!79964))

(assert (= (and d!19473 (not res!41687)) b!79965))

(declare-fun m!81245 () Bool)

(assert (=> d!19473 m!81245))

(declare-fun m!81247 () Bool)

(assert (=> b!79963 m!81247))

(declare-fun m!81249 () Bool)

(assert (=> b!79963 m!81249))

(assert (=> b!79963 m!81249))

(declare-fun m!81251 () Bool)

(assert (=> b!79963 m!81251))

(assert (=> b!79965 m!81249))

(assert (=> b!79965 m!81249))

(assert (=> b!79965 m!81251))

(assert (=> b!78296 d!19473))

(assert (=> b!78369 d!19319))

(assert (=> b!78369 d!19321))

(assert (=> d!18489 d!18847))

(assert (=> d!18523 d!18521))

(declare-fun d!19475 () Bool)

(assert (=> d!19475 (= (getValueByKey!136 lt!35881 (_1!1105 lt!35783)) (Some!141 (_2!1105 lt!35783)))))

(assert (=> d!19475 true))

(declare-fun _$22!397 () Unit!2263)

(assert (=> d!19475 (= (choose!468 lt!35881 (_1!1105 lt!35783) (_2!1105 lt!35783)) _$22!397)))

(declare-fun bs!3381 () Bool)

(assert (= bs!3381 d!19475))

(assert (=> bs!3381 m!77923))

(assert (=> d!18523 d!19475))

(declare-fun d!19477 () Bool)

(declare-fun res!41688 () Bool)

(declare-fun e!52213 () Bool)

(assert (=> d!19477 (=> res!41688 e!52213)))

(assert (=> d!19477 (= res!41688 (or ((_ is Nil!1530) lt!35881) ((_ is Nil!1530) (t!5183 lt!35881))))))

(assert (=> d!19477 (= (isStrictlySorted!290 lt!35881) e!52213)))

(declare-fun b!79966 () Bool)

(declare-fun e!52214 () Bool)

(assert (=> b!79966 (= e!52213 e!52214)))

(declare-fun res!41689 () Bool)

(assert (=> b!79966 (=> (not res!41689) (not e!52214))))

(assert (=> b!79966 (= res!41689 (bvslt (_1!1105 (h!2117 lt!35881)) (_1!1105 (h!2117 (t!5183 lt!35881)))))))

(declare-fun b!79967 () Bool)

(assert (=> b!79967 (= e!52214 (isStrictlySorted!290 (t!5183 lt!35881)))))

(assert (= (and d!19477 (not res!41688)) b!79966))

(assert (= (and b!79966 res!41689) b!79967))

(declare-fun m!81253 () Bool)

(assert (=> b!79967 m!81253))

(assert (=> d!18523 d!19477))

(declare-fun d!19479 () Bool)

(declare-fun res!41690 () Bool)

(declare-fun e!52215 () Bool)

(assert (=> d!19479 (=> res!41690 e!52215)))

(assert (=> d!19479 (= res!41690 (or ((_ is Nil!1530) lt!36407) ((_ is Nil!1530) (t!5183 lt!36407))))))

(assert (=> d!19479 (= (isStrictlySorted!290 lt!36407) e!52215)))

(declare-fun b!79968 () Bool)

(declare-fun e!52216 () Bool)

(assert (=> b!79968 (= e!52215 e!52216)))

(declare-fun res!41691 () Bool)

(assert (=> b!79968 (=> (not res!41691) (not e!52216))))

(assert (=> b!79968 (= res!41691 (bvslt (_1!1105 (h!2117 lt!36407)) (_1!1105 (h!2117 (t!5183 lt!36407)))))))

(declare-fun b!79969 () Bool)

(assert (=> b!79969 (= e!52216 (isStrictlySorted!290 (t!5183 lt!36407)))))

(assert (= (and d!19479 (not res!41690)) b!79968))

(assert (= (and b!79968 res!41691) b!79969))

(declare-fun m!81255 () Bool)

(assert (=> b!79969 m!81255))

(assert (=> d!18663 d!19479))

(assert (=> d!18663 d!19341))

(declare-fun lt!37041 () Bool)

(declare-fun d!19481 () Bool)

(assert (=> d!19481 (= lt!37041 (select (content!82 (toList!748 lt!36307)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun e!52217 () Bool)

(assert (=> d!19481 (= lt!37041 e!52217)))

(declare-fun res!41692 () Bool)

(assert (=> d!19481 (=> (not res!41692) (not e!52217))))

(assert (=> d!19481 (= res!41692 ((_ is Cons!1529) (toList!748 lt!36307)))))

(assert (=> d!19481 (= (contains!748 (toList!748 lt!36307) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!37041)))

(declare-fun b!79970 () Bool)

(declare-fun e!52218 () Bool)

(assert (=> b!79970 (= e!52217 e!52218)))

(declare-fun res!41693 () Bool)

(assert (=> b!79970 (=> res!41693 e!52218)))

(assert (=> b!79970 (= res!41693 (= (h!2117 (toList!748 lt!36307)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun b!79971 () Bool)

(assert (=> b!79971 (= e!52218 (contains!748 (t!5183 (toList!748 lt!36307)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!19481 res!41692) b!79970))

(assert (= (and b!79970 (not res!41693)) b!79971))

(declare-fun m!81257 () Bool)

(assert (=> d!19481 m!81257))

(declare-fun m!81259 () Bool)

(assert (=> d!19481 m!81259))

(declare-fun m!81261 () Bool)

(assert (=> b!79971 m!81261))

(assert (=> b!78605 d!19481))

(declare-fun d!19483 () Bool)

(assert (=> d!19483 (= (get!1192 (getValueByKey!136 (toList!748 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35972)) (v!2598 (getValueByKey!136 (toList!748 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35972)))))

(assert (=> d!18559 d!19483))

(declare-fun b!79973 () Bool)

(declare-fun e!52219 () Option!142)

(declare-fun e!52220 () Option!142)

(assert (=> b!79973 (= e!52219 e!52220)))

(declare-fun c!12489 () Bool)

(assert (=> b!79973 (= c!12489 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (not (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))) lt!35972))))))

(declare-fun b!79972 () Bool)

(assert (=> b!79972 (= e!52219 (Some!141 (_2!1105 (h!2117 (toList!748 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))))))))

(declare-fun b!79974 () Bool)

(assert (=> b!79974 (= e!52220 (getValueByKey!136 (t!5183 (toList!748 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) lt!35972))))

(declare-fun b!79975 () Bool)

(assert (=> b!79975 (= e!52220 None!140)))

(declare-fun d!19485 () Bool)

(declare-fun c!12488 () Bool)

(assert (=> d!19485 (= c!12488 (and ((_ is Cons!1529) (toList!748 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))))) (= (_1!1105 (h!2117 (toList!748 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))))) lt!35972)))))

(assert (=> d!19485 (= (getValueByKey!136 (toList!748 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!35972) e!52219)))

(assert (= (and d!19485 c!12488) b!79972))

(assert (= (and d!19485 (not c!12488)) b!79973))

(assert (= (and b!79973 c!12489) b!79974))

(assert (= (and b!79973 (not c!12489)) b!79975))

(declare-fun m!81263 () Bool)

(assert (=> b!79974 m!81263))

(assert (=> d!18559 d!19485))

(declare-fun d!19487 () Bool)

(declare-fun res!41694 () Bool)

(declare-fun e!52221 () Bool)

(assert (=> d!19487 (=> res!41694 e!52221)))

(assert (=> d!19487 (= res!41694 (and ((_ is Cons!1529) (toList!748 lt!35899)) (= (_1!1105 (h!2117 (toList!748 lt!35899))) (_1!1105 lt!35784))))))

(assert (=> d!19487 (= (containsKey!140 (toList!748 lt!35899) (_1!1105 lt!35784)) e!52221)))

(declare-fun b!79976 () Bool)

(declare-fun e!52222 () Bool)

(assert (=> b!79976 (= e!52221 e!52222)))

(declare-fun res!41695 () Bool)

(assert (=> b!79976 (=> (not res!41695) (not e!52222))))

(assert (=> b!79976 (= res!41695 (and (or (not ((_ is Cons!1529) (toList!748 lt!35899))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35899))) (_1!1105 lt!35784))) ((_ is Cons!1529) (toList!748 lt!35899)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35899))) (_1!1105 lt!35784))))))

(declare-fun b!79977 () Bool)

(assert (=> b!79977 (= e!52222 (containsKey!140 (t!5183 (toList!748 lt!35899)) (_1!1105 lt!35784)))))

(assert (= (and d!19487 (not res!41694)) b!79976))

(assert (= (and b!79976 res!41695) b!79977))

(declare-fun m!81265 () Bool)

(assert (=> b!79977 m!81265))

(assert (=> d!18669 d!19487))

(assert (=> d!18697 d!18847))

(declare-fun d!19489 () Bool)

(declare-fun lt!37042 () Bool)

(assert (=> d!19489 (= lt!37042 (select (content!82 lt!36407) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun e!52223 () Bool)

(assert (=> d!19489 (= lt!37042 e!52223)))

(declare-fun res!41696 () Bool)

(assert (=> d!19489 (=> (not res!41696) (not e!52223))))

(assert (=> d!19489 (= res!41696 ((_ is Cons!1529) lt!36407))))

(assert (=> d!19489 (= (contains!748 lt!36407 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))) lt!37042)))

(declare-fun b!79978 () Bool)

(declare-fun e!52224 () Bool)

(assert (=> b!79978 (= e!52223 e!52224)))

(declare-fun res!41697 () Bool)

(assert (=> b!79978 (=> res!41697 e!52224)))

(assert (=> b!79978 (= res!41697 (= (h!2117 lt!36407) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!79979 () Bool)

(assert (=> b!79979 (= e!52224 (contains!748 (t!5183 lt!36407) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(assert (= (and d!19489 res!41696) b!79978))

(assert (= (and b!79978 (not res!41697)) b!79979))

(declare-fun m!81267 () Bool)

(assert (=> d!19489 m!81267))

(declare-fun m!81269 () Bool)

(assert (=> d!19489 m!81269))

(declare-fun m!81271 () Bool)

(assert (=> b!79979 m!81271))

(assert (=> b!78676 d!19489))

(declare-fun d!19491 () Bool)

(assert (=> d!19491 (= ($colon$colon!68 e!51274 (ite c!12038 (h!2117 (toList!748 lt!35777)) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783)))) (Cons!1529 (ite c!12038 (h!2117 (toList!748 lt!35777)) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))) e!51274))))

(assert (=> bm!7193 d!19491))

(declare-fun d!19493 () Bool)

(declare-fun res!41698 () Bool)

(declare-fun e!52225 () Bool)

(assert (=> d!19493 (=> res!41698 e!52225)))

(assert (=> d!19493 (= res!41698 (and ((_ is Cons!1529) (toList!748 lt!35969)) (= (_1!1105 (h!2117 (toList!748 lt!35969))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!19493 (= (containsKey!140 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000) e!52225)))

(declare-fun b!79980 () Bool)

(declare-fun e!52226 () Bool)

(assert (=> b!79980 (= e!52225 e!52226)))

(declare-fun res!41699 () Bool)

(assert (=> b!79980 (=> (not res!41699) (not e!52226))))

(assert (=> b!79980 (= res!41699 (and (or (not ((_ is Cons!1529) (toList!748 lt!35969))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35969))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1529) (toList!748 lt!35969)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35969))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79981 () Bool)

(assert (=> b!79981 (= e!52226 (containsKey!140 (t!5183 (toList!748 lt!35969)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19493 (not res!41698)) b!79980))

(assert (= (and b!79980 res!41699) b!79981))

(declare-fun m!81273 () Bool)

(assert (=> b!79981 m!81273))

(assert (=> d!18531 d!19493))

(assert (=> b!78326 d!18717))

(declare-fun d!19495 () Bool)

(declare-fun res!41700 () Bool)

(declare-fun e!52227 () Bool)

(assert (=> d!19495 (=> res!41700 e!52227)))

(assert (=> d!19495 (= res!41700 (and ((_ is Cons!1529) (toList!748 call!7149)) (= (_1!1105 (h!2117 (toList!748 call!7149))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(assert (=> d!19495 (= (containsKey!140 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) e!52227)))

(declare-fun b!79982 () Bool)

(declare-fun e!52228 () Bool)

(assert (=> b!79982 (= e!52227 e!52228)))

(declare-fun res!41701 () Bool)

(assert (=> b!79982 (=> (not res!41701) (not e!52228))))

(assert (=> b!79982 (= res!41701 (and (or (not ((_ is Cons!1529) (toList!748 call!7149))) (bvsle (_1!1105 (h!2117 (toList!748 call!7149))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))) ((_ is Cons!1529) (toList!748 call!7149)) (bvslt (_1!1105 (h!2117 (toList!748 call!7149))) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))))

(declare-fun b!79983 () Bool)

(assert (=> b!79983 (= e!52228 (containsKey!140 (t!5183 (toList!748 call!7149)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!19495 (not res!41700)) b!79982))

(assert (= (and b!79982 res!41701) b!79983))

(assert (=> b!79983 m!77749))

(declare-fun m!81275 () Bool)

(assert (=> b!79983 m!81275))

(assert (=> d!18627 d!19495))

(declare-fun d!19497 () Bool)

(assert (=> d!19497 (contains!745 (getCurrentListMap!435 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))

(assert (=> d!19497 true))

(declare-fun _$16!99 () Unit!2263)

(assert (=> d!19497 (= (choose!466 (_keys!3932 newMap!16) lt!36057 (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (index!3135 lt!36063) (defaultEntry!2272 newMap!16)) _$16!99)))

(declare-fun bs!3382 () Bool)

(assert (= bs!3382 d!19497))

(assert (=> bs!3382 m!78345))

(assert (=> bs!3382 m!78131))

(assert (=> bs!3382 m!78345))

(assert (=> bs!3382 m!78131))

(assert (=> bs!3382 m!78347))

(assert (=> d!18509 d!19497))

(assert (=> d!18509 d!18847))

(declare-fun lt!37043 () Bool)

(declare-fun d!19499 () Bool)

(assert (=> d!19499 (= lt!37043 (select (content!82 (toList!748 lt!36241)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun e!52229 () Bool)

(assert (=> d!19499 (= lt!37043 e!52229)))

(declare-fun res!41702 () Bool)

(assert (=> d!19499 (=> (not res!41702) (not e!52229))))

(assert (=> d!19499 (= res!41702 ((_ is Cons!1529) (toList!748 lt!36241)))))

(assert (=> d!19499 (= (contains!748 (toList!748 lt!36241) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)) lt!37043)))

(declare-fun b!79984 () Bool)

(declare-fun e!52230 () Bool)

(assert (=> b!79984 (= e!52229 e!52230)))

(declare-fun res!41703 () Bool)

(assert (=> b!79984 (=> res!41703 e!52230)))

(assert (=> b!79984 (= res!41703 (= (h!2117 (toList!748 lt!36241)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(declare-fun b!79985 () Bool)

(assert (=> b!79985 (= e!52230 (contains!748 (t!5183 (toList!748 lt!36241)) (tuple2!2191 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) lt!35780)))))

(assert (= (and d!19499 res!41702) b!79984))

(assert (= (and b!79984 (not res!41703)) b!79985))

(declare-fun m!81277 () Bool)

(assert (=> d!19499 m!81277))

(declare-fun m!81279 () Bool)

(assert (=> d!19499 m!81279))

(declare-fun m!81281 () Bool)

(assert (=> b!79985 m!81281))

(assert (=> b!78526 d!19499))

(declare-fun b!79987 () Bool)

(declare-fun e!52231 () Option!142)

(declare-fun e!52232 () Option!142)

(assert (=> b!79987 (= e!52231 e!52232)))

(declare-fun c!12491 () Bool)

(assert (=> b!79987 (= c!12491 (and ((_ is Cons!1529) (toList!748 lt!36136)) (not (= (_1!1105 (h!2117 (toList!748 lt!36136))) (_1!1105 (tuple2!2191 lt!35870 lt!35871))))))))

(declare-fun b!79986 () Bool)

(assert (=> b!79986 (= e!52231 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36136)))))))

(declare-fun b!79988 () Bool)

(assert (=> b!79988 (= e!52232 (getValueByKey!136 (t!5183 (toList!748 lt!36136)) (_1!1105 (tuple2!2191 lt!35870 lt!35871))))))

(declare-fun b!79989 () Bool)

(assert (=> b!79989 (= e!52232 None!140)))

(declare-fun d!19501 () Bool)

(declare-fun c!12490 () Bool)

(assert (=> d!19501 (= c!12490 (and ((_ is Cons!1529) (toList!748 lt!36136)) (= (_1!1105 (h!2117 (toList!748 lt!36136))) (_1!1105 (tuple2!2191 lt!35870 lt!35871)))))))

(assert (=> d!19501 (= (getValueByKey!136 (toList!748 lt!36136) (_1!1105 (tuple2!2191 lt!35870 lt!35871))) e!52231)))

(assert (= (and d!19501 c!12490) b!79986))

(assert (= (and d!19501 (not c!12490)) b!79987))

(assert (= (and b!79987 c!12491) b!79988))

(assert (= (and b!79987 (not c!12491)) b!79989))

(declare-fun m!81283 () Bool)

(assert (=> b!79988 m!81283))

(assert (=> b!78343 d!19501))

(declare-fun d!19503 () Bool)

(declare-fun e!52233 () Bool)

(assert (=> d!19503 e!52233))

(declare-fun res!41704 () Bool)

(assert (=> d!19503 (=> (not res!41704) (not e!52233))))

(declare-fun lt!37047 () ListLongMap!1465)

(assert (=> d!19503 (= res!41704 (contains!745 lt!37047 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(declare-fun lt!37044 () List!1533)

(assert (=> d!19503 (= lt!37047 (ListLongMap!1466 lt!37044))))

(declare-fun lt!37046 () Unit!2263)

(declare-fun lt!37045 () Unit!2263)

(assert (=> d!19503 (= lt!37046 lt!37045)))

(assert (=> d!19503 (= (getValueByKey!136 lt!37044 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(assert (=> d!19503 (= lt!37045 (lemmaContainsTupThenGetReturnValue!55 lt!37044 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(assert (=> d!19503 (= lt!37044 (insertStrictlySorted!57 (toList!748 call!7217) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))))))

(assert (=> d!19503 (= (+!109 call!7217 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))) lt!37047)))

(declare-fun b!79990 () Bool)

(declare-fun res!41705 () Bool)

(assert (=> b!79990 (=> (not res!41705) (not e!52233))))

(assert (=> b!79990 (= res!41705 (= (getValueByKey!136 (toList!748 lt!37047) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16))))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))))))

(declare-fun b!79991 () Bool)

(assert (=> b!79991 (= e!52233 (contains!748 (toList!748 lt!37047) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!11979 (ite c!11986 (minValue!2170 newMap!16) lt!35780) (minValue!2170 newMap!16)))))))

(assert (= (and d!19503 res!41704) b!79990))

(assert (= (and b!79990 res!41705) b!79991))

(declare-fun m!81285 () Bool)

(assert (=> d!19503 m!81285))

(declare-fun m!81287 () Bool)

(assert (=> d!19503 m!81287))

(declare-fun m!81289 () Bool)

(assert (=> d!19503 m!81289))

(declare-fun m!81291 () Bool)

(assert (=> d!19503 m!81291))

(declare-fun m!81293 () Bool)

(assert (=> b!79990 m!81293))

(declare-fun m!81295 () Bool)

(assert (=> b!79991 m!81295))

(assert (=> b!78575 d!19503))

(assert (=> d!18479 d!18425))

(assert (=> b!78581 d!18717))

(declare-fun d!19505 () Bool)

(declare-fun c!12492 () Bool)

(assert (=> d!19505 (= c!12492 ((_ is Nil!1530) (toList!748 lt!35911)))))

(declare-fun e!52234 () (InoxSet tuple2!2190))

(assert (=> d!19505 (= (content!82 (toList!748 lt!35911)) e!52234)))

(declare-fun b!79992 () Bool)

(assert (=> b!79992 (= e!52234 ((as const (Array tuple2!2190 Bool)) false))))

(declare-fun b!79993 () Bool)

(assert (=> b!79993 (= e!52234 ((_ map or) (store ((as const (Array tuple2!2190 Bool)) false) (h!2117 (toList!748 lt!35911)) true) (content!82 (t!5183 (toList!748 lt!35911)))))))

(assert (= (and d!19505 c!12492) b!79992))

(assert (= (and d!19505 (not c!12492)) b!79993))

(declare-fun m!81297 () Bool)

(assert (=> b!79993 m!81297))

(declare-fun m!81299 () Bool)

(assert (=> b!79993 m!81299))

(assert (=> d!18505 d!19505))

(assert (=> d!18583 d!18421))

(declare-fun d!19507 () Bool)

(declare-fun e!52236 () Bool)

(assert (=> d!19507 e!52236))

(declare-fun res!41706 () Bool)

(assert (=> d!19507 (=> res!41706 e!52236)))

(declare-fun lt!37048 () Bool)

(assert (=> d!19507 (= res!41706 (not lt!37048))))

(declare-fun lt!37049 () Bool)

(assert (=> d!19507 (= lt!37048 lt!37049)))

(declare-fun lt!37050 () Unit!2263)

(declare-fun e!52235 () Unit!2263)

(assert (=> d!19507 (= lt!37050 e!52235)))

(declare-fun c!12493 () Bool)

(assert (=> d!19507 (= c!12493 lt!37049)))

(assert (=> d!19507 (= lt!37049 (containsKey!140 (toList!748 lt!36090) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!19507 (= (contains!745 lt!36090 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!37048)))

(declare-fun b!79994 () Bool)

(declare-fun lt!37051 () Unit!2263)

(assert (=> b!79994 (= e!52235 lt!37051)))

(assert (=> b!79994 (= lt!37051 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36090) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!79994 (isDefined!90 (getValueByKey!136 (toList!748 lt!36090) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!79995 () Bool)

(declare-fun Unit!2341 () Unit!2263)

(assert (=> b!79995 (= e!52235 Unit!2341)))

(declare-fun b!79996 () Bool)

(assert (=> b!79996 (= e!52236 (isDefined!90 (getValueByKey!136 (toList!748 lt!36090) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!19507 c!12493) b!79994))

(assert (= (and d!19507 (not c!12493)) b!79995))

(assert (= (and d!19507 (not res!41706)) b!79996))

(assert (=> d!19507 m!78185))

(declare-fun m!81301 () Bool)

(assert (=> d!19507 m!81301))

(assert (=> b!79994 m!78185))

(declare-fun m!81303 () Bool)

(assert (=> b!79994 m!81303))

(assert (=> b!79994 m!78185))

(declare-fun m!81305 () Bool)

(assert (=> b!79994 m!81305))

(assert (=> b!79994 m!81305))

(declare-fun m!81307 () Bool)

(assert (=> b!79994 m!81307))

(assert (=> b!79996 m!78185))

(assert (=> b!79996 m!81305))

(assert (=> b!79996 m!81305))

(assert (=> b!79996 m!81307))

(assert (=> b!78290 d!19507))

(declare-fun d!19509 () Bool)

(declare-fun lt!37052 () Bool)

(assert (=> d!19509 (= lt!37052 (select (content!82 (t!5183 (toList!748 lt!35884))) lt!35783))))

(declare-fun e!52237 () Bool)

(assert (=> d!19509 (= lt!37052 e!52237)))

(declare-fun res!41707 () Bool)

(assert (=> d!19509 (=> (not res!41707) (not e!52237))))

(assert (=> d!19509 (= res!41707 ((_ is Cons!1529) (t!5183 (toList!748 lt!35884))))))

(assert (=> d!19509 (= (contains!748 (t!5183 (toList!748 lt!35884)) lt!35783) lt!37052)))

(declare-fun b!79997 () Bool)

(declare-fun e!52238 () Bool)

(assert (=> b!79997 (= e!52237 e!52238)))

(declare-fun res!41708 () Bool)

(assert (=> b!79997 (=> res!41708 e!52238)))

(assert (=> b!79997 (= res!41708 (= (h!2117 (t!5183 (toList!748 lt!35884))) lt!35783))))

(declare-fun b!79998 () Bool)

(assert (=> b!79998 (= e!52238 (contains!748 (t!5183 (t!5183 (toList!748 lt!35884))) lt!35783))))

(assert (= (and d!19509 res!41707) b!79997))

(assert (= (and b!79997 (not res!41708)) b!79998))

(declare-fun m!81309 () Bool)

(assert (=> d!19509 m!81309))

(declare-fun m!81311 () Bool)

(assert (=> d!19509 m!81311))

(declare-fun m!81313 () Bool)

(assert (=> b!79998 m!81313))

(assert (=> b!78530 d!19509))

(declare-fun d!19511 () Bool)

(declare-fun lt!37053 () Bool)

(assert (=> d!19511 (= lt!37053 (select (content!82 (t!5183 (toList!748 lt!35895))) lt!35783))))

(declare-fun e!52239 () Bool)

(assert (=> d!19511 (= lt!37053 e!52239)))

(declare-fun res!41709 () Bool)

(assert (=> d!19511 (=> (not res!41709) (not e!52239))))

(assert (=> d!19511 (= res!41709 ((_ is Cons!1529) (t!5183 (toList!748 lt!35895))))))

(assert (=> d!19511 (= (contains!748 (t!5183 (toList!748 lt!35895)) lt!35783) lt!37053)))

(declare-fun b!79999 () Bool)

(declare-fun e!52240 () Bool)

(assert (=> b!79999 (= e!52239 e!52240)))

(declare-fun res!41710 () Bool)

(assert (=> b!79999 (=> res!41710 e!52240)))

(assert (=> b!79999 (= res!41710 (= (h!2117 (t!5183 (toList!748 lt!35895))) lt!35783))))

(declare-fun b!80000 () Bool)

(assert (=> b!80000 (= e!52240 (contains!748 (t!5183 (t!5183 (toList!748 lt!35895))) lt!35783))))

(assert (= (and d!19511 res!41709) b!79999))

(assert (= (and b!79999 (not res!41710)) b!80000))

(declare-fun m!81315 () Bool)

(assert (=> d!19511 m!81315))

(declare-fun m!81317 () Bool)

(assert (=> d!19511 m!81317))

(declare-fun m!81319 () Bool)

(assert (=> b!80000 m!81319))

(assert (=> b!78447 d!19511))

(declare-fun d!19513 () Bool)

(declare-fun res!41711 () Bool)

(declare-fun e!52241 () Bool)

(assert (=> d!19513 (=> res!41711 e!52241)))

(assert (=> d!19513 (= res!41711 (and ((_ is Cons!1529) (toList!748 lt!35907)) (= (_1!1105 (h!2117 (toList!748 lt!35907))) (_1!1105 lt!35784))))))

(assert (=> d!19513 (= (containsKey!140 (toList!748 lt!35907) (_1!1105 lt!35784)) e!52241)))

(declare-fun b!80001 () Bool)

(declare-fun e!52242 () Bool)

(assert (=> b!80001 (= e!52241 e!52242)))

(declare-fun res!41712 () Bool)

(assert (=> b!80001 (=> (not res!41712) (not e!52242))))

(assert (=> b!80001 (= res!41712 (and (or (not ((_ is Cons!1529) (toList!748 lt!35907))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35907))) (_1!1105 lt!35784))) ((_ is Cons!1529) (toList!748 lt!35907)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35907))) (_1!1105 lt!35784))))))

(declare-fun b!80002 () Bool)

(assert (=> b!80002 (= e!52242 (containsKey!140 (t!5183 (toList!748 lt!35907)) (_1!1105 lt!35784)))))

(assert (= (and d!19513 (not res!41711)) b!80001))

(assert (= (and b!80001 res!41712) b!80002))

(declare-fun m!81321 () Bool)

(assert (=> b!80002 m!81321))

(assert (=> d!18571 d!19513))

(declare-fun d!19515 () Bool)

(assert (=> d!19515 (= (apply!79 lt!36286 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!136 (toList!748 lt!36286) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3383 () Bool)

(assert (= bs!3383 d!19515))

(assert (=> bs!3383 m!81041))

(assert (=> bs!3383 m!81041))

(declare-fun m!81323 () Bool)

(assert (=> bs!3383 m!81323))

(assert (=> b!78593 d!19515))

(declare-fun d!19517 () Bool)

(assert (=> d!19517 (= (apply!79 lt!36448 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!136 (toList!748 lt!36448) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3384 () Bool)

(assert (= bs!3384 d!19517))

(assert (=> bs!3384 m!80611))

(assert (=> bs!3384 m!80611))

(declare-fun m!81325 () Bool)

(assert (=> bs!3384 m!81325))

(assert (=> b!78751 d!19517))

(assert (=> d!18569 d!18847))

(declare-fun b!80003 () Bool)

(declare-fun res!41714 () Bool)

(declare-fun e!52243 () Bool)

(assert (=> b!80003 (=> (not res!41714) (not e!52243))))

(assert (=> b!80003 (= res!41714 (and (= (size!2136 (_values!2255 (v!2594 (underlying!281 thiss!992)))) (bvadd (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000001)) (= (size!2135 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (size!2136 (_values!2255 (v!2594 (underlying!281 thiss!992))))) (bvsge (_size!415 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!415 (v!2594 (underlying!281 thiss!992))) (bvadd (mask!6268 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!19519 () Bool)

(declare-fun res!41715 () Bool)

(assert (=> d!19519 (=> (not res!41715) (not e!52243))))

(assert (=> d!19519 (= res!41715 (validMask!0 (mask!6268 (v!2594 (underlying!281 thiss!992)))))))

(assert (=> d!19519 (= (simpleValid!54 (v!2594 (underlying!281 thiss!992))) e!52243)))

(declare-fun b!80006 () Bool)

(assert (=> b!80006 (= e!52243 (and (bvsge (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!415 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!80004 () Bool)

(declare-fun res!41713 () Bool)

(assert (=> b!80004 (=> (not res!41713) (not e!52243))))

(assert (=> b!80004 (= res!41713 (bvsge (size!2139 (v!2594 (underlying!281 thiss!992))) (_size!415 (v!2594 (underlying!281 thiss!992)))))))

(declare-fun b!80005 () Bool)

(declare-fun res!41716 () Bool)

(assert (=> b!80005 (=> (not res!41716) (not e!52243))))

(assert (=> b!80005 (= res!41716 (= (size!2139 (v!2594 (underlying!281 thiss!992))) (bvadd (_size!415 (v!2594 (underlying!281 thiss!992))) (bvsdiv (bvadd (extraKeys!2123 (v!2594 (underlying!281 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!19519 res!41715) b!80003))

(assert (= (and b!80003 res!41714) b!80004))

(assert (= (and b!80004 res!41713) b!80005))

(assert (= (and b!80005 res!41716) b!80006))

(assert (=> d!19519 m!77777))

(declare-fun m!81327 () Bool)

(assert (=> b!80004 m!81327))

(assert (=> b!80005 m!81327))

(assert (=> d!18477 d!19519))

(declare-fun d!19521 () Bool)

(declare-fun res!41717 () Bool)

(declare-fun e!52244 () Bool)

(assert (=> d!19521 (=> res!41717 e!52244)))

(assert (=> d!19521 (= res!41717 (and ((_ is Cons!1529) lt!36419) (= (_1!1105 (h!2117 lt!36419)) (_1!1105 lt!35784))))))

(assert (=> d!19521 (= (containsKey!140 lt!36419 (_1!1105 lt!35784)) e!52244)))

(declare-fun b!80007 () Bool)

(declare-fun e!52245 () Bool)

(assert (=> b!80007 (= e!52244 e!52245)))

(declare-fun res!41718 () Bool)

(assert (=> b!80007 (=> (not res!41718) (not e!52245))))

(assert (=> b!80007 (= res!41718 (and (or (not ((_ is Cons!1529) lt!36419)) (bvsle (_1!1105 (h!2117 lt!36419)) (_1!1105 lt!35784))) ((_ is Cons!1529) lt!36419) (bvslt (_1!1105 (h!2117 lt!36419)) (_1!1105 lt!35784))))))

(declare-fun b!80008 () Bool)

(assert (=> b!80008 (= e!52245 (containsKey!140 (t!5183 lt!36419) (_1!1105 lt!35784)))))

(assert (= (and d!19521 (not res!41717)) b!80007))

(assert (= (and b!80007 res!41718) b!80008))

(declare-fun m!81329 () Bool)

(assert (=> b!80008 m!81329))

(assert (=> b!78696 d!19521))

(declare-fun d!19523 () Bool)

(assert (=> d!19523 (isDefined!90 (getValueByKey!136 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))

(declare-fun lt!37054 () Unit!2263)

(assert (=> d!19523 (= lt!37054 (choose!471 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))

(declare-fun e!52246 () Bool)

(assert (=> d!19523 e!52246))

(declare-fun res!41719 () Bool)

(assert (=> d!19523 (=> (not res!41719) (not e!52246))))

(assert (=> d!19523 (= res!41719 (isStrictlySorted!290 (toList!748 e!51143)))))

(assert (=> d!19523 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))) lt!37054)))

(declare-fun b!80009 () Bool)

(assert (=> b!80009 (= e!52246 (containsKey!140 (toList!748 e!51143) (ite c!11983 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (select (arr!1894 (_keys!3932 newMap!16)) (index!3135 lt!36063)))))))

(assert (= (and d!19523 res!41719) b!80009))

(assert (=> d!19523 m!78989))

(assert (=> d!19523 m!78989))

(assert (=> d!19523 m!78991))

(declare-fun m!81331 () Bool)

(assert (=> d!19523 m!81331))

(declare-fun m!81333 () Bool)

(assert (=> d!19523 m!81333))

(assert (=> b!80009 m!78985))

(assert (=> b!78721 d!19523))

(assert (=> b!78721 d!18867))

(assert (=> b!78721 d!18869))

(assert (=> d!18471 d!18621))

(declare-fun b!80026 () Bool)

(declare-fun e!52256 () Bool)

(declare-fun e!52258 () Bool)

(assert (=> b!80026 (= e!52256 e!52258)))

(declare-fun c!12498 () Bool)

(declare-fun lt!37057 () SeekEntryResult!250)

(assert (=> b!80026 (= c!12498 ((_ is MissingVacant!250) lt!37057))))

(declare-fun b!80027 () Bool)

(declare-fun res!41728 () Bool)

(assert (=> b!80027 (= res!41728 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3134 lt!37057)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52255 () Bool)

(assert (=> b!80027 (=> (not res!41728) (not e!52255))))

(declare-fun b!80028 () Bool)

(assert (=> b!80028 (= e!52256 e!52255)))

(declare-fun res!41729 () Bool)

(declare-fun call!7385 () Bool)

(assert (=> b!80028 (= res!41729 call!7385)))

(assert (=> b!80028 (=> (not res!41729) (not e!52255))))

(declare-fun b!80029 () Bool)

(declare-fun e!52257 () Bool)

(declare-fun call!7384 () Bool)

(assert (=> b!80029 (= e!52257 (not call!7384))))

(declare-fun bm!7381 () Bool)

(declare-fun c!12499 () Bool)

(assert (=> bm!7381 (= call!7385 (inRange!0 (ite c!12499 (index!3134 lt!37057) (index!3137 lt!37057)) (mask!6268 newMap!16)))))

(declare-fun b!80030 () Bool)

(declare-fun res!41730 () Bool)

(assert (=> b!80030 (=> (not res!41730) (not e!52257))))

(assert (=> b!80030 (= res!41730 call!7385)))

(assert (=> b!80030 (= e!52258 e!52257)))

(declare-fun b!80031 () Bool)

(assert (=> b!80031 (= e!52255 (not call!7384))))

(declare-fun b!80032 () Bool)

(declare-fun res!41731 () Bool)

(assert (=> b!80032 (=> (not res!41731) (not e!52257))))

(assert (=> b!80032 (= res!41731 (= (select (arr!1894 (_keys!3932 newMap!16)) (index!3137 lt!37057)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!19525 () Bool)

(assert (=> d!19525 e!52256))

(assert (=> d!19525 (= c!12499 ((_ is MissingZero!250) lt!37057))))

(assert (=> d!19525 (= lt!37057 (seekEntryOrOpen!0 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (_keys!3932 newMap!16) (mask!6268 newMap!16)))))

(assert (=> d!19525 true))

(declare-fun _$34!818 () Unit!2263)

(assert (=> d!19525 (= (choose!463 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) (defaultEntry!2272 newMap!16)) _$34!818)))

(declare-fun bm!7382 () Bool)

(assert (=> bm!7382 (= call!7384 (arrayContainsKey!0 (_keys!3932 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!80033 () Bool)

(assert (=> b!80033 (= e!52258 ((_ is Undefined!250) lt!37057))))

(assert (= (and d!19525 c!12499) b!80028))

(assert (= (and d!19525 (not c!12499)) b!80026))

(assert (= (and b!80028 res!41729) b!80027))

(assert (= (and b!80027 res!41728) b!80031))

(assert (= (and b!80026 c!12498) b!80030))

(assert (= (and b!80026 (not c!12498)) b!80033))

(assert (= (and b!80030 res!41730) b!80032))

(assert (= (and b!80032 res!41731) b!80029))

(assert (= (or b!80028 b!80030) bm!7381))

(assert (= (or b!80031 b!80029) bm!7382))

(declare-fun m!81335 () Bool)

(assert (=> bm!7381 m!81335))

(assert (=> d!19525 m!77749))

(assert (=> d!19525 m!78085))

(assert (=> bm!7382 m!77749))

(assert (=> bm!7382 m!78127))

(declare-fun m!81337 () Bool)

(assert (=> b!80032 m!81337))

(declare-fun m!81339 () Bool)

(assert (=> b!80027 m!81339))

(assert (=> d!18471 d!19525))

(assert (=> d!18471 d!18847))

(declare-fun d!19527 () Bool)

(assert (=> d!19527 (= (isEmpty!333 (toList!748 lt!35867)) ((_ is Nil!1530) (toList!748 lt!35867)))))

(assert (=> d!18685 d!19527))

(declare-fun d!19529 () Bool)

(declare-fun lt!37058 () Bool)

(assert (=> d!19529 (= lt!37058 (select (content!82 (t!5183 (toList!748 lt!35911))) lt!35788))))

(declare-fun e!52259 () Bool)

(assert (=> d!19529 (= lt!37058 e!52259)))

(declare-fun res!41732 () Bool)

(assert (=> d!19529 (=> (not res!41732) (not e!52259))))

(assert (=> d!19529 (= res!41732 ((_ is Cons!1529) (t!5183 (toList!748 lt!35911))))))

(assert (=> d!19529 (= (contains!748 (t!5183 (toList!748 lt!35911)) lt!35788) lt!37058)))

(declare-fun b!80034 () Bool)

(declare-fun e!52260 () Bool)

(assert (=> b!80034 (= e!52259 e!52260)))

(declare-fun res!41733 () Bool)

(assert (=> b!80034 (=> res!41733 e!52260)))

(assert (=> b!80034 (= res!41733 (= (h!2117 (t!5183 (toList!748 lt!35911))) lt!35788))))

(declare-fun b!80035 () Bool)

(assert (=> b!80035 (= e!52260 (contains!748 (t!5183 (t!5183 (toList!748 lt!35911))) lt!35788))))

(assert (= (and d!19529 res!41732) b!80034))

(assert (= (and b!80034 (not res!41733)) b!80035))

(assert (=> d!19529 m!81299))

(declare-fun m!81341 () Bool)

(assert (=> d!19529 m!81341))

(declare-fun m!81343 () Bool)

(assert (=> b!80035 m!81343))

(assert (=> b!78354 d!19529))

(declare-fun d!19531 () Bool)

(assert (=> d!19531 (= (apply!79 lt!36112 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!136 (toList!748 lt!36112) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3385 () Bool)

(assert (= bs!3385 d!19531))

(assert (=> bs!3385 m!80007))

(assert (=> bs!3385 m!80007))

(declare-fun m!81345 () Bool)

(assert (=> bs!3385 m!81345))

(assert (=> b!78331 d!19531))

(declare-fun d!19533 () Bool)

(assert (=> d!19533 (= (apply!79 (+!109 lt!35958 (tuple2!2191 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35972) (apply!79 lt!35958 lt!35972))))

(assert (=> d!19533 true))

(declare-fun _$34!819 () Unit!2263)

(assert (=> d!19533 (= (choose!469 lt!35958 lt!35960 (minValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35972) _$34!819)))

(declare-fun bs!3386 () Bool)

(assert (= bs!3386 d!19533))

(assert (=> bs!3386 m!78053))

(assert (=> bs!3386 m!78053))

(assert (=> bs!3386 m!78055))

(assert (=> bs!3386 m!78041))

(assert (=> d!18553 d!19533))

(declare-fun d!19535 () Bool)

(declare-fun e!52262 () Bool)

(assert (=> d!19535 e!52262))

(declare-fun res!41734 () Bool)

(assert (=> d!19535 (=> res!41734 e!52262)))

(declare-fun lt!37059 () Bool)

(assert (=> d!19535 (= res!41734 (not lt!37059))))

(declare-fun lt!37060 () Bool)

(assert (=> d!19535 (= lt!37059 lt!37060)))

(declare-fun lt!37061 () Unit!2263)

(declare-fun e!52261 () Unit!2263)

(assert (=> d!19535 (= lt!37061 e!52261)))

(declare-fun c!12500 () Bool)

(assert (=> d!19535 (= c!12500 lt!37060)))

(assert (=> d!19535 (= lt!37060 (containsKey!140 (toList!748 lt!35958) lt!35972))))

(assert (=> d!19535 (= (contains!745 lt!35958 lt!35972) lt!37059)))

(declare-fun b!80036 () Bool)

(declare-fun lt!37062 () Unit!2263)

(assert (=> b!80036 (= e!52261 lt!37062)))

(assert (=> b!80036 (= lt!37062 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35958) lt!35972))))

(assert (=> b!80036 (isDefined!90 (getValueByKey!136 (toList!748 lt!35958) lt!35972))))

(declare-fun b!80037 () Bool)

(declare-fun Unit!2342 () Unit!2263)

(assert (=> b!80037 (= e!52261 Unit!2342)))

(declare-fun b!80038 () Bool)

(assert (=> b!80038 (= e!52262 (isDefined!90 (getValueByKey!136 (toList!748 lt!35958) lt!35972)))))

(assert (= (and d!19535 c!12500) b!80036))

(assert (= (and d!19535 (not c!12500)) b!80037))

(assert (= (and d!19535 (not res!41734)) b!80038))

(declare-fun m!81347 () Bool)

(assert (=> d!19535 m!81347))

(declare-fun m!81349 () Bool)

(assert (=> b!80036 m!81349))

(assert (=> b!80036 m!78459))

(assert (=> b!80036 m!78459))

(declare-fun m!81351 () Bool)

(assert (=> b!80036 m!81351))

(assert (=> b!80038 m!78459))

(assert (=> b!80038 m!78459))

(assert (=> b!80038 m!81351))

(assert (=> d!18553 d!19535))

(assert (=> d!18553 d!18549))

(assert (=> d!18553 d!18559))

(assert (=> d!18553 d!18561))

(declare-fun d!19537 () Bool)

(declare-fun lt!37063 () Bool)

(assert (=> d!19537 (= lt!37063 (select (content!82 lt!36217) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun e!52263 () Bool)

(assert (=> d!19537 (= lt!37063 e!52263)))

(declare-fun res!41735 () Bool)

(assert (=> d!19537 (=> (not res!41735) (not e!52263))))

(assert (=> d!19537 (= res!41735 ((_ is Cons!1529) lt!36217))))

(assert (=> d!19537 (= (contains!748 lt!36217 (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))) lt!37063)))

(declare-fun b!80039 () Bool)

(declare-fun e!52264 () Bool)

(assert (=> b!80039 (= e!52263 e!52264)))

(declare-fun res!41736 () Bool)

(assert (=> b!80039 (=> res!41736 e!52264)))

(assert (=> b!80039 (= res!41736 (= (h!2117 lt!36217) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(declare-fun b!80040 () Bool)

(assert (=> b!80040 (= e!52264 (contains!748 (t!5183 lt!36217) (tuple2!2191 (_1!1105 lt!35788) (_2!1105 lt!35788))))))

(assert (= (and d!19537 res!41735) b!80039))

(assert (= (and b!80039 (not res!41736)) b!80040))

(declare-fun m!81353 () Bool)

(assert (=> d!19537 m!81353))

(declare-fun m!81355 () Bool)

(assert (=> d!19537 m!81355))

(declare-fun m!81357 () Bool)

(assert (=> b!80040 m!81357))

(assert (=> b!78500 d!19537))

(declare-fun d!19539 () Bool)

(declare-fun e!52265 () Bool)

(assert (=> d!19539 e!52265))

(declare-fun res!41737 () Bool)

(assert (=> d!19539 (=> (not res!41737) (not e!52265))))

(declare-fun lt!37067 () ListLongMap!1465)

(assert (=> d!19539 (= res!41737 (contains!745 lt!37067 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(declare-fun lt!37064 () List!1533)

(assert (=> d!19539 (= lt!37067 (ListLongMap!1466 lt!37064))))

(declare-fun lt!37066 () Unit!2263)

(declare-fun lt!37065 () Unit!2263)

(assert (=> d!19539 (= lt!37066 lt!37065)))

(assert (=> d!19539 (= (getValueByKey!136 lt!37064 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19539 (= lt!37065 (lemmaContainsTupThenGetReturnValue!55 lt!37064 (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19539 (= lt!37064 (insertStrictlySorted!57 (toList!748 call!7243) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))))))

(assert (=> d!19539 (= (+!109 call!7243 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))) lt!37067)))

(declare-fun b!80041 () Bool)

(declare-fun res!41738 () Bool)

(assert (=> b!80041 (=> (not res!41738) (not e!52265))))

(assert (=> b!80041 (= res!41738 (= (getValueByKey!136 (toList!748 lt!37067) (_1!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16)))) (Some!141 (_2!1105 (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))))

(declare-fun b!80042 () Bool)

(assert (=> b!80042 (= e!52265 (contains!748 (toList!748 lt!37067) (tuple2!2191 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2170 newMap!16))))))

(assert (= (and d!19539 res!41737) b!80041))

(assert (= (and b!80041 res!41738) b!80042))

(declare-fun m!81359 () Bool)

(assert (=> d!19539 m!81359))

(declare-fun m!81361 () Bool)

(assert (=> d!19539 m!81361))

(declare-fun m!81363 () Bool)

(assert (=> d!19539 m!81363))

(declare-fun m!81365 () Bool)

(assert (=> d!19539 m!81365))

(declare-fun m!81367 () Bool)

(assert (=> b!80041 m!81367))

(declare-fun m!81369 () Bool)

(assert (=> b!80042 m!81369))

(assert (=> b!78733 d!19539))

(declare-fun d!19541 () Bool)

(declare-fun c!12501 () Bool)

(assert (=> d!19541 (= c!12501 ((_ is Nil!1530) (toList!748 lt!35884)))))

(declare-fun e!52266 () (InoxSet tuple2!2190))

(assert (=> d!19541 (= (content!82 (toList!748 lt!35884)) e!52266)))

(declare-fun b!80043 () Bool)

(assert (=> b!80043 (= e!52266 ((as const (Array tuple2!2190 Bool)) false))))

(declare-fun b!80044 () Bool)

(assert (=> b!80044 (= e!52266 ((_ map or) (store ((as const (Array tuple2!2190 Bool)) false) (h!2117 (toList!748 lt!35884)) true) (content!82 (t!5183 (toList!748 lt!35884)))))))

(assert (= (and d!19541 c!12501) b!80043))

(assert (= (and d!19541 (not c!12501)) b!80044))

(declare-fun m!81371 () Bool)

(assert (=> b!80044 m!81371))

(assert (=> b!80044 m!81309))

(assert (=> d!18615 d!19541))

(declare-fun d!19543 () Bool)

(declare-fun c!12502 () Bool)

(assert (=> d!19543 (= c!12502 ((_ is Nil!1530) (toList!748 lt!35895)))))

(declare-fun e!52267 () (InoxSet tuple2!2190))

(assert (=> d!19543 (= (content!82 (toList!748 lt!35895)) e!52267)))

(declare-fun b!80045 () Bool)

(assert (=> b!80045 (= e!52267 ((as const (Array tuple2!2190 Bool)) false))))

(declare-fun b!80046 () Bool)

(assert (=> b!80046 (= e!52267 ((_ map or) (store ((as const (Array tuple2!2190 Bool)) false) (h!2117 (toList!748 lt!35895)) true) (content!82 (t!5183 (toList!748 lt!35895)))))))

(assert (= (and d!19543 c!12502) b!80045))

(assert (= (and d!19543 (not c!12502)) b!80046))

(declare-fun m!81373 () Bool)

(assert (=> b!80046 m!81373))

(assert (=> b!80046 m!81315))

(assert (=> d!18567 d!19543))

(declare-fun d!19545 () Bool)

(declare-fun res!41739 () Bool)

(declare-fun e!52268 () Bool)

(assert (=> d!19545 (=> res!41739 e!52268)))

(assert (=> d!19545 (= res!41739 (and ((_ is Cons!1529) lt!36467) (= (_1!1105 (h!2117 lt!36467)) (_1!1105 lt!35788))))))

(assert (=> d!19545 (= (containsKey!140 lt!36467 (_1!1105 lt!35788)) e!52268)))

(declare-fun b!80047 () Bool)

(declare-fun e!52269 () Bool)

(assert (=> b!80047 (= e!52268 e!52269)))

(declare-fun res!41740 () Bool)

(assert (=> b!80047 (=> (not res!41740) (not e!52269))))

(assert (=> b!80047 (= res!41740 (and (or (not ((_ is Cons!1529) lt!36467)) (bvsle (_1!1105 (h!2117 lt!36467)) (_1!1105 lt!35788))) ((_ is Cons!1529) lt!36467) (bvslt (_1!1105 (h!2117 lt!36467)) (_1!1105 lt!35788))))))

(declare-fun b!80048 () Bool)

(assert (=> b!80048 (= e!52269 (containsKey!140 (t!5183 lt!36467) (_1!1105 lt!35788)))))

(assert (= (and d!19545 (not res!41739)) b!80047))

(assert (= (and b!80047 res!41740) b!80048))

(declare-fun m!81375 () Bool)

(assert (=> b!80048 m!81375))

(assert (=> b!78768 d!19545))

(declare-fun d!19547 () Bool)

(assert (=> d!19547 (= (inRange!0 (index!3135 lt!36412) (mask!6268 newMap!16)) (and (bvsge (index!3135 lt!36412) #b00000000000000000000000000000000) (bvslt (index!3135 lt!36412) (bvadd (mask!6268 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!78682 d!19547))

(declare-fun b!80050 () Bool)

(declare-fun e!52270 () Option!142)

(declare-fun e!52271 () Option!142)

(assert (=> b!80050 (= e!52270 e!52271)))

(declare-fun c!12504 () Bool)

(assert (=> b!80050 (= c!12504 (and ((_ is Cons!1529) (toList!748 lt!36186)) (not (= (_1!1105 (h!2117 (toList!748 lt!36186))) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!80049 () Bool)

(assert (=> b!80049 (= e!52270 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36186)))))))

(declare-fun b!80051 () Bool)

(assert (=> b!80051 (= e!52271 (getValueByKey!136 (t!5183 (toList!748 lt!36186)) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!80052 () Bool)

(assert (=> b!80052 (= e!52271 None!140)))

(declare-fun c!12503 () Bool)

(declare-fun d!19549 () Bool)

(assert (=> d!19549 (= c!12503 (and ((_ is Cons!1529) (toList!748 lt!36186)) (= (_1!1105 (h!2117 (toList!748 lt!36186))) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19549 (= (getValueByKey!136 (toList!748 lt!36186) (_1!1105 (tuple2!2191 lt!35959 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!52270)))

(assert (= (and d!19549 c!12503) b!80049))

(assert (= (and d!19549 (not c!12503)) b!80050))

(assert (= (and b!80050 c!12504) b!80051))

(assert (= (and b!80050 (not c!12504)) b!80052))

(declare-fun m!81377 () Bool)

(assert (=> b!80051 m!81377))

(assert (=> b!78436 d!19549))

(declare-fun b!80054 () Bool)

(declare-fun e!52272 () Option!142)

(declare-fun e!52273 () Option!142)

(assert (=> b!80054 (= e!52272 e!52273)))

(declare-fun c!12506 () Bool)

(assert (=> b!80054 (= c!12506 (and ((_ is Cons!1529) (t!5183 lt!35885)) (not (= (_1!1105 (h!2117 (t!5183 lt!35885))) (_1!1105 lt!35788)))))))

(declare-fun b!80053 () Bool)

(assert (=> b!80053 (= e!52272 (Some!141 (_2!1105 (h!2117 (t!5183 lt!35885)))))))

(declare-fun b!80055 () Bool)

(assert (=> b!80055 (= e!52273 (getValueByKey!136 (t!5183 (t!5183 lt!35885)) (_1!1105 lt!35788)))))

(declare-fun b!80056 () Bool)

(assert (=> b!80056 (= e!52273 None!140)))

(declare-fun d!19551 () Bool)

(declare-fun c!12505 () Bool)

(assert (=> d!19551 (= c!12505 (and ((_ is Cons!1529) (t!5183 lt!35885)) (= (_1!1105 (h!2117 (t!5183 lt!35885))) (_1!1105 lt!35788))))))

(assert (=> d!19551 (= (getValueByKey!136 (t!5183 lt!35885) (_1!1105 lt!35788)) e!52272)))

(assert (= (and d!19551 c!12505) b!80053))

(assert (= (and d!19551 (not c!12505)) b!80054))

(assert (= (and b!80054 c!12506) b!80055))

(assert (= (and b!80054 (not c!12506)) b!80056))

(declare-fun m!81379 () Bool)

(assert (=> b!80055 m!81379))

(assert (=> b!78761 d!19551))

(declare-fun d!19553 () Bool)

(assert (=> d!19553 (contains!745 (getCurrentListMap!435 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355))))

(declare-fun lt!37070 () Unit!2263)

(declare-fun choose!475 (array!3974 array!3976 (_ BitVec 32) (_ BitVec 32) V!2995 V!2995 (_ BitVec 64) (_ BitVec 32) Int) Unit!2263)

(assert (=> d!19553 (= lt!37070 (choose!475 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)))))

(assert (=> d!19553 (validMask!0 (mask!6268 newMap!16))))

(assert (=> d!19553 (= (lemmaArrayContainsKeyThenInListMap!16 (_keys!3932 newMap!16) (_values!2255 newMap!16) (mask!6268 newMap!16) (extraKeys!2123 newMap!16) (zeroValue!2170 newMap!16) (minValue!2170 newMap!16) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2272 newMap!16)) lt!37070)))

(declare-fun bs!3387 () Bool)

(assert (= bs!3387 d!19553))

(assert (=> bs!3387 m!78025))

(assert (=> bs!3387 m!78025))

(assert (=> bs!3387 m!77749))

(assert (=> bs!3387 m!78103))

(assert (=> bs!3387 m!77749))

(declare-fun m!81381 () Bool)

(assert (=> bs!3387 m!81381))

(assert (=> bs!3387 m!78167))

(assert (=> b!78651 d!19553))

(assert (=> b!78651 d!18513))

(assert (=> b!78651 d!18489))

(declare-fun d!19555 () Bool)

(assert (not d!19555))

(assert (=> b!78377 d!19555))

(declare-fun d!19557 () Bool)

(assert (=> d!19557 (= (apply!79 lt!36448 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1192 (getValueByKey!136 (toList!748 lt!36448) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3388 () Bool)

(assert (= bs!3388 d!19557))

(assert (=> bs!3388 m!80929))

(assert (=> bs!3388 m!80929))

(declare-fun m!81383 () Bool)

(assert (=> bs!3388 m!81383))

(assert (=> b!78753 d!19557))

(assert (=> b!78658 d!18665))

(declare-fun d!19559 () Bool)

(assert (=> d!19559 (= ($colon$colon!68 e!51363 (ite c!12076 (h!2117 (toList!748 (+!109 lt!35777 lt!35784))) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783)))) (Cons!1529 (ite c!12076 (h!2117 (toList!748 (+!109 lt!35777 lt!35784))) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))) e!51363))))

(assert (=> bm!7205 d!19559))

(declare-fun b!80057 () Bool)

(declare-fun c!12507 () Bool)

(assert (=> b!80057 (= c!12507 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35777))) (bvsgt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35777)))) (_1!1105 lt!35783))))))

(declare-fun e!52277 () List!1533)

(declare-fun e!52274 () List!1533)

(assert (=> b!80057 (= e!52277 e!52274)))

(declare-fun c!12508 () Bool)

(declare-fun e!52276 () List!1533)

(declare-fun bm!7383 () Bool)

(declare-fun call!7388 () List!1533)

(assert (=> bm!7383 (= call!7388 ($colon$colon!68 e!52276 (ite c!12508 (h!2117 (t!5183 (toList!748 lt!35777))) (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783)))))))

(declare-fun c!12509 () Bool)

(assert (=> bm!7383 (= c!12509 c!12508)))

(declare-fun d!19561 () Bool)

(declare-fun e!52278 () Bool)

(assert (=> d!19561 e!52278))

(declare-fun res!41741 () Bool)

(assert (=> d!19561 (=> (not res!41741) (not e!52278))))

(declare-fun lt!37071 () List!1533)

(assert (=> d!19561 (= res!41741 (isStrictlySorted!290 lt!37071))))

(declare-fun e!52275 () List!1533)

(assert (=> d!19561 (= lt!37071 e!52275)))

(assert (=> d!19561 (= c!12508 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35777))) (bvslt (_1!1105 (h!2117 (t!5183 (toList!748 lt!35777)))) (_1!1105 lt!35783))))))

(assert (=> d!19561 (isStrictlySorted!290 (t!5183 (toList!748 lt!35777)))))

(assert (=> d!19561 (= (insertStrictlySorted!57 (t!5183 (toList!748 lt!35777)) (_1!1105 lt!35783) (_2!1105 lt!35783)) lt!37071)))

(declare-fun b!80058 () Bool)

(declare-fun c!12510 () Bool)

(assert (=> b!80058 (= e!52276 (ite c!12510 (t!5183 (t!5183 (toList!748 lt!35777))) (ite c!12507 (Cons!1529 (h!2117 (t!5183 (toList!748 lt!35777))) (t!5183 (t!5183 (toList!748 lt!35777)))) Nil!1530)))))

(declare-fun bm!7384 () Bool)

(declare-fun call!7387 () List!1533)

(assert (=> bm!7384 (= call!7387 call!7388)))

(declare-fun b!80059 () Bool)

(assert (=> b!80059 (= e!52275 call!7388)))

(declare-fun b!80060 () Bool)

(declare-fun res!41742 () Bool)

(assert (=> b!80060 (=> (not res!41742) (not e!52278))))

(assert (=> b!80060 (= res!41742 (containsKey!140 lt!37071 (_1!1105 lt!35783)))))

(declare-fun b!80061 () Bool)

(declare-fun call!7386 () List!1533)

(assert (=> b!80061 (= e!52274 call!7386)))

(declare-fun b!80062 () Bool)

(assert (=> b!80062 (= e!52277 call!7387)))

(declare-fun b!80063 () Bool)

(assert (=> b!80063 (= e!52275 e!52277)))

(assert (=> b!80063 (= c!12510 (and ((_ is Cons!1529) (t!5183 (toList!748 lt!35777))) (= (_1!1105 (h!2117 (t!5183 (toList!748 lt!35777)))) (_1!1105 lt!35783))))))

(declare-fun bm!7385 () Bool)

(assert (=> bm!7385 (= call!7386 call!7387)))

(declare-fun b!80064 () Bool)

(assert (=> b!80064 (= e!52276 (insertStrictlySorted!57 (t!5183 (t!5183 (toList!748 lt!35777))) (_1!1105 lt!35783) (_2!1105 lt!35783)))))

(declare-fun b!80065 () Bool)

(assert (=> b!80065 (= e!52278 (contains!748 lt!37071 (tuple2!2191 (_1!1105 lt!35783) (_2!1105 lt!35783))))))

(declare-fun b!80066 () Bool)

(assert (=> b!80066 (= e!52274 call!7386)))

(assert (= (and d!19561 c!12508) b!80059))

(assert (= (and d!19561 (not c!12508)) b!80063))

(assert (= (and b!80063 c!12510) b!80062))

(assert (= (and b!80063 (not c!12510)) b!80057))

(assert (= (and b!80057 c!12507) b!80066))

(assert (= (and b!80057 (not c!12507)) b!80061))

(assert (= (or b!80066 b!80061) bm!7385))

(assert (= (or b!80062 bm!7385) bm!7384))

(assert (= (or b!80059 bm!7384) bm!7383))

(assert (= (and bm!7383 c!12509) b!80064))

(assert (= (and bm!7383 (not c!12509)) b!80058))

(assert (= (and d!19561 res!41741) b!80060))

(assert (= (and b!80060 res!41742) b!80065))

(declare-fun m!81385 () Bool)

(assert (=> b!80060 m!81385))

(declare-fun m!81387 () Bool)

(assert (=> b!80065 m!81387))

(declare-fun m!81389 () Bool)

(assert (=> d!19561 m!81389))

(assert (=> d!19561 m!80133))

(declare-fun m!81391 () Bool)

(assert (=> bm!7383 m!81391))

(declare-fun m!81393 () Bool)

(assert (=> b!80064 m!81393))

(assert (=> b!78418 d!19561))

(declare-fun d!19563 () Bool)

(declare-fun res!41743 () Bool)

(declare-fun e!52279 () Bool)

(assert (=> d!19563 (=> res!41743 e!52279)))

(assert (=> d!19563 (= res!41743 (and ((_ is Cons!1529) lt!35896) (= (_1!1105 (h!2117 lt!35896)) (_1!1105 lt!35784))))))

(assert (=> d!19563 (= (containsKey!140 lt!35896 (_1!1105 lt!35784)) e!52279)))

(declare-fun b!80067 () Bool)

(declare-fun e!52280 () Bool)

(assert (=> b!80067 (= e!52279 e!52280)))

(declare-fun res!41744 () Bool)

(assert (=> b!80067 (=> (not res!41744) (not e!52280))))

(assert (=> b!80067 (= res!41744 (and (or (not ((_ is Cons!1529) lt!35896)) (bvsle (_1!1105 (h!2117 lt!35896)) (_1!1105 lt!35784))) ((_ is Cons!1529) lt!35896) (bvslt (_1!1105 (h!2117 lt!35896)) (_1!1105 lt!35784))))))

(declare-fun b!80068 () Bool)

(assert (=> b!80068 (= e!52280 (containsKey!140 (t!5183 lt!35896) (_1!1105 lt!35784)))))

(assert (= (and d!19563 (not res!41743)) b!80067))

(assert (= (and b!80067 res!41744) b!80068))

(declare-fun m!81395 () Bool)

(assert (=> b!80068 m!81395))

(assert (=> b!78691 d!19563))

(declare-fun d!19565 () Bool)

(assert (=> d!19565 (isDefined!90 (getValueByKey!136 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!37072 () Unit!2263)

(assert (=> d!19565 (= lt!37072 (choose!471 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!52281 () Bool)

(assert (=> d!19565 e!52281))

(declare-fun res!41745 () Bool)

(assert (=> d!19565 (=> (not res!41745) (not e!52281))))

(assert (=> d!19565 (= res!41745 (isStrictlySorted!290 (toList!748 lt!35969)))))

(assert (=> d!19565 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000) lt!37072)))

(declare-fun b!80069 () Bool)

(assert (=> b!80069 (= e!52281 (containsKey!140 (toList!748 lt!35969) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!19565 res!41745) b!80069))

(assert (=> d!19565 m!78409))

(assert (=> d!19565 m!78409))

(assert (=> d!19565 m!78411))

(declare-fun m!81397 () Bool)

(assert (=> d!19565 m!81397))

(assert (=> d!19565 m!79477))

(assert (=> b!80069 m!78405))

(assert (=> b!78423 d!19565))

(assert (=> b!78423 d!18983))

(assert (=> b!78423 d!18863))

(declare-fun d!19567 () Bool)

(declare-fun res!41746 () Bool)

(declare-fun e!52282 () Bool)

(assert (=> d!19567 (=> res!41746 e!52282)))

(assert (=> d!19567 (= res!41746 (and ((_ is Cons!1529) (toList!748 lt!35884)) (= (_1!1105 (h!2117 (toList!748 lt!35884))) (_1!1105 lt!35783))))))

(assert (=> d!19567 (= (containsKey!140 (toList!748 lt!35884) (_1!1105 lt!35783)) e!52282)))

(declare-fun b!80070 () Bool)

(declare-fun e!52283 () Bool)

(assert (=> b!80070 (= e!52282 e!52283)))

(declare-fun res!41747 () Bool)

(assert (=> b!80070 (=> (not res!41747) (not e!52283))))

(assert (=> b!80070 (= res!41747 (and (or (not ((_ is Cons!1529) (toList!748 lt!35884))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35884))) (_1!1105 lt!35783))) ((_ is Cons!1529) (toList!748 lt!35884)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35884))) (_1!1105 lt!35783))))))

(declare-fun b!80071 () Bool)

(assert (=> b!80071 (= e!52283 (containsKey!140 (t!5183 (toList!748 lt!35884)) (_1!1105 lt!35783)))))

(assert (= (and d!19567 (not res!41746)) b!80070))

(assert (= (and b!80070 res!41747) b!80071))

(declare-fun m!81399 () Bool)

(assert (=> b!80071 m!81399))

(assert (=> d!18519 d!19567))

(declare-fun d!19569 () Bool)

(declare-fun lt!37073 () Bool)

(assert (=> d!19569 (= lt!37073 (select (content!82 (toList!748 lt!36136)) (tuple2!2191 lt!35870 lt!35871)))))

(declare-fun e!52284 () Bool)

(assert (=> d!19569 (= lt!37073 e!52284)))

(declare-fun res!41748 () Bool)

(assert (=> d!19569 (=> (not res!41748) (not e!52284))))

(assert (=> d!19569 (= res!41748 ((_ is Cons!1529) (toList!748 lt!36136)))))

(assert (=> d!19569 (= (contains!748 (toList!748 lt!36136) (tuple2!2191 lt!35870 lt!35871)) lt!37073)))

(declare-fun b!80072 () Bool)

(declare-fun e!52285 () Bool)

(assert (=> b!80072 (= e!52284 e!52285)))

(declare-fun res!41749 () Bool)

(assert (=> b!80072 (=> res!41749 e!52285)))

(assert (=> b!80072 (= res!41749 (= (h!2117 (toList!748 lt!36136)) (tuple2!2191 lt!35870 lt!35871)))))

(declare-fun b!80073 () Bool)

(assert (=> b!80073 (= e!52285 (contains!748 (t!5183 (toList!748 lt!36136)) (tuple2!2191 lt!35870 lt!35871)))))

(assert (= (and d!19569 res!41748) b!80072))

(assert (= (and b!80072 (not res!41749)) b!80073))

(declare-fun m!81401 () Bool)

(assert (=> d!19569 m!81401))

(declare-fun m!81403 () Bool)

(assert (=> d!19569 m!81403))

(declare-fun m!81405 () Bool)

(assert (=> b!80073 m!81405))

(assert (=> b!78344 d!19569))

(declare-fun d!19571 () Bool)

(assert (=> d!19571 (isDefined!90 (getValueByKey!136 (toList!748 lt!35888) (_1!1105 lt!35788)))))

(declare-fun lt!37074 () Unit!2263)

(assert (=> d!19571 (= lt!37074 (choose!471 (toList!748 lt!35888) (_1!1105 lt!35788)))))

(declare-fun e!52286 () Bool)

(assert (=> d!19571 e!52286))

(declare-fun res!41750 () Bool)

(assert (=> d!19571 (=> (not res!41750) (not e!52286))))

(assert (=> d!19571 (= res!41750 (isStrictlySorted!290 (toList!748 lt!35888)))))

(assert (=> d!19571 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35888) (_1!1105 lt!35788)) lt!37074)))

(declare-fun b!80074 () Bool)

(assert (=> b!80074 (= e!52286 (containsKey!140 (toList!748 lt!35888) (_1!1105 lt!35788)))))

(assert (= (and d!19571 res!41750) b!80074))

(assert (=> d!19571 m!77941))

(assert (=> d!19571 m!77941))

(assert (=> d!19571 m!79083))

(declare-fun m!81407 () Bool)

(assert (=> d!19571 m!81407))

(declare-fun m!81409 () Bool)

(assert (=> d!19571 m!81409))

(assert (=> b!80074 m!79079))

(assert (=> b!78756 d!19571))

(assert (=> b!78756 d!18949))

(assert (=> b!78756 d!18485))

(declare-fun d!19573 () Bool)

(declare-fun res!41751 () Bool)

(declare-fun e!52287 () Bool)

(assert (=> d!19573 (=> res!41751 e!52287)))

(assert (=> d!19573 (= res!41751 (and ((_ is Cons!1529) (toList!748 lt!35911)) (= (_1!1105 (h!2117 (toList!748 lt!35911))) (_1!1105 lt!35788))))))

(assert (=> d!19573 (= (containsKey!140 (toList!748 lt!35911) (_1!1105 lt!35788)) e!52287)))

(declare-fun b!80075 () Bool)

(declare-fun e!52288 () Bool)

(assert (=> b!80075 (= e!52287 e!52288)))

(declare-fun res!41752 () Bool)

(assert (=> b!80075 (=> (not res!41752) (not e!52288))))

(assert (=> b!80075 (= res!41752 (and (or (not ((_ is Cons!1529) (toList!748 lt!35911))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35911))) (_1!1105 lt!35788))) ((_ is Cons!1529) (toList!748 lt!35911)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35911))) (_1!1105 lt!35788))))))

(declare-fun b!80076 () Bool)

(assert (=> b!80076 (= e!52288 (containsKey!140 (t!5183 (toList!748 lt!35911)) (_1!1105 lt!35788)))))

(assert (= (and d!19573 (not res!41751)) b!80075))

(assert (= (and b!80075 res!41752) b!80076))

(declare-fun m!81411 () Bool)

(assert (=> b!80076 m!81411))

(assert (=> d!18587 d!19573))

(assert (=> bm!7236 d!19107))

(declare-fun b!80078 () Bool)

(declare-fun e!52289 () Option!142)

(declare-fun e!52290 () Option!142)

(assert (=> b!80078 (= e!52289 e!52290)))

(declare-fun c!12512 () Bool)

(assert (=> b!80078 (= c!12512 (and ((_ is Cons!1529) (toList!748 lt!36237)) (not (= (_1!1105 (h!2117 (toList!748 lt!36237))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!80077 () Bool)

(assert (=> b!80077 (= e!52289 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36237)))))))

(declare-fun b!80079 () Bool)

(assert (=> b!80079 (= e!52290 (getValueByKey!136 (t!5183 (toList!748 lt!36237)) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!80080 () Bool)

(assert (=> b!80080 (= e!52290 None!140)))

(declare-fun d!19575 () Bool)

(declare-fun c!12511 () Bool)

(assert (=> d!19575 (= c!12511 (and ((_ is Cons!1529) (toList!748 lt!36237)) (= (_1!1105 (h!2117 (toList!748 lt!36237))) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19575 (= (getValueByKey!136 (toList!748 lt!36237) (_1!1105 (tuple2!2191 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!52289)))

(assert (= (and d!19575 c!12511) b!80077))

(assert (= (and d!19575 (not c!12511)) b!80078))

(assert (= (and b!80078 c!12512) b!80079))

(assert (= (and b!80078 (not c!12512)) b!80080))

(declare-fun m!81413 () Bool)

(assert (=> b!80079 m!81413))

(assert (=> b!78523 d!19575))

(declare-fun d!19577 () Bool)

(declare-fun e!52292 () Bool)

(assert (=> d!19577 e!52292))

(declare-fun res!41753 () Bool)

(assert (=> d!19577 (=> res!41753 e!52292)))

(declare-fun lt!37075 () Bool)

(assert (=> d!19577 (= res!41753 (not lt!37075))))

(declare-fun lt!37076 () Bool)

(assert (=> d!19577 (= lt!37075 lt!37076)))

(declare-fun lt!37077 () Unit!2263)

(declare-fun e!52291 () Unit!2263)

(assert (=> d!19577 (= lt!37077 e!52291)))

(declare-fun c!12513 () Bool)

(assert (=> d!19577 (= c!12513 lt!37076)))

(assert (=> d!19577 (= lt!37076 (containsKey!140 (toList!748 lt!35977) lt!35974))))

(assert (=> d!19577 (= (contains!745 lt!35977 lt!35974) lt!37075)))

(declare-fun b!80081 () Bool)

(declare-fun lt!37078 () Unit!2263)

(assert (=> b!80081 (= e!52291 lt!37078)))

(assert (=> b!80081 (= lt!37078 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35977) lt!35974))))

(assert (=> b!80081 (isDefined!90 (getValueByKey!136 (toList!748 lt!35977) lt!35974))))

(declare-fun b!80082 () Bool)

(declare-fun Unit!2343 () Unit!2263)

(assert (=> b!80082 (= e!52291 Unit!2343)))

(declare-fun b!80083 () Bool)

(assert (=> b!80083 (= e!52292 (isDefined!90 (getValueByKey!136 (toList!748 lt!35977) lt!35974)))))

(assert (= (and d!19577 c!12513) b!80081))

(assert (= (and d!19577 (not c!12513)) b!80082))

(assert (= (and d!19577 (not res!41753)) b!80083))

(declare-fun m!81415 () Bool)

(assert (=> d!19577 m!81415))

(declare-fun m!81417 () Bool)

(assert (=> b!80081 m!81417))

(assert (=> b!80081 m!78419))

(assert (=> b!80081 m!78419))

(declare-fun m!81419 () Bool)

(assert (=> b!80081 m!81419))

(assert (=> b!80083 m!78419))

(assert (=> b!80083 m!78419))

(assert (=> b!80083 m!81419))

(assert (=> d!18555 d!19577))

(assert (=> d!18555 d!18537))

(assert (=> d!18555 d!18539))

(assert (=> d!18555 d!18547))

(declare-fun d!19579 () Bool)

(assert (=> d!19579 (= (apply!79 (+!109 lt!35977 (tuple2!2191 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))))) lt!35974) (apply!79 lt!35977 lt!35974))))

(assert (=> d!19579 true))

(declare-fun _$34!820 () Unit!2263)

(assert (=> d!19579 (= (choose!469 lt!35977 lt!35978 (minValue!2170 (v!2594 (underlying!281 thiss!992))) lt!35974) _$34!820)))

(declare-fun bs!3389 () Bool)

(assert (= bs!3389 d!19579))

(assert (=> bs!3389 m!78033))

(assert (=> bs!3389 m!78033))

(assert (=> bs!3389 m!78051))

(assert (=> bs!3389 m!78031))

(assert (=> d!18555 d!19579))

(assert (=> b!78686 d!19403))

(assert (=> b!78686 d!18463))

(declare-fun d!19581 () Bool)

(declare-fun res!41754 () Bool)

(declare-fun e!52293 () Bool)

(assert (=> d!19581 (=> res!41754 e!52293)))

(assert (=> d!19581 (= res!41754 (and ((_ is Cons!1529) lt!36206) (= (_1!1105 (h!2117 lt!36206)) (_1!1105 lt!35784))))))

(assert (=> d!19581 (= (containsKey!140 lt!36206 (_1!1105 lt!35784)) e!52293)))

(declare-fun b!80084 () Bool)

(declare-fun e!52294 () Bool)

(assert (=> b!80084 (= e!52293 e!52294)))

(declare-fun res!41755 () Bool)

(assert (=> b!80084 (=> (not res!41755) (not e!52294))))

(assert (=> b!80084 (= res!41755 (and (or (not ((_ is Cons!1529) lt!36206)) (bvsle (_1!1105 (h!2117 lt!36206)) (_1!1105 lt!35784))) ((_ is Cons!1529) lt!36206) (bvslt (_1!1105 (h!2117 lt!36206)) (_1!1105 lt!35784))))))

(declare-fun b!80085 () Bool)

(assert (=> b!80085 (= e!52294 (containsKey!140 (t!5183 lt!36206) (_1!1105 lt!35784)))))

(assert (= (and d!19581 (not res!41754)) b!80084))

(assert (= (and b!80084 res!41755) b!80085))

(declare-fun m!81421 () Bool)

(assert (=> b!80085 m!81421))

(assert (=> b!78472 d!19581))

(assert (=> d!18637 d!18847))

(declare-fun d!19583 () Bool)

(assert (=> d!19583 (= (apply!79 lt!36090 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1192 (getValueByKey!136 (toList!748 lt!36090) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3390 () Bool)

(assert (= bs!3390 d!19583))

(assert (=> bs!3390 m!78185))

(assert (=> bs!3390 m!81305))

(assert (=> bs!3390 m!81305))

(declare-fun m!81423 () Bool)

(assert (=> bs!3390 m!81423))

(assert (=> b!78291 d!19583))

(assert (=> b!78291 d!19071))

(declare-fun d!19585 () Bool)

(declare-fun lt!37079 () Bool)

(assert (=> d!19585 (= lt!37079 (select (content!82 (t!5183 (toList!748 lt!35903))) lt!35783))))

(declare-fun e!52295 () Bool)

(assert (=> d!19585 (= lt!37079 e!52295)))

(declare-fun res!41756 () Bool)

(assert (=> d!19585 (=> (not res!41756) (not e!52295))))

(assert (=> d!19585 (= res!41756 ((_ is Cons!1529) (t!5183 (toList!748 lt!35903))))))

(assert (=> d!19585 (= (contains!748 (t!5183 (toList!748 lt!35903)) lt!35783) lt!37079)))

(declare-fun b!80086 () Bool)

(declare-fun e!52296 () Bool)

(assert (=> b!80086 (= e!52295 e!52296)))

(declare-fun res!41757 () Bool)

(assert (=> b!80086 (=> res!41757 e!52296)))

(assert (=> b!80086 (= res!41757 (= (h!2117 (t!5183 (toList!748 lt!35903))) lt!35783))))

(declare-fun b!80087 () Bool)

(assert (=> b!80087 (= e!52296 (contains!748 (t!5183 (t!5183 (toList!748 lt!35903))) lt!35783))))

(assert (= (and d!19585 res!41756) b!80086))

(assert (= (and b!80086 (not res!41757)) b!80087))

(assert (=> d!19585 m!79461))

(declare-fun m!81425 () Bool)

(assert (=> d!19585 m!81425))

(declare-fun m!81427 () Bool)

(assert (=> b!80087 m!81427))

(assert (=> b!78422 d!19585))

(declare-fun d!19587 () Bool)

(declare-fun res!41758 () Bool)

(declare-fun e!52297 () Bool)

(assert (=> d!19587 (=> res!41758 e!52297)))

(assert (=> d!19587 (= res!41758 (or ((_ is Nil!1530) lt!36273) ((_ is Nil!1530) (t!5183 lt!36273))))))

(assert (=> d!19587 (= (isStrictlySorted!290 lt!36273) e!52297)))

(declare-fun b!80088 () Bool)

(declare-fun e!52298 () Bool)

(assert (=> b!80088 (= e!52297 e!52298)))

(declare-fun res!41759 () Bool)

(assert (=> b!80088 (=> (not res!41759) (not e!52298))))

(assert (=> b!80088 (= res!41759 (bvslt (_1!1105 (h!2117 lt!36273)) (_1!1105 (h!2117 (t!5183 lt!36273)))))))

(declare-fun b!80089 () Bool)

(assert (=> b!80089 (= e!52298 (isStrictlySorted!290 (t!5183 lt!36273)))))

(assert (= (and d!19587 (not res!41758)) b!80088))

(assert (= (and b!80088 res!41759) b!80089))

(declare-fun m!81429 () Bool)

(assert (=> b!80089 m!81429))

(assert (=> d!18635 d!19587))

(declare-fun d!19589 () Bool)

(declare-fun res!41760 () Bool)

(declare-fun e!52299 () Bool)

(assert (=> d!19589 (=> res!41760 e!52299)))

(assert (=> d!19589 (= res!41760 (or ((_ is Nil!1530) (toList!748 (+!109 lt!35777 lt!35784))) ((_ is Nil!1530) (t!5183 (toList!748 (+!109 lt!35777 lt!35784))))))))

(assert (=> d!19589 (= (isStrictlySorted!290 (toList!748 (+!109 lt!35777 lt!35784))) e!52299)))

(declare-fun b!80090 () Bool)

(declare-fun e!52300 () Bool)

(assert (=> b!80090 (= e!52299 e!52300)))

(declare-fun res!41761 () Bool)

(assert (=> b!80090 (=> (not res!41761) (not e!52300))))

(assert (=> b!80090 (= res!41761 (bvslt (_1!1105 (h!2117 (toList!748 (+!109 lt!35777 lt!35784)))) (_1!1105 (h!2117 (t!5183 (toList!748 (+!109 lt!35777 lt!35784)))))))))

(declare-fun b!80091 () Bool)

(assert (=> b!80091 (= e!52300 (isStrictlySorted!290 (t!5183 (toList!748 (+!109 lt!35777 lt!35784)))))))

(assert (= (and d!19589 (not res!41760)) b!80090))

(assert (= (and b!80090 res!41761) b!80091))

(assert (=> b!80091 m!79679))

(assert (=> d!18635 d!19589))

(declare-fun d!19591 () Bool)

(declare-fun lt!37080 () Bool)

(assert (=> d!19591 (= lt!37080 (select (content!82 (t!5183 (toList!748 lt!35907))) lt!35784))))

(declare-fun e!52301 () Bool)

(assert (=> d!19591 (= lt!37080 e!52301)))

(declare-fun res!41762 () Bool)

(assert (=> d!19591 (=> (not res!41762) (not e!52301))))

(assert (=> d!19591 (= res!41762 ((_ is Cons!1529) (t!5183 (toList!748 lt!35907))))))

(assert (=> d!19591 (= (contains!748 (t!5183 (toList!748 lt!35907)) lt!35784) lt!37080)))

(declare-fun b!80092 () Bool)

(declare-fun e!52302 () Bool)

(assert (=> b!80092 (= e!52301 e!52302)))

(declare-fun res!41763 () Bool)

(assert (=> b!80092 (=> res!41763 e!52302)))

(assert (=> b!80092 (= res!41763 (= (h!2117 (t!5183 (toList!748 lt!35907))) lt!35784))))

(declare-fun b!80093 () Bool)

(assert (=> b!80093 (= e!52302 (contains!748 (t!5183 (t!5183 (toList!748 lt!35907))) lt!35784))))

(assert (= (and d!19591 res!41762) b!80092))

(assert (= (and b!80092 (not res!41763)) b!80093))

(assert (=> d!19591 m!79473))

(declare-fun m!81431 () Bool)

(assert (=> d!19591 m!81431))

(declare-fun m!81433 () Bool)

(assert (=> b!80093 m!81433))

(assert (=> b!78427 d!19591))

(declare-fun d!19593 () Bool)

(declare-fun e!52304 () Bool)

(assert (=> d!19593 e!52304))

(declare-fun res!41764 () Bool)

(assert (=> d!19593 (=> res!41764 e!52304)))

(declare-fun lt!37081 () Bool)

(assert (=> d!19593 (= res!41764 (not lt!37081))))

(declare-fun lt!37082 () Bool)

(assert (=> d!19593 (= lt!37081 lt!37082)))

(declare-fun lt!37083 () Unit!2263)

(declare-fun e!52303 () Unit!2263)

(assert (=> d!19593 (= lt!37083 e!52303)))

(declare-fun c!12514 () Bool)

(assert (=> d!19593 (= c!12514 lt!37082)))

(assert (=> d!19593 (= lt!37082 (containsKey!140 (toList!748 lt!36179) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> d!19593 (= (contains!745 lt!36179 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!37081)))

(declare-fun b!80094 () Bool)

(declare-fun lt!37084 () Unit!2263)

(assert (=> b!80094 (= e!52303 lt!37084)))

(assert (=> b!80094 (= lt!37084 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36179) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(assert (=> b!80094 (isDefined!90 (getValueByKey!136 (toList!748 lt!36179) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!80095 () Bool)

(declare-fun Unit!2344 () Unit!2263)

(assert (=> b!80095 (= e!52303 Unit!2344)))

(declare-fun b!80096 () Bool)

(assert (=> b!80096 (= e!52304 (isDefined!90 (getValueByKey!136 (toList!748 lt!36179) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19593 c!12514) b!80094))

(assert (= (and d!19593 (not c!12514)) b!80095))

(assert (= (and d!19593 (not res!41764)) b!80096))

(declare-fun m!81435 () Bool)

(assert (=> d!19593 m!81435))

(declare-fun m!81437 () Bool)

(assert (=> b!80094 m!81437))

(assert (=> b!80094 m!78443))

(assert (=> b!80094 m!78443))

(declare-fun m!81439 () Bool)

(assert (=> b!80094 m!81439))

(assert (=> b!80096 m!78443))

(assert (=> b!80096 m!78443))

(assert (=> b!80096 m!81439))

(assert (=> d!18541 d!19593))

(declare-fun b!80098 () Bool)

(declare-fun e!52305 () Option!142)

(declare-fun e!52306 () Option!142)

(assert (=> b!80098 (= e!52305 e!52306)))

(declare-fun c!12516 () Bool)

(assert (=> b!80098 (= c!12516 (and ((_ is Cons!1529) lt!36176) (not (= (_1!1105 (h!2117 lt!36176)) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!80097 () Bool)

(assert (=> b!80097 (= e!52305 (Some!141 (_2!1105 (h!2117 lt!36176))))))

(declare-fun b!80099 () Bool)

(assert (=> b!80099 (= e!52306 (getValueByKey!136 (t!5183 lt!36176) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!80100 () Bool)

(assert (=> b!80100 (= e!52306 None!140)))

(declare-fun d!19595 () Bool)

(declare-fun c!12515 () Bool)

(assert (=> d!19595 (= c!12515 (and ((_ is Cons!1529) lt!36176) (= (_1!1105 (h!2117 lt!36176)) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19595 (= (getValueByKey!136 lt!36176 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!52305)))

(assert (= (and d!19595 c!12515) b!80097))

(assert (= (and d!19595 (not c!12515)) b!80098))

(assert (= (and b!80098 c!12516) b!80099))

(assert (= (and b!80098 (not c!12516)) b!80100))

(declare-fun m!81441 () Bool)

(assert (=> b!80099 m!81441))

(assert (=> d!18541 d!19595))

(declare-fun d!19597 () Bool)

(assert (=> d!19597 (= (getValueByKey!136 lt!36176 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) (Some!141 (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun lt!37085 () Unit!2263)

(assert (=> d!19597 (= lt!37085 (choose!468 lt!36176 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun e!52307 () Bool)

(assert (=> d!19597 e!52307))

(declare-fun res!41765 () Bool)

(assert (=> d!19597 (=> (not res!41765) (not e!52307))))

(assert (=> d!19597 (= res!41765 (isStrictlySorted!290 lt!36176))))

(assert (=> d!19597 (= (lemmaContainsTupThenGetReturnValue!55 lt!36176 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!37085)))

(declare-fun b!80101 () Bool)

(declare-fun res!41766 () Bool)

(assert (=> b!80101 (=> (not res!41766) (not e!52307))))

(assert (=> b!80101 (= res!41766 (containsKey!140 lt!36176 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!80102 () Bool)

(assert (=> b!80102 (= e!52307 (contains!748 lt!36176 (tuple2!2191 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (= (and d!19597 res!41765) b!80101))

(assert (= (and b!80101 res!41766) b!80102))

(assert (=> d!19597 m!78437))

(declare-fun m!81443 () Bool)

(assert (=> d!19597 m!81443))

(declare-fun m!81445 () Bool)

(assert (=> d!19597 m!81445))

(declare-fun m!81447 () Bool)

(assert (=> b!80101 m!81447))

(declare-fun m!81449 () Bool)

(assert (=> b!80102 m!81449))

(assert (=> d!18541 d!19597))

(declare-fun c!12517 () Bool)

(declare-fun b!80103 () Bool)

(assert (=> b!80103 (= c!12517 (and ((_ is Cons!1529) (toList!748 lt!35970)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35970))) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun e!52311 () List!1533)

(declare-fun e!52308 () List!1533)

(assert (=> b!80103 (= e!52311 e!52308)))

(declare-fun call!7391 () List!1533)

(declare-fun e!52310 () List!1533)

(declare-fun bm!7386 () Bool)

(declare-fun c!12518 () Bool)

(assert (=> bm!7386 (= call!7391 ($colon$colon!68 e!52310 (ite c!12518 (h!2117 (toList!748 lt!35970)) (tuple2!2191 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun c!12519 () Bool)

(assert (=> bm!7386 (= c!12519 c!12518)))

(declare-fun d!19599 () Bool)

(declare-fun e!52312 () Bool)

(assert (=> d!19599 e!52312))

(declare-fun res!41767 () Bool)

(assert (=> d!19599 (=> (not res!41767) (not e!52312))))

(declare-fun lt!37086 () List!1533)

(assert (=> d!19599 (= res!41767 (isStrictlySorted!290 lt!37086))))

(declare-fun e!52309 () List!1533)

(assert (=> d!19599 (= lt!37086 e!52309)))

(assert (=> d!19599 (= c!12518 (and ((_ is Cons!1529) (toList!748 lt!35970)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35970))) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19599 (isStrictlySorted!290 (toList!748 lt!35970))))

(assert (=> d!19599 (= (insertStrictlySorted!57 (toList!748 lt!35970) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) lt!37086)))

(declare-fun c!12520 () Bool)

(declare-fun b!80104 () Bool)

(assert (=> b!80104 (= e!52310 (ite c!12520 (t!5183 (toList!748 lt!35970)) (ite c!12517 (Cons!1529 (h!2117 (toList!748 lt!35970)) (t!5183 (toList!748 lt!35970))) Nil!1530)))))

(declare-fun bm!7387 () Bool)

(declare-fun call!7390 () List!1533)

(assert (=> bm!7387 (= call!7390 call!7391)))

(declare-fun b!80105 () Bool)

(assert (=> b!80105 (= e!52309 call!7391)))

(declare-fun b!80106 () Bool)

(declare-fun res!41768 () Bool)

(assert (=> b!80106 (=> (not res!41768) (not e!52312))))

(assert (=> b!80106 (= res!41768 (containsKey!140 lt!37086 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!80107 () Bool)

(declare-fun call!7389 () List!1533)

(assert (=> b!80107 (= e!52308 call!7389)))

(declare-fun b!80108 () Bool)

(assert (=> b!80108 (= e!52311 call!7390)))

(declare-fun b!80109 () Bool)

(assert (=> b!80109 (= e!52309 e!52311)))

(assert (=> b!80109 (= c!12520 (and ((_ is Cons!1529) (toList!748 lt!35970)) (= (_1!1105 (h!2117 (toList!748 lt!35970))) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun bm!7388 () Bool)

(assert (=> bm!7388 (= call!7389 call!7390)))

(declare-fun b!80110 () Bool)

(assert (=> b!80110 (= e!52310 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35970)) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!80111 () Bool)

(assert (=> b!80111 (= e!52312 (contains!748 lt!37086 (tuple2!2191 (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))) (_2!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(declare-fun b!80112 () Bool)

(assert (=> b!80112 (= e!52308 call!7389)))

(assert (= (and d!19599 c!12518) b!80105))

(assert (= (and d!19599 (not c!12518)) b!80109))

(assert (= (and b!80109 c!12520) b!80108))

(assert (= (and b!80109 (not c!12520)) b!80103))

(assert (= (and b!80103 c!12517) b!80112))

(assert (= (and b!80103 (not c!12517)) b!80107))

(assert (= (or b!80112 b!80107) bm!7388))

(assert (= (or b!80108 bm!7388) bm!7387))

(assert (= (or b!80105 bm!7387) bm!7386))

(assert (= (and bm!7386 c!12519) b!80110))

(assert (= (and bm!7386 (not c!12519)) b!80104))

(assert (= (and d!19599 res!41767) b!80106))

(assert (= (and b!80106 res!41768) b!80111))

(declare-fun m!81451 () Bool)

(assert (=> b!80106 m!81451))

(declare-fun m!81453 () Bool)

(assert (=> b!80111 m!81453))

(declare-fun m!81455 () Bool)

(assert (=> d!19599 m!81455))

(declare-fun m!81457 () Bool)

(assert (=> d!19599 m!81457))

(declare-fun m!81459 () Bool)

(assert (=> bm!7386 m!81459))

(declare-fun m!81461 () Bool)

(assert (=> b!80110 m!81461))

(assert (=> d!18541 d!19599))

(assert (=> b!78730 d!19431))

(assert (=> b!78730 d!19433))

(declare-fun d!19601 () Bool)

(assert (=> d!19601 (= (get!1192 (getValueByKey!136 (toList!748 lt!35977) lt!35974)) (v!2598 (getValueByKey!136 (toList!748 lt!35977) lt!35974)))))

(assert (=> d!18537 d!19601))

(declare-fun b!80114 () Bool)

(declare-fun e!52313 () Option!142)

(declare-fun e!52314 () Option!142)

(assert (=> b!80114 (= e!52313 e!52314)))

(declare-fun c!12522 () Bool)

(assert (=> b!80114 (= c!12522 (and ((_ is Cons!1529) (toList!748 lt!35977)) (not (= (_1!1105 (h!2117 (toList!748 lt!35977))) lt!35974))))))

(declare-fun b!80113 () Bool)

(assert (=> b!80113 (= e!52313 (Some!141 (_2!1105 (h!2117 (toList!748 lt!35977)))))))

(declare-fun b!80115 () Bool)

(assert (=> b!80115 (= e!52314 (getValueByKey!136 (t!5183 (toList!748 lt!35977)) lt!35974))))

(declare-fun b!80116 () Bool)

(assert (=> b!80116 (= e!52314 None!140)))

(declare-fun d!19603 () Bool)

(declare-fun c!12521 () Bool)

(assert (=> d!19603 (= c!12521 (and ((_ is Cons!1529) (toList!748 lt!35977)) (= (_1!1105 (h!2117 (toList!748 lt!35977))) lt!35974)))))

(assert (=> d!19603 (= (getValueByKey!136 (toList!748 lt!35977) lt!35974) e!52313)))

(assert (= (and d!19603 c!12521) b!80113))

(assert (= (and d!19603 (not c!12521)) b!80114))

(assert (= (and b!80114 c!12522) b!80115))

(assert (= (and b!80114 (not c!12522)) b!80116))

(declare-fun m!81463 () Bool)

(assert (=> b!80115 m!81463))

(assert (=> d!18537 d!19603))

(declare-fun d!19605 () Bool)

(declare-fun res!41769 () Bool)

(declare-fun e!52315 () Bool)

(assert (=> d!19605 (=> res!41769 e!52315)))

(assert (=> d!19605 (= res!41769 (and ((_ is Cons!1529) (toList!748 lt!35888)) (= (_1!1105 (h!2117 (toList!748 lt!35888))) (_1!1105 lt!35788))))))

(assert (=> d!19605 (= (containsKey!140 (toList!748 lt!35888) (_1!1105 lt!35788)) e!52315)))

(declare-fun b!80117 () Bool)

(declare-fun e!52316 () Bool)

(assert (=> b!80117 (= e!52315 e!52316)))

(declare-fun res!41770 () Bool)

(assert (=> b!80117 (=> (not res!41770) (not e!52316))))

(assert (=> b!80117 (= res!41770 (and (or (not ((_ is Cons!1529) (toList!748 lt!35888))) (bvsle (_1!1105 (h!2117 (toList!748 lt!35888))) (_1!1105 lt!35788))) ((_ is Cons!1529) (toList!748 lt!35888)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35888))) (_1!1105 lt!35788))))))

(declare-fun b!80118 () Bool)

(assert (=> b!80118 (= e!52316 (containsKey!140 (t!5183 (toList!748 lt!35888)) (_1!1105 lt!35788)))))

(assert (= (and d!19605 (not res!41769)) b!80117))

(assert (= (and b!80117 res!41770) b!80118))

(declare-fun m!81465 () Bool)

(assert (=> b!80118 m!81465))

(assert (=> d!18701 d!19605))

(declare-fun b!80120 () Bool)

(declare-fun e!52317 () Option!142)

(declare-fun e!52318 () Option!142)

(assert (=> b!80120 (= e!52317 e!52318)))

(declare-fun c!12524 () Bool)

(assert (=> b!80120 (= c!12524 (and ((_ is Cons!1529) (toList!748 lt!36179)) (not (= (_1!1105 (h!2117 (toList!748 lt!36179))) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))))

(declare-fun b!80119 () Bool)

(assert (=> b!80119 (= e!52317 (Some!141 (_2!1105 (h!2117 (toList!748 lt!36179)))))))

(declare-fun b!80121 () Bool)

(assert (=> b!80121 (= e!52318 (getValueByKey!136 (t!5183 (toList!748 lt!36179)) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))))))

(declare-fun b!80122 () Bool)

(assert (=> b!80122 (= e!52318 None!140)))

(declare-fun c!12523 () Bool)

(declare-fun d!19607 () Bool)

(assert (=> d!19607 (= c!12523 (and ((_ is Cons!1529) (toList!748 lt!36179)) (= (_1!1105 (h!2117 (toList!748 lt!36179))) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992))))))))))

(assert (=> d!19607 (= (getValueByKey!136 (toList!748 lt!36179) (_1!1105 (tuple2!2191 lt!35976 (zeroValue!2170 (v!2594 (underlying!281 thiss!992)))))) e!52317)))

(assert (= (and d!19607 c!12523) b!80119))

(assert (= (and d!19607 (not c!12523)) b!80120))

(assert (= (and b!80120 c!12524) b!80121))

(assert (= (and b!80120 (not c!12524)) b!80122))

(declare-fun m!81467 () Bool)

(assert (=> b!80121 m!81467))

(assert (=> b!78430 d!19607))

(declare-fun d!19609 () Bool)

(declare-fun e!52320 () Bool)

(assert (=> d!19609 e!52320))

(declare-fun res!41771 () Bool)

(assert (=> d!19609 (=> res!41771 e!52320)))

(declare-fun lt!37087 () Bool)

(assert (=> d!19609 (= res!41771 (not lt!37087))))

(declare-fun lt!37088 () Bool)

(assert (=> d!19609 (= lt!37087 lt!37088)))

(declare-fun lt!37089 () Unit!2263)

(declare-fun e!52319 () Unit!2263)

(assert (=> d!19609 (= lt!37089 e!52319)))

(declare-fun c!12525 () Bool)

(assert (=> d!19609 (= c!12525 lt!37088)))

(assert (=> d!19609 (= lt!37088 (containsKey!140 (toList!748 lt!36136) (_1!1105 (tuple2!2191 lt!35870 lt!35871))))))

(assert (=> d!19609 (= (contains!745 lt!36136 (_1!1105 (tuple2!2191 lt!35870 lt!35871))) lt!37087)))

(declare-fun b!80123 () Bool)

(declare-fun lt!37090 () Unit!2263)

(assert (=> b!80123 (= e!52319 lt!37090)))

(assert (=> b!80123 (= lt!37090 (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!36136) (_1!1105 (tuple2!2191 lt!35870 lt!35871))))))

(assert (=> b!80123 (isDefined!90 (getValueByKey!136 (toList!748 lt!36136) (_1!1105 (tuple2!2191 lt!35870 lt!35871))))))

(declare-fun b!80124 () Bool)

(declare-fun Unit!2345 () Unit!2263)

(assert (=> b!80124 (= e!52319 Unit!2345)))

(declare-fun b!80125 () Bool)

(assert (=> b!80125 (= e!52320 (isDefined!90 (getValueByKey!136 (toList!748 lt!36136) (_1!1105 (tuple2!2191 lt!35870 lt!35871)))))))

(assert (= (and d!19609 c!12525) b!80123))

(assert (= (and d!19609 (not c!12525)) b!80124))

(assert (= (and d!19609 (not res!41771)) b!80125))

(declare-fun m!81469 () Bool)

(assert (=> d!19609 m!81469))

(declare-fun m!81471 () Bool)

(assert (=> b!80123 m!81471))

(assert (=> b!80123 m!78323))

(assert (=> b!80123 m!78323))

(declare-fun m!81473 () Bool)

(assert (=> b!80123 m!81473))

(assert (=> b!80125 m!78323))

(assert (=> b!80125 m!78323))

(assert (=> b!80125 m!81473))

(assert (=> d!18499 d!19609))

(declare-fun b!80127 () Bool)

(declare-fun e!52321 () Option!142)

(declare-fun e!52322 () Option!142)

(assert (=> b!80127 (= e!52321 e!52322)))

(declare-fun c!12527 () Bool)

(assert (=> b!80127 (= c!12527 (and ((_ is Cons!1529) lt!36133) (not (= (_1!1105 (h!2117 lt!36133)) (_1!1105 (tuple2!2191 lt!35870 lt!35871))))))))

(declare-fun b!80126 () Bool)

(assert (=> b!80126 (= e!52321 (Some!141 (_2!1105 (h!2117 lt!36133))))))

(declare-fun b!80128 () Bool)

(assert (=> b!80128 (= e!52322 (getValueByKey!136 (t!5183 lt!36133) (_1!1105 (tuple2!2191 lt!35870 lt!35871))))))

(declare-fun b!80129 () Bool)

(assert (=> b!80129 (= e!52322 None!140)))

(declare-fun c!12526 () Bool)

(declare-fun d!19611 () Bool)

(assert (=> d!19611 (= c!12526 (and ((_ is Cons!1529) lt!36133) (= (_1!1105 (h!2117 lt!36133)) (_1!1105 (tuple2!2191 lt!35870 lt!35871)))))))

(assert (=> d!19611 (= (getValueByKey!136 lt!36133 (_1!1105 (tuple2!2191 lt!35870 lt!35871))) e!52321)))

(assert (= (and d!19611 c!12526) b!80126))

(assert (= (and d!19611 (not c!12526)) b!80127))

(assert (= (and b!80127 c!12527) b!80128))

(assert (= (and b!80127 (not c!12527)) b!80129))

(declare-fun m!81475 () Bool)

(assert (=> b!80128 m!81475))

(assert (=> d!18499 d!19611))

(declare-fun d!19613 () Bool)

(assert (=> d!19613 (= (getValueByKey!136 lt!36133 (_1!1105 (tuple2!2191 lt!35870 lt!35871))) (Some!141 (_2!1105 (tuple2!2191 lt!35870 lt!35871))))))

(declare-fun lt!37091 () Unit!2263)

(assert (=> d!19613 (= lt!37091 (choose!468 lt!36133 (_1!1105 (tuple2!2191 lt!35870 lt!35871)) (_2!1105 (tuple2!2191 lt!35870 lt!35871))))))

(declare-fun e!52323 () Bool)

(assert (=> d!19613 e!52323))

(declare-fun res!41772 () Bool)

(assert (=> d!19613 (=> (not res!41772) (not e!52323))))

(assert (=> d!19613 (= res!41772 (isStrictlySorted!290 lt!36133))))

(assert (=> d!19613 (= (lemmaContainsTupThenGetReturnValue!55 lt!36133 (_1!1105 (tuple2!2191 lt!35870 lt!35871)) (_2!1105 (tuple2!2191 lt!35870 lt!35871))) lt!37091)))

(declare-fun b!80130 () Bool)

(declare-fun res!41773 () Bool)

(assert (=> b!80130 (=> (not res!41773) (not e!52323))))

(assert (=> b!80130 (= res!41773 (containsKey!140 lt!36133 (_1!1105 (tuple2!2191 lt!35870 lt!35871))))))

(declare-fun b!80131 () Bool)

(assert (=> b!80131 (= e!52323 (contains!748 lt!36133 (tuple2!2191 (_1!1105 (tuple2!2191 lt!35870 lt!35871)) (_2!1105 (tuple2!2191 lt!35870 lt!35871)))))))

(assert (= (and d!19613 res!41772) b!80130))

(assert (= (and b!80130 res!41773) b!80131))

(assert (=> d!19613 m!78317))

(declare-fun m!81477 () Bool)

(assert (=> d!19613 m!81477))

(declare-fun m!81479 () Bool)

(assert (=> d!19613 m!81479))

(declare-fun m!81481 () Bool)

(assert (=> b!80130 m!81481))

(declare-fun m!81483 () Bool)

(assert (=> b!80131 m!81483))

(assert (=> d!18499 d!19613))

(declare-fun c!12528 () Bool)

(declare-fun b!80132 () Bool)

(assert (=> b!80132 (= c!12528 (and ((_ is Cons!1529) (toList!748 lt!35869)) (bvsgt (_1!1105 (h!2117 (toList!748 lt!35869))) (_1!1105 (tuple2!2191 lt!35870 lt!35871)))))))

(declare-fun e!52327 () List!1533)

(declare-fun e!52324 () List!1533)

(assert (=> b!80132 (= e!52327 e!52324)))

(declare-fun e!52326 () List!1533)

(declare-fun c!12529 () Bool)

(declare-fun bm!7389 () Bool)

(declare-fun call!7394 () List!1533)

(assert (=> bm!7389 (= call!7394 ($colon$colon!68 e!52326 (ite c!12529 (h!2117 (toList!748 lt!35869)) (tuple2!2191 (_1!1105 (tuple2!2191 lt!35870 lt!35871)) (_2!1105 (tuple2!2191 lt!35870 lt!35871))))))))

(declare-fun c!12530 () Bool)

(assert (=> bm!7389 (= c!12530 c!12529)))

(declare-fun d!19615 () Bool)

(declare-fun e!52328 () Bool)

(assert (=> d!19615 e!52328))

(declare-fun res!41774 () Bool)

(assert (=> d!19615 (=> (not res!41774) (not e!52328))))

(declare-fun lt!37092 () List!1533)

(assert (=> d!19615 (= res!41774 (isStrictlySorted!290 lt!37092))))

(declare-fun e!52325 () List!1533)

(assert (=> d!19615 (= lt!37092 e!52325)))

(assert (=> d!19615 (= c!12529 (and ((_ is Cons!1529) (toList!748 lt!35869)) (bvslt (_1!1105 (h!2117 (toList!748 lt!35869))) (_1!1105 (tuple2!2191 lt!35870 lt!35871)))))))

(assert (=> d!19615 (isStrictlySorted!290 (toList!748 lt!35869))))

(assert (=> d!19615 (= (insertStrictlySorted!57 (toList!748 lt!35869) (_1!1105 (tuple2!2191 lt!35870 lt!35871)) (_2!1105 (tuple2!2191 lt!35870 lt!35871))) lt!37092)))

(declare-fun c!12531 () Bool)

(declare-fun b!80133 () Bool)

(assert (=> b!80133 (= e!52326 (ite c!12531 (t!5183 (toList!748 lt!35869)) (ite c!12528 (Cons!1529 (h!2117 (toList!748 lt!35869)) (t!5183 (toList!748 lt!35869))) Nil!1530)))))

(declare-fun bm!7390 () Bool)

(declare-fun call!7393 () List!1533)

(assert (=> bm!7390 (= call!7393 call!7394)))

(declare-fun b!80134 () Bool)

(assert (=> b!80134 (= e!52325 call!7394)))

(declare-fun b!80135 () Bool)

(declare-fun res!41775 () Bool)

(assert (=> b!80135 (=> (not res!41775) (not e!52328))))

(assert (=> b!80135 (= res!41775 (containsKey!140 lt!37092 (_1!1105 (tuple2!2191 lt!35870 lt!35871))))))

(declare-fun b!80136 () Bool)

(declare-fun call!7392 () List!1533)

(assert (=> b!80136 (= e!52324 call!7392)))

(declare-fun b!80137 () Bool)

(assert (=> b!80137 (= e!52327 call!7393)))

(declare-fun b!80138 () Bool)

(assert (=> b!80138 (= e!52325 e!52327)))

(assert (=> b!80138 (= c!12531 (and ((_ is Cons!1529) (toList!748 lt!35869)) (= (_1!1105 (h!2117 (toList!748 lt!35869))) (_1!1105 (tuple2!2191 lt!35870 lt!35871)))))))

(declare-fun bm!7391 () Bool)

(assert (=> bm!7391 (= call!7392 call!7393)))

(declare-fun b!80139 () Bool)

(assert (=> b!80139 (= e!52326 (insertStrictlySorted!57 (t!5183 (toList!748 lt!35869)) (_1!1105 (tuple2!2191 lt!35870 lt!35871)) (_2!1105 (tuple2!2191 lt!35870 lt!35871))))))

(declare-fun b!80140 () Bool)

(assert (=> b!80140 (= e!52328 (contains!748 lt!37092 (tuple2!2191 (_1!1105 (tuple2!2191 lt!35870 lt!35871)) (_2!1105 (tuple2!2191 lt!35870 lt!35871)))))))

(declare-fun b!80141 () Bool)

(assert (=> b!80141 (= e!52324 call!7392)))

(assert (= (and d!19615 c!12529) b!80134))

(assert (= (and d!19615 (not c!12529)) b!80138))

(assert (= (and b!80138 c!12531) b!80137))

(assert (= (and b!80138 (not c!12531)) b!80132))

(assert (= (and b!80132 c!12528) b!80141))

(assert (= (and b!80132 (not c!12528)) b!80136))

(assert (= (or b!80141 b!80136) bm!7391))

(assert (= (or b!80137 bm!7391) bm!7390))

(assert (= (or b!80134 bm!7390) bm!7389))

(assert (= (and bm!7389 c!12530) b!80139))

(assert (= (and bm!7389 (not c!12530)) b!80133))

(assert (= (and d!19615 res!41774) b!80135))

(assert (= (and b!80135 res!41775) b!80140))

(declare-fun m!81485 () Bool)

(assert (=> b!80135 m!81485))

(declare-fun m!81487 () Bool)

(assert (=> b!80140 m!81487))

(declare-fun m!81489 () Bool)

(assert (=> d!19615 m!81489))

(declare-fun m!81491 () Bool)

(assert (=> d!19615 m!81491))

(declare-fun m!81493 () Bool)

(assert (=> bm!7389 m!81493))

(declare-fun m!81495 () Bool)

(assert (=> b!80139 m!81495))

(assert (=> d!18499 d!19615))

(declare-fun d!19617 () Bool)

(assert (=> d!19617 (isDefined!90 (getValueByKey!136 (toList!748 lt!35907) (_1!1105 lt!35784)))))

(declare-fun lt!37093 () Unit!2263)

(assert (=> d!19617 (= lt!37093 (choose!471 (toList!748 lt!35907) (_1!1105 lt!35784)))))

(declare-fun e!52329 () Bool)

(assert (=> d!19617 e!52329))

(declare-fun res!41776 () Bool)

(assert (=> d!19617 (=> (not res!41776) (not e!52329))))

(assert (=> d!19617 (= res!41776 (isStrictlySorted!290 (toList!748 lt!35907)))))

(assert (=> d!19617 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 lt!35907) (_1!1105 lt!35784)) lt!37093)))

(declare-fun b!80142 () Bool)

(assert (=> b!80142 (= e!52329 (containsKey!140 (toList!748 lt!35907) (_1!1105 lt!35784)))))

(assert (= (and d!19617 res!41776) b!80142))

(assert (=> d!19617 m!77999))

(assert (=> d!19617 m!77999))

(assert (=> d!19617 m!78527))

(declare-fun m!81497 () Bool)

(assert (=> d!19617 m!81497))

(declare-fun m!81499 () Bool)

(assert (=> d!19617 m!81499))

(assert (=> b!80142 m!78523))

(assert (=> b!78460 d!19617))

(assert (=> b!78460 d!18761))

(assert (=> b!78460 d!18709))

(declare-fun d!19619 () Bool)

(assert (=> d!19619 (isDefined!90 (getValueByKey!136 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun lt!37094 () Unit!2263)

(assert (=> d!19619 (= lt!37094 (choose!471 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(declare-fun e!52330 () Bool)

(assert (=> d!19619 e!52330))

(declare-fun res!41777 () Bool)

(assert (=> d!19619 (=> (not res!41777) (not e!52330))))

(assert (=> d!19619 (= res!41777 (isStrictlySorted!290 (toList!748 call!7149)))))

(assert (=> d!19619 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!89 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)) lt!37094)))

(declare-fun b!80143 () Bool)

(assert (=> b!80143 (= e!52330 (containsKey!140 (toList!748 call!7149) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355)))))

(assert (= (and d!19619 res!41777) b!80143))

(assert (=> d!19619 m!77749))

(assert (=> d!19619 m!78713))

(assert (=> d!19619 m!78713))

(assert (=> d!19619 m!78715))

(assert (=> d!19619 m!77749))

(declare-fun m!81501 () Bool)

(assert (=> d!19619 m!81501))

(declare-fun m!81503 () Bool)

(assert (=> d!19619 m!81503))

(assert (=> b!80143 m!77749))

(assert (=> b!80143 m!78709))

(assert (=> b!78553 d!19619))

(assert (=> b!78553 d!18993))

(assert (=> b!78553 d!18995))

(assert (=> b!78334 d!19449))

(assert (=> b!78334 d!19451))

(declare-fun d!19621 () Bool)

(declare-fun lt!37095 () Bool)

(assert (=> d!19621 (= lt!37095 (select (content!83 (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!52332 () Bool)

(assert (=> d!19621 (= lt!37095 e!52332)))

(declare-fun res!41779 () Bool)

(assert (=> d!19621 (=> (not res!41779) (not e!52332))))

(assert (=> d!19621 (= res!41779 ((_ is Cons!1530) (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)))))

(assert (=> d!19621 (= (contains!747 (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!37095)))

(declare-fun b!80144 () Bool)

(declare-fun e!52331 () Bool)

(assert (=> b!80144 (= e!52332 e!52331)))

(declare-fun res!41778 () Bool)

(assert (=> b!80144 (=> res!41778 e!52331)))

(assert (=> b!80144 (= res!41778 (= (h!2118 (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!80145 () Bool)

(assert (=> b!80145 (= e!52331 (contains!747 (t!5184 (ite c!11911 (Cons!1530 (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) from!355) Nil!1531) Nil!1531)) (select (arr!1894 (_keys!3932 (v!2594 (underlying!281 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!19621 res!41779) b!80144))

(assert (= (and b!80144 (not res!41778)) b!80145))

(declare-fun m!81505 () Bool)

(assert (=> d!19621 m!81505))

(assert (=> d!19621 m!78977))

(declare-fun m!81507 () Bool)

(assert (=> d!19621 m!81507))

(assert (=> b!80145 m!78977))

(declare-fun m!81509 () Bool)

(assert (=> b!80145 m!81509))

(assert (=> b!78716 d!19621))

(declare-fun b!80147 () Bool)

(declare-fun e!52333 () Option!142)

(declare-fun e!52334 () Option!142)

(assert (=> b!80147 (= e!52333 e!52334)))

(declare-fun c!12533 () Bool)

(assert (=> b!80147 (= c!12533 (and ((_ is Cons!1529) (t!5183 lt!35904)) (not (= (_1!1105 (h!2117 (t!5183 lt!35904))) (_1!1105 lt!35784)))))))

(declare-fun b!80146 () Bool)

(assert (=> b!80146 (= e!52333 (Some!141 (_2!1105 (h!2117 (t!5183 lt!35904)))))))

(declare-fun b!80148 () Bool)

(assert (=> b!80148 (= e!52334 (getValueByKey!136 (t!5183 (t!5183 lt!35904)) (_1!1105 lt!35784)))))

(declare-fun b!80149 () Bool)

(assert (=> b!80149 (= e!52334 None!140)))

(declare-fun d!19623 () Bool)

(declare-fun c!12532 () Bool)

(assert (=> d!19623 (= c!12532 (and ((_ is Cons!1529) (t!5183 lt!35904)) (= (_1!1105 (h!2117 (t!5183 lt!35904))) (_1!1105 lt!35784))))))

(assert (=> d!19623 (= (getValueByKey!136 (t!5183 lt!35904) (_1!1105 lt!35784)) e!52333)))

(assert (= (and d!19623 c!12532) b!80146))

(assert (= (and d!19623 (not c!12532)) b!80147))

(assert (= (and b!80147 c!12533) b!80148))

(assert (= (and b!80147 (not c!12533)) b!80149))

(declare-fun m!81511 () Bool)

(assert (=> b!80148 m!81511))

(assert (=> b!78465 d!19623))

(declare-fun b!80150 () Bool)

(declare-fun e!52335 () Bool)

(assert (=> b!80150 (= e!52335 tp_is_empty!2511)))

(declare-fun condMapEmpty!3317 () Bool)

(declare-fun mapDefault!3317 () ValueCell!912)

(assert (=> mapNonEmpty!3315 (= condMapEmpty!3317 (= mapRest!3315 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3317)))))

(declare-fun e!52336 () Bool)

(declare-fun mapRes!3317 () Bool)

(assert (=> mapNonEmpty!3315 (= tp!8787 (and e!52336 mapRes!3317))))

(declare-fun b!80151 () Bool)

(assert (=> b!80151 (= e!52336 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3317 () Bool)

(assert (=> mapIsEmpty!3317 mapRes!3317))

(declare-fun mapNonEmpty!3317 () Bool)

(declare-fun tp!8789 () Bool)

(assert (=> mapNonEmpty!3317 (= mapRes!3317 (and tp!8789 e!52335))))

(declare-fun mapKey!3317 () (_ BitVec 32))

(declare-fun mapRest!3317 () (Array (_ BitVec 32) ValueCell!912))

(declare-fun mapValue!3317 () ValueCell!912)

(assert (=> mapNonEmpty!3317 (= mapRest!3315 (store mapRest!3317 mapKey!3317 mapValue!3317))))

(assert (= (and mapNonEmpty!3315 condMapEmpty!3317) mapIsEmpty!3317))

(assert (= (and mapNonEmpty!3315 (not condMapEmpty!3317)) mapNonEmpty!3317))

(assert (= (and mapNonEmpty!3317 ((_ is ValueCellFull!912) mapValue!3317)) b!80150))

(assert (= (and mapNonEmpty!3315 ((_ is ValueCellFull!912) mapDefault!3317)) b!80151))

(declare-fun m!81513 () Bool)

(assert (=> mapNonEmpty!3317 m!81513))

(declare-fun b!80152 () Bool)

(declare-fun e!52337 () Bool)

(assert (=> b!80152 (= e!52337 tp_is_empty!2511)))

(declare-fun condMapEmpty!3318 () Bool)

(declare-fun mapDefault!3318 () ValueCell!912)

(assert (=> mapNonEmpty!3316 (= condMapEmpty!3318 (= mapRest!3316 ((as const (Array (_ BitVec 32) ValueCell!912)) mapDefault!3318)))))

(declare-fun e!52338 () Bool)

(declare-fun mapRes!3318 () Bool)

(assert (=> mapNonEmpty!3316 (= tp!8788 (and e!52338 mapRes!3318))))

(declare-fun b!80153 () Bool)

(assert (=> b!80153 (= e!52338 tp_is_empty!2511)))

(declare-fun mapIsEmpty!3318 () Bool)

(assert (=> mapIsEmpty!3318 mapRes!3318))

(declare-fun mapNonEmpty!3318 () Bool)

(declare-fun tp!8790 () Bool)

(assert (=> mapNonEmpty!3318 (= mapRes!3318 (and tp!8790 e!52337))))

(declare-fun mapKey!3318 () (_ BitVec 32))

(declare-fun mapValue!3318 () ValueCell!912)

(declare-fun mapRest!3318 () (Array (_ BitVec 32) ValueCell!912))

(assert (=> mapNonEmpty!3318 (= mapRest!3316 (store mapRest!3318 mapKey!3318 mapValue!3318))))

(assert (= (and mapNonEmpty!3316 condMapEmpty!3318) mapIsEmpty!3318))

(assert (= (and mapNonEmpty!3316 (not condMapEmpty!3318)) mapNonEmpty!3318))

(assert (= (and mapNonEmpty!3318 ((_ is ValueCellFull!912) mapValue!3318)) b!80152))

(assert (= (and mapNonEmpty!3316 ((_ is ValueCellFull!912) mapDefault!3318)) b!80153))

(declare-fun m!81515 () Bool)

(assert (=> mapNonEmpty!3318 m!81515))

(declare-fun b_lambda!3563 () Bool)

(assert (= b_lambda!3541 (or (and b!77850 b_free!2189) (and b!77841 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))))) b_lambda!3563)))

(declare-fun b_lambda!3565 () Bool)

(assert (= b_lambda!3535 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3565)))

(declare-fun b_lambda!3567 () Bool)

(assert (= b_lambda!3543 (or (and b!77850 b_free!2189) (and b!77841 b_free!2191 (= (defaultEntry!2272 newMap!16) (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))))) b_lambda!3567)))

(declare-fun b_lambda!3569 () Bool)

(assert (= b_lambda!3559 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3569)))

(declare-fun b_lambda!3571 () Bool)

(assert (= b_lambda!3549 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3571)))

(declare-fun b_lambda!3573 () Bool)

(assert (= b_lambda!3539 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3573)))

(declare-fun b_lambda!3575 () Bool)

(assert (= b_lambda!3561 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3575)))

(declare-fun b_lambda!3577 () Bool)

(assert (= b_lambda!3537 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3577)))

(declare-fun b_lambda!3579 () Bool)

(assert (= b_lambda!3547 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3579)))

(declare-fun b_lambda!3581 () Bool)

(assert (= b_lambda!3557 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3581)))

(declare-fun b_lambda!3583 () Bool)

(assert (= b_lambda!3545 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3583)))

(declare-fun b_lambda!3585 () Bool)

(assert (= b_lambda!3553 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3585)))

(declare-fun b_lambda!3587 () Bool)

(assert (= b_lambda!3533 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3587)))

(declare-fun b_lambda!3589 () Bool)

(assert (= b_lambda!3555 (or (and b!77850 b_free!2189 (= (defaultEntry!2272 (v!2594 (underlying!281 thiss!992))) (defaultEntry!2272 newMap!16))) (and b!77841 b_free!2191) b_lambda!3589)))

(check-sat (not b!79257) (not b!79835) (not b!78994) (not b!79008) (not d!19033) (not b!79270) (not d!18945) (not b!79486) (not d!19139) (not d!19473) (not b!79439) (not d!19405) (not b!79737) (not b!79528) (not b!78968) (not b!79140) (not b_lambda!3585) (not d!19375) (not d!19309) (not b!79086) (not b!79665) (not b!79529) (not b!78851) (not d!19617) (not d!18737) (not b_lambda!3575) (not b!78927) (not b!79120) (not b!79005) (not bm!7365) (not d!18795) (not b!79416) (not b!79545) (not d!19569) (not b!79115) (not b!79916) (not mapNonEmpty!3317) (not b!79431) (not b!79687) (not d!18845) (not b!80115) (not b!79165) (not b!80079) (not b!78950) (not bm!7325) (not d!19355) (not d!19091) (not b!79427) (not b!79782) (not d!18999) tp_is_empty!2511 (not b_lambda!3587) (not d!18781) (not b!79731) (not b!79410) (not b!79149) (not b!79818) (not b!78877) (not b!79110) (not b!78846) (not b!79161) (not b!78943) (not d!19297) (not d!18925) (not b!79180) (not bm!7244) (not b!80044) (not b!79790) (not b!79763) (not b!78809) (not b!79112) (not bm!7279) (not d!18975) (not b!79043) (not b!79484) (not b!78823) (not bm!7313) (not b!79590) (not b!79295) (not b!79832) (not d!19475) (not b!79674) (not d!19293) (not d!18969) (not d!18849) (not b!79168) (not b!79096) (not d!18875) (not d!18801) (not d!18867) (not b!79822) (not d!18941) (not b!80118) (not b!78801) (not b!79851) (not b!79206) (not b!79909) (not b!79860) (not b!79931) (not bm!7261) (not b!79622) (not bm!7270) (not bm!7335) (not b_lambda!3523) (not bm!7374) (not bm!7331) (not b!79996) (not b!79689) (not d!18723) (not b!79074) (not b!78814) (not d!19609) (not d!18927) (not d!18895) (not b!79329) (not b!78813) (not d!19077) (not b!79546) (not b!79598) (not b!78956) (not b!79854) (not d!19387) (not d!19099) (not d!19561) (not d!19211) (not b!79912) (not b!79063) (not b!78903) (not b!79869) (not b!79904) (not d!18985) (not b!79333) (not b!79440) (not bm!7310) (not b!79932) (not b!79740) (not d!18855) (not bm!7304) (not b!79298) (not b!79808) (not d!18949) (not b!80121) (not d!19059) (not b!79894) (not bm!7273) (not b!79456) (not d!19437) (not b!79065) (not d!19107) (not d!19283) (not b!80048) (not d!18881) (not b!79523) (not d!19203) (not d!18989) (not b!79468) (not b!78912) (not b!79172) (not b!79443) (not b!79786) (not d!19499) (not b!79979) (not b!79289) (not b!79217) (not b!78993) (not b!79746) (not b_lambda!3525) (not d!18745) (not d!18833) (not bm!7258) (not d!19157) (not b!79991) (not b!80004) (not d!18853) (not d!19507) (not d!19303) (not b!79143) (not b!79805) (not b!79438) (not b!78797) (not d!18963) (not d!18735) (not bm!7350) (not b!79940) (not d!19503) (not d!18749) (not d!19571) (not d!19201) (not d!19017) (not b!79595) (not b!79956) (not d!18877) (not bm!7332) (not d!19305) (not b!79414) (not d!18983) (not b!79554) (not d!19143) (not b!78793) (not d!19123) (not b!79100) (not d!18731) (not b!79550) (not b!79692) (not b!79879) (not d!19219) (not b!80076) (not b!79606) (not b!79380) (not b!78989) (not b!79355) (not b!78866) (not d!19095) (not b!79580) (not d!19371) (not b!79126) (not d!18885) (not b!79077) (not b!79463) (not b!80140) (not bm!7288) (not b!79670) (not b!80009) (not bm!7298) (not d!19131) (not b!79751) (not b!78965) (not b!79853) (not b!79488) (not b!79943) (not d!19215) (not b!79610) (not d!19209) (not b!79182) (not d!19221) (not b!78817) (not b!78841) (not bm!7253) (not b!79009) (not b!78958) (not d!18761) (not b!79549) (not d!19085) (not d!19537) (not b!79389) (not d!19299) (not b!79286) (not d!19259) (not d!18939) (not b!78900) (not b!79694) (not d!19057) (not d!18721) (not d!19419) (not b!79961) (not b!79028) (not d!18739) (not d!19191) (not b!79114) (not bm!7354) (not b!79323) (not d!19187) (not d!19423) (not b!79375) (not d!19035) (not d!19529) (not b!79290) (not d!18779) (not b!79368) (not b!79678) (not b!80145) (not b!79638) (not b!79776) (not bm!7361) (not b!79624) (not b!79893) (not b!79012) (not d!19407) (not b!79480) (not b!79682) (not b!79321) (not d!19349) (not b!79398) (not b!80002) (not d!19287) (not bm!7357) (not b!79849) (not b!79868) (not b!79021) (not d!19525) (not b!78896) (not b!80083) (not b!79994) (not d!19039) (not d!19471) (not bm!7371) (not d!18787) (not bm!7255) (not b!78858) (not b!78933) (not bm!7316) (not b!79306) (not bm!7247) (not b!79812) (not d!19453) (not b!79307) (not d!18813) (not b_next!2191) (not b_lambda!3507) (not b!78888) (not b!79743) (not b_lambda!3567) (not b!79629) (not b!79157) (not b!80142) (not b!79341) (not b_lambda!3531) (not b!79919) (not b!80071) (not d!19127) (not b!79158) (not d!19235) (not bm!7324) (not b!79560) (not b!79101) (not b!80036) (not bm!7289) (not b!79069) (not b!79960) (not d!19179) (not b!78818) (not b!78986) (not b!79260) (not bm!7276) (not b!79967) (not b!79177) (not b!79470) (not bm!7322) (not b!79809) (not b!79617) (not b!79423) (not b!79773) (not b!79897) (not d!18851) (not d!19557) (not b!79451) (not b!80000) (not d!18913) (not d!19171) (not b!79558) (not d!19025) (not b!79795) (not d!18825) (not bm!7382) (not bm!7321) (not b_next!2189) (not b!78833) (not b!79988) (not d!19585) (not b!79729) (not b!79800) (not b!79201) (not bm!7251) (not b!79429) (not b!79518) (not b!79864) (not d!19319) (not b!79963) (not d!19579) (not b!79985) (not b!79779) (not b!78983) (not b!79146) (not b!79642) (not d!19119) (not d!19531) (not d!18835) (not b!79465) (not b!78854) (not b!79614) (not b!79034) (not d!19379) (not b!79385) (not d!19517) (not b!79453) (not b!79901) (not d!19311) (not b_lambda!3571) (not bm!7296) (not b!79483) (not d!18767) (not b!79573) (not b!79615) (not b!78964) (not b!79875) (not d!18785) (not b!79592) (not b!79407) (not b!79455) (not b!79837) (not b!79971) (not d!19103) (not d!19615) (not b!79194) (not b!79060) (not b!79944) (not b!79541) (not bm!7285) (not bm!7340) (not b!79750) (not b!79351) (not d!19431) (not d!18843) (not b!79625) (not bm!7351) (not b!79710) (not b!79052) (not b!79885) (not d!19165) (not b!78974) (not b!79460) (not b!80099) (not b!79024) (not d!19353) (not d!19087) (not b!80131) (not b!79250) (not b!79003) (not b!78947) (not d!19577) (not b!79281) (not bm!7259) (not b!79033) (not b!78803) (not b!79381) (not b!79644) (not bm!7299) (not d!19449) (not b!78905) (not b!78957) (not b!79347) (not b!79848) (not b!79475) (not b!79603) (not b!79700) (not b!78819) (not b!79816) (not b!78915) (not d!18997) (not b!79568) (not b!79824) (not b!78911) (not b!79739) (not d!18759) (not d!19041) (not d!19343) (not b!80125) (not b!79219) (not bm!7280) (not d!19247) (not b!79757) (not b!79648) (not b!79877) (not b!79993) (not b!80102) (not d!18979) (not b!80135) (not b!79512) (not d!19565) (not b_lambda!3529) (not d!19167) (not b!78859) (not b!79713) (not b!78955) (not b!79526) (not bm!7364) (not d!18871) (not b!79634) (not b!78829) (not b!79536) (not mapNonEmpty!3318) (not b!79597) (not b!78820) (not b!79725) (not d!18893) (not d!19325) (not b!79566) (not b!79071) b_and!4889 (not bm!7286) (not b!79197) (not d!19245) (not b!79844) (not b!79402) (not d!19061) (not b!79774) (not b!79196) (not d!18993) (not d!19243) (not b!79914) (not d!19249) (not d!18753) (not d!19397) (not b!79707) (not d!19391) (not b!80110) (not d!18805) (not b!79392) (not b!79702) (not b!79561) (not b!79042) (not b!78844) (not d!18777) (not b!79667) (not b!78918) (not b!79265) (not b!80064) (not b!79576) (not b!79292) (not b!79188) (not b!79946) (not b!79038) (not d!19359) (not b!78826) (not b!79255) (not b_lambda!3589) (not d!19313) (not b!79516) (not b!79514) (not b!79082) (not d!18793) (not b!79918) (not b!79238) (not d!18973) (not d!18747) (not d!19089) (not b!79160) (not b!79520) (not d!19533) (not b!79450) (not b!80040) (not b!79435) (not d!19097) (not b!79185) (not b!80139) (not b!80123) (not b!79633) (not b!79840) (not d!19401) (not b!78787) (not b!79066) (not bm!7264) (not b!78831) (not bm!7307) (not d!18929) (not b!79522) (not b!80094) (not b!79952) (not b!79310) (not b!79589) (not d!19591) (not d!18773) (not d!19069) (not b!78804) (not b!79210) (not d!19553) (not b!80046) (not b!79433) (not d!19055) (not b_lambda!3577) (not d!19613) (not b!79555) (not b!79651) (not b!79810) (not d!19429) (not d!18829) (not d!19051) (not d!18831) (not d!19273) (not b!79515) (not b!79084) (not b!78822) (not b!80130) (not b!79889) (not b!79534) (not b!79922) (not d!19081) (not b!79363) (not b!78800) (not d!18757) (not d!19137) (not b!78806) (not b!78885) (not b!79141) (not b!79492) (not d!19317) (not b!80111) (not d!19535) (not b!78977) (not b!79570) (not d!18905) (not b!79205) (not d!19395) (not b!79660) (not b!79153) (not b!80143) (not b!79131) (not d!18921) (not bm!7256) (not b!79061) (not bm!7248) (not d!19153) (not d!19285) (not bm!7348) (not b!79537) (not d!18725) (not b_lambda!3527) (not b!79717) (not d!18819) (not d!19621) (not bm!7383) (not b!79936) (not b!79189) (not b!79531) (not b!79691) (not b!79720) (not bm!7389) (not d!19369) (not d!19497) (not d!19337) (not b!80081) (not b!79804) (not b!80087) (not b!78949) (not b!79951) (not b!80005) (not b!79004) (not b!79723) (not b!79338) (not d!19125) (not b!79769) (not d!19237) (not b!79681) (not b!79258) (not b!78790) (not d!19519) (not b!79724) (not d!18811) (not d!19469) (not d!19435) (not b!80089) (not b!79639) (not b!79395) (not b!79434) (not b!79138) (not b!79969) (not b!79645) (not b!79471) (not b!79641) (not b!78808) (not b!79273) (not b!79018) (not b!79771) (not b!79328) (not b!79830) (not bm!7317) (not b!80068) (not b!79721) (not b!79983) (not b!79742) (not b_lambda!3509) (not b!79441) (not d!19073) (not d!18911) (not b!78812) (not b!79026) (not bm!7245) (not d!19307) (not b!79856) (not d!18743) (not b!79253) (not b!79448) (not b!80096) (not d!18729) (not d!19315) (not b!79360) (not d!19421) (not b!79371) (not b!79765) (not b!79267) (not d!18859) (not b!79563) (not d!19101) (not b!78863) (not b!79655) (not b!79600) (not b!79173) (not b!78848) (not d!19409) (not d!19193) (not d!19109) (not b_lambda!3563) (not b!79442) (not b!79106) (not d!18821) (not b!79432) (not d!19381) (not d!19083) (not b!79458) (not b!78981) (not b!79092) (not bm!7339) (not b!80074) (not b!78868) (not b!78811) (not b!79524) (not b!78945) (not d!19225) (not b!79761) (not d!19443) (not b!79068) (not b!79619) (not bm!7343) (not d!19539) (not d!19385) (not d!19295) (not b!78895) (not b!78799) (not b!79820) (not d!19291) (not b!79118) (not b_lambda!3569) (not b!79079) (not b!78796) (not b!79412) (not b!80101) (not b!79282) (not b!79552) (not bm!7347) (not bm!7301) (not d!19105) (not b!79247) (not b!79419) (not d!19135) (not d!19511) (not b!79319) (not b!78982) (not d!19021) (not b!78998) (not b!78880) (not b!79727) (not d!18919) (not b!79428) (not bm!7353) (not b!80069) (not b!79728) (not b!79781) (not b!79091) (not d!18903) (not d!18915) (not b!79007) (not d!18933) (not d!19447) (not b!79698) (not b!79949) (not b!79104) (not d!18751) (not b!79103) (not b!78922) (not d!19403) (not bm!7267) b_and!4891 (not bm!7265) (not d!18771) (not b!79053) (not b!79272) (not b!78972) (not d!19227) (not b!79636) (not b_lambda!3581) (not b!78953) (not d!19223) (not b!80042) (not bm!7386) (not d!19117) (not b!78962) (not b!80008) (not b!79726) (not b!78924) (not b!79977) (not b!79485) (not bm!7295) (not d!19075) (not b_lambda!3551) (not bm!7271) (not b!79089) (not b!79663) (not d!19329) (not d!18991) (not b_lambda!3511) (not bm!7283) (not d!19207) (not b_lambda!3573) (not b!79373) (not b!80055) (not bm!7291) (not b!79015) (not d!19481) (not b!78969) (not d!18741) (not d!19465) (not d!18733) (not b!79123) (not b!79326) (not bm!7250) (not b!79656) (not bm!7262) (not b!79998) (not b!79898) (not b!79135) (not b!80051) (not b!78967) (not d!19619) (not b!79312) (not bm!7368) (not bm!7268) (not b!79425) (not b_lambda!3579) (not d!19279) (not b!79827) (not d!19217) (not b!79436) (not d!19289) (not b!80085) (not b!79556) (not b!80035) (not d!18961) (not d!19003) (not b!79343) (not b!78884) (not b!78843) (not b!79829) (not b!79302) (not b!78836) (not d!19523) (not bm!7327) (not b!80041) (not d!18879) (not b!79462) (not b!79990) (not b!79594) (not b!79378) (not d!19113) (not b!79605) (not d!19161) (not b!79906) (not b_lambda!3583) (not b!79356) (not b!79337) (not b!79791) (not b!80128) (not b!79575) (not b!78960) (not d!19093) (not bm!7336) (not b!78936) (not d!19415) (not b!80093) (not b!79736) (not d!19489) (not b!79263) (not d!19023) (not b!79927) (not b!79315) (not b!80091) (not b!79965) (not b!79981) (not b!80038) (not d!18959) (not b!79345) (not b!78917) (not d!18727) (not b!78959) (not d!19173) (not bm!7328) (not b!79767) (not b!78931) (not b!79048) (not b!79834) (not d!19509) (not b!79882) (not b!80106) (not d!19593) (not b!79884) (not d!19281) (not b!79403) (not b!79277) (not d!19079) (not b!79297) (not bm!7360) (not b!78878) (not d!19277) (not b!79858) (not b!79390) (not b!79191) (not d!19599) (not d!19515) (not b!78916) (not b!79732) (not b!79584) (not bm!7263) (not b!79214) (not d!18791) (not b!79479) (not bm!7381) (not d!18947) (not b!78891) (not d!19005) (not b!79872) (not d!19275) (not d!18899) (not d!18865) (not d!19597) (not b!79001) (not d!18967) (not b!78908) (not b!79162) (not d!19383) (not b!80148) (not d!19301) (not b!79753) (not b!80065) (not d!19439) (not b!79031) (not b!79130) (not b!79359) (not b!79454) (not b!79852) (not b!78970) (not b_lambda!3499) (not b!79696) (not b_lambda!3565) (not d!19583) (not b!80073) (not b!79684) (not d!18769) (not b!79509) (not b!79070) (not b!79974) (not d!18931) (not b!79148) (not b!78906) (not b!80060) (not b!79446) (not b!79585))
(check-sat b_and!4889 b_and!4891 (not b_next!2189) (not b_next!2191))
