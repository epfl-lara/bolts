; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!13696 () Bool)

(assert start!13696)

(declare-fun b!126082 () Bool)

(declare-fun b_free!2849 () Bool)

(declare-fun b_next!2849 () Bool)

(assert (=> b!126082 (= b_free!2849 (not b_next!2849))))

(declare-fun tp!10955 () Bool)

(declare-fun b_and!7773 () Bool)

(assert (=> b!126082 (= tp!10955 b_and!7773)))

(declare-fun b!126074 () Bool)

(declare-fun b_free!2851 () Bool)

(declare-fun b_next!2851 () Bool)

(assert (=> b!126074 (= b_free!2851 (not b_next!2851))))

(declare-fun tp!10953 () Bool)

(declare-fun b_and!7775 () Bool)

(assert (=> b!126074 (= tp!10953 b_and!7775)))

(declare-fun b!126071 () Bool)

(declare-fun e!82378 () Bool)

(declare-fun e!82368 () Bool)

(declare-fun mapRes!4499 () Bool)

(assert (=> b!126071 (= e!82378 (and e!82368 mapRes!4499))))

(declare-fun condMapEmpty!4499 () Bool)

(declare-datatypes ((V!3435 0))(
  ( (V!3436 (val!1465 Int)) )
))
(declare-datatypes ((array!4698 0))(
  ( (array!4699 (arr!2224 (Array (_ BitVec 32) (_ BitVec 64))) (size!2488 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1077 0))(
  ( (ValueCellFull!1077 (v!3121 V!3435)) (EmptyCell!1077) )
))
(declare-datatypes ((array!4700 0))(
  ( (array!4701 (arr!2225 (Array (_ BitVec 32) ValueCell!1077)) (size!2489 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!1062 0))(
  ( (LongMapFixedSize!1063 (defaultEntry!2783 Int) (mask!7039 (_ BitVec 32)) (extraKeys!2564 (_ BitVec 32)) (zeroValue!2646 V!3435) (minValue!2646 V!3435) (_size!580 (_ BitVec 32)) (_keys!4516 array!4698) (_values!2766 array!4700) (_vacant!580 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!854 0))(
  ( (Cell!855 (v!3122 LongMapFixedSize!1062)) )
))
(declare-datatypes ((LongMap!854 0))(
  ( (LongMap!855 (underlying!438 Cell!854)) )
))
(declare-fun thiss!992 () LongMap!854)

(declare-fun mapDefault!4500 () ValueCell!1077)

(assert (=> b!126071 (= condMapEmpty!4499 (= (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1077)) mapDefault!4500)))))

(declare-fun b!126072 () Bool)

(declare-fun res!61015 () Bool)

(declare-fun e!82370 () Bool)

(assert (=> b!126072 (=> (not res!61015) (not e!82370))))

(declare-fun newMap!16 () LongMapFixedSize!1062)

(assert (=> b!126072 (= res!61015 (bvsge (bvadd #b00000000000000000000000000000001 (mask!7039 newMap!16)) (_size!580 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun mapNonEmpty!4499 () Bool)

(declare-fun mapRes!4500 () Bool)

(declare-fun tp!10956 () Bool)

(declare-fun e!82380 () Bool)

(assert (=> mapNonEmpty!4499 (= mapRes!4500 (and tp!10956 e!82380))))

(declare-fun mapKey!4500 () (_ BitVec 32))

(declare-fun mapValue!4500 () ValueCell!1077)

(declare-fun mapRest!4499 () (Array (_ BitVec 32) ValueCell!1077))

(assert (=> mapNonEmpty!4499 (= (arr!2225 (_values!2766 newMap!16)) (store mapRest!4499 mapKey!4500 mapValue!4500))))

(declare-fun b!126073 () Bool)

(declare-fun e!82379 () Bool)

(declare-fun e!82369 () Bool)

(assert (=> b!126073 (= e!82379 e!82369)))

(declare-fun res!61016 () Bool)

(assert (=> start!13696 (=> (not res!61016) (not e!82370))))

(declare-fun valid!503 (LongMap!854) Bool)

(assert (=> start!13696 (= res!61016 (valid!503 thiss!992))))

(assert (=> start!13696 e!82370))

(declare-fun e!82376 () Bool)

(assert (=> start!13696 e!82376))

(assert (=> start!13696 true))

(declare-fun e!82374 () Bool)

(assert (=> start!13696 e!82374))

(declare-fun tp_is_empty!2841 () Bool)

(declare-fun e!82367 () Bool)

(declare-fun array_inv!1363 (array!4698) Bool)

(declare-fun array_inv!1364 (array!4700) Bool)

(assert (=> b!126074 (= e!82374 (and tp!10953 tp_is_empty!2841 (array_inv!1363 (_keys!4516 newMap!16)) (array_inv!1364 (_values!2766 newMap!16)) e!82367))))

(declare-fun b!126075 () Bool)

(declare-fun e!82377 () Bool)

(declare-fun e!82375 () Bool)

(assert (=> b!126075 (= e!82377 e!82375)))

(declare-fun res!61014 () Bool)

(assert (=> b!126075 (=> (not res!61014) (not e!82375))))

(declare-datatypes ((tuple2!2568 0))(
  ( (tuple2!2569 (_1!1294 (_ BitVec 64)) (_2!1294 V!3435)) )
))
(declare-datatypes ((List!1719 0))(
  ( (Nil!1716) (Cons!1715 (h!2317 tuple2!2568) (t!6078 List!1719)) )
))
(declare-datatypes ((ListLongMap!1685 0))(
  ( (ListLongMap!1686 (toList!858 List!1719)) )
))
(declare-fun lt!65045 () ListLongMap!1685)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun contains!877 (ListLongMap!1685 (_ BitVec 64)) Bool)

(assert (=> b!126075 (= res!61014 (contains!877 lt!65045 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-datatypes ((tuple2!2570 0))(
  ( (tuple2!2571 (_1!1295 Bool) (_2!1295 LongMapFixedSize!1062)) )
))
(declare-fun lt!65043 () tuple2!2570)

(declare-fun update!183 (LongMapFixedSize!1062 (_ BitVec 64) V!3435) tuple2!2570)

(declare-fun get!1452 (ValueCell!1077 V!3435) V!3435)

(declare-fun dynLambda!416 (Int (_ BitVec 64)) V!3435)

(assert (=> b!126075 (= lt!65043 (update!183 newMap!16 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!126076 () Bool)

(declare-fun res!61012 () Bool)

(assert (=> b!126076 (=> (not res!61012) (not e!82370))))

(declare-fun valid!504 (LongMapFixedSize!1062) Bool)

(assert (=> b!126076 (= res!61012 (valid!504 newMap!16))))

(declare-fun b!126077 () Bool)

(declare-fun e!82372 () Bool)

(assert (=> b!126077 (= e!82372 tp_is_empty!2841)))

(declare-fun b!126078 () Bool)

(assert (=> b!126078 (= e!82370 e!82377)))

(declare-fun res!61011 () Bool)

(assert (=> b!126078 (=> (not res!61011) (not e!82377))))

(declare-fun lt!65044 () ListLongMap!1685)

(assert (=> b!126078 (= res!61011 (and (= lt!65044 lt!65045) (not (= (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1383 (LongMapFixedSize!1062) ListLongMap!1685)

(assert (=> b!126078 (= lt!65045 (map!1383 newMap!16))))

(declare-fun getCurrentListMap!530 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 32) Int) ListLongMap!1685)

(assert (=> b!126078 (= lt!65044 (getCurrentListMap!530 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun b!126079 () Bool)

(assert (=> b!126079 (= e!82375 (and (= (size!2489 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!7039 (v!3122 (underlying!438 thiss!992))))) (not (= (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (size!2489 (_values!2766 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!126080 () Bool)

(assert (=> b!126080 (= e!82376 e!82379)))

(declare-fun b!126081 () Bool)

(declare-fun e!82373 () Bool)

(assert (=> b!126081 (= e!82373 tp_is_empty!2841)))

(assert (=> b!126082 (= e!82369 (and tp!10955 tp_is_empty!2841 (array_inv!1363 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (array_inv!1364 (_values!2766 (v!3122 (underlying!438 thiss!992)))) e!82378))))

(declare-fun b!126083 () Bool)

(declare-fun res!61017 () Bool)

(assert (=> b!126083 (=> (not res!61017) (not e!82375))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!126083 (= res!61017 (validMask!0 (mask!7039 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun b!126084 () Bool)

(assert (=> b!126084 (= e!82380 tp_is_empty!2841)))

(declare-fun mapIsEmpty!4499 () Bool)

(assert (=> mapIsEmpty!4499 mapRes!4500))

(declare-fun mapIsEmpty!4500 () Bool)

(assert (=> mapIsEmpty!4500 mapRes!4499))

(declare-fun mapNonEmpty!4500 () Bool)

(declare-fun tp!10954 () Bool)

(assert (=> mapNonEmpty!4500 (= mapRes!4499 (and tp!10954 e!82372))))

(declare-fun mapValue!4499 () ValueCell!1077)

(declare-fun mapRest!4500 () (Array (_ BitVec 32) ValueCell!1077))

(declare-fun mapKey!4499 () (_ BitVec 32))

(assert (=> mapNonEmpty!4500 (= (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (store mapRest!4500 mapKey!4499 mapValue!4499))))

(declare-fun b!126085 () Bool)

(declare-fun res!61013 () Bool)

(assert (=> b!126085 (=> (not res!61013) (not e!82370))))

(assert (=> b!126085 (= res!61013 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!126086 () Bool)

(assert (=> b!126086 (= e!82368 tp_is_empty!2841)))

(declare-fun b!126087 () Bool)

(assert (=> b!126087 (= e!82367 (and e!82373 mapRes!4500))))

(declare-fun condMapEmpty!4500 () Bool)

(declare-fun mapDefault!4499 () ValueCell!1077)

(assert (=> b!126087 (= condMapEmpty!4500 (= (arr!2225 (_values!2766 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1077)) mapDefault!4499)))))

(assert (= (and start!13696 res!61016) b!126085))

(assert (= (and b!126085 res!61013) b!126076))

(assert (= (and b!126076 res!61012) b!126072))

(assert (= (and b!126072 res!61015) b!126078))

(assert (= (and b!126078 res!61011) b!126075))

(assert (= (and b!126075 res!61014) b!126083))

(assert (= (and b!126083 res!61017) b!126079))

(assert (= (and b!126071 condMapEmpty!4499) mapIsEmpty!4500))

(assert (= (and b!126071 (not condMapEmpty!4499)) mapNonEmpty!4500))

(get-info :version)

(assert (= (and mapNonEmpty!4500 ((_ is ValueCellFull!1077) mapValue!4499)) b!126077))

(assert (= (and b!126071 ((_ is ValueCellFull!1077) mapDefault!4500)) b!126086))

(assert (= b!126082 b!126071))

(assert (= b!126073 b!126082))

(assert (= b!126080 b!126073))

(assert (= start!13696 b!126080))

(assert (= (and b!126087 condMapEmpty!4500) mapIsEmpty!4499))

(assert (= (and b!126087 (not condMapEmpty!4500)) mapNonEmpty!4499))

(assert (= (and mapNonEmpty!4499 ((_ is ValueCellFull!1077) mapValue!4500)) b!126084))

(assert (= (and b!126087 ((_ is ValueCellFull!1077) mapDefault!4499)) b!126081))

(assert (= b!126074 b!126087))

(assert (= start!13696 b!126074))

(declare-fun b_lambda!5579 () Bool)

(assert (=> (not b_lambda!5579) (not b!126075)))

(declare-fun t!6075 () Bool)

(declare-fun tb!2321 () Bool)

(assert (=> (and b!126082 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))) t!6075) tb!2321))

(declare-fun result!3845 () Bool)

(assert (=> tb!2321 (= result!3845 tp_is_empty!2841)))

(assert (=> b!126075 t!6075))

(declare-fun b_and!7777 () Bool)

(assert (= b_and!7773 (and (=> t!6075 result!3845) b_and!7777)))

(declare-fun t!6077 () Bool)

(declare-fun tb!2323 () Bool)

(assert (=> (and b!126074 (= (defaultEntry!2783 newMap!16) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))) t!6077) tb!2323))

(declare-fun result!3849 () Bool)

(assert (= result!3849 result!3845))

(assert (=> b!126075 t!6077))

(declare-fun b_and!7779 () Bool)

(assert (= b_and!7775 (and (=> t!6077 result!3849) b_and!7779)))

(declare-fun m!147083 () Bool)

(assert (=> mapNonEmpty!4499 m!147083))

(declare-fun m!147085 () Bool)

(assert (=> b!126082 m!147085))

(declare-fun m!147087 () Bool)

(assert (=> b!126082 m!147087))

(declare-fun m!147089 () Bool)

(assert (=> b!126075 m!147089))

(declare-fun m!147091 () Bool)

(assert (=> b!126075 m!147091))

(declare-fun m!147093 () Bool)

(assert (=> b!126075 m!147093))

(declare-fun m!147095 () Bool)

(assert (=> b!126075 m!147095))

(assert (=> b!126075 m!147091))

(assert (=> b!126075 m!147095))

(declare-fun m!147097 () Bool)

(assert (=> b!126075 m!147097))

(assert (=> b!126075 m!147095))

(assert (=> b!126075 m!147093))

(declare-fun m!147099 () Bool)

(assert (=> b!126075 m!147099))

(assert (=> b!126075 m!147089))

(assert (=> b!126078 m!147095))

(declare-fun m!147101 () Bool)

(assert (=> b!126078 m!147101))

(declare-fun m!147103 () Bool)

(assert (=> b!126078 m!147103))

(declare-fun m!147105 () Bool)

(assert (=> mapNonEmpty!4500 m!147105))

(declare-fun m!147107 () Bool)

(assert (=> b!126074 m!147107))

(declare-fun m!147109 () Bool)

(assert (=> b!126074 m!147109))

(declare-fun m!147111 () Bool)

(assert (=> start!13696 m!147111))

(declare-fun m!147113 () Bool)

(assert (=> b!126083 m!147113))

(declare-fun m!147115 () Bool)

(assert (=> b!126076 m!147115))

(check-sat tp_is_empty!2841 b_and!7777 (not b_next!2849) b_and!7779 (not b!126078) (not b!126076) (not mapNonEmpty!4500) (not b!126083) (not b_next!2851) (not b!126082) (not start!13696) (not b_lambda!5579) (not mapNonEmpty!4499) (not b!126075) (not b!126074))
(check-sat b_and!7777 b_and!7779 (not b_next!2849) (not b_next!2851))
(get-model)

(declare-fun b_lambda!5583 () Bool)

(assert (= b_lambda!5579 (or (and b!126082 b_free!2849) (and b!126074 b_free!2851 (= (defaultEntry!2783 newMap!16) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))))) b_lambda!5583)))

(check-sat tp_is_empty!2841 b_and!7777 (not b_next!2849) b_and!7779 (not b!126078) (not b!126076) (not mapNonEmpty!4500) (not b!126083) (not b_next!2851) (not b!126082) (not start!13696) (not b_lambda!5583) (not mapNonEmpty!4499) (not b!126075) (not b!126074))
(check-sat b_and!7777 b_and!7779 (not b_next!2849) (not b_next!2851))
(get-model)

(declare-fun d!37979 () Bool)

(assert (=> d!37979 (= (array_inv!1363 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvsge (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!126082 d!37979))

(declare-fun d!37981 () Bool)

(assert (=> d!37981 (= (array_inv!1364 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvsge (size!2489 (_values!2766 (v!3122 (underlying!438 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!126082 d!37981))

(declare-fun d!37983 () Bool)

(declare-fun res!61045 () Bool)

(declare-fun e!82429 () Bool)

(assert (=> d!37983 (=> (not res!61045) (not e!82429))))

(declare-fun simpleValid!86 (LongMapFixedSize!1062) Bool)

(assert (=> d!37983 (= res!61045 (simpleValid!86 newMap!16))))

(assert (=> d!37983 (= (valid!504 newMap!16) e!82429)))

(declare-fun b!126149 () Bool)

(declare-fun res!61046 () Bool)

(assert (=> b!126149 (=> (not res!61046) (not e!82429))))

(declare-fun arrayCountValidKeys!0 (array!4698 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!126149 (= res!61046 (= (arrayCountValidKeys!0 (_keys!4516 newMap!16) #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (_size!580 newMap!16)))))

(declare-fun b!126150 () Bool)

(declare-fun res!61047 () Bool)

(assert (=> b!126150 (=> (not res!61047) (not e!82429))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4698 (_ BitVec 32)) Bool)

(assert (=> b!126150 (= res!61047 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(declare-fun b!126151 () Bool)

(declare-datatypes ((List!1720 0))(
  ( (Nil!1717) (Cons!1716 (h!2318 (_ BitVec 64)) (t!6083 List!1720)) )
))
(declare-fun arrayNoDuplicates!0 (array!4698 (_ BitVec 32) List!1720) Bool)

(assert (=> b!126151 (= e!82429 (arrayNoDuplicates!0 (_keys!4516 newMap!16) #b00000000000000000000000000000000 Nil!1717))))

(assert (= (and d!37983 res!61045) b!126149))

(assert (= (and b!126149 res!61046) b!126150))

(assert (= (and b!126150 res!61047) b!126151))

(declare-fun m!147151 () Bool)

(assert (=> d!37983 m!147151))

(declare-fun m!147153 () Bool)

(assert (=> b!126149 m!147153))

(declare-fun m!147155 () Bool)

(assert (=> b!126150 m!147155))

(declare-fun m!147157 () Bool)

(assert (=> b!126151 m!147157))

(assert (=> b!126076 d!37983))

(declare-fun d!37985 () Bool)

(assert (=> d!37985 (= (map!1383 newMap!16) (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun bs!5220 () Bool)

(assert (= bs!5220 d!37985))

(declare-fun m!147159 () Bool)

(assert (=> bs!5220 m!147159))

(assert (=> b!126078 d!37985))

(declare-fun bm!13529 () Bool)

(declare-fun call!13536 () ListLongMap!1685)

(declare-fun call!13534 () ListLongMap!1685)

(assert (=> bm!13529 (= call!13536 call!13534)))

(declare-fun bm!13530 () Bool)

(declare-fun call!13532 () ListLongMap!1685)

(declare-fun call!13533 () ListLongMap!1685)

(assert (=> bm!13530 (= call!13532 call!13533)))

(declare-fun b!126194 () Bool)

(declare-datatypes ((Unit!3936 0))(
  ( (Unit!3937) )
))
(declare-fun e!82463 () Unit!3936)

(declare-fun lt!65119 () Unit!3936)

(assert (=> b!126194 (= e!82463 lt!65119)))

(declare-fun lt!65120 () ListLongMap!1685)

(declare-fun getCurrentListMapNoExtraKeys!132 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 32) Int) ListLongMap!1685)

(assert (=> b!126194 (= lt!65120 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun lt!65109 () (_ BitVec 64))

(assert (=> b!126194 (= lt!65109 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65100 () (_ BitVec 64))

(assert (=> b!126194 (= lt!65100 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!65116 () Unit!3936)

(declare-fun addStillContains!87 (ListLongMap!1685 (_ BitVec 64) V!3435 (_ BitVec 64)) Unit!3936)

(assert (=> b!126194 (= lt!65116 (addStillContains!87 lt!65120 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65100))))

(declare-fun +!165 (ListLongMap!1685 tuple2!2568) ListLongMap!1685)

(assert (=> b!126194 (contains!877 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65100)))

(declare-fun lt!65104 () Unit!3936)

(assert (=> b!126194 (= lt!65104 lt!65116)))

(declare-fun lt!65113 () ListLongMap!1685)

(assert (=> b!126194 (= lt!65113 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun lt!65118 () (_ BitVec 64))

(assert (=> b!126194 (= lt!65118 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65106 () (_ BitVec 64))

(assert (=> b!126194 (= lt!65106 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!65111 () Unit!3936)

(declare-fun addApplyDifferent!87 (ListLongMap!1685 (_ BitVec 64) V!3435 (_ BitVec 64)) Unit!3936)

(assert (=> b!126194 (= lt!65111 (addApplyDifferent!87 lt!65113 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65106))))

(declare-fun apply!111 (ListLongMap!1685 (_ BitVec 64)) V!3435)

(assert (=> b!126194 (= (apply!111 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65106) (apply!111 lt!65113 lt!65106))))

(declare-fun lt!65114 () Unit!3936)

(assert (=> b!126194 (= lt!65114 lt!65111)))

(declare-fun lt!65112 () ListLongMap!1685)

(assert (=> b!126194 (= lt!65112 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun lt!65107 () (_ BitVec 64))

(assert (=> b!126194 (= lt!65107 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65102 () (_ BitVec 64))

(assert (=> b!126194 (= lt!65102 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!65105 () Unit!3936)

(assert (=> b!126194 (= lt!65105 (addApplyDifferent!87 lt!65112 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65102))))

(assert (=> b!126194 (= (apply!111 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65102) (apply!111 lt!65112 lt!65102))))

(declare-fun lt!65108 () Unit!3936)

(assert (=> b!126194 (= lt!65108 lt!65105)))

(declare-fun lt!65115 () ListLongMap!1685)

(assert (=> b!126194 (= lt!65115 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun lt!65117 () (_ BitVec 64))

(assert (=> b!126194 (= lt!65117 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65110 () (_ BitVec 64))

(assert (=> b!126194 (= lt!65110 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!126194 (= lt!65119 (addApplyDifferent!87 lt!65115 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65110))))

(assert (=> b!126194 (= (apply!111 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65110) (apply!111 lt!65115 lt!65110))))

(declare-fun call!13537 () ListLongMap!1685)

(declare-fun bm!13531 () Bool)

(declare-fun c!23032 () Bool)

(declare-fun c!23035 () Bool)

(assert (=> bm!13531 (= call!13533 (+!165 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536)) (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!126195 () Bool)

(declare-fun Unit!3938 () Unit!3936)

(assert (=> b!126195 (= e!82463 Unit!3938)))

(declare-fun bm!13532 () Bool)

(assert (=> bm!13532 (= call!13537 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun b!126196 () Bool)

(declare-fun res!61067 () Bool)

(declare-fun e!82466 () Bool)

(assert (=> b!126196 (=> (not res!61067) (not e!82466))))

(declare-fun e!82468 () Bool)

(assert (=> b!126196 (= res!61067 e!82468)))

(declare-fun c!23033 () Bool)

(assert (=> b!126196 (= c!23033 (not (= (bvand (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!126197 () Bool)

(declare-fun e!82460 () Bool)

(declare-fun lt!65101 () ListLongMap!1685)

(assert (=> b!126197 (= e!82460 (= (apply!111 lt!65101 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun bm!13533 () Bool)

(declare-fun call!13531 () Bool)

(assert (=> bm!13533 (= call!13531 (contains!877 lt!65101 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126198 () Bool)

(declare-fun e!82457 () ListLongMap!1685)

(assert (=> b!126198 (= e!82457 call!13532)))

(declare-fun b!126199 () Bool)

(declare-fun e!82465 () Bool)

(declare-fun e!82458 () Bool)

(assert (=> b!126199 (= e!82465 e!82458)))

(declare-fun res!61072 () Bool)

(assert (=> b!126199 (=> (not res!61072) (not e!82458))))

(assert (=> b!126199 (= res!61072 (contains!877 lt!65101 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!126199 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!126200 () Bool)

(declare-fun c!23036 () Bool)

(assert (=> b!126200 (= c!23036 (and (not (= (bvand (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!82459 () ListLongMap!1685)

(assert (=> b!126200 (= e!82457 e!82459)))

(declare-fun bm!13528 () Bool)

(declare-fun call!13535 () Bool)

(assert (=> bm!13528 (= call!13535 (contains!877 lt!65101 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!37987 () Bool)

(assert (=> d!37987 e!82466))

(declare-fun res!61071 () Bool)

(assert (=> d!37987 (=> (not res!61071) (not e!82466))))

(assert (=> d!37987 (= res!61071 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun lt!65099 () ListLongMap!1685)

(assert (=> d!37987 (= lt!65101 lt!65099)))

(declare-fun lt!65103 () Unit!3936)

(assert (=> d!37987 (= lt!65103 e!82463)))

(declare-fun c!23031 () Bool)

(declare-fun e!82462 () Bool)

(assert (=> d!37987 (= c!23031 e!82462)))

(declare-fun res!61074 () Bool)

(assert (=> d!37987 (=> (not res!61074) (not e!82462))))

(assert (=> d!37987 (= res!61074 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun e!82467 () ListLongMap!1685)

(assert (=> d!37987 (= lt!65099 e!82467)))

(assert (=> d!37987 (= c!23032 (and (not (= (bvand (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!37987 (validMask!0 (mask!7039 (v!3122 (underlying!438 thiss!992))))))

(assert (=> d!37987 (= (getCurrentListMap!530 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))) lt!65101)))

(declare-fun b!126201 () Bool)

(declare-fun e!82461 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!126201 (= e!82461 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!126202 () Bool)

(assert (=> b!126202 (= e!82458 (= (apply!111 lt!65101 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!126202 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2489 (_values!2766 (v!3122 (underlying!438 thiss!992))))))))

(assert (=> b!126202 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!126203 () Bool)

(assert (=> b!126203 (= e!82468 (not call!13535))))

(declare-fun b!126204 () Bool)

(assert (=> b!126204 (= e!82459 call!13536)))

(declare-fun b!126205 () Bool)

(assert (=> b!126205 (= e!82468 e!82460)))

(declare-fun res!61066 () Bool)

(assert (=> b!126205 (= res!61066 call!13535)))

(assert (=> b!126205 (=> (not res!61066) (not e!82460))))

(declare-fun b!126206 () Bool)

(assert (=> b!126206 (= e!82459 call!13532)))

(declare-fun b!126207 () Bool)

(declare-fun e!82464 () Bool)

(declare-fun e!82456 () Bool)

(assert (=> b!126207 (= e!82464 e!82456)))

(declare-fun res!61070 () Bool)

(assert (=> b!126207 (= res!61070 call!13531)))

(assert (=> b!126207 (=> (not res!61070) (not e!82456))))

(declare-fun b!126208 () Bool)

(assert (=> b!126208 (= e!82466 e!82464)))

(declare-fun c!23034 () Bool)

(assert (=> b!126208 (= c!23034 (not (= (bvand (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126209 () Bool)

(assert (=> b!126209 (= e!82467 e!82457)))

(assert (=> b!126209 (= c!23035 (and (not (= (bvand (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126210 () Bool)

(assert (=> b!126210 (= e!82462 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!126211 () Bool)

(declare-fun res!61073 () Bool)

(assert (=> b!126211 (=> (not res!61073) (not e!82466))))

(assert (=> b!126211 (= res!61073 e!82465)))

(declare-fun res!61068 () Bool)

(assert (=> b!126211 (=> res!61068 e!82465)))

(assert (=> b!126211 (= res!61068 (not e!82461))))

(declare-fun res!61069 () Bool)

(assert (=> b!126211 (=> (not res!61069) (not e!82461))))

(assert (=> b!126211 (= res!61069 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun bm!13534 () Bool)

(assert (=> bm!13534 (= call!13534 call!13537)))

(declare-fun b!126212 () Bool)

(assert (=> b!126212 (= e!82467 (+!165 call!13533 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!126213 () Bool)

(assert (=> b!126213 (= e!82456 (= (apply!111 lt!65101 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun b!126214 () Bool)

(assert (=> b!126214 (= e!82464 (not call!13531))))

(assert (= (and d!37987 c!23032) b!126212))

(assert (= (and d!37987 (not c!23032)) b!126209))

(assert (= (and b!126209 c!23035) b!126198))

(assert (= (and b!126209 (not c!23035)) b!126200))

(assert (= (and b!126200 c!23036) b!126206))

(assert (= (and b!126200 (not c!23036)) b!126204))

(assert (= (or b!126206 b!126204) bm!13529))

(assert (= (or b!126198 bm!13529) bm!13534))

(assert (= (or b!126198 b!126206) bm!13530))

(assert (= (or b!126212 bm!13534) bm!13532))

(assert (= (or b!126212 bm!13530) bm!13531))

(assert (= (and d!37987 res!61074) b!126210))

(assert (= (and d!37987 c!23031) b!126194))

(assert (= (and d!37987 (not c!23031)) b!126195))

(assert (= (and d!37987 res!61071) b!126211))

(assert (= (and b!126211 res!61069) b!126201))

(assert (= (and b!126211 (not res!61068)) b!126199))

(assert (= (and b!126199 res!61072) b!126202))

(assert (= (and b!126211 res!61073) b!126196))

(assert (= (and b!126196 c!23033) b!126205))

(assert (= (and b!126196 (not c!23033)) b!126203))

(assert (= (and b!126205 res!61066) b!126197))

(assert (= (or b!126205 b!126203) bm!13528))

(assert (= (and b!126196 res!61067) b!126208))

(assert (= (and b!126208 c!23034) b!126207))

(assert (= (and b!126208 (not c!23034)) b!126214))

(assert (= (and b!126207 res!61070) b!126213))

(assert (= (or b!126207 b!126214) bm!13533))

(declare-fun b_lambda!5585 () Bool)

(assert (=> (not b_lambda!5585) (not b!126202)))

(assert (=> b!126202 t!6075))

(declare-fun b_and!7789 () Bool)

(assert (= b_and!7777 (and (=> t!6075 result!3845) b_and!7789)))

(assert (=> b!126202 t!6077))

(declare-fun b_and!7791 () Bool)

(assert (= b_and!7779 (and (=> t!6077 result!3849) b_and!7791)))

(declare-fun m!147161 () Bool)

(assert (=> bm!13531 m!147161))

(declare-fun m!147163 () Bool)

(assert (=> bm!13532 m!147163))

(declare-fun m!147165 () Bool)

(assert (=> b!126210 m!147165))

(assert (=> b!126210 m!147165))

(declare-fun m!147167 () Bool)

(assert (=> b!126210 m!147167))

(assert (=> d!37987 m!147113))

(declare-fun m!147169 () Bool)

(assert (=> bm!13528 m!147169))

(declare-fun m!147171 () Bool)

(assert (=> bm!13533 m!147171))

(declare-fun m!147173 () Bool)

(assert (=> b!126212 m!147173))

(declare-fun m!147175 () Bool)

(assert (=> b!126197 m!147175))

(declare-fun m!147177 () Bool)

(assert (=> b!126194 m!147177))

(declare-fun m!147179 () Bool)

(assert (=> b!126194 m!147179))

(declare-fun m!147181 () Bool)

(assert (=> b!126194 m!147181))

(declare-fun m!147183 () Bool)

(assert (=> b!126194 m!147183))

(declare-fun m!147185 () Bool)

(assert (=> b!126194 m!147185))

(declare-fun m!147187 () Bool)

(assert (=> b!126194 m!147187))

(assert (=> b!126194 m!147163))

(declare-fun m!147189 () Bool)

(assert (=> b!126194 m!147189))

(declare-fun m!147191 () Bool)

(assert (=> b!126194 m!147191))

(declare-fun m!147193 () Bool)

(assert (=> b!126194 m!147193))

(assert (=> b!126194 m!147185))

(declare-fun m!147195 () Bool)

(assert (=> b!126194 m!147195))

(assert (=> b!126194 m!147183))

(declare-fun m!147197 () Bool)

(assert (=> b!126194 m!147197))

(declare-fun m!147199 () Bool)

(assert (=> b!126194 m!147199))

(assert (=> b!126194 m!147165))

(assert (=> b!126194 m!147189))

(declare-fun m!147201 () Bool)

(assert (=> b!126194 m!147201))

(declare-fun m!147203 () Bool)

(assert (=> b!126194 m!147203))

(declare-fun m!147205 () Bool)

(assert (=> b!126194 m!147205))

(assert (=> b!126194 m!147203))

(assert (=> b!126201 m!147165))

(assert (=> b!126201 m!147165))

(assert (=> b!126201 m!147167))

(declare-fun m!147207 () Bool)

(assert (=> b!126202 m!147207))

(assert (=> b!126202 m!147091))

(declare-fun m!147209 () Bool)

(assert (=> b!126202 m!147209))

(assert (=> b!126202 m!147207))

(assert (=> b!126202 m!147165))

(declare-fun m!147211 () Bool)

(assert (=> b!126202 m!147211))

(assert (=> b!126202 m!147091))

(assert (=> b!126202 m!147165))

(assert (=> b!126199 m!147165))

(assert (=> b!126199 m!147165))

(declare-fun m!147213 () Bool)

(assert (=> b!126199 m!147213))

(declare-fun m!147215 () Bool)

(assert (=> b!126213 m!147215))

(assert (=> b!126078 d!37987))

(declare-fun d!37989 () Bool)

(assert (=> d!37989 (= (valid!503 thiss!992) (valid!504 (v!3122 (underlying!438 thiss!992))))))

(declare-fun bs!5221 () Bool)

(assert (= bs!5221 d!37989))

(declare-fun m!147217 () Bool)

(assert (=> bs!5221 m!147217))

(assert (=> start!13696 d!37989))

(declare-fun d!37991 () Bool)

(assert (=> d!37991 (= (validMask!0 (mask!7039 (v!3122 (underlying!438 thiss!992)))) (and (or (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000001111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000011111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000001111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000011111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000001111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000011111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000001111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000011111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000001111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000011111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000001111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000011111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000111111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000001111111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000011111111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000111111111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000001111111111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000011111111111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000111111111111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00001111111111111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00011111111111111111111111111111) (= (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!126083 d!37991))

(declare-fun d!37993 () Bool)

(assert (=> d!37993 (= (array_inv!1363 (_keys!4516 newMap!16)) (bvsge (size!2488 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!126074 d!37993))

(declare-fun d!37995 () Bool)

(assert (=> d!37995 (= (array_inv!1364 (_values!2766 newMap!16)) (bvsge (size!2489 (_values!2766 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!126074 d!37995))

(declare-fun d!37997 () Bool)

(declare-fun e!82474 () Bool)

(assert (=> d!37997 e!82474))

(declare-fun res!61077 () Bool)

(assert (=> d!37997 (=> res!61077 e!82474)))

(declare-fun lt!65130 () Bool)

(assert (=> d!37997 (= res!61077 (not lt!65130))))

(declare-fun lt!65129 () Bool)

(assert (=> d!37997 (= lt!65130 lt!65129)))

(declare-fun lt!65131 () Unit!3936)

(declare-fun e!82473 () Unit!3936)

(assert (=> d!37997 (= lt!65131 e!82473)))

(declare-fun c!23039 () Bool)

(assert (=> d!37997 (= c!23039 lt!65129)))

(declare-fun containsKey!170 (List!1719 (_ BitVec 64)) Bool)

(assert (=> d!37997 (= lt!65129 (containsKey!170 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> d!37997 (= (contains!877 lt!65045 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) lt!65130)))

(declare-fun b!126221 () Bool)

(declare-fun lt!65132 () Unit!3936)

(assert (=> b!126221 (= e!82473 lt!65132)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!119 (List!1719 (_ BitVec 64)) Unit!3936)

(assert (=> b!126221 (= lt!65132 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-datatypes ((Option!172 0))(
  ( (Some!171 (v!3125 V!3435)) (None!170) )
))
(declare-fun isDefined!120 (Option!172) Bool)

(declare-fun getValueByKey!166 (List!1719 (_ BitVec 64)) Option!172)

(assert (=> b!126221 (isDefined!120 (getValueByKey!166 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!126222 () Bool)

(declare-fun Unit!3939 () Unit!3936)

(assert (=> b!126222 (= e!82473 Unit!3939)))

(declare-fun b!126223 () Bool)

(assert (=> b!126223 (= e!82474 (isDefined!120 (getValueByKey!166 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(assert (= (and d!37997 c!23039) b!126221))

(assert (= (and d!37997 (not c!23039)) b!126222))

(assert (= (and d!37997 (not res!61077)) b!126223))

(assert (=> d!37997 m!147095))

(declare-fun m!147219 () Bool)

(assert (=> d!37997 m!147219))

(assert (=> b!126221 m!147095))

(declare-fun m!147221 () Bool)

(assert (=> b!126221 m!147221))

(assert (=> b!126221 m!147095))

(declare-fun m!147223 () Bool)

(assert (=> b!126221 m!147223))

(assert (=> b!126221 m!147223))

(declare-fun m!147225 () Bool)

(assert (=> b!126221 m!147225))

(assert (=> b!126223 m!147095))

(assert (=> b!126223 m!147223))

(assert (=> b!126223 m!147223))

(assert (=> b!126223 m!147225))

(assert (=> b!126075 d!37997))

(declare-fun bm!13583 () Bool)

(declare-fun call!13589 () ListLongMap!1685)

(declare-fun call!13603 () ListLongMap!1685)

(assert (=> bm!13583 (= call!13589 call!13603)))

(declare-fun bm!13584 () Bool)

(declare-fun call!13598 () ListLongMap!1685)

(declare-fun lt!65202 () tuple2!2570)

(assert (=> bm!13584 (= call!13598 (map!1383 (_2!1295 lt!65202)))))

(declare-fun b!126304 () Bool)

(declare-fun e!82530 () tuple2!2570)

(declare-fun e!82527 () tuple2!2570)

(assert (=> b!126304 (= e!82530 e!82527)))

(declare-fun c!23071 () Bool)

(declare-datatypes ((SeekEntryResult!280 0))(
  ( (MissingZero!280 (index!3275 (_ BitVec 32))) (Found!280 (index!3276 (_ BitVec 32))) (Intermediate!280 (undefined!1092 Bool) (index!3277 (_ BitVec 32)) (x!14973 (_ BitVec 32))) (Undefined!280) (MissingVacant!280 (index!3278 (_ BitVec 32))) )
))
(declare-fun lt!65194 () SeekEntryResult!280)

(assert (=> b!126304 (= c!23071 ((_ is MissingZero!280) lt!65194))))

(declare-fun e!82525 () Bool)

(declare-fun b!126305 () Bool)

(declare-fun call!13609 () ListLongMap!1685)

(assert (=> b!126305 (= e!82525 (= call!13598 (+!165 call!13609 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!126306 () Bool)

(declare-fun c!23076 () Bool)

(declare-fun lt!65205 () SeekEntryResult!280)

(assert (=> b!126306 (= c!23076 ((_ is MissingVacant!280) lt!65205))))

(declare-fun e!82532 () Bool)

(declare-fun e!82529 () Bool)

(assert (=> b!126306 (= e!82532 e!82529)))

(declare-fun b!126307 () Bool)

(declare-fun e!82519 () Unit!3936)

(declare-fun Unit!3940 () Unit!3936)

(assert (=> b!126307 (= e!82519 Unit!3940)))

(declare-fun lt!65201 () Unit!3936)

(declare-fun call!13592 () Unit!3936)

(assert (=> b!126307 (= lt!65201 call!13592)))

(declare-fun lt!65199 () SeekEntryResult!280)

(declare-fun call!13593 () SeekEntryResult!280)

(assert (=> b!126307 (= lt!65199 call!13593)))

(declare-fun res!61118 () Bool)

(assert (=> b!126307 (= res!61118 ((_ is Found!280) lt!65199))))

(declare-fun e!82536 () Bool)

(assert (=> b!126307 (=> (not res!61118) (not e!82536))))

(assert (=> b!126307 e!82536))

(declare-fun lt!65193 () Unit!3936)

(assert (=> b!126307 (= lt!65193 lt!65201)))

(assert (=> b!126307 false))

(declare-fun call!13601 () Unit!3936)

(declare-fun bm!13585 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!56 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 64) Int) Unit!3936)

(assert (=> bm!13585 (= call!13601 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (defaultEntry!2783 newMap!16)))))

(declare-fun bm!13586 () Bool)

(declare-fun call!13600 () SeekEntryResult!280)

(declare-fun call!13587 () SeekEntryResult!280)

(assert (=> bm!13586 (= call!13600 call!13587)))

(declare-fun bm!13587 () Bool)

(assert (=> bm!13587 (= call!13593 call!13587)))

(declare-fun b!126308 () Bool)

(declare-fun lt!65200 () Unit!3936)

(declare-fun lt!65209 () Unit!3936)

(assert (=> b!126308 (= lt!65200 lt!65209)))

(declare-fun call!13597 () ListLongMap!1685)

(assert (=> b!126308 (= call!13597 call!13589)))

(declare-fun lt!65196 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!56 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 V!3435 Int) Unit!3936)

(assert (=> b!126308 (= lt!65209 (lemmaChangeLongMinValueKeyThenAddPairToListMap!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2783 newMap!16)))))

(assert (=> b!126308 (= lt!65196 (bvor (extraKeys!2564 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!82531 () tuple2!2570)

(assert (=> b!126308 (= e!82531 (tuple2!2571 true (LongMapFixedSize!1063 (defaultEntry!2783 newMap!16) (mask!7039 newMap!16) (bvor (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!580 newMap!16) (_keys!4516 newMap!16) (_values!2766 newMap!16) (_vacant!580 newMap!16))))))

(declare-fun bm!13588 () Bool)

(declare-fun call!13606 () Bool)

(declare-fun call!13596 () Bool)

(assert (=> bm!13588 (= call!13606 call!13596)))

(declare-fun b!126309 () Bool)

(declare-fun res!61114 () Bool)

(declare-fun lt!65191 () SeekEntryResult!280)

(assert (=> b!126309 (= res!61114 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3278 lt!65191)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!82537 () Bool)

(assert (=> b!126309 (=> (not res!61114) (not e!82537))))

(declare-fun b!126310 () Bool)

(declare-fun lt!65206 () Unit!3936)

(declare-fun lt!65211 () Unit!3936)

(assert (=> b!126310 (= lt!65206 lt!65211)))

(assert (=> b!126310 (= call!13597 call!13589)))

(declare-fun lt!65187 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!56 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 V!3435 Int) Unit!3936)

(assert (=> b!126310 (= lt!65211 (lemmaChangeZeroKeyThenAddPairToListMap!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) lt!65187 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) (defaultEntry!2783 newMap!16)))))

(assert (=> b!126310 (= lt!65187 (bvor (extraKeys!2564 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!126310 (= e!82531 (tuple2!2571 true (LongMapFixedSize!1063 (defaultEntry!2783 newMap!16) (mask!7039 newMap!16) (bvor (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) (_size!580 newMap!16) (_keys!4516 newMap!16) (_values!2766 newMap!16) (_vacant!580 newMap!16))))))

(declare-fun b!126311 () Bool)

(assert (=> b!126311 (= e!82529 ((_ is Undefined!280) lt!65205))))

(declare-fun b!126312 () Bool)

(declare-fun res!61116 () Bool)

(declare-fun call!13599 () Bool)

(assert (=> b!126312 (= res!61116 call!13599)))

(declare-fun e!82521 () Bool)

(assert (=> b!126312 (=> (not res!61116) (not e!82521))))

(declare-fun b!126313 () Bool)

(declare-fun res!61117 () Bool)

(declare-fun e!82528 () Bool)

(assert (=> b!126313 (=> (not res!61117) (not e!82528))))

(assert (=> b!126313 (= res!61117 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3275 lt!65205)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126314 () Bool)

(declare-fun e!82517 () Bool)

(assert (=> b!126314 (= e!82517 ((_ is Undefined!280) lt!65191))))

(declare-fun b!126315 () Bool)

(declare-fun res!61106 () Bool)

(declare-fun e!82526 () Bool)

(assert (=> b!126315 (=> (not res!61106) (not e!82526))))

(assert (=> b!126315 (= res!61106 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3275 lt!65191)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126316 () Bool)

(declare-fun lt!65210 () SeekEntryResult!280)

(assert (=> b!126316 (= e!82521 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65210)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun bm!13589 () Bool)

(assert (=> bm!13589 (= call!13599 call!13596)))

(declare-fun b!126317 () Bool)

(declare-fun e!82520 () tuple2!2570)

(assert (=> b!126317 (= e!82520 e!82531)))

(declare-fun c!23066 () Bool)

(assert (=> b!126317 (= c!23066 (= (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126318 () Bool)

(declare-fun e!82523 () Bool)

(assert (=> b!126318 (= e!82523 e!82525)))

(declare-fun res!61110 () Bool)

(assert (=> b!126318 (= res!61110 (contains!877 call!13598 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> b!126318 (=> (not res!61110) (not e!82525))))

(declare-fun bm!13590 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!56 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 64) Int) Unit!3936)

(assert (=> bm!13590 (= call!13592 (lemmaInListMapThenSeekEntryOrOpenFindsIt!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (defaultEntry!2783 newMap!16)))))

(declare-fun b!126319 () Bool)

(declare-fun call!13591 () Bool)

(assert (=> b!126319 (= e!82528 (not call!13591))))

(declare-fun b!126320 () Bool)

(assert (=> b!126320 (= e!82517 e!82537)))

(declare-fun res!61115 () Bool)

(declare-fun call!13604 () Bool)

(assert (=> b!126320 (= res!61115 call!13604)))

(assert (=> b!126320 (=> (not res!61115) (not e!82537))))

(declare-fun c!23078 () Bool)

(declare-fun bm!13591 () Bool)

(assert (=> bm!13591 (= call!13603 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun b!126321 () Bool)

(declare-fun call!13607 () Bool)

(assert (=> b!126321 (= e!82526 (not call!13607))))

(declare-fun b!126322 () Bool)

(assert (=> b!126322 (= e!82536 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65199)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!126323 () Bool)

(assert (=> b!126323 (= e!82537 (not call!13607))))

(declare-fun bm!13592 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4698 (_ BitVec 32)) SeekEntryResult!280)

(assert (=> bm!13592 (= call!13587 (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(declare-fun bm!13593 () Bool)

(assert (=> bm!13593 (= call!13609 (map!1383 newMap!16))))

(declare-fun b!126324 () Bool)

(declare-fun lt!65212 () Unit!3936)

(assert (=> b!126324 (= lt!65212 e!82519)))

(declare-fun c!23068 () Bool)

(declare-fun call!13594 () Bool)

(assert (=> b!126324 (= c!23068 call!13594)))

(declare-fun e!82534 () tuple2!2570)

(assert (=> b!126324 (= e!82534 (tuple2!2571 false newMap!16))))

(declare-fun b!126325 () Bool)

(declare-fun e!82524 () ListLongMap!1685)

(declare-fun call!13595 () ListLongMap!1685)

(assert (=> b!126325 (= e!82524 call!13595)))

(declare-fun d!37999 () Bool)

(declare-fun e!82535 () Bool)

(assert (=> d!37999 e!82535))

(declare-fun res!61119 () Bool)

(assert (=> d!37999 (=> (not res!61119) (not e!82535))))

(assert (=> d!37999 (= res!61119 (valid!504 (_2!1295 lt!65202)))))

(assert (=> d!37999 (= lt!65202 e!82520)))

(assert (=> d!37999 (= c!23078 (= (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (bvneg (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(assert (=> d!37999 (valid!504 newMap!16)))

(assert (=> d!37999 (= (update!183 newMap!16 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!65202)))

(declare-fun b!126326 () Bool)

(assert (=> b!126326 (= e!82535 e!82523)))

(declare-fun c!23072 () Bool)

(assert (=> b!126326 (= c!23072 (_1!1295 lt!65202))))

(declare-fun bm!13594 () Bool)

(declare-fun c!23069 () Bool)

(declare-fun c!23070 () Bool)

(assert (=> bm!13594 (= c!23069 c!23070)))

(assert (=> bm!13594 (= call!13594 (contains!877 e!82524 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!126327 () Bool)

(assert (=> b!126327 (= e!82523 (= call!13598 call!13609))))

(declare-fun b!126328 () Bool)

(declare-fun res!61111 () Bool)

(assert (=> b!126328 (=> (not res!61111) (not e!82528))))

(declare-fun call!13590 () Bool)

(assert (=> b!126328 (= res!61111 call!13590)))

(assert (=> b!126328 (= e!82532 e!82528)))

(declare-fun bm!13595 () Bool)

(declare-fun call!13588 () Bool)

(assert (=> bm!13595 (= call!13591 call!13588)))

(declare-fun bm!13596 () Bool)

(declare-fun call!13605 () ListLongMap!1685)

(declare-fun call!13602 () ListLongMap!1685)

(assert (=> bm!13596 (= call!13602 (+!165 (ite c!23078 call!13605 call!13603) (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!13597 () Bool)

(assert (=> bm!13597 (= call!13604 call!13599)))

(declare-fun b!126329 () Bool)

(declare-fun res!61113 () Bool)

(assert (=> b!126329 (=> (not res!61113) (not e!82526))))

(assert (=> b!126329 (= res!61113 call!13604)))

(declare-fun e!82518 () Bool)

(assert (=> b!126329 (= e!82518 e!82526)))

(declare-fun lt!65207 () array!4700)

(declare-fun call!13586 () ListLongMap!1685)

(declare-fun bm!13598 () Bool)

(assert (=> bm!13598 (= call!13586 (getCurrentListMap!530 (_keys!4516 newMap!16) (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun b!126330 () Bool)

(declare-fun c!23077 () Bool)

(assert (=> b!126330 (= c!23077 ((_ is MissingVacant!280) lt!65191))))

(assert (=> b!126330 (= e!82518 e!82517)))

(declare-fun b!126331 () Bool)

(declare-fun lt!65203 () Unit!3936)

(declare-fun lt!65213 () Unit!3936)

(assert (=> b!126331 (= lt!65203 lt!65213)))

(assert (=> b!126331 (contains!877 call!13595 (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!114 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 32) Int) Unit!3936)

(assert (=> b!126331 (= lt!65213 (lemmaValidKeyInArrayIsInListMap!114 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (index!3276 lt!65194) (defaultEntry!2783 newMap!16)))))

(assert (=> b!126331 (= lt!65207 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))))))

(declare-fun lt!65197 () Unit!3936)

(declare-fun lt!65195 () Unit!3936)

(assert (=> b!126331 (= lt!65197 lt!65195)))

(assert (=> b!126331 (= call!13602 (getCurrentListMap!530 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!56 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 32) (_ BitVec 64) V!3435 Int) Unit!3936)

(assert (=> b!126331 (= lt!65195 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (index!3276 lt!65194) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65208 () Unit!3936)

(declare-fun e!82522 () Unit!3936)

(assert (=> b!126331 (= lt!65208 e!82522)))

(declare-fun c!23067 () Bool)

(assert (=> b!126331 (= c!23067 call!13594)))

(assert (=> b!126331 (= e!82527 (tuple2!2571 true (LongMapFixedSize!1063 (defaultEntry!2783 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (_size!580 newMap!16) (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (_vacant!580 newMap!16))))))

(declare-fun bm!13599 () Bool)

(assert (=> bm!13599 (= call!13590 call!13606)))

(declare-fun bm!13600 () Bool)

(declare-fun call!13608 () tuple2!2570)

(declare-fun c!23075 () Bool)

(declare-fun updateHelperNewKey!56 (LongMapFixedSize!1062 (_ BitVec 64) V!3435 (_ BitVec 32)) tuple2!2570)

(assert (=> bm!13600 (= call!13608 (updateHelperNewKey!56 newMap!16 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194))))))

(declare-fun b!126332 () Bool)

(assert (=> b!126332 (= e!82524 call!13603)))

(declare-fun b!126333 () Bool)

(declare-fun e!82533 () Bool)

(assert (=> b!126333 (= e!82529 e!82533)))

(declare-fun res!61109 () Bool)

(assert (=> b!126333 (= res!61109 call!13590)))

(assert (=> b!126333 (=> (not res!61109) (not e!82533))))

(declare-fun b!126334 () Bool)

(declare-fun lt!65192 () Unit!3936)

(assert (=> b!126334 (= e!82522 lt!65192)))

(assert (=> b!126334 (= lt!65192 call!13592)))

(assert (=> b!126334 (= lt!65210 call!13600)))

(declare-fun res!61108 () Bool)

(assert (=> b!126334 (= res!61108 ((_ is Found!280) lt!65210))))

(assert (=> b!126334 (=> (not res!61108) (not e!82521))))

(assert (=> b!126334 e!82521))

(declare-fun c!23073 () Bool)

(declare-fun c!23074 () Bool)

(declare-fun bm!13601 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!13601 (= call!13596 (inRange!0 (ite c!23070 (ite c!23068 (index!3276 lt!65199) (ite c!23073 (index!3275 lt!65205) (index!3278 lt!65205))) (ite c!23067 (index!3276 lt!65210) (ite c!23074 (index!3275 lt!65191) (index!3278 lt!65191)))) (mask!7039 newMap!16)))))

(declare-fun b!126335 () Bool)

(assert (=> b!126335 (= e!82520 e!82534)))

(assert (=> b!126335 (= lt!65194 (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(assert (=> b!126335 (= c!23070 ((_ is Undefined!280) lt!65194))))

(declare-fun b!126336 () Bool)

(declare-fun lt!65198 () Unit!3936)

(assert (=> b!126336 (= e!82519 lt!65198)))

(assert (=> b!126336 (= lt!65198 call!13601)))

(assert (=> b!126336 (= lt!65205 call!13593)))

(assert (=> b!126336 (= c!23073 ((_ is MissingZero!280) lt!65205))))

(assert (=> b!126336 e!82532))

(declare-fun b!126337 () Bool)

(declare-fun res!61112 () Bool)

(assert (=> b!126337 (= res!61112 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3278 lt!65205)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!126337 (=> (not res!61112) (not e!82533))))

(declare-fun b!126338 () Bool)

(declare-fun lt!65190 () tuple2!2570)

(assert (=> b!126338 (= e!82530 (tuple2!2571 (_1!1295 lt!65190) (_2!1295 lt!65190)))))

(assert (=> b!126338 (= lt!65190 call!13608)))

(declare-fun b!126339 () Bool)

(assert (=> b!126339 (= c!23075 ((_ is MissingVacant!280) lt!65194))))

(assert (=> b!126339 (= e!82534 e!82530)))

(declare-fun bm!13602 () Bool)

(assert (=> bm!13602 (= call!13607 call!13588)))

(declare-fun bm!13603 () Bool)

(assert (=> bm!13603 (= call!13595 call!13586)))

(declare-fun b!126340 () Bool)

(declare-fun lt!65204 () tuple2!2570)

(assert (=> b!126340 (= lt!65204 call!13608)))

(assert (=> b!126340 (= e!82527 (tuple2!2571 (_1!1295 lt!65204) (_2!1295 lt!65204)))))

(declare-fun b!126341 () Bool)

(declare-fun Unit!3941 () Unit!3936)

(assert (=> b!126341 (= e!82522 Unit!3941)))

(declare-fun lt!65188 () Unit!3936)

(assert (=> b!126341 (= lt!65188 call!13601)))

(assert (=> b!126341 (= lt!65191 call!13600)))

(assert (=> b!126341 (= c!23074 ((_ is MissingZero!280) lt!65191))))

(assert (=> b!126341 e!82518))

(declare-fun lt!65189 () Unit!3936)

(assert (=> b!126341 (= lt!65189 lt!65188)))

(assert (=> b!126341 false))

(declare-fun bm!13604 () Bool)

(declare-fun arrayContainsKey!0 (array!4698 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> bm!13604 (= call!13588 (arrayContainsKey!0 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!126342 () Bool)

(assert (=> b!126342 (= e!82533 (not call!13591))))

(declare-fun bm!13605 () Bool)

(assert (=> bm!13605 (= call!13597 call!13602)))

(declare-fun b!126343 () Bool)

(declare-fun res!61107 () Bool)

(assert (=> b!126343 (= res!61107 call!13606)))

(assert (=> b!126343 (=> (not res!61107) (not e!82536))))

(declare-fun bm!13606 () Bool)

(assert (=> bm!13606 (= call!13605 call!13586)))

(assert (= (and d!37999 c!23078) b!126317))

(assert (= (and d!37999 (not c!23078)) b!126335))

(assert (= (and b!126317 c!23066) b!126310))

(assert (= (and b!126317 (not c!23066)) b!126308))

(assert (= (or b!126310 b!126308) bm!13583))

(assert (= (or b!126310 b!126308) bm!13606))

(assert (= (or b!126310 b!126308) bm!13605))

(assert (= (and b!126335 c!23070) b!126324))

(assert (= (and b!126335 (not c!23070)) b!126339))

(assert (= (and b!126324 c!23068) b!126307))

(assert (= (and b!126324 (not c!23068)) b!126336))

(assert (= (and b!126307 res!61118) b!126343))

(assert (= (and b!126343 res!61107) b!126322))

(assert (= (and b!126336 c!23073) b!126328))

(assert (= (and b!126336 (not c!23073)) b!126306))

(assert (= (and b!126328 res!61111) b!126313))

(assert (= (and b!126313 res!61117) b!126319))

(assert (= (and b!126306 c!23076) b!126333))

(assert (= (and b!126306 (not c!23076)) b!126311))

(assert (= (and b!126333 res!61109) b!126337))

(assert (= (and b!126337 res!61112) b!126342))

(assert (= (or b!126328 b!126333) bm!13599))

(assert (= (or b!126319 b!126342) bm!13595))

(assert (= (or b!126343 bm!13599) bm!13588))

(assert (= (or b!126307 b!126336) bm!13587))

(assert (= (and b!126339 c!23075) b!126338))

(assert (= (and b!126339 (not c!23075)) b!126304))

(assert (= (and b!126304 c!23071) b!126340))

(assert (= (and b!126304 (not c!23071)) b!126331))

(assert (= (and b!126331 c!23067) b!126334))

(assert (= (and b!126331 (not c!23067)) b!126341))

(assert (= (and b!126334 res!61108) b!126312))

(assert (= (and b!126312 res!61116) b!126316))

(assert (= (and b!126341 c!23074) b!126329))

(assert (= (and b!126341 (not c!23074)) b!126330))

(assert (= (and b!126329 res!61113) b!126315))

(assert (= (and b!126315 res!61106) b!126321))

(assert (= (and b!126330 c!23077) b!126320))

(assert (= (and b!126330 (not c!23077)) b!126314))

(assert (= (and b!126320 res!61115) b!126309))

(assert (= (and b!126309 res!61114) b!126323))

(assert (= (or b!126329 b!126320) bm!13597))

(assert (= (or b!126321 b!126323) bm!13602))

(assert (= (or b!126312 bm!13597) bm!13589))

(assert (= (or b!126334 b!126341) bm!13586))

(assert (= (or b!126338 b!126340) bm!13600))

(assert (= (or b!126324 b!126331) bm!13603))

(assert (= (or bm!13588 bm!13589) bm!13601))

(assert (= (or b!126307 b!126334) bm!13590))

(assert (= (or bm!13587 bm!13586) bm!13592))

(assert (= (or bm!13595 bm!13602) bm!13604))

(assert (= (or b!126336 b!126341) bm!13585))

(assert (= (or b!126324 b!126331) bm!13594))

(assert (= (and bm!13594 c!23069) b!126325))

(assert (= (and bm!13594 (not c!23069)) b!126332))

(assert (= (or bm!13606 bm!13603) bm!13598))

(assert (= (or bm!13583 b!126331 b!126332) bm!13591))

(assert (= (or bm!13605 b!126331) bm!13596))

(assert (= (and d!37999 res!61119) b!126326))

(assert (= (and b!126326 c!23072) b!126318))

(assert (= (and b!126326 (not c!23072)) b!126327))

(assert (= (and b!126318 res!61110) b!126305))

(assert (= (or b!126305 b!126327) bm!13593))

(assert (= (or b!126318 b!126305 b!126327) bm!13584))

(declare-fun m!147227 () Bool)

(assert (=> b!126331 m!147227))

(declare-fun m!147229 () Bool)

(assert (=> b!126331 m!147229))

(declare-fun m!147231 () Bool)

(assert (=> b!126331 m!147231))

(assert (=> b!126331 m!147229))

(declare-fun m!147233 () Bool)

(assert (=> b!126331 m!147233))

(assert (=> b!126331 m!147095))

(assert (=> b!126331 m!147093))

(declare-fun m!147235 () Bool)

(assert (=> b!126331 m!147235))

(declare-fun m!147237 () Bool)

(assert (=> b!126331 m!147237))

(assert (=> bm!13593 m!147101))

(assert (=> b!126308 m!147093))

(declare-fun m!147239 () Bool)

(assert (=> b!126308 m!147239))

(declare-fun m!147241 () Bool)

(assert (=> bm!13598 m!147241))

(declare-fun m!147243 () Bool)

(assert (=> b!126322 m!147243))

(assert (=> bm!13592 m!147095))

(declare-fun m!147245 () Bool)

(assert (=> bm!13592 m!147245))

(assert (=> bm!13590 m!147095))

(declare-fun m!147247 () Bool)

(assert (=> bm!13590 m!147247))

(declare-fun m!147249 () Bool)

(assert (=> bm!13591 m!147249))

(declare-fun m!147251 () Bool)

(assert (=> bm!13596 m!147251))

(declare-fun m!147253 () Bool)

(assert (=> b!126337 m!147253))

(declare-fun m!147255 () Bool)

(assert (=> d!37999 m!147255))

(assert (=> d!37999 m!147115))

(declare-fun m!147257 () Bool)

(assert (=> b!126313 m!147257))

(assert (=> b!126318 m!147095))

(declare-fun m!147259 () Bool)

(assert (=> b!126318 m!147259))

(declare-fun m!147261 () Bool)

(assert (=> b!126309 m!147261))

(assert (=> bm!13585 m!147095))

(declare-fun m!147263 () Bool)

(assert (=> bm!13585 m!147263))

(assert (=> b!126335 m!147095))

(assert (=> b!126335 m!147245))

(assert (=> b!126310 m!147093))

(declare-fun m!147265 () Bool)

(assert (=> b!126310 m!147265))

(assert (=> bm!13600 m!147095))

(assert (=> bm!13600 m!147093))

(declare-fun m!147267 () Bool)

(assert (=> bm!13600 m!147267))

(declare-fun m!147269 () Bool)

(assert (=> bm!13601 m!147269))

(assert (=> bm!13604 m!147095))

(declare-fun m!147271 () Bool)

(assert (=> bm!13604 m!147271))

(declare-fun m!147273 () Bool)

(assert (=> bm!13584 m!147273))

(declare-fun m!147275 () Bool)

(assert (=> b!126315 m!147275))

(declare-fun m!147277 () Bool)

(assert (=> b!126305 m!147277))

(declare-fun m!147279 () Bool)

(assert (=> b!126316 m!147279))

(assert (=> bm!13594 m!147095))

(declare-fun m!147281 () Bool)

(assert (=> bm!13594 m!147281))

(assert (=> b!126075 d!37999))

(declare-fun d!38001 () Bool)

(declare-fun c!23081 () Bool)

(assert (=> d!38001 (= c!23081 ((_ is ValueCellFull!1077) (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun e!82540 () V!3435)

(assert (=> d!38001 (= (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!82540)))

(declare-fun b!126348 () Bool)

(declare-fun get!1453 (ValueCell!1077 V!3435) V!3435)

(assert (=> b!126348 (= e!82540 (get!1453 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!126349 () Bool)

(declare-fun get!1454 (ValueCell!1077 V!3435) V!3435)

(assert (=> b!126349 (= e!82540 (get!1454 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38001 c!23081) b!126348))

(assert (= (and d!38001 (not c!23081)) b!126349))

(assert (=> b!126348 m!147089))

(assert (=> b!126348 m!147091))

(declare-fun m!147283 () Bool)

(assert (=> b!126348 m!147283))

(assert (=> b!126349 m!147089))

(assert (=> b!126349 m!147091))

(declare-fun m!147285 () Bool)

(assert (=> b!126349 m!147285))

(assert (=> b!126075 d!38001))

(declare-fun mapNonEmpty!4509 () Bool)

(declare-fun mapRes!4509 () Bool)

(declare-fun tp!10971 () Bool)

(declare-fun e!82546 () Bool)

(assert (=> mapNonEmpty!4509 (= mapRes!4509 (and tp!10971 e!82546))))

(declare-fun mapKey!4509 () (_ BitVec 32))

(declare-fun mapValue!4509 () ValueCell!1077)

(declare-fun mapRest!4509 () (Array (_ BitVec 32) ValueCell!1077))

(assert (=> mapNonEmpty!4509 (= mapRest!4500 (store mapRest!4509 mapKey!4509 mapValue!4509))))

(declare-fun b!126357 () Bool)

(declare-fun e!82545 () Bool)

(assert (=> b!126357 (= e!82545 tp_is_empty!2841)))

(declare-fun condMapEmpty!4509 () Bool)

(declare-fun mapDefault!4509 () ValueCell!1077)

(assert (=> mapNonEmpty!4500 (= condMapEmpty!4509 (= mapRest!4500 ((as const (Array (_ BitVec 32) ValueCell!1077)) mapDefault!4509)))))

(assert (=> mapNonEmpty!4500 (= tp!10954 (and e!82545 mapRes!4509))))

(declare-fun mapIsEmpty!4509 () Bool)

(assert (=> mapIsEmpty!4509 mapRes!4509))

(declare-fun b!126356 () Bool)

(assert (=> b!126356 (= e!82546 tp_is_empty!2841)))

(assert (= (and mapNonEmpty!4500 condMapEmpty!4509) mapIsEmpty!4509))

(assert (= (and mapNonEmpty!4500 (not condMapEmpty!4509)) mapNonEmpty!4509))

(assert (= (and mapNonEmpty!4509 ((_ is ValueCellFull!1077) mapValue!4509)) b!126356))

(assert (= (and mapNonEmpty!4500 ((_ is ValueCellFull!1077) mapDefault!4509)) b!126357))

(declare-fun m!147287 () Bool)

(assert (=> mapNonEmpty!4509 m!147287))

(declare-fun mapNonEmpty!4510 () Bool)

(declare-fun mapRes!4510 () Bool)

(declare-fun tp!10972 () Bool)

(declare-fun e!82548 () Bool)

(assert (=> mapNonEmpty!4510 (= mapRes!4510 (and tp!10972 e!82548))))

(declare-fun mapKey!4510 () (_ BitVec 32))

(declare-fun mapRest!4510 () (Array (_ BitVec 32) ValueCell!1077))

(declare-fun mapValue!4510 () ValueCell!1077)

(assert (=> mapNonEmpty!4510 (= mapRest!4499 (store mapRest!4510 mapKey!4510 mapValue!4510))))

(declare-fun b!126359 () Bool)

(declare-fun e!82547 () Bool)

(assert (=> b!126359 (= e!82547 tp_is_empty!2841)))

(declare-fun condMapEmpty!4510 () Bool)

(declare-fun mapDefault!4510 () ValueCell!1077)

(assert (=> mapNonEmpty!4499 (= condMapEmpty!4510 (= mapRest!4499 ((as const (Array (_ BitVec 32) ValueCell!1077)) mapDefault!4510)))))

(assert (=> mapNonEmpty!4499 (= tp!10956 (and e!82547 mapRes!4510))))

(declare-fun mapIsEmpty!4510 () Bool)

(assert (=> mapIsEmpty!4510 mapRes!4510))

(declare-fun b!126358 () Bool)

(assert (=> b!126358 (= e!82548 tp_is_empty!2841)))

(assert (= (and mapNonEmpty!4499 condMapEmpty!4510) mapIsEmpty!4510))

(assert (= (and mapNonEmpty!4499 (not condMapEmpty!4510)) mapNonEmpty!4510))

(assert (= (and mapNonEmpty!4510 ((_ is ValueCellFull!1077) mapValue!4510)) b!126358))

(assert (= (and mapNonEmpty!4499 ((_ is ValueCellFull!1077) mapDefault!4510)) b!126359))

(declare-fun m!147289 () Bool)

(assert (=> mapNonEmpty!4510 m!147289))

(declare-fun b_lambda!5587 () Bool)

(assert (= b_lambda!5585 (or (and b!126082 b_free!2849) (and b!126074 b_free!2851 (= (defaultEntry!2783 newMap!16) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))))) b_lambda!5587)))

(check-sat (not b!126201) tp_is_empty!2841 (not bm!13592) (not bm!13601) (not mapNonEmpty!4510) (not bm!13590) (not bm!13598) b_and!7789 (not bm!13531) (not mapNonEmpty!4509) b_and!7791 (not bm!13594) (not b!126149) (not bm!13604) (not bm!13532) (not d!37989) (not b!126223) (not b_next!2849) (not bm!13528) (not b!126221) (not bm!13533) (not b_lambda!5587) (not b!126212) (not b!126202) (not d!37983) (not b!126197) (not bm!13593) (not d!37987) (not b_next!2851) (not b!126213) (not bm!13591) (not b!126335) (not b!126331) (not b!126151) (not b!126210) (not bm!13584) (not bm!13585) (not b!126348) (not b!126349) (not bm!13596) (not b!126308) (not d!37997) (not d!37999) (not b!126194) (not b_lambda!5583) (not bm!13600) (not b!126310) (not b!126150) (not b!126318) (not b!126305) (not d!37985) (not b!126199))
(check-sat b_and!7789 b_and!7791 (not b_next!2849) (not b_next!2851))
(get-model)

(declare-fun d!38003 () Bool)

(declare-fun res!61120 () Bool)

(declare-fun e!82549 () Bool)

(assert (=> d!38003 (=> (not res!61120) (not e!82549))))

(assert (=> d!38003 (= res!61120 (simpleValid!86 (v!3122 (underlying!438 thiss!992))))))

(assert (=> d!38003 (= (valid!504 (v!3122 (underlying!438 thiss!992))) e!82549)))

(declare-fun b!126360 () Bool)

(declare-fun res!61121 () Bool)

(assert (=> b!126360 (=> (not res!61121) (not e!82549))))

(assert (=> b!126360 (= res!61121 (= (arrayCountValidKeys!0 (_keys!4516 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000000 (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))) (_size!580 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun b!126361 () Bool)

(declare-fun res!61122 () Bool)

(assert (=> b!126361 (=> (not res!61122) (not e!82549))))

(assert (=> b!126361 (= res!61122 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun b!126362 () Bool)

(assert (=> b!126362 (= e!82549 (arrayNoDuplicates!0 (_keys!4516 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000000 Nil!1717))))

(assert (= (and d!38003 res!61120) b!126360))

(assert (= (and b!126360 res!61121) b!126361))

(assert (= (and b!126361 res!61122) b!126362))

(declare-fun m!147291 () Bool)

(assert (=> d!38003 m!147291))

(declare-fun m!147293 () Bool)

(assert (=> b!126360 m!147293))

(declare-fun m!147295 () Bool)

(assert (=> b!126361 m!147295))

(declare-fun m!147297 () Bool)

(assert (=> b!126362 m!147297))

(assert (=> d!37989 d!38003))

(declare-fun d!38005 () Bool)

(declare-fun res!61123 () Bool)

(declare-fun e!82550 () Bool)

(assert (=> d!38005 (=> (not res!61123) (not e!82550))))

(assert (=> d!38005 (= res!61123 (simpleValid!86 (_2!1295 lt!65202)))))

(assert (=> d!38005 (= (valid!504 (_2!1295 lt!65202)) e!82550)))

(declare-fun b!126363 () Bool)

(declare-fun res!61124 () Bool)

(assert (=> b!126363 (=> (not res!61124) (not e!82550))))

(assert (=> b!126363 (= res!61124 (= (arrayCountValidKeys!0 (_keys!4516 (_2!1295 lt!65202)) #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))) (_size!580 (_2!1295 lt!65202))))))

(declare-fun b!126364 () Bool)

(declare-fun res!61125 () Bool)

(assert (=> b!126364 (=> (not res!61125) (not e!82550))))

(assert (=> b!126364 (= res!61125 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4516 (_2!1295 lt!65202)) (mask!7039 (_2!1295 lt!65202))))))

(declare-fun b!126365 () Bool)

(assert (=> b!126365 (= e!82550 (arrayNoDuplicates!0 (_keys!4516 (_2!1295 lt!65202)) #b00000000000000000000000000000000 Nil!1717))))

(assert (= (and d!38005 res!61123) b!126363))

(assert (= (and b!126363 res!61124) b!126364))

(assert (= (and b!126364 res!61125) b!126365))

(declare-fun m!147299 () Bool)

(assert (=> d!38005 m!147299))

(declare-fun m!147301 () Bool)

(assert (=> b!126363 m!147301))

(declare-fun m!147303 () Bool)

(assert (=> b!126364 m!147303))

(declare-fun m!147305 () Bool)

(assert (=> b!126365 m!147305))

(assert (=> d!37999 d!38005))

(assert (=> d!37999 d!37983))

(declare-fun d!38007 () Bool)

(declare-fun e!82565 () Bool)

(assert (=> d!38007 e!82565))

(declare-fun res!61137 () Bool)

(assert (=> d!38007 (=> (not res!61137) (not e!82565))))

(declare-fun lt!65233 () ListLongMap!1685)

(assert (=> d!38007 (= res!61137 (not (contains!877 lt!65233 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!82569 () ListLongMap!1685)

(assert (=> d!38007 (= lt!65233 e!82569)))

(declare-fun c!23093 () Bool)

(assert (=> d!38007 (= c!23093 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(assert (=> d!38007 (validMask!0 (mask!7039 (v!3122 (underlying!438 thiss!992))))))

(assert (=> d!38007 (= (getCurrentListMapNoExtraKeys!132 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))) lt!65233)))

(declare-fun b!126390 () Bool)

(declare-fun e!82570 () ListLongMap!1685)

(declare-fun call!13612 () ListLongMap!1685)

(assert (=> b!126390 (= e!82570 call!13612)))

(declare-fun b!126391 () Bool)

(assert (=> b!126391 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(assert (=> b!126391 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2489 (_values!2766 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun e!82571 () Bool)

(assert (=> b!126391 (= e!82571 (= (apply!111 lt!65233 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!126392 () Bool)

(declare-fun e!82566 () Bool)

(declare-fun e!82567 () Bool)

(assert (=> b!126392 (= e!82566 e!82567)))

(declare-fun c!23092 () Bool)

(assert (=> b!126392 (= c!23092 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!126393 () Bool)

(assert (=> b!126393 (= e!82567 (= lt!65233 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!126394 () Bool)

(declare-fun e!82568 () Bool)

(assert (=> b!126394 (= e!82568 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!126394 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!126395 () Bool)

(assert (=> b!126395 (= e!82566 e!82571)))

(assert (=> b!126395 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun res!61135 () Bool)

(assert (=> b!126395 (= res!61135 (contains!877 lt!65233 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!126395 (=> (not res!61135) (not e!82571))))

(declare-fun b!126396 () Bool)

(declare-fun res!61136 () Bool)

(assert (=> b!126396 (=> (not res!61136) (not e!82565))))

(assert (=> b!126396 (= res!61136 (not (contains!877 lt!65233 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!126397 () Bool)

(assert (=> b!126397 (= e!82569 (ListLongMap!1686 Nil!1716))))

(declare-fun b!126398 () Bool)

(assert (=> b!126398 (= e!82565 e!82566)))

(declare-fun c!23090 () Bool)

(assert (=> b!126398 (= c!23090 e!82568)))

(declare-fun res!61134 () Bool)

(assert (=> b!126398 (=> (not res!61134) (not e!82568))))

(assert (=> b!126398 (= res!61134 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!126399 () Bool)

(declare-fun isEmpty!401 (ListLongMap!1685) Bool)

(assert (=> b!126399 (= e!82567 (isEmpty!401 lt!65233))))

(declare-fun b!126400 () Bool)

(assert (=> b!126400 (= e!82569 e!82570)))

(declare-fun c!23091 () Bool)

(assert (=> b!126400 (= c!23091 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!126401 () Bool)

(declare-fun lt!65234 () Unit!3936)

(declare-fun lt!65230 () Unit!3936)

(assert (=> b!126401 (= lt!65234 lt!65230)))

(declare-fun lt!65228 () V!3435)

(declare-fun lt!65229 () ListLongMap!1685)

(declare-fun lt!65232 () (_ BitVec 64))

(declare-fun lt!65231 () (_ BitVec 64))

(assert (=> b!126401 (not (contains!877 (+!165 lt!65229 (tuple2!2569 lt!65231 lt!65228)) lt!65232))))

(declare-fun addStillNotContains!58 (ListLongMap!1685 (_ BitVec 64) V!3435 (_ BitVec 64)) Unit!3936)

(assert (=> b!126401 (= lt!65230 (addStillNotContains!58 lt!65229 lt!65231 lt!65228 lt!65232))))

(assert (=> b!126401 (= lt!65232 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!126401 (= lt!65228 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!126401 (= lt!65231 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!126401 (= lt!65229 call!13612)))

(assert (=> b!126401 (= e!82570 (+!165 call!13612 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!13609 () Bool)

(assert (=> bm!13609 (= call!13612 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))))))

(assert (= (and d!38007 c!23093) b!126397))

(assert (= (and d!38007 (not c!23093)) b!126400))

(assert (= (and b!126400 c!23091) b!126401))

(assert (= (and b!126400 (not c!23091)) b!126390))

(assert (= (or b!126401 b!126390) bm!13609))

(assert (= (and d!38007 res!61137) b!126396))

(assert (= (and b!126396 res!61136) b!126398))

(assert (= (and b!126398 res!61134) b!126394))

(assert (= (and b!126398 c!23090) b!126395))

(assert (= (and b!126398 (not c!23090)) b!126392))

(assert (= (and b!126395 res!61135) b!126391))

(assert (= (and b!126392 c!23092) b!126393))

(assert (= (and b!126392 (not c!23092)) b!126399))

(declare-fun b_lambda!5589 () Bool)

(assert (=> (not b_lambda!5589) (not b!126391)))

(assert (=> b!126391 t!6075))

(declare-fun b_and!7793 () Bool)

(assert (= b_and!7789 (and (=> t!6075 result!3845) b_and!7793)))

(assert (=> b!126391 t!6077))

(declare-fun b_and!7795 () Bool)

(assert (= b_and!7791 (and (=> t!6077 result!3849) b_and!7795)))

(declare-fun b_lambda!5591 () Bool)

(assert (=> (not b_lambda!5591) (not b!126401)))

(assert (=> b!126401 t!6075))

(declare-fun b_and!7797 () Bool)

(assert (= b_and!7793 (and (=> t!6075 result!3845) b_and!7797)))

(assert (=> b!126401 t!6077))

(declare-fun b_and!7799 () Bool)

(assert (= b_and!7795 (and (=> t!6077 result!3849) b_and!7799)))

(assert (=> b!126394 m!147165))

(assert (=> b!126394 m!147165))

(assert (=> b!126394 m!147167))

(declare-fun m!147307 () Bool)

(assert (=> b!126393 m!147307))

(assert (=> b!126391 m!147091))

(assert (=> b!126391 m!147207))

(assert (=> b!126391 m!147207))

(assert (=> b!126391 m!147091))

(assert (=> b!126391 m!147209))

(assert (=> b!126391 m!147165))

(declare-fun m!147309 () Bool)

(assert (=> b!126391 m!147309))

(assert (=> b!126391 m!147165))

(assert (=> b!126401 m!147165))

(assert (=> b!126401 m!147091))

(assert (=> b!126401 m!147207))

(declare-fun m!147311 () Bool)

(assert (=> b!126401 m!147311))

(assert (=> b!126401 m!147207))

(assert (=> b!126401 m!147091))

(assert (=> b!126401 m!147209))

(declare-fun m!147313 () Bool)

(assert (=> b!126401 m!147313))

(declare-fun m!147315 () Bool)

(assert (=> b!126401 m!147315))

(assert (=> b!126401 m!147311))

(declare-fun m!147317 () Bool)

(assert (=> b!126401 m!147317))

(declare-fun m!147319 () Bool)

(assert (=> d!38007 m!147319))

(assert (=> d!38007 m!147113))

(declare-fun m!147321 () Bool)

(assert (=> b!126399 m!147321))

(assert (=> b!126395 m!147165))

(assert (=> b!126395 m!147165))

(declare-fun m!147323 () Bool)

(assert (=> b!126395 m!147323))

(declare-fun m!147325 () Bool)

(assert (=> b!126396 m!147325))

(assert (=> b!126400 m!147165))

(assert (=> b!126400 m!147165))

(assert (=> b!126400 m!147167))

(assert (=> bm!13609 m!147307))

(assert (=> bm!13532 d!38007))

(declare-fun d!38009 () Bool)

(declare-fun get!1455 (Option!172) V!3435)

(assert (=> d!38009 (= (apply!111 lt!65101 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1455 (getValueByKey!166 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5222 () Bool)

(assert (= bs!5222 d!38009))

(declare-fun m!147327 () Bool)

(assert (=> bs!5222 m!147327))

(assert (=> bs!5222 m!147327))

(declare-fun m!147329 () Bool)

(assert (=> bs!5222 m!147329))

(assert (=> b!126197 d!38009))

(declare-fun d!38011 () Bool)

(declare-fun e!82574 () Bool)

(assert (=> d!38011 e!82574))

(declare-fun res!61142 () Bool)

(assert (=> d!38011 (=> (not res!61142) (not e!82574))))

(declare-fun lt!65244 () ListLongMap!1685)

(assert (=> d!38011 (= res!61142 (contains!877 lt!65244 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun lt!65243 () List!1719)

(assert (=> d!38011 (= lt!65244 (ListLongMap!1686 lt!65243))))

(declare-fun lt!65246 () Unit!3936)

(declare-fun lt!65245 () Unit!3936)

(assert (=> d!38011 (= lt!65246 lt!65245)))

(assert (=> d!38011 (= (getValueByKey!166 lt!65243 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!83 (List!1719 (_ BitVec 64) V!3435) Unit!3936)

(assert (=> d!38011 (= lt!65245 (lemmaContainsTupThenGetReturnValue!83 lt!65243 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun insertStrictlySorted!85 (List!1719 (_ BitVec 64) V!3435) List!1719)

(assert (=> d!38011 (= lt!65243 (insertStrictlySorted!85 (toList!858 call!13533) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38011 (= (+!165 call!13533 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65244)))

(declare-fun b!126406 () Bool)

(declare-fun res!61143 () Bool)

(assert (=> b!126406 (=> (not res!61143) (not e!82574))))

(assert (=> b!126406 (= res!61143 (= (getValueByKey!166 (toList!858 lt!65244) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!126407 () Bool)

(declare-fun contains!878 (List!1719 tuple2!2568) Bool)

(assert (=> b!126407 (= e!82574 (contains!878 (toList!858 lt!65244) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(assert (= (and d!38011 res!61142) b!126406))

(assert (= (and b!126406 res!61143) b!126407))

(declare-fun m!147331 () Bool)

(assert (=> d!38011 m!147331))

(declare-fun m!147333 () Bool)

(assert (=> d!38011 m!147333))

(declare-fun m!147335 () Bool)

(assert (=> d!38011 m!147335))

(declare-fun m!147337 () Bool)

(assert (=> d!38011 m!147337))

(declare-fun m!147339 () Bool)

(assert (=> b!126406 m!147339))

(declare-fun m!147341 () Bool)

(assert (=> b!126407 m!147341))

(assert (=> b!126212 d!38011))

(declare-fun d!38013 () Bool)

(declare-fun e!82575 () Bool)

(assert (=> d!38013 e!82575))

(declare-fun res!61144 () Bool)

(assert (=> d!38013 (=> (not res!61144) (not e!82575))))

(declare-fun lt!65248 () ListLongMap!1685)

(assert (=> d!38013 (= res!61144 (contains!877 lt!65248 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun lt!65247 () List!1719)

(assert (=> d!38013 (= lt!65248 (ListLongMap!1686 lt!65247))))

(declare-fun lt!65250 () Unit!3936)

(declare-fun lt!65249 () Unit!3936)

(assert (=> d!38013 (= lt!65250 lt!65249)))

(assert (=> d!38013 (= (getValueByKey!166 lt!65247 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) (Some!171 (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> d!38013 (= lt!65249 (lemmaContainsTupThenGetReturnValue!83 lt!65247 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> d!38013 (= lt!65247 (insertStrictlySorted!85 (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536))) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> d!38013 (= (+!165 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536)) (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65248)))

(declare-fun b!126408 () Bool)

(declare-fun res!61145 () Bool)

(assert (=> b!126408 (=> (not res!61145) (not e!82575))))

(assert (=> b!126408 (= res!61145 (= (getValueByKey!166 (toList!858 lt!65248) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) (Some!171 (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(declare-fun b!126409 () Bool)

(assert (=> b!126409 (= e!82575 (contains!878 (toList!858 lt!65248) (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (= (and d!38013 res!61144) b!126408))

(assert (= (and b!126408 res!61145) b!126409))

(declare-fun m!147343 () Bool)

(assert (=> d!38013 m!147343))

(declare-fun m!147345 () Bool)

(assert (=> d!38013 m!147345))

(declare-fun m!147347 () Bool)

(assert (=> d!38013 m!147347))

(declare-fun m!147349 () Bool)

(assert (=> d!38013 m!147349))

(declare-fun m!147351 () Bool)

(assert (=> b!126408 m!147351))

(declare-fun m!147353 () Bool)

(assert (=> b!126409 m!147353))

(assert (=> bm!13531 d!38013))

(declare-fun d!38015 () Bool)

(assert (=> d!38015 (= (apply!111 lt!65115 lt!65110) (get!1455 (getValueByKey!166 (toList!858 lt!65115) lt!65110)))))

(declare-fun bs!5223 () Bool)

(assert (= bs!5223 d!38015))

(declare-fun m!147355 () Bool)

(assert (=> bs!5223 m!147355))

(assert (=> bs!5223 m!147355))

(declare-fun m!147357 () Bool)

(assert (=> bs!5223 m!147357))

(assert (=> b!126194 d!38015))

(declare-fun d!38017 () Bool)

(declare-fun e!82577 () Bool)

(assert (=> d!38017 e!82577))

(declare-fun res!61146 () Bool)

(assert (=> d!38017 (=> res!61146 e!82577)))

(declare-fun lt!65252 () Bool)

(assert (=> d!38017 (= res!61146 (not lt!65252))))

(declare-fun lt!65251 () Bool)

(assert (=> d!38017 (= lt!65252 lt!65251)))

(declare-fun lt!65253 () Unit!3936)

(declare-fun e!82576 () Unit!3936)

(assert (=> d!38017 (= lt!65253 e!82576)))

(declare-fun c!23094 () Bool)

(assert (=> d!38017 (= c!23094 lt!65251)))

(assert (=> d!38017 (= lt!65251 (containsKey!170 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100))))

(assert (=> d!38017 (= (contains!877 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65100) lt!65252)))

(declare-fun b!126410 () Bool)

(declare-fun lt!65254 () Unit!3936)

(assert (=> b!126410 (= e!82576 lt!65254)))

(assert (=> b!126410 (= lt!65254 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100))))

(assert (=> b!126410 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100))))

(declare-fun b!126411 () Bool)

(declare-fun Unit!3942 () Unit!3936)

(assert (=> b!126411 (= e!82576 Unit!3942)))

(declare-fun b!126412 () Bool)

(assert (=> b!126412 (= e!82577 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100)))))

(assert (= (and d!38017 c!23094) b!126410))

(assert (= (and d!38017 (not c!23094)) b!126411))

(assert (= (and d!38017 (not res!61146)) b!126412))

(declare-fun m!147359 () Bool)

(assert (=> d!38017 m!147359))

(declare-fun m!147361 () Bool)

(assert (=> b!126410 m!147361))

(declare-fun m!147363 () Bool)

(assert (=> b!126410 m!147363))

(assert (=> b!126410 m!147363))

(declare-fun m!147365 () Bool)

(assert (=> b!126410 m!147365))

(assert (=> b!126412 m!147363))

(assert (=> b!126412 m!147363))

(assert (=> b!126412 m!147365))

(assert (=> b!126194 d!38017))

(declare-fun d!38019 () Bool)

(declare-fun e!82578 () Bool)

(assert (=> d!38019 e!82578))

(declare-fun res!61147 () Bool)

(assert (=> d!38019 (=> (not res!61147) (not e!82578))))

(declare-fun lt!65256 () ListLongMap!1685)

(assert (=> d!38019 (= res!61147 (contains!877 lt!65256 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun lt!65255 () List!1719)

(assert (=> d!38019 (= lt!65256 (ListLongMap!1686 lt!65255))))

(declare-fun lt!65258 () Unit!3936)

(declare-fun lt!65257 () Unit!3936)

(assert (=> d!38019 (= lt!65258 lt!65257)))

(assert (=> d!38019 (= (getValueByKey!166 lt!65255 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38019 (= lt!65257 (lemmaContainsTupThenGetReturnValue!83 lt!65255 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38019 (= lt!65255 (insertStrictlySorted!85 (toList!858 lt!65120) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38019 (= (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65256)))

(declare-fun b!126413 () Bool)

(declare-fun res!61148 () Bool)

(assert (=> b!126413 (=> (not res!61148) (not e!82578))))

(assert (=> b!126413 (= res!61148 (= (getValueByKey!166 (toList!858 lt!65256) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!126414 () Bool)

(assert (=> b!126414 (= e!82578 (contains!878 (toList!858 lt!65256) (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(assert (= (and d!38019 res!61147) b!126413))

(assert (= (and b!126413 res!61148) b!126414))

(declare-fun m!147367 () Bool)

(assert (=> d!38019 m!147367))

(declare-fun m!147369 () Bool)

(assert (=> d!38019 m!147369))

(declare-fun m!147371 () Bool)

(assert (=> d!38019 m!147371))

(declare-fun m!147373 () Bool)

(assert (=> d!38019 m!147373))

(declare-fun m!147375 () Bool)

(assert (=> b!126413 m!147375))

(declare-fun m!147377 () Bool)

(assert (=> b!126414 m!147377))

(assert (=> b!126194 d!38019))

(declare-fun d!38021 () Bool)

(assert (=> d!38021 (= (apply!111 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65102) (apply!111 lt!65112 lt!65102))))

(declare-fun lt!65261 () Unit!3936)

(declare-fun choose!768 (ListLongMap!1685 (_ BitVec 64) V!3435 (_ BitVec 64)) Unit!3936)

(assert (=> d!38021 (= lt!65261 (choose!768 lt!65112 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65102))))

(declare-fun e!82581 () Bool)

(assert (=> d!38021 e!82581))

(declare-fun res!61151 () Bool)

(assert (=> d!38021 (=> (not res!61151) (not e!82581))))

(assert (=> d!38021 (= res!61151 (contains!877 lt!65112 lt!65102))))

(assert (=> d!38021 (= (addApplyDifferent!87 lt!65112 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65102) lt!65261)))

(declare-fun b!126418 () Bool)

(assert (=> b!126418 (= e!82581 (not (= lt!65102 lt!65107)))))

(assert (= (and d!38021 res!61151) b!126418))

(declare-fun m!147379 () Bool)

(assert (=> d!38021 m!147379))

(assert (=> d!38021 m!147177))

(declare-fun m!147381 () Bool)

(assert (=> d!38021 m!147381))

(assert (=> d!38021 m!147185))

(assert (=> d!38021 m!147195))

(assert (=> d!38021 m!147185))

(assert (=> b!126194 d!38021))

(declare-fun d!38023 () Bool)

(assert (=> d!38023 (= (apply!111 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65106) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65106)))))

(declare-fun bs!5224 () Bool)

(assert (= bs!5224 d!38023))

(declare-fun m!147383 () Bool)

(assert (=> bs!5224 m!147383))

(assert (=> bs!5224 m!147383))

(declare-fun m!147385 () Bool)

(assert (=> bs!5224 m!147385))

(assert (=> b!126194 d!38023))

(declare-fun d!38025 () Bool)

(declare-fun e!82582 () Bool)

(assert (=> d!38025 e!82582))

(declare-fun res!61152 () Bool)

(assert (=> d!38025 (=> (not res!61152) (not e!82582))))

(declare-fun lt!65263 () ListLongMap!1685)

(assert (=> d!38025 (= res!61152 (contains!877 lt!65263 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun lt!65262 () List!1719)

(assert (=> d!38025 (= lt!65263 (ListLongMap!1686 lt!65262))))

(declare-fun lt!65265 () Unit!3936)

(declare-fun lt!65264 () Unit!3936)

(assert (=> d!38025 (= lt!65265 lt!65264)))

(assert (=> d!38025 (= (getValueByKey!166 lt!65262 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38025 (= lt!65264 (lemmaContainsTupThenGetReturnValue!83 lt!65262 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38025 (= lt!65262 (insertStrictlySorted!85 (toList!858 lt!65113) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38025 (= (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65263)))

(declare-fun b!126419 () Bool)

(declare-fun res!61153 () Bool)

(assert (=> b!126419 (=> (not res!61153) (not e!82582))))

(assert (=> b!126419 (= res!61153 (= (getValueByKey!166 (toList!858 lt!65263) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!126420 () Bool)

(assert (=> b!126420 (= e!82582 (contains!878 (toList!858 lt!65263) (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(assert (= (and d!38025 res!61152) b!126419))

(assert (= (and b!126419 res!61153) b!126420))

(declare-fun m!147387 () Bool)

(assert (=> d!38025 m!147387))

(declare-fun m!147389 () Bool)

(assert (=> d!38025 m!147389))

(declare-fun m!147391 () Bool)

(assert (=> d!38025 m!147391))

(declare-fun m!147393 () Bool)

(assert (=> d!38025 m!147393))

(declare-fun m!147395 () Bool)

(assert (=> b!126419 m!147395))

(declare-fun m!147397 () Bool)

(assert (=> b!126420 m!147397))

(assert (=> b!126194 d!38025))

(declare-fun d!38027 () Bool)

(assert (=> d!38027 (contains!877 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65100)))

(declare-fun lt!65268 () Unit!3936)

(declare-fun choose!769 (ListLongMap!1685 (_ BitVec 64) V!3435 (_ BitVec 64)) Unit!3936)

(assert (=> d!38027 (= lt!65268 (choose!769 lt!65120 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65100))))

(assert (=> d!38027 (contains!877 lt!65120 lt!65100)))

(assert (=> d!38027 (= (addStillContains!87 lt!65120 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65100) lt!65268)))

(declare-fun bs!5225 () Bool)

(assert (= bs!5225 d!38027))

(assert (=> bs!5225 m!147203))

(assert (=> bs!5225 m!147203))

(assert (=> bs!5225 m!147205))

(declare-fun m!147399 () Bool)

(assert (=> bs!5225 m!147399))

(declare-fun m!147401 () Bool)

(assert (=> bs!5225 m!147401))

(assert (=> b!126194 d!38027))

(declare-fun d!38029 () Bool)

(declare-fun e!82583 () Bool)

(assert (=> d!38029 e!82583))

(declare-fun res!61154 () Bool)

(assert (=> d!38029 (=> (not res!61154) (not e!82583))))

(declare-fun lt!65270 () ListLongMap!1685)

(assert (=> d!38029 (= res!61154 (contains!877 lt!65270 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun lt!65269 () List!1719)

(assert (=> d!38029 (= lt!65270 (ListLongMap!1686 lt!65269))))

(declare-fun lt!65272 () Unit!3936)

(declare-fun lt!65271 () Unit!3936)

(assert (=> d!38029 (= lt!65272 lt!65271)))

(assert (=> d!38029 (= (getValueByKey!166 lt!65269 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38029 (= lt!65271 (lemmaContainsTupThenGetReturnValue!83 lt!65269 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38029 (= lt!65269 (insertStrictlySorted!85 (toList!858 lt!65112) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38029 (= (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65270)))

(declare-fun b!126422 () Bool)

(declare-fun res!61155 () Bool)

(assert (=> b!126422 (=> (not res!61155) (not e!82583))))

(assert (=> b!126422 (= res!61155 (= (getValueByKey!166 (toList!858 lt!65270) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!126423 () Bool)

(assert (=> b!126423 (= e!82583 (contains!878 (toList!858 lt!65270) (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(assert (= (and d!38029 res!61154) b!126422))

(assert (= (and b!126422 res!61155) b!126423))

(declare-fun m!147403 () Bool)

(assert (=> d!38029 m!147403))

(declare-fun m!147405 () Bool)

(assert (=> d!38029 m!147405))

(declare-fun m!147407 () Bool)

(assert (=> d!38029 m!147407))

(declare-fun m!147409 () Bool)

(assert (=> d!38029 m!147409))

(declare-fun m!147411 () Bool)

(assert (=> b!126422 m!147411))

(declare-fun m!147413 () Bool)

(assert (=> b!126423 m!147413))

(assert (=> b!126194 d!38029))

(declare-fun d!38031 () Bool)

(assert (=> d!38031 (= (apply!111 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65110) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65110)))))

(declare-fun bs!5226 () Bool)

(assert (= bs!5226 d!38031))

(declare-fun m!147415 () Bool)

(assert (=> bs!5226 m!147415))

(assert (=> bs!5226 m!147415))

(declare-fun m!147417 () Bool)

(assert (=> bs!5226 m!147417))

(assert (=> b!126194 d!38031))

(declare-fun d!38033 () Bool)

(assert (=> d!38033 (= (apply!111 lt!65113 lt!65106) (get!1455 (getValueByKey!166 (toList!858 lt!65113) lt!65106)))))

(declare-fun bs!5227 () Bool)

(assert (= bs!5227 d!38033))

(declare-fun m!147419 () Bool)

(assert (=> bs!5227 m!147419))

(assert (=> bs!5227 m!147419))

(declare-fun m!147421 () Bool)

(assert (=> bs!5227 m!147421))

(assert (=> b!126194 d!38033))

(declare-fun d!38035 () Bool)

(assert (=> d!38035 (= (apply!111 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65102) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65102)))))

(declare-fun bs!5228 () Bool)

(assert (= bs!5228 d!38035))

(declare-fun m!147423 () Bool)

(assert (=> bs!5228 m!147423))

(assert (=> bs!5228 m!147423))

(declare-fun m!147425 () Bool)

(assert (=> bs!5228 m!147425))

(assert (=> b!126194 d!38035))

(assert (=> b!126194 d!38007))

(declare-fun d!38037 () Bool)

(assert (=> d!38037 (= (apply!111 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65106) (apply!111 lt!65113 lt!65106))))

(declare-fun lt!65273 () Unit!3936)

(assert (=> d!38037 (= lt!65273 (choose!768 lt!65113 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65106))))

(declare-fun e!82584 () Bool)

(assert (=> d!38037 e!82584))

(declare-fun res!61156 () Bool)

(assert (=> d!38037 (=> (not res!61156) (not e!82584))))

(assert (=> d!38037 (= res!61156 (contains!877 lt!65113 lt!65106))))

(assert (=> d!38037 (= (addApplyDifferent!87 lt!65113 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65106) lt!65273)))

(declare-fun b!126424 () Bool)

(assert (=> b!126424 (= e!82584 (not (= lt!65106 lt!65118)))))

(assert (= (and d!38037 res!61156) b!126424))

(declare-fun m!147427 () Bool)

(assert (=> d!38037 m!147427))

(assert (=> d!38037 m!147187))

(declare-fun m!147429 () Bool)

(assert (=> d!38037 m!147429))

(assert (=> d!38037 m!147189))

(assert (=> d!38037 m!147201))

(assert (=> d!38037 m!147189))

(assert (=> b!126194 d!38037))

(declare-fun d!38039 () Bool)

(assert (=> d!38039 (= (apply!111 lt!65112 lt!65102) (get!1455 (getValueByKey!166 (toList!858 lt!65112) lt!65102)))))

(declare-fun bs!5229 () Bool)

(assert (= bs!5229 d!38039))

(declare-fun m!147431 () Bool)

(assert (=> bs!5229 m!147431))

(assert (=> bs!5229 m!147431))

(declare-fun m!147433 () Bool)

(assert (=> bs!5229 m!147433))

(assert (=> b!126194 d!38039))

(declare-fun d!38041 () Bool)

(assert (=> d!38041 (= (apply!111 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65110) (apply!111 lt!65115 lt!65110))))

(declare-fun lt!65274 () Unit!3936)

(assert (=> d!38041 (= lt!65274 (choose!768 lt!65115 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65110))))

(declare-fun e!82585 () Bool)

(assert (=> d!38041 e!82585))

(declare-fun res!61157 () Bool)

(assert (=> d!38041 (=> (not res!61157) (not e!82585))))

(assert (=> d!38041 (= res!61157 (contains!877 lt!65115 lt!65110))))

(assert (=> d!38041 (= (addApplyDifferent!87 lt!65115 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65110) lt!65274)))

(declare-fun b!126425 () Bool)

(assert (=> b!126425 (= e!82585 (not (= lt!65110 lt!65117)))))

(assert (= (and d!38041 res!61157) b!126425))

(declare-fun m!147435 () Bool)

(assert (=> d!38041 m!147435))

(assert (=> d!38041 m!147179))

(declare-fun m!147437 () Bool)

(assert (=> d!38041 m!147437))

(assert (=> d!38041 m!147183))

(assert (=> d!38041 m!147197))

(assert (=> d!38041 m!147183))

(assert (=> b!126194 d!38041))

(declare-fun d!38043 () Bool)

(declare-fun e!82586 () Bool)

(assert (=> d!38043 e!82586))

(declare-fun res!61158 () Bool)

(assert (=> d!38043 (=> (not res!61158) (not e!82586))))

(declare-fun lt!65276 () ListLongMap!1685)

(assert (=> d!38043 (= res!61158 (contains!877 lt!65276 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun lt!65275 () List!1719)

(assert (=> d!38043 (= lt!65276 (ListLongMap!1686 lt!65275))))

(declare-fun lt!65278 () Unit!3936)

(declare-fun lt!65277 () Unit!3936)

(assert (=> d!38043 (= lt!65278 lt!65277)))

(assert (=> d!38043 (= (getValueByKey!166 lt!65275 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38043 (= lt!65277 (lemmaContainsTupThenGetReturnValue!83 lt!65275 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38043 (= lt!65275 (insertStrictlySorted!85 (toList!858 lt!65115) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38043 (= (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65276)))

(declare-fun b!126426 () Bool)

(declare-fun res!61159 () Bool)

(assert (=> b!126426 (=> (not res!61159) (not e!82586))))

(assert (=> b!126426 (= res!61159 (= (getValueByKey!166 (toList!858 lt!65276) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!126427 () Bool)

(assert (=> b!126427 (= e!82586 (contains!878 (toList!858 lt!65276) (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(assert (= (and d!38043 res!61158) b!126426))

(assert (= (and b!126426 res!61159) b!126427))

(declare-fun m!147439 () Bool)

(assert (=> d!38043 m!147439))

(declare-fun m!147441 () Bool)

(assert (=> d!38043 m!147441))

(declare-fun m!147443 () Bool)

(assert (=> d!38043 m!147443))

(declare-fun m!147445 () Bool)

(assert (=> d!38043 m!147445))

(declare-fun m!147447 () Bool)

(assert (=> b!126426 m!147447))

(declare-fun m!147449 () Bool)

(assert (=> b!126427 m!147449))

(assert (=> b!126194 d!38043))

(declare-fun d!38045 () Bool)

(declare-fun e!82587 () Bool)

(assert (=> d!38045 e!82587))

(declare-fun res!61160 () Bool)

(assert (=> d!38045 (=> (not res!61160) (not e!82587))))

(declare-fun lt!65280 () ListLongMap!1685)

(assert (=> d!38045 (= res!61160 (contains!877 lt!65280 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!65279 () List!1719)

(assert (=> d!38045 (= lt!65280 (ListLongMap!1686 lt!65279))))

(declare-fun lt!65282 () Unit!3936)

(declare-fun lt!65281 () Unit!3936)

(assert (=> d!38045 (= lt!65282 lt!65281)))

(assert (=> d!38045 (= (getValueByKey!166 lt!65279 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!171 (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!38045 (= lt!65281 (lemmaContainsTupThenGetReturnValue!83 lt!65279 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!38045 (= lt!65279 (insertStrictlySorted!85 (toList!858 (ite c!23078 call!13605 call!13603)) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!38045 (= (+!165 (ite c!23078 call!13605 call!13603) (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!65280)))

(declare-fun b!126428 () Bool)

(declare-fun res!61161 () Bool)

(assert (=> b!126428 (=> (not res!61161) (not e!82587))))

(assert (=> b!126428 (= res!61161 (= (getValueByKey!166 (toList!858 lt!65280) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!171 (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!126429 () Bool)

(assert (=> b!126429 (= e!82587 (contains!878 (toList!858 lt!65280) (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!38045 res!61160) b!126428))

(assert (= (and b!126428 res!61161) b!126429))

(declare-fun m!147451 () Bool)

(assert (=> d!38045 m!147451))

(declare-fun m!147453 () Bool)

(assert (=> d!38045 m!147453))

(declare-fun m!147455 () Bool)

(assert (=> d!38045 m!147455))

(declare-fun m!147457 () Bool)

(assert (=> d!38045 m!147457))

(declare-fun m!147459 () Bool)

(assert (=> b!126428 m!147459))

(declare-fun m!147461 () Bool)

(assert (=> b!126429 m!147461))

(assert (=> bm!13596 d!38045))

(declare-fun d!38047 () Bool)

(assert (=> d!38047 (= (apply!111 lt!65101 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1455 (getValueByKey!166 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5230 () Bool)

(assert (= bs!5230 d!38047))

(declare-fun m!147463 () Bool)

(assert (=> bs!5230 m!147463))

(assert (=> bs!5230 m!147463))

(declare-fun m!147465 () Bool)

(assert (=> bs!5230 m!147465))

(assert (=> b!126213 d!38047))

(declare-fun d!38049 () Bool)

(declare-fun res!61166 () Bool)

(declare-fun e!82592 () Bool)

(assert (=> d!38049 (=> res!61166 e!82592)))

(assert (=> d!38049 (= res!61166 (= (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> d!38049 (= (arrayContainsKey!0 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000) e!82592)))

(declare-fun b!126434 () Bool)

(declare-fun e!82593 () Bool)

(assert (=> b!126434 (= e!82592 e!82593)))

(declare-fun res!61167 () Bool)

(assert (=> b!126434 (=> (not res!61167) (not e!82593))))

(assert (=> b!126434 (= res!61167 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126435 () Bool)

(assert (=> b!126435 (= e!82593 (arrayContainsKey!0 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!38049 (not res!61166)) b!126434))

(assert (= (and b!126434 res!61167) b!126435))

(declare-fun m!147467 () Bool)

(assert (=> d!38049 m!147467))

(assert (=> b!126435 m!147095))

(declare-fun m!147469 () Bool)

(assert (=> b!126435 m!147469))

(assert (=> bm!13604 d!38049))

(declare-fun d!38051 () Bool)

(assert (=> d!38051 (= (+!165 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65187 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65285 () Unit!3936)

(declare-fun choose!770 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 V!3435 Int) Unit!3936)

(assert (=> d!38051 (= lt!65285 (choose!770 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) lt!65187 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) (defaultEntry!2783 newMap!16)))))

(assert (=> d!38051 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38051 (= (lemmaChangeZeroKeyThenAddPairToListMap!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) lt!65187 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) (defaultEntry!2783 newMap!16)) lt!65285)))

(declare-fun bs!5231 () Bool)

(assert (= bs!5231 d!38051))

(assert (=> bs!5231 m!147093))

(declare-fun m!147471 () Bool)

(assert (=> bs!5231 m!147471))

(assert (=> bs!5231 m!147159))

(declare-fun m!147473 () Bool)

(assert (=> bs!5231 m!147473))

(declare-fun m!147475 () Bool)

(assert (=> bs!5231 m!147475))

(assert (=> bs!5231 m!147159))

(assert (=> bs!5231 m!147093))

(declare-fun m!147477 () Bool)

(assert (=> bs!5231 m!147477))

(assert (=> b!126310 d!38051))

(declare-fun d!38053 () Bool)

(declare-fun res!61172 () Bool)

(declare-fun e!82598 () Bool)

(assert (=> d!38053 (=> res!61172 e!82598)))

(assert (=> d!38053 (= res!61172 (and ((_ is Cons!1715) (toList!858 lt!65045)) (= (_1!1294 (h!2317 (toList!858 lt!65045))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(assert (=> d!38053 (= (containsKey!170 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) e!82598)))

(declare-fun b!126440 () Bool)

(declare-fun e!82599 () Bool)

(assert (=> b!126440 (= e!82598 e!82599)))

(declare-fun res!61173 () Bool)

(assert (=> b!126440 (=> (not res!61173) (not e!82599))))

(assert (=> b!126440 (= res!61173 (and (or (not ((_ is Cons!1715) (toList!858 lt!65045))) (bvsle (_1!1294 (h!2317 (toList!858 lt!65045))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))) ((_ is Cons!1715) (toList!858 lt!65045)) (bvslt (_1!1294 (h!2317 (toList!858 lt!65045))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(declare-fun b!126441 () Bool)

(assert (=> b!126441 (= e!82599 (containsKey!170 (t!6078 (toList!858 lt!65045)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (= (and d!38053 (not res!61172)) b!126440))

(assert (= (and b!126440 res!61173) b!126441))

(assert (=> b!126441 m!147095))

(declare-fun m!147479 () Bool)

(assert (=> b!126441 m!147479))

(assert (=> d!37997 d!38053))

(declare-fun d!38055 () Bool)

(declare-fun e!82601 () Bool)

(assert (=> d!38055 e!82601))

(declare-fun res!61174 () Bool)

(assert (=> d!38055 (=> res!61174 e!82601)))

(declare-fun lt!65287 () Bool)

(assert (=> d!38055 (= res!61174 (not lt!65287))))

(declare-fun lt!65286 () Bool)

(assert (=> d!38055 (= lt!65287 lt!65286)))

(declare-fun lt!65288 () Unit!3936)

(declare-fun e!82600 () Unit!3936)

(assert (=> d!38055 (= lt!65288 e!82600)))

(declare-fun c!23095 () Bool)

(assert (=> d!38055 (= c!23095 lt!65286)))

(assert (=> d!38055 (= lt!65286 (containsKey!170 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> d!38055 (= (contains!877 e!82524 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) lt!65287)))

(declare-fun b!126442 () Bool)

(declare-fun lt!65289 () Unit!3936)

(assert (=> b!126442 (= e!82600 lt!65289)))

(assert (=> b!126442 (= lt!65289 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> b!126442 (isDefined!120 (getValueByKey!166 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!126443 () Bool)

(declare-fun Unit!3943 () Unit!3936)

(assert (=> b!126443 (= e!82600 Unit!3943)))

(declare-fun b!126444 () Bool)

(assert (=> b!126444 (= e!82601 (isDefined!120 (getValueByKey!166 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(assert (= (and d!38055 c!23095) b!126442))

(assert (= (and d!38055 (not c!23095)) b!126443))

(assert (= (and d!38055 (not res!61174)) b!126444))

(assert (=> d!38055 m!147095))

(declare-fun m!147481 () Bool)

(assert (=> d!38055 m!147481))

(assert (=> b!126442 m!147095))

(declare-fun m!147483 () Bool)

(assert (=> b!126442 m!147483))

(assert (=> b!126442 m!147095))

(declare-fun m!147485 () Bool)

(assert (=> b!126442 m!147485))

(assert (=> b!126442 m!147485))

(declare-fun m!147487 () Bool)

(assert (=> b!126442 m!147487))

(assert (=> b!126444 m!147095))

(assert (=> b!126444 m!147485))

(assert (=> b!126444 m!147485))

(assert (=> b!126444 m!147487))

(assert (=> bm!13594 d!38055))

(declare-fun d!38057 () Bool)

(assert (=> d!38057 (= (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!126210 d!38057))

(declare-fun d!38059 () Bool)

(assert (=> d!38059 (= (get!1454 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!126349 d!38059))

(declare-fun d!38061 () Bool)

(assert (=> d!38061 (= (+!165 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65292 () Unit!3936)

(declare-fun choose!771 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 V!3435 Int) Unit!3936)

(assert (=> d!38061 (= lt!65292 (choose!771 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2783 newMap!16)))))

(assert (=> d!38061 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38061 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2783 newMap!16)) lt!65292)))

(declare-fun bs!5232 () Bool)

(assert (= bs!5232 d!38061))

(assert (=> bs!5232 m!147093))

(declare-fun m!147489 () Bool)

(assert (=> bs!5232 m!147489))

(assert (=> bs!5232 m!147159))

(declare-fun m!147491 () Bool)

(assert (=> bs!5232 m!147491))

(assert (=> bs!5232 m!147159))

(assert (=> bs!5232 m!147093))

(declare-fun m!147493 () Bool)

(assert (=> bs!5232 m!147493))

(assert (=> bs!5232 m!147475))

(assert (=> b!126308 d!38061))

(declare-fun b!126453 () Bool)

(declare-fun e!82606 () (_ BitVec 32))

(declare-fun call!13615 () (_ BitVec 32))

(assert (=> b!126453 (= e!82606 (bvadd #b00000000000000000000000000000001 call!13615))))

(declare-fun b!126454 () Bool)

(declare-fun e!82607 () (_ BitVec 32))

(assert (=> b!126454 (= e!82607 e!82606)))

(declare-fun c!23101 () Bool)

(assert (=> b!126454 (= c!23101 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126455 () Bool)

(assert (=> b!126455 (= e!82607 #b00000000000000000000000000000000)))

(declare-fun d!38063 () Bool)

(declare-fun lt!65295 () (_ BitVec 32))

(assert (=> d!38063 (and (bvsge lt!65295 #b00000000000000000000000000000000) (bvsle lt!65295 (bvsub (size!2488 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!38063 (= lt!65295 e!82607)))

(declare-fun c!23100 () Bool)

(assert (=> d!38063 (= c!23100 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38063 (and (bvsle #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2488 (_keys!4516 newMap!16)) (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38063 (= (arrayCountValidKeys!0 (_keys!4516 newMap!16) #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) lt!65295)))

(declare-fun bm!13612 () Bool)

(assert (=> bm!13612 (= call!13615 (arrayCountValidKeys!0 (_keys!4516 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126456 () Bool)

(assert (=> b!126456 (= e!82606 call!13615)))

(assert (= (and d!38063 c!23100) b!126455))

(assert (= (and d!38063 (not c!23100)) b!126454))

(assert (= (and b!126454 c!23101) b!126453))

(assert (= (and b!126454 (not c!23101)) b!126456))

(assert (= (or b!126453 b!126456) bm!13612))

(assert (=> b!126454 m!147467))

(assert (=> b!126454 m!147467))

(declare-fun m!147495 () Bool)

(assert (=> b!126454 m!147495))

(declare-fun m!147497 () Bool)

(assert (=> bm!13612 m!147497))

(assert (=> b!126149 d!38063))

(declare-fun d!38065 () Bool)

(declare-fun e!82609 () Bool)

(assert (=> d!38065 e!82609))

(declare-fun res!61175 () Bool)

(assert (=> d!38065 (=> res!61175 e!82609)))

(declare-fun lt!65297 () Bool)

(assert (=> d!38065 (= res!61175 (not lt!65297))))

(declare-fun lt!65296 () Bool)

(assert (=> d!38065 (= lt!65297 lt!65296)))

(declare-fun lt!65298 () Unit!3936)

(declare-fun e!82608 () Unit!3936)

(assert (=> d!38065 (= lt!65298 e!82608)))

(declare-fun c!23102 () Bool)

(assert (=> d!38065 (= c!23102 lt!65296)))

(assert (=> d!38065 (= lt!65296 (containsKey!170 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38065 (= (contains!877 lt!65101 #b0000000000000000000000000000000000000000000000000000000000000000) lt!65297)))

(declare-fun b!126457 () Bool)

(declare-fun lt!65299 () Unit!3936)

(assert (=> b!126457 (= e!82608 lt!65299)))

(assert (=> b!126457 (= lt!65299 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!126457 (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126458 () Bool)

(declare-fun Unit!3944 () Unit!3936)

(assert (=> b!126458 (= e!82608 Unit!3944)))

(declare-fun b!126459 () Bool)

(assert (=> b!126459 (= e!82609 (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38065 c!23102) b!126457))

(assert (= (and d!38065 (not c!23102)) b!126458))

(assert (= (and d!38065 (not res!61175)) b!126459))

(declare-fun m!147499 () Bool)

(assert (=> d!38065 m!147499))

(declare-fun m!147501 () Bool)

(assert (=> b!126457 m!147501))

(assert (=> b!126457 m!147327))

(assert (=> b!126457 m!147327))

(declare-fun m!147503 () Bool)

(assert (=> b!126457 m!147503))

(assert (=> b!126459 m!147327))

(assert (=> b!126459 m!147327))

(assert (=> b!126459 m!147503))

(assert (=> bm!13528 d!38065))

(declare-fun b!126470 () Bool)

(declare-fun e!82618 () Bool)

(declare-fun call!13618 () Bool)

(assert (=> b!126470 (= e!82618 call!13618)))

(declare-fun b!126471 () Bool)

(declare-fun e!82620 () Bool)

(assert (=> b!126471 (= e!82620 e!82618)))

(declare-fun c!23105 () Bool)

(assert (=> b!126471 (= c!23105 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126472 () Bool)

(declare-fun e!82621 () Bool)

(declare-fun contains!879 (List!1720 (_ BitVec 64)) Bool)

(assert (=> b!126472 (= e!82621 (contains!879 Nil!1717 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126473 () Bool)

(declare-fun e!82619 () Bool)

(assert (=> b!126473 (= e!82619 e!82620)))

(declare-fun res!61183 () Bool)

(assert (=> b!126473 (=> (not res!61183) (not e!82620))))

(assert (=> b!126473 (= res!61183 (not e!82621))))

(declare-fun res!61182 () Bool)

(assert (=> b!126473 (=> (not res!61182) (not e!82621))))

(assert (=> b!126473 (= res!61182 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!13615 () Bool)

(assert (=> bm!13615 (= call!13618 (arrayNoDuplicates!0 (_keys!4516 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!23105 (Cons!1716 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)))))

(declare-fun d!38067 () Bool)

(declare-fun res!61184 () Bool)

(assert (=> d!38067 (=> res!61184 e!82619)))

(assert (=> d!38067 (= res!61184 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38067 (= (arrayNoDuplicates!0 (_keys!4516 newMap!16) #b00000000000000000000000000000000 Nil!1717) e!82619)))

(declare-fun b!126474 () Bool)

(assert (=> b!126474 (= e!82618 call!13618)))

(assert (= (and d!38067 (not res!61184)) b!126473))

(assert (= (and b!126473 res!61182) b!126472))

(assert (= (and b!126473 res!61183) b!126471))

(assert (= (and b!126471 c!23105) b!126470))

(assert (= (and b!126471 (not c!23105)) b!126474))

(assert (= (or b!126470 b!126474) bm!13615))

(assert (=> b!126471 m!147467))

(assert (=> b!126471 m!147467))

(assert (=> b!126471 m!147495))

(assert (=> b!126472 m!147467))

(assert (=> b!126472 m!147467))

(declare-fun m!147505 () Bool)

(assert (=> b!126472 m!147505))

(assert (=> b!126473 m!147467))

(assert (=> b!126473 m!147467))

(assert (=> b!126473 m!147495))

(assert (=> bm!13615 m!147467))

(declare-fun m!147507 () Bool)

(assert (=> bm!13615 m!147507))

(assert (=> b!126151 d!38067))

(declare-fun b!126484 () Bool)

(declare-fun e!82628 () Bool)

(declare-fun call!13621 () Bool)

(assert (=> b!126484 (= e!82628 call!13621)))

(declare-fun bm!13618 () Bool)

(assert (=> bm!13618 (= call!13621 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(declare-fun b!126485 () Bool)

(declare-fun e!82629 () Bool)

(assert (=> b!126485 (= e!82629 call!13621)))

(declare-fun b!126486 () Bool)

(assert (=> b!126486 (= e!82628 e!82629)))

(declare-fun lt!65307 () (_ BitVec 64))

(assert (=> b!126486 (= lt!65307 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65306 () Unit!3936)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4698 (_ BitVec 64) (_ BitVec 32)) Unit!3936)

(assert (=> b!126486 (= lt!65306 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4516 newMap!16) lt!65307 #b00000000000000000000000000000000))))

(assert (=> b!126486 (arrayContainsKey!0 (_keys!4516 newMap!16) lt!65307 #b00000000000000000000000000000000)))

(declare-fun lt!65308 () Unit!3936)

(assert (=> b!126486 (= lt!65308 lt!65306)))

(declare-fun res!61189 () Bool)

(assert (=> b!126486 (= res!61189 (= (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) (_keys!4516 newMap!16) (mask!7039 newMap!16)) (Found!280 #b00000000000000000000000000000000)))))

(assert (=> b!126486 (=> (not res!61189) (not e!82629))))

(declare-fun d!38069 () Bool)

(declare-fun res!61190 () Bool)

(declare-fun e!82630 () Bool)

(assert (=> d!38069 (=> res!61190 e!82630)))

(assert (=> d!38069 (= res!61190 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38069 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4516 newMap!16) (mask!7039 newMap!16)) e!82630)))

(declare-fun b!126483 () Bool)

(assert (=> b!126483 (= e!82630 e!82628)))

(declare-fun c!23108 () Bool)

(assert (=> b!126483 (= c!23108 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!38069 (not res!61190)) b!126483))

(assert (= (and b!126483 c!23108) b!126486))

(assert (= (and b!126483 (not c!23108)) b!126484))

(assert (= (and b!126486 res!61189) b!126485))

(assert (= (or b!126485 b!126484) bm!13618))

(declare-fun m!147509 () Bool)

(assert (=> bm!13618 m!147509))

(assert (=> b!126486 m!147467))

(declare-fun m!147511 () Bool)

(assert (=> b!126486 m!147511))

(declare-fun m!147513 () Bool)

(assert (=> b!126486 m!147513))

(assert (=> b!126486 m!147467))

(declare-fun m!147515 () Bool)

(assert (=> b!126486 m!147515))

(assert (=> b!126483 m!147467))

(assert (=> b!126483 m!147467))

(assert (=> b!126483 m!147495))

(assert (=> b!126150 d!38069))

(declare-fun d!38071 () Bool)

(declare-fun isEmpty!402 (Option!172) Bool)

(assert (=> d!38071 (= (isDefined!120 (getValueByKey!166 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))) (not (isEmpty!402 (getValueByKey!166 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))))

(declare-fun bs!5233 () Bool)

(assert (= bs!5233 d!38071))

(assert (=> bs!5233 m!147223))

(declare-fun m!147517 () Bool)

(assert (=> bs!5233 m!147517))

(assert (=> b!126223 d!38071))

(declare-fun b!126498 () Bool)

(declare-fun e!82636 () Option!172)

(assert (=> b!126498 (= e!82636 None!170)))

(declare-fun c!23113 () Bool)

(declare-fun d!38073 () Bool)

(assert (=> d!38073 (= c!23113 (and ((_ is Cons!1715) (toList!858 lt!65045)) (= (_1!1294 (h!2317 (toList!858 lt!65045))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(declare-fun e!82635 () Option!172)

(assert (=> d!38073 (= (getValueByKey!166 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) e!82635)))

(declare-fun b!126497 () Bool)

(assert (=> b!126497 (= e!82636 (getValueByKey!166 (t!6078 (toList!858 lt!65045)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!126495 () Bool)

(assert (=> b!126495 (= e!82635 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65045)))))))

(declare-fun b!126496 () Bool)

(assert (=> b!126496 (= e!82635 e!82636)))

(declare-fun c!23114 () Bool)

(assert (=> b!126496 (= c!23114 (and ((_ is Cons!1715) (toList!858 lt!65045)) (not (= (_1!1294 (h!2317 (toList!858 lt!65045))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))))

(assert (= (and d!38073 c!23113) b!126495))

(assert (= (and d!38073 (not c!23113)) b!126496))

(assert (= (and b!126496 c!23114) b!126497))

(assert (= (and b!126496 (not c!23114)) b!126498))

(assert (=> b!126497 m!147095))

(declare-fun m!147519 () Bool)

(assert (=> b!126497 m!147519))

(assert (=> b!126223 d!38073))

(declare-fun d!38075 () Bool)

(assert (=> d!38075 (= (inRange!0 (ite c!23070 (ite c!23068 (index!3276 lt!65199) (ite c!23073 (index!3275 lt!65205) (index!3278 lt!65205))) (ite c!23067 (index!3276 lt!65210) (ite c!23074 (index!3275 lt!65191) (index!3278 lt!65191)))) (mask!7039 newMap!16)) (and (bvsge (ite c!23070 (ite c!23068 (index!3276 lt!65199) (ite c!23073 (index!3275 lt!65205) (index!3278 lt!65205))) (ite c!23067 (index!3276 lt!65210) (ite c!23074 (index!3275 lt!65191) (index!3278 lt!65191)))) #b00000000000000000000000000000000) (bvslt (ite c!23070 (ite c!23068 (index!3276 lt!65199) (ite c!23073 (index!3275 lt!65205) (index!3278 lt!65205))) (ite c!23067 (index!3276 lt!65210) (ite c!23074 (index!3275 lt!65191) (index!3278 lt!65191)))) (bvadd (mask!7039 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!13601 d!38075))

(declare-fun b!126511 () Bool)

(declare-fun lt!65315 () SeekEntryResult!280)

(declare-fun e!82645 () SeekEntryResult!280)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4698 (_ BitVec 32)) SeekEntryResult!280)

(assert (=> b!126511 (= e!82645 (seekKeyOrZeroReturnVacant!0 (x!14973 lt!65315) (index!3277 lt!65315) (index!3277 lt!65315) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(declare-fun b!126512 () Bool)

(declare-fun e!82643 () SeekEntryResult!280)

(assert (=> b!126512 (= e!82643 (Found!280 (index!3277 lt!65315)))))

(declare-fun b!126513 () Bool)

(assert (=> b!126513 (= e!82645 (MissingZero!280 (index!3277 lt!65315)))))

(declare-fun b!126515 () Bool)

(declare-fun e!82644 () SeekEntryResult!280)

(assert (=> b!126515 (= e!82644 Undefined!280)))

(declare-fun b!126516 () Bool)

(assert (=> b!126516 (= e!82644 e!82643)))

(declare-fun lt!65317 () (_ BitVec 64))

(assert (=> b!126516 (= lt!65317 (select (arr!2224 (_keys!4516 newMap!16)) (index!3277 lt!65315)))))

(declare-fun c!23121 () Bool)

(assert (=> b!126516 (= c!23121 (= lt!65317 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun d!38077 () Bool)

(declare-fun lt!65316 () SeekEntryResult!280)

(assert (=> d!38077 (and (or ((_ is Undefined!280) lt!65316) (not ((_ is Found!280) lt!65316)) (and (bvsge (index!3276 lt!65316) #b00000000000000000000000000000000) (bvslt (index!3276 lt!65316) (size!2488 (_keys!4516 newMap!16))))) (or ((_ is Undefined!280) lt!65316) ((_ is Found!280) lt!65316) (not ((_ is MissingZero!280) lt!65316)) (and (bvsge (index!3275 lt!65316) #b00000000000000000000000000000000) (bvslt (index!3275 lt!65316) (size!2488 (_keys!4516 newMap!16))))) (or ((_ is Undefined!280) lt!65316) ((_ is Found!280) lt!65316) ((_ is MissingZero!280) lt!65316) (not ((_ is MissingVacant!280) lt!65316)) (and (bvsge (index!3278 lt!65316) #b00000000000000000000000000000000) (bvslt (index!3278 lt!65316) (size!2488 (_keys!4516 newMap!16))))) (or ((_ is Undefined!280) lt!65316) (ite ((_ is Found!280) lt!65316) (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65316)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (ite ((_ is MissingZero!280) lt!65316) (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3275 lt!65316)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!280) lt!65316) (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3278 lt!65316)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38077 (= lt!65316 e!82644)))

(declare-fun c!23122 () Bool)

(assert (=> d!38077 (= c!23122 (and ((_ is Intermediate!280) lt!65315) (undefined!1092 lt!65315)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4698 (_ BitVec 32)) SeekEntryResult!280)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!38077 (= lt!65315 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (mask!7039 newMap!16)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(assert (=> d!38077 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38077 (= (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)) lt!65316)))

(declare-fun b!126514 () Bool)

(declare-fun c!23123 () Bool)

(assert (=> b!126514 (= c!23123 (= lt!65317 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!126514 (= e!82643 e!82645)))

(assert (= (and d!38077 c!23122) b!126515))

(assert (= (and d!38077 (not c!23122)) b!126516))

(assert (= (and b!126516 c!23121) b!126512))

(assert (= (and b!126516 (not c!23121)) b!126514))

(assert (= (and b!126514 c!23123) b!126513))

(assert (= (and b!126514 (not c!23123)) b!126511))

(assert (=> b!126511 m!147095))

(declare-fun m!147521 () Bool)

(assert (=> b!126511 m!147521))

(declare-fun m!147523 () Bool)

(assert (=> b!126516 m!147523))

(declare-fun m!147525 () Bool)

(assert (=> d!38077 m!147525))

(assert (=> d!38077 m!147475))

(declare-fun m!147527 () Bool)

(assert (=> d!38077 m!147527))

(assert (=> d!38077 m!147095))

(declare-fun m!147529 () Bool)

(assert (=> d!38077 m!147529))

(declare-fun m!147531 () Bool)

(assert (=> d!38077 m!147531))

(assert (=> d!38077 m!147095))

(assert (=> d!38077 m!147527))

(declare-fun m!147533 () Bool)

(assert (=> d!38077 m!147533))

(assert (=> b!126335 d!38077))

(declare-fun d!38079 () Bool)

(assert (=> d!38079 (= (get!1453 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3121 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> b!126348 d!38079))

(declare-fun d!38081 () Bool)

(declare-fun res!61199 () Bool)

(declare-fun e!82648 () Bool)

(assert (=> d!38081 (=> (not res!61199) (not e!82648))))

(assert (=> d!38081 (= res!61199 (validMask!0 (mask!7039 newMap!16)))))

(assert (=> d!38081 (= (simpleValid!86 newMap!16) e!82648)))

(declare-fun b!126525 () Bool)

(declare-fun res!61200 () Bool)

(assert (=> b!126525 (=> (not res!61200) (not e!82648))))

(assert (=> b!126525 (= res!61200 (and (= (size!2489 (_values!2766 newMap!16)) (bvadd (mask!7039 newMap!16) #b00000000000000000000000000000001)) (= (size!2488 (_keys!4516 newMap!16)) (size!2489 (_values!2766 newMap!16))) (bvsge (_size!580 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!580 newMap!16) (bvadd (mask!7039 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!126527 () Bool)

(declare-fun res!61202 () Bool)

(assert (=> b!126527 (=> (not res!61202) (not e!82648))))

(declare-fun size!2492 (LongMapFixedSize!1062) (_ BitVec 32))

(assert (=> b!126527 (= res!61202 (= (size!2492 newMap!16) (bvadd (_size!580 newMap!16) (bvsdiv (bvadd (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!126528 () Bool)

(assert (=> b!126528 (= e!82648 (and (bvsge (extraKeys!2564 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2564 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!580 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!126526 () Bool)

(declare-fun res!61201 () Bool)

(assert (=> b!126526 (=> (not res!61201) (not e!82648))))

(assert (=> b!126526 (= res!61201 (bvsge (size!2492 newMap!16) (_size!580 newMap!16)))))

(assert (= (and d!38081 res!61199) b!126525))

(assert (= (and b!126525 res!61200) b!126526))

(assert (= (and b!126526 res!61201) b!126527))

(assert (= (and b!126527 res!61202) b!126528))

(assert (=> d!38081 m!147475))

(declare-fun m!147535 () Bool)

(assert (=> b!126527 m!147535))

(assert (=> b!126526 m!147535))

(assert (=> d!37983 d!38081))

(assert (=> bm!13592 d!38077))

(assert (=> bm!13593 d!37985))

(assert (=> d!37987 d!37991))

(declare-fun bm!13620 () Bool)

(declare-fun call!13627 () ListLongMap!1685)

(declare-fun call!13625 () ListLongMap!1685)

(assert (=> bm!13620 (= call!13627 call!13625)))

(declare-fun bm!13621 () Bool)

(declare-fun call!13623 () ListLongMap!1685)

(declare-fun call!13624 () ListLongMap!1685)

(assert (=> bm!13621 (= call!13623 call!13624)))

(declare-fun b!126529 () Bool)

(declare-fun e!82656 () Unit!3936)

(declare-fun lt!65338 () Unit!3936)

(assert (=> b!126529 (= e!82656 lt!65338)))

(declare-fun lt!65339 () ListLongMap!1685)

(assert (=> b!126529 (= lt!65339 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65328 () (_ BitVec 64))

(assert (=> b!126529 (= lt!65328 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65319 () (_ BitVec 64))

(assert (=> b!126529 (= lt!65319 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65335 () Unit!3936)

(assert (=> b!126529 (= lt!65335 (addStillContains!87 lt!65339 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) lt!65319))))

(assert (=> b!126529 (contains!877 (+!165 lt!65339 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) lt!65319)))

(declare-fun lt!65323 () Unit!3936)

(assert (=> b!126529 (= lt!65323 lt!65335)))

(declare-fun lt!65332 () ListLongMap!1685)

(assert (=> b!126529 (= lt!65332 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65337 () (_ BitVec 64))

(assert (=> b!126529 (= lt!65337 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65325 () (_ BitVec 64))

(assert (=> b!126529 (= lt!65325 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65330 () Unit!3936)

(assert (=> b!126529 (= lt!65330 (addApplyDifferent!87 lt!65332 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) lt!65325))))

(assert (=> b!126529 (= (apply!111 (+!165 lt!65332 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) lt!65325) (apply!111 lt!65332 lt!65325))))

(declare-fun lt!65333 () Unit!3936)

(assert (=> b!126529 (= lt!65333 lt!65330)))

(declare-fun lt!65331 () ListLongMap!1685)

(assert (=> b!126529 (= lt!65331 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65326 () (_ BitVec 64))

(assert (=> b!126529 (= lt!65326 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65321 () (_ BitVec 64))

(assert (=> b!126529 (= lt!65321 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65324 () Unit!3936)

(assert (=> b!126529 (= lt!65324 (addApplyDifferent!87 lt!65331 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) lt!65321))))

(assert (=> b!126529 (= (apply!111 (+!165 lt!65331 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) lt!65321) (apply!111 lt!65331 lt!65321))))

(declare-fun lt!65327 () Unit!3936)

(assert (=> b!126529 (= lt!65327 lt!65324)))

(declare-fun lt!65334 () ListLongMap!1685)

(assert (=> b!126529 (= lt!65334 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65336 () (_ BitVec 64))

(assert (=> b!126529 (= lt!65336 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65329 () (_ BitVec 64))

(assert (=> b!126529 (= lt!65329 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!126529 (= lt!65338 (addApplyDifferent!87 lt!65334 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) lt!65329))))

(assert (=> b!126529 (= (apply!111 (+!165 lt!65334 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) lt!65329) (apply!111 lt!65334 lt!65329))))

(declare-fun c!23128 () Bool)

(declare-fun bm!13622 () Bool)

(declare-fun call!13628 () ListLongMap!1685)

(declare-fun c!23125 () Bool)

(assert (=> bm!13622 (= call!13624 (+!165 (ite c!23125 call!13628 (ite c!23128 call!13625 call!13627)) (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(declare-fun b!126530 () Bool)

(declare-fun Unit!3945 () Unit!3936)

(assert (=> b!126530 (= e!82656 Unit!3945)))

(declare-fun bm!13623 () Bool)

(assert (=> bm!13623 (= call!13628 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun b!126531 () Bool)

(declare-fun res!61204 () Bool)

(declare-fun e!82659 () Bool)

(assert (=> b!126531 (=> (not res!61204) (not e!82659))))

(declare-fun e!82661 () Bool)

(assert (=> b!126531 (= res!61204 e!82661)))

(declare-fun c!23126 () Bool)

(assert (=> b!126531 (= c!23126 (not (= (bvand (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!126532 () Bool)

(declare-fun e!82653 () Bool)

(declare-fun lt!65320 () ListLongMap!1685)

(assert (=> b!126532 (= e!82653 (= (apply!111 lt!65320 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))))

(declare-fun bm!13624 () Bool)

(declare-fun call!13622 () Bool)

(assert (=> bm!13624 (= call!13622 (contains!877 lt!65320 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126533 () Bool)

(declare-fun e!82650 () ListLongMap!1685)

(assert (=> b!126533 (= e!82650 call!13623)))

(declare-fun b!126534 () Bool)

(declare-fun e!82658 () Bool)

(declare-fun e!82651 () Bool)

(assert (=> b!126534 (= e!82658 e!82651)))

(declare-fun res!61209 () Bool)

(assert (=> b!126534 (=> (not res!61209) (not e!82651))))

(assert (=> b!126534 (= res!61209 (contains!877 lt!65320 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!126534 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun c!23129 () Bool)

(declare-fun b!126535 () Bool)

(assert (=> b!126535 (= c!23129 (and (not (= (bvand (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!82652 () ListLongMap!1685)

(assert (=> b!126535 (= e!82650 e!82652)))

(declare-fun bm!13619 () Bool)

(declare-fun call!13626 () Bool)

(assert (=> bm!13619 (= call!13626 (contains!877 lt!65320 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!38083 () Bool)

(assert (=> d!38083 e!82659))

(declare-fun res!61208 () Bool)

(assert (=> d!38083 (=> (not res!61208) (not e!82659))))

(assert (=> d!38083 (= res!61208 (or (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))))

(declare-fun lt!65318 () ListLongMap!1685)

(assert (=> d!38083 (= lt!65320 lt!65318)))

(declare-fun lt!65322 () Unit!3936)

(assert (=> d!38083 (= lt!65322 e!82656)))

(declare-fun c!23124 () Bool)

(declare-fun e!82655 () Bool)

(assert (=> d!38083 (= c!23124 e!82655)))

(declare-fun res!61211 () Bool)

(assert (=> d!38083 (=> (not res!61211) (not e!82655))))

(assert (=> d!38083 (= res!61211 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun e!82660 () ListLongMap!1685)

(assert (=> d!38083 (= lt!65318 e!82660)))

(assert (=> d!38083 (= c!23125 (and (not (= (bvand (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!38083 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38083 (= (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65320)))

(declare-fun b!126536 () Bool)

(declare-fun e!82654 () Bool)

(assert (=> b!126536 (= e!82654 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126537 () Bool)

(assert (=> b!126537 (= e!82651 (= (apply!111 lt!65320 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!126537 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (_values!2766 newMap!16))))))

(assert (=> b!126537 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126538 () Bool)

(assert (=> b!126538 (= e!82661 (not call!13626))))

(declare-fun b!126539 () Bool)

(assert (=> b!126539 (= e!82652 call!13627)))

(declare-fun b!126540 () Bool)

(assert (=> b!126540 (= e!82661 e!82653)))

(declare-fun res!61203 () Bool)

(assert (=> b!126540 (= res!61203 call!13626)))

(assert (=> b!126540 (=> (not res!61203) (not e!82653))))

(declare-fun b!126541 () Bool)

(assert (=> b!126541 (= e!82652 call!13623)))

(declare-fun b!126542 () Bool)

(declare-fun e!82657 () Bool)

(declare-fun e!82649 () Bool)

(assert (=> b!126542 (= e!82657 e!82649)))

(declare-fun res!61207 () Bool)

(assert (=> b!126542 (= res!61207 call!13622)))

(assert (=> b!126542 (=> (not res!61207) (not e!82649))))

(declare-fun b!126543 () Bool)

(assert (=> b!126543 (= e!82659 e!82657)))

(declare-fun c!23127 () Bool)

(assert (=> b!126543 (= c!23127 (not (= (bvand (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126544 () Bool)

(assert (=> b!126544 (= e!82660 e!82650)))

(assert (=> b!126544 (= c!23128 (and (not (= (bvand (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126545 () Bool)

(assert (=> b!126545 (= e!82655 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126546 () Bool)

(declare-fun res!61210 () Bool)

(assert (=> b!126546 (=> (not res!61210) (not e!82659))))

(assert (=> b!126546 (= res!61210 e!82658)))

(declare-fun res!61205 () Bool)

(assert (=> b!126546 (=> res!61205 e!82658)))

(assert (=> b!126546 (= res!61205 (not e!82654))))

(declare-fun res!61206 () Bool)

(assert (=> b!126546 (=> (not res!61206) (not e!82654))))

(assert (=> b!126546 (= res!61206 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun bm!13625 () Bool)

(assert (=> bm!13625 (= call!13625 call!13628)))

(declare-fun b!126547 () Bool)

(assert (=> b!126547 (= e!82660 (+!165 call!13624 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))))

(declare-fun b!126548 () Bool)

(assert (=> b!126548 (= e!82649 (= (apply!111 lt!65320 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))

(declare-fun b!126549 () Bool)

(assert (=> b!126549 (= e!82657 (not call!13622))))

(assert (= (and d!38083 c!23125) b!126547))

(assert (= (and d!38083 (not c!23125)) b!126544))

(assert (= (and b!126544 c!23128) b!126533))

(assert (= (and b!126544 (not c!23128)) b!126535))

(assert (= (and b!126535 c!23129) b!126541))

(assert (= (and b!126535 (not c!23129)) b!126539))

(assert (= (or b!126541 b!126539) bm!13620))

(assert (= (or b!126533 bm!13620) bm!13625))

(assert (= (or b!126533 b!126541) bm!13621))

(assert (= (or b!126547 bm!13625) bm!13623))

(assert (= (or b!126547 bm!13621) bm!13622))

(assert (= (and d!38083 res!61211) b!126545))

(assert (= (and d!38083 c!23124) b!126529))

(assert (= (and d!38083 (not c!23124)) b!126530))

(assert (= (and d!38083 res!61208) b!126546))

(assert (= (and b!126546 res!61206) b!126536))

(assert (= (and b!126546 (not res!61205)) b!126534))

(assert (= (and b!126534 res!61209) b!126537))

(assert (= (and b!126546 res!61210) b!126531))

(assert (= (and b!126531 c!23126) b!126540))

(assert (= (and b!126531 (not c!23126)) b!126538))

(assert (= (and b!126540 res!61203) b!126532))

(assert (= (or b!126540 b!126538) bm!13619))

(assert (= (and b!126531 res!61204) b!126543))

(assert (= (and b!126543 c!23127) b!126542))

(assert (= (and b!126543 (not c!23127)) b!126549))

(assert (= (and b!126542 res!61207) b!126548))

(assert (= (or b!126542 b!126549) bm!13624))

(declare-fun b_lambda!5593 () Bool)

(assert (=> (not b_lambda!5593) (not b!126537)))

(declare-fun t!6085 () Bool)

(declare-fun tb!2329 () Bool)

(assert (=> (and b!126082 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16)) t!6085) tb!2329))

(declare-fun result!3859 () Bool)

(assert (=> tb!2329 (= result!3859 tp_is_empty!2841)))

(assert (=> b!126537 t!6085))

(declare-fun b_and!7801 () Bool)

(assert (= b_and!7797 (and (=> t!6085 result!3859) b_and!7801)))

(declare-fun t!6087 () Bool)

(declare-fun tb!2331 () Bool)

(assert (=> (and b!126074 (= (defaultEntry!2783 newMap!16) (defaultEntry!2783 newMap!16)) t!6087) tb!2331))

(declare-fun result!3861 () Bool)

(assert (= result!3861 result!3859))

(assert (=> b!126537 t!6087))

(declare-fun b_and!7803 () Bool)

(assert (= b_and!7799 (and (=> t!6087 result!3861) b_and!7803)))

(declare-fun m!147537 () Bool)

(assert (=> bm!13622 m!147537))

(declare-fun m!147539 () Bool)

(assert (=> bm!13623 m!147539))

(assert (=> b!126545 m!147467))

(assert (=> b!126545 m!147467))

(assert (=> b!126545 m!147495))

(assert (=> d!38083 m!147475))

(declare-fun m!147541 () Bool)

(assert (=> bm!13619 m!147541))

(declare-fun m!147543 () Bool)

(assert (=> bm!13624 m!147543))

(declare-fun m!147545 () Bool)

(assert (=> b!126547 m!147545))

(declare-fun m!147547 () Bool)

(assert (=> b!126532 m!147547))

(declare-fun m!147549 () Bool)

(assert (=> b!126529 m!147549))

(declare-fun m!147551 () Bool)

(assert (=> b!126529 m!147551))

(declare-fun m!147553 () Bool)

(assert (=> b!126529 m!147553))

(declare-fun m!147555 () Bool)

(assert (=> b!126529 m!147555))

(declare-fun m!147557 () Bool)

(assert (=> b!126529 m!147557))

(declare-fun m!147559 () Bool)

(assert (=> b!126529 m!147559))

(assert (=> b!126529 m!147539))

(declare-fun m!147561 () Bool)

(assert (=> b!126529 m!147561))

(declare-fun m!147563 () Bool)

(assert (=> b!126529 m!147563))

(declare-fun m!147565 () Bool)

(assert (=> b!126529 m!147565))

(assert (=> b!126529 m!147557))

(declare-fun m!147567 () Bool)

(assert (=> b!126529 m!147567))

(assert (=> b!126529 m!147555))

(declare-fun m!147569 () Bool)

(assert (=> b!126529 m!147569))

(declare-fun m!147571 () Bool)

(assert (=> b!126529 m!147571))

(assert (=> b!126529 m!147467))

(assert (=> b!126529 m!147561))

(declare-fun m!147573 () Bool)

(assert (=> b!126529 m!147573))

(declare-fun m!147575 () Bool)

(assert (=> b!126529 m!147575))

(declare-fun m!147577 () Bool)

(assert (=> b!126529 m!147577))

(assert (=> b!126529 m!147575))

(assert (=> b!126536 m!147467))

(assert (=> b!126536 m!147467))

(assert (=> b!126536 m!147495))

(declare-fun m!147579 () Bool)

(assert (=> b!126537 m!147579))

(declare-fun m!147581 () Bool)

(assert (=> b!126537 m!147581))

(declare-fun m!147583 () Bool)

(assert (=> b!126537 m!147583))

(assert (=> b!126537 m!147579))

(assert (=> b!126537 m!147467))

(declare-fun m!147585 () Bool)

(assert (=> b!126537 m!147585))

(assert (=> b!126537 m!147581))

(assert (=> b!126537 m!147467))

(assert (=> b!126534 m!147467))

(assert (=> b!126534 m!147467))

(declare-fun m!147587 () Bool)

(assert (=> b!126534 m!147587))

(declare-fun m!147589 () Bool)

(assert (=> b!126548 m!147589))

(assert (=> bm!13591 d!38083))

(declare-fun d!38085 () Bool)

(assert (=> d!38085 (= (apply!111 lt!65101 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1455 (getValueByKey!166 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5234 () Bool)

(assert (= bs!5234 d!38085))

(assert (=> bs!5234 m!147165))

(declare-fun m!147591 () Bool)

(assert (=> bs!5234 m!147591))

(assert (=> bs!5234 m!147591))

(declare-fun m!147593 () Bool)

(assert (=> bs!5234 m!147593))

(assert (=> b!126202 d!38085))

(declare-fun d!38087 () Bool)

(declare-fun c!23130 () Bool)

(assert (=> d!38087 (= c!23130 ((_ is ValueCellFull!1077) (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!82662 () V!3435)

(assert (=> d!38087 (= (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!82662)))

(declare-fun b!126550 () Bool)

(assert (=> b!126550 (= e!82662 (get!1453 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!126551 () Bool)

(assert (=> b!126551 (= e!82662 (get!1454 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38087 c!23130) b!126550))

(assert (= (and d!38087 (not c!23130)) b!126551))

(assert (=> b!126550 m!147207))

(assert (=> b!126550 m!147091))

(declare-fun m!147595 () Bool)

(assert (=> b!126550 m!147595))

(assert (=> b!126551 m!147207))

(assert (=> b!126551 m!147091))

(declare-fun m!147597 () Bool)

(assert (=> b!126551 m!147597))

(assert (=> b!126202 d!38087))

(declare-fun d!38089 () Bool)

(assert (=> d!38089 (isDefined!120 (getValueByKey!166 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun lt!65342 () Unit!3936)

(declare-fun choose!772 (List!1719 (_ BitVec 64)) Unit!3936)

(assert (=> d!38089 (= lt!65342 (choose!772 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun e!82665 () Bool)

(assert (=> d!38089 e!82665))

(declare-fun res!61214 () Bool)

(assert (=> d!38089 (=> (not res!61214) (not e!82665))))

(declare-fun isStrictlySorted!312 (List!1719) Bool)

(assert (=> d!38089 (= res!61214 (isStrictlySorted!312 (toList!858 lt!65045)))))

(assert (=> d!38089 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) lt!65342)))

(declare-fun b!126554 () Bool)

(assert (=> b!126554 (= e!82665 (containsKey!170 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (= (and d!38089 res!61214) b!126554))

(assert (=> d!38089 m!147095))

(assert (=> d!38089 m!147223))

(assert (=> d!38089 m!147223))

(assert (=> d!38089 m!147225))

(assert (=> d!38089 m!147095))

(declare-fun m!147599 () Bool)

(assert (=> d!38089 m!147599))

(declare-fun m!147601 () Bool)

(assert (=> d!38089 m!147601))

(assert (=> b!126554 m!147095))

(assert (=> b!126554 m!147219))

(assert (=> b!126221 d!38089))

(assert (=> b!126221 d!38071))

(assert (=> b!126221 d!38073))

(declare-fun b!126572 () Bool)

(declare-fun e!82677 () Bool)

(declare-fun lt!65347 () SeekEntryResult!280)

(assert (=> b!126572 (= e!82677 ((_ is Undefined!280) lt!65347))))

(declare-fun call!13633 () Bool)

(declare-fun bm!13630 () Bool)

(assert (=> bm!13630 (= call!13633 (arrayContainsKey!0 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!126573 () Bool)

(assert (=> b!126573 (and (bvsge (index!3275 lt!65347) #b00000000000000000000000000000000) (bvslt (index!3275 lt!65347) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun res!61224 () Bool)

(assert (=> b!126573 (= res!61224 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3275 lt!65347)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!82674 () Bool)

(assert (=> b!126573 (=> (not res!61224) (not e!82674))))

(declare-fun b!126574 () Bool)

(assert (=> b!126574 (= e!82674 (not call!13633))))

(declare-fun b!126575 () Bool)

(declare-fun res!61226 () Bool)

(declare-fun e!82676 () Bool)

(assert (=> b!126575 (=> (not res!61226) (not e!82676))))

(declare-fun call!13634 () Bool)

(assert (=> b!126575 (= res!61226 call!13634)))

(assert (=> b!126575 (= e!82677 e!82676)))

(declare-fun b!126576 () Bool)

(assert (=> b!126576 (= e!82676 (not call!13633))))

(declare-fun b!126577 () Bool)

(declare-fun e!82675 () Bool)

(assert (=> b!126577 (= e!82675 e!82674)))

(declare-fun res!61225 () Bool)

(assert (=> b!126577 (= res!61225 call!13634)))

(assert (=> b!126577 (=> (not res!61225) (not e!82674))))

(declare-fun b!126578 () Bool)

(declare-fun res!61223 () Bool)

(assert (=> b!126578 (=> (not res!61223) (not e!82676))))

(assert (=> b!126578 (= res!61223 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3278 lt!65347)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!126578 (and (bvsge (index!3278 lt!65347) #b00000000000000000000000000000000) (bvslt (index!3278 lt!65347) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun bm!13631 () Bool)

(declare-fun c!23136 () Bool)

(assert (=> bm!13631 (= call!13634 (inRange!0 (ite c!23136 (index!3275 lt!65347) (index!3278 lt!65347)) (mask!7039 newMap!16)))))

(declare-fun b!126571 () Bool)

(assert (=> b!126571 (= e!82675 e!82677)))

(declare-fun c!23135 () Bool)

(assert (=> b!126571 (= c!23135 ((_ is MissingVacant!280) lt!65347))))

(declare-fun d!38091 () Bool)

(assert (=> d!38091 e!82675))

(assert (=> d!38091 (= c!23136 ((_ is MissingZero!280) lt!65347))))

(assert (=> d!38091 (= lt!65347 (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(declare-fun lt!65348 () Unit!3936)

(declare-fun choose!773 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 64) Int) Unit!3936)

(assert (=> d!38091 (= lt!65348 (choose!773 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (defaultEntry!2783 newMap!16)))))

(assert (=> d!38091 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38091 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (defaultEntry!2783 newMap!16)) lt!65348)))

(assert (= (and d!38091 c!23136) b!126577))

(assert (= (and d!38091 (not c!23136)) b!126571))

(assert (= (and b!126577 res!61225) b!126573))

(assert (= (and b!126573 res!61224) b!126574))

(assert (= (and b!126571 c!23135) b!126575))

(assert (= (and b!126571 (not c!23135)) b!126572))

(assert (= (and b!126575 res!61226) b!126578))

(assert (= (and b!126578 res!61223) b!126576))

(assert (= (or b!126577 b!126575) bm!13631))

(assert (= (or b!126574 b!126576) bm!13630))

(declare-fun m!147603 () Bool)

(assert (=> b!126578 m!147603))

(declare-fun m!147605 () Bool)

(assert (=> b!126573 m!147605))

(assert (=> d!38091 m!147095))

(assert (=> d!38091 m!147245))

(assert (=> d!38091 m!147095))

(declare-fun m!147607 () Bool)

(assert (=> d!38091 m!147607))

(assert (=> d!38091 m!147475))

(assert (=> bm!13630 m!147095))

(assert (=> bm!13630 m!147271))

(declare-fun m!147609 () Bool)

(assert (=> bm!13631 m!147609))

(assert (=> bm!13585 d!38091))

(declare-fun d!38093 () Bool)

(assert (=> d!38093 (= (map!1383 (_2!1295 lt!65202)) (getCurrentListMap!530 (_keys!4516 (_2!1295 lt!65202)) (_values!2766 (_2!1295 lt!65202)) (mask!7039 (_2!1295 lt!65202)) (extraKeys!2564 (_2!1295 lt!65202)) (zeroValue!2646 (_2!1295 lt!65202)) (minValue!2646 (_2!1295 lt!65202)) #b00000000000000000000000000000000 (defaultEntry!2783 (_2!1295 lt!65202))))))

(declare-fun bs!5235 () Bool)

(assert (= bs!5235 d!38093))

(declare-fun m!147611 () Bool)

(assert (=> bs!5235 m!147611))

(assert (=> bm!13584 d!38093))

(declare-fun d!38095 () Bool)

(declare-fun e!82679 () Bool)

(assert (=> d!38095 e!82679))

(declare-fun res!61227 () Bool)

(assert (=> d!38095 (=> res!61227 e!82679)))

(declare-fun lt!65350 () Bool)

(assert (=> d!38095 (= res!61227 (not lt!65350))))

(declare-fun lt!65349 () Bool)

(assert (=> d!38095 (= lt!65350 lt!65349)))

(declare-fun lt!65351 () Unit!3936)

(declare-fun e!82678 () Unit!3936)

(assert (=> d!38095 (= lt!65351 e!82678)))

(declare-fun c!23137 () Bool)

(assert (=> d!38095 (= c!23137 lt!65349)))

(assert (=> d!38095 (= lt!65349 (containsKey!170 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!38095 (= (contains!877 lt!65101 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!65350)))

(declare-fun b!126579 () Bool)

(declare-fun lt!65352 () Unit!3936)

(assert (=> b!126579 (= e!82678 lt!65352)))

(assert (=> b!126579 (= lt!65352 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!126579 (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!126580 () Bool)

(declare-fun Unit!3946 () Unit!3936)

(assert (=> b!126580 (= e!82678 Unit!3946)))

(declare-fun b!126581 () Bool)

(assert (=> b!126581 (= e!82679 (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!38095 c!23137) b!126579))

(assert (= (and d!38095 (not c!23137)) b!126580))

(assert (= (and d!38095 (not res!61227)) b!126581))

(assert (=> d!38095 m!147165))

(declare-fun m!147613 () Bool)

(assert (=> d!38095 m!147613))

(assert (=> b!126579 m!147165))

(declare-fun m!147615 () Bool)

(assert (=> b!126579 m!147615))

(assert (=> b!126579 m!147165))

(assert (=> b!126579 m!147591))

(assert (=> b!126579 m!147591))

(declare-fun m!147617 () Bool)

(assert (=> b!126579 m!147617))

(assert (=> b!126581 m!147165))

(assert (=> b!126581 m!147591))

(assert (=> b!126581 m!147591))

(assert (=> b!126581 m!147617))

(assert (=> b!126199 d!38095))

(assert (=> b!126201 d!38057))

(declare-fun b!126616 () Bool)

(declare-fun res!61254 () Bool)

(declare-fun e!82701 () Bool)

(assert (=> b!126616 (=> (not res!61254) (not e!82701))))

(declare-fun lt!65442 () tuple2!2570)

(assert (=> b!126616 (= res!61254 (contains!877 (map!1383 (_2!1295 lt!65442)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!126617 () Bool)

(declare-fun e!82698 () Bool)

(declare-fun lt!65438 () SeekEntryResult!280)

(assert (=> b!126617 (= e!82698 ((_ is Undefined!280) lt!65438))))

(declare-fun bm!13640 () Bool)

(declare-fun call!13644 () Bool)

(declare-fun call!13645 () Bool)

(assert (=> bm!13640 (= call!13644 call!13645)))

(declare-fun b!126619 () Bool)

(declare-fun e!82696 () Bool)

(declare-fun lt!65428 () SeekEntryResult!280)

(assert (=> b!126619 (= e!82696 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65428)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun call!13646 () Bool)

(declare-fun bm!13641 () Bool)

(assert (=> bm!13641 (= call!13646 (arrayContainsKey!0 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!126620 () Bool)

(declare-fun res!61252 () Bool)

(assert (=> b!126620 (= res!61252 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3278 lt!65438)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!82700 () Bool)

(assert (=> b!126620 (=> (not res!61252) (not e!82700))))

(declare-fun b!126621 () Bool)

(declare-fun e!82702 () Bool)

(assert (=> b!126621 (= e!82702 (not call!13646))))

(declare-fun b!126622 () Bool)

(assert (=> b!126622 (= e!82701 (= (map!1383 (_2!1295 lt!65442)) (+!165 (map!1383 newMap!16) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!126623 () Bool)

(declare-fun res!61247 () Bool)

(assert (=> b!126623 (= res!61247 call!13645)))

(assert (=> b!126623 (=> (not res!61247) (not e!82696))))

(declare-fun b!126624 () Bool)

(declare-fun res!61249 () Bool)

(assert (=> b!126624 (=> (not res!61249) (not e!82701))))

(assert (=> b!126624 (= res!61249 (valid!504 (_2!1295 lt!65442)))))

(declare-fun bm!13642 () Bool)

(declare-fun call!13643 () SeekEntryResult!280)

(assert (=> bm!13642 (= call!13643 (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(declare-fun b!126625 () Bool)

(declare-fun e!82703 () Unit!3936)

(declare-fun Unit!3947 () Unit!3936)

(assert (=> b!126625 (= e!82703 Unit!3947)))

(declare-fun b!126626 () Bool)

(declare-fun e!82697 () Unit!3936)

(declare-fun lt!65422 () Unit!3936)

(assert (=> b!126626 (= e!82697 lt!65422)))

(assert (=> b!126626 (= lt!65422 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (defaultEntry!2783 newMap!16)))))

(assert (=> b!126626 (= lt!65438 call!13643)))

(declare-fun c!23146 () Bool)

(assert (=> b!126626 (= c!23146 ((_ is MissingZero!280) lt!65438))))

(declare-fun e!82699 () Bool)

(assert (=> b!126626 e!82699))

(declare-fun b!126627 () Bool)

(assert (=> b!126627 (= e!82698 e!82700)))

(declare-fun res!61251 () Bool)

(assert (=> b!126627 (= res!61251 call!13644)))

(assert (=> b!126627 (=> (not res!61251) (not e!82700))))

(declare-fun d!38097 () Bool)

(assert (=> d!38097 e!82701))

(declare-fun res!61250 () Bool)

(assert (=> d!38097 (=> (not res!61250) (not e!82701))))

(assert (=> d!38097 (= res!61250 (_1!1295 lt!65442))))

(assert (=> d!38097 (= lt!65442 (tuple2!2571 true (LongMapFixedSize!1063 (defaultEntry!2783 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (bvadd (_size!580 newMap!16) #b00000000000000000000000000000001) (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (_vacant!580 newMap!16))))))

(declare-fun lt!65421 () Unit!3936)

(declare-fun lt!65436 () Unit!3936)

(assert (=> d!38097 (= lt!65421 lt!65436)))

(declare-fun lt!65419 () array!4698)

(declare-fun lt!65441 () array!4700)

(assert (=> d!38097 (contains!877 (getCurrentListMap!530 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (select (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194))))))

(assert (=> d!38097 (= lt!65436 (lemmaValidKeyInArrayIsInListMap!114 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (defaultEntry!2783 newMap!16)))))

(assert (=> d!38097 (= lt!65441 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))))))

(assert (=> d!38097 (= lt!65419 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun lt!65414 () Unit!3936)

(declare-fun lt!65420 () Unit!3936)

(assert (=> d!38097 (= lt!65414 lt!65420)))

(declare-fun lt!65433 () array!4698)

(assert (=> d!38097 (= (arrayCountValidKeys!0 lt!65433 (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (bvadd (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4698 (_ BitVec 32)) Unit!3936)

(assert (=> d!38097 (= lt!65420 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!65433 (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194))))))

(assert (=> d!38097 (= lt!65433 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun lt!65427 () Unit!3936)

(declare-fun lt!65439 () Unit!3936)

(assert (=> d!38097 (= lt!65427 lt!65439)))

(declare-fun lt!65424 () array!4698)

(assert (=> d!38097 (arrayContainsKey!0 lt!65424 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!38097 (= lt!65439 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!65424 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194))))))

(assert (=> d!38097 (= lt!65424 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun lt!65426 () Unit!3936)

(declare-fun lt!65430 () Unit!3936)

(assert (=> d!38097 (= lt!65426 lt!65430)))

(assert (=> d!38097 (= (+!165 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!530 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!37 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 32) (_ BitVec 64) V!3435 Int) Unit!3936)

(assert (=> d!38097 (= lt!65430 (lemmaAddValidKeyToArrayThenAddPairToListMap!37 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65435 () Unit!3936)

(declare-fun lt!65416 () Unit!3936)

(assert (=> d!38097 (= lt!65435 lt!65416)))

(assert (=> d!38097 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (mask!7039 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4698 (_ BitVec 32) (_ BitVec 32)) Unit!3936)

(assert (=> d!38097 (= lt!65416 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (mask!7039 newMap!16)))))

(declare-fun lt!65417 () Unit!3936)

(declare-fun lt!65434 () Unit!3936)

(assert (=> d!38097 (= lt!65417 lt!65434)))

(assert (=> d!38097 (= (arrayCountValidKeys!0 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4516 newMap!16) #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4698 (_ BitVec 32) (_ BitVec 64)) Unit!3936)

(assert (=> d!38097 (= lt!65434 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4516 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun lt!65425 () Unit!3936)

(declare-fun lt!65429 () Unit!3936)

(assert (=> d!38097 (= lt!65425 lt!65429)))

(declare-fun lt!65432 () List!1720)

(declare-fun lt!65440 () (_ BitVec 32))

(assert (=> d!38097 (arrayNoDuplicates!0 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) lt!65440 lt!65432)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4698 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1720) Unit!3936)

(assert (=> d!38097 (= lt!65429 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) lt!65440 lt!65432))))

(assert (=> d!38097 (= lt!65432 Nil!1717)))

(assert (=> d!38097 (= lt!65440 #b00000000000000000000000000000000)))

(declare-fun lt!65413 () Unit!3936)

(assert (=> d!38097 (= lt!65413 e!82703)))

(declare-fun c!23148 () Bool)

(assert (=> d!38097 (= c!23148 (arrayContainsKey!0 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!65415 () Unit!3936)

(assert (=> d!38097 (= lt!65415 e!82697)))

(declare-fun c!23149 () Bool)

(assert (=> d!38097 (= c!23149 (contains!877 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> d!38097 (valid!504 newMap!16)))

(assert (=> d!38097 (= (updateHelperNewKey!56 newMap!16 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194))) lt!65442)))

(declare-fun b!126618 () Bool)

(declare-fun c!23147 () Bool)

(assert (=> b!126618 (= c!23147 ((_ is MissingVacant!280) lt!65438))))

(assert (=> b!126618 (= e!82699 e!82698)))

(declare-fun b!126628 () Bool)

(assert (=> b!126628 (= e!82700 (not call!13646))))

(declare-fun b!126629 () Bool)

(declare-fun Unit!3948 () Unit!3936)

(assert (=> b!126629 (= e!82703 Unit!3948)))

(declare-fun lt!65423 () Unit!3936)

(declare-fun lemmaArrayContainsKeyThenInListMap!37 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 64) (_ BitVec 32) Int) Unit!3936)

(assert (=> b!126629 (= lt!65423 (lemmaArrayContainsKeyThenInListMap!37 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(assert (=> b!126629 (contains!877 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))

(declare-fun lt!65431 () Unit!3936)

(assert (=> b!126629 (= lt!65431 lt!65423)))

(assert (=> b!126629 false))

(declare-fun b!126630 () Bool)

(declare-fun res!61246 () Bool)

(assert (=> b!126630 (=> (not res!61246) (not e!82702))))

(assert (=> b!126630 (= res!61246 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3275 lt!65438)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126631 () Bool)

(declare-fun res!61248 () Bool)

(assert (=> b!126631 (=> (not res!61248) (not e!82702))))

(assert (=> b!126631 (= res!61248 call!13644)))

(assert (=> b!126631 (= e!82699 e!82702)))

(declare-fun b!126632 () Bool)

(declare-fun Unit!3949 () Unit!3936)

(assert (=> b!126632 (= e!82697 Unit!3949)))

(declare-fun lt!65437 () Unit!3936)

(assert (=> b!126632 (= lt!65437 (lemmaInListMapThenSeekEntryOrOpenFindsIt!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (defaultEntry!2783 newMap!16)))))

(assert (=> b!126632 (= lt!65428 call!13643)))

(declare-fun res!61253 () Bool)

(assert (=> b!126632 (= res!61253 ((_ is Found!280) lt!65428))))

(assert (=> b!126632 (=> (not res!61253) (not e!82696))))

(assert (=> b!126632 e!82696))

(declare-fun lt!65418 () Unit!3936)

(assert (=> b!126632 (= lt!65418 lt!65437)))

(assert (=> b!126632 false))

(declare-fun bm!13643 () Bool)

(assert (=> bm!13643 (= call!13645 (inRange!0 (ite c!23149 (index!3276 lt!65428) (ite c!23146 (index!3275 lt!65438) (index!3278 lt!65438))) (mask!7039 newMap!16)))))

(assert (= (and d!38097 c!23149) b!126632))

(assert (= (and d!38097 (not c!23149)) b!126626))

(assert (= (and b!126632 res!61253) b!126623))

(assert (= (and b!126623 res!61247) b!126619))

(assert (= (and b!126626 c!23146) b!126631))

(assert (= (and b!126626 (not c!23146)) b!126618))

(assert (= (and b!126631 res!61248) b!126630))

(assert (= (and b!126630 res!61246) b!126621))

(assert (= (and b!126618 c!23147) b!126627))

(assert (= (and b!126618 (not c!23147)) b!126617))

(assert (= (and b!126627 res!61251) b!126620))

(assert (= (and b!126620 res!61252) b!126628))

(assert (= (or b!126631 b!126627) bm!13640))

(assert (= (or b!126621 b!126628) bm!13641))

(assert (= (or b!126623 bm!13640) bm!13643))

(assert (= (or b!126632 b!126626) bm!13642))

(assert (= (and d!38097 c!23148) b!126629))

(assert (= (and d!38097 (not c!23148)) b!126625))

(assert (= (and d!38097 res!61250) b!126624))

(assert (= (and b!126624 res!61249) b!126616))

(assert (= (and b!126616 res!61254) b!126622))

(assert (=> bm!13641 m!147095))

(assert (=> bm!13641 m!147271))

(assert (=> bm!13642 m!147095))

(assert (=> bm!13642 m!147245))

(assert (=> b!126629 m!147095))

(declare-fun m!147619 () Bool)

(assert (=> b!126629 m!147619))

(assert (=> b!126629 m!147159))

(assert (=> b!126629 m!147159))

(assert (=> b!126629 m!147095))

(declare-fun m!147621 () Bool)

(assert (=> b!126629 m!147621))

(assert (=> b!126626 m!147095))

(assert (=> b!126626 m!147263))

(declare-fun m!147623 () Bool)

(assert (=> b!126630 m!147623))

(assert (=> b!126632 m!147095))

(assert (=> b!126632 m!147247))

(declare-fun m!147625 () Bool)

(assert (=> b!126616 m!147625))

(assert (=> b!126616 m!147625))

(assert (=> b!126616 m!147095))

(declare-fun m!147627 () Bool)

(assert (=> b!126616 m!147627))

(declare-fun m!147629 () Bool)

(assert (=> b!126619 m!147629))

(assert (=> d!38097 m!147159))

(assert (=> d!38097 m!147095))

(declare-fun m!147631 () Bool)

(assert (=> d!38097 m!147631))

(declare-fun m!147633 () Bool)

(assert (=> d!38097 m!147633))

(declare-fun m!147635 () Bool)

(assert (=> d!38097 m!147635))

(declare-fun m!147637 () Bool)

(assert (=> d!38097 m!147637))

(assert (=> d!38097 m!147159))

(assert (=> d!38097 m!147095))

(assert (=> d!38097 m!147621))

(declare-fun m!147639 () Bool)

(assert (=> d!38097 m!147639))

(assert (=> d!38097 m!147633))

(declare-fun m!147641 () Bool)

(assert (=> d!38097 m!147641))

(declare-fun m!147643 () Bool)

(assert (=> d!38097 m!147643))

(assert (=> d!38097 m!147153))

(declare-fun m!147645 () Bool)

(assert (=> d!38097 m!147645))

(assert (=> d!38097 m!147095))

(declare-fun m!147647 () Bool)

(assert (=> d!38097 m!147647))

(assert (=> d!38097 m!147095))

(assert (=> d!38097 m!147271))

(declare-fun m!147649 () Bool)

(assert (=> d!38097 m!147649))

(assert (=> d!38097 m!147095))

(assert (=> d!38097 m!147093))

(declare-fun m!147651 () Bool)

(assert (=> d!38097 m!147651))

(declare-fun m!147653 () Bool)

(assert (=> d!38097 m!147653))

(assert (=> d!38097 m!147095))

(declare-fun m!147655 () Bool)

(assert (=> d!38097 m!147655))

(declare-fun m!147657 () Bool)

(assert (=> d!38097 m!147657))

(declare-fun m!147659 () Bool)

(assert (=> d!38097 m!147659))

(declare-fun m!147661 () Bool)

(assert (=> d!38097 m!147661))

(assert (=> d!38097 m!147115))

(assert (=> d!38097 m!147639))

(assert (=> d!38097 m!147095))

(declare-fun m!147663 () Bool)

(assert (=> d!38097 m!147663))

(assert (=> d!38097 m!147095))

(declare-fun m!147665 () Bool)

(assert (=> d!38097 m!147665))

(assert (=> d!38097 m!147159))

(declare-fun m!147667 () Bool)

(assert (=> d!38097 m!147667))

(declare-fun m!147669 () Bool)

(assert (=> b!126624 m!147669))

(assert (=> b!126622 m!147625))

(assert (=> b!126622 m!147101))

(assert (=> b!126622 m!147101))

(declare-fun m!147671 () Bool)

(assert (=> b!126622 m!147671))

(declare-fun m!147673 () Bool)

(assert (=> bm!13643 m!147673))

(declare-fun m!147675 () Bool)

(assert (=> b!126620 m!147675))

(assert (=> bm!13600 d!38097))

(declare-fun d!38099 () Bool)

(declare-fun e!82704 () Bool)

(assert (=> d!38099 e!82704))

(declare-fun res!61255 () Bool)

(assert (=> d!38099 (=> (not res!61255) (not e!82704))))

(declare-fun lt!65444 () ListLongMap!1685)

(assert (=> d!38099 (= res!61255 (contains!877 lt!65444 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!65443 () List!1719)

(assert (=> d!38099 (= lt!65444 (ListLongMap!1686 lt!65443))))

(declare-fun lt!65446 () Unit!3936)

(declare-fun lt!65445 () Unit!3936)

(assert (=> d!38099 (= lt!65446 lt!65445)))

(assert (=> d!38099 (= (getValueByKey!166 lt!65443 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38099 (= lt!65445 (lemmaContainsTupThenGetReturnValue!83 lt!65443 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38099 (= lt!65443 (insertStrictlySorted!85 (toList!858 call!13609) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38099 (= (+!165 call!13609 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!65444)))

(declare-fun b!126633 () Bool)

(declare-fun res!61256 () Bool)

(assert (=> b!126633 (=> (not res!61256) (not e!82704))))

(assert (=> b!126633 (= res!61256 (= (getValueByKey!166 (toList!858 lt!65444) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!126634 () Bool)

(assert (=> b!126634 (= e!82704 (contains!878 (toList!858 lt!65444) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!38099 res!61255) b!126633))

(assert (= (and b!126633 res!61256) b!126634))

(declare-fun m!147677 () Bool)

(assert (=> d!38099 m!147677))

(declare-fun m!147679 () Bool)

(assert (=> d!38099 m!147679))

(declare-fun m!147681 () Bool)

(assert (=> d!38099 m!147681))

(declare-fun m!147683 () Bool)

(assert (=> d!38099 m!147683))

(declare-fun m!147685 () Bool)

(assert (=> b!126633 m!147685))

(declare-fun m!147687 () Bool)

(assert (=> b!126634 m!147687))

(assert (=> b!126305 d!38099))

(declare-fun d!38101 () Bool)

(declare-fun e!82706 () Bool)

(assert (=> d!38101 e!82706))

(declare-fun res!61257 () Bool)

(assert (=> d!38101 (=> res!61257 e!82706)))

(declare-fun lt!65448 () Bool)

(assert (=> d!38101 (= res!61257 (not lt!65448))))

(declare-fun lt!65447 () Bool)

(assert (=> d!38101 (= lt!65448 lt!65447)))

(declare-fun lt!65449 () Unit!3936)

(declare-fun e!82705 () Unit!3936)

(assert (=> d!38101 (= lt!65449 e!82705)))

(declare-fun c!23150 () Bool)

(assert (=> d!38101 (= c!23150 lt!65447)))

(assert (=> d!38101 (= lt!65447 (containsKey!170 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38101 (= (contains!877 lt!65101 #b1000000000000000000000000000000000000000000000000000000000000000) lt!65448)))

(declare-fun b!126635 () Bool)

(declare-fun lt!65450 () Unit!3936)

(assert (=> b!126635 (= e!82705 lt!65450)))

(assert (=> b!126635 (= lt!65450 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!126635 (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126636 () Bool)

(declare-fun Unit!3950 () Unit!3936)

(assert (=> b!126636 (= e!82705 Unit!3950)))

(declare-fun b!126637 () Bool)

(assert (=> b!126637 (= e!82706 (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38101 c!23150) b!126635))

(assert (= (and d!38101 (not c!23150)) b!126636))

(assert (= (and d!38101 (not res!61257)) b!126637))

(declare-fun m!147689 () Bool)

(assert (=> d!38101 m!147689))

(declare-fun m!147691 () Bool)

(assert (=> b!126635 m!147691))

(assert (=> b!126635 m!147463))

(assert (=> b!126635 m!147463))

(declare-fun m!147693 () Bool)

(assert (=> b!126635 m!147693))

(assert (=> b!126637 m!147463))

(assert (=> b!126637 m!147463))

(assert (=> b!126637 m!147693))

(assert (=> bm!13533 d!38101))

(declare-fun bm!13645 () Bool)

(declare-fun call!13652 () ListLongMap!1685)

(declare-fun call!13650 () ListLongMap!1685)

(assert (=> bm!13645 (= call!13652 call!13650)))

(declare-fun bm!13646 () Bool)

(declare-fun call!13648 () ListLongMap!1685)

(declare-fun call!13649 () ListLongMap!1685)

(assert (=> bm!13646 (= call!13648 call!13649)))

(declare-fun b!126638 () Bool)

(declare-fun e!82714 () Unit!3936)

(declare-fun lt!65471 () Unit!3936)

(assert (=> b!126638 (= e!82714 lt!65471)))

(declare-fun lt!65472 () ListLongMap!1685)

(assert (=> b!126638 (= lt!65472 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65461 () (_ BitVec 64))

(assert (=> b!126638 (= lt!65461 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65452 () (_ BitVec 64))

(assert (=> b!126638 (= lt!65452 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65468 () Unit!3936)

(assert (=> b!126638 (= lt!65468 (addStillContains!87 lt!65472 lt!65461 (zeroValue!2646 newMap!16) lt!65452))))

(assert (=> b!126638 (contains!877 (+!165 lt!65472 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16))) lt!65452)))

(declare-fun lt!65456 () Unit!3936)

(assert (=> b!126638 (= lt!65456 lt!65468)))

(declare-fun lt!65465 () ListLongMap!1685)

(assert (=> b!126638 (= lt!65465 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65470 () (_ BitVec 64))

(assert (=> b!126638 (= lt!65470 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65458 () (_ BitVec 64))

(assert (=> b!126638 (= lt!65458 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65463 () Unit!3936)

(assert (=> b!126638 (= lt!65463 (addApplyDifferent!87 lt!65465 lt!65470 (minValue!2646 newMap!16) lt!65458))))

(assert (=> b!126638 (= (apply!111 (+!165 lt!65465 (tuple2!2569 lt!65470 (minValue!2646 newMap!16))) lt!65458) (apply!111 lt!65465 lt!65458))))

(declare-fun lt!65466 () Unit!3936)

(assert (=> b!126638 (= lt!65466 lt!65463)))

(declare-fun lt!65464 () ListLongMap!1685)

(assert (=> b!126638 (= lt!65464 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65459 () (_ BitVec 64))

(assert (=> b!126638 (= lt!65459 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65454 () (_ BitVec 64))

(assert (=> b!126638 (= lt!65454 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65457 () Unit!3936)

(assert (=> b!126638 (= lt!65457 (addApplyDifferent!87 lt!65464 lt!65459 (zeroValue!2646 newMap!16) lt!65454))))

(assert (=> b!126638 (= (apply!111 (+!165 lt!65464 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16))) lt!65454) (apply!111 lt!65464 lt!65454))))

(declare-fun lt!65460 () Unit!3936)

(assert (=> b!126638 (= lt!65460 lt!65457)))

(declare-fun lt!65467 () ListLongMap!1685)

(assert (=> b!126638 (= lt!65467 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65469 () (_ BitVec 64))

(assert (=> b!126638 (= lt!65469 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65462 () (_ BitVec 64))

(assert (=> b!126638 (= lt!65462 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!126638 (= lt!65471 (addApplyDifferent!87 lt!65467 lt!65469 (minValue!2646 newMap!16) lt!65462))))

(assert (=> b!126638 (= (apply!111 (+!165 lt!65467 (tuple2!2569 lt!65469 (minValue!2646 newMap!16))) lt!65462) (apply!111 lt!65467 lt!65462))))

(declare-fun call!13653 () ListLongMap!1685)

(declare-fun bm!13647 () Bool)

(declare-fun c!23152 () Bool)

(declare-fun c!23155 () Bool)

(assert (=> bm!13647 (= call!13649 (+!165 (ite c!23152 call!13653 (ite c!23155 call!13650 call!13652)) (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(declare-fun b!126639 () Bool)

(declare-fun Unit!3951 () Unit!3936)

(assert (=> b!126639 (= e!82714 Unit!3951)))

(declare-fun bm!13648 () Bool)

(assert (=> bm!13648 (= call!13653 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun b!126640 () Bool)

(declare-fun res!61259 () Bool)

(declare-fun e!82717 () Bool)

(assert (=> b!126640 (=> (not res!61259) (not e!82717))))

(declare-fun e!82719 () Bool)

(assert (=> b!126640 (= res!61259 e!82719)))

(declare-fun c!23153 () Bool)

(assert (=> b!126640 (= c!23153 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!126641 () Bool)

(declare-fun e!82711 () Bool)

(declare-fun lt!65453 () ListLongMap!1685)

(assert (=> b!126641 (= e!82711 (= (apply!111 lt!65453 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2646 newMap!16)))))

(declare-fun bm!13649 () Bool)

(declare-fun call!13647 () Bool)

(assert (=> bm!13649 (= call!13647 (contains!877 lt!65453 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126642 () Bool)

(declare-fun e!82708 () ListLongMap!1685)

(assert (=> b!126642 (= e!82708 call!13648)))

(declare-fun b!126643 () Bool)

(declare-fun e!82716 () Bool)

(declare-fun e!82709 () Bool)

(assert (=> b!126643 (= e!82716 e!82709)))

(declare-fun res!61264 () Bool)

(assert (=> b!126643 (=> (not res!61264) (not e!82709))))

(assert (=> b!126643 (= res!61264 (contains!877 lt!65453 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!126643 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126644 () Bool)

(declare-fun c!23156 () Bool)

(assert (=> b!126644 (= c!23156 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!82710 () ListLongMap!1685)

(assert (=> b!126644 (= e!82708 e!82710)))

(declare-fun bm!13644 () Bool)

(declare-fun call!13651 () Bool)

(assert (=> bm!13644 (= call!13651 (contains!877 lt!65453 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!38103 () Bool)

(assert (=> d!38103 e!82717))

(declare-fun res!61263 () Bool)

(assert (=> d!38103 (=> (not res!61263) (not e!82717))))

(assert (=> d!38103 (= res!61263 (or (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))))

(declare-fun lt!65451 () ListLongMap!1685)

(assert (=> d!38103 (= lt!65453 lt!65451)))

(declare-fun lt!65455 () Unit!3936)

(assert (=> d!38103 (= lt!65455 e!82714)))

(declare-fun c!23151 () Bool)

(declare-fun e!82713 () Bool)

(assert (=> d!38103 (= c!23151 e!82713)))

(declare-fun res!61266 () Bool)

(assert (=> d!38103 (=> (not res!61266) (not e!82713))))

(assert (=> d!38103 (= res!61266 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun e!82718 () ListLongMap!1685)

(assert (=> d!38103 (= lt!65451 e!82718)))

(assert (=> d!38103 (= c!23152 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!38103 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38103 (= (getCurrentListMap!530 (_keys!4516 newMap!16) (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65453)))

(declare-fun b!126645 () Bool)

(declare-fun e!82712 () Bool)

(assert (=> b!126645 (= e!82712 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126646 () Bool)

(assert (=> b!126646 (= e!82709 (= (apply!111 lt!65453 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!126646 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207))))))

(assert (=> b!126646 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126647 () Bool)

(assert (=> b!126647 (= e!82719 (not call!13651))))

(declare-fun b!126648 () Bool)

(assert (=> b!126648 (= e!82710 call!13652)))

(declare-fun b!126649 () Bool)

(assert (=> b!126649 (= e!82719 e!82711)))

(declare-fun res!61258 () Bool)

(assert (=> b!126649 (= res!61258 call!13651)))

(assert (=> b!126649 (=> (not res!61258) (not e!82711))))

(declare-fun b!126650 () Bool)

(assert (=> b!126650 (= e!82710 call!13648)))

(declare-fun b!126651 () Bool)

(declare-fun e!82715 () Bool)

(declare-fun e!82707 () Bool)

(assert (=> b!126651 (= e!82715 e!82707)))

(declare-fun res!61262 () Bool)

(assert (=> b!126651 (= res!61262 call!13647)))

(assert (=> b!126651 (=> (not res!61262) (not e!82707))))

(declare-fun b!126652 () Bool)

(assert (=> b!126652 (= e!82717 e!82715)))

(declare-fun c!23154 () Bool)

(assert (=> b!126652 (= c!23154 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126653 () Bool)

(assert (=> b!126653 (= e!82718 e!82708)))

(assert (=> b!126653 (= c!23155 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126654 () Bool)

(assert (=> b!126654 (= e!82713 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126655 () Bool)

(declare-fun res!61265 () Bool)

(assert (=> b!126655 (=> (not res!61265) (not e!82717))))

(assert (=> b!126655 (= res!61265 e!82716)))

(declare-fun res!61260 () Bool)

(assert (=> b!126655 (=> res!61260 e!82716)))

(assert (=> b!126655 (= res!61260 (not e!82712))))

(declare-fun res!61261 () Bool)

(assert (=> b!126655 (=> (not res!61261) (not e!82712))))

(assert (=> b!126655 (= res!61261 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun bm!13650 () Bool)

(assert (=> bm!13650 (= call!13650 call!13653)))

(declare-fun b!126656 () Bool)

(assert (=> b!126656 (= e!82718 (+!165 call!13649 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))

(declare-fun b!126657 () Bool)

(assert (=> b!126657 (= e!82707 (= (apply!111 lt!65453 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2646 newMap!16)))))

(declare-fun b!126658 () Bool)

(assert (=> b!126658 (= e!82715 (not call!13647))))

(assert (= (and d!38103 c!23152) b!126656))

(assert (= (and d!38103 (not c!23152)) b!126653))

(assert (= (and b!126653 c!23155) b!126642))

(assert (= (and b!126653 (not c!23155)) b!126644))

(assert (= (and b!126644 c!23156) b!126650))

(assert (= (and b!126644 (not c!23156)) b!126648))

(assert (= (or b!126650 b!126648) bm!13645))

(assert (= (or b!126642 bm!13645) bm!13650))

(assert (= (or b!126642 b!126650) bm!13646))

(assert (= (or b!126656 bm!13650) bm!13648))

(assert (= (or b!126656 bm!13646) bm!13647))

(assert (= (and d!38103 res!61266) b!126654))

(assert (= (and d!38103 c!23151) b!126638))

(assert (= (and d!38103 (not c!23151)) b!126639))

(assert (= (and d!38103 res!61263) b!126655))

(assert (= (and b!126655 res!61261) b!126645))

(assert (= (and b!126655 (not res!61260)) b!126643))

(assert (= (and b!126643 res!61264) b!126646))

(assert (= (and b!126655 res!61265) b!126640))

(assert (= (and b!126640 c!23153) b!126649))

(assert (= (and b!126640 (not c!23153)) b!126647))

(assert (= (and b!126649 res!61258) b!126641))

(assert (= (or b!126649 b!126647) bm!13644))

(assert (= (and b!126640 res!61259) b!126652))

(assert (= (and b!126652 c!23154) b!126651))

(assert (= (and b!126652 (not c!23154)) b!126658))

(assert (= (and b!126651 res!61262) b!126657))

(assert (= (or b!126651 b!126658) bm!13649))

(declare-fun b_lambda!5595 () Bool)

(assert (=> (not b_lambda!5595) (not b!126646)))

(assert (=> b!126646 t!6085))

(declare-fun b_and!7805 () Bool)

(assert (= b_and!7801 (and (=> t!6085 result!3859) b_and!7805)))

(assert (=> b!126646 t!6087))

(declare-fun b_and!7807 () Bool)

(assert (= b_and!7803 (and (=> t!6087 result!3861) b_and!7807)))

(declare-fun m!147695 () Bool)

(assert (=> bm!13647 m!147695))

(declare-fun m!147697 () Bool)

(assert (=> bm!13648 m!147697))

(assert (=> b!126654 m!147467))

(assert (=> b!126654 m!147467))

(assert (=> b!126654 m!147495))

(assert (=> d!38103 m!147475))

(declare-fun m!147699 () Bool)

(assert (=> bm!13644 m!147699))

(declare-fun m!147701 () Bool)

(assert (=> bm!13649 m!147701))

(declare-fun m!147703 () Bool)

(assert (=> b!126656 m!147703))

(declare-fun m!147705 () Bool)

(assert (=> b!126641 m!147705))

(declare-fun m!147707 () Bool)

(assert (=> b!126638 m!147707))

(declare-fun m!147709 () Bool)

(assert (=> b!126638 m!147709))

(declare-fun m!147711 () Bool)

(assert (=> b!126638 m!147711))

(declare-fun m!147713 () Bool)

(assert (=> b!126638 m!147713))

(declare-fun m!147715 () Bool)

(assert (=> b!126638 m!147715))

(declare-fun m!147717 () Bool)

(assert (=> b!126638 m!147717))

(assert (=> b!126638 m!147697))

(declare-fun m!147719 () Bool)

(assert (=> b!126638 m!147719))

(declare-fun m!147721 () Bool)

(assert (=> b!126638 m!147721))

(declare-fun m!147723 () Bool)

(assert (=> b!126638 m!147723))

(assert (=> b!126638 m!147715))

(declare-fun m!147725 () Bool)

(assert (=> b!126638 m!147725))

(assert (=> b!126638 m!147713))

(declare-fun m!147727 () Bool)

(assert (=> b!126638 m!147727))

(declare-fun m!147729 () Bool)

(assert (=> b!126638 m!147729))

(assert (=> b!126638 m!147467))

(assert (=> b!126638 m!147719))

(declare-fun m!147731 () Bool)

(assert (=> b!126638 m!147731))

(declare-fun m!147733 () Bool)

(assert (=> b!126638 m!147733))

(declare-fun m!147735 () Bool)

(assert (=> b!126638 m!147735))

(assert (=> b!126638 m!147733))

(assert (=> b!126645 m!147467))

(assert (=> b!126645 m!147467))

(assert (=> b!126645 m!147495))

(declare-fun m!147737 () Bool)

(assert (=> b!126646 m!147737))

(assert (=> b!126646 m!147581))

(declare-fun m!147739 () Bool)

(assert (=> b!126646 m!147739))

(assert (=> b!126646 m!147737))

(assert (=> b!126646 m!147467))

(declare-fun m!147741 () Bool)

(assert (=> b!126646 m!147741))

(assert (=> b!126646 m!147581))

(assert (=> b!126646 m!147467))

(assert (=> b!126643 m!147467))

(assert (=> b!126643 m!147467))

(declare-fun m!147743 () Bool)

(assert (=> b!126643 m!147743))

(declare-fun m!147745 () Bool)

(assert (=> b!126657 m!147745))

(assert (=> bm!13598 d!38103))

(declare-fun d!38105 () Bool)

(declare-fun e!82721 () Bool)

(assert (=> d!38105 e!82721))

(declare-fun res!61267 () Bool)

(assert (=> d!38105 (=> res!61267 e!82721)))

(declare-fun lt!65474 () Bool)

(assert (=> d!38105 (= res!61267 (not lt!65474))))

(declare-fun lt!65473 () Bool)

(assert (=> d!38105 (= lt!65474 lt!65473)))

(declare-fun lt!65475 () Unit!3936)

(declare-fun e!82720 () Unit!3936)

(assert (=> d!38105 (= lt!65475 e!82720)))

(declare-fun c!23157 () Bool)

(assert (=> d!38105 (= c!23157 lt!65473)))

(assert (=> d!38105 (= lt!65473 (containsKey!170 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> d!38105 (= (contains!877 call!13598 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) lt!65474)))

(declare-fun b!126659 () Bool)

(declare-fun lt!65476 () Unit!3936)

(assert (=> b!126659 (= e!82720 lt!65476)))

(assert (=> b!126659 (= lt!65476 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> b!126659 (isDefined!120 (getValueByKey!166 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!126660 () Bool)

(declare-fun Unit!3952 () Unit!3936)

(assert (=> b!126660 (= e!82720 Unit!3952)))

(declare-fun b!126661 () Bool)

(assert (=> b!126661 (= e!82721 (isDefined!120 (getValueByKey!166 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(assert (= (and d!38105 c!23157) b!126659))

(assert (= (and d!38105 (not c!23157)) b!126660))

(assert (= (and d!38105 (not res!61267)) b!126661))

(assert (=> d!38105 m!147095))

(declare-fun m!147747 () Bool)

(assert (=> d!38105 m!147747))

(assert (=> b!126659 m!147095))

(declare-fun m!147749 () Bool)

(assert (=> b!126659 m!147749))

(assert (=> b!126659 m!147095))

(declare-fun m!147751 () Bool)

(assert (=> b!126659 m!147751))

(assert (=> b!126659 m!147751))

(declare-fun m!147753 () Bool)

(assert (=> b!126659 m!147753))

(assert (=> b!126661 m!147095))

(assert (=> b!126661 m!147751))

(assert (=> b!126661 m!147751))

(assert (=> b!126661 m!147753))

(assert (=> b!126318 d!38105))

(declare-fun d!38107 () Bool)

(declare-fun e!82724 () Bool)

(assert (=> d!38107 e!82724))

(declare-fun res!61272 () Bool)

(assert (=> d!38107 (=> (not res!61272) (not e!82724))))

(declare-fun lt!65482 () SeekEntryResult!280)

(assert (=> d!38107 (= res!61272 ((_ is Found!280) lt!65482))))

(assert (=> d!38107 (= lt!65482 (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(declare-fun lt!65481 () Unit!3936)

(declare-fun choose!774 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 64) Int) Unit!3936)

(assert (=> d!38107 (= lt!65481 (choose!774 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (defaultEntry!2783 newMap!16)))))

(assert (=> d!38107 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38107 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (defaultEntry!2783 newMap!16)) lt!65481)))

(declare-fun b!126666 () Bool)

(declare-fun res!61273 () Bool)

(assert (=> b!126666 (=> (not res!61273) (not e!82724))))

(assert (=> b!126666 (= res!61273 (inRange!0 (index!3276 lt!65482) (mask!7039 newMap!16)))))

(declare-fun b!126667 () Bool)

(assert (=> b!126667 (= e!82724 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65482)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> b!126667 (and (bvsge (index!3276 lt!65482) #b00000000000000000000000000000000) (bvslt (index!3276 lt!65482) (size!2488 (_keys!4516 newMap!16))))))

(assert (= (and d!38107 res!61272) b!126666))

(assert (= (and b!126666 res!61273) b!126667))

(assert (=> d!38107 m!147095))

(assert (=> d!38107 m!147245))

(assert (=> d!38107 m!147095))

(declare-fun m!147755 () Bool)

(assert (=> d!38107 m!147755))

(assert (=> d!38107 m!147475))

(declare-fun m!147757 () Bool)

(assert (=> b!126666 m!147757))

(declare-fun m!147759 () Bool)

(assert (=> b!126667 m!147759))

(assert (=> bm!13590 d!38107))

(declare-fun bm!13652 () Bool)

(declare-fun call!13659 () ListLongMap!1685)

(declare-fun call!13657 () ListLongMap!1685)

(assert (=> bm!13652 (= call!13659 call!13657)))

(declare-fun bm!13653 () Bool)

(declare-fun call!13655 () ListLongMap!1685)

(declare-fun call!13656 () ListLongMap!1685)

(assert (=> bm!13653 (= call!13655 call!13656)))

(declare-fun b!126668 () Bool)

(declare-fun e!82732 () Unit!3936)

(declare-fun lt!65503 () Unit!3936)

(assert (=> b!126668 (= e!82732 lt!65503)))

(declare-fun lt!65504 () ListLongMap!1685)

(assert (=> b!126668 (= lt!65504 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65493 () (_ BitVec 64))

(assert (=> b!126668 (= lt!65493 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65484 () (_ BitVec 64))

(assert (=> b!126668 (= lt!65484 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65500 () Unit!3936)

(assert (=> b!126668 (= lt!65500 (addStillContains!87 lt!65504 lt!65493 (zeroValue!2646 newMap!16) lt!65484))))

(assert (=> b!126668 (contains!877 (+!165 lt!65504 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16))) lt!65484)))

(declare-fun lt!65488 () Unit!3936)

(assert (=> b!126668 (= lt!65488 lt!65500)))

(declare-fun lt!65497 () ListLongMap!1685)

(assert (=> b!126668 (= lt!65497 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65502 () (_ BitVec 64))

(assert (=> b!126668 (= lt!65502 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65490 () (_ BitVec 64))

(assert (=> b!126668 (= lt!65490 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65495 () Unit!3936)

(assert (=> b!126668 (= lt!65495 (addApplyDifferent!87 lt!65497 lt!65502 (minValue!2646 newMap!16) lt!65490))))

(assert (=> b!126668 (= (apply!111 (+!165 lt!65497 (tuple2!2569 lt!65502 (minValue!2646 newMap!16))) lt!65490) (apply!111 lt!65497 lt!65490))))

(declare-fun lt!65498 () Unit!3936)

(assert (=> b!126668 (= lt!65498 lt!65495)))

(declare-fun lt!65496 () ListLongMap!1685)

(assert (=> b!126668 (= lt!65496 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65491 () (_ BitVec 64))

(assert (=> b!126668 (= lt!65491 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65486 () (_ BitVec 64))

(assert (=> b!126668 (= lt!65486 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65489 () Unit!3936)

(assert (=> b!126668 (= lt!65489 (addApplyDifferent!87 lt!65496 lt!65491 (zeroValue!2646 newMap!16) lt!65486))))

(assert (=> b!126668 (= (apply!111 (+!165 lt!65496 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16))) lt!65486) (apply!111 lt!65496 lt!65486))))

(declare-fun lt!65492 () Unit!3936)

(assert (=> b!126668 (= lt!65492 lt!65489)))

(declare-fun lt!65499 () ListLongMap!1685)

(assert (=> b!126668 (= lt!65499 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65501 () (_ BitVec 64))

(assert (=> b!126668 (= lt!65501 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65494 () (_ BitVec 64))

(assert (=> b!126668 (= lt!65494 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!126668 (= lt!65503 (addApplyDifferent!87 lt!65499 lt!65501 (minValue!2646 newMap!16) lt!65494))))

(assert (=> b!126668 (= (apply!111 (+!165 lt!65499 (tuple2!2569 lt!65501 (minValue!2646 newMap!16))) lt!65494) (apply!111 lt!65499 lt!65494))))

(declare-fun call!13660 () ListLongMap!1685)

(declare-fun c!23159 () Bool)

(declare-fun bm!13654 () Bool)

(declare-fun c!23162 () Bool)

(assert (=> bm!13654 (= call!13656 (+!165 (ite c!23159 call!13660 (ite c!23162 call!13657 call!13659)) (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(declare-fun b!126669 () Bool)

(declare-fun Unit!3953 () Unit!3936)

(assert (=> b!126669 (= e!82732 Unit!3953)))

(declare-fun bm!13655 () Bool)

(assert (=> bm!13655 (= call!13660 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun b!126670 () Bool)

(declare-fun res!61275 () Bool)

(declare-fun e!82735 () Bool)

(assert (=> b!126670 (=> (not res!61275) (not e!82735))))

(declare-fun e!82737 () Bool)

(assert (=> b!126670 (= res!61275 e!82737)))

(declare-fun c!23160 () Bool)

(assert (=> b!126670 (= c!23160 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!126671 () Bool)

(declare-fun e!82729 () Bool)

(declare-fun lt!65485 () ListLongMap!1685)

(assert (=> b!126671 (= e!82729 (= (apply!111 lt!65485 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2646 newMap!16)))))

(declare-fun bm!13656 () Bool)

(declare-fun call!13654 () Bool)

(assert (=> bm!13656 (= call!13654 (contains!877 lt!65485 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126672 () Bool)

(declare-fun e!82726 () ListLongMap!1685)

(assert (=> b!126672 (= e!82726 call!13655)))

(declare-fun b!126673 () Bool)

(declare-fun e!82734 () Bool)

(declare-fun e!82727 () Bool)

(assert (=> b!126673 (= e!82734 e!82727)))

(declare-fun res!61280 () Bool)

(assert (=> b!126673 (=> (not res!61280) (not e!82727))))

(assert (=> b!126673 (= res!61280 (contains!877 lt!65485 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!126673 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126674 () Bool)

(declare-fun c!23163 () Bool)

(assert (=> b!126674 (= c!23163 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!82728 () ListLongMap!1685)

(assert (=> b!126674 (= e!82726 e!82728)))

(declare-fun bm!13651 () Bool)

(declare-fun call!13658 () Bool)

(assert (=> bm!13651 (= call!13658 (contains!877 lt!65485 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!38109 () Bool)

(assert (=> d!38109 e!82735))

(declare-fun res!61279 () Bool)

(assert (=> d!38109 (=> (not res!61279) (not e!82735))))

(assert (=> d!38109 (= res!61279 (or (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))))

(declare-fun lt!65483 () ListLongMap!1685)

(assert (=> d!38109 (= lt!65485 lt!65483)))

(declare-fun lt!65487 () Unit!3936)

(assert (=> d!38109 (= lt!65487 e!82732)))

(declare-fun c!23158 () Bool)

(declare-fun e!82731 () Bool)

(assert (=> d!38109 (= c!23158 e!82731)))

(declare-fun res!61282 () Bool)

(assert (=> d!38109 (=> (not res!61282) (not e!82731))))

(assert (=> d!38109 (= res!61282 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun e!82736 () ListLongMap!1685)

(assert (=> d!38109 (= lt!65483 e!82736)))

(assert (=> d!38109 (= c!23159 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!38109 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38109 (= (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65485)))

(declare-fun b!126675 () Bool)

(declare-fun e!82730 () Bool)

(assert (=> b!126675 (= e!82730 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126676 () Bool)

(assert (=> b!126676 (= e!82727 (= (apply!111 lt!65485 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!126676 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (_values!2766 newMap!16))))))

(assert (=> b!126676 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126677 () Bool)

(assert (=> b!126677 (= e!82737 (not call!13658))))

(declare-fun b!126678 () Bool)

(assert (=> b!126678 (= e!82728 call!13659)))

(declare-fun b!126679 () Bool)

(assert (=> b!126679 (= e!82737 e!82729)))

(declare-fun res!61274 () Bool)

(assert (=> b!126679 (= res!61274 call!13658)))

(assert (=> b!126679 (=> (not res!61274) (not e!82729))))

(declare-fun b!126680 () Bool)

(assert (=> b!126680 (= e!82728 call!13655)))

(declare-fun b!126681 () Bool)

(declare-fun e!82733 () Bool)

(declare-fun e!82725 () Bool)

(assert (=> b!126681 (= e!82733 e!82725)))

(declare-fun res!61278 () Bool)

(assert (=> b!126681 (= res!61278 call!13654)))

(assert (=> b!126681 (=> (not res!61278) (not e!82725))))

(declare-fun b!126682 () Bool)

(assert (=> b!126682 (= e!82735 e!82733)))

(declare-fun c!23161 () Bool)

(assert (=> b!126682 (= c!23161 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126683 () Bool)

(assert (=> b!126683 (= e!82736 e!82726)))

(assert (=> b!126683 (= c!23162 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126684 () Bool)

(assert (=> b!126684 (= e!82731 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126685 () Bool)

(declare-fun res!61281 () Bool)

(assert (=> b!126685 (=> (not res!61281) (not e!82735))))

(assert (=> b!126685 (= res!61281 e!82734)))

(declare-fun res!61276 () Bool)

(assert (=> b!126685 (=> res!61276 e!82734)))

(assert (=> b!126685 (= res!61276 (not e!82730))))

(declare-fun res!61277 () Bool)

(assert (=> b!126685 (=> (not res!61277) (not e!82730))))

(assert (=> b!126685 (= res!61277 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun bm!13657 () Bool)

(assert (=> bm!13657 (= call!13657 call!13660)))

(declare-fun b!126686 () Bool)

(assert (=> b!126686 (= e!82736 (+!165 call!13656 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))

(declare-fun b!126687 () Bool)

(assert (=> b!126687 (= e!82725 (= (apply!111 lt!65485 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2646 newMap!16)))))

(declare-fun b!126688 () Bool)

(assert (=> b!126688 (= e!82733 (not call!13654))))

(assert (= (and d!38109 c!23159) b!126686))

(assert (= (and d!38109 (not c!23159)) b!126683))

(assert (= (and b!126683 c!23162) b!126672))

(assert (= (and b!126683 (not c!23162)) b!126674))

(assert (= (and b!126674 c!23163) b!126680))

(assert (= (and b!126674 (not c!23163)) b!126678))

(assert (= (or b!126680 b!126678) bm!13652))

(assert (= (or b!126672 bm!13652) bm!13657))

(assert (= (or b!126672 b!126680) bm!13653))

(assert (= (or b!126686 bm!13657) bm!13655))

(assert (= (or b!126686 bm!13653) bm!13654))

(assert (= (and d!38109 res!61282) b!126684))

(assert (= (and d!38109 c!23158) b!126668))

(assert (= (and d!38109 (not c!23158)) b!126669))

(assert (= (and d!38109 res!61279) b!126685))

(assert (= (and b!126685 res!61277) b!126675))

(assert (= (and b!126685 (not res!61276)) b!126673))

(assert (= (and b!126673 res!61280) b!126676))

(assert (= (and b!126685 res!61281) b!126670))

(assert (= (and b!126670 c!23160) b!126679))

(assert (= (and b!126670 (not c!23160)) b!126677))

(assert (= (and b!126679 res!61274) b!126671))

(assert (= (or b!126679 b!126677) bm!13651))

(assert (= (and b!126670 res!61275) b!126682))

(assert (= (and b!126682 c!23161) b!126681))

(assert (= (and b!126682 (not c!23161)) b!126688))

(assert (= (and b!126681 res!61278) b!126687))

(assert (= (or b!126681 b!126688) bm!13656))

(declare-fun b_lambda!5597 () Bool)

(assert (=> (not b_lambda!5597) (not b!126676)))

(assert (=> b!126676 t!6085))

(declare-fun b_and!7809 () Bool)

(assert (= b_and!7805 (and (=> t!6085 result!3859) b_and!7809)))

(assert (=> b!126676 t!6087))

(declare-fun b_and!7811 () Bool)

(assert (= b_and!7807 (and (=> t!6087 result!3861) b_and!7811)))

(declare-fun m!147761 () Bool)

(assert (=> bm!13654 m!147761))

(declare-fun m!147763 () Bool)

(assert (=> bm!13655 m!147763))

(assert (=> b!126684 m!147467))

(assert (=> b!126684 m!147467))

(assert (=> b!126684 m!147495))

(assert (=> d!38109 m!147475))

(declare-fun m!147765 () Bool)

(assert (=> bm!13651 m!147765))

(declare-fun m!147767 () Bool)

(assert (=> bm!13656 m!147767))

(declare-fun m!147769 () Bool)

(assert (=> b!126686 m!147769))

(declare-fun m!147771 () Bool)

(assert (=> b!126671 m!147771))

(declare-fun m!147773 () Bool)

(assert (=> b!126668 m!147773))

(declare-fun m!147775 () Bool)

(assert (=> b!126668 m!147775))

(declare-fun m!147777 () Bool)

(assert (=> b!126668 m!147777))

(declare-fun m!147779 () Bool)

(assert (=> b!126668 m!147779))

(declare-fun m!147781 () Bool)

(assert (=> b!126668 m!147781))

(declare-fun m!147783 () Bool)

(assert (=> b!126668 m!147783))

(assert (=> b!126668 m!147763))

(declare-fun m!147785 () Bool)

(assert (=> b!126668 m!147785))

(declare-fun m!147787 () Bool)

(assert (=> b!126668 m!147787))

(declare-fun m!147789 () Bool)

(assert (=> b!126668 m!147789))

(assert (=> b!126668 m!147781))

(declare-fun m!147791 () Bool)

(assert (=> b!126668 m!147791))

(assert (=> b!126668 m!147779))

(declare-fun m!147793 () Bool)

(assert (=> b!126668 m!147793))

(declare-fun m!147795 () Bool)

(assert (=> b!126668 m!147795))

(assert (=> b!126668 m!147467))

(assert (=> b!126668 m!147785))

(declare-fun m!147797 () Bool)

(assert (=> b!126668 m!147797))

(declare-fun m!147799 () Bool)

(assert (=> b!126668 m!147799))

(declare-fun m!147801 () Bool)

(assert (=> b!126668 m!147801))

(assert (=> b!126668 m!147799))

(assert (=> b!126675 m!147467))

(assert (=> b!126675 m!147467))

(assert (=> b!126675 m!147495))

(assert (=> b!126676 m!147579))

(assert (=> b!126676 m!147581))

(assert (=> b!126676 m!147583))

(assert (=> b!126676 m!147579))

(assert (=> b!126676 m!147467))

(declare-fun m!147803 () Bool)

(assert (=> b!126676 m!147803))

(assert (=> b!126676 m!147581))

(assert (=> b!126676 m!147467))

(assert (=> b!126673 m!147467))

(assert (=> b!126673 m!147467))

(declare-fun m!147805 () Bool)

(assert (=> b!126673 m!147805))

(declare-fun m!147807 () Bool)

(assert (=> b!126687 m!147807))

(assert (=> d!37985 d!38109))

(declare-fun d!38111 () Bool)

(declare-fun e!82739 () Bool)

(assert (=> d!38111 e!82739))

(declare-fun res!61283 () Bool)

(assert (=> d!38111 (=> res!61283 e!82739)))

(declare-fun lt!65506 () Bool)

(assert (=> d!38111 (= res!61283 (not lt!65506))))

(declare-fun lt!65505 () Bool)

(assert (=> d!38111 (= lt!65506 lt!65505)))

(declare-fun lt!65507 () Unit!3936)

(declare-fun e!82738 () Unit!3936)

(assert (=> d!38111 (= lt!65507 e!82738)))

(declare-fun c!23164 () Bool)

(assert (=> d!38111 (= c!23164 lt!65505)))

(assert (=> d!38111 (= lt!65505 (containsKey!170 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(assert (=> d!38111 (= (contains!877 call!13595 (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))) lt!65506)))

(declare-fun b!126689 () Bool)

(declare-fun lt!65508 () Unit!3936)

(assert (=> b!126689 (= e!82738 lt!65508)))

(assert (=> b!126689 (= lt!65508 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(assert (=> b!126689 (isDefined!120 (getValueByKey!166 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(declare-fun b!126690 () Bool)

(declare-fun Unit!3954 () Unit!3936)

(assert (=> b!126690 (= e!82738 Unit!3954)))

(declare-fun b!126691 () Bool)

(assert (=> b!126691 (= e!82739 (isDefined!120 (getValueByKey!166 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194)))))))

(assert (= (and d!38111 c!23164) b!126689))

(assert (= (and d!38111 (not c!23164)) b!126690))

(assert (= (and d!38111 (not res!61283)) b!126691))

(assert (=> d!38111 m!147229))

(declare-fun m!147809 () Bool)

(assert (=> d!38111 m!147809))

(assert (=> b!126689 m!147229))

(declare-fun m!147811 () Bool)

(assert (=> b!126689 m!147811))

(assert (=> b!126689 m!147229))

(declare-fun m!147813 () Bool)

(assert (=> b!126689 m!147813))

(assert (=> b!126689 m!147813))

(declare-fun m!147815 () Bool)

(assert (=> b!126689 m!147815))

(assert (=> b!126691 m!147229))

(assert (=> b!126691 m!147813))

(assert (=> b!126691 m!147813))

(assert (=> b!126691 m!147815))

(assert (=> b!126331 d!38111))

(declare-fun d!38113 () Bool)

(declare-fun e!82742 () Bool)

(assert (=> d!38113 e!82742))

(declare-fun res!61286 () Bool)

(assert (=> d!38113 (=> (not res!61286) (not e!82742))))

(assert (=> d!38113 (= res!61286 (and (bvsge (index!3276 lt!65194) #b00000000000000000000000000000000) (bvslt (index!3276 lt!65194) (size!2488 (_keys!4516 newMap!16)))))))

(declare-fun lt!65511 () Unit!3936)

(declare-fun choose!775 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 32) Int) Unit!3936)

(assert (=> d!38113 (= lt!65511 (choose!775 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (index!3276 lt!65194) (defaultEntry!2783 newMap!16)))))

(assert (=> d!38113 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38113 (= (lemmaValidKeyInArrayIsInListMap!114 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (index!3276 lt!65194) (defaultEntry!2783 newMap!16)) lt!65511)))

(declare-fun b!126694 () Bool)

(assert (=> b!126694 (= e!82742 (contains!877 (getCurrentListMap!530 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(assert (= (and d!38113 res!61286) b!126694))

(declare-fun m!147817 () Bool)

(assert (=> d!38113 m!147817))

(assert (=> d!38113 m!147475))

(declare-fun m!147819 () Bool)

(assert (=> b!126694 m!147819))

(assert (=> b!126694 m!147229))

(assert (=> b!126694 m!147819))

(assert (=> b!126694 m!147229))

(declare-fun m!147821 () Bool)

(assert (=> b!126694 m!147821))

(assert (=> b!126331 d!38113))

(declare-fun bm!13659 () Bool)

(declare-fun call!13666 () ListLongMap!1685)

(declare-fun call!13664 () ListLongMap!1685)

(assert (=> bm!13659 (= call!13666 call!13664)))

(declare-fun bm!13660 () Bool)

(declare-fun call!13662 () ListLongMap!1685)

(declare-fun call!13663 () ListLongMap!1685)

(assert (=> bm!13660 (= call!13662 call!13663)))

(declare-fun b!126695 () Bool)

(declare-fun e!82750 () Unit!3936)

(declare-fun lt!65532 () Unit!3936)

(assert (=> b!126695 (= e!82750 lt!65532)))

(declare-fun lt!65533 () ListLongMap!1685)

(assert (=> b!126695 (= lt!65533 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65522 () (_ BitVec 64))

(assert (=> b!126695 (= lt!65522 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65513 () (_ BitVec 64))

(assert (=> b!126695 (= lt!65513 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65529 () Unit!3936)

(assert (=> b!126695 (= lt!65529 (addStillContains!87 lt!65533 lt!65522 (zeroValue!2646 newMap!16) lt!65513))))

(assert (=> b!126695 (contains!877 (+!165 lt!65533 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16))) lt!65513)))

(declare-fun lt!65517 () Unit!3936)

(assert (=> b!126695 (= lt!65517 lt!65529)))

(declare-fun lt!65526 () ListLongMap!1685)

(assert (=> b!126695 (= lt!65526 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65531 () (_ BitVec 64))

(assert (=> b!126695 (= lt!65531 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65519 () (_ BitVec 64))

(assert (=> b!126695 (= lt!65519 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65524 () Unit!3936)

(assert (=> b!126695 (= lt!65524 (addApplyDifferent!87 lt!65526 lt!65531 (minValue!2646 newMap!16) lt!65519))))

(assert (=> b!126695 (= (apply!111 (+!165 lt!65526 (tuple2!2569 lt!65531 (minValue!2646 newMap!16))) lt!65519) (apply!111 lt!65526 lt!65519))))

(declare-fun lt!65527 () Unit!3936)

(assert (=> b!126695 (= lt!65527 lt!65524)))

(declare-fun lt!65525 () ListLongMap!1685)

(assert (=> b!126695 (= lt!65525 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65520 () (_ BitVec 64))

(assert (=> b!126695 (= lt!65520 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65515 () (_ BitVec 64))

(assert (=> b!126695 (= lt!65515 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65518 () Unit!3936)

(assert (=> b!126695 (= lt!65518 (addApplyDifferent!87 lt!65525 lt!65520 (zeroValue!2646 newMap!16) lt!65515))))

(assert (=> b!126695 (= (apply!111 (+!165 lt!65525 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16))) lt!65515) (apply!111 lt!65525 lt!65515))))

(declare-fun lt!65521 () Unit!3936)

(assert (=> b!126695 (= lt!65521 lt!65518)))

(declare-fun lt!65528 () ListLongMap!1685)

(assert (=> b!126695 (= lt!65528 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65530 () (_ BitVec 64))

(assert (=> b!126695 (= lt!65530 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65523 () (_ BitVec 64))

(assert (=> b!126695 (= lt!65523 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!126695 (= lt!65532 (addApplyDifferent!87 lt!65528 lt!65530 (minValue!2646 newMap!16) lt!65523))))

(assert (=> b!126695 (= (apply!111 (+!165 lt!65528 (tuple2!2569 lt!65530 (minValue!2646 newMap!16))) lt!65523) (apply!111 lt!65528 lt!65523))))

(declare-fun call!13667 () ListLongMap!1685)

(declare-fun bm!13661 () Bool)

(declare-fun c!23169 () Bool)

(declare-fun c!23166 () Bool)

(assert (=> bm!13661 (= call!13663 (+!165 (ite c!23166 call!13667 (ite c!23169 call!13664 call!13666)) (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(declare-fun b!126696 () Bool)

(declare-fun Unit!3955 () Unit!3936)

(assert (=> b!126696 (= e!82750 Unit!3955)))

(declare-fun bm!13662 () Bool)

(assert (=> bm!13662 (= call!13667 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun b!126697 () Bool)

(declare-fun res!61288 () Bool)

(declare-fun e!82753 () Bool)

(assert (=> b!126697 (=> (not res!61288) (not e!82753))))

(declare-fun e!82755 () Bool)

(assert (=> b!126697 (= res!61288 e!82755)))

(declare-fun c!23167 () Bool)

(assert (=> b!126697 (= c!23167 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!126698 () Bool)

(declare-fun e!82747 () Bool)

(declare-fun lt!65514 () ListLongMap!1685)

(assert (=> b!126698 (= e!82747 (= (apply!111 lt!65514 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2646 newMap!16)))))

(declare-fun bm!13663 () Bool)

(declare-fun call!13661 () Bool)

(assert (=> bm!13663 (= call!13661 (contains!877 lt!65514 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126699 () Bool)

(declare-fun e!82744 () ListLongMap!1685)

(assert (=> b!126699 (= e!82744 call!13662)))

(declare-fun b!126700 () Bool)

(declare-fun e!82752 () Bool)

(declare-fun e!82745 () Bool)

(assert (=> b!126700 (= e!82752 e!82745)))

(declare-fun res!61293 () Bool)

(assert (=> b!126700 (=> (not res!61293) (not e!82745))))

(assert (=> b!126700 (= res!61293 (contains!877 lt!65514 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!126700 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126701 () Bool)

(declare-fun c!23170 () Bool)

(assert (=> b!126701 (= c!23170 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!82746 () ListLongMap!1685)

(assert (=> b!126701 (= e!82744 e!82746)))

(declare-fun bm!13658 () Bool)

(declare-fun call!13665 () Bool)

(assert (=> bm!13658 (= call!13665 (contains!877 lt!65514 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!38115 () Bool)

(assert (=> d!38115 e!82753))

(declare-fun res!61292 () Bool)

(assert (=> d!38115 (=> (not res!61292) (not e!82753))))

(assert (=> d!38115 (= res!61292 (or (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))))

(declare-fun lt!65512 () ListLongMap!1685)

(assert (=> d!38115 (= lt!65514 lt!65512)))

(declare-fun lt!65516 () Unit!3936)

(assert (=> d!38115 (= lt!65516 e!82750)))

(declare-fun c!23165 () Bool)

(declare-fun e!82749 () Bool)

(assert (=> d!38115 (= c!23165 e!82749)))

(declare-fun res!61295 () Bool)

(assert (=> d!38115 (=> (not res!61295) (not e!82749))))

(assert (=> d!38115 (= res!61295 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun e!82754 () ListLongMap!1685)

(assert (=> d!38115 (= lt!65512 e!82754)))

(assert (=> d!38115 (= c!23166 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!38115 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38115 (= (getCurrentListMap!530 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65514)))

(declare-fun b!126702 () Bool)

(declare-fun e!82748 () Bool)

(assert (=> b!126702 (= e!82748 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126703 () Bool)

(assert (=> b!126703 (= e!82745 (= (apply!111 lt!65514 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!126703 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))))))))

(assert (=> b!126703 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126704 () Bool)

(assert (=> b!126704 (= e!82755 (not call!13665))))

(declare-fun b!126705 () Bool)

(assert (=> b!126705 (= e!82746 call!13666)))

(declare-fun b!126706 () Bool)

(assert (=> b!126706 (= e!82755 e!82747)))

(declare-fun res!61287 () Bool)

(assert (=> b!126706 (= res!61287 call!13665)))

(assert (=> b!126706 (=> (not res!61287) (not e!82747))))

(declare-fun b!126707 () Bool)

(assert (=> b!126707 (= e!82746 call!13662)))

(declare-fun b!126708 () Bool)

(declare-fun e!82751 () Bool)

(declare-fun e!82743 () Bool)

(assert (=> b!126708 (= e!82751 e!82743)))

(declare-fun res!61291 () Bool)

(assert (=> b!126708 (= res!61291 call!13661)))

(assert (=> b!126708 (=> (not res!61291) (not e!82743))))

(declare-fun b!126709 () Bool)

(assert (=> b!126709 (= e!82753 e!82751)))

(declare-fun c!23168 () Bool)

(assert (=> b!126709 (= c!23168 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126710 () Bool)

(assert (=> b!126710 (= e!82754 e!82744)))

(assert (=> b!126710 (= c!23169 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126711 () Bool)

(assert (=> b!126711 (= e!82749 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126712 () Bool)

(declare-fun res!61294 () Bool)

(assert (=> b!126712 (=> (not res!61294) (not e!82753))))

(assert (=> b!126712 (= res!61294 e!82752)))

(declare-fun res!61289 () Bool)

(assert (=> b!126712 (=> res!61289 e!82752)))

(assert (=> b!126712 (= res!61289 (not e!82748))))

(declare-fun res!61290 () Bool)

(assert (=> b!126712 (=> (not res!61290) (not e!82748))))

(assert (=> b!126712 (= res!61290 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun bm!13664 () Bool)

(assert (=> bm!13664 (= call!13664 call!13667)))

(declare-fun b!126713 () Bool)

(assert (=> b!126713 (= e!82754 (+!165 call!13663 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))

(declare-fun b!126714 () Bool)

(assert (=> b!126714 (= e!82743 (= (apply!111 lt!65514 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2646 newMap!16)))))

(declare-fun b!126715 () Bool)

(assert (=> b!126715 (= e!82751 (not call!13661))))

(assert (= (and d!38115 c!23166) b!126713))

(assert (= (and d!38115 (not c!23166)) b!126710))

(assert (= (and b!126710 c!23169) b!126699))

(assert (= (and b!126710 (not c!23169)) b!126701))

(assert (= (and b!126701 c!23170) b!126707))

(assert (= (and b!126701 (not c!23170)) b!126705))

(assert (= (or b!126707 b!126705) bm!13659))

(assert (= (or b!126699 bm!13659) bm!13664))

(assert (= (or b!126699 b!126707) bm!13660))

(assert (= (or b!126713 bm!13664) bm!13662))

(assert (= (or b!126713 bm!13660) bm!13661))

(assert (= (and d!38115 res!61295) b!126711))

(assert (= (and d!38115 c!23165) b!126695))

(assert (= (and d!38115 (not c!23165)) b!126696))

(assert (= (and d!38115 res!61292) b!126712))

(assert (= (and b!126712 res!61290) b!126702))

(assert (= (and b!126712 (not res!61289)) b!126700))

(assert (= (and b!126700 res!61293) b!126703))

(assert (= (and b!126712 res!61294) b!126697))

(assert (= (and b!126697 c!23167) b!126706))

(assert (= (and b!126697 (not c!23167)) b!126704))

(assert (= (and b!126706 res!61287) b!126698))

(assert (= (or b!126706 b!126704) bm!13658))

(assert (= (and b!126697 res!61288) b!126709))

(assert (= (and b!126709 c!23168) b!126708))

(assert (= (and b!126709 (not c!23168)) b!126715))

(assert (= (and b!126708 res!61291) b!126714))

(assert (= (or b!126708 b!126715) bm!13663))

(declare-fun b_lambda!5599 () Bool)

(assert (=> (not b_lambda!5599) (not b!126703)))

(assert (=> b!126703 t!6085))

(declare-fun b_and!7813 () Bool)

(assert (= b_and!7809 (and (=> t!6085 result!3859) b_and!7813)))

(assert (=> b!126703 t!6087))

(declare-fun b_and!7815 () Bool)

(assert (= b_and!7811 (and (=> t!6087 result!3861) b_and!7815)))

(declare-fun m!147823 () Bool)

(assert (=> bm!13661 m!147823))

(declare-fun m!147825 () Bool)

(assert (=> bm!13662 m!147825))

(assert (=> b!126711 m!147467))

(assert (=> b!126711 m!147467))

(assert (=> b!126711 m!147495))

(assert (=> d!38115 m!147475))

(declare-fun m!147827 () Bool)

(assert (=> bm!13658 m!147827))

(declare-fun m!147829 () Bool)

(assert (=> bm!13663 m!147829))

(declare-fun m!147831 () Bool)

(assert (=> b!126713 m!147831))

(declare-fun m!147833 () Bool)

(assert (=> b!126698 m!147833))

(declare-fun m!147835 () Bool)

(assert (=> b!126695 m!147835))

(declare-fun m!147837 () Bool)

(assert (=> b!126695 m!147837))

(declare-fun m!147839 () Bool)

(assert (=> b!126695 m!147839))

(declare-fun m!147841 () Bool)

(assert (=> b!126695 m!147841))

(declare-fun m!147843 () Bool)

(assert (=> b!126695 m!147843))

(declare-fun m!147845 () Bool)

(assert (=> b!126695 m!147845))

(assert (=> b!126695 m!147825))

(declare-fun m!147847 () Bool)

(assert (=> b!126695 m!147847))

(declare-fun m!147849 () Bool)

(assert (=> b!126695 m!147849))

(declare-fun m!147851 () Bool)

(assert (=> b!126695 m!147851))

(assert (=> b!126695 m!147843))

(declare-fun m!147853 () Bool)

(assert (=> b!126695 m!147853))

(assert (=> b!126695 m!147841))

(declare-fun m!147855 () Bool)

(assert (=> b!126695 m!147855))

(declare-fun m!147857 () Bool)

(assert (=> b!126695 m!147857))

(assert (=> b!126695 m!147467))

(assert (=> b!126695 m!147847))

(declare-fun m!147859 () Bool)

(assert (=> b!126695 m!147859))

(declare-fun m!147861 () Bool)

(assert (=> b!126695 m!147861))

(declare-fun m!147863 () Bool)

(assert (=> b!126695 m!147863))

(assert (=> b!126695 m!147861))

(assert (=> b!126702 m!147467))

(assert (=> b!126702 m!147467))

(assert (=> b!126702 m!147495))

(declare-fun m!147865 () Bool)

(assert (=> b!126703 m!147865))

(assert (=> b!126703 m!147581))

(declare-fun m!147867 () Bool)

(assert (=> b!126703 m!147867))

(assert (=> b!126703 m!147865))

(assert (=> b!126703 m!147467))

(declare-fun m!147869 () Bool)

(assert (=> b!126703 m!147869))

(assert (=> b!126703 m!147581))

(assert (=> b!126703 m!147467))

(assert (=> b!126700 m!147467))

(assert (=> b!126700 m!147467))

(declare-fun m!147871 () Bool)

(assert (=> b!126700 m!147871))

(declare-fun m!147873 () Bool)

(assert (=> b!126714 m!147873))

(assert (=> b!126331 d!38115))

(declare-fun d!38117 () Bool)

(declare-fun e!82758 () Bool)

(assert (=> d!38117 e!82758))

(declare-fun res!61298 () Bool)

(assert (=> d!38117 (=> (not res!61298) (not e!82758))))

(assert (=> d!38117 (= res!61298 (and (bvsge (index!3276 lt!65194) #b00000000000000000000000000000000) (bvslt (index!3276 lt!65194) (size!2489 (_values!2766 newMap!16)))))))

(declare-fun lt!65536 () Unit!3936)

(declare-fun choose!776 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 32) (_ BitVec 64) V!3435 Int) Unit!3936)

(assert (=> d!38117 (= lt!65536 (choose!776 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (index!3276 lt!65194) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2783 newMap!16)))))

(assert (=> d!38117 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38117 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!56 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (index!3276 lt!65194) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2783 newMap!16)) lt!65536)))

(declare-fun b!126718 () Bool)

(assert (=> b!126718 (= e!82758 (= (+!165 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!530 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))))))

(assert (= (and d!38117 res!61298) b!126718))

(assert (=> d!38117 m!147095))

(assert (=> d!38117 m!147093))

(declare-fun m!147875 () Bool)

(assert (=> d!38117 m!147875))

(assert (=> d!38117 m!147475))

(assert (=> b!126718 m!147159))

(assert (=> b!126718 m!147159))

(assert (=> b!126718 m!147667))

(assert (=> b!126718 m!147227))

(assert (=> b!126718 m!147231))

(assert (=> b!126331 d!38117))

(declare-fun mapNonEmpty!4511 () Bool)

(declare-fun mapRes!4511 () Bool)

(declare-fun tp!10973 () Bool)

(declare-fun e!82760 () Bool)

(assert (=> mapNonEmpty!4511 (= mapRes!4511 (and tp!10973 e!82760))))

(declare-fun mapKey!4511 () (_ BitVec 32))

(declare-fun mapRest!4511 () (Array (_ BitVec 32) ValueCell!1077))

(declare-fun mapValue!4511 () ValueCell!1077)

(assert (=> mapNonEmpty!4511 (= mapRest!4510 (store mapRest!4511 mapKey!4511 mapValue!4511))))

(declare-fun b!126720 () Bool)

(declare-fun e!82759 () Bool)

(assert (=> b!126720 (= e!82759 tp_is_empty!2841)))

(declare-fun condMapEmpty!4511 () Bool)

(declare-fun mapDefault!4511 () ValueCell!1077)

(assert (=> mapNonEmpty!4510 (= condMapEmpty!4511 (= mapRest!4510 ((as const (Array (_ BitVec 32) ValueCell!1077)) mapDefault!4511)))))

(assert (=> mapNonEmpty!4510 (= tp!10972 (and e!82759 mapRes!4511))))

(declare-fun mapIsEmpty!4511 () Bool)

(assert (=> mapIsEmpty!4511 mapRes!4511))

(declare-fun b!126719 () Bool)

(assert (=> b!126719 (= e!82760 tp_is_empty!2841)))

(assert (= (and mapNonEmpty!4510 condMapEmpty!4511) mapIsEmpty!4511))

(assert (= (and mapNonEmpty!4510 (not condMapEmpty!4511)) mapNonEmpty!4511))

(assert (= (and mapNonEmpty!4511 ((_ is ValueCellFull!1077) mapValue!4511)) b!126719))

(assert (= (and mapNonEmpty!4510 ((_ is ValueCellFull!1077) mapDefault!4511)) b!126720))

(declare-fun m!147877 () Bool)

(assert (=> mapNonEmpty!4511 m!147877))

(declare-fun mapNonEmpty!4512 () Bool)

(declare-fun mapRes!4512 () Bool)

(declare-fun tp!10974 () Bool)

(declare-fun e!82762 () Bool)

(assert (=> mapNonEmpty!4512 (= mapRes!4512 (and tp!10974 e!82762))))

(declare-fun mapRest!4512 () (Array (_ BitVec 32) ValueCell!1077))

(declare-fun mapValue!4512 () ValueCell!1077)

(declare-fun mapKey!4512 () (_ BitVec 32))

(assert (=> mapNonEmpty!4512 (= mapRest!4509 (store mapRest!4512 mapKey!4512 mapValue!4512))))

(declare-fun b!126722 () Bool)

(declare-fun e!82761 () Bool)

(assert (=> b!126722 (= e!82761 tp_is_empty!2841)))

(declare-fun condMapEmpty!4512 () Bool)

(declare-fun mapDefault!4512 () ValueCell!1077)

(assert (=> mapNonEmpty!4509 (= condMapEmpty!4512 (= mapRest!4509 ((as const (Array (_ BitVec 32) ValueCell!1077)) mapDefault!4512)))))

(assert (=> mapNonEmpty!4509 (= tp!10971 (and e!82761 mapRes!4512))))

(declare-fun mapIsEmpty!4512 () Bool)

(assert (=> mapIsEmpty!4512 mapRes!4512))

(declare-fun b!126721 () Bool)

(assert (=> b!126721 (= e!82762 tp_is_empty!2841)))

(assert (= (and mapNonEmpty!4509 condMapEmpty!4512) mapIsEmpty!4512))

(assert (= (and mapNonEmpty!4509 (not condMapEmpty!4512)) mapNonEmpty!4512))

(assert (= (and mapNonEmpty!4512 ((_ is ValueCellFull!1077) mapValue!4512)) b!126721))

(assert (= (and mapNonEmpty!4509 ((_ is ValueCellFull!1077) mapDefault!4512)) b!126722))

(declare-fun m!147879 () Bool)

(assert (=> mapNonEmpty!4512 m!147879))

(declare-fun b_lambda!5601 () Bool)

(assert (= b_lambda!5597 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5601)))

(declare-fun b_lambda!5603 () Bool)

(assert (= b_lambda!5589 (or (and b!126082 b_free!2849) (and b!126074 b_free!2851 (= (defaultEntry!2783 newMap!16) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))))) b_lambda!5603)))

(declare-fun b_lambda!5605 () Bool)

(assert (= b_lambda!5593 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5605)))

(declare-fun b_lambda!5607 () Bool)

(assert (= b_lambda!5599 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5607)))

(declare-fun b_lambda!5609 () Bool)

(assert (= b_lambda!5595 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5609)))

(declare-fun b_lambda!5611 () Bool)

(assert (= b_lambda!5591 (or (and b!126082 b_free!2849) (and b!126074 b_free!2851 (= (defaultEntry!2783 newMap!16) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))))) b_lambda!5611)))

(check-sat (not b!126362) (not b!126410) (not d!38043) (not d!38023) (not b!126657) (not d!38083) (not d!38021) (not b!126400) (not b!126550) (not b!126409) (not b!126629) (not b!126698) (not d!38045) (not bm!13642) (not d!38025) (not bm!13618) (not b!126394) b_and!7813 (not bm!13631) (not b!126399) (not b!126529) (not b!126713) (not b!126616) tp_is_empty!2841 (not b!126426) (not b!126414) (not b!126547) (not b!126700) (not b!126396) (not bm!13649) (not b!126526) (not b!126637) (not b!126441) (not b!126714) (not b!126406) (not b!126554) (not b!126361) (not b_lambda!5607) (not bm!13615) (not b!126622) (not b!126435) (not b!126645) (not d!38109) (not bm!13609) (not b!126472) (not b!126634) (not b_lambda!5611) (not d!38027) (not bm!13658) (not b_lambda!5601) (not b!126444) (not d!38111) (not b!126703) (not d!38089) (not d!38105) (not b!126632) (not b!126676) (not b_lambda!5603) (not b_next!2849) (not b!126686) (not d!38101) (not b_lambda!5587) (not d!38013) (not b!126694) (not d!38031) (not b!126695) (not bm!13647) (not b!126407) (not d!38085) (not bm!13651) (not d!38017) (not d!38019) (not b!126422) (not b!126536) (not d!38071) (not b!126661) (not d!38115) (not d!38113) (not d!38015) (not d!38061) (not b!126511) (not d!38065) (not d!38081) (not b!126641) (not b!126691) (not b!126635) (not b!126684) (not b!126643) (not d!38117) (not b!126486) (not b!126457) (not b!126401) (not b!126673) (not b!126365) (not d!38091) (not d!38007) (not b!126471) (not mapNonEmpty!4511) (not b!126391) (not b!126534) (not d!38099) (not b!126687) (not d!38095) (not d!38009) (not b!126646) (not b_next!2851) (not b_lambda!5605) (not b!126408) (not bm!13641) (not d!38037) (not b!126633) (not d!38051) (not b!126666) (not b!126427) (not b!126675) b_and!7815 (not b!126497) (not b!126364) (not d!38003) (not d!38039) (not b!126473) (not b!126419) (not b!126689) (not b!126702) (not bm!13644) (not d!38097) (not b!126429) (not b!126459) (not d!38035) (not b!126395) (not b!126668) (not b!126626) (not d!38005) (not b!126423) (not d!38093) (not b!126548) (not b!126363) (not b!126656) (not bm!13655) (not b!126413) (not b!126545) (not b!126428) (not b!126718) (not b!126442) (not bm!13663) (not b!126454) (not b_lambda!5609) (not b!126638) (not b_lambda!5583) (not d!38033) (not d!38103) (not bm!13643) (not b!126671) (not d!38011) (not b!126483) (not bm!13612) (not b!126527) (not bm!13661) (not b!126532) (not b!126412) (not b!126551) (not d!38077) (not b!126360) (not b!126579) (not d!38047) (not b!126420) (not d!38107) (not bm!13622) (not b!126654) (not bm!13630) (not b!126624) (not bm!13624) (not b!126659) (not b!126711) (not bm!13662) (not d!38029) (not bm!13619) (not b!126581) (not bm!13623) (not bm!13656) (not d!38055) (not bm!13648) (not bm!13654) (not b!126537) (not mapNonEmpty!4512) (not b!126393) (not d!38041))
(check-sat b_and!7813 b_and!7815 (not b_next!2849) (not b_next!2851))
(get-model)

(declare-fun lt!65539 () Bool)

(declare-fun d!38119 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!124 (List!1719) (InoxSet tuple2!2568))

(assert (=> d!38119 (= lt!65539 (select (content!124 (toList!858 lt!65270)) (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun e!82768 () Bool)

(assert (=> d!38119 (= lt!65539 e!82768)))

(declare-fun res!61303 () Bool)

(assert (=> d!38119 (=> (not res!61303) (not e!82768))))

(assert (=> d!38119 (= res!61303 ((_ is Cons!1715) (toList!858 lt!65270)))))

(assert (=> d!38119 (= (contains!878 (toList!858 lt!65270) (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65539)))

(declare-fun b!126727 () Bool)

(declare-fun e!82767 () Bool)

(assert (=> b!126727 (= e!82768 e!82767)))

(declare-fun res!61304 () Bool)

(assert (=> b!126727 (=> res!61304 e!82767)))

(assert (=> b!126727 (= res!61304 (= (h!2317 (toList!858 lt!65270)) (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!126728 () Bool)

(assert (=> b!126728 (= e!82767 (contains!878 (t!6078 (toList!858 lt!65270)) (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(assert (= (and d!38119 res!61303) b!126727))

(assert (= (and b!126727 (not res!61304)) b!126728))

(declare-fun m!147881 () Bool)

(assert (=> d!38119 m!147881))

(declare-fun m!147883 () Bool)

(assert (=> d!38119 m!147883))

(declare-fun m!147885 () Bool)

(assert (=> b!126728 m!147885))

(assert (=> b!126423 d!38119))

(declare-fun d!38121 () Bool)

(declare-fun e!82770 () Bool)

(assert (=> d!38121 e!82770))

(declare-fun res!61305 () Bool)

(assert (=> d!38121 (=> res!61305 e!82770)))

(declare-fun lt!65541 () Bool)

(assert (=> d!38121 (= res!61305 (not lt!65541))))

(declare-fun lt!65540 () Bool)

(assert (=> d!38121 (= lt!65541 lt!65540)))

(declare-fun lt!65542 () Unit!3936)

(declare-fun e!82769 () Unit!3936)

(assert (=> d!38121 (= lt!65542 e!82769)))

(declare-fun c!23171 () Bool)

(assert (=> d!38121 (= c!23171 lt!65540)))

(assert (=> d!38121 (= lt!65540 (containsKey!170 (toList!858 lt!65453) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38121 (= (contains!877 lt!65453 #b1000000000000000000000000000000000000000000000000000000000000000) lt!65541)))

(declare-fun b!126729 () Bool)

(declare-fun lt!65543 () Unit!3936)

(assert (=> b!126729 (= e!82769 lt!65543)))

(assert (=> b!126729 (= lt!65543 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65453) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!126729 (isDefined!120 (getValueByKey!166 (toList!858 lt!65453) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126730 () Bool)

(declare-fun Unit!3956 () Unit!3936)

(assert (=> b!126730 (= e!82769 Unit!3956)))

(declare-fun b!126731 () Bool)

(assert (=> b!126731 (= e!82770 (isDefined!120 (getValueByKey!166 (toList!858 lt!65453) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38121 c!23171) b!126729))

(assert (= (and d!38121 (not c!23171)) b!126730))

(assert (= (and d!38121 (not res!61305)) b!126731))

(declare-fun m!147887 () Bool)

(assert (=> d!38121 m!147887))

(declare-fun m!147889 () Bool)

(assert (=> b!126729 m!147889))

(declare-fun m!147891 () Bool)

(assert (=> b!126729 m!147891))

(assert (=> b!126729 m!147891))

(declare-fun m!147893 () Bool)

(assert (=> b!126729 m!147893))

(assert (=> b!126731 m!147891))

(assert (=> b!126731 m!147891))

(assert (=> b!126731 m!147893))

(assert (=> bm!13649 d!38121))

(declare-fun d!38123 () Bool)

(assert (=> d!38123 (= (get!1455 (getValueByKey!166 (toList!858 lt!65113) lt!65106)) (v!3125 (getValueByKey!166 (toList!858 lt!65113) lt!65106)))))

(assert (=> d!38033 d!38123))

(declare-fun b!126735 () Bool)

(declare-fun e!82772 () Option!172)

(assert (=> b!126735 (= e!82772 None!170)))

(declare-fun d!38125 () Bool)

(declare-fun c!23172 () Bool)

(assert (=> d!38125 (= c!23172 (and ((_ is Cons!1715) (toList!858 lt!65113)) (= (_1!1294 (h!2317 (toList!858 lt!65113))) lt!65106)))))

(declare-fun e!82771 () Option!172)

(assert (=> d!38125 (= (getValueByKey!166 (toList!858 lt!65113) lt!65106) e!82771)))

(declare-fun b!126734 () Bool)

(assert (=> b!126734 (= e!82772 (getValueByKey!166 (t!6078 (toList!858 lt!65113)) lt!65106))))

(declare-fun b!126732 () Bool)

(assert (=> b!126732 (= e!82771 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65113)))))))

(declare-fun b!126733 () Bool)

(assert (=> b!126733 (= e!82771 e!82772)))

(declare-fun c!23173 () Bool)

(assert (=> b!126733 (= c!23173 (and ((_ is Cons!1715) (toList!858 lt!65113)) (not (= (_1!1294 (h!2317 (toList!858 lt!65113))) lt!65106))))))

(assert (= (and d!38125 c!23172) b!126732))

(assert (= (and d!38125 (not c!23172)) b!126733))

(assert (= (and b!126733 c!23173) b!126734))

(assert (= (and b!126733 (not c!23173)) b!126735))

(declare-fun m!147895 () Bool)

(assert (=> b!126734 m!147895))

(assert (=> d!38033 d!38125))

(declare-fun d!38127 () Bool)

(assert (=> d!38127 (= (apply!111 lt!65485 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1455 (getValueByKey!166 (toList!858 lt!65485) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5236 () Bool)

(assert (= bs!5236 d!38127))

(assert (=> bs!5236 m!147467))

(declare-fun m!147897 () Bool)

(assert (=> bs!5236 m!147897))

(assert (=> bs!5236 m!147897))

(declare-fun m!147899 () Bool)

(assert (=> bs!5236 m!147899))

(assert (=> b!126676 d!38127))

(declare-fun d!38129 () Bool)

(declare-fun c!23174 () Bool)

(assert (=> d!38129 (= c!23174 ((_ is ValueCellFull!1077) (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!82773 () V!3435)

(assert (=> d!38129 (= (get!1452 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!82773)))

(declare-fun b!126736 () Bool)

(assert (=> b!126736 (= e!82773 (get!1453 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!126737 () Bool)

(assert (=> b!126737 (= e!82773 (get!1454 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38129 c!23174) b!126736))

(assert (= (and d!38129 (not c!23174)) b!126737))

(assert (=> b!126736 m!147579))

(assert (=> b!126736 m!147581))

(declare-fun m!147901 () Bool)

(assert (=> b!126736 m!147901))

(assert (=> b!126737 m!147579))

(assert (=> b!126737 m!147581))

(declare-fun m!147903 () Bool)

(assert (=> b!126737 m!147903))

(assert (=> b!126676 d!38129))

(declare-fun d!38131 () Bool)

(assert (=> d!38131 (= (get!1455 (getValueByKey!166 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3125 (getValueByKey!166 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!38085 d!38131))

(declare-fun b!126741 () Bool)

(declare-fun e!82775 () Option!172)

(assert (=> b!126741 (= e!82775 None!170)))

(declare-fun d!38133 () Bool)

(declare-fun c!23175 () Bool)

(assert (=> d!38133 (= c!23175 (and ((_ is Cons!1715) (toList!858 lt!65101)) (= (_1!1294 (h!2317 (toList!858 lt!65101))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!82774 () Option!172)

(assert (=> d!38133 (= (getValueByKey!166 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!82774)))

(declare-fun b!126740 () Bool)

(assert (=> b!126740 (= e!82775 (getValueByKey!166 (t!6078 (toList!858 lt!65101)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!126738 () Bool)

(assert (=> b!126738 (= e!82774 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65101)))))))

(declare-fun b!126739 () Bool)

(assert (=> b!126739 (= e!82774 e!82775)))

(declare-fun c!23176 () Bool)

(assert (=> b!126739 (= c!23176 (and ((_ is Cons!1715) (toList!858 lt!65101)) (not (= (_1!1294 (h!2317 (toList!858 lt!65101))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!38133 c!23175) b!126738))

(assert (= (and d!38133 (not c!23175)) b!126739))

(assert (= (and b!126739 c!23176) b!126740))

(assert (= (and b!126739 (not c!23176)) b!126741))

(assert (=> b!126740 m!147165))

(declare-fun m!147905 () Bool)

(assert (=> b!126740 m!147905))

(assert (=> d!38085 d!38133))

(assert (=> d!38027 d!38017))

(assert (=> d!38027 d!38019))

(declare-fun d!38135 () Bool)

(assert (=> d!38135 (contains!877 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65100)))

(assert (=> d!38135 true))

(declare-fun _$35!371 () Unit!3936)

(assert (=> d!38135 (= (choose!769 lt!65120 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65100) _$35!371)))

(declare-fun bs!5237 () Bool)

(assert (= bs!5237 d!38135))

(assert (=> bs!5237 m!147203))

(assert (=> bs!5237 m!147203))

(assert (=> bs!5237 m!147205))

(assert (=> d!38027 d!38135))

(declare-fun d!38137 () Bool)

(declare-fun e!82777 () Bool)

(assert (=> d!38137 e!82777))

(declare-fun res!61306 () Bool)

(assert (=> d!38137 (=> res!61306 e!82777)))

(declare-fun lt!65545 () Bool)

(assert (=> d!38137 (= res!61306 (not lt!65545))))

(declare-fun lt!65544 () Bool)

(assert (=> d!38137 (= lt!65545 lt!65544)))

(declare-fun lt!65546 () Unit!3936)

(declare-fun e!82776 () Unit!3936)

(assert (=> d!38137 (= lt!65546 e!82776)))

(declare-fun c!23177 () Bool)

(assert (=> d!38137 (= c!23177 lt!65544)))

(assert (=> d!38137 (= lt!65544 (containsKey!170 (toList!858 lt!65120) lt!65100))))

(assert (=> d!38137 (= (contains!877 lt!65120 lt!65100) lt!65545)))

(declare-fun b!126743 () Bool)

(declare-fun lt!65547 () Unit!3936)

(assert (=> b!126743 (= e!82776 lt!65547)))

(assert (=> b!126743 (= lt!65547 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65120) lt!65100))))

(assert (=> b!126743 (isDefined!120 (getValueByKey!166 (toList!858 lt!65120) lt!65100))))

(declare-fun b!126744 () Bool)

(declare-fun Unit!3957 () Unit!3936)

(assert (=> b!126744 (= e!82776 Unit!3957)))

(declare-fun b!126745 () Bool)

(assert (=> b!126745 (= e!82777 (isDefined!120 (getValueByKey!166 (toList!858 lt!65120) lt!65100)))))

(assert (= (and d!38137 c!23177) b!126743))

(assert (= (and d!38137 (not c!23177)) b!126744))

(assert (= (and d!38137 (not res!61306)) b!126745))

(declare-fun m!147907 () Bool)

(assert (=> d!38137 m!147907))

(declare-fun m!147909 () Bool)

(assert (=> b!126743 m!147909))

(declare-fun m!147911 () Bool)

(assert (=> b!126743 m!147911))

(assert (=> b!126743 m!147911))

(declare-fun m!147913 () Bool)

(assert (=> b!126743 m!147913))

(assert (=> b!126745 m!147911))

(assert (=> b!126745 m!147911))

(assert (=> b!126745 m!147913))

(assert (=> d!38027 d!38137))

(declare-fun d!38139 () Bool)

(assert (=> d!38139 (= (validMask!0 (mask!7039 newMap!16)) (and (or (= (mask!7039 newMap!16) #b00000000000000000000000000000111) (= (mask!7039 newMap!16) #b00000000000000000000000000001111) (= (mask!7039 newMap!16) #b00000000000000000000000000011111) (= (mask!7039 newMap!16) #b00000000000000000000000000111111) (= (mask!7039 newMap!16) #b00000000000000000000000001111111) (= (mask!7039 newMap!16) #b00000000000000000000000011111111) (= (mask!7039 newMap!16) #b00000000000000000000000111111111) (= (mask!7039 newMap!16) #b00000000000000000000001111111111) (= (mask!7039 newMap!16) #b00000000000000000000011111111111) (= (mask!7039 newMap!16) #b00000000000000000000111111111111) (= (mask!7039 newMap!16) #b00000000000000000001111111111111) (= (mask!7039 newMap!16) #b00000000000000000011111111111111) (= (mask!7039 newMap!16) #b00000000000000000111111111111111) (= (mask!7039 newMap!16) #b00000000000000001111111111111111) (= (mask!7039 newMap!16) #b00000000000000011111111111111111) (= (mask!7039 newMap!16) #b00000000000000111111111111111111) (= (mask!7039 newMap!16) #b00000000000001111111111111111111) (= (mask!7039 newMap!16) #b00000000000011111111111111111111) (= (mask!7039 newMap!16) #b00000000000111111111111111111111) (= (mask!7039 newMap!16) #b00000000001111111111111111111111) (= (mask!7039 newMap!16) #b00000000011111111111111111111111) (= (mask!7039 newMap!16) #b00000000111111111111111111111111) (= (mask!7039 newMap!16) #b00000001111111111111111111111111) (= (mask!7039 newMap!16) #b00000011111111111111111111111111) (= (mask!7039 newMap!16) #b00000111111111111111111111111111) (= (mask!7039 newMap!16) #b00001111111111111111111111111111) (= (mask!7039 newMap!16) #b00011111111111111111111111111111) (= (mask!7039 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!7039 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!38103 d!38139))

(declare-fun d!38141 () Bool)

(declare-fun e!82779 () Bool)

(assert (=> d!38141 e!82779))

(declare-fun res!61307 () Bool)

(assert (=> d!38141 (=> res!61307 e!82779)))

(declare-fun lt!65549 () Bool)

(assert (=> d!38141 (= res!61307 (not lt!65549))))

(declare-fun lt!65548 () Bool)

(assert (=> d!38141 (= lt!65549 lt!65548)))

(declare-fun lt!65550 () Unit!3936)

(declare-fun e!82778 () Unit!3936)

(assert (=> d!38141 (= lt!65550 e!82778)))

(declare-fun c!23178 () Bool)

(assert (=> d!38141 (= c!23178 lt!65548)))

(assert (=> d!38141 (= lt!65548 (containsKey!170 (toList!858 lt!65444) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38141 (= (contains!877 lt!65444 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!65549)))

(declare-fun b!126746 () Bool)

(declare-fun lt!65551 () Unit!3936)

(assert (=> b!126746 (= e!82778 lt!65551)))

(assert (=> b!126746 (= lt!65551 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65444) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!126746 (isDefined!120 (getValueByKey!166 (toList!858 lt!65444) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!126747 () Bool)

(declare-fun Unit!3958 () Unit!3936)

(assert (=> b!126747 (= e!82778 Unit!3958)))

(declare-fun b!126748 () Bool)

(assert (=> b!126748 (= e!82779 (isDefined!120 (getValueByKey!166 (toList!858 lt!65444) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!38141 c!23178) b!126746))

(assert (= (and d!38141 (not c!23178)) b!126747))

(assert (= (and d!38141 (not res!61307)) b!126748))

(declare-fun m!147915 () Bool)

(assert (=> d!38141 m!147915))

(declare-fun m!147917 () Bool)

(assert (=> b!126746 m!147917))

(assert (=> b!126746 m!147685))

(assert (=> b!126746 m!147685))

(declare-fun m!147919 () Bool)

(assert (=> b!126746 m!147919))

(assert (=> b!126748 m!147685))

(assert (=> b!126748 m!147685))

(assert (=> b!126748 m!147919))

(assert (=> d!38099 d!38141))

(declare-fun b!126752 () Bool)

(declare-fun e!82781 () Option!172)

(assert (=> b!126752 (= e!82781 None!170)))

(declare-fun d!38143 () Bool)

(declare-fun c!23179 () Bool)

(assert (=> d!38143 (= c!23179 (and ((_ is Cons!1715) lt!65443) (= (_1!1294 (h!2317 lt!65443)) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!82780 () Option!172)

(assert (=> d!38143 (= (getValueByKey!166 lt!65443 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!82780)))

(declare-fun b!126751 () Bool)

(assert (=> b!126751 (= e!82781 (getValueByKey!166 (t!6078 lt!65443) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!126749 () Bool)

(assert (=> b!126749 (= e!82780 (Some!171 (_2!1294 (h!2317 lt!65443))))))

(declare-fun b!126750 () Bool)

(assert (=> b!126750 (= e!82780 e!82781)))

(declare-fun c!23180 () Bool)

(assert (=> b!126750 (= c!23180 (and ((_ is Cons!1715) lt!65443) (not (= (_1!1294 (h!2317 lt!65443)) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!38143 c!23179) b!126749))

(assert (= (and d!38143 (not c!23179)) b!126750))

(assert (= (and b!126750 c!23180) b!126751))

(assert (= (and b!126750 (not c!23180)) b!126752))

(declare-fun m!147921 () Bool)

(assert (=> b!126751 m!147921))

(assert (=> d!38099 d!38143))

(declare-fun d!38145 () Bool)

(assert (=> d!38145 (= (getValueByKey!166 lt!65443 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!65554 () Unit!3936)

(declare-fun choose!777 (List!1719 (_ BitVec 64) V!3435) Unit!3936)

(assert (=> d!38145 (= lt!65554 (choose!777 lt!65443 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!82784 () Bool)

(assert (=> d!38145 e!82784))

(declare-fun res!61312 () Bool)

(assert (=> d!38145 (=> (not res!61312) (not e!82784))))

(assert (=> d!38145 (= res!61312 (isStrictlySorted!312 lt!65443))))

(assert (=> d!38145 (= (lemmaContainsTupThenGetReturnValue!83 lt!65443 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!65554)))

(declare-fun b!126757 () Bool)

(declare-fun res!61313 () Bool)

(assert (=> b!126757 (=> (not res!61313) (not e!82784))))

(assert (=> b!126757 (= res!61313 (containsKey!170 lt!65443 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!126758 () Bool)

(assert (=> b!126758 (= e!82784 (contains!878 lt!65443 (tuple2!2569 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!38145 res!61312) b!126757))

(assert (= (and b!126757 res!61313) b!126758))

(assert (=> d!38145 m!147679))

(declare-fun m!147923 () Bool)

(assert (=> d!38145 m!147923))

(declare-fun m!147925 () Bool)

(assert (=> d!38145 m!147925))

(declare-fun m!147927 () Bool)

(assert (=> b!126757 m!147927))

(declare-fun m!147929 () Bool)

(assert (=> b!126758 m!147929))

(assert (=> d!38099 d!38145))

(declare-fun b!126779 () Bool)

(declare-fun e!82795 () List!1719)

(declare-fun e!82799 () List!1719)

(assert (=> b!126779 (= e!82795 e!82799)))

(declare-fun c!23191 () Bool)

(assert (=> b!126779 (= c!23191 (and ((_ is Cons!1715) (toList!858 call!13609)) (= (_1!1294 (h!2317 (toList!858 call!13609))) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!126780 () Bool)

(declare-fun e!82797 () List!1719)

(assert (=> b!126780 (= e!82797 (insertStrictlySorted!85 (t!6078 (toList!858 call!13609)) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!13671 () Bool)

(declare-fun call!13676 () List!1719)

(declare-fun call!13674 () List!1719)

(assert (=> bm!13671 (= call!13676 call!13674)))

(declare-fun b!126781 () Bool)

(declare-fun e!82798 () List!1719)

(assert (=> b!126781 (= e!82798 call!13676)))

(declare-fun b!126782 () Bool)

(declare-fun call!13675 () List!1719)

(assert (=> b!126782 (= e!82795 call!13675)))

(declare-fun b!126783 () Bool)

(assert (=> b!126783 (= e!82799 call!13674)))

(declare-fun c!23190 () Bool)

(declare-fun bm!13673 () Bool)

(declare-fun $colon$colon!88 (List!1719 tuple2!2568) List!1719)

(assert (=> bm!13673 (= call!13675 ($colon$colon!88 e!82797 (ite c!23190 (h!2317 (toList!858 call!13609)) (tuple2!2569 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!23192 () Bool)

(assert (=> bm!13673 (= c!23192 c!23190)))

(declare-fun b!126784 () Bool)

(declare-fun res!61319 () Bool)

(declare-fun e!82796 () Bool)

(assert (=> b!126784 (=> (not res!61319) (not e!82796))))

(declare-fun lt!65557 () List!1719)

(assert (=> b!126784 (= res!61319 (containsKey!170 lt!65557 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!126785 () Bool)

(assert (=> b!126785 (= e!82796 (contains!878 lt!65557 (tuple2!2569 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!126786 () Bool)

(assert (=> b!126786 (= e!82798 call!13676)))

(declare-fun c!23189 () Bool)

(declare-fun b!126787 () Bool)

(assert (=> b!126787 (= e!82797 (ite c!23191 (t!6078 (toList!858 call!13609)) (ite c!23189 (Cons!1715 (h!2317 (toList!858 call!13609)) (t!6078 (toList!858 call!13609))) Nil!1716)))))

(declare-fun b!126788 () Bool)

(assert (=> b!126788 (= c!23189 (and ((_ is Cons!1715) (toList!858 call!13609)) (bvsgt (_1!1294 (h!2317 (toList!858 call!13609))) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!126788 (= e!82799 e!82798)))

(declare-fun d!38147 () Bool)

(assert (=> d!38147 e!82796))

(declare-fun res!61318 () Bool)

(assert (=> d!38147 (=> (not res!61318) (not e!82796))))

(assert (=> d!38147 (= res!61318 (isStrictlySorted!312 lt!65557))))

(assert (=> d!38147 (= lt!65557 e!82795)))

(assert (=> d!38147 (= c!23190 (and ((_ is Cons!1715) (toList!858 call!13609)) (bvslt (_1!1294 (h!2317 (toList!858 call!13609))) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!38147 (isStrictlySorted!312 (toList!858 call!13609))))

(assert (=> d!38147 (= (insertStrictlySorted!85 (toList!858 call!13609) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!65557)))

(declare-fun bm!13672 () Bool)

(assert (=> bm!13672 (= call!13674 call!13675)))

(assert (= (and d!38147 c!23190) b!126782))

(assert (= (and d!38147 (not c!23190)) b!126779))

(assert (= (and b!126779 c!23191) b!126783))

(assert (= (and b!126779 (not c!23191)) b!126788))

(assert (= (and b!126788 c!23189) b!126786))

(assert (= (and b!126788 (not c!23189)) b!126781))

(assert (= (or b!126786 b!126781) bm!13671))

(assert (= (or b!126783 bm!13671) bm!13672))

(assert (= (or b!126782 bm!13672) bm!13673))

(assert (= (and bm!13673 c!23192) b!126780))

(assert (= (and bm!13673 (not c!23192)) b!126787))

(assert (= (and d!38147 res!61318) b!126784))

(assert (= (and b!126784 res!61319) b!126785))

(declare-fun m!147931 () Bool)

(assert (=> bm!13673 m!147931))

(declare-fun m!147933 () Bool)

(assert (=> d!38147 m!147933))

(declare-fun m!147935 () Bool)

(assert (=> d!38147 m!147935))

(declare-fun m!147937 () Bool)

(assert (=> b!126785 m!147937))

(declare-fun m!147939 () Bool)

(assert (=> b!126780 m!147939))

(declare-fun m!147941 () Bool)

(assert (=> b!126784 m!147941))

(assert (=> d!38099 d!38147))

(declare-fun d!38149 () Bool)

(assert (=> d!38149 (= (get!1455 (getValueByKey!166 (toList!858 lt!65115) lt!65110)) (v!3125 (getValueByKey!166 (toList!858 lt!65115) lt!65110)))))

(assert (=> d!38015 d!38149))

(declare-fun b!126792 () Bool)

(declare-fun e!82801 () Option!172)

(assert (=> b!126792 (= e!82801 None!170)))

(declare-fun d!38151 () Bool)

(declare-fun c!23193 () Bool)

(assert (=> d!38151 (= c!23193 (and ((_ is Cons!1715) (toList!858 lt!65115)) (= (_1!1294 (h!2317 (toList!858 lt!65115))) lt!65110)))))

(declare-fun e!82800 () Option!172)

(assert (=> d!38151 (= (getValueByKey!166 (toList!858 lt!65115) lt!65110) e!82800)))

(declare-fun b!126791 () Bool)

(assert (=> b!126791 (= e!82801 (getValueByKey!166 (t!6078 (toList!858 lt!65115)) lt!65110))))

(declare-fun b!126789 () Bool)

(assert (=> b!126789 (= e!82800 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65115)))))))

(declare-fun b!126790 () Bool)

(assert (=> b!126790 (= e!82800 e!82801)))

(declare-fun c!23194 () Bool)

(assert (=> b!126790 (= c!23194 (and ((_ is Cons!1715) (toList!858 lt!65115)) (not (= (_1!1294 (h!2317 (toList!858 lt!65115))) lt!65110))))))

(assert (= (and d!38151 c!23193) b!126789))

(assert (= (and d!38151 (not c!23193)) b!126790))

(assert (= (and b!126790 c!23194) b!126791))

(assert (= (and b!126790 (not c!23194)) b!126792))

(declare-fun m!147943 () Bool)

(assert (=> b!126791 m!147943))

(assert (=> d!38015 d!38151))

(declare-fun d!38153 () Bool)

(assert (=> d!38153 (= (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!126473 d!38153))

(declare-fun b!126794 () Bool)

(declare-fun e!82802 () Bool)

(declare-fun call!13677 () Bool)

(assert (=> b!126794 (= e!82802 call!13677)))

(declare-fun bm!13674 () Bool)

(assert (=> bm!13674 (= call!13677 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4516 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992)))))))

(declare-fun b!126795 () Bool)

(declare-fun e!82803 () Bool)

(assert (=> b!126795 (= e!82803 call!13677)))

(declare-fun b!126796 () Bool)

(assert (=> b!126796 (= e!82802 e!82803)))

(declare-fun lt!65559 () (_ BitVec 64))

(assert (=> b!126796 (= lt!65559 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!65558 () Unit!3936)

(assert (=> b!126796 (= lt!65558 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4516 (v!3122 (underlying!438 thiss!992))) lt!65559 #b00000000000000000000000000000000))))

(assert (=> b!126796 (arrayContainsKey!0 (_keys!4516 (v!3122 (underlying!438 thiss!992))) lt!65559 #b00000000000000000000000000000000)))

(declare-fun lt!65560 () Unit!3936)

(assert (=> b!126796 (= lt!65560 lt!65558)))

(declare-fun res!61320 () Bool)

(assert (=> b!126796 (= res!61320 (= (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) #b00000000000000000000000000000000) (_keys!4516 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992)))) (Found!280 #b00000000000000000000000000000000)))))

(assert (=> b!126796 (=> (not res!61320) (not e!82803))))

(declare-fun d!38155 () Bool)

(declare-fun res!61321 () Bool)

(declare-fun e!82804 () Bool)

(assert (=> d!38155 (=> res!61321 e!82804)))

(assert (=> d!38155 (= res!61321 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(assert (=> d!38155 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992)))) e!82804)))

(declare-fun b!126793 () Bool)

(assert (=> b!126793 (= e!82804 e!82802)))

(declare-fun c!23195 () Bool)

(assert (=> b!126793 (= c!23195 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!38155 (not res!61321)) b!126793))

(assert (= (and b!126793 c!23195) b!126796))

(assert (= (and b!126793 (not c!23195)) b!126794))

(assert (= (and b!126796 res!61320) b!126795))

(assert (= (or b!126795 b!126794) bm!13674))

(declare-fun m!147945 () Bool)

(assert (=> bm!13674 m!147945))

(declare-fun m!147947 () Bool)

(assert (=> b!126796 m!147947))

(declare-fun m!147949 () Bool)

(assert (=> b!126796 m!147949))

(declare-fun m!147951 () Bool)

(assert (=> b!126796 m!147951))

(assert (=> b!126796 m!147947))

(declare-fun m!147953 () Bool)

(assert (=> b!126796 m!147953))

(assert (=> b!126793 m!147947))

(assert (=> b!126793 m!147947))

(declare-fun m!147955 () Bool)

(assert (=> b!126793 m!147955))

(assert (=> b!126361 d!38155))

(assert (=> b!126536 d!38153))

(declare-fun d!38157 () Bool)

(declare-fun e!82806 () Bool)

(assert (=> d!38157 e!82806))

(declare-fun res!61322 () Bool)

(assert (=> d!38157 (=> res!61322 e!82806)))

(declare-fun lt!65562 () Bool)

(assert (=> d!38157 (= res!61322 (not lt!65562))))

(declare-fun lt!65561 () Bool)

(assert (=> d!38157 (= lt!65562 lt!65561)))

(declare-fun lt!65563 () Unit!3936)

(declare-fun e!82805 () Unit!3936)

(assert (=> d!38157 (= lt!65563 e!82805)))

(declare-fun c!23196 () Bool)

(assert (=> d!38157 (= c!23196 lt!65561)))

(assert (=> d!38157 (= lt!65561 (containsKey!170 (toList!858 lt!65514) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!38157 (= (contains!877 lt!65514 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) lt!65562)))

(declare-fun b!126797 () Bool)

(declare-fun lt!65564 () Unit!3936)

(assert (=> b!126797 (= e!82805 lt!65564)))

(assert (=> b!126797 (= lt!65564 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65514) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!126797 (isDefined!120 (getValueByKey!166 (toList!858 lt!65514) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126798 () Bool)

(declare-fun Unit!3959 () Unit!3936)

(assert (=> b!126798 (= e!82805 Unit!3959)))

(declare-fun b!126799 () Bool)

(assert (=> b!126799 (= e!82806 (isDefined!120 (getValueByKey!166 (toList!858 lt!65514) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!38157 c!23196) b!126797))

(assert (= (and d!38157 (not c!23196)) b!126798))

(assert (= (and d!38157 (not res!61322)) b!126799))

(assert (=> d!38157 m!147467))

(declare-fun m!147957 () Bool)

(assert (=> d!38157 m!147957))

(assert (=> b!126797 m!147467))

(declare-fun m!147959 () Bool)

(assert (=> b!126797 m!147959))

(assert (=> b!126797 m!147467))

(declare-fun m!147961 () Bool)

(assert (=> b!126797 m!147961))

(assert (=> b!126797 m!147961))

(declare-fun m!147963 () Bool)

(assert (=> b!126797 m!147963))

(assert (=> b!126799 m!147467))

(assert (=> b!126799 m!147961))

(assert (=> b!126799 m!147961))

(assert (=> b!126799 m!147963))

(assert (=> b!126700 d!38157))

(declare-fun d!38159 () Bool)

(assert (=> d!38159 (= (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!402 (getValueByKey!166 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5238 () Bool)

(assert (= bs!5238 d!38159))

(assert (=> bs!5238 m!147591))

(declare-fun m!147965 () Bool)

(assert (=> bs!5238 m!147965))

(assert (=> b!126581 d!38159))

(assert (=> b!126581 d!38133))

(assert (=> b!126626 d!38091))

(declare-fun d!38161 () Bool)

(assert (=> d!38161 (= (apply!111 lt!65453 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1455 (getValueByKey!166 (toList!858 lt!65453) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5239 () Bool)

(assert (= bs!5239 d!38161))

(assert (=> bs!5239 m!147891))

(assert (=> bs!5239 m!147891))

(declare-fun m!147967 () Bool)

(assert (=> bs!5239 m!147967))

(assert (=> b!126657 d!38161))

(assert (=> d!38081 d!38139))

(declare-fun d!38163 () Bool)

(declare-fun res!61323 () Bool)

(declare-fun e!82807 () Bool)

(assert (=> d!38163 (=> res!61323 e!82807)))

(assert (=> d!38163 (= res!61323 (and ((_ is Cons!1715) (toList!858 lt!65101)) (= (_1!1294 (h!2317 (toList!858 lt!65101))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!38163 (= (containsKey!170 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000) e!82807)))

(declare-fun b!126800 () Bool)

(declare-fun e!82808 () Bool)

(assert (=> b!126800 (= e!82807 e!82808)))

(declare-fun res!61324 () Bool)

(assert (=> b!126800 (=> (not res!61324) (not e!82808))))

(assert (=> b!126800 (= res!61324 (and (or (not ((_ is Cons!1715) (toList!858 lt!65101))) (bvsle (_1!1294 (h!2317 (toList!858 lt!65101))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!65101)) (bvslt (_1!1294 (h!2317 (toList!858 lt!65101))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!126801 () Bool)

(assert (=> b!126801 (= e!82808 (containsKey!170 (t!6078 (toList!858 lt!65101)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!38163 (not res!61323)) b!126800))

(assert (= (and b!126800 res!61324) b!126801))

(declare-fun m!147969 () Bool)

(assert (=> b!126801 m!147969))

(assert (=> d!38065 d!38163))

(declare-fun d!38165 () Bool)

(assert (=> d!38165 (= (isDefined!120 (getValueByKey!166 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194)))) (not (isEmpty!402 (getValueByKey!166 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))))

(declare-fun bs!5240 () Bool)

(assert (= bs!5240 d!38165))

(assert (=> bs!5240 m!147813))

(declare-fun m!147971 () Bool)

(assert (=> bs!5240 m!147971))

(assert (=> b!126691 d!38165))

(declare-fun b!126805 () Bool)

(declare-fun e!82810 () Option!172)

(assert (=> b!126805 (= e!82810 None!170)))

(declare-fun c!23197 () Bool)

(declare-fun d!38167 () Bool)

(assert (=> d!38167 (= c!23197 (and ((_ is Cons!1715) (toList!858 call!13595)) (= (_1!1294 (h!2317 (toList!858 call!13595))) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194)))))))

(declare-fun e!82809 () Option!172)

(assert (=> d!38167 (= (getValueByKey!166 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))) e!82809)))

(declare-fun b!126804 () Bool)

(assert (=> b!126804 (= e!82810 (getValueByKey!166 (t!6078 (toList!858 call!13595)) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(declare-fun b!126802 () Bool)

(assert (=> b!126802 (= e!82809 (Some!171 (_2!1294 (h!2317 (toList!858 call!13595)))))))

(declare-fun b!126803 () Bool)

(assert (=> b!126803 (= e!82809 e!82810)))

(declare-fun c!23198 () Bool)

(assert (=> b!126803 (= c!23198 (and ((_ is Cons!1715) (toList!858 call!13595)) (not (= (_1!1294 (h!2317 (toList!858 call!13595))) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))))

(assert (= (and d!38167 c!23197) b!126802))

(assert (= (and d!38167 (not c!23197)) b!126803))

(assert (= (and b!126803 c!23198) b!126804))

(assert (= (and b!126803 (not c!23198)) b!126805))

(assert (=> b!126804 m!147229))

(declare-fun m!147973 () Bool)

(assert (=> b!126804 m!147973))

(assert (=> b!126691 d!38167))

(assert (=> b!126654 d!38153))

(declare-fun d!38169 () Bool)

(declare-fun e!82811 () Bool)

(assert (=> d!38169 e!82811))

(declare-fun res!61328 () Bool)

(assert (=> d!38169 (=> (not res!61328) (not e!82811))))

(declare-fun lt!65570 () ListLongMap!1685)

(assert (=> d!38169 (= res!61328 (not (contains!877 lt!65570 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!82815 () ListLongMap!1685)

(assert (=> d!38169 (= lt!65570 e!82815)))

(declare-fun c!23202 () Bool)

(assert (=> d!38169 (= c!23202 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(assert (=> d!38169 (validMask!0 (mask!7039 (v!3122 (underlying!438 thiss!992))))))

(assert (=> d!38169 (= (getCurrentListMapNoExtraKeys!132 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))) lt!65570)))

(declare-fun b!126806 () Bool)

(declare-fun e!82816 () ListLongMap!1685)

(declare-fun call!13678 () ListLongMap!1685)

(assert (=> b!126806 (= e!82816 call!13678)))

(declare-fun b!126807 () Bool)

(assert (=> b!126807 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(assert (=> b!126807 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2489 (_values!2766 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun e!82817 () Bool)

(assert (=> b!126807 (= e!82817 (= (apply!111 lt!65570 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!126808 () Bool)

(declare-fun e!82812 () Bool)

(declare-fun e!82813 () Bool)

(assert (=> b!126808 (= e!82812 e!82813)))

(declare-fun c!23201 () Bool)

(assert (=> b!126808 (= c!23201 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!126809 () Bool)

(assert (=> b!126809 (= e!82813 (= lt!65570 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!126810 () Bool)

(declare-fun e!82814 () Bool)

(assert (=> b!126810 (= e!82814 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!126810 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!126811 () Bool)

(assert (=> b!126811 (= e!82812 e!82817)))

(assert (=> b!126811 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun res!61326 () Bool)

(assert (=> b!126811 (= res!61326 (contains!877 lt!65570 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!126811 (=> (not res!61326) (not e!82817))))

(declare-fun b!126812 () Bool)

(declare-fun res!61327 () Bool)

(assert (=> b!126812 (=> (not res!61327) (not e!82811))))

(assert (=> b!126812 (= res!61327 (not (contains!877 lt!65570 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!126813 () Bool)

(assert (=> b!126813 (= e!82815 (ListLongMap!1686 Nil!1716))))

(declare-fun b!126814 () Bool)

(assert (=> b!126814 (= e!82811 e!82812)))

(declare-fun c!23199 () Bool)

(assert (=> b!126814 (= c!23199 e!82814)))

(declare-fun res!61325 () Bool)

(assert (=> b!126814 (=> (not res!61325) (not e!82814))))

(assert (=> b!126814 (= res!61325 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!126815 () Bool)

(assert (=> b!126815 (= e!82813 (isEmpty!401 lt!65570))))

(declare-fun b!126816 () Bool)

(assert (=> b!126816 (= e!82815 e!82816)))

(declare-fun c!23200 () Bool)

(assert (=> b!126816 (= c!23200 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!126817 () Bool)

(declare-fun lt!65571 () Unit!3936)

(declare-fun lt!65567 () Unit!3936)

(assert (=> b!126817 (= lt!65571 lt!65567)))

(declare-fun lt!65566 () ListLongMap!1685)

(declare-fun lt!65569 () (_ BitVec 64))

(declare-fun lt!65568 () (_ BitVec 64))

(declare-fun lt!65565 () V!3435)

(assert (=> b!126817 (not (contains!877 (+!165 lt!65566 (tuple2!2569 lt!65568 lt!65565)) lt!65569))))

(assert (=> b!126817 (= lt!65567 (addStillNotContains!58 lt!65566 lt!65568 lt!65565 lt!65569))))

(assert (=> b!126817 (= lt!65569 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!126817 (= lt!65565 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!126817 (= lt!65568 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!126817 (= lt!65566 call!13678)))

(assert (=> b!126817 (= e!82816 (+!165 call!13678 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!13675 () Bool)

(assert (=> bm!13675 (= call!13678 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (_values!2766 (v!3122 (underlying!438 thiss!992))) (mask!7039 (v!3122 (underlying!438 thiss!992))) (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) (minValue!2646 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992)))))))

(assert (= (and d!38169 c!23202) b!126813))

(assert (= (and d!38169 (not c!23202)) b!126816))

(assert (= (and b!126816 c!23200) b!126817))

(assert (= (and b!126816 (not c!23200)) b!126806))

(assert (= (or b!126817 b!126806) bm!13675))

(assert (= (and d!38169 res!61328) b!126812))

(assert (= (and b!126812 res!61327) b!126814))

(assert (= (and b!126814 res!61325) b!126810))

(assert (= (and b!126814 c!23199) b!126811))

(assert (= (and b!126814 (not c!23199)) b!126808))

(assert (= (and b!126811 res!61326) b!126807))

(assert (= (and b!126808 c!23201) b!126809))

(assert (= (and b!126808 (not c!23201)) b!126815))

(declare-fun b_lambda!5613 () Bool)

(assert (=> (not b_lambda!5613) (not b!126807)))

(assert (=> b!126807 t!6075))

(declare-fun b_and!7817 () Bool)

(assert (= b_and!7813 (and (=> t!6075 result!3845) b_and!7817)))

(assert (=> b!126807 t!6077))

(declare-fun b_and!7819 () Bool)

(assert (= b_and!7815 (and (=> t!6077 result!3849) b_and!7819)))

(declare-fun b_lambda!5615 () Bool)

(assert (=> (not b_lambda!5615) (not b!126817)))

(assert (=> b!126817 t!6075))

(declare-fun b_and!7821 () Bool)

(assert (= b_and!7817 (and (=> t!6075 result!3845) b_and!7821)))

(assert (=> b!126817 t!6077))

(declare-fun b_and!7823 () Bool)

(assert (= b_and!7819 (and (=> t!6077 result!3849) b_and!7823)))

(declare-fun m!147975 () Bool)

(assert (=> b!126810 m!147975))

(assert (=> b!126810 m!147975))

(declare-fun m!147977 () Bool)

(assert (=> b!126810 m!147977))

(declare-fun m!147979 () Bool)

(assert (=> b!126809 m!147979))

(assert (=> b!126807 m!147091))

(declare-fun m!147981 () Bool)

(assert (=> b!126807 m!147981))

(assert (=> b!126807 m!147981))

(assert (=> b!126807 m!147091))

(declare-fun m!147983 () Bool)

(assert (=> b!126807 m!147983))

(assert (=> b!126807 m!147975))

(declare-fun m!147985 () Bool)

(assert (=> b!126807 m!147985))

(assert (=> b!126807 m!147975))

(assert (=> b!126817 m!147975))

(assert (=> b!126817 m!147091))

(assert (=> b!126817 m!147981))

(declare-fun m!147987 () Bool)

(assert (=> b!126817 m!147987))

(assert (=> b!126817 m!147981))

(assert (=> b!126817 m!147091))

(assert (=> b!126817 m!147983))

(declare-fun m!147989 () Bool)

(assert (=> b!126817 m!147989))

(declare-fun m!147991 () Bool)

(assert (=> b!126817 m!147991))

(assert (=> b!126817 m!147987))

(declare-fun m!147993 () Bool)

(assert (=> b!126817 m!147993))

(declare-fun m!147995 () Bool)

(assert (=> d!38169 m!147995))

(assert (=> d!38169 m!147113))

(declare-fun m!147997 () Bool)

(assert (=> b!126815 m!147997))

(assert (=> b!126811 m!147975))

(assert (=> b!126811 m!147975))

(declare-fun m!147999 () Bool)

(assert (=> b!126811 m!147999))

(declare-fun m!148001 () Bool)

(assert (=> b!126812 m!148001))

(assert (=> b!126816 m!147975))

(assert (=> b!126816 m!147975))

(assert (=> b!126816 m!147977))

(assert (=> bm!13675 m!147979))

(assert (=> bm!13609 d!38169))

(assert (=> d!38089 d!38071))

(assert (=> d!38089 d!38073))

(declare-fun d!38171 () Bool)

(assert (=> d!38171 (isDefined!120 (getValueByKey!166 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> d!38171 true))

(declare-fun _$12!390 () Unit!3936)

(assert (=> d!38171 (= (choose!772 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) _$12!390)))

(declare-fun bs!5241 () Bool)

(assert (= bs!5241 d!38171))

(assert (=> bs!5241 m!147095))

(assert (=> bs!5241 m!147223))

(assert (=> bs!5241 m!147223))

(assert (=> bs!5241 m!147225))

(assert (=> d!38089 d!38171))

(declare-fun d!38173 () Bool)

(declare-fun res!61333 () Bool)

(declare-fun e!82822 () Bool)

(assert (=> d!38173 (=> res!61333 e!82822)))

(assert (=> d!38173 (= res!61333 (or ((_ is Nil!1716) (toList!858 lt!65045)) ((_ is Nil!1716) (t!6078 (toList!858 lt!65045)))))))

(assert (=> d!38173 (= (isStrictlySorted!312 (toList!858 lt!65045)) e!82822)))

(declare-fun b!126822 () Bool)

(declare-fun e!82823 () Bool)

(assert (=> b!126822 (= e!82822 e!82823)))

(declare-fun res!61334 () Bool)

(assert (=> b!126822 (=> (not res!61334) (not e!82823))))

(assert (=> b!126822 (= res!61334 (bvslt (_1!1294 (h!2317 (toList!858 lt!65045))) (_1!1294 (h!2317 (t!6078 (toList!858 lt!65045))))))))

(declare-fun b!126823 () Bool)

(assert (=> b!126823 (= e!82823 (isStrictlySorted!312 (t!6078 (toList!858 lt!65045))))))

(assert (= (and d!38173 (not res!61333)) b!126822))

(assert (= (and b!126822 res!61334) b!126823))

(declare-fun m!148003 () Bool)

(assert (=> b!126823 m!148003))

(assert (=> d!38089 d!38173))

(declare-fun d!38175 () Bool)

(assert (=> d!38175 (= (isDefined!120 (getValueByKey!166 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))) (not (isEmpty!402 (getValueByKey!166 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))))

(declare-fun bs!5242 () Bool)

(assert (= bs!5242 d!38175))

(assert (=> bs!5242 m!147485))

(declare-fun m!148005 () Bool)

(assert (=> bs!5242 m!148005))

(assert (=> b!126444 d!38175))

(declare-fun b!126827 () Bool)

(declare-fun e!82825 () Option!172)

(assert (=> b!126827 (= e!82825 None!170)))

(declare-fun c!23203 () Bool)

(declare-fun d!38177 () Bool)

(assert (=> d!38177 (= c!23203 (and ((_ is Cons!1715) (toList!858 e!82524)) (= (_1!1294 (h!2317 (toList!858 e!82524))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(declare-fun e!82824 () Option!172)

(assert (=> d!38177 (= (getValueByKey!166 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) e!82824)))

(declare-fun b!126826 () Bool)

(assert (=> b!126826 (= e!82825 (getValueByKey!166 (t!6078 (toList!858 e!82524)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!126824 () Bool)

(assert (=> b!126824 (= e!82824 (Some!171 (_2!1294 (h!2317 (toList!858 e!82524)))))))

(declare-fun b!126825 () Bool)

(assert (=> b!126825 (= e!82824 e!82825)))

(declare-fun c!23204 () Bool)

(assert (=> b!126825 (= c!23204 (and ((_ is Cons!1715) (toList!858 e!82524)) (not (= (_1!1294 (h!2317 (toList!858 e!82524))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))))

(assert (= (and d!38177 c!23203) b!126824))

(assert (= (and d!38177 (not c!23203)) b!126825))

(assert (= (and b!126825 c!23204) b!126826))

(assert (= (and b!126825 (not c!23204)) b!126827))

(assert (=> b!126826 m!147095))

(declare-fun m!148007 () Bool)

(assert (=> b!126826 m!148007))

(assert (=> b!126444 d!38177))

(declare-fun d!38179 () Bool)

(declare-fun e!82826 () Bool)

(assert (=> d!38179 e!82826))

(declare-fun res!61335 () Bool)

(assert (=> d!38179 (=> (not res!61335) (not e!82826))))

(declare-fun lt!65573 () ListLongMap!1685)

(assert (=> d!38179 (= res!61335 (contains!877 lt!65573 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!65572 () List!1719)

(assert (=> d!38179 (= lt!65573 (ListLongMap!1686 lt!65572))))

(declare-fun lt!65575 () Unit!3936)

(declare-fun lt!65574 () Unit!3936)

(assert (=> d!38179 (= lt!65575 lt!65574)))

(assert (=> d!38179 (= (getValueByKey!166 lt!65572 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38179 (= lt!65574 (lemmaContainsTupThenGetReturnValue!83 lt!65572 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38179 (= lt!65572 (insertStrictlySorted!85 (toList!858 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38179 (= (+!165 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!65573)))

(declare-fun b!126828 () Bool)

(declare-fun res!61336 () Bool)

(assert (=> b!126828 (=> (not res!61336) (not e!82826))))

(assert (=> b!126828 (= res!61336 (= (getValueByKey!166 (toList!858 lt!65573) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!126829 () Bool)

(assert (=> b!126829 (= e!82826 (contains!878 (toList!858 lt!65573) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!38179 res!61335) b!126828))

(assert (= (and b!126828 res!61336) b!126829))

(declare-fun m!148009 () Bool)

(assert (=> d!38179 m!148009))

(declare-fun m!148011 () Bool)

(assert (=> d!38179 m!148011))

(declare-fun m!148013 () Bool)

(assert (=> d!38179 m!148013))

(declare-fun m!148015 () Bool)

(assert (=> d!38179 m!148015))

(declare-fun m!148017 () Bool)

(assert (=> b!126828 m!148017))

(declare-fun m!148019 () Bool)

(assert (=> b!126829 m!148019))

(assert (=> d!38061 d!38179))

(declare-fun bm!13677 () Bool)

(declare-fun call!13684 () ListLongMap!1685)

(declare-fun call!13682 () ListLongMap!1685)

(assert (=> bm!13677 (= call!13684 call!13682)))

(declare-fun bm!13678 () Bool)

(declare-fun call!13680 () ListLongMap!1685)

(declare-fun call!13681 () ListLongMap!1685)

(assert (=> bm!13678 (= call!13680 call!13681)))

(declare-fun b!126830 () Bool)

(declare-fun e!82834 () Unit!3936)

(declare-fun lt!65596 () Unit!3936)

(assert (=> b!126830 (= e!82834 lt!65596)))

(declare-fun lt!65597 () ListLongMap!1685)

(assert (=> b!126830 (= lt!65597 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65586 () (_ BitVec 64))

(assert (=> b!126830 (= lt!65586 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65577 () (_ BitVec 64))

(assert (=> b!126830 (= lt!65577 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65593 () Unit!3936)

(assert (=> b!126830 (= lt!65593 (addStillContains!87 lt!65597 lt!65586 (zeroValue!2646 newMap!16) lt!65577))))

(assert (=> b!126830 (contains!877 (+!165 lt!65597 (tuple2!2569 lt!65586 (zeroValue!2646 newMap!16))) lt!65577)))

(declare-fun lt!65581 () Unit!3936)

(assert (=> b!126830 (= lt!65581 lt!65593)))

(declare-fun lt!65590 () ListLongMap!1685)

(assert (=> b!126830 (= lt!65590 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65595 () (_ BitVec 64))

(assert (=> b!126830 (= lt!65595 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65583 () (_ BitVec 64))

(assert (=> b!126830 (= lt!65583 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65588 () Unit!3936)

(assert (=> b!126830 (= lt!65588 (addApplyDifferent!87 lt!65590 lt!65595 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!65583))))

(assert (=> b!126830 (= (apply!111 (+!165 lt!65590 (tuple2!2569 lt!65595 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!65583) (apply!111 lt!65590 lt!65583))))

(declare-fun lt!65591 () Unit!3936)

(assert (=> b!126830 (= lt!65591 lt!65588)))

(declare-fun lt!65589 () ListLongMap!1685)

(assert (=> b!126830 (= lt!65589 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65584 () (_ BitVec 64))

(assert (=> b!126830 (= lt!65584 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65579 () (_ BitVec 64))

(assert (=> b!126830 (= lt!65579 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65582 () Unit!3936)

(assert (=> b!126830 (= lt!65582 (addApplyDifferent!87 lt!65589 lt!65584 (zeroValue!2646 newMap!16) lt!65579))))

(assert (=> b!126830 (= (apply!111 (+!165 lt!65589 (tuple2!2569 lt!65584 (zeroValue!2646 newMap!16))) lt!65579) (apply!111 lt!65589 lt!65579))))

(declare-fun lt!65585 () Unit!3936)

(assert (=> b!126830 (= lt!65585 lt!65582)))

(declare-fun lt!65592 () ListLongMap!1685)

(assert (=> b!126830 (= lt!65592 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65594 () (_ BitVec 64))

(assert (=> b!126830 (= lt!65594 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65587 () (_ BitVec 64))

(assert (=> b!126830 (= lt!65587 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!126830 (= lt!65596 (addApplyDifferent!87 lt!65592 lt!65594 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!65587))))

(assert (=> b!126830 (= (apply!111 (+!165 lt!65592 (tuple2!2569 lt!65594 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!65587) (apply!111 lt!65592 lt!65587))))

(declare-fun bm!13679 () Bool)

(declare-fun c!23206 () Bool)

(declare-fun call!13685 () ListLongMap!1685)

(declare-fun c!23209 () Bool)

(assert (=> bm!13679 (= call!13681 (+!165 (ite c!23206 call!13685 (ite c!23209 call!13682 call!13684)) (ite (or c!23206 c!23209) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!126831 () Bool)

(declare-fun Unit!3960 () Unit!3936)

(assert (=> b!126831 (= e!82834 Unit!3960)))

(declare-fun bm!13680 () Bool)

(assert (=> bm!13680 (= call!13685 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun b!126832 () Bool)

(declare-fun res!61338 () Bool)

(declare-fun e!82837 () Bool)

(assert (=> b!126832 (=> (not res!61338) (not e!82837))))

(declare-fun e!82839 () Bool)

(assert (=> b!126832 (= res!61338 e!82839)))

(declare-fun c!23207 () Bool)

(assert (=> b!126832 (= c!23207 (not (= (bvand lt!65196 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!126833 () Bool)

(declare-fun e!82831 () Bool)

(declare-fun lt!65578 () ListLongMap!1685)

(assert (=> b!126833 (= e!82831 (= (apply!111 lt!65578 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2646 newMap!16)))))

(declare-fun bm!13681 () Bool)

(declare-fun call!13679 () Bool)

(assert (=> bm!13681 (= call!13679 (contains!877 lt!65578 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126834 () Bool)

(declare-fun e!82828 () ListLongMap!1685)

(assert (=> b!126834 (= e!82828 call!13680)))

(declare-fun b!126835 () Bool)

(declare-fun e!82836 () Bool)

(declare-fun e!82829 () Bool)

(assert (=> b!126835 (= e!82836 e!82829)))

(declare-fun res!61343 () Bool)

(assert (=> b!126835 (=> (not res!61343) (not e!82829))))

(assert (=> b!126835 (= res!61343 (contains!877 lt!65578 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!126835 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126836 () Bool)

(declare-fun c!23210 () Bool)

(assert (=> b!126836 (= c!23210 (and (not (= (bvand lt!65196 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!65196 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!82830 () ListLongMap!1685)

(assert (=> b!126836 (= e!82828 e!82830)))

(declare-fun bm!13676 () Bool)

(declare-fun call!13683 () Bool)

(assert (=> bm!13676 (= call!13683 (contains!877 lt!65578 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!38181 () Bool)

(assert (=> d!38181 e!82837))

(declare-fun res!61342 () Bool)

(assert (=> d!38181 (=> (not res!61342) (not e!82837))))

(assert (=> d!38181 (= res!61342 (or (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))))

(declare-fun lt!65576 () ListLongMap!1685)

(assert (=> d!38181 (= lt!65578 lt!65576)))

(declare-fun lt!65580 () Unit!3936)

(assert (=> d!38181 (= lt!65580 e!82834)))

(declare-fun c!23205 () Bool)

(declare-fun e!82833 () Bool)

(assert (=> d!38181 (= c!23205 e!82833)))

(declare-fun res!61345 () Bool)

(assert (=> d!38181 (=> (not res!61345) (not e!82833))))

(assert (=> d!38181 (= res!61345 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun e!82838 () ListLongMap!1685)

(assert (=> d!38181 (= lt!65576 e!82838)))

(assert (=> d!38181 (= c!23206 (and (not (= (bvand lt!65196 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!65196 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!38181 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38181 (= (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65578)))

(declare-fun b!126837 () Bool)

(declare-fun e!82832 () Bool)

(assert (=> b!126837 (= e!82832 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126838 () Bool)

(assert (=> b!126838 (= e!82829 (= (apply!111 lt!65578 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!126838 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (_values!2766 newMap!16))))))

(assert (=> b!126838 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126839 () Bool)

(assert (=> b!126839 (= e!82839 (not call!13683))))

(declare-fun b!126840 () Bool)

(assert (=> b!126840 (= e!82830 call!13684)))

(declare-fun b!126841 () Bool)

(assert (=> b!126841 (= e!82839 e!82831)))

(declare-fun res!61337 () Bool)

(assert (=> b!126841 (= res!61337 call!13683)))

(assert (=> b!126841 (=> (not res!61337) (not e!82831))))

(declare-fun b!126842 () Bool)

(assert (=> b!126842 (= e!82830 call!13680)))

(declare-fun b!126843 () Bool)

(declare-fun e!82835 () Bool)

(declare-fun e!82827 () Bool)

(assert (=> b!126843 (= e!82835 e!82827)))

(declare-fun res!61341 () Bool)

(assert (=> b!126843 (= res!61341 call!13679)))

(assert (=> b!126843 (=> (not res!61341) (not e!82827))))

(declare-fun b!126844 () Bool)

(assert (=> b!126844 (= e!82837 e!82835)))

(declare-fun c!23208 () Bool)

(assert (=> b!126844 (= c!23208 (not (= (bvand lt!65196 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126845 () Bool)

(assert (=> b!126845 (= e!82838 e!82828)))

(assert (=> b!126845 (= c!23209 (and (not (= (bvand lt!65196 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!65196 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!126846 () Bool)

(assert (=> b!126846 (= e!82833 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126847 () Bool)

(declare-fun res!61344 () Bool)

(assert (=> b!126847 (=> (not res!61344) (not e!82837))))

(assert (=> b!126847 (= res!61344 e!82836)))

(declare-fun res!61339 () Bool)

(assert (=> b!126847 (=> res!61339 e!82836)))

(assert (=> b!126847 (= res!61339 (not e!82832))))

(declare-fun res!61340 () Bool)

(assert (=> b!126847 (=> (not res!61340) (not e!82832))))

(assert (=> b!126847 (= res!61340 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun bm!13682 () Bool)

(assert (=> bm!13682 (= call!13682 call!13685)))

(declare-fun b!126848 () Bool)

(assert (=> b!126848 (= e!82838 (+!165 call!13681 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!126849 () Bool)

(assert (=> b!126849 (= e!82827 (= (apply!111 lt!65578 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!126850 () Bool)

(assert (=> b!126850 (= e!82835 (not call!13679))))

(assert (= (and d!38181 c!23206) b!126848))

(assert (= (and d!38181 (not c!23206)) b!126845))

(assert (= (and b!126845 c!23209) b!126834))

(assert (= (and b!126845 (not c!23209)) b!126836))

(assert (= (and b!126836 c!23210) b!126842))

(assert (= (and b!126836 (not c!23210)) b!126840))

(assert (= (or b!126842 b!126840) bm!13677))

(assert (= (or b!126834 bm!13677) bm!13682))

(assert (= (or b!126834 b!126842) bm!13678))

(assert (= (or b!126848 bm!13682) bm!13680))

(assert (= (or b!126848 bm!13678) bm!13679))

(assert (= (and d!38181 res!61345) b!126846))

(assert (= (and d!38181 c!23205) b!126830))

(assert (= (and d!38181 (not c!23205)) b!126831))

(assert (= (and d!38181 res!61342) b!126847))

(assert (= (and b!126847 res!61340) b!126837))

(assert (= (and b!126847 (not res!61339)) b!126835))

(assert (= (and b!126835 res!61343) b!126838))

(assert (= (and b!126847 res!61344) b!126832))

(assert (= (and b!126832 c!23207) b!126841))

(assert (= (and b!126832 (not c!23207)) b!126839))

(assert (= (and b!126841 res!61337) b!126833))

(assert (= (or b!126841 b!126839) bm!13676))

(assert (= (and b!126832 res!61338) b!126844))

(assert (= (and b!126844 c!23208) b!126843))

(assert (= (and b!126844 (not c!23208)) b!126850))

(assert (= (and b!126843 res!61341) b!126849))

(assert (= (or b!126843 b!126850) bm!13681))

(declare-fun b_lambda!5617 () Bool)

(assert (=> (not b_lambda!5617) (not b!126838)))

(assert (=> b!126838 t!6085))

(declare-fun b_and!7825 () Bool)

(assert (= b_and!7821 (and (=> t!6085 result!3859) b_and!7825)))

(assert (=> b!126838 t!6087))

(declare-fun b_and!7827 () Bool)

(assert (= b_and!7823 (and (=> t!6087 result!3861) b_and!7827)))

(declare-fun m!148021 () Bool)

(assert (=> bm!13679 m!148021))

(assert (=> bm!13680 m!147093))

(declare-fun m!148023 () Bool)

(assert (=> bm!13680 m!148023))

(assert (=> b!126846 m!147467))

(assert (=> b!126846 m!147467))

(assert (=> b!126846 m!147495))

(assert (=> d!38181 m!147475))

(declare-fun m!148025 () Bool)

(assert (=> bm!13676 m!148025))

(declare-fun m!148027 () Bool)

(assert (=> bm!13681 m!148027))

(declare-fun m!148029 () Bool)

(assert (=> b!126848 m!148029))

(declare-fun m!148031 () Bool)

(assert (=> b!126833 m!148031))

(declare-fun m!148033 () Bool)

(assert (=> b!126830 m!148033))

(declare-fun m!148035 () Bool)

(assert (=> b!126830 m!148035))

(declare-fun m!148037 () Bool)

(assert (=> b!126830 m!148037))

(declare-fun m!148039 () Bool)

(assert (=> b!126830 m!148039))

(declare-fun m!148041 () Bool)

(assert (=> b!126830 m!148041))

(declare-fun m!148043 () Bool)

(assert (=> b!126830 m!148043))

(assert (=> b!126830 m!147093))

(assert (=> b!126830 m!148023))

(declare-fun m!148045 () Bool)

(assert (=> b!126830 m!148045))

(assert (=> b!126830 m!147093))

(declare-fun m!148047 () Bool)

(assert (=> b!126830 m!148047))

(assert (=> b!126830 m!147093))

(declare-fun m!148049 () Bool)

(assert (=> b!126830 m!148049))

(assert (=> b!126830 m!148041))

(declare-fun m!148051 () Bool)

(assert (=> b!126830 m!148051))

(assert (=> b!126830 m!148039))

(declare-fun m!148053 () Bool)

(assert (=> b!126830 m!148053))

(declare-fun m!148055 () Bool)

(assert (=> b!126830 m!148055))

(assert (=> b!126830 m!147467))

(assert (=> b!126830 m!148045))

(declare-fun m!148057 () Bool)

(assert (=> b!126830 m!148057))

(declare-fun m!148059 () Bool)

(assert (=> b!126830 m!148059))

(declare-fun m!148061 () Bool)

(assert (=> b!126830 m!148061))

(assert (=> b!126830 m!148059))

(assert (=> b!126837 m!147467))

(assert (=> b!126837 m!147467))

(assert (=> b!126837 m!147495))

(assert (=> b!126838 m!147579))

(assert (=> b!126838 m!147581))

(assert (=> b!126838 m!147583))

(assert (=> b!126838 m!147579))

(assert (=> b!126838 m!147467))

(declare-fun m!148063 () Bool)

(assert (=> b!126838 m!148063))

(assert (=> b!126838 m!147581))

(assert (=> b!126838 m!147467))

(assert (=> b!126835 m!147467))

(assert (=> b!126835 m!147467))

(declare-fun m!148065 () Bool)

(assert (=> b!126835 m!148065))

(declare-fun m!148067 () Bool)

(assert (=> b!126849 m!148067))

(assert (=> d!38061 d!38181))

(assert (=> d!38061 d!38109))

(declare-fun d!38183 () Bool)

(assert (=> d!38183 (= (+!165 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(assert (=> d!38183 true))

(declare-fun _$8!109 () Unit!3936)

(assert (=> d!38183 (= (choose!771 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) lt!65196 (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2783 newMap!16)) _$8!109)))

(declare-fun bs!5243 () Bool)

(assert (= bs!5243 d!38183))

(assert (=> bs!5243 m!147159))

(assert (=> bs!5243 m!147159))

(assert (=> bs!5243 m!147491))

(assert (=> bs!5243 m!147093))

(assert (=> bs!5243 m!147489))

(assert (=> d!38061 d!38183))

(assert (=> d!38061 d!38139))

(declare-fun d!38185 () Bool)

(assert (=> d!38185 (= (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!402 (getValueByKey!166 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5244 () Bool)

(assert (= bs!5244 d!38185))

(assert (=> bs!5244 m!147463))

(declare-fun m!148069 () Bool)

(assert (=> bs!5244 m!148069))

(assert (=> b!126637 d!38185))

(declare-fun b!126854 () Bool)

(declare-fun e!82841 () Option!172)

(assert (=> b!126854 (= e!82841 None!170)))

(declare-fun d!38187 () Bool)

(declare-fun c!23211 () Bool)

(assert (=> d!38187 (= c!23211 (and ((_ is Cons!1715) (toList!858 lt!65101)) (= (_1!1294 (h!2317 (toList!858 lt!65101))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!82840 () Option!172)

(assert (=> d!38187 (= (getValueByKey!166 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000) e!82840)))

(declare-fun b!126853 () Bool)

(assert (=> b!126853 (= e!82841 (getValueByKey!166 (t!6078 (toList!858 lt!65101)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126851 () Bool)

(assert (=> b!126851 (= e!82840 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65101)))))))

(declare-fun b!126852 () Bool)

(assert (=> b!126852 (= e!82840 e!82841)))

(declare-fun c!23212 () Bool)

(assert (=> b!126852 (= c!23212 (and ((_ is Cons!1715) (toList!858 lt!65101)) (not (= (_1!1294 (h!2317 (toList!858 lt!65101))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!38187 c!23211) b!126851))

(assert (= (and d!38187 (not c!23211)) b!126852))

(assert (= (and b!126852 c!23212) b!126853))

(assert (= (and b!126852 (not c!23212)) b!126854))

(declare-fun m!148071 () Bool)

(assert (=> b!126853 m!148071))

(assert (=> b!126637 d!38187))

(declare-fun d!38189 () Bool)

(declare-fun e!82842 () Bool)

(assert (=> d!38189 e!82842))

(declare-fun res!61346 () Bool)

(assert (=> d!38189 (=> (not res!61346) (not e!82842))))

(declare-fun lt!65599 () ListLongMap!1685)

(assert (=> d!38189 (= res!61346 (contains!877 lt!65599 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!65598 () List!1719)

(assert (=> d!38189 (= lt!65599 (ListLongMap!1686 lt!65598))))

(declare-fun lt!65601 () Unit!3936)

(declare-fun lt!65600 () Unit!3936)

(assert (=> d!38189 (= lt!65601 lt!65600)))

(assert (=> d!38189 (= (getValueByKey!166 lt!65598 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38189 (= lt!65600 (lemmaContainsTupThenGetReturnValue!83 lt!65598 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38189 (= lt!65598 (insertStrictlySorted!85 (toList!858 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38189 (= (+!165 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!65599)))

(declare-fun b!126855 () Bool)

(declare-fun res!61347 () Bool)

(assert (=> b!126855 (=> (not res!61347) (not e!82842))))

(assert (=> b!126855 (= res!61347 (= (getValueByKey!166 (toList!858 lt!65599) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!126856 () Bool)

(assert (=> b!126856 (= e!82842 (contains!878 (toList!858 lt!65599) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!38189 res!61346) b!126855))

(assert (= (and b!126855 res!61347) b!126856))

(declare-fun m!148073 () Bool)

(assert (=> d!38189 m!148073))

(declare-fun m!148075 () Bool)

(assert (=> d!38189 m!148075))

(declare-fun m!148077 () Bool)

(assert (=> d!38189 m!148077))

(declare-fun m!148079 () Bool)

(assert (=> d!38189 m!148079))

(declare-fun m!148081 () Bool)

(assert (=> b!126855 m!148081))

(declare-fun m!148083 () Bool)

(assert (=> b!126856 m!148083))

(assert (=> b!126718 d!38189))

(assert (=> b!126718 d!38109))

(assert (=> b!126718 d!38115))

(declare-fun d!38191 () Bool)

(declare-fun e!82844 () Bool)

(assert (=> d!38191 e!82844))

(declare-fun res!61348 () Bool)

(assert (=> d!38191 (=> res!61348 e!82844)))

(declare-fun lt!65603 () Bool)

(assert (=> d!38191 (= res!61348 (not lt!65603))))

(declare-fun lt!65602 () Bool)

(assert (=> d!38191 (= lt!65603 lt!65602)))

(declare-fun lt!65604 () Unit!3936)

(declare-fun e!82843 () Unit!3936)

(assert (=> d!38191 (= lt!65604 e!82843)))

(declare-fun c!23213 () Bool)

(assert (=> d!38191 (= c!23213 lt!65602)))

(assert (=> d!38191 (= lt!65602 (containsKey!170 (toList!858 lt!65320) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38191 (= (contains!877 lt!65320 #b1000000000000000000000000000000000000000000000000000000000000000) lt!65603)))

(declare-fun b!126857 () Bool)

(declare-fun lt!65605 () Unit!3936)

(assert (=> b!126857 (= e!82843 lt!65605)))

(assert (=> b!126857 (= lt!65605 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65320) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!126857 (isDefined!120 (getValueByKey!166 (toList!858 lt!65320) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126858 () Bool)

(declare-fun Unit!3961 () Unit!3936)

(assert (=> b!126858 (= e!82843 Unit!3961)))

(declare-fun b!126859 () Bool)

(assert (=> b!126859 (= e!82844 (isDefined!120 (getValueByKey!166 (toList!858 lt!65320) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38191 c!23213) b!126857))

(assert (= (and d!38191 (not c!23213)) b!126858))

(assert (= (and d!38191 (not res!61348)) b!126859))

(declare-fun m!148085 () Bool)

(assert (=> d!38191 m!148085))

(declare-fun m!148087 () Bool)

(assert (=> b!126857 m!148087))

(declare-fun m!148089 () Bool)

(assert (=> b!126857 m!148089))

(assert (=> b!126857 m!148089))

(declare-fun m!148091 () Bool)

(assert (=> b!126857 m!148091))

(assert (=> b!126859 m!148089))

(assert (=> b!126859 m!148089))

(assert (=> b!126859 m!148091))

(assert (=> bm!13624 d!38191))

(declare-fun b!126861 () Bool)

(declare-fun e!82845 () Bool)

(declare-fun call!13686 () Bool)

(assert (=> b!126861 (= e!82845 call!13686)))

(declare-fun bm!13683 () Bool)

(assert (=> bm!13683 (= call!13686 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4516 (_2!1295 lt!65202)) (mask!7039 (_2!1295 lt!65202))))))

(declare-fun b!126862 () Bool)

(declare-fun e!82846 () Bool)

(assert (=> b!126862 (= e!82846 call!13686)))

(declare-fun b!126863 () Bool)

(assert (=> b!126863 (= e!82845 e!82846)))

(declare-fun lt!65607 () (_ BitVec 64))

(assert (=> b!126863 (= lt!65607 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000))))

(declare-fun lt!65606 () Unit!3936)

(assert (=> b!126863 (= lt!65606 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4516 (_2!1295 lt!65202)) lt!65607 #b00000000000000000000000000000000))))

(assert (=> b!126863 (arrayContainsKey!0 (_keys!4516 (_2!1295 lt!65202)) lt!65607 #b00000000000000000000000000000000)))

(declare-fun lt!65608 () Unit!3936)

(assert (=> b!126863 (= lt!65608 lt!65606)))

(declare-fun res!61349 () Bool)

(assert (=> b!126863 (= res!61349 (= (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000) (_keys!4516 (_2!1295 lt!65202)) (mask!7039 (_2!1295 lt!65202))) (Found!280 #b00000000000000000000000000000000)))))

(assert (=> b!126863 (=> (not res!61349) (not e!82846))))

(declare-fun d!38193 () Bool)

(declare-fun res!61350 () Bool)

(declare-fun e!82847 () Bool)

(assert (=> d!38193 (=> res!61350 e!82847)))

(assert (=> d!38193 (= res!61350 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))))))

(assert (=> d!38193 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4516 (_2!1295 lt!65202)) (mask!7039 (_2!1295 lt!65202))) e!82847)))

(declare-fun b!126860 () Bool)

(assert (=> b!126860 (= e!82847 e!82845)))

(declare-fun c!23214 () Bool)

(assert (=> b!126860 (= c!23214 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000)))))

(assert (= (and d!38193 (not res!61350)) b!126860))

(assert (= (and b!126860 c!23214) b!126863))

(assert (= (and b!126860 (not c!23214)) b!126861))

(assert (= (and b!126863 res!61349) b!126862))

(assert (= (or b!126862 b!126861) bm!13683))

(declare-fun m!148093 () Bool)

(assert (=> bm!13683 m!148093))

(declare-fun m!148095 () Bool)

(assert (=> b!126863 m!148095))

(declare-fun m!148097 () Bool)

(assert (=> b!126863 m!148097))

(declare-fun m!148099 () Bool)

(assert (=> b!126863 m!148099))

(assert (=> b!126863 m!148095))

(declare-fun m!148101 () Bool)

(assert (=> b!126863 m!148101))

(assert (=> b!126860 m!148095))

(assert (=> b!126860 m!148095))

(declare-fun m!148103 () Bool)

(assert (=> b!126860 m!148103))

(assert (=> b!126364 d!38193))

(assert (=> bm!13641 d!38049))

(declare-fun b!126867 () Bool)

(declare-fun e!82849 () Option!172)

(assert (=> b!126867 (= e!82849 None!170)))

(declare-fun d!38195 () Bool)

(declare-fun c!23215 () Bool)

(assert (=> d!38195 (= c!23215 (and ((_ is Cons!1715) (toList!858 lt!65280)) (= (_1!1294 (h!2317 (toList!858 lt!65280))) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!82848 () Option!172)

(assert (=> d!38195 (= (getValueByKey!166 (toList!858 lt!65280) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!82848)))

(declare-fun b!126866 () Bool)

(assert (=> b!126866 (= e!82849 (getValueByKey!166 (t!6078 (toList!858 lt!65280)) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!126864 () Bool)

(assert (=> b!126864 (= e!82848 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65280)))))))

(declare-fun b!126865 () Bool)

(assert (=> b!126865 (= e!82848 e!82849)))

(declare-fun c!23216 () Bool)

(assert (=> b!126865 (= c!23216 (and ((_ is Cons!1715) (toList!858 lt!65280)) (not (= (_1!1294 (h!2317 (toList!858 lt!65280))) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!38195 c!23215) b!126864))

(assert (= (and d!38195 (not c!23215)) b!126865))

(assert (= (and b!126865 c!23216) b!126866))

(assert (= (and b!126865 (not c!23216)) b!126867))

(declare-fun m!148105 () Bool)

(assert (=> b!126866 m!148105))

(assert (=> b!126428 d!38195))

(assert (=> d!38083 d!38139))

(declare-fun d!38197 () Bool)

(declare-fun e!82850 () Bool)

(assert (=> d!38197 e!82850))

(declare-fun res!61354 () Bool)

(assert (=> d!38197 (=> (not res!61354) (not e!82850))))

(declare-fun lt!65614 () ListLongMap!1685)

(assert (=> d!38197 (= res!61354 (not (contains!877 lt!65614 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!82854 () ListLongMap!1685)

(assert (=> d!38197 (= lt!65614 e!82854)))

(declare-fun c!23220 () Bool)

(assert (=> d!38197 (= c!23220 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38197 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38197 (= (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65614)))

(declare-fun b!126868 () Bool)

(declare-fun e!82855 () ListLongMap!1685)

(declare-fun call!13687 () ListLongMap!1685)

(assert (=> b!126868 (= e!82855 call!13687)))

(declare-fun b!126869 () Bool)

(assert (=> b!126869 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> b!126869 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (_values!2766 newMap!16))))))

(declare-fun e!82856 () Bool)

(assert (=> b!126869 (= e!82856 (= (apply!111 lt!65614 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!126870 () Bool)

(declare-fun e!82851 () Bool)

(declare-fun e!82852 () Bool)

(assert (=> b!126870 (= e!82851 e!82852)))

(declare-fun c!23219 () Bool)

(assert (=> b!126870 (= c!23219 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126871 () Bool)

(assert (=> b!126871 (= e!82852 (= lt!65614 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2783 newMap!16))))))

(declare-fun b!126872 () Bool)

(declare-fun e!82853 () Bool)

(assert (=> b!126872 (= e!82853 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!126872 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!126873 () Bool)

(assert (=> b!126873 (= e!82851 e!82856)))

(assert (=> b!126873 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun res!61352 () Bool)

(assert (=> b!126873 (= res!61352 (contains!877 lt!65614 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!126873 (=> (not res!61352) (not e!82856))))

(declare-fun b!126874 () Bool)

(declare-fun res!61353 () Bool)

(assert (=> b!126874 (=> (not res!61353) (not e!82850))))

(assert (=> b!126874 (= res!61353 (not (contains!877 lt!65614 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!126875 () Bool)

(assert (=> b!126875 (= e!82854 (ListLongMap!1686 Nil!1716))))

(declare-fun b!126876 () Bool)

(assert (=> b!126876 (= e!82850 e!82851)))

(declare-fun c!23217 () Bool)

(assert (=> b!126876 (= c!23217 e!82853)))

(declare-fun res!61351 () Bool)

(assert (=> b!126876 (=> (not res!61351) (not e!82853))))

(assert (=> b!126876 (= res!61351 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126877 () Bool)

(assert (=> b!126877 (= e!82852 (isEmpty!401 lt!65614))))

(declare-fun b!126878 () Bool)

(assert (=> b!126878 (= e!82854 e!82855)))

(declare-fun c!23218 () Bool)

(assert (=> b!126878 (= c!23218 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126879 () Bool)

(declare-fun lt!65615 () Unit!3936)

(declare-fun lt!65611 () Unit!3936)

(assert (=> b!126879 (= lt!65615 lt!65611)))

(declare-fun lt!65613 () (_ BitVec 64))

(declare-fun lt!65609 () V!3435)

(declare-fun lt!65612 () (_ BitVec 64))

(declare-fun lt!65610 () ListLongMap!1685)

(assert (=> b!126879 (not (contains!877 (+!165 lt!65610 (tuple2!2569 lt!65612 lt!65609)) lt!65613))))

(assert (=> b!126879 (= lt!65611 (addStillNotContains!58 lt!65610 lt!65612 lt!65609 lt!65613))))

(assert (=> b!126879 (= lt!65613 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!126879 (= lt!65609 (get!1452 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!126879 (= lt!65612 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!126879 (= lt!65610 call!13687)))

(assert (=> b!126879 (= e!82855 (+!165 call!13687 (tuple2!2569 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) (get!1452 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!13684 () Bool)

(assert (=> bm!13684 (= call!13687 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2783 newMap!16)))))

(assert (= (and d!38197 c!23220) b!126875))

(assert (= (and d!38197 (not c!23220)) b!126878))

(assert (= (and b!126878 c!23218) b!126879))

(assert (= (and b!126878 (not c!23218)) b!126868))

(assert (= (or b!126879 b!126868) bm!13684))

(assert (= (and d!38197 res!61354) b!126874))

(assert (= (and b!126874 res!61353) b!126876))

(assert (= (and b!126876 res!61351) b!126872))

(assert (= (and b!126876 c!23217) b!126873))

(assert (= (and b!126876 (not c!23217)) b!126870))

(assert (= (and b!126873 res!61352) b!126869))

(assert (= (and b!126870 c!23219) b!126871))

(assert (= (and b!126870 (not c!23219)) b!126877))

(declare-fun b_lambda!5619 () Bool)

(assert (=> (not b_lambda!5619) (not b!126869)))

(assert (=> b!126869 t!6085))

(declare-fun b_and!7829 () Bool)

(assert (= b_and!7825 (and (=> t!6085 result!3859) b_and!7829)))

(assert (=> b!126869 t!6087))

(declare-fun b_and!7831 () Bool)

(assert (= b_and!7827 (and (=> t!6087 result!3861) b_and!7831)))

(declare-fun b_lambda!5621 () Bool)

(assert (=> (not b_lambda!5621) (not b!126879)))

(assert (=> b!126879 t!6085))

(declare-fun b_and!7833 () Bool)

(assert (= b_and!7829 (and (=> t!6085 result!3859) b_and!7833)))

(assert (=> b!126879 t!6087))

(declare-fun b_and!7835 () Bool)

(assert (= b_and!7831 (and (=> t!6087 result!3861) b_and!7835)))

(assert (=> b!126872 m!147467))

(assert (=> b!126872 m!147467))

(assert (=> b!126872 m!147495))

(declare-fun m!148107 () Bool)

(assert (=> b!126871 m!148107))

(assert (=> b!126869 m!147581))

(assert (=> b!126869 m!147579))

(assert (=> b!126869 m!147579))

(assert (=> b!126869 m!147581))

(assert (=> b!126869 m!147583))

(assert (=> b!126869 m!147467))

(declare-fun m!148109 () Bool)

(assert (=> b!126869 m!148109))

(assert (=> b!126869 m!147467))

(assert (=> b!126879 m!147467))

(assert (=> b!126879 m!147581))

(assert (=> b!126879 m!147579))

(declare-fun m!148111 () Bool)

(assert (=> b!126879 m!148111))

(assert (=> b!126879 m!147579))

(assert (=> b!126879 m!147581))

(assert (=> b!126879 m!147583))

(declare-fun m!148113 () Bool)

(assert (=> b!126879 m!148113))

(declare-fun m!148115 () Bool)

(assert (=> b!126879 m!148115))

(assert (=> b!126879 m!148111))

(declare-fun m!148117 () Bool)

(assert (=> b!126879 m!148117))

(declare-fun m!148119 () Bool)

(assert (=> d!38197 m!148119))

(assert (=> d!38197 m!147475))

(declare-fun m!148121 () Bool)

(assert (=> b!126877 m!148121))

(assert (=> b!126873 m!147467))

(assert (=> b!126873 m!147467))

(declare-fun m!148123 () Bool)

(assert (=> b!126873 m!148123))

(declare-fun m!148125 () Bool)

(assert (=> b!126874 m!148125))

(assert (=> b!126878 m!147467))

(assert (=> b!126878 m!147467))

(assert (=> b!126878 m!147495))

(assert (=> bm!13684 m!148107))

(assert (=> bm!13655 d!38197))

(declare-fun d!38199 () Bool)

(assert (=> d!38199 (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!65616 () Unit!3936)

(assert (=> d!38199 (= lt!65616 (choose!772 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!82857 () Bool)

(assert (=> d!38199 e!82857))

(declare-fun res!61355 () Bool)

(assert (=> d!38199 (=> (not res!61355) (not e!82857))))

(assert (=> d!38199 (= res!61355 (isStrictlySorted!312 (toList!858 lt!65101)))))

(assert (=> d!38199 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000) lt!65616)))

(declare-fun b!126880 () Bool)

(assert (=> b!126880 (= e!82857 (containsKey!170 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!38199 res!61355) b!126880))

(assert (=> d!38199 m!147327))

(assert (=> d!38199 m!147327))

(assert (=> d!38199 m!147503))

(declare-fun m!148127 () Bool)

(assert (=> d!38199 m!148127))

(declare-fun m!148129 () Bool)

(assert (=> d!38199 m!148129))

(assert (=> b!126880 m!147499))

(assert (=> b!126457 d!38199))

(declare-fun d!38201 () Bool)

(assert (=> d!38201 (= (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!402 (getValueByKey!166 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5245 () Bool)

(assert (= bs!5245 d!38201))

(assert (=> bs!5245 m!147327))

(declare-fun m!148131 () Bool)

(assert (=> bs!5245 m!148131))

(assert (=> b!126457 d!38201))

(declare-fun b!126884 () Bool)

(declare-fun e!82859 () Option!172)

(assert (=> b!126884 (= e!82859 None!170)))

(declare-fun d!38203 () Bool)

(declare-fun c!23221 () Bool)

(assert (=> d!38203 (= c!23221 (and ((_ is Cons!1715) (toList!858 lt!65101)) (= (_1!1294 (h!2317 (toList!858 lt!65101))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!82858 () Option!172)

(assert (=> d!38203 (= (getValueByKey!166 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000) e!82858)))

(declare-fun b!126883 () Bool)

(assert (=> b!126883 (= e!82859 (getValueByKey!166 (t!6078 (toList!858 lt!65101)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126881 () Bool)

(assert (=> b!126881 (= e!82858 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65101)))))))

(declare-fun b!126882 () Bool)

(assert (=> b!126882 (= e!82858 e!82859)))

(declare-fun c!23222 () Bool)

(assert (=> b!126882 (= c!23222 (and ((_ is Cons!1715) (toList!858 lt!65101)) (not (= (_1!1294 (h!2317 (toList!858 lt!65101))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!38203 c!23221) b!126881))

(assert (= (and d!38203 (not c!23221)) b!126882))

(assert (= (and b!126882 c!23222) b!126883))

(assert (= (and b!126882 (not c!23222)) b!126884))

(declare-fun m!148133 () Bool)

(assert (=> b!126883 m!148133))

(assert (=> b!126457 d!38203))

(declare-fun d!38205 () Bool)

(assert (=> d!38205 (= (get!1455 (getValueByKey!166 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3125 (getValueByKey!166 (toList!858 lt!65101) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!38009 d!38205))

(assert (=> d!38009 d!38203))

(declare-fun d!38207 () Bool)

(assert (=> d!38207 (= (apply!111 lt!65453 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1455 (getValueByKey!166 (toList!858 lt!65453) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5246 () Bool)

(assert (= bs!5246 d!38207))

(assert (=> bs!5246 m!147467))

(declare-fun m!148135 () Bool)

(assert (=> bs!5246 m!148135))

(assert (=> bs!5246 m!148135))

(declare-fun m!148137 () Bool)

(assert (=> bs!5246 m!148137))

(assert (=> b!126646 d!38207))

(declare-fun c!23223 () Bool)

(declare-fun d!38209 () Bool)

(assert (=> d!38209 (= c!23223 ((_ is ValueCellFull!1077) (select (arr!2225 (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207)) #b00000000000000000000000000000000)))))

(declare-fun e!82860 () V!3435)

(assert (=> d!38209 (= (get!1452 (select (arr!2225 (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!82860)))

(declare-fun b!126885 () Bool)

(assert (=> b!126885 (= e!82860 (get!1453 (select (arr!2225 (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!126886 () Bool)

(assert (=> b!126886 (= e!82860 (get!1454 (select (arr!2225 (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38209 c!23223) b!126885))

(assert (= (and d!38209 (not c!23223)) b!126886))

(assert (=> b!126885 m!147737))

(assert (=> b!126885 m!147581))

(declare-fun m!148139 () Bool)

(assert (=> b!126885 m!148139))

(assert (=> b!126886 m!147737))

(assert (=> b!126886 m!147581))

(declare-fun m!148141 () Bool)

(assert (=> b!126886 m!148141))

(assert (=> b!126646 d!38209))

(declare-fun d!38211 () Bool)

(assert (=> d!38211 (= (isDefined!120 (getValueByKey!166 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))) (not (isEmpty!402 (getValueByKey!166 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))))

(declare-fun bs!5247 () Bool)

(assert (= bs!5247 d!38211))

(assert (=> bs!5247 m!147751))

(declare-fun m!148143 () Bool)

(assert (=> bs!5247 m!148143))

(assert (=> b!126661 d!38211))

(declare-fun b!126890 () Bool)

(declare-fun e!82862 () Option!172)

(assert (=> b!126890 (= e!82862 None!170)))

(declare-fun c!23224 () Bool)

(declare-fun d!38213 () Bool)

(assert (=> d!38213 (= c!23224 (and ((_ is Cons!1715) (toList!858 call!13598)) (= (_1!1294 (h!2317 (toList!858 call!13598))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(declare-fun e!82861 () Option!172)

(assert (=> d!38213 (= (getValueByKey!166 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) e!82861)))

(declare-fun b!126889 () Bool)

(assert (=> b!126889 (= e!82862 (getValueByKey!166 (t!6078 (toList!858 call!13598)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!126887 () Bool)

(assert (=> b!126887 (= e!82861 (Some!171 (_2!1294 (h!2317 (toList!858 call!13598)))))))

(declare-fun b!126888 () Bool)

(assert (=> b!126888 (= e!82861 e!82862)))

(declare-fun c!23225 () Bool)

(assert (=> b!126888 (= c!23225 (and ((_ is Cons!1715) (toList!858 call!13598)) (not (= (_1!1294 (h!2317 (toList!858 call!13598))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))))

(assert (= (and d!38213 c!23224) b!126887))

(assert (= (and d!38213 (not c!23224)) b!126888))

(assert (= (and b!126888 c!23225) b!126889))

(assert (= (and b!126888 (not c!23225)) b!126890))

(assert (=> b!126889 m!147095))

(declare-fun m!148145 () Bool)

(assert (=> b!126889 m!148145))

(assert (=> b!126661 d!38213))

(assert (=> b!126394 d!38057))

(declare-fun b!126909 () Bool)

(declare-fun lt!65622 () SeekEntryResult!280)

(assert (=> b!126909 (and (bvsge (index!3277 lt!65622) #b00000000000000000000000000000000) (bvslt (index!3277 lt!65622) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun res!61363 () Bool)

(assert (=> b!126909 (= res!61363 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3277 lt!65622)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!82876 () Bool)

(assert (=> b!126909 (=> res!61363 e!82876)))

(declare-fun b!126910 () Bool)

(assert (=> b!126910 (and (bvsge (index!3277 lt!65622) #b00000000000000000000000000000000) (bvslt (index!3277 lt!65622) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun res!61364 () Bool)

(assert (=> b!126910 (= res!61364 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3277 lt!65622)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> b!126910 (=> res!61364 e!82876)))

(declare-fun e!82877 () Bool)

(assert (=> b!126910 (= e!82877 e!82876)))

(declare-fun e!82875 () SeekEntryResult!280)

(declare-fun b!126911 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!126911 (= e!82875 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (mask!7039 newMap!16)) #b00000000000000000000000000000000 (mask!7039 newMap!16)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(declare-fun b!126912 () Bool)

(declare-fun e!82874 () SeekEntryResult!280)

(assert (=> b!126912 (= e!82874 (Intermediate!280 true (toIndex!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (mask!7039 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!38215 () Bool)

(declare-fun e!82873 () Bool)

(assert (=> d!38215 e!82873))

(declare-fun c!23232 () Bool)

(assert (=> d!38215 (= c!23232 (and ((_ is Intermediate!280) lt!65622) (undefined!1092 lt!65622)))))

(assert (=> d!38215 (= lt!65622 e!82874)))

(declare-fun c!23234 () Bool)

(assert (=> d!38215 (= c!23234 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!65621 () (_ BitVec 64))

(assert (=> d!38215 (= lt!65621 (select (arr!2224 (_keys!4516 newMap!16)) (toIndex!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (mask!7039 newMap!16))))))

(assert (=> d!38215 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38215 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (mask!7039 newMap!16)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)) lt!65622)))

(declare-fun b!126913 () Bool)

(assert (=> b!126913 (= e!82873 (bvsge (x!14973 lt!65622) #b01111111111111111111111111111110))))

(declare-fun b!126914 () Bool)

(assert (=> b!126914 (= e!82874 e!82875)))

(declare-fun c!23233 () Bool)

(assert (=> b!126914 (= c!23233 (or (= lt!65621 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (= (bvadd lt!65621 lt!65621) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!126915 () Bool)

(assert (=> b!126915 (and (bvsge (index!3277 lt!65622) #b00000000000000000000000000000000) (bvslt (index!3277 lt!65622) (size!2488 (_keys!4516 newMap!16))))))

(assert (=> b!126915 (= e!82876 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3277 lt!65622)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126916 () Bool)

(assert (=> b!126916 (= e!82873 e!82877)))

(declare-fun res!61362 () Bool)

(assert (=> b!126916 (= res!61362 (and ((_ is Intermediate!280) lt!65622) (not (undefined!1092 lt!65622)) (bvslt (x!14973 lt!65622) #b01111111111111111111111111111110) (bvsge (x!14973 lt!65622) #b00000000000000000000000000000000) (bvsge (x!14973 lt!65622) #b00000000000000000000000000000000)))))

(assert (=> b!126916 (=> (not res!61362) (not e!82877))))

(declare-fun b!126917 () Bool)

(assert (=> b!126917 (= e!82875 (Intermediate!280 false (toIndex!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (mask!7039 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!38215 c!23234) b!126912))

(assert (= (and d!38215 (not c!23234)) b!126914))

(assert (= (and b!126914 c!23233) b!126917))

(assert (= (and b!126914 (not c!23233)) b!126911))

(assert (= (and d!38215 c!23232) b!126913))

(assert (= (and d!38215 (not c!23232)) b!126916))

(assert (= (and b!126916 res!61362) b!126910))

(assert (= (and b!126910 (not res!61364)) b!126909))

(assert (= (and b!126909 (not res!61363)) b!126915))

(assert (=> b!126911 m!147527))

(declare-fun m!148147 () Bool)

(assert (=> b!126911 m!148147))

(assert (=> b!126911 m!148147))

(assert (=> b!126911 m!147095))

(declare-fun m!148149 () Bool)

(assert (=> b!126911 m!148149))

(declare-fun m!148151 () Bool)

(assert (=> b!126910 m!148151))

(assert (=> b!126915 m!148151))

(assert (=> d!38215 m!147527))

(declare-fun m!148153 () Bool)

(assert (=> d!38215 m!148153))

(assert (=> d!38215 m!147475))

(assert (=> b!126909 m!148151))

(assert (=> d!38077 d!38215))

(declare-fun d!38217 () Bool)

(declare-fun lt!65628 () (_ BitVec 32))

(declare-fun lt!65627 () (_ BitVec 32))

(assert (=> d!38217 (= lt!65628 (bvmul (bvxor lt!65627 (bvlshr lt!65627 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!38217 (= lt!65627 ((_ extract 31 0) (bvand (bvxor (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (bvlshr (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!38217 (and (bvsge (mask!7039 newMap!16) #b00000000000000000000000000000000) (let ((res!61365 (let ((h!2319 ((_ extract 31 0) (bvand (bvxor (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (bvlshr (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15076 (bvmul (bvxor h!2319 (bvlshr h!2319 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15076 (bvlshr x!15076 #b00000000000000000000000000001101)) (mask!7039 newMap!16)))))) (and (bvslt res!61365 (bvadd (mask!7039 newMap!16) #b00000000000000000000000000000001)) (bvsge res!61365 #b00000000000000000000000000000000))))))

(assert (=> d!38217 (= (toIndex!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (mask!7039 newMap!16)) (bvand (bvxor lt!65628 (bvlshr lt!65628 #b00000000000000000000000000001101)) (mask!7039 newMap!16)))))

(assert (=> d!38077 d!38217))

(assert (=> d!38077 d!38139))

(declare-fun lt!65629 () Bool)

(declare-fun d!38219 () Bool)

(assert (=> d!38219 (= lt!65629 (select (content!124 (toList!858 lt!65444)) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!82879 () Bool)

(assert (=> d!38219 (= lt!65629 e!82879)))

(declare-fun res!61366 () Bool)

(assert (=> d!38219 (=> (not res!61366) (not e!82879))))

(assert (=> d!38219 (= res!61366 ((_ is Cons!1715) (toList!858 lt!65444)))))

(assert (=> d!38219 (= (contains!878 (toList!858 lt!65444) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!65629)))

(declare-fun b!126918 () Bool)

(declare-fun e!82878 () Bool)

(assert (=> b!126918 (= e!82879 e!82878)))

(declare-fun res!61367 () Bool)

(assert (=> b!126918 (=> res!61367 e!82878)))

(assert (=> b!126918 (= res!61367 (= (h!2317 (toList!858 lt!65444)) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!126919 () Bool)

(assert (=> b!126919 (= e!82878 (contains!878 (t!6078 (toList!858 lt!65444)) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!38219 res!61366) b!126918))

(assert (= (and b!126918 (not res!61367)) b!126919))

(declare-fun m!148155 () Bool)

(assert (=> d!38219 m!148155))

(declare-fun m!148157 () Bool)

(assert (=> d!38219 m!148157))

(declare-fun m!148159 () Bool)

(assert (=> b!126919 m!148159))

(assert (=> b!126634 d!38219))

(declare-fun d!38221 () Bool)

(assert (=> d!38221 (= (apply!111 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65102) (apply!111 lt!65112 lt!65102))))

(assert (=> d!38221 true))

(declare-fun _$34!947 () Unit!3936)

(assert (=> d!38221 (= (choose!768 lt!65112 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65102) _$34!947)))

(declare-fun bs!5248 () Bool)

(assert (= bs!5248 d!38221))

(assert (=> bs!5248 m!147185))

(assert (=> bs!5248 m!147185))

(assert (=> bs!5248 m!147195))

(assert (=> bs!5248 m!147177))

(assert (=> d!38021 d!38221))

(declare-fun d!38223 () Bool)

(declare-fun e!82881 () Bool)

(assert (=> d!38223 e!82881))

(declare-fun res!61368 () Bool)

(assert (=> d!38223 (=> res!61368 e!82881)))

(declare-fun lt!65631 () Bool)

(assert (=> d!38223 (= res!61368 (not lt!65631))))

(declare-fun lt!65630 () Bool)

(assert (=> d!38223 (= lt!65631 lt!65630)))

(declare-fun lt!65632 () Unit!3936)

(declare-fun e!82880 () Unit!3936)

(assert (=> d!38223 (= lt!65632 e!82880)))

(declare-fun c!23235 () Bool)

(assert (=> d!38223 (= c!23235 lt!65630)))

(assert (=> d!38223 (= lt!65630 (containsKey!170 (toList!858 lt!65112) lt!65102))))

(assert (=> d!38223 (= (contains!877 lt!65112 lt!65102) lt!65631)))

(declare-fun b!126921 () Bool)

(declare-fun lt!65633 () Unit!3936)

(assert (=> b!126921 (= e!82880 lt!65633)))

(assert (=> b!126921 (= lt!65633 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65112) lt!65102))))

(assert (=> b!126921 (isDefined!120 (getValueByKey!166 (toList!858 lt!65112) lt!65102))))

(declare-fun b!126922 () Bool)

(declare-fun Unit!3962 () Unit!3936)

(assert (=> b!126922 (= e!82880 Unit!3962)))

(declare-fun b!126923 () Bool)

(assert (=> b!126923 (= e!82881 (isDefined!120 (getValueByKey!166 (toList!858 lt!65112) lt!65102)))))

(assert (= (and d!38223 c!23235) b!126921))

(assert (= (and d!38223 (not c!23235)) b!126922))

(assert (= (and d!38223 (not res!61368)) b!126923))

(declare-fun m!148161 () Bool)

(assert (=> d!38223 m!148161))

(declare-fun m!148163 () Bool)

(assert (=> b!126921 m!148163))

(assert (=> b!126921 m!147431))

(assert (=> b!126921 m!147431))

(declare-fun m!148165 () Bool)

(assert (=> b!126921 m!148165))

(assert (=> b!126923 m!147431))

(assert (=> b!126923 m!147431))

(assert (=> b!126923 m!148165))

(assert (=> d!38021 d!38223))

(assert (=> d!38021 d!38035))

(assert (=> d!38021 d!38039))

(assert (=> d!38021 d!38029))

(declare-fun d!38225 () Bool)

(assert (=> d!38225 (= (apply!111 lt!65320 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1455 (getValueByKey!166 (toList!858 lt!65320) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5249 () Bool)

(assert (= bs!5249 d!38225))

(assert (=> bs!5249 m!148089))

(assert (=> bs!5249 m!148089))

(declare-fun m!148167 () Bool)

(assert (=> bs!5249 m!148167))

(assert (=> b!126548 d!38225))

(declare-fun d!38227 () Bool)

(declare-fun e!82882 () Bool)

(assert (=> d!38227 e!82882))

(declare-fun res!61369 () Bool)

(assert (=> d!38227 (=> (not res!61369) (not e!82882))))

(declare-fun lt!65635 () ListLongMap!1685)

(assert (=> d!38227 (= res!61369 (contains!877 lt!65635 (_1!1294 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16)))))))

(declare-fun lt!65634 () List!1719)

(assert (=> d!38227 (= lt!65635 (ListLongMap!1686 lt!65634))))

(declare-fun lt!65637 () Unit!3936)

(declare-fun lt!65636 () Unit!3936)

(assert (=> d!38227 (= lt!65637 lt!65636)))

(assert (=> d!38227 (= (getValueByKey!166 lt!65634 (_1!1294 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38227 (= lt!65636 (lemmaContainsTupThenGetReturnValue!83 lt!65634 (_1!1294 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38227 (= lt!65634 (insertStrictlySorted!85 (toList!858 lt!65533) (_1!1294 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38227 (= (+!165 lt!65533 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16))) lt!65635)))

(declare-fun b!126924 () Bool)

(declare-fun res!61370 () Bool)

(assert (=> b!126924 (=> (not res!61370) (not e!82882))))

(assert (=> b!126924 (= res!61370 (= (getValueByKey!166 (toList!858 lt!65635) (_1!1294 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16))))))))

(declare-fun b!126925 () Bool)

(assert (=> b!126925 (= e!82882 (contains!878 (toList!858 lt!65635) (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16))))))

(assert (= (and d!38227 res!61369) b!126924))

(assert (= (and b!126924 res!61370) b!126925))

(declare-fun m!148169 () Bool)

(assert (=> d!38227 m!148169))

(declare-fun m!148171 () Bool)

(assert (=> d!38227 m!148171))

(declare-fun m!148173 () Bool)

(assert (=> d!38227 m!148173))

(declare-fun m!148175 () Bool)

(assert (=> d!38227 m!148175))

(declare-fun m!148177 () Bool)

(assert (=> b!126924 m!148177))

(declare-fun m!148179 () Bool)

(assert (=> b!126925 m!148179))

(assert (=> b!126695 d!38227))

(declare-fun d!38229 () Bool)

(declare-fun e!82884 () Bool)

(assert (=> d!38229 e!82884))

(declare-fun res!61371 () Bool)

(assert (=> d!38229 (=> res!61371 e!82884)))

(declare-fun lt!65639 () Bool)

(assert (=> d!38229 (= res!61371 (not lt!65639))))

(declare-fun lt!65638 () Bool)

(assert (=> d!38229 (= lt!65639 lt!65638)))

(declare-fun lt!65640 () Unit!3936)

(declare-fun e!82883 () Unit!3936)

(assert (=> d!38229 (= lt!65640 e!82883)))

(declare-fun c!23236 () Bool)

(assert (=> d!38229 (= c!23236 lt!65638)))

(assert (=> d!38229 (= lt!65638 (containsKey!170 (toList!858 (+!165 lt!65533 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16)))) lt!65513))))

(assert (=> d!38229 (= (contains!877 (+!165 lt!65533 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16))) lt!65513) lt!65639)))

(declare-fun b!126926 () Bool)

(declare-fun lt!65641 () Unit!3936)

(assert (=> b!126926 (= e!82883 lt!65641)))

(assert (=> b!126926 (= lt!65641 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 (+!165 lt!65533 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16)))) lt!65513))))

(assert (=> b!126926 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65533 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16)))) lt!65513))))

(declare-fun b!126927 () Bool)

(declare-fun Unit!3963 () Unit!3936)

(assert (=> b!126927 (= e!82883 Unit!3963)))

(declare-fun b!126928 () Bool)

(assert (=> b!126928 (= e!82884 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65533 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16)))) lt!65513)))))

(assert (= (and d!38229 c!23236) b!126926))

(assert (= (and d!38229 (not c!23236)) b!126927))

(assert (= (and d!38229 (not res!61371)) b!126928))

(declare-fun m!148181 () Bool)

(assert (=> d!38229 m!148181))

(declare-fun m!148183 () Bool)

(assert (=> b!126926 m!148183))

(declare-fun m!148185 () Bool)

(assert (=> b!126926 m!148185))

(assert (=> b!126926 m!148185))

(declare-fun m!148187 () Bool)

(assert (=> b!126926 m!148187))

(assert (=> b!126928 m!148185))

(assert (=> b!126928 m!148185))

(assert (=> b!126928 m!148187))

(assert (=> b!126695 d!38229))

(declare-fun d!38231 () Bool)

(assert (=> d!38231 (= (apply!111 lt!65526 lt!65519) (get!1455 (getValueByKey!166 (toList!858 lt!65526) lt!65519)))))

(declare-fun bs!5250 () Bool)

(assert (= bs!5250 d!38231))

(declare-fun m!148189 () Bool)

(assert (=> bs!5250 m!148189))

(assert (=> bs!5250 m!148189))

(declare-fun m!148191 () Bool)

(assert (=> bs!5250 m!148191))

(assert (=> b!126695 d!38231))

(declare-fun d!38233 () Bool)

(assert (=> d!38233 (= (apply!111 (+!165 lt!65526 (tuple2!2569 lt!65531 (minValue!2646 newMap!16))) lt!65519) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65526 (tuple2!2569 lt!65531 (minValue!2646 newMap!16)))) lt!65519)))))

(declare-fun bs!5251 () Bool)

(assert (= bs!5251 d!38233))

(declare-fun m!148193 () Bool)

(assert (=> bs!5251 m!148193))

(assert (=> bs!5251 m!148193))

(declare-fun m!148195 () Bool)

(assert (=> bs!5251 m!148195))

(assert (=> b!126695 d!38233))

(declare-fun d!38235 () Bool)

(assert (=> d!38235 (contains!877 (+!165 lt!65533 (tuple2!2569 lt!65522 (zeroValue!2646 newMap!16))) lt!65513)))

(declare-fun lt!65642 () Unit!3936)

(assert (=> d!38235 (= lt!65642 (choose!769 lt!65533 lt!65522 (zeroValue!2646 newMap!16) lt!65513))))

(assert (=> d!38235 (contains!877 lt!65533 lt!65513)))

(assert (=> d!38235 (= (addStillContains!87 lt!65533 lt!65522 (zeroValue!2646 newMap!16) lt!65513) lt!65642)))

(declare-fun bs!5252 () Bool)

(assert (= bs!5252 d!38235))

(assert (=> bs!5252 m!147861))

(assert (=> bs!5252 m!147861))

(assert (=> bs!5252 m!147863))

(declare-fun m!148197 () Bool)

(assert (=> bs!5252 m!148197))

(declare-fun m!148199 () Bool)

(assert (=> bs!5252 m!148199))

(assert (=> b!126695 d!38235))

(declare-fun d!38237 () Bool)

(assert (=> d!38237 (= (apply!111 lt!65525 lt!65515) (get!1455 (getValueByKey!166 (toList!858 lt!65525) lt!65515)))))

(declare-fun bs!5253 () Bool)

(assert (= bs!5253 d!38237))

(declare-fun m!148201 () Bool)

(assert (=> bs!5253 m!148201))

(assert (=> bs!5253 m!148201))

(declare-fun m!148203 () Bool)

(assert (=> bs!5253 m!148203))

(assert (=> b!126695 d!38237))

(declare-fun d!38239 () Bool)

(assert (=> d!38239 (= (apply!111 (+!165 lt!65526 (tuple2!2569 lt!65531 (minValue!2646 newMap!16))) lt!65519) (apply!111 lt!65526 lt!65519))))

(declare-fun lt!65643 () Unit!3936)

(assert (=> d!38239 (= lt!65643 (choose!768 lt!65526 lt!65531 (minValue!2646 newMap!16) lt!65519))))

(declare-fun e!82885 () Bool)

(assert (=> d!38239 e!82885))

(declare-fun res!61372 () Bool)

(assert (=> d!38239 (=> (not res!61372) (not e!82885))))

(assert (=> d!38239 (= res!61372 (contains!877 lt!65526 lt!65519))))

(assert (=> d!38239 (= (addApplyDifferent!87 lt!65526 lt!65531 (minValue!2646 newMap!16) lt!65519) lt!65643)))

(declare-fun b!126929 () Bool)

(assert (=> b!126929 (= e!82885 (not (= lt!65519 lt!65531)))))

(assert (= (and d!38239 res!61372) b!126929))

(declare-fun m!148205 () Bool)

(assert (=> d!38239 m!148205))

(assert (=> d!38239 m!147845))

(declare-fun m!148207 () Bool)

(assert (=> d!38239 m!148207))

(assert (=> d!38239 m!147847))

(assert (=> d!38239 m!147859))

(assert (=> d!38239 m!147847))

(assert (=> b!126695 d!38239))

(declare-fun d!38241 () Bool)

(assert (=> d!38241 (= (apply!111 (+!165 lt!65525 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16))) lt!65515) (apply!111 lt!65525 lt!65515))))

(declare-fun lt!65644 () Unit!3936)

(assert (=> d!38241 (= lt!65644 (choose!768 lt!65525 lt!65520 (zeroValue!2646 newMap!16) lt!65515))))

(declare-fun e!82886 () Bool)

(assert (=> d!38241 e!82886))

(declare-fun res!61373 () Bool)

(assert (=> d!38241 (=> (not res!61373) (not e!82886))))

(assert (=> d!38241 (= res!61373 (contains!877 lt!65525 lt!65515))))

(assert (=> d!38241 (= (addApplyDifferent!87 lt!65525 lt!65520 (zeroValue!2646 newMap!16) lt!65515) lt!65644)))

(declare-fun b!126930 () Bool)

(assert (=> b!126930 (= e!82886 (not (= lt!65515 lt!65520)))))

(assert (= (and d!38241 res!61373) b!126930))

(declare-fun m!148209 () Bool)

(assert (=> d!38241 m!148209))

(assert (=> d!38241 m!147835))

(declare-fun m!148211 () Bool)

(assert (=> d!38241 m!148211))

(assert (=> d!38241 m!147843))

(assert (=> d!38241 m!147853))

(assert (=> d!38241 m!147843))

(assert (=> b!126695 d!38241))

(declare-fun d!38243 () Bool)

(declare-fun e!82887 () Bool)

(assert (=> d!38243 e!82887))

(declare-fun res!61374 () Bool)

(assert (=> d!38243 (=> (not res!61374) (not e!82887))))

(declare-fun lt!65646 () ListLongMap!1685)

(assert (=> d!38243 (= res!61374 (contains!877 lt!65646 (_1!1294 (tuple2!2569 lt!65531 (minValue!2646 newMap!16)))))))

(declare-fun lt!65645 () List!1719)

(assert (=> d!38243 (= lt!65646 (ListLongMap!1686 lt!65645))))

(declare-fun lt!65648 () Unit!3936)

(declare-fun lt!65647 () Unit!3936)

(assert (=> d!38243 (= lt!65648 lt!65647)))

(assert (=> d!38243 (= (getValueByKey!166 lt!65645 (_1!1294 (tuple2!2569 lt!65531 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65531 (minValue!2646 newMap!16)))))))

(assert (=> d!38243 (= lt!65647 (lemmaContainsTupThenGetReturnValue!83 lt!65645 (_1!1294 (tuple2!2569 lt!65531 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65531 (minValue!2646 newMap!16)))))))

(assert (=> d!38243 (= lt!65645 (insertStrictlySorted!85 (toList!858 lt!65526) (_1!1294 (tuple2!2569 lt!65531 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65531 (minValue!2646 newMap!16)))))))

(assert (=> d!38243 (= (+!165 lt!65526 (tuple2!2569 lt!65531 (minValue!2646 newMap!16))) lt!65646)))

(declare-fun b!126931 () Bool)

(declare-fun res!61375 () Bool)

(assert (=> b!126931 (=> (not res!61375) (not e!82887))))

(assert (=> b!126931 (= res!61375 (= (getValueByKey!166 (toList!858 lt!65646) (_1!1294 (tuple2!2569 lt!65531 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65531 (minValue!2646 newMap!16))))))))

(declare-fun b!126932 () Bool)

(assert (=> b!126932 (= e!82887 (contains!878 (toList!858 lt!65646) (tuple2!2569 lt!65531 (minValue!2646 newMap!16))))))

(assert (= (and d!38243 res!61374) b!126931))

(assert (= (and b!126931 res!61375) b!126932))

(declare-fun m!148213 () Bool)

(assert (=> d!38243 m!148213))

(declare-fun m!148215 () Bool)

(assert (=> d!38243 m!148215))

(declare-fun m!148217 () Bool)

(assert (=> d!38243 m!148217))

(declare-fun m!148219 () Bool)

(assert (=> d!38243 m!148219))

(declare-fun m!148221 () Bool)

(assert (=> b!126931 m!148221))

(declare-fun m!148223 () Bool)

(assert (=> b!126932 m!148223))

(assert (=> b!126695 d!38243))

(declare-fun d!38245 () Bool)

(assert (=> d!38245 (= (apply!111 (+!165 lt!65528 (tuple2!2569 lt!65530 (minValue!2646 newMap!16))) lt!65523) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65528 (tuple2!2569 lt!65530 (minValue!2646 newMap!16)))) lt!65523)))))

(declare-fun bs!5254 () Bool)

(assert (= bs!5254 d!38245))

(declare-fun m!148225 () Bool)

(assert (=> bs!5254 m!148225))

(assert (=> bs!5254 m!148225))

(declare-fun m!148227 () Bool)

(assert (=> bs!5254 m!148227))

(assert (=> b!126695 d!38245))

(declare-fun d!38247 () Bool)

(assert (=> d!38247 (= (apply!111 (+!165 lt!65525 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16))) lt!65515) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65525 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16)))) lt!65515)))))

(declare-fun bs!5255 () Bool)

(assert (= bs!5255 d!38247))

(declare-fun m!148229 () Bool)

(assert (=> bs!5255 m!148229))

(assert (=> bs!5255 m!148229))

(declare-fun m!148231 () Bool)

(assert (=> bs!5255 m!148231))

(assert (=> b!126695 d!38247))

(declare-fun d!38249 () Bool)

(assert (=> d!38249 (= (apply!111 (+!165 lt!65528 (tuple2!2569 lt!65530 (minValue!2646 newMap!16))) lt!65523) (apply!111 lt!65528 lt!65523))))

(declare-fun lt!65649 () Unit!3936)

(assert (=> d!38249 (= lt!65649 (choose!768 lt!65528 lt!65530 (minValue!2646 newMap!16) lt!65523))))

(declare-fun e!82888 () Bool)

(assert (=> d!38249 e!82888))

(declare-fun res!61376 () Bool)

(assert (=> d!38249 (=> (not res!61376) (not e!82888))))

(assert (=> d!38249 (= res!61376 (contains!877 lt!65528 lt!65523))))

(assert (=> d!38249 (= (addApplyDifferent!87 lt!65528 lt!65530 (minValue!2646 newMap!16) lt!65523) lt!65649)))

(declare-fun b!126933 () Bool)

(assert (=> b!126933 (= e!82888 (not (= lt!65523 lt!65530)))))

(assert (= (and d!38249 res!61376) b!126933))

(declare-fun m!148233 () Bool)

(assert (=> d!38249 m!148233))

(assert (=> d!38249 m!147837))

(declare-fun m!148235 () Bool)

(assert (=> d!38249 m!148235))

(assert (=> d!38249 m!147841))

(assert (=> d!38249 m!147855))

(assert (=> d!38249 m!147841))

(assert (=> b!126695 d!38249))

(declare-fun d!38251 () Bool)

(declare-fun e!82889 () Bool)

(assert (=> d!38251 e!82889))

(declare-fun res!61377 () Bool)

(assert (=> d!38251 (=> (not res!61377) (not e!82889))))

(declare-fun lt!65651 () ListLongMap!1685)

(assert (=> d!38251 (= res!61377 (contains!877 lt!65651 (_1!1294 (tuple2!2569 lt!65530 (minValue!2646 newMap!16)))))))

(declare-fun lt!65650 () List!1719)

(assert (=> d!38251 (= lt!65651 (ListLongMap!1686 lt!65650))))

(declare-fun lt!65653 () Unit!3936)

(declare-fun lt!65652 () Unit!3936)

(assert (=> d!38251 (= lt!65653 lt!65652)))

(assert (=> d!38251 (= (getValueByKey!166 lt!65650 (_1!1294 (tuple2!2569 lt!65530 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65530 (minValue!2646 newMap!16)))))))

(assert (=> d!38251 (= lt!65652 (lemmaContainsTupThenGetReturnValue!83 lt!65650 (_1!1294 (tuple2!2569 lt!65530 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65530 (minValue!2646 newMap!16)))))))

(assert (=> d!38251 (= lt!65650 (insertStrictlySorted!85 (toList!858 lt!65528) (_1!1294 (tuple2!2569 lt!65530 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65530 (minValue!2646 newMap!16)))))))

(assert (=> d!38251 (= (+!165 lt!65528 (tuple2!2569 lt!65530 (minValue!2646 newMap!16))) lt!65651)))

(declare-fun b!126934 () Bool)

(declare-fun res!61378 () Bool)

(assert (=> b!126934 (=> (not res!61378) (not e!82889))))

(assert (=> b!126934 (= res!61378 (= (getValueByKey!166 (toList!858 lt!65651) (_1!1294 (tuple2!2569 lt!65530 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65530 (minValue!2646 newMap!16))))))))

(declare-fun b!126935 () Bool)

(assert (=> b!126935 (= e!82889 (contains!878 (toList!858 lt!65651) (tuple2!2569 lt!65530 (minValue!2646 newMap!16))))))

(assert (= (and d!38251 res!61377) b!126934))

(assert (= (and b!126934 res!61378) b!126935))

(declare-fun m!148237 () Bool)

(assert (=> d!38251 m!148237))

(declare-fun m!148239 () Bool)

(assert (=> d!38251 m!148239))

(declare-fun m!148241 () Bool)

(assert (=> d!38251 m!148241))

(declare-fun m!148243 () Bool)

(assert (=> d!38251 m!148243))

(declare-fun m!148245 () Bool)

(assert (=> b!126934 m!148245))

(declare-fun m!148247 () Bool)

(assert (=> b!126935 m!148247))

(assert (=> b!126695 d!38251))

(declare-fun d!38253 () Bool)

(declare-fun e!82890 () Bool)

(assert (=> d!38253 e!82890))

(declare-fun res!61379 () Bool)

(assert (=> d!38253 (=> (not res!61379) (not e!82890))))

(declare-fun lt!65655 () ListLongMap!1685)

(assert (=> d!38253 (= res!61379 (contains!877 lt!65655 (_1!1294 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16)))))))

(declare-fun lt!65654 () List!1719)

(assert (=> d!38253 (= lt!65655 (ListLongMap!1686 lt!65654))))

(declare-fun lt!65657 () Unit!3936)

(declare-fun lt!65656 () Unit!3936)

(assert (=> d!38253 (= lt!65657 lt!65656)))

(assert (=> d!38253 (= (getValueByKey!166 lt!65654 (_1!1294 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38253 (= lt!65656 (lemmaContainsTupThenGetReturnValue!83 lt!65654 (_1!1294 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38253 (= lt!65654 (insertStrictlySorted!85 (toList!858 lt!65525) (_1!1294 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38253 (= (+!165 lt!65525 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16))) lt!65655)))

(declare-fun b!126936 () Bool)

(declare-fun res!61380 () Bool)

(assert (=> b!126936 (=> (not res!61380) (not e!82890))))

(assert (=> b!126936 (= res!61380 (= (getValueByKey!166 (toList!858 lt!65655) (_1!1294 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16))))))))

(declare-fun b!126937 () Bool)

(assert (=> b!126937 (= e!82890 (contains!878 (toList!858 lt!65655) (tuple2!2569 lt!65520 (zeroValue!2646 newMap!16))))))

(assert (= (and d!38253 res!61379) b!126936))

(assert (= (and b!126936 res!61380) b!126937))

(declare-fun m!148249 () Bool)

(assert (=> d!38253 m!148249))

(declare-fun m!148251 () Bool)

(assert (=> d!38253 m!148251))

(declare-fun m!148253 () Bool)

(assert (=> d!38253 m!148253))

(declare-fun m!148255 () Bool)

(assert (=> d!38253 m!148255))

(declare-fun m!148257 () Bool)

(assert (=> b!126936 m!148257))

(declare-fun m!148259 () Bool)

(assert (=> b!126937 m!148259))

(assert (=> b!126695 d!38253))

(declare-fun d!38255 () Bool)

(assert (=> d!38255 (= (apply!111 lt!65528 lt!65523) (get!1455 (getValueByKey!166 (toList!858 lt!65528) lt!65523)))))

(declare-fun bs!5256 () Bool)

(assert (= bs!5256 d!38255))

(declare-fun m!148261 () Bool)

(assert (=> bs!5256 m!148261))

(assert (=> bs!5256 m!148261))

(declare-fun m!148263 () Bool)

(assert (=> bs!5256 m!148263))

(assert (=> b!126695 d!38255))

(declare-fun d!38257 () Bool)

(declare-fun e!82891 () Bool)

(assert (=> d!38257 e!82891))

(declare-fun res!61384 () Bool)

(assert (=> d!38257 (=> (not res!61384) (not e!82891))))

(declare-fun lt!65663 () ListLongMap!1685)

(assert (=> d!38257 (= res!61384 (not (contains!877 lt!65663 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!82895 () ListLongMap!1685)

(assert (=> d!38257 (= lt!65663 e!82895)))

(declare-fun c!23240 () Bool)

(assert (=> d!38257 (= c!23240 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38257 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38257 (= (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65663)))

(declare-fun b!126938 () Bool)

(declare-fun e!82896 () ListLongMap!1685)

(declare-fun call!13688 () ListLongMap!1685)

(assert (=> b!126938 (= e!82896 call!13688)))

(declare-fun b!126939 () Bool)

(assert (=> b!126939 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> b!126939 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))))))))

(declare-fun e!82897 () Bool)

(assert (=> b!126939 (= e!82897 (= (apply!111 lt!65663 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!126940 () Bool)

(declare-fun e!82892 () Bool)

(declare-fun e!82893 () Bool)

(assert (=> b!126940 (= e!82892 e!82893)))

(declare-fun c!23239 () Bool)

(assert (=> b!126940 (= c!23239 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126941 () Bool)

(assert (=> b!126941 (= e!82893 (= lt!65663 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2783 newMap!16))))))

(declare-fun b!126942 () Bool)

(declare-fun e!82894 () Bool)

(assert (=> b!126942 (= e!82894 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!126942 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!126943 () Bool)

(assert (=> b!126943 (= e!82892 e!82897)))

(assert (=> b!126943 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun res!61382 () Bool)

(assert (=> b!126943 (= res!61382 (contains!877 lt!65663 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!126943 (=> (not res!61382) (not e!82897))))

(declare-fun b!126944 () Bool)

(declare-fun res!61383 () Bool)

(assert (=> b!126944 (=> (not res!61383) (not e!82891))))

(assert (=> b!126944 (= res!61383 (not (contains!877 lt!65663 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!126945 () Bool)

(assert (=> b!126945 (= e!82895 (ListLongMap!1686 Nil!1716))))

(declare-fun b!126946 () Bool)

(assert (=> b!126946 (= e!82891 e!82892)))

(declare-fun c!23237 () Bool)

(assert (=> b!126946 (= c!23237 e!82894)))

(declare-fun res!61381 () Bool)

(assert (=> b!126946 (=> (not res!61381) (not e!82894))))

(assert (=> b!126946 (= res!61381 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!126947 () Bool)

(assert (=> b!126947 (= e!82893 (isEmpty!401 lt!65663))))

(declare-fun b!126948 () Bool)

(assert (=> b!126948 (= e!82895 e!82896)))

(declare-fun c!23238 () Bool)

(assert (=> b!126948 (= c!23238 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126949 () Bool)

(declare-fun lt!65664 () Unit!3936)

(declare-fun lt!65660 () Unit!3936)

(assert (=> b!126949 (= lt!65664 lt!65660)))

(declare-fun lt!65661 () (_ BitVec 64))

(declare-fun lt!65658 () V!3435)

(declare-fun lt!65659 () ListLongMap!1685)

(declare-fun lt!65662 () (_ BitVec 64))

(assert (=> b!126949 (not (contains!877 (+!165 lt!65659 (tuple2!2569 lt!65661 lt!65658)) lt!65662))))

(assert (=> b!126949 (= lt!65660 (addStillNotContains!58 lt!65659 lt!65661 lt!65658 lt!65662))))

(assert (=> b!126949 (= lt!65662 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!126949 (= lt!65658 (get!1452 (select (arr!2225 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!126949 (= lt!65661 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!126949 (= lt!65659 call!13688)))

(assert (=> b!126949 (= e!82896 (+!165 call!13688 (tuple2!2569 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) (get!1452 (select (arr!2225 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!13685 () Bool)

(assert (=> bm!13685 (= call!13688 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2783 newMap!16)))))

(assert (= (and d!38257 c!23240) b!126945))

(assert (= (and d!38257 (not c!23240)) b!126948))

(assert (= (and b!126948 c!23238) b!126949))

(assert (= (and b!126948 (not c!23238)) b!126938))

(assert (= (or b!126949 b!126938) bm!13685))

(assert (= (and d!38257 res!61384) b!126944))

(assert (= (and b!126944 res!61383) b!126946))

(assert (= (and b!126946 res!61381) b!126942))

(assert (= (and b!126946 c!23237) b!126943))

(assert (= (and b!126946 (not c!23237)) b!126940))

(assert (= (and b!126943 res!61382) b!126939))

(assert (= (and b!126940 c!23239) b!126941))

(assert (= (and b!126940 (not c!23239)) b!126947))

(declare-fun b_lambda!5623 () Bool)

(assert (=> (not b_lambda!5623) (not b!126939)))

(assert (=> b!126939 t!6085))

(declare-fun b_and!7837 () Bool)

(assert (= b_and!7833 (and (=> t!6085 result!3859) b_and!7837)))

(assert (=> b!126939 t!6087))

(declare-fun b_and!7839 () Bool)

(assert (= b_and!7835 (and (=> t!6087 result!3861) b_and!7839)))

(declare-fun b_lambda!5625 () Bool)

(assert (=> (not b_lambda!5625) (not b!126949)))

(assert (=> b!126949 t!6085))

(declare-fun b_and!7841 () Bool)

(assert (= b_and!7837 (and (=> t!6085 result!3859) b_and!7841)))

(assert (=> b!126949 t!6087))

(declare-fun b_and!7843 () Bool)

(assert (= b_and!7839 (and (=> t!6087 result!3861) b_and!7843)))

(assert (=> b!126942 m!147467))

(assert (=> b!126942 m!147467))

(assert (=> b!126942 m!147495))

(declare-fun m!148265 () Bool)

(assert (=> b!126941 m!148265))

(assert (=> b!126939 m!147581))

(assert (=> b!126939 m!147865))

(assert (=> b!126939 m!147865))

(assert (=> b!126939 m!147581))

(assert (=> b!126939 m!147867))

(assert (=> b!126939 m!147467))

(declare-fun m!148267 () Bool)

(assert (=> b!126939 m!148267))

(assert (=> b!126939 m!147467))

(assert (=> b!126949 m!147467))

(assert (=> b!126949 m!147581))

(assert (=> b!126949 m!147865))

(declare-fun m!148269 () Bool)

(assert (=> b!126949 m!148269))

(assert (=> b!126949 m!147865))

(assert (=> b!126949 m!147581))

(assert (=> b!126949 m!147867))

(declare-fun m!148271 () Bool)

(assert (=> b!126949 m!148271))

(declare-fun m!148273 () Bool)

(assert (=> b!126949 m!148273))

(assert (=> b!126949 m!148269))

(declare-fun m!148275 () Bool)

(assert (=> b!126949 m!148275))

(declare-fun m!148277 () Bool)

(assert (=> d!38257 m!148277))

(assert (=> d!38257 m!147475))

(declare-fun m!148279 () Bool)

(assert (=> b!126947 m!148279))

(assert (=> b!126943 m!147467))

(assert (=> b!126943 m!147467))

(declare-fun m!148281 () Bool)

(assert (=> b!126943 m!148281))

(declare-fun m!148283 () Bool)

(assert (=> b!126944 m!148283))

(assert (=> b!126948 m!147467))

(assert (=> b!126948 m!147467))

(assert (=> b!126948 m!147495))

(assert (=> bm!13685 m!148265))

(assert (=> b!126695 d!38257))

(declare-fun d!38259 () Bool)

(assert (=> d!38259 (= (isEmpty!402 (getValueByKey!166 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))) (not ((_ is Some!171) (getValueByKey!166 (toList!858 lt!65045) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))))

(assert (=> d!38071 d!38259))

(assert (=> b!126545 d!38153))

(declare-fun d!38261 () Bool)

(assert (=> d!38261 (= (+!165 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!530 (_keys!4516 newMap!16) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(assert (=> d!38261 true))

(declare-fun _$5!125 () Unit!3936)

(assert (=> d!38261 (= (choose!776 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (index!3276 lt!65194) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2783 newMap!16)) _$5!125)))

(declare-fun bs!5257 () Bool)

(assert (= bs!5257 d!38261))

(assert (=> bs!5257 m!147159))

(assert (=> bs!5257 m!147159))

(assert (=> bs!5257 m!147667))

(assert (=> bs!5257 m!147227))

(assert (=> bs!5257 m!147231))

(assert (=> d!38117 d!38261))

(assert (=> d!38117 d!38139))

(assert (=> bm!13630 d!38049))

(declare-fun d!38263 () Bool)

(declare-fun lt!65665 () Bool)

(assert (=> d!38263 (= lt!65665 (select (content!124 (toList!858 lt!65244)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun e!82899 () Bool)

(assert (=> d!38263 (= lt!65665 e!82899)))

(declare-fun res!61385 () Bool)

(assert (=> d!38263 (=> (not res!61385) (not e!82899))))

(assert (=> d!38263 (= res!61385 ((_ is Cons!1715) (toList!858 lt!65244)))))

(assert (=> d!38263 (= (contains!878 (toList!858 lt!65244) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65665)))

(declare-fun b!126950 () Bool)

(declare-fun e!82898 () Bool)

(assert (=> b!126950 (= e!82899 e!82898)))

(declare-fun res!61386 () Bool)

(assert (=> b!126950 (=> res!61386 e!82898)))

(assert (=> b!126950 (= res!61386 (= (h!2317 (toList!858 lt!65244)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!126951 () Bool)

(assert (=> b!126951 (= e!82898 (contains!878 (t!6078 (toList!858 lt!65244)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(assert (= (and d!38263 res!61385) b!126950))

(assert (= (and b!126950 (not res!61386)) b!126951))

(declare-fun m!148285 () Bool)

(assert (=> d!38263 m!148285))

(declare-fun m!148287 () Bool)

(assert (=> d!38263 m!148287))

(declare-fun m!148289 () Bool)

(assert (=> b!126951 m!148289))

(assert (=> b!126407 d!38263))

(declare-fun b!126955 () Bool)

(declare-fun e!82901 () Option!172)

(assert (=> b!126955 (= e!82901 None!170)))

(declare-fun c!23241 () Bool)

(declare-fun d!38265 () Bool)

(assert (=> d!38265 (= c!23241 (and ((_ is Cons!1715) (toList!858 lt!65270)) (= (_1!1294 (h!2317 (toList!858 lt!65270))) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!82900 () Option!172)

(assert (=> d!38265 (= (getValueByKey!166 (toList!858 lt!65270) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) e!82900)))

(declare-fun b!126954 () Bool)

(assert (=> b!126954 (= e!82901 (getValueByKey!166 (t!6078 (toList!858 lt!65270)) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!126952 () Bool)

(assert (=> b!126952 (= e!82900 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65270)))))))

(declare-fun b!126953 () Bool)

(assert (=> b!126953 (= e!82900 e!82901)))

(declare-fun c!23242 () Bool)

(assert (=> b!126953 (= c!23242 (and ((_ is Cons!1715) (toList!858 lt!65270)) (not (= (_1!1294 (h!2317 (toList!858 lt!65270))) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38265 c!23241) b!126952))

(assert (= (and d!38265 (not c!23241)) b!126953))

(assert (= (and b!126953 c!23242) b!126954))

(assert (= (and b!126953 (not c!23242)) b!126955))

(declare-fun m!148291 () Bool)

(assert (=> b!126954 m!148291))

(assert (=> b!126422 d!38265))

(declare-fun d!38267 () Bool)

(declare-fun e!82903 () Bool)

(assert (=> d!38267 e!82903))

(declare-fun res!61387 () Bool)

(assert (=> d!38267 (=> res!61387 e!82903)))

(declare-fun lt!65667 () Bool)

(assert (=> d!38267 (= res!61387 (not lt!65667))))

(declare-fun lt!65666 () Bool)

(assert (=> d!38267 (= lt!65667 lt!65666)))

(declare-fun lt!65668 () Unit!3936)

(declare-fun e!82902 () Unit!3936)

(assert (=> d!38267 (= lt!65668 e!82902)))

(declare-fun c!23243 () Bool)

(assert (=> d!38267 (= c!23243 lt!65666)))

(assert (=> d!38267 (= lt!65666 (containsKey!170 (toList!858 lt!65233) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38267 (= (contains!877 lt!65233 #b0000000000000000000000000000000000000000000000000000000000000000) lt!65667)))

(declare-fun b!126956 () Bool)

(declare-fun lt!65669 () Unit!3936)

(assert (=> b!126956 (= e!82902 lt!65669)))

(assert (=> b!126956 (= lt!65669 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65233) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!126956 (isDefined!120 (getValueByKey!166 (toList!858 lt!65233) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!126957 () Bool)

(declare-fun Unit!3964 () Unit!3936)

(assert (=> b!126957 (= e!82902 Unit!3964)))

(declare-fun b!126958 () Bool)

(assert (=> b!126958 (= e!82903 (isDefined!120 (getValueByKey!166 (toList!858 lt!65233) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38267 c!23243) b!126956))

(assert (= (and d!38267 (not c!23243)) b!126957))

(assert (= (and d!38267 (not res!61387)) b!126958))

(declare-fun m!148293 () Bool)

(assert (=> d!38267 m!148293))

(declare-fun m!148295 () Bool)

(assert (=> b!126956 m!148295))

(declare-fun m!148297 () Bool)

(assert (=> b!126956 m!148297))

(assert (=> b!126956 m!148297))

(declare-fun m!148299 () Bool)

(assert (=> b!126956 m!148299))

(assert (=> b!126958 m!148297))

(assert (=> b!126958 m!148297))

(assert (=> b!126958 m!148299))

(assert (=> d!38007 d!38267))

(assert (=> d!38007 d!37991))

(declare-fun d!38269 () Bool)

(assert (=> d!38269 (= (get!1455 (getValueByKey!166 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3125 (getValueByKey!166 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!38047 d!38269))

(assert (=> d!38047 d!38187))

(declare-fun d!38271 () Bool)

(assert (=> d!38271 (= (inRange!0 (ite c!23149 (index!3276 lt!65428) (ite c!23146 (index!3275 lt!65438) (index!3278 lt!65438))) (mask!7039 newMap!16)) (and (bvsge (ite c!23149 (index!3276 lt!65428) (ite c!23146 (index!3275 lt!65438) (index!3278 lt!65438))) #b00000000000000000000000000000000) (bvslt (ite c!23149 (index!3276 lt!65428) (ite c!23146 (index!3275 lt!65438) (index!3278 lt!65438))) (bvadd (mask!7039 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!13643 d!38271))

(declare-fun d!38273 () Bool)

(assert (=> d!38273 (= (apply!111 lt!65514 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1455 (getValueByKey!166 (toList!858 lt!65514) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5258 () Bool)

(assert (= bs!5258 d!38273))

(assert (=> bs!5258 m!147467))

(assert (=> bs!5258 m!147961))

(assert (=> bs!5258 m!147961))

(declare-fun m!148301 () Bool)

(assert (=> bs!5258 m!148301))

(assert (=> b!126703 d!38273))

(declare-fun d!38275 () Bool)

(declare-fun c!23244 () Bool)

(assert (=> d!38275 (= c!23244 ((_ is ValueCellFull!1077) (select (arr!2225 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!82904 () V!3435)

(assert (=> d!38275 (= (get!1452 (select (arr!2225 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!82904)))

(declare-fun b!126959 () Bool)

(assert (=> b!126959 (= e!82904 (get!1453 (select (arr!2225 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!126960 () Bool)

(assert (=> b!126960 (= e!82904 (get!1454 (select (arr!2225 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (index!3276 lt!65194) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38275 c!23244) b!126959))

(assert (= (and d!38275 (not c!23244)) b!126960))

(assert (=> b!126959 m!147865))

(assert (=> b!126959 m!147581))

(declare-fun m!148303 () Bool)

(assert (=> b!126959 m!148303))

(assert (=> b!126960 m!147865))

(assert (=> b!126960 m!147581))

(declare-fun m!148305 () Bool)

(assert (=> b!126960 m!148305))

(assert (=> b!126703 d!38275))

(declare-fun d!38277 () Bool)

(assert (=> d!38277 (isDefined!120 (getValueByKey!166 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun lt!65670 () Unit!3936)

(assert (=> d!38277 (= lt!65670 (choose!772 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun e!82905 () Bool)

(assert (=> d!38277 e!82905))

(declare-fun res!61388 () Bool)

(assert (=> d!38277 (=> (not res!61388) (not e!82905))))

(assert (=> d!38277 (= res!61388 (isStrictlySorted!312 (toList!858 call!13598)))))

(assert (=> d!38277 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) lt!65670)))

(declare-fun b!126961 () Bool)

(assert (=> b!126961 (= e!82905 (containsKey!170 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (= (and d!38277 res!61388) b!126961))

(assert (=> d!38277 m!147095))

(assert (=> d!38277 m!147751))

(assert (=> d!38277 m!147751))

(assert (=> d!38277 m!147753))

(assert (=> d!38277 m!147095))

(declare-fun m!148307 () Bool)

(assert (=> d!38277 m!148307))

(declare-fun m!148309 () Bool)

(assert (=> d!38277 m!148309))

(assert (=> b!126961 m!147095))

(assert (=> b!126961 m!147747))

(assert (=> b!126659 d!38277))

(assert (=> b!126659 d!38211))

(assert (=> b!126659 d!38213))

(declare-fun d!38279 () Bool)

(assert (=> d!38279 (= (inRange!0 (index!3276 lt!65482) (mask!7039 newMap!16)) (and (bvsge (index!3276 lt!65482) #b00000000000000000000000000000000) (bvslt (index!3276 lt!65482) (bvadd (mask!7039 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!126666 d!38279))

(declare-fun d!38281 () Bool)

(assert (=> d!38281 (contains!877 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))

(declare-fun lt!65673 () Unit!3936)

(declare-fun choose!778 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 64) (_ BitVec 32) Int) Unit!3936)

(assert (=> d!38281 (= lt!65673 (choose!778 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(assert (=> d!38281 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38281 (= (lemmaArrayContainsKeyThenInListMap!37 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65673)))

(declare-fun bs!5259 () Bool)

(assert (= bs!5259 d!38281))

(assert (=> bs!5259 m!147159))

(assert (=> bs!5259 m!147159))

(assert (=> bs!5259 m!147095))

(assert (=> bs!5259 m!147621))

(assert (=> bs!5259 m!147095))

(declare-fun m!148311 () Bool)

(assert (=> bs!5259 m!148311))

(assert (=> bs!5259 m!147475))

(assert (=> b!126629 d!38281))

(declare-fun d!38283 () Bool)

(declare-fun e!82907 () Bool)

(assert (=> d!38283 e!82907))

(declare-fun res!61389 () Bool)

(assert (=> d!38283 (=> res!61389 e!82907)))

(declare-fun lt!65675 () Bool)

(assert (=> d!38283 (= res!61389 (not lt!65675))))

(declare-fun lt!65674 () Bool)

(assert (=> d!38283 (= lt!65675 lt!65674)))

(declare-fun lt!65676 () Unit!3936)

(declare-fun e!82906 () Unit!3936)

(assert (=> d!38283 (= lt!65676 e!82906)))

(declare-fun c!23245 () Bool)

(assert (=> d!38283 (= c!23245 lt!65674)))

(assert (=> d!38283 (= lt!65674 (containsKey!170 (toList!858 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> d!38283 (= (contains!877 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) lt!65675)))

(declare-fun b!126962 () Bool)

(declare-fun lt!65677 () Unit!3936)

(assert (=> b!126962 (= e!82906 lt!65677)))

(assert (=> b!126962 (= lt!65677 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> b!126962 (isDefined!120 (getValueByKey!166 (toList!858 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!126963 () Bool)

(declare-fun Unit!3965 () Unit!3936)

(assert (=> b!126963 (= e!82906 Unit!3965)))

(declare-fun b!126964 () Bool)

(assert (=> b!126964 (= e!82907 (isDefined!120 (getValueByKey!166 (toList!858 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(assert (= (and d!38283 c!23245) b!126962))

(assert (= (and d!38283 (not c!23245)) b!126963))

(assert (= (and d!38283 (not res!61389)) b!126964))

(assert (=> d!38283 m!147095))

(declare-fun m!148313 () Bool)

(assert (=> d!38283 m!148313))

(assert (=> b!126962 m!147095))

(declare-fun m!148315 () Bool)

(assert (=> b!126962 m!148315))

(assert (=> b!126962 m!147095))

(declare-fun m!148317 () Bool)

(assert (=> b!126962 m!148317))

(assert (=> b!126962 m!148317))

(declare-fun m!148319 () Bool)

(assert (=> b!126962 m!148319))

(assert (=> b!126964 m!147095))

(assert (=> b!126964 m!148317))

(assert (=> b!126964 m!148317))

(assert (=> b!126964 m!148319))

(assert (=> b!126629 d!38283))

(assert (=> b!126629 d!38109))

(declare-fun d!38285 () Bool)

(declare-fun lt!65680 () Bool)

(declare-fun content!125 (List!1720) (InoxSet (_ BitVec 64)))

(assert (=> d!38285 (= lt!65680 (select (content!125 Nil!1717) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!82912 () Bool)

(assert (=> d!38285 (= lt!65680 e!82912)))

(declare-fun res!61395 () Bool)

(assert (=> d!38285 (=> (not res!61395) (not e!82912))))

(assert (=> d!38285 (= res!61395 ((_ is Cons!1716) Nil!1717))))

(assert (=> d!38285 (= (contains!879 Nil!1717 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) lt!65680)))

(declare-fun b!126969 () Bool)

(declare-fun e!82913 () Bool)

(assert (=> b!126969 (= e!82912 e!82913)))

(declare-fun res!61394 () Bool)

(assert (=> b!126969 (=> res!61394 e!82913)))

(assert (=> b!126969 (= res!61394 (= (h!2318 Nil!1717) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!126970 () Bool)

(assert (=> b!126970 (= e!82913 (contains!879 (t!6083 Nil!1717) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!38285 res!61395) b!126969))

(assert (= (and b!126969 (not res!61394)) b!126970))

(declare-fun m!148321 () Bool)

(assert (=> d!38285 m!148321))

(assert (=> d!38285 m!147467))

(declare-fun m!148323 () Bool)

(assert (=> d!38285 m!148323))

(assert (=> b!126970 m!147467))

(declare-fun m!148325 () Bool)

(assert (=> b!126970 m!148325))

(assert (=> b!126472 d!38285))

(declare-fun d!38287 () Bool)

(declare-fun e!82915 () Bool)

(assert (=> d!38287 e!82915))

(declare-fun res!61396 () Bool)

(assert (=> d!38287 (=> res!61396 e!82915)))

(declare-fun lt!65682 () Bool)

(assert (=> d!38287 (= res!61396 (not lt!65682))))

(declare-fun lt!65681 () Bool)

(assert (=> d!38287 (= lt!65682 lt!65681)))

(declare-fun lt!65683 () Unit!3936)

(declare-fun e!82914 () Unit!3936)

(assert (=> d!38287 (= lt!65683 e!82914)))

(declare-fun c!23246 () Bool)

(assert (=> d!38287 (= c!23246 lt!65681)))

(assert (=> d!38287 (= lt!65681 (containsKey!170 (toList!858 lt!65276) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38287 (= (contains!877 lt!65276 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65682)))

(declare-fun b!126971 () Bool)

(declare-fun lt!65684 () Unit!3936)

(assert (=> b!126971 (= e!82914 lt!65684)))

(assert (=> b!126971 (= lt!65684 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65276) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> b!126971 (isDefined!120 (getValueByKey!166 (toList!858 lt!65276) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!126972 () Bool)

(declare-fun Unit!3966 () Unit!3936)

(assert (=> b!126972 (= e!82914 Unit!3966)))

(declare-fun b!126973 () Bool)

(assert (=> b!126973 (= e!82915 (isDefined!120 (getValueByKey!166 (toList!858 lt!65276) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (= (and d!38287 c!23246) b!126971))

(assert (= (and d!38287 (not c!23246)) b!126972))

(assert (= (and d!38287 (not res!61396)) b!126973))

(declare-fun m!148327 () Bool)

(assert (=> d!38287 m!148327))

(declare-fun m!148329 () Bool)

(assert (=> b!126971 m!148329))

(assert (=> b!126971 m!147447))

(assert (=> b!126971 m!147447))

(declare-fun m!148331 () Bool)

(assert (=> b!126971 m!148331))

(assert (=> b!126973 m!147447))

(assert (=> b!126973 m!147447))

(assert (=> b!126973 m!148331))

(assert (=> d!38043 d!38287))

(declare-fun b!126977 () Bool)

(declare-fun e!82917 () Option!172)

(assert (=> b!126977 (= e!82917 None!170)))

(declare-fun c!23247 () Bool)

(declare-fun d!38289 () Bool)

(assert (=> d!38289 (= c!23247 (and ((_ is Cons!1715) lt!65275) (= (_1!1294 (h!2317 lt!65275)) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!82916 () Option!172)

(assert (=> d!38289 (= (getValueByKey!166 lt!65275 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) e!82916)))

(declare-fun b!126976 () Bool)

(assert (=> b!126976 (= e!82917 (getValueByKey!166 (t!6078 lt!65275) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!126974 () Bool)

(assert (=> b!126974 (= e!82916 (Some!171 (_2!1294 (h!2317 lt!65275))))))

(declare-fun b!126975 () Bool)

(assert (=> b!126975 (= e!82916 e!82917)))

(declare-fun c!23248 () Bool)

(assert (=> b!126975 (= c!23248 (and ((_ is Cons!1715) lt!65275) (not (= (_1!1294 (h!2317 lt!65275)) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38289 c!23247) b!126974))

(assert (= (and d!38289 (not c!23247)) b!126975))

(assert (= (and b!126975 c!23248) b!126976))

(assert (= (and b!126975 (not c!23248)) b!126977))

(declare-fun m!148333 () Bool)

(assert (=> b!126976 m!148333))

(assert (=> d!38043 d!38289))

(declare-fun d!38291 () Bool)

(assert (=> d!38291 (= (getValueByKey!166 lt!65275 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun lt!65685 () Unit!3936)

(assert (=> d!38291 (= lt!65685 (choose!777 lt!65275 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun e!82918 () Bool)

(assert (=> d!38291 e!82918))

(declare-fun res!61397 () Bool)

(assert (=> d!38291 (=> (not res!61397) (not e!82918))))

(assert (=> d!38291 (= res!61397 (isStrictlySorted!312 lt!65275))))

(assert (=> d!38291 (= (lemmaContainsTupThenGetReturnValue!83 lt!65275 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65685)))

(declare-fun b!126978 () Bool)

(declare-fun res!61398 () Bool)

(assert (=> b!126978 (=> (not res!61398) (not e!82918))))

(assert (=> b!126978 (= res!61398 (containsKey!170 lt!65275 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!126979 () Bool)

(assert (=> b!126979 (= e!82918 (contains!878 lt!65275 (tuple2!2569 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (= (and d!38291 res!61397) b!126978))

(assert (= (and b!126978 res!61398) b!126979))

(assert (=> d!38291 m!147441))

(declare-fun m!148335 () Bool)

(assert (=> d!38291 m!148335))

(declare-fun m!148337 () Bool)

(assert (=> d!38291 m!148337))

(declare-fun m!148339 () Bool)

(assert (=> b!126978 m!148339))

(declare-fun m!148341 () Bool)

(assert (=> b!126979 m!148341))

(assert (=> d!38043 d!38291))

(declare-fun b!126980 () Bool)

(declare-fun e!82919 () List!1719)

(declare-fun e!82923 () List!1719)

(assert (=> b!126980 (= e!82919 e!82923)))

(declare-fun c!23251 () Bool)

(assert (=> b!126980 (= c!23251 (and ((_ is Cons!1715) (toList!858 lt!65115)) (= (_1!1294 (h!2317 (toList!858 lt!65115))) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!82921 () List!1719)

(declare-fun b!126981 () Bool)

(assert (=> b!126981 (= e!82921 (insertStrictlySorted!85 (t!6078 (toList!858 lt!65115)) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun bm!13686 () Bool)

(declare-fun call!13691 () List!1719)

(declare-fun call!13689 () List!1719)

(assert (=> bm!13686 (= call!13691 call!13689)))

(declare-fun b!126982 () Bool)

(declare-fun e!82922 () List!1719)

(assert (=> b!126982 (= e!82922 call!13691)))

(declare-fun b!126983 () Bool)

(declare-fun call!13690 () List!1719)

(assert (=> b!126983 (= e!82919 call!13690)))

(declare-fun b!126984 () Bool)

(assert (=> b!126984 (= e!82923 call!13689)))

(declare-fun c!23250 () Bool)

(declare-fun bm!13688 () Bool)

(assert (=> bm!13688 (= call!13690 ($colon$colon!88 e!82921 (ite c!23250 (h!2317 (toList!858 lt!65115)) (tuple2!2569 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(declare-fun c!23252 () Bool)

(assert (=> bm!13688 (= c!23252 c!23250)))

(declare-fun b!126985 () Bool)

(declare-fun res!61400 () Bool)

(declare-fun e!82920 () Bool)

(assert (=> b!126985 (=> (not res!61400) (not e!82920))))

(declare-fun lt!65686 () List!1719)

(assert (=> b!126985 (= res!61400 (containsKey!170 lt!65686 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!126986 () Bool)

(assert (=> b!126986 (= e!82920 (contains!878 lt!65686 (tuple2!2569 (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!126987 () Bool)

(assert (=> b!126987 (= e!82922 call!13691)))

(declare-fun c!23249 () Bool)

(declare-fun b!126988 () Bool)

(assert (=> b!126988 (= e!82921 (ite c!23251 (t!6078 (toList!858 lt!65115)) (ite c!23249 (Cons!1715 (h!2317 (toList!858 lt!65115)) (t!6078 (toList!858 lt!65115))) Nil!1716)))))

(declare-fun b!126989 () Bool)

(assert (=> b!126989 (= c!23249 (and ((_ is Cons!1715) (toList!858 lt!65115)) (bvsgt (_1!1294 (h!2317 (toList!858 lt!65115))) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> b!126989 (= e!82923 e!82922)))

(declare-fun d!38293 () Bool)

(assert (=> d!38293 e!82920))

(declare-fun res!61399 () Bool)

(assert (=> d!38293 (=> (not res!61399) (not e!82920))))

(assert (=> d!38293 (= res!61399 (isStrictlySorted!312 lt!65686))))

(assert (=> d!38293 (= lt!65686 e!82919)))

(assert (=> d!38293 (= c!23250 (and ((_ is Cons!1715) (toList!858 lt!65115)) (bvslt (_1!1294 (h!2317 (toList!858 lt!65115))) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> d!38293 (isStrictlySorted!312 (toList!858 lt!65115))))

(assert (=> d!38293 (= (insertStrictlySorted!85 (toList!858 lt!65115) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65686)))

(declare-fun bm!13687 () Bool)

(assert (=> bm!13687 (= call!13689 call!13690)))

(assert (= (and d!38293 c!23250) b!126983))

(assert (= (and d!38293 (not c!23250)) b!126980))

(assert (= (and b!126980 c!23251) b!126984))

(assert (= (and b!126980 (not c!23251)) b!126989))

(assert (= (and b!126989 c!23249) b!126987))

(assert (= (and b!126989 (not c!23249)) b!126982))

(assert (= (or b!126987 b!126982) bm!13686))

(assert (= (or b!126984 bm!13686) bm!13687))

(assert (= (or b!126983 bm!13687) bm!13688))

(assert (= (and bm!13688 c!23252) b!126981))

(assert (= (and bm!13688 (not c!23252)) b!126988))

(assert (= (and d!38293 res!61399) b!126985))

(assert (= (and b!126985 res!61400) b!126986))

(declare-fun m!148343 () Bool)

(assert (=> bm!13688 m!148343))

(declare-fun m!148345 () Bool)

(assert (=> d!38293 m!148345))

(declare-fun m!148347 () Bool)

(assert (=> d!38293 m!148347))

(declare-fun m!148349 () Bool)

(assert (=> b!126986 m!148349))

(declare-fun m!148351 () Bool)

(assert (=> b!126981 m!148351))

(declare-fun m!148353 () Bool)

(assert (=> b!126985 m!148353))

(assert (=> d!38043 d!38293))

(declare-fun d!38295 () Bool)

(assert (=> d!38295 (= (apply!111 lt!65453 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1455 (getValueByKey!166 (toList!858 lt!65453) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5260 () Bool)

(assert (= bs!5260 d!38295))

(declare-fun m!148355 () Bool)

(assert (=> bs!5260 m!148355))

(assert (=> bs!5260 m!148355))

(declare-fun m!148357 () Bool)

(assert (=> bs!5260 m!148357))

(assert (=> b!126641 d!38295))

(declare-fun d!38297 () Bool)

(declare-fun e!82925 () Bool)

(assert (=> d!38297 e!82925))

(declare-fun res!61401 () Bool)

(assert (=> d!38297 (=> res!61401 e!82925)))

(declare-fun lt!65688 () Bool)

(assert (=> d!38297 (= res!61401 (not lt!65688))))

(declare-fun lt!65687 () Bool)

(assert (=> d!38297 (= lt!65688 lt!65687)))

(declare-fun lt!65689 () Unit!3936)

(declare-fun e!82924 () Unit!3936)

(assert (=> d!38297 (= lt!65689 e!82924)))

(declare-fun c!23253 () Bool)

(assert (=> d!38297 (= c!23253 lt!65687)))

(assert (=> d!38297 (= lt!65687 (containsKey!170 (toList!858 lt!65244) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38297 (= (contains!877 lt!65244 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65688)))

(declare-fun b!126990 () Bool)

(declare-fun lt!65690 () Unit!3936)

(assert (=> b!126990 (= e!82924 lt!65690)))

(assert (=> b!126990 (= lt!65690 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65244) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> b!126990 (isDefined!120 (getValueByKey!166 (toList!858 lt!65244) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!126991 () Bool)

(declare-fun Unit!3967 () Unit!3936)

(assert (=> b!126991 (= e!82924 Unit!3967)))

(declare-fun b!126992 () Bool)

(assert (=> b!126992 (= e!82925 (isDefined!120 (getValueByKey!166 (toList!858 lt!65244) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (= (and d!38297 c!23253) b!126990))

(assert (= (and d!38297 (not c!23253)) b!126991))

(assert (= (and d!38297 (not res!61401)) b!126992))

(declare-fun m!148359 () Bool)

(assert (=> d!38297 m!148359))

(declare-fun m!148361 () Bool)

(assert (=> b!126990 m!148361))

(assert (=> b!126990 m!147339))

(assert (=> b!126990 m!147339))

(declare-fun m!148363 () Bool)

(assert (=> b!126990 m!148363))

(assert (=> b!126992 m!147339))

(assert (=> b!126992 m!147339))

(assert (=> b!126992 m!148363))

(assert (=> d!38011 d!38297))

(declare-fun b!126996 () Bool)

(declare-fun e!82927 () Option!172)

(assert (=> b!126996 (= e!82927 None!170)))

(declare-fun d!38299 () Bool)

(declare-fun c!23254 () Bool)

(assert (=> d!38299 (= c!23254 (and ((_ is Cons!1715) lt!65243) (= (_1!1294 (h!2317 lt!65243)) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!82926 () Option!172)

(assert (=> d!38299 (= (getValueByKey!166 lt!65243 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) e!82926)))

(declare-fun b!126995 () Bool)

(assert (=> b!126995 (= e!82927 (getValueByKey!166 (t!6078 lt!65243) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!126993 () Bool)

(assert (=> b!126993 (= e!82926 (Some!171 (_2!1294 (h!2317 lt!65243))))))

(declare-fun b!126994 () Bool)

(assert (=> b!126994 (= e!82926 e!82927)))

(declare-fun c!23255 () Bool)

(assert (=> b!126994 (= c!23255 (and ((_ is Cons!1715) lt!65243) (not (= (_1!1294 (h!2317 lt!65243)) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38299 c!23254) b!126993))

(assert (= (and d!38299 (not c!23254)) b!126994))

(assert (= (and b!126994 c!23255) b!126995))

(assert (= (and b!126994 (not c!23255)) b!126996))

(declare-fun m!148365 () Bool)

(assert (=> b!126995 m!148365))

(assert (=> d!38011 d!38299))

(declare-fun d!38301 () Bool)

(assert (=> d!38301 (= (getValueByKey!166 lt!65243 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun lt!65691 () Unit!3936)

(assert (=> d!38301 (= lt!65691 (choose!777 lt!65243 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun e!82928 () Bool)

(assert (=> d!38301 e!82928))

(declare-fun res!61402 () Bool)

(assert (=> d!38301 (=> (not res!61402) (not e!82928))))

(assert (=> d!38301 (= res!61402 (isStrictlySorted!312 lt!65243))))

(assert (=> d!38301 (= (lemmaContainsTupThenGetReturnValue!83 lt!65243 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65691)))

(declare-fun b!126997 () Bool)

(declare-fun res!61403 () Bool)

(assert (=> b!126997 (=> (not res!61403) (not e!82928))))

(assert (=> b!126997 (= res!61403 (containsKey!170 lt!65243 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!126998 () Bool)

(assert (=> b!126998 (= e!82928 (contains!878 lt!65243 (tuple2!2569 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (= (and d!38301 res!61402) b!126997))

(assert (= (and b!126997 res!61403) b!126998))

(assert (=> d!38301 m!147333))

(declare-fun m!148367 () Bool)

(assert (=> d!38301 m!148367))

(declare-fun m!148369 () Bool)

(assert (=> d!38301 m!148369))

(declare-fun m!148371 () Bool)

(assert (=> b!126997 m!148371))

(declare-fun m!148373 () Bool)

(assert (=> b!126998 m!148373))

(assert (=> d!38011 d!38301))

(declare-fun b!126999 () Bool)

(declare-fun e!82929 () List!1719)

(declare-fun e!82933 () List!1719)

(assert (=> b!126999 (= e!82929 e!82933)))

(declare-fun c!23258 () Bool)

(assert (=> b!126999 (= c!23258 (and ((_ is Cons!1715) (toList!858 call!13533)) (= (_1!1294 (h!2317 (toList!858 call!13533))) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!127000 () Bool)

(declare-fun e!82931 () List!1719)

(assert (=> b!127000 (= e!82931 (insertStrictlySorted!85 (t!6078 (toList!858 call!13533)) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun bm!13689 () Bool)

(declare-fun call!13694 () List!1719)

(declare-fun call!13692 () List!1719)

(assert (=> bm!13689 (= call!13694 call!13692)))

(declare-fun b!127001 () Bool)

(declare-fun e!82932 () List!1719)

(assert (=> b!127001 (= e!82932 call!13694)))

(declare-fun b!127002 () Bool)

(declare-fun call!13693 () List!1719)

(assert (=> b!127002 (= e!82929 call!13693)))

(declare-fun b!127003 () Bool)

(assert (=> b!127003 (= e!82933 call!13692)))

(declare-fun bm!13691 () Bool)

(declare-fun c!23257 () Bool)

(assert (=> bm!13691 (= call!13693 ($colon$colon!88 e!82931 (ite c!23257 (h!2317 (toList!858 call!13533)) (tuple2!2569 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(declare-fun c!23259 () Bool)

(assert (=> bm!13691 (= c!23259 c!23257)))

(declare-fun b!127004 () Bool)

(declare-fun res!61405 () Bool)

(declare-fun e!82930 () Bool)

(assert (=> b!127004 (=> (not res!61405) (not e!82930))))

(declare-fun lt!65692 () List!1719)

(assert (=> b!127004 (= res!61405 (containsKey!170 lt!65692 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127005 () Bool)

(assert (=> b!127005 (= e!82930 (contains!878 lt!65692 (tuple2!2569 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!127006 () Bool)

(assert (=> b!127006 (= e!82932 call!13694)))

(declare-fun b!127007 () Bool)

(declare-fun c!23256 () Bool)

(assert (=> b!127007 (= e!82931 (ite c!23258 (t!6078 (toList!858 call!13533)) (ite c!23256 (Cons!1715 (h!2317 (toList!858 call!13533)) (t!6078 (toList!858 call!13533))) Nil!1716)))))

(declare-fun b!127008 () Bool)

(assert (=> b!127008 (= c!23256 (and ((_ is Cons!1715) (toList!858 call!13533)) (bvsgt (_1!1294 (h!2317 (toList!858 call!13533))) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> b!127008 (= e!82933 e!82932)))

(declare-fun d!38303 () Bool)

(assert (=> d!38303 e!82930))

(declare-fun res!61404 () Bool)

(assert (=> d!38303 (=> (not res!61404) (not e!82930))))

(assert (=> d!38303 (= res!61404 (isStrictlySorted!312 lt!65692))))

(assert (=> d!38303 (= lt!65692 e!82929)))

(assert (=> d!38303 (= c!23257 (and ((_ is Cons!1715) (toList!858 call!13533)) (bvslt (_1!1294 (h!2317 (toList!858 call!13533))) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> d!38303 (isStrictlySorted!312 (toList!858 call!13533))))

(assert (=> d!38303 (= (insertStrictlySorted!85 (toList!858 call!13533) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65692)))

(declare-fun bm!13690 () Bool)

(assert (=> bm!13690 (= call!13692 call!13693)))

(assert (= (and d!38303 c!23257) b!127002))

(assert (= (and d!38303 (not c!23257)) b!126999))

(assert (= (and b!126999 c!23258) b!127003))

(assert (= (and b!126999 (not c!23258)) b!127008))

(assert (= (and b!127008 c!23256) b!127006))

(assert (= (and b!127008 (not c!23256)) b!127001))

(assert (= (or b!127006 b!127001) bm!13689))

(assert (= (or b!127003 bm!13689) bm!13690))

(assert (= (or b!127002 bm!13690) bm!13691))

(assert (= (and bm!13691 c!23259) b!127000))

(assert (= (and bm!13691 (not c!23259)) b!127007))

(assert (= (and d!38303 res!61404) b!127004))

(assert (= (and b!127004 res!61405) b!127005))

(declare-fun m!148375 () Bool)

(assert (=> bm!13691 m!148375))

(declare-fun m!148377 () Bool)

(assert (=> d!38303 m!148377))

(declare-fun m!148379 () Bool)

(assert (=> d!38303 m!148379))

(declare-fun m!148381 () Bool)

(assert (=> b!127005 m!148381))

(declare-fun m!148383 () Bool)

(assert (=> b!127000 m!148383))

(declare-fun m!148385 () Bool)

(assert (=> b!127004 m!148385))

(assert (=> d!38011 d!38303))

(declare-fun d!38305 () Bool)

(declare-fun e!82934 () Bool)

(assert (=> d!38305 e!82934))

(declare-fun res!61406 () Bool)

(assert (=> d!38305 (=> (not res!61406) (not e!82934))))

(declare-fun lt!65694 () ListLongMap!1685)

(assert (=> d!38305 (= res!61406 (contains!877 lt!65694 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(declare-fun lt!65693 () List!1719)

(assert (=> d!38305 (= lt!65694 (ListLongMap!1686 lt!65693))))

(declare-fun lt!65696 () Unit!3936)

(declare-fun lt!65695 () Unit!3936)

(assert (=> d!38305 (= lt!65696 lt!65695)))

(assert (=> d!38305 (= (getValueByKey!166 lt!65693 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (=> d!38305 (= lt!65695 (lemmaContainsTupThenGetReturnValue!83 lt!65693 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (=> d!38305 (= lt!65693 (insertStrictlySorted!85 (toList!858 call!13649) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (=> d!38305 (= (+!165 call!13649 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))) lt!65694)))

(declare-fun b!127009 () Bool)

(declare-fun res!61407 () Bool)

(assert (=> b!127009 (=> (not res!61407) (not e!82934))))

(assert (=> b!127009 (= res!61407 (= (getValueByKey!166 (toList!858 lt!65694) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(declare-fun b!127010 () Bool)

(assert (=> b!127010 (= e!82934 (contains!878 (toList!858 lt!65694) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))

(assert (= (and d!38305 res!61406) b!127009))

(assert (= (and b!127009 res!61407) b!127010))

(declare-fun m!148387 () Bool)

(assert (=> d!38305 m!148387))

(declare-fun m!148389 () Bool)

(assert (=> d!38305 m!148389))

(declare-fun m!148391 () Bool)

(assert (=> d!38305 m!148391))

(declare-fun m!148393 () Bool)

(assert (=> d!38305 m!148393))

(declare-fun m!148395 () Bool)

(assert (=> b!127009 m!148395))

(declare-fun m!148397 () Bool)

(assert (=> b!127010 m!148397))

(assert (=> b!126656 d!38305))

(declare-fun d!38307 () Bool)

(declare-fun e!82935 () Bool)

(assert (=> d!38307 e!82935))

(declare-fun res!61408 () Bool)

(assert (=> d!38307 (=> (not res!61408) (not e!82935))))

(declare-fun lt!65698 () ListLongMap!1685)

(assert (=> d!38307 (= res!61408 (contains!877 lt!65698 (_1!1294 (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(declare-fun lt!65697 () List!1719)

(assert (=> d!38307 (= lt!65698 (ListLongMap!1686 lt!65697))))

(declare-fun lt!65700 () Unit!3936)

(declare-fun lt!65699 () Unit!3936)

(assert (=> d!38307 (= lt!65700 lt!65699)))

(assert (=> d!38307 (= (getValueByKey!166 lt!65697 (_1!1294 (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(assert (=> d!38307 (= lt!65699 (lemmaContainsTupThenGetReturnValue!83 lt!65697 (_1!1294 (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (_2!1294 (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(assert (=> d!38307 (= lt!65697 (insertStrictlySorted!85 (toList!858 (ite c!23152 call!13653 (ite c!23155 call!13650 call!13652))) (_1!1294 (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (_2!1294 (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(assert (=> d!38307 (= (+!165 (ite c!23152 call!13653 (ite c!23155 call!13650 call!13652)) (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) lt!65698)))

(declare-fun b!127011 () Bool)

(declare-fun res!61409 () Bool)

(assert (=> b!127011 (=> (not res!61409) (not e!82935))))

(assert (=> b!127011 (= res!61409 (= (getValueByKey!166 (toList!858 lt!65698) (_1!1294 (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))))

(declare-fun b!127012 () Bool)

(assert (=> b!127012 (= e!82935 (contains!878 (toList!858 lt!65698) (ite (or c!23152 c!23155) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (= (and d!38307 res!61408) b!127011))

(assert (= (and b!127011 res!61409) b!127012))

(declare-fun m!148399 () Bool)

(assert (=> d!38307 m!148399))

(declare-fun m!148401 () Bool)

(assert (=> d!38307 m!148401))

(declare-fun m!148403 () Bool)

(assert (=> d!38307 m!148403))

(declare-fun m!148405 () Bool)

(assert (=> d!38307 m!148405))

(declare-fun m!148407 () Bool)

(assert (=> b!127011 m!148407))

(declare-fun m!148409 () Bool)

(assert (=> b!127012 m!148409))

(assert (=> bm!13647 d!38307))

(declare-fun d!38309 () Bool)

(declare-fun e!82937 () Bool)

(assert (=> d!38309 e!82937))

(declare-fun res!61410 () Bool)

(assert (=> d!38309 (=> res!61410 e!82937)))

(declare-fun lt!65702 () Bool)

(assert (=> d!38309 (= res!61410 (not lt!65702))))

(declare-fun lt!65701 () Bool)

(assert (=> d!38309 (= lt!65702 lt!65701)))

(declare-fun lt!65703 () Unit!3936)

(declare-fun e!82936 () Unit!3936)

(assert (=> d!38309 (= lt!65703 e!82936)))

(declare-fun c!23260 () Bool)

(assert (=> d!38309 (= c!23260 lt!65701)))

(assert (=> d!38309 (= lt!65701 (containsKey!170 (toList!858 lt!65485) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38309 (= (contains!877 lt!65485 #b1000000000000000000000000000000000000000000000000000000000000000) lt!65702)))

(declare-fun b!127013 () Bool)

(declare-fun lt!65704 () Unit!3936)

(assert (=> b!127013 (= e!82936 lt!65704)))

(assert (=> b!127013 (= lt!65704 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65485) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!127013 (isDefined!120 (getValueByKey!166 (toList!858 lt!65485) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127014 () Bool)

(declare-fun Unit!3968 () Unit!3936)

(assert (=> b!127014 (= e!82936 Unit!3968)))

(declare-fun b!127015 () Bool)

(assert (=> b!127015 (= e!82937 (isDefined!120 (getValueByKey!166 (toList!858 lt!65485) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38309 c!23260) b!127013))

(assert (= (and d!38309 (not c!23260)) b!127014))

(assert (= (and d!38309 (not res!61410)) b!127015))

(declare-fun m!148411 () Bool)

(assert (=> d!38309 m!148411))

(declare-fun m!148413 () Bool)

(assert (=> b!127013 m!148413))

(declare-fun m!148415 () Bool)

(assert (=> b!127013 m!148415))

(assert (=> b!127013 m!148415))

(declare-fun m!148417 () Bool)

(assert (=> b!127013 m!148417))

(assert (=> b!127015 m!148415))

(assert (=> b!127015 m!148415))

(assert (=> b!127015 m!148417))

(assert (=> bm!13656 d!38309))

(declare-fun d!38311 () Bool)

(declare-fun e!82939 () Bool)

(assert (=> d!38311 e!82939))

(declare-fun res!61411 () Bool)

(assert (=> d!38311 (=> res!61411 e!82939)))

(declare-fun lt!65706 () Bool)

(assert (=> d!38311 (= res!61411 (not lt!65706))))

(declare-fun lt!65705 () Bool)

(assert (=> d!38311 (= lt!65706 lt!65705)))

(declare-fun lt!65707 () Unit!3936)

(declare-fun e!82938 () Unit!3936)

(assert (=> d!38311 (= lt!65707 e!82938)))

(declare-fun c!23261 () Bool)

(assert (=> d!38311 (= c!23261 lt!65705)))

(assert (=> d!38311 (= lt!65705 (containsKey!170 (toList!858 lt!65270) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38311 (= (contains!877 lt!65270 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65706)))

(declare-fun b!127016 () Bool)

(declare-fun lt!65708 () Unit!3936)

(assert (=> b!127016 (= e!82938 lt!65708)))

(assert (=> b!127016 (= lt!65708 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65270) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> b!127016 (isDefined!120 (getValueByKey!166 (toList!858 lt!65270) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127017 () Bool)

(declare-fun Unit!3969 () Unit!3936)

(assert (=> b!127017 (= e!82938 Unit!3969)))

(declare-fun b!127018 () Bool)

(assert (=> b!127018 (= e!82939 (isDefined!120 (getValueByKey!166 (toList!858 lt!65270) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (= (and d!38311 c!23261) b!127016))

(assert (= (and d!38311 (not c!23261)) b!127017))

(assert (= (and d!38311 (not res!61411)) b!127018))

(declare-fun m!148419 () Bool)

(assert (=> d!38311 m!148419))

(declare-fun m!148421 () Bool)

(assert (=> b!127016 m!148421))

(assert (=> b!127016 m!147411))

(assert (=> b!127016 m!147411))

(declare-fun m!148423 () Bool)

(assert (=> b!127016 m!148423))

(assert (=> b!127018 m!147411))

(assert (=> b!127018 m!147411))

(assert (=> b!127018 m!148423))

(assert (=> d!38029 d!38311))

(declare-fun b!127022 () Bool)

(declare-fun e!82941 () Option!172)

(assert (=> b!127022 (= e!82941 None!170)))

(declare-fun d!38313 () Bool)

(declare-fun c!23262 () Bool)

(assert (=> d!38313 (= c!23262 (and ((_ is Cons!1715) lt!65269) (= (_1!1294 (h!2317 lt!65269)) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!82940 () Option!172)

(assert (=> d!38313 (= (getValueByKey!166 lt!65269 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) e!82940)))

(declare-fun b!127021 () Bool)

(assert (=> b!127021 (= e!82941 (getValueByKey!166 (t!6078 lt!65269) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127019 () Bool)

(assert (=> b!127019 (= e!82940 (Some!171 (_2!1294 (h!2317 lt!65269))))))

(declare-fun b!127020 () Bool)

(assert (=> b!127020 (= e!82940 e!82941)))

(declare-fun c!23263 () Bool)

(assert (=> b!127020 (= c!23263 (and ((_ is Cons!1715) lt!65269) (not (= (_1!1294 (h!2317 lt!65269)) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38313 c!23262) b!127019))

(assert (= (and d!38313 (not c!23262)) b!127020))

(assert (= (and b!127020 c!23263) b!127021))

(assert (= (and b!127020 (not c!23263)) b!127022))

(declare-fun m!148425 () Bool)

(assert (=> b!127021 m!148425))

(assert (=> d!38029 d!38313))

(declare-fun d!38315 () Bool)

(assert (=> d!38315 (= (getValueByKey!166 lt!65269 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun lt!65709 () Unit!3936)

(assert (=> d!38315 (= lt!65709 (choose!777 lt!65269 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun e!82942 () Bool)

(assert (=> d!38315 e!82942))

(declare-fun res!61412 () Bool)

(assert (=> d!38315 (=> (not res!61412) (not e!82942))))

(assert (=> d!38315 (= res!61412 (isStrictlySorted!312 lt!65269))))

(assert (=> d!38315 (= (lemmaContainsTupThenGetReturnValue!83 lt!65269 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65709)))

(declare-fun b!127023 () Bool)

(declare-fun res!61413 () Bool)

(assert (=> b!127023 (=> (not res!61413) (not e!82942))))

(assert (=> b!127023 (= res!61413 (containsKey!170 lt!65269 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127024 () Bool)

(assert (=> b!127024 (= e!82942 (contains!878 lt!65269 (tuple2!2569 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (= (and d!38315 res!61412) b!127023))

(assert (= (and b!127023 res!61413) b!127024))

(assert (=> d!38315 m!147405))

(declare-fun m!148427 () Bool)

(assert (=> d!38315 m!148427))

(declare-fun m!148429 () Bool)

(assert (=> d!38315 m!148429))

(declare-fun m!148431 () Bool)

(assert (=> b!127023 m!148431))

(declare-fun m!148433 () Bool)

(assert (=> b!127024 m!148433))

(assert (=> d!38029 d!38315))

(declare-fun b!127025 () Bool)

(declare-fun e!82943 () List!1719)

(declare-fun e!82947 () List!1719)

(assert (=> b!127025 (= e!82943 e!82947)))

(declare-fun c!23266 () Bool)

(assert (=> b!127025 (= c!23266 (and ((_ is Cons!1715) (toList!858 lt!65112)) (= (_1!1294 (h!2317 (toList!858 lt!65112))) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!82945 () List!1719)

(declare-fun b!127026 () Bool)

(assert (=> b!127026 (= e!82945 (insertStrictlySorted!85 (t!6078 (toList!858 lt!65112)) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun bm!13692 () Bool)

(declare-fun call!13697 () List!1719)

(declare-fun call!13695 () List!1719)

(assert (=> bm!13692 (= call!13697 call!13695)))

(declare-fun b!127027 () Bool)

(declare-fun e!82946 () List!1719)

(assert (=> b!127027 (= e!82946 call!13697)))

(declare-fun b!127028 () Bool)

(declare-fun call!13696 () List!1719)

(assert (=> b!127028 (= e!82943 call!13696)))

(declare-fun b!127029 () Bool)

(assert (=> b!127029 (= e!82947 call!13695)))

(declare-fun bm!13694 () Bool)

(declare-fun c!23265 () Bool)

(assert (=> bm!13694 (= call!13696 ($colon$colon!88 e!82945 (ite c!23265 (h!2317 (toList!858 lt!65112)) (tuple2!2569 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(declare-fun c!23267 () Bool)

(assert (=> bm!13694 (= c!23267 c!23265)))

(declare-fun b!127030 () Bool)

(declare-fun res!61415 () Bool)

(declare-fun e!82944 () Bool)

(assert (=> b!127030 (=> (not res!61415) (not e!82944))))

(declare-fun lt!65710 () List!1719)

(assert (=> b!127030 (= res!61415 (containsKey!170 lt!65710 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127031 () Bool)

(assert (=> b!127031 (= e!82944 (contains!878 lt!65710 (tuple2!2569 (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!127032 () Bool)

(assert (=> b!127032 (= e!82946 call!13697)))

(declare-fun b!127033 () Bool)

(declare-fun c!23264 () Bool)

(assert (=> b!127033 (= e!82945 (ite c!23266 (t!6078 (toList!858 lt!65112)) (ite c!23264 (Cons!1715 (h!2317 (toList!858 lt!65112)) (t!6078 (toList!858 lt!65112))) Nil!1716)))))

(declare-fun b!127034 () Bool)

(assert (=> b!127034 (= c!23264 (and ((_ is Cons!1715) (toList!858 lt!65112)) (bvsgt (_1!1294 (h!2317 (toList!858 lt!65112))) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> b!127034 (= e!82947 e!82946)))

(declare-fun d!38317 () Bool)

(assert (=> d!38317 e!82944))

(declare-fun res!61414 () Bool)

(assert (=> d!38317 (=> (not res!61414) (not e!82944))))

(assert (=> d!38317 (= res!61414 (isStrictlySorted!312 lt!65710))))

(assert (=> d!38317 (= lt!65710 e!82943)))

(assert (=> d!38317 (= c!23265 (and ((_ is Cons!1715) (toList!858 lt!65112)) (bvslt (_1!1294 (h!2317 (toList!858 lt!65112))) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> d!38317 (isStrictlySorted!312 (toList!858 lt!65112))))

(assert (=> d!38317 (= (insertStrictlySorted!85 (toList!858 lt!65112) (_1!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65710)))

(declare-fun bm!13693 () Bool)

(assert (=> bm!13693 (= call!13695 call!13696)))

(assert (= (and d!38317 c!23265) b!127028))

(assert (= (and d!38317 (not c!23265)) b!127025))

(assert (= (and b!127025 c!23266) b!127029))

(assert (= (and b!127025 (not c!23266)) b!127034))

(assert (= (and b!127034 c!23264) b!127032))

(assert (= (and b!127034 (not c!23264)) b!127027))

(assert (= (or b!127032 b!127027) bm!13692))

(assert (= (or b!127029 bm!13692) bm!13693))

(assert (= (or b!127028 bm!13693) bm!13694))

(assert (= (and bm!13694 c!23267) b!127026))

(assert (= (and bm!13694 (not c!23267)) b!127033))

(assert (= (and d!38317 res!61414) b!127030))

(assert (= (and b!127030 res!61415) b!127031))

(declare-fun m!148435 () Bool)

(assert (=> bm!13694 m!148435))

(declare-fun m!148437 () Bool)

(assert (=> d!38317 m!148437))

(declare-fun m!148439 () Bool)

(assert (=> d!38317 m!148439))

(declare-fun m!148441 () Bool)

(assert (=> b!127031 m!148441))

(declare-fun m!148443 () Bool)

(assert (=> b!127026 m!148443))

(declare-fun m!148445 () Bool)

(assert (=> b!127030 m!148445))

(assert (=> d!38029 d!38317))

(assert (=> b!126675 d!38153))

(declare-fun d!38319 () Bool)

(assert (=> d!38319 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100))))

(declare-fun lt!65711 () Unit!3936)

(assert (=> d!38319 (= lt!65711 (choose!772 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100))))

(declare-fun e!82948 () Bool)

(assert (=> d!38319 e!82948))

(declare-fun res!61416 () Bool)

(assert (=> d!38319 (=> (not res!61416) (not e!82948))))

(assert (=> d!38319 (= res!61416 (isStrictlySorted!312 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> d!38319 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100) lt!65711)))

(declare-fun b!127035 () Bool)

(assert (=> b!127035 (= e!82948 (containsKey!170 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100))))

(assert (= (and d!38319 res!61416) b!127035))

(assert (=> d!38319 m!147363))

(assert (=> d!38319 m!147363))

(assert (=> d!38319 m!147365))

(declare-fun m!148447 () Bool)

(assert (=> d!38319 m!148447))

(declare-fun m!148449 () Bool)

(assert (=> d!38319 m!148449))

(assert (=> b!127035 m!147359))

(assert (=> b!126410 d!38319))

(declare-fun d!38321 () Bool)

(assert (=> d!38321 (= (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100)) (not (isEmpty!402 (getValueByKey!166 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100))))))

(declare-fun bs!5261 () Bool)

(assert (= bs!5261 d!38321))

(assert (=> bs!5261 m!147363))

(declare-fun m!148451 () Bool)

(assert (=> bs!5261 m!148451))

(assert (=> b!126410 d!38321))

(declare-fun b!127039 () Bool)

(declare-fun e!82950 () Option!172)

(assert (=> b!127039 (= e!82950 None!170)))

(declare-fun c!23268 () Bool)

(declare-fun d!38323 () Bool)

(assert (=> d!38323 (= c!23268 (and ((_ is Cons!1715) (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))) (= (_1!1294 (h!2317 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))) lt!65100)))))

(declare-fun e!82949 () Option!172)

(assert (=> d!38323 (= (getValueByKey!166 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100) e!82949)))

(declare-fun b!127038 () Bool)

(assert (=> b!127038 (= e!82950 (getValueByKey!166 (t!6078 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))) lt!65100))))

(declare-fun b!127036 () Bool)

(assert (=> b!127036 (= e!82949 (Some!171 (_2!1294 (h!2317 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))))

(declare-fun b!127037 () Bool)

(assert (=> b!127037 (= e!82949 e!82950)))

(declare-fun c!23269 () Bool)

(assert (=> b!127037 (= c!23269 (and ((_ is Cons!1715) (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))) (not (= (_1!1294 (h!2317 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))) lt!65100))))))

(assert (= (and d!38323 c!23268) b!127036))

(assert (= (and d!38323 (not c!23268)) b!127037))

(assert (= (and b!127037 c!23269) b!127038))

(assert (= (and b!127037 (not c!23269)) b!127039))

(declare-fun m!148453 () Bool)

(assert (=> b!127038 m!148453))

(assert (=> b!126410 d!38323))

(declare-fun d!38325 () Bool)

(assert (=> d!38325 (arrayContainsKey!0 (_keys!4516 newMap!16) lt!65307 #b00000000000000000000000000000000)))

(declare-fun lt!65714 () Unit!3936)

(declare-fun choose!13 (array!4698 (_ BitVec 64) (_ BitVec 32)) Unit!3936)

(assert (=> d!38325 (= lt!65714 (choose!13 (_keys!4516 newMap!16) lt!65307 #b00000000000000000000000000000000))))

(assert (=> d!38325 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!38325 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4516 newMap!16) lt!65307 #b00000000000000000000000000000000) lt!65714)))

(declare-fun bs!5262 () Bool)

(assert (= bs!5262 d!38325))

(assert (=> bs!5262 m!147513))

(declare-fun m!148455 () Bool)

(assert (=> bs!5262 m!148455))

(assert (=> b!126486 d!38325))

(declare-fun d!38327 () Bool)

(declare-fun res!61417 () Bool)

(declare-fun e!82951 () Bool)

(assert (=> d!38327 (=> res!61417 e!82951)))

(assert (=> d!38327 (= res!61417 (= (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) lt!65307))))

(assert (=> d!38327 (= (arrayContainsKey!0 (_keys!4516 newMap!16) lt!65307 #b00000000000000000000000000000000) e!82951)))

(declare-fun b!127040 () Bool)

(declare-fun e!82952 () Bool)

(assert (=> b!127040 (= e!82951 e!82952)))

(declare-fun res!61418 () Bool)

(assert (=> b!127040 (=> (not res!61418) (not e!82952))))

(assert (=> b!127040 (= res!61418 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127041 () Bool)

(assert (=> b!127041 (= e!82952 (arrayContainsKey!0 (_keys!4516 newMap!16) lt!65307 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!38327 (not res!61417)) b!127040))

(assert (= (and b!127040 res!61418) b!127041))

(assert (=> d!38327 m!147467))

(declare-fun m!148457 () Bool)

(assert (=> b!127041 m!148457))

(assert (=> b!126486 d!38327))

(declare-fun b!127042 () Bool)

(declare-fun e!82955 () SeekEntryResult!280)

(declare-fun lt!65715 () SeekEntryResult!280)

(assert (=> b!127042 (= e!82955 (seekKeyOrZeroReturnVacant!0 (x!14973 lt!65715) (index!3277 lt!65715) (index!3277 lt!65715) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(declare-fun b!127043 () Bool)

(declare-fun e!82953 () SeekEntryResult!280)

(assert (=> b!127043 (= e!82953 (Found!280 (index!3277 lt!65715)))))

(declare-fun b!127044 () Bool)

(assert (=> b!127044 (= e!82955 (MissingZero!280 (index!3277 lt!65715)))))

(declare-fun b!127046 () Bool)

(declare-fun e!82954 () SeekEntryResult!280)

(assert (=> b!127046 (= e!82954 Undefined!280)))

(declare-fun b!127047 () Bool)

(assert (=> b!127047 (= e!82954 e!82953)))

(declare-fun lt!65717 () (_ BitVec 64))

(assert (=> b!127047 (= lt!65717 (select (arr!2224 (_keys!4516 newMap!16)) (index!3277 lt!65715)))))

(declare-fun c!23270 () Bool)

(assert (=> b!127047 (= c!23270 (= lt!65717 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!38329 () Bool)

(declare-fun lt!65716 () SeekEntryResult!280)

(assert (=> d!38329 (and (or ((_ is Undefined!280) lt!65716) (not ((_ is Found!280) lt!65716)) (and (bvsge (index!3276 lt!65716) #b00000000000000000000000000000000) (bvslt (index!3276 lt!65716) (size!2488 (_keys!4516 newMap!16))))) (or ((_ is Undefined!280) lt!65716) ((_ is Found!280) lt!65716) (not ((_ is MissingZero!280) lt!65716)) (and (bvsge (index!3275 lt!65716) #b00000000000000000000000000000000) (bvslt (index!3275 lt!65716) (size!2488 (_keys!4516 newMap!16))))) (or ((_ is Undefined!280) lt!65716) ((_ is Found!280) lt!65716) ((_ is MissingZero!280) lt!65716) (not ((_ is MissingVacant!280) lt!65716)) (and (bvsge (index!3278 lt!65716) #b00000000000000000000000000000000) (bvslt (index!3278 lt!65716) (size!2488 (_keys!4516 newMap!16))))) (or ((_ is Undefined!280) lt!65716) (ite ((_ is Found!280) lt!65716) (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65716)) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!280) lt!65716) (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3275 lt!65716)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!280) lt!65716) (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3278 lt!65716)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38329 (= lt!65716 e!82954)))

(declare-fun c!23271 () Bool)

(assert (=> d!38329 (= c!23271 (and ((_ is Intermediate!280) lt!65715) (undefined!1092 lt!65715)))))

(assert (=> d!38329 (= lt!65715 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) (mask!7039 newMap!16)) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(assert (=> d!38329 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38329 (= (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) (_keys!4516 newMap!16) (mask!7039 newMap!16)) lt!65716)))

(declare-fun b!127045 () Bool)

(declare-fun c!23272 () Bool)

(assert (=> b!127045 (= c!23272 (= lt!65717 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!127045 (= e!82953 e!82955)))

(assert (= (and d!38329 c!23271) b!127046))

(assert (= (and d!38329 (not c!23271)) b!127047))

(assert (= (and b!127047 c!23270) b!127043))

(assert (= (and b!127047 (not c!23270)) b!127045))

(assert (= (and b!127045 c!23272) b!127044))

(assert (= (and b!127045 (not c!23272)) b!127042))

(assert (=> b!127042 m!147467))

(declare-fun m!148459 () Bool)

(assert (=> b!127042 m!148459))

(declare-fun m!148461 () Bool)

(assert (=> b!127047 m!148461))

(declare-fun m!148463 () Bool)

(assert (=> d!38329 m!148463))

(assert (=> d!38329 m!147475))

(declare-fun m!148465 () Bool)

(assert (=> d!38329 m!148465))

(assert (=> d!38329 m!147467))

(declare-fun m!148467 () Bool)

(assert (=> d!38329 m!148467))

(declare-fun m!148469 () Bool)

(assert (=> d!38329 m!148469))

(assert (=> d!38329 m!147467))

(assert (=> d!38329 m!148465))

(declare-fun m!148471 () Bool)

(assert (=> d!38329 m!148471))

(assert (=> b!126486 d!38329))

(declare-fun d!38331 () Bool)

(declare-fun lt!65718 () Bool)

(assert (=> d!38331 (= lt!65718 (select (content!124 (toList!858 lt!65256)) (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun e!82957 () Bool)

(assert (=> d!38331 (= lt!65718 e!82957)))

(declare-fun res!61419 () Bool)

(assert (=> d!38331 (=> (not res!61419) (not e!82957))))

(assert (=> d!38331 (= res!61419 ((_ is Cons!1715) (toList!858 lt!65256)))))

(assert (=> d!38331 (= (contains!878 (toList!858 lt!65256) (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65718)))

(declare-fun b!127048 () Bool)

(declare-fun e!82956 () Bool)

(assert (=> b!127048 (= e!82957 e!82956)))

(declare-fun res!61420 () Bool)

(assert (=> b!127048 (=> res!61420 e!82956)))

(assert (=> b!127048 (= res!61420 (= (h!2317 (toList!858 lt!65256)) (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!127049 () Bool)

(assert (=> b!127049 (= e!82956 (contains!878 (t!6078 (toList!858 lt!65256)) (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(assert (= (and d!38331 res!61419) b!127048))

(assert (= (and b!127048 (not res!61420)) b!127049))

(declare-fun m!148473 () Bool)

(assert (=> d!38331 m!148473))

(declare-fun m!148475 () Bool)

(assert (=> d!38331 m!148475))

(declare-fun m!148477 () Bool)

(assert (=> b!127049 m!148477))

(assert (=> b!126414 d!38331))

(declare-fun b!127050 () Bool)

(declare-fun e!82958 () (_ BitVec 32))

(declare-fun call!13698 () (_ BitVec 32))

(assert (=> b!127050 (= e!82958 (bvadd #b00000000000000000000000000000001 call!13698))))

(declare-fun b!127051 () Bool)

(declare-fun e!82959 () (_ BitVec 32))

(assert (=> b!127051 (= e!82959 e!82958)))

(declare-fun c!23274 () Bool)

(assert (=> b!127051 (= c!23274 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!127052 () Bool)

(assert (=> b!127052 (= e!82959 #b00000000000000000000000000000000)))

(declare-fun d!38333 () Bool)

(declare-fun lt!65719 () (_ BitVec 32))

(assert (=> d!38333 (and (bvsge lt!65719 #b00000000000000000000000000000000) (bvsle lt!65719 (bvsub (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!38333 (= lt!65719 e!82959)))

(declare-fun c!23273 () Bool)

(assert (=> d!38333 (= c!23273 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(assert (=> d!38333 (and (bvsle #b00000000000000000000000000000000 (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(assert (=> d!38333 (= (arrayCountValidKeys!0 (_keys!4516 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000000 (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))) lt!65719)))

(declare-fun bm!13695 () Bool)

(assert (=> bm!13695 (= call!13698 (arrayCountValidKeys!0 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!127053 () Bool)

(assert (=> b!127053 (= e!82958 call!13698)))

(assert (= (and d!38333 c!23273) b!127052))

(assert (= (and d!38333 (not c!23273)) b!127051))

(assert (= (and b!127051 c!23274) b!127050))

(assert (= (and b!127051 (not c!23274)) b!127053))

(assert (= (or b!127050 b!127053) bm!13695))

(assert (=> b!127051 m!147947))

(assert (=> b!127051 m!147947))

(assert (=> b!127051 m!147955))

(declare-fun m!148479 () Bool)

(assert (=> bm!13695 m!148479))

(assert (=> b!126360 d!38333))

(declare-fun d!38335 () Bool)

(declare-fun res!61421 () Bool)

(declare-fun e!82960 () Bool)

(assert (=> d!38335 (=> res!61421 e!82960)))

(assert (=> d!38335 (= res!61421 (= (select (arr!2224 (_keys!4516 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> d!38335 (= (arrayContainsKey!0 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!82960)))

(declare-fun b!127054 () Bool)

(declare-fun e!82961 () Bool)

(assert (=> b!127054 (= e!82960 e!82961)))

(declare-fun res!61422 () Bool)

(assert (=> b!127054 (=> (not res!61422) (not e!82961))))

(assert (=> b!127054 (= res!61422 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127055 () Bool)

(assert (=> b!127055 (= e!82961 (arrayContainsKey!0 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!38335 (not res!61421)) b!127054))

(assert (= (and b!127054 res!61422) b!127055))

(declare-fun m!148481 () Bool)

(assert (=> d!38335 m!148481))

(assert (=> b!127055 m!147095))

(declare-fun m!148483 () Bool)

(assert (=> b!127055 m!148483))

(assert (=> b!126435 d!38335))

(declare-fun b!127056 () Bool)

(declare-fun e!82962 () (_ BitVec 32))

(declare-fun call!13699 () (_ BitVec 32))

(assert (=> b!127056 (= e!82962 (bvadd #b00000000000000000000000000000001 call!13699))))

(declare-fun b!127057 () Bool)

(declare-fun e!82963 () (_ BitVec 32))

(assert (=> b!127057 (= e!82963 e!82962)))

(declare-fun c!23276 () Bool)

(assert (=> b!127057 (= c!23276 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000)))))

(declare-fun b!127058 () Bool)

(assert (=> b!127058 (= e!82963 #b00000000000000000000000000000000)))

(declare-fun d!38337 () Bool)

(declare-fun lt!65720 () (_ BitVec 32))

(assert (=> d!38337 (and (bvsge lt!65720 #b00000000000000000000000000000000) (bvsle lt!65720 (bvsub (size!2488 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000)))))

(assert (=> d!38337 (= lt!65720 e!82963)))

(declare-fun c!23275 () Bool)

(assert (=> d!38337 (= c!23275 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))))))

(assert (=> d!38337 (and (bvsle #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2488 (_keys!4516 (_2!1295 lt!65202))) (size!2488 (_keys!4516 (_2!1295 lt!65202)))))))

(assert (=> d!38337 (= (arrayCountValidKeys!0 (_keys!4516 (_2!1295 lt!65202)) #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))) lt!65720)))

(declare-fun bm!13696 () Bool)

(assert (=> bm!13696 (= call!13699 (arrayCountValidKeys!0 (_keys!4516 (_2!1295 lt!65202)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 (_keys!4516 (_2!1295 lt!65202)))))))

(declare-fun b!127059 () Bool)

(assert (=> b!127059 (= e!82962 call!13699)))

(assert (= (and d!38337 c!23275) b!127058))

(assert (= (and d!38337 (not c!23275)) b!127057))

(assert (= (and b!127057 c!23276) b!127056))

(assert (= (and b!127057 (not c!23276)) b!127059))

(assert (= (or b!127056 b!127059) bm!13696))

(assert (=> b!127057 m!148095))

(assert (=> b!127057 m!148095))

(assert (=> b!127057 m!148103))

(declare-fun m!148485 () Bool)

(assert (=> bm!13696 m!148485))

(assert (=> b!126363 d!38337))

(assert (=> b!126483 d!38153))

(declare-fun d!38339 () Bool)

(assert (=> d!38339 (= (apply!111 lt!65320 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1455 (getValueByKey!166 (toList!858 lt!65320) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5263 () Bool)

(assert (= bs!5263 d!38339))

(declare-fun m!148487 () Bool)

(assert (=> bs!5263 m!148487))

(assert (=> bs!5263 m!148487))

(declare-fun m!148489 () Bool)

(assert (=> bs!5263 m!148489))

(assert (=> b!126532 d!38339))

(declare-fun d!38341 () Bool)

(assert (=> d!38341 (= (map!1383 (_2!1295 lt!65442)) (getCurrentListMap!530 (_keys!4516 (_2!1295 lt!65442)) (_values!2766 (_2!1295 lt!65442)) (mask!7039 (_2!1295 lt!65442)) (extraKeys!2564 (_2!1295 lt!65442)) (zeroValue!2646 (_2!1295 lt!65442)) (minValue!2646 (_2!1295 lt!65442)) #b00000000000000000000000000000000 (defaultEntry!2783 (_2!1295 lt!65442))))))

(declare-fun bs!5264 () Bool)

(assert (= bs!5264 d!38341))

(declare-fun m!148491 () Bool)

(assert (=> bs!5264 m!148491))

(assert (=> b!126622 d!38341))

(declare-fun d!38343 () Bool)

(declare-fun e!82964 () Bool)

(assert (=> d!38343 e!82964))

(declare-fun res!61423 () Bool)

(assert (=> d!38343 (=> (not res!61423) (not e!82964))))

(declare-fun lt!65722 () ListLongMap!1685)

(assert (=> d!38343 (= res!61423 (contains!877 lt!65722 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!65721 () List!1719)

(assert (=> d!38343 (= lt!65722 (ListLongMap!1686 lt!65721))))

(declare-fun lt!65724 () Unit!3936)

(declare-fun lt!65723 () Unit!3936)

(assert (=> d!38343 (= lt!65724 lt!65723)))

(assert (=> d!38343 (= (getValueByKey!166 lt!65721 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38343 (= lt!65723 (lemmaContainsTupThenGetReturnValue!83 lt!65721 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38343 (= lt!65721 (insertStrictlySorted!85 (toList!858 (map!1383 newMap!16)) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38343 (= (+!165 (map!1383 newMap!16) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!65722)))

(declare-fun b!127060 () Bool)

(declare-fun res!61424 () Bool)

(assert (=> b!127060 (=> (not res!61424) (not e!82964))))

(assert (=> b!127060 (= res!61424 (= (getValueByKey!166 (toList!858 lt!65722) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!127061 () Bool)

(assert (=> b!127061 (= e!82964 (contains!878 (toList!858 lt!65722) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!38343 res!61423) b!127060))

(assert (= (and b!127060 res!61424) b!127061))

(declare-fun m!148493 () Bool)

(assert (=> d!38343 m!148493))

(declare-fun m!148495 () Bool)

(assert (=> d!38343 m!148495))

(declare-fun m!148497 () Bool)

(assert (=> d!38343 m!148497))

(declare-fun m!148499 () Bool)

(assert (=> d!38343 m!148499))

(declare-fun m!148501 () Bool)

(assert (=> b!127060 m!148501))

(declare-fun m!148503 () Bool)

(assert (=> b!127061 m!148503))

(assert (=> b!126622 d!38343))

(assert (=> b!126622 d!37985))

(declare-fun d!38345 () Bool)

(assert (=> d!38345 (= (inRange!0 (ite c!23136 (index!3275 lt!65347) (index!3278 lt!65347)) (mask!7039 newMap!16)) (and (bvsge (ite c!23136 (index!3275 lt!65347) (index!3278 lt!65347)) #b00000000000000000000000000000000) (bvslt (ite c!23136 (index!3275 lt!65347) (index!3278 lt!65347)) (bvadd (mask!7039 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!13631 d!38345))

(declare-fun d!38347 () Bool)

(assert (=> d!38347 (= (apply!111 lt!65485 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1455 (getValueByKey!166 (toList!858 lt!65485) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5265 () Bool)

(assert (= bs!5265 d!38347))

(assert (=> bs!5265 m!148415))

(assert (=> bs!5265 m!148415))

(declare-fun m!148505 () Bool)

(assert (=> bs!5265 m!148505))

(assert (=> b!126687 d!38347))

(declare-fun d!38349 () Bool)

(declare-fun e!82965 () Bool)

(assert (=> d!38349 e!82965))

(declare-fun res!61425 () Bool)

(assert (=> d!38349 (=> (not res!61425) (not e!82965))))

(declare-fun lt!65726 () ListLongMap!1685)

(assert (=> d!38349 (= res!61425 (contains!877 lt!65726 (_1!1294 (tuple2!2569 lt!65231 lt!65228))))))

(declare-fun lt!65725 () List!1719)

(assert (=> d!38349 (= lt!65726 (ListLongMap!1686 lt!65725))))

(declare-fun lt!65728 () Unit!3936)

(declare-fun lt!65727 () Unit!3936)

(assert (=> d!38349 (= lt!65728 lt!65727)))

(assert (=> d!38349 (= (getValueByKey!166 lt!65725 (_1!1294 (tuple2!2569 lt!65231 lt!65228))) (Some!171 (_2!1294 (tuple2!2569 lt!65231 lt!65228))))))

(assert (=> d!38349 (= lt!65727 (lemmaContainsTupThenGetReturnValue!83 lt!65725 (_1!1294 (tuple2!2569 lt!65231 lt!65228)) (_2!1294 (tuple2!2569 lt!65231 lt!65228))))))

(assert (=> d!38349 (= lt!65725 (insertStrictlySorted!85 (toList!858 lt!65229) (_1!1294 (tuple2!2569 lt!65231 lt!65228)) (_2!1294 (tuple2!2569 lt!65231 lt!65228))))))

(assert (=> d!38349 (= (+!165 lt!65229 (tuple2!2569 lt!65231 lt!65228)) lt!65726)))

(declare-fun b!127062 () Bool)

(declare-fun res!61426 () Bool)

(assert (=> b!127062 (=> (not res!61426) (not e!82965))))

(assert (=> b!127062 (= res!61426 (= (getValueByKey!166 (toList!858 lt!65726) (_1!1294 (tuple2!2569 lt!65231 lt!65228))) (Some!171 (_2!1294 (tuple2!2569 lt!65231 lt!65228)))))))

(declare-fun b!127063 () Bool)

(assert (=> b!127063 (= e!82965 (contains!878 (toList!858 lt!65726) (tuple2!2569 lt!65231 lt!65228)))))

(assert (= (and d!38349 res!61425) b!127062))

(assert (= (and b!127062 res!61426) b!127063))

(declare-fun m!148507 () Bool)

(assert (=> d!38349 m!148507))

(declare-fun m!148509 () Bool)

(assert (=> d!38349 m!148509))

(declare-fun m!148511 () Bool)

(assert (=> d!38349 m!148511))

(declare-fun m!148513 () Bool)

(assert (=> d!38349 m!148513))

(declare-fun m!148515 () Bool)

(assert (=> b!127062 m!148515))

(declare-fun m!148517 () Bool)

(assert (=> b!127063 m!148517))

(assert (=> b!126401 d!38349))

(declare-fun d!38351 () Bool)

(assert (=> d!38351 (not (contains!877 (+!165 lt!65229 (tuple2!2569 lt!65231 lt!65228)) lt!65232))))

(declare-fun lt!65731 () Unit!3936)

(declare-fun choose!779 (ListLongMap!1685 (_ BitVec 64) V!3435 (_ BitVec 64)) Unit!3936)

(assert (=> d!38351 (= lt!65731 (choose!779 lt!65229 lt!65231 lt!65228 lt!65232))))

(declare-fun e!82968 () Bool)

(assert (=> d!38351 e!82968))

(declare-fun res!61429 () Bool)

(assert (=> d!38351 (=> (not res!61429) (not e!82968))))

(assert (=> d!38351 (= res!61429 (not (contains!877 lt!65229 lt!65232)))))

(assert (=> d!38351 (= (addStillNotContains!58 lt!65229 lt!65231 lt!65228 lt!65232) lt!65731)))

(declare-fun b!127067 () Bool)

(assert (=> b!127067 (= e!82968 (not (= lt!65231 lt!65232)))))

(assert (= (and d!38351 res!61429) b!127067))

(assert (=> d!38351 m!147311))

(assert (=> d!38351 m!147311))

(assert (=> d!38351 m!147317))

(declare-fun m!148519 () Bool)

(assert (=> d!38351 m!148519))

(declare-fun m!148521 () Bool)

(assert (=> d!38351 m!148521))

(assert (=> b!126401 d!38351))

(declare-fun d!38353 () Bool)

(declare-fun e!82970 () Bool)

(assert (=> d!38353 e!82970))

(declare-fun res!61430 () Bool)

(assert (=> d!38353 (=> res!61430 e!82970)))

(declare-fun lt!65733 () Bool)

(assert (=> d!38353 (= res!61430 (not lt!65733))))

(declare-fun lt!65732 () Bool)

(assert (=> d!38353 (= lt!65733 lt!65732)))

(declare-fun lt!65734 () Unit!3936)

(declare-fun e!82969 () Unit!3936)

(assert (=> d!38353 (= lt!65734 e!82969)))

(declare-fun c!23277 () Bool)

(assert (=> d!38353 (= c!23277 lt!65732)))

(assert (=> d!38353 (= lt!65732 (containsKey!170 (toList!858 (+!165 lt!65229 (tuple2!2569 lt!65231 lt!65228))) lt!65232))))

(assert (=> d!38353 (= (contains!877 (+!165 lt!65229 (tuple2!2569 lt!65231 lt!65228)) lt!65232) lt!65733)))

(declare-fun b!127068 () Bool)

(declare-fun lt!65735 () Unit!3936)

(assert (=> b!127068 (= e!82969 lt!65735)))

(assert (=> b!127068 (= lt!65735 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 (+!165 lt!65229 (tuple2!2569 lt!65231 lt!65228))) lt!65232))))

(assert (=> b!127068 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65229 (tuple2!2569 lt!65231 lt!65228))) lt!65232))))

(declare-fun b!127069 () Bool)

(declare-fun Unit!3970 () Unit!3936)

(assert (=> b!127069 (= e!82969 Unit!3970)))

(declare-fun b!127070 () Bool)

(assert (=> b!127070 (= e!82970 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65229 (tuple2!2569 lt!65231 lt!65228))) lt!65232)))))

(assert (= (and d!38353 c!23277) b!127068))

(assert (= (and d!38353 (not c!23277)) b!127069))

(assert (= (and d!38353 (not res!61430)) b!127070))

(declare-fun m!148523 () Bool)

(assert (=> d!38353 m!148523))

(declare-fun m!148525 () Bool)

(assert (=> b!127068 m!148525))

(declare-fun m!148527 () Bool)

(assert (=> b!127068 m!148527))

(assert (=> b!127068 m!148527))

(declare-fun m!148529 () Bool)

(assert (=> b!127068 m!148529))

(assert (=> b!127070 m!148527))

(assert (=> b!127070 m!148527))

(assert (=> b!127070 m!148529))

(assert (=> b!126401 d!38353))

(assert (=> b!126401 d!38087))

(declare-fun d!38355 () Bool)

(declare-fun e!82971 () Bool)

(assert (=> d!38355 e!82971))

(declare-fun res!61431 () Bool)

(assert (=> d!38355 (=> (not res!61431) (not e!82971))))

(declare-fun lt!65737 () ListLongMap!1685)

(assert (=> d!38355 (= res!61431 (contains!877 lt!65737 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!65736 () List!1719)

(assert (=> d!38355 (= lt!65737 (ListLongMap!1686 lt!65736))))

(declare-fun lt!65739 () Unit!3936)

(declare-fun lt!65738 () Unit!3936)

(assert (=> d!38355 (= lt!65739 lt!65738)))

(assert (=> d!38355 (= (getValueByKey!166 lt!65736 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38355 (= lt!65738 (lemmaContainsTupThenGetReturnValue!83 lt!65736 (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38355 (= lt!65736 (insertStrictlySorted!85 (toList!858 call!13612) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38355 (= (+!165 call!13612 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!65737)))

(declare-fun b!127071 () Bool)

(declare-fun res!61432 () Bool)

(assert (=> b!127071 (=> (not res!61432) (not e!82971))))

(assert (=> b!127071 (= res!61432 (= (getValueByKey!166 (toList!858 lt!65737) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!127072 () Bool)

(assert (=> b!127072 (= e!82971 (contains!878 (toList!858 lt!65737) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!38355 res!61431) b!127071))

(assert (= (and b!127071 res!61432) b!127072))

(declare-fun m!148531 () Bool)

(assert (=> d!38355 m!148531))

(declare-fun m!148533 () Bool)

(assert (=> d!38355 m!148533))

(declare-fun m!148535 () Bool)

(assert (=> d!38355 m!148535))

(declare-fun m!148537 () Bool)

(assert (=> d!38355 m!148537))

(declare-fun m!148539 () Bool)

(assert (=> b!127071 m!148539))

(declare-fun m!148541 () Bool)

(assert (=> b!127072 m!148541))

(assert (=> b!126401 d!38355))

(declare-fun d!38357 () Bool)

(declare-fun e!82973 () Bool)

(assert (=> d!38357 e!82973))

(declare-fun res!61433 () Bool)

(assert (=> d!38357 (=> res!61433 e!82973)))

(declare-fun lt!65741 () Bool)

(assert (=> d!38357 (= res!61433 (not lt!65741))))

(declare-fun lt!65740 () Bool)

(assert (=> d!38357 (= lt!65741 lt!65740)))

(declare-fun lt!65742 () Unit!3936)

(declare-fun e!82972 () Unit!3936)

(assert (=> d!38357 (= lt!65742 e!82972)))

(declare-fun c!23278 () Bool)

(assert (=> d!38357 (= c!23278 lt!65740)))

(assert (=> d!38357 (= lt!65740 (containsKey!170 (toList!858 lt!65453) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38357 (= (contains!877 lt!65453 #b0000000000000000000000000000000000000000000000000000000000000000) lt!65741)))

(declare-fun b!127073 () Bool)

(declare-fun lt!65743 () Unit!3936)

(assert (=> b!127073 (= e!82972 lt!65743)))

(assert (=> b!127073 (= lt!65743 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65453) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!127073 (isDefined!120 (getValueByKey!166 (toList!858 lt!65453) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127074 () Bool)

(declare-fun Unit!3971 () Unit!3936)

(assert (=> b!127074 (= e!82972 Unit!3971)))

(declare-fun b!127075 () Bool)

(assert (=> b!127075 (= e!82973 (isDefined!120 (getValueByKey!166 (toList!858 lt!65453) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38357 c!23278) b!127073))

(assert (= (and d!38357 (not c!23278)) b!127074))

(assert (= (and d!38357 (not res!61433)) b!127075))

(declare-fun m!148543 () Bool)

(assert (=> d!38357 m!148543))

(declare-fun m!148545 () Bool)

(assert (=> b!127073 m!148545))

(assert (=> b!127073 m!148355))

(assert (=> b!127073 m!148355))

(declare-fun m!148547 () Bool)

(assert (=> b!127073 m!148547))

(assert (=> b!127075 m!148355))

(assert (=> b!127075 m!148355))

(assert (=> b!127075 m!148547))

(assert (=> bm!13644 d!38357))

(declare-fun d!38359 () Bool)

(declare-fun lt!65744 () Bool)

(assert (=> d!38359 (= lt!65744 (select (content!124 (toList!858 lt!65276)) (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun e!82975 () Bool)

(assert (=> d!38359 (= lt!65744 e!82975)))

(declare-fun res!61434 () Bool)

(assert (=> d!38359 (=> (not res!61434) (not e!82975))))

(assert (=> d!38359 (= res!61434 ((_ is Cons!1715) (toList!858 lt!65276)))))

(assert (=> d!38359 (= (contains!878 (toList!858 lt!65276) (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65744)))

(declare-fun b!127076 () Bool)

(declare-fun e!82974 () Bool)

(assert (=> b!127076 (= e!82975 e!82974)))

(declare-fun res!61435 () Bool)

(assert (=> b!127076 (=> res!61435 e!82974)))

(assert (=> b!127076 (= res!61435 (= (h!2317 (toList!858 lt!65276)) (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!127077 () Bool)

(assert (=> b!127077 (= e!82974 (contains!878 (t!6078 (toList!858 lt!65276)) (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(assert (= (and d!38359 res!61434) b!127076))

(assert (= (and b!127076 (not res!61435)) b!127077))

(declare-fun m!148549 () Bool)

(assert (=> d!38359 m!148549))

(declare-fun m!148551 () Bool)

(assert (=> d!38359 m!148551))

(declare-fun m!148553 () Bool)

(assert (=> b!127077 m!148553))

(assert (=> b!126427 d!38359))

(assert (=> b!126454 d!38153))

(assert (=> b!126554 d!38053))

(declare-fun d!38361 () Bool)

(assert (=> d!38361 (= (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65106)) (v!3125 (getValueByKey!166 (toList!858 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65106)))))

(assert (=> d!38023 d!38361))

(declare-fun b!127081 () Bool)

(declare-fun e!82977 () Option!172)

(assert (=> b!127081 (= e!82977 None!170)))

(declare-fun d!38363 () Bool)

(declare-fun c!23279 () Bool)

(assert (=> d!38363 (= c!23279 (and ((_ is Cons!1715) (toList!858 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) (= (_1!1294 (h!2317 (toList!858 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))) lt!65106)))))

(declare-fun e!82976 () Option!172)

(assert (=> d!38363 (= (getValueByKey!166 (toList!858 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65106) e!82976)))

(declare-fun b!127080 () Bool)

(assert (=> b!127080 (= e!82977 (getValueByKey!166 (t!6078 (toList!858 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) lt!65106))))

(declare-fun b!127078 () Bool)

(assert (=> b!127078 (= e!82976 (Some!171 (_2!1294 (h!2317 (toList!858 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))))

(declare-fun b!127079 () Bool)

(assert (=> b!127079 (= e!82976 e!82977)))

(declare-fun c!23280 () Bool)

(assert (=> b!127079 (= c!23280 (and ((_ is Cons!1715) (toList!858 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) (not (= (_1!1294 (h!2317 (toList!858 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))) lt!65106))))))

(assert (= (and d!38363 c!23279) b!127078))

(assert (= (and d!38363 (not c!23279)) b!127079))

(assert (= (and b!127079 c!23280) b!127080))

(assert (= (and b!127079 (not c!23280)) b!127081))

(declare-fun m!148555 () Bool)

(assert (=> b!127080 m!148555))

(assert (=> d!38023 d!38363))

(assert (=> bm!13662 d!38257))

(assert (=> d!38109 d!38139))

(declare-fun b!127085 () Bool)

(declare-fun e!82979 () Option!172)

(assert (=> b!127085 (= e!82979 None!170)))

(declare-fun d!38365 () Bool)

(declare-fun c!23281 () Bool)

(assert (=> d!38365 (= c!23281 (and ((_ is Cons!1715) (toList!858 lt!65444)) (= (_1!1294 (h!2317 (toList!858 lt!65444))) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!82978 () Option!172)

(assert (=> d!38365 (= (getValueByKey!166 (toList!858 lt!65444) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!82978)))

(declare-fun b!127084 () Bool)

(assert (=> b!127084 (= e!82979 (getValueByKey!166 (t!6078 (toList!858 lt!65444)) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!127082 () Bool)

(assert (=> b!127082 (= e!82978 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65444)))))))

(declare-fun b!127083 () Bool)

(assert (=> b!127083 (= e!82978 e!82979)))

(declare-fun c!23282 () Bool)

(assert (=> b!127083 (= c!23282 (and ((_ is Cons!1715) (toList!858 lt!65444)) (not (= (_1!1294 (h!2317 (toList!858 lt!65444))) (_1!1294 (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!38365 c!23281) b!127082))

(assert (= (and d!38365 (not c!23281)) b!127083))

(assert (= (and b!127083 c!23282) b!127084))

(assert (= (and b!127083 (not c!23282)) b!127085))

(declare-fun m!148557 () Bool)

(assert (=> b!127084 m!148557))

(assert (=> b!126633 d!38365))

(declare-fun d!38367 () Bool)

(declare-fun e!82980 () Bool)

(assert (=> d!38367 e!82980))

(declare-fun res!61436 () Bool)

(assert (=> d!38367 (=> (not res!61436) (not e!82980))))

(declare-fun lt!65746 () ListLongMap!1685)

(assert (=> d!38367 (= res!61436 (contains!877 lt!65746 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(declare-fun lt!65745 () List!1719)

(assert (=> d!38367 (= lt!65746 (ListLongMap!1686 lt!65745))))

(declare-fun lt!65748 () Unit!3936)

(declare-fun lt!65747 () Unit!3936)

(assert (=> d!38367 (= lt!65748 lt!65747)))

(assert (=> d!38367 (= (getValueByKey!166 lt!65745 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(assert (=> d!38367 (= lt!65747 (lemmaContainsTupThenGetReturnValue!83 lt!65745 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(assert (=> d!38367 (= lt!65745 (insertStrictlySorted!85 (toList!858 call!13624) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(assert (=> d!38367 (= (+!165 call!13624 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) lt!65746)))

(declare-fun b!127086 () Bool)

(declare-fun res!61437 () Bool)

(assert (=> b!127086 (=> (not res!61437) (not e!82980))))

(assert (=> b!127086 (= res!61437 (= (getValueByKey!166 (toList!858 lt!65746) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))))))

(declare-fun b!127087 () Bool)

(assert (=> b!127087 (= e!82980 (contains!878 (toList!858 lt!65746) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))))

(assert (= (and d!38367 res!61436) b!127086))

(assert (= (and b!127086 res!61437) b!127087))

(declare-fun m!148559 () Bool)

(assert (=> d!38367 m!148559))

(declare-fun m!148561 () Bool)

(assert (=> d!38367 m!148561))

(declare-fun m!148563 () Bool)

(assert (=> d!38367 m!148563))

(declare-fun m!148565 () Bool)

(assert (=> d!38367 m!148565))

(declare-fun m!148567 () Bool)

(assert (=> b!127086 m!148567))

(declare-fun m!148569 () Bool)

(assert (=> b!127087 m!148569))

(assert (=> b!126547 d!38367))

(declare-fun d!38369 () Bool)

(declare-fun e!82981 () Bool)

(assert (=> d!38369 e!82981))

(declare-fun res!61438 () Bool)

(assert (=> d!38369 (=> (not res!61438) (not e!82981))))

(declare-fun lt!65750 () ListLongMap!1685)

(assert (=> d!38369 (= res!61438 (contains!877 lt!65750 (_1!1294 (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))))))

(declare-fun lt!65749 () List!1719)

(assert (=> d!38369 (= lt!65750 (ListLongMap!1686 lt!65749))))

(declare-fun lt!65752 () Unit!3936)

(declare-fun lt!65751 () Unit!3936)

(assert (=> d!38369 (= lt!65752 lt!65751)))

(assert (=> d!38369 (= (getValueByKey!166 lt!65749 (_1!1294 (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))) (Some!171 (_2!1294 (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))))))

(assert (=> d!38369 (= lt!65751 (lemmaContainsTupThenGetReturnValue!83 lt!65749 (_1!1294 (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))) (_2!1294 (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))))))

(assert (=> d!38369 (= lt!65749 (insertStrictlySorted!85 (toList!858 (ite c!23125 call!13628 (ite c!23128 call!13625 call!13627))) (_1!1294 (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))) (_2!1294 (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))))))

(assert (=> d!38369 (= (+!165 (ite c!23125 call!13628 (ite c!23128 call!13625 call!13627)) (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))) lt!65750)))

(declare-fun b!127088 () Bool)

(declare-fun res!61439 () Bool)

(assert (=> b!127088 (=> (not res!61439) (not e!82981))))

(assert (=> b!127088 (= res!61439 (= (getValueByKey!166 (toList!858 lt!65750) (_1!1294 (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))) (Some!171 (_2!1294 (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))))

(declare-fun b!127089 () Bool)

(assert (=> b!127089 (= e!82981 (contains!878 (toList!858 lt!65750) (ite (or c!23125 c!23128) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(assert (= (and d!38369 res!61438) b!127088))

(assert (= (and b!127088 res!61439) b!127089))

(declare-fun m!148571 () Bool)

(assert (=> d!38369 m!148571))

(declare-fun m!148573 () Bool)

(assert (=> d!38369 m!148573))

(declare-fun m!148575 () Bool)

(assert (=> d!38369 m!148575))

(declare-fun m!148577 () Bool)

(assert (=> d!38369 m!148577))

(declare-fun m!148579 () Bool)

(assert (=> b!127088 m!148579))

(declare-fun m!148581 () Bool)

(assert (=> b!127089 m!148581))

(assert (=> bm!13622 d!38369))

(declare-fun b!127099 () Bool)

(declare-fun res!61451 () Bool)

(declare-fun e!82987 () Bool)

(assert (=> b!127099 (=> (not res!61451) (not e!82987))))

(assert (=> b!127099 (= res!61451 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun d!38371 () Bool)

(declare-fun e!82986 () Bool)

(assert (=> d!38371 e!82986))

(declare-fun res!61450 () Bool)

(assert (=> d!38371 (=> (not res!61450) (not e!82986))))

(assert (=> d!38371 (= res!61450 (and (bvsge (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000000) (bvslt (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (size!2488 (_keys!4516 newMap!16)))))))

(declare-fun lt!65755 () Unit!3936)

(declare-fun choose!1 (array!4698 (_ BitVec 32) (_ BitVec 64)) Unit!3936)

(assert (=> d!38371 (= lt!65755 (choose!1 (_keys!4516 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> d!38371 e!82987))

(declare-fun res!61449 () Bool)

(assert (=> d!38371 (=> (not res!61449) (not e!82987))))

(assert (=> d!38371 (= res!61449 (and (bvsge (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000000) (bvslt (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (size!2488 (_keys!4516 newMap!16)))))))

(assert (=> d!38371 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4516 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) lt!65755)))

(declare-fun b!127098 () Bool)

(declare-fun res!61448 () Bool)

(assert (=> b!127098 (=> (not res!61448) (not e!82987))))

(assert (=> b!127098 (= res!61448 (not (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194))))))))

(declare-fun b!127100 () Bool)

(assert (=> b!127100 (= e!82987 (bvslt (size!2488 (_keys!4516 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!127101 () Bool)

(assert (=> b!127101 (= e!82986 (= (arrayCountValidKeys!0 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4516 newMap!16) #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!38371 res!61449) b!127098))

(assert (= (and b!127098 res!61448) b!127099))

(assert (= (and b!127099 res!61451) b!127100))

(assert (= (and d!38371 res!61450) b!127101))

(assert (=> b!127099 m!147095))

(declare-fun m!148583 () Bool)

(assert (=> b!127099 m!148583))

(assert (=> d!38371 m!147095))

(declare-fun m!148585 () Bool)

(assert (=> d!38371 m!148585))

(declare-fun m!148587 () Bool)

(assert (=> b!127098 m!148587))

(assert (=> b!127098 m!148587))

(declare-fun m!148589 () Bool)

(assert (=> b!127098 m!148589))

(assert (=> b!127101 m!147635))

(assert (=> b!127101 m!147661))

(assert (=> b!127101 m!147153))

(assert (=> d!38097 d!38371))

(assert (=> d!38097 d!38283))

(assert (=> d!38097 d!38109))

(assert (=> d!38097 d!37983))

(declare-fun d!38373 () Bool)

(assert (=> d!38373 (arrayContainsKey!0 lt!65424 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!65756 () Unit!3936)

(assert (=> d!38373 (= lt!65756 (choose!13 lt!65424 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194))))))

(assert (=> d!38373 (bvsge (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000000)))

(assert (=> d!38373 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!65424 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194))) lt!65756)))

(declare-fun bs!5266 () Bool)

(assert (= bs!5266 d!38373))

(assert (=> bs!5266 m!147095))

(assert (=> bs!5266 m!147647))

(assert (=> bs!5266 m!147095))

(declare-fun m!148591 () Bool)

(assert (=> bs!5266 m!148591))

(assert (=> d!38097 d!38373))

(assert (=> d!38097 d!38049))

(declare-fun b!127102 () Bool)

(declare-fun e!82988 () (_ BitVec 32))

(declare-fun call!13700 () (_ BitVec 32))

(assert (=> b!127102 (= e!82988 (bvadd #b00000000000000000000000000000001 call!13700))))

(declare-fun b!127103 () Bool)

(declare-fun e!82989 () (_ BitVec 32))

(assert (=> b!127103 (= e!82989 e!82988)))

(declare-fun c!23284 () Bool)

(assert (=> b!127103 (= c!23284 (validKeyInArray!0 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!127104 () Bool)

(assert (=> b!127104 (= e!82989 #b00000000000000000000000000000000)))

(declare-fun lt!65757 () (_ BitVec 32))

(declare-fun d!38375 () Bool)

(assert (=> d!38375 (and (bvsge lt!65757 #b00000000000000000000000000000000) (bvsle lt!65757 (bvsub (size!2488 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!38375 (= lt!65757 e!82989)))

(declare-fun c!23283 () Bool)

(assert (=> d!38375 (= c!23283 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38375 (and (bvsle #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2488 (_keys!4516 newMap!16)) (size!2488 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))))))

(assert (=> d!38375 (= (arrayCountValidKeys!0 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) lt!65757)))

(declare-fun bm!13697 () Bool)

(assert (=> bm!13697 (= call!13700 (arrayCountValidKeys!0 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127105 () Bool)

(assert (=> b!127105 (= e!82988 call!13700)))

(assert (= (and d!38375 c!23283) b!127104))

(assert (= (and d!38375 (not c!23283)) b!127103))

(assert (= (and b!127103 c!23284) b!127102))

(assert (= (and b!127103 (not c!23284)) b!127105))

(assert (= (or b!127102 b!127105) bm!13697))

(declare-fun m!148593 () Bool)

(assert (=> b!127103 m!148593))

(assert (=> b!127103 m!148593))

(declare-fun m!148595 () Bool)

(assert (=> b!127103 m!148595))

(declare-fun m!148597 () Bool)

(assert (=> bm!13697 m!148597))

(assert (=> d!38097 d!38375))

(declare-fun b!127106 () Bool)

(declare-fun e!82990 () Bool)

(declare-fun call!13701 () Bool)

(assert (=> b!127106 (= e!82990 call!13701)))

(declare-fun b!127107 () Bool)

(declare-fun e!82992 () Bool)

(assert (=> b!127107 (= e!82992 e!82990)))

(declare-fun c!23285 () Bool)

(assert (=> b!127107 (= c!23285 (validKeyInArray!0 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) lt!65440)))))

(declare-fun e!82993 () Bool)

(declare-fun b!127108 () Bool)

(assert (=> b!127108 (= e!82993 (contains!879 lt!65432 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) lt!65440)))))

(declare-fun b!127109 () Bool)

(declare-fun e!82991 () Bool)

(assert (=> b!127109 (= e!82991 e!82992)))

(declare-fun res!61453 () Bool)

(assert (=> b!127109 (=> (not res!61453) (not e!82992))))

(assert (=> b!127109 (= res!61453 (not e!82993))))

(declare-fun res!61452 () Bool)

(assert (=> b!127109 (=> (not res!61452) (not e!82993))))

(assert (=> b!127109 (= res!61452 (validKeyInArray!0 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) lt!65440)))))

(declare-fun bm!13698 () Bool)

(assert (=> bm!13698 (= call!13701 (arrayNoDuplicates!0 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (bvadd lt!65440 #b00000000000000000000000000000001) (ite c!23285 (Cons!1716 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) lt!65440) lt!65432) lt!65432)))))

(declare-fun d!38377 () Bool)

(declare-fun res!61454 () Bool)

(assert (=> d!38377 (=> res!61454 e!82991)))

(assert (=> d!38377 (= res!61454 (bvsge lt!65440 (size!2488 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))))))

(assert (=> d!38377 (= (arrayNoDuplicates!0 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) lt!65440 lt!65432) e!82991)))

(declare-fun b!127110 () Bool)

(assert (=> b!127110 (= e!82990 call!13701)))

(assert (= (and d!38377 (not res!61454)) b!127109))

(assert (= (and b!127109 res!61452) b!127108))

(assert (= (and b!127109 res!61453) b!127107))

(assert (= (and b!127107 c!23285) b!127106))

(assert (= (and b!127107 (not c!23285)) b!127110))

(assert (= (or b!127106 b!127110) bm!13698))

(declare-fun m!148599 () Bool)

(assert (=> b!127107 m!148599))

(assert (=> b!127107 m!148599))

(declare-fun m!148601 () Bool)

(assert (=> b!127107 m!148601))

(assert (=> b!127108 m!148599))

(assert (=> b!127108 m!148599))

(declare-fun m!148603 () Bool)

(assert (=> b!127108 m!148603))

(assert (=> b!127109 m!148599))

(assert (=> b!127109 m!148599))

(assert (=> b!127109 m!148601))

(assert (=> bm!13698 m!148599))

(declare-fun m!148605 () Bool)

(assert (=> bm!13698 m!148605))

(assert (=> d!38097 d!38377))

(declare-fun d!38379 () Bool)

(declare-fun e!82996 () Bool)

(assert (=> d!38379 e!82996))

(declare-fun res!61457 () Bool)

(assert (=> d!38379 (=> (not res!61457) (not e!82996))))

(assert (=> d!38379 (= res!61457 (and (bvsge (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000000) (bvslt (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (size!2488 (_keys!4516 newMap!16)))))))

(declare-fun lt!65760 () Unit!3936)

(declare-fun choose!41 (array!4698 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1720) Unit!3936)

(assert (=> d!38379 (= lt!65760 (choose!41 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) lt!65440 lt!65432))))

(assert (=> d!38379 (bvslt (size!2488 (_keys!4516 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!38379 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) lt!65440 lt!65432) lt!65760)))

(declare-fun b!127113 () Bool)

(assert (=> b!127113 (= e!82996 (arrayNoDuplicates!0 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) lt!65440 lt!65432))))

(assert (= (and d!38379 res!61457) b!127113))

(assert (=> d!38379 m!147095))

(declare-fun m!148607 () Bool)

(assert (=> d!38379 m!148607))

(assert (=> b!127113 m!147635))

(assert (=> b!127113 m!147649))

(assert (=> d!38097 d!38379))

(declare-fun d!38381 () Bool)

(assert (=> d!38381 (= (arrayCountValidKeys!0 lt!65433 (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (bvadd (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!65763 () Unit!3936)

(declare-fun choose!2 (array!4698 (_ BitVec 32)) Unit!3936)

(assert (=> d!38381 (= lt!65763 (choose!2 lt!65433 (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194))))))

(declare-fun e!82999 () Bool)

(assert (=> d!38381 e!82999))

(declare-fun res!61462 () Bool)

(assert (=> d!38381 (=> (not res!61462) (not e!82999))))

(assert (=> d!38381 (= res!61462 (and (bvsge (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000000) (bvslt (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (size!2488 lt!65433))))))

(assert (=> d!38381 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!65433 (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194))) lt!65763)))

(declare-fun b!127118 () Bool)

(declare-fun res!61463 () Bool)

(assert (=> b!127118 (=> (not res!61463) (not e!82999))))

(assert (=> b!127118 (= res!61463 (validKeyInArray!0 (select (arr!2224 lt!65433) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)))))))

(declare-fun b!127119 () Bool)

(assert (=> b!127119 (= e!82999 (bvslt (size!2488 lt!65433) #b01111111111111111111111111111111))))

(assert (= (and d!38381 res!61462) b!127118))

(assert (= (and b!127118 res!61463) b!127119))

(assert (=> d!38381 m!147643))

(declare-fun m!148609 () Bool)

(assert (=> d!38381 m!148609))

(declare-fun m!148611 () Bool)

(assert (=> b!127118 m!148611))

(assert (=> b!127118 m!148611))

(declare-fun m!148613 () Bool)

(assert (=> b!127118 m!148613))

(assert (=> d!38097 d!38381))

(declare-fun bm!13700 () Bool)

(declare-fun call!13707 () ListLongMap!1685)

(declare-fun call!13705 () ListLongMap!1685)

(assert (=> bm!13700 (= call!13707 call!13705)))

(declare-fun bm!13701 () Bool)

(declare-fun call!13703 () ListLongMap!1685)

(declare-fun call!13704 () ListLongMap!1685)

(assert (=> bm!13701 (= call!13703 call!13704)))

(declare-fun b!127120 () Bool)

(declare-fun e!83007 () Unit!3936)

(declare-fun lt!65784 () Unit!3936)

(assert (=> b!127120 (= e!83007 lt!65784)))

(declare-fun lt!65785 () ListLongMap!1685)

(assert (=> b!127120 (= lt!65785 (getCurrentListMapNoExtraKeys!132 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65774 () (_ BitVec 64))

(assert (=> b!127120 (= lt!65774 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65765 () (_ BitVec 64))

(assert (=> b!127120 (= lt!65765 (select (arr!2224 lt!65419) #b00000000000000000000000000000000))))

(declare-fun lt!65781 () Unit!3936)

(assert (=> b!127120 (= lt!65781 (addStillContains!87 lt!65785 lt!65774 (zeroValue!2646 newMap!16) lt!65765))))

(assert (=> b!127120 (contains!877 (+!165 lt!65785 (tuple2!2569 lt!65774 (zeroValue!2646 newMap!16))) lt!65765)))

(declare-fun lt!65769 () Unit!3936)

(assert (=> b!127120 (= lt!65769 lt!65781)))

(declare-fun lt!65778 () ListLongMap!1685)

(assert (=> b!127120 (= lt!65778 (getCurrentListMapNoExtraKeys!132 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65783 () (_ BitVec 64))

(assert (=> b!127120 (= lt!65783 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65771 () (_ BitVec 64))

(assert (=> b!127120 (= lt!65771 (select (arr!2224 lt!65419) #b00000000000000000000000000000000))))

(declare-fun lt!65776 () Unit!3936)

(assert (=> b!127120 (= lt!65776 (addApplyDifferent!87 lt!65778 lt!65783 (minValue!2646 newMap!16) lt!65771))))

(assert (=> b!127120 (= (apply!111 (+!165 lt!65778 (tuple2!2569 lt!65783 (minValue!2646 newMap!16))) lt!65771) (apply!111 lt!65778 lt!65771))))

(declare-fun lt!65779 () Unit!3936)

(assert (=> b!127120 (= lt!65779 lt!65776)))

(declare-fun lt!65777 () ListLongMap!1685)

(assert (=> b!127120 (= lt!65777 (getCurrentListMapNoExtraKeys!132 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65772 () (_ BitVec 64))

(assert (=> b!127120 (= lt!65772 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65767 () (_ BitVec 64))

(assert (=> b!127120 (= lt!65767 (select (arr!2224 lt!65419) #b00000000000000000000000000000000))))

(declare-fun lt!65770 () Unit!3936)

(assert (=> b!127120 (= lt!65770 (addApplyDifferent!87 lt!65777 lt!65772 (zeroValue!2646 newMap!16) lt!65767))))

(assert (=> b!127120 (= (apply!111 (+!165 lt!65777 (tuple2!2569 lt!65772 (zeroValue!2646 newMap!16))) lt!65767) (apply!111 lt!65777 lt!65767))))

(declare-fun lt!65773 () Unit!3936)

(assert (=> b!127120 (= lt!65773 lt!65770)))

(declare-fun lt!65780 () ListLongMap!1685)

(assert (=> b!127120 (= lt!65780 (getCurrentListMapNoExtraKeys!132 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65782 () (_ BitVec 64))

(assert (=> b!127120 (= lt!65782 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65775 () (_ BitVec 64))

(assert (=> b!127120 (= lt!65775 (select (arr!2224 lt!65419) #b00000000000000000000000000000000))))

(assert (=> b!127120 (= lt!65784 (addApplyDifferent!87 lt!65780 lt!65782 (minValue!2646 newMap!16) lt!65775))))

(assert (=> b!127120 (= (apply!111 (+!165 lt!65780 (tuple2!2569 lt!65782 (minValue!2646 newMap!16))) lt!65775) (apply!111 lt!65780 lt!65775))))

(declare-fun call!13708 () ListLongMap!1685)

(declare-fun c!23290 () Bool)

(declare-fun c!23287 () Bool)

(declare-fun bm!13702 () Bool)

(assert (=> bm!13702 (= call!13704 (+!165 (ite c!23287 call!13708 (ite c!23290 call!13705 call!13707)) (ite (or c!23287 c!23290) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(declare-fun b!127121 () Bool)

(declare-fun Unit!3972 () Unit!3936)

(assert (=> b!127121 (= e!83007 Unit!3972)))

(declare-fun bm!13703 () Bool)

(assert (=> bm!13703 (= call!13708 (getCurrentListMapNoExtraKeys!132 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun b!127122 () Bool)

(declare-fun res!61465 () Bool)

(declare-fun e!83010 () Bool)

(assert (=> b!127122 (=> (not res!61465) (not e!83010))))

(declare-fun e!83012 () Bool)

(assert (=> b!127122 (= res!61465 e!83012)))

(declare-fun c!23288 () Bool)

(assert (=> b!127122 (= c!23288 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!127123 () Bool)

(declare-fun e!83004 () Bool)

(declare-fun lt!65766 () ListLongMap!1685)

(assert (=> b!127123 (= e!83004 (= (apply!111 lt!65766 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2646 newMap!16)))))

(declare-fun bm!13704 () Bool)

(declare-fun call!13702 () Bool)

(assert (=> bm!13704 (= call!13702 (contains!877 lt!65766 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127124 () Bool)

(declare-fun e!83001 () ListLongMap!1685)

(assert (=> b!127124 (= e!83001 call!13703)))

(declare-fun b!127125 () Bool)

(declare-fun e!83009 () Bool)

(declare-fun e!83002 () Bool)

(assert (=> b!127125 (= e!83009 e!83002)))

(declare-fun res!61470 () Bool)

(assert (=> b!127125 (=> (not res!61470) (not e!83002))))

(assert (=> b!127125 (= res!61470 (contains!877 lt!65766 (select (arr!2224 lt!65419) #b00000000000000000000000000000000)))))

(assert (=> b!127125 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 lt!65419)))))

(declare-fun b!127126 () Bool)

(declare-fun c!23291 () Bool)

(assert (=> b!127126 (= c!23291 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!83003 () ListLongMap!1685)

(assert (=> b!127126 (= e!83001 e!83003)))

(declare-fun bm!13699 () Bool)

(declare-fun call!13706 () Bool)

(assert (=> bm!13699 (= call!13706 (contains!877 lt!65766 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!38383 () Bool)

(assert (=> d!38383 e!83010))

(declare-fun res!61469 () Bool)

(assert (=> d!38383 (=> (not res!61469) (not e!83010))))

(assert (=> d!38383 (= res!61469 (or (bvsge #b00000000000000000000000000000000 (size!2488 lt!65419)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 lt!65419)))))))

(declare-fun lt!65764 () ListLongMap!1685)

(assert (=> d!38383 (= lt!65766 lt!65764)))

(declare-fun lt!65768 () Unit!3936)

(assert (=> d!38383 (= lt!65768 e!83007)))

(declare-fun c!23286 () Bool)

(declare-fun e!83006 () Bool)

(assert (=> d!38383 (= c!23286 e!83006)))

(declare-fun res!61472 () Bool)

(assert (=> d!38383 (=> (not res!61472) (not e!83006))))

(assert (=> d!38383 (= res!61472 (bvslt #b00000000000000000000000000000000 (size!2488 lt!65419)))))

(declare-fun e!83011 () ListLongMap!1685)

(assert (=> d!38383 (= lt!65764 e!83011)))

(assert (=> d!38383 (= c!23287 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!38383 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38383 (= (getCurrentListMap!530 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65766)))

(declare-fun b!127127 () Bool)

(declare-fun e!83005 () Bool)

(assert (=> b!127127 (= e!83005 (validKeyInArray!0 (select (arr!2224 lt!65419) #b00000000000000000000000000000000)))))

(declare-fun b!127128 () Bool)

(assert (=> b!127128 (= e!83002 (= (apply!111 lt!65766 (select (arr!2224 lt!65419) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 lt!65441) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!127128 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 lt!65441)))))

(assert (=> b!127128 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 lt!65419)))))

(declare-fun b!127129 () Bool)

(assert (=> b!127129 (= e!83012 (not call!13706))))

(declare-fun b!127130 () Bool)

(assert (=> b!127130 (= e!83003 call!13707)))

(declare-fun b!127131 () Bool)

(assert (=> b!127131 (= e!83012 e!83004)))

(declare-fun res!61464 () Bool)

(assert (=> b!127131 (= res!61464 call!13706)))

(assert (=> b!127131 (=> (not res!61464) (not e!83004))))

(declare-fun b!127132 () Bool)

(assert (=> b!127132 (= e!83003 call!13703)))

(declare-fun b!127133 () Bool)

(declare-fun e!83008 () Bool)

(declare-fun e!83000 () Bool)

(assert (=> b!127133 (= e!83008 e!83000)))

(declare-fun res!61468 () Bool)

(assert (=> b!127133 (= res!61468 call!13702)))

(assert (=> b!127133 (=> (not res!61468) (not e!83000))))

(declare-fun b!127134 () Bool)

(assert (=> b!127134 (= e!83010 e!83008)))

(declare-fun c!23289 () Bool)

(assert (=> b!127134 (= c!23289 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!127135 () Bool)

(assert (=> b!127135 (= e!83011 e!83001)))

(assert (=> b!127135 (= c!23290 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!127136 () Bool)

(assert (=> b!127136 (= e!83006 (validKeyInArray!0 (select (arr!2224 lt!65419) #b00000000000000000000000000000000)))))

(declare-fun b!127137 () Bool)

(declare-fun res!61471 () Bool)

(assert (=> b!127137 (=> (not res!61471) (not e!83010))))

(assert (=> b!127137 (= res!61471 e!83009)))

(declare-fun res!61466 () Bool)

(assert (=> b!127137 (=> res!61466 e!83009)))

(assert (=> b!127137 (= res!61466 (not e!83005))))

(declare-fun res!61467 () Bool)

(assert (=> b!127137 (=> (not res!61467) (not e!83005))))

(assert (=> b!127137 (= res!61467 (bvslt #b00000000000000000000000000000000 (size!2488 lt!65419)))))

(declare-fun bm!13705 () Bool)

(assert (=> bm!13705 (= call!13705 call!13708)))

(declare-fun b!127138 () Bool)

(assert (=> b!127138 (= e!83011 (+!165 call!13704 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))

(declare-fun b!127139 () Bool)

(assert (=> b!127139 (= e!83000 (= (apply!111 lt!65766 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2646 newMap!16)))))

(declare-fun b!127140 () Bool)

(assert (=> b!127140 (= e!83008 (not call!13702))))

(assert (= (and d!38383 c!23287) b!127138))

(assert (= (and d!38383 (not c!23287)) b!127135))

(assert (= (and b!127135 c!23290) b!127124))

(assert (= (and b!127135 (not c!23290)) b!127126))

(assert (= (and b!127126 c!23291) b!127132))

(assert (= (and b!127126 (not c!23291)) b!127130))

(assert (= (or b!127132 b!127130) bm!13700))

(assert (= (or b!127124 bm!13700) bm!13705))

(assert (= (or b!127124 b!127132) bm!13701))

(assert (= (or b!127138 bm!13705) bm!13703))

(assert (= (or b!127138 bm!13701) bm!13702))

(assert (= (and d!38383 res!61472) b!127136))

(assert (= (and d!38383 c!23286) b!127120))

(assert (= (and d!38383 (not c!23286)) b!127121))

(assert (= (and d!38383 res!61469) b!127137))

(assert (= (and b!127137 res!61467) b!127127))

(assert (= (and b!127137 (not res!61466)) b!127125))

(assert (= (and b!127125 res!61470) b!127128))

(assert (= (and b!127137 res!61471) b!127122))

(assert (= (and b!127122 c!23288) b!127131))

(assert (= (and b!127122 (not c!23288)) b!127129))

(assert (= (and b!127131 res!61464) b!127123))

(assert (= (or b!127131 b!127129) bm!13699))

(assert (= (and b!127122 res!61465) b!127134))

(assert (= (and b!127134 c!23289) b!127133))

(assert (= (and b!127134 (not c!23289)) b!127140))

(assert (= (and b!127133 res!61468) b!127139))

(assert (= (or b!127133 b!127140) bm!13704))

(declare-fun b_lambda!5627 () Bool)

(assert (=> (not b_lambda!5627) (not b!127128)))

(assert (=> b!127128 t!6085))

(declare-fun b_and!7845 () Bool)

(assert (= b_and!7841 (and (=> t!6085 result!3859) b_and!7845)))

(assert (=> b!127128 t!6087))

(declare-fun b_and!7847 () Bool)

(assert (= b_and!7843 (and (=> t!6087 result!3861) b_and!7847)))

(declare-fun m!148615 () Bool)

(assert (=> bm!13702 m!148615))

(declare-fun m!148617 () Bool)

(assert (=> bm!13703 m!148617))

(declare-fun m!148619 () Bool)

(assert (=> b!127136 m!148619))

(assert (=> b!127136 m!148619))

(declare-fun m!148621 () Bool)

(assert (=> b!127136 m!148621))

(assert (=> d!38383 m!147475))

(declare-fun m!148623 () Bool)

(assert (=> bm!13699 m!148623))

(declare-fun m!148625 () Bool)

(assert (=> bm!13704 m!148625))

(declare-fun m!148627 () Bool)

(assert (=> b!127138 m!148627))

(declare-fun m!148629 () Bool)

(assert (=> b!127123 m!148629))

(declare-fun m!148631 () Bool)

(assert (=> b!127120 m!148631))

(declare-fun m!148633 () Bool)

(assert (=> b!127120 m!148633))

(declare-fun m!148635 () Bool)

(assert (=> b!127120 m!148635))

(declare-fun m!148637 () Bool)

(assert (=> b!127120 m!148637))

(declare-fun m!148639 () Bool)

(assert (=> b!127120 m!148639))

(declare-fun m!148641 () Bool)

(assert (=> b!127120 m!148641))

(assert (=> b!127120 m!148617))

(declare-fun m!148643 () Bool)

(assert (=> b!127120 m!148643))

(declare-fun m!148645 () Bool)

(assert (=> b!127120 m!148645))

(declare-fun m!148647 () Bool)

(assert (=> b!127120 m!148647))

(assert (=> b!127120 m!148639))

(declare-fun m!148649 () Bool)

(assert (=> b!127120 m!148649))

(assert (=> b!127120 m!148637))

(declare-fun m!148651 () Bool)

(assert (=> b!127120 m!148651))

(declare-fun m!148653 () Bool)

(assert (=> b!127120 m!148653))

(assert (=> b!127120 m!148619))

(assert (=> b!127120 m!148643))

(declare-fun m!148655 () Bool)

(assert (=> b!127120 m!148655))

(declare-fun m!148657 () Bool)

(assert (=> b!127120 m!148657))

(declare-fun m!148659 () Bool)

(assert (=> b!127120 m!148659))

(assert (=> b!127120 m!148657))

(assert (=> b!127127 m!148619))

(assert (=> b!127127 m!148619))

(assert (=> b!127127 m!148621))

(declare-fun m!148661 () Bool)

(assert (=> b!127128 m!148661))

(assert (=> b!127128 m!147581))

(declare-fun m!148663 () Bool)

(assert (=> b!127128 m!148663))

(assert (=> b!127128 m!148661))

(assert (=> b!127128 m!148619))

(declare-fun m!148665 () Bool)

(assert (=> b!127128 m!148665))

(assert (=> b!127128 m!147581))

(assert (=> b!127128 m!148619))

(assert (=> b!127125 m!148619))

(assert (=> b!127125 m!148619))

(declare-fun m!148667 () Bool)

(assert (=> b!127125 m!148667))

(declare-fun m!148669 () Bool)

(assert (=> b!127139 m!148669))

(assert (=> d!38097 d!38383))

(declare-fun d!38385 () Bool)

(declare-fun e!83015 () Bool)

(assert (=> d!38385 e!83015))

(declare-fun res!61475 () Bool)

(assert (=> d!38385 (=> (not res!61475) (not e!83015))))

(assert (=> d!38385 (= res!61475 (and (bvsge (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000000) (bvslt (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (size!2488 (_keys!4516 newMap!16))) (bvslt (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (size!2489 (_values!2766 newMap!16)))))))

(declare-fun lt!65788 () Unit!3936)

(declare-fun choose!780 (array!4698 array!4700 (_ BitVec 32) (_ BitVec 32) V!3435 V!3435 (_ BitVec 32) (_ BitVec 64) V!3435 Int) Unit!3936)

(assert (=> d!38385 (= lt!65788 (choose!780 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2783 newMap!16)))))

(assert (=> d!38385 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38385 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!37 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2783 newMap!16)) lt!65788)))

(declare-fun b!127143 () Bool)

(assert (=> b!127143 (= e!83015 (= (+!165 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!530 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))))))

(assert (= (and d!38385 res!61475) b!127143))

(assert (=> d!38385 m!147095))

(assert (=> d!38385 m!147093))

(declare-fun m!148671 () Bool)

(assert (=> d!38385 m!148671))

(assert (=> d!38385 m!147475))

(assert (=> b!127143 m!147159))

(assert (=> b!127143 m!147667))

(assert (=> b!127143 m!147659))

(assert (=> b!127143 m!147637))

(assert (=> b!127143 m!147159))

(assert (=> b!127143 m!147635))

(assert (=> d!38097 d!38385))

(declare-fun d!38387 () Bool)

(declare-fun e!83018 () Bool)

(assert (=> d!38387 e!83018))

(declare-fun res!61478 () Bool)

(assert (=> d!38387 (=> (not res!61478) (not e!83018))))

(assert (=> d!38387 (= res!61478 (and (bvsge (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000000) (bvslt (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (size!2488 (_keys!4516 newMap!16)))))))

(declare-fun lt!65791 () Unit!3936)

(declare-fun choose!102 ((_ BitVec 64) array!4698 (_ BitVec 32) (_ BitVec 32)) Unit!3936)

(assert (=> d!38387 (= lt!65791 (choose!102 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (mask!7039 newMap!16)))))

(assert (=> d!38387 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38387 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (mask!7039 newMap!16)) lt!65791)))

(declare-fun b!127146 () Bool)

(assert (=> b!127146 (= e!83018 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (mask!7039 newMap!16)))))

(assert (= (and d!38387 res!61478) b!127146))

(assert (=> d!38387 m!147095))

(declare-fun m!148673 () Bool)

(assert (=> d!38387 m!148673))

(assert (=> d!38387 m!147475))

(assert (=> b!127146 m!147635))

(assert (=> b!127146 m!147653))

(assert (=> d!38097 d!38387))

(declare-fun b!127147 () Bool)

(declare-fun e!83019 () (_ BitVec 32))

(declare-fun call!13709 () (_ BitVec 32))

(assert (=> b!127147 (= e!83019 (bvadd #b00000000000000000000000000000001 call!13709))))

(declare-fun b!127148 () Bool)

(declare-fun e!83020 () (_ BitVec 32))

(assert (=> b!127148 (= e!83020 e!83019)))

(declare-fun c!23293 () Bool)

(assert (=> b!127148 (= c!23293 (validKeyInArray!0 (select (arr!2224 lt!65433) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)))))))

(declare-fun b!127149 () Bool)

(assert (=> b!127149 (= e!83020 #b00000000000000000000000000000000)))

(declare-fun d!38389 () Bool)

(declare-fun lt!65792 () (_ BitVec 32))

(assert (=> d!38389 (and (bvsge lt!65792 #b00000000000000000000000000000000) (bvsle lt!65792 (bvsub (size!2488 lt!65433) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)))))))

(assert (=> d!38389 (= lt!65792 e!83020)))

(declare-fun c!23292 () Bool)

(assert (=> d!38389 (= c!23292 (bvsge (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (bvadd (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000001)))))

(assert (=> d!38389 (and (bvsle (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (bvadd (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000001)) (bvsge (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000001) (size!2488 lt!65433)))))

(assert (=> d!38389 (= (arrayCountValidKeys!0 lt!65433 (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (bvadd (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000001)) lt!65792)))

(declare-fun bm!13706 () Bool)

(assert (=> bm!13706 (= call!13709 (arrayCountValidKeys!0 lt!65433 (bvadd (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000001) (bvadd (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000001)))))

(declare-fun b!127150 () Bool)

(assert (=> b!127150 (= e!83019 call!13709)))

(assert (= (and d!38389 c!23292) b!127149))

(assert (= (and d!38389 (not c!23292)) b!127148))

(assert (= (and b!127148 c!23293) b!127147))

(assert (= (and b!127148 (not c!23293)) b!127150))

(assert (= (or b!127147 b!127150) bm!13706))

(assert (=> b!127148 m!148611))

(assert (=> b!127148 m!148611))

(assert (=> b!127148 m!148613))

(declare-fun m!148675 () Bool)

(assert (=> bm!13706 m!148675))

(assert (=> d!38097 d!38389))

(declare-fun d!38391 () Bool)

(declare-fun e!83021 () Bool)

(assert (=> d!38391 e!83021))

(declare-fun res!61479 () Bool)

(assert (=> d!38391 (=> (not res!61479) (not e!83021))))

(assert (=> d!38391 (= res!61479 (and (bvsge (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) #b00000000000000000000000000000000) (bvslt (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (size!2488 lt!65419))))))

(declare-fun lt!65793 () Unit!3936)

(assert (=> d!38391 (= lt!65793 (choose!775 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (defaultEntry!2783 newMap!16)))))

(assert (=> d!38391 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38391 (= (lemmaValidKeyInArrayIsInListMap!114 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (defaultEntry!2783 newMap!16)) lt!65793)))

(declare-fun b!127151 () Bool)

(assert (=> b!127151 (= e!83021 (contains!877 (getCurrentListMap!530 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (select (arr!2224 lt!65419) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)))))))

(assert (= (and d!38391 res!61479) b!127151))

(declare-fun m!148677 () Bool)

(assert (=> d!38391 m!148677))

(assert (=> d!38391 m!147475))

(assert (=> b!127151 m!147639))

(declare-fun m!148679 () Bool)

(assert (=> b!127151 m!148679))

(assert (=> b!127151 m!147639))

(assert (=> b!127151 m!148679))

(declare-fun m!148681 () Bool)

(assert (=> b!127151 m!148681))

(assert (=> d!38097 d!38391))

(assert (=> d!38097 d!38189))

(assert (=> d!38097 d!38063))

(declare-fun d!38393 () Bool)

(declare-fun e!83023 () Bool)

(assert (=> d!38393 e!83023))

(declare-fun res!61480 () Bool)

(assert (=> d!38393 (=> res!61480 e!83023)))

(declare-fun lt!65795 () Bool)

(assert (=> d!38393 (= res!61480 (not lt!65795))))

(declare-fun lt!65794 () Bool)

(assert (=> d!38393 (= lt!65795 lt!65794)))

(declare-fun lt!65796 () Unit!3936)

(declare-fun e!83022 () Unit!3936)

(assert (=> d!38393 (= lt!65796 e!83022)))

(declare-fun c!23294 () Bool)

(assert (=> d!38393 (= c!23294 lt!65794)))

(assert (=> d!38393 (= lt!65794 (containsKey!170 (toList!858 (getCurrentListMap!530 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)))))))

(assert (=> d!38393 (= (contains!877 (getCurrentListMap!530 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (select (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)))) lt!65795)))

(declare-fun b!127152 () Bool)

(declare-fun lt!65797 () Unit!3936)

(assert (=> b!127152 (= e!83022 lt!65797)))

(assert (=> b!127152 (= lt!65797 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 (getCurrentListMap!530 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)))))))

(assert (=> b!127152 (isDefined!120 (getValueByKey!166 (toList!858 (getCurrentListMap!530 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)))))))

(declare-fun b!127153 () Bool)

(declare-fun Unit!3973 () Unit!3936)

(assert (=> b!127153 (= e!83022 Unit!3973)))

(declare-fun b!127154 () Bool)

(assert (=> b!127154 (= e!83023 (isDefined!120 (getValueByKey!166 (toList!858 (getCurrentListMap!530 lt!65419 lt!65441 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194))))))))

(assert (= (and d!38393 c!23294) b!127152))

(assert (= (and d!38393 (not c!23294)) b!127153))

(assert (= (and d!38393 (not res!61480)) b!127154))

(assert (=> d!38393 m!147633))

(declare-fun m!148683 () Bool)

(assert (=> d!38393 m!148683))

(assert (=> b!127152 m!147633))

(declare-fun m!148685 () Bool)

(assert (=> b!127152 m!148685))

(assert (=> b!127152 m!147633))

(declare-fun m!148687 () Bool)

(assert (=> b!127152 m!148687))

(assert (=> b!127152 m!148687))

(declare-fun m!148689 () Bool)

(assert (=> b!127152 m!148689))

(assert (=> b!127154 m!147633))

(assert (=> b!127154 m!148687))

(assert (=> b!127154 m!148687))

(assert (=> b!127154 m!148689))

(assert (=> d!38097 d!38393))

(declare-fun d!38395 () Bool)

(declare-fun res!61481 () Bool)

(declare-fun e!83024 () Bool)

(assert (=> d!38395 (=> res!61481 e!83024)))

(assert (=> d!38395 (= res!61481 (= (select (arr!2224 lt!65424) #b00000000000000000000000000000000) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> d!38395 (= (arrayContainsKey!0 lt!65424 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000) e!83024)))

(declare-fun b!127155 () Bool)

(declare-fun e!83025 () Bool)

(assert (=> b!127155 (= e!83024 e!83025)))

(declare-fun res!61482 () Bool)

(assert (=> b!127155 (=> (not res!61482) (not e!83025))))

(assert (=> b!127155 (= res!61482 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 lt!65424)))))

(declare-fun b!127156 () Bool)

(assert (=> b!127156 (= e!83025 (arrayContainsKey!0 lt!65424 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!38395 (not res!61481)) b!127155))

(assert (= (and b!127155 res!61482) b!127156))

(declare-fun m!148691 () Bool)

(assert (=> d!38395 m!148691))

(assert (=> b!127156 m!147095))

(declare-fun m!148693 () Bool)

(assert (=> b!127156 m!148693))

(assert (=> d!38097 d!38395))

(declare-fun bm!13708 () Bool)

(declare-fun call!13715 () ListLongMap!1685)

(declare-fun call!13713 () ListLongMap!1685)

(assert (=> bm!13708 (= call!13715 call!13713)))

(declare-fun bm!13709 () Bool)

(declare-fun call!13711 () ListLongMap!1685)

(declare-fun call!13712 () ListLongMap!1685)

(assert (=> bm!13709 (= call!13711 call!13712)))

(declare-fun b!127157 () Bool)

(declare-fun e!83033 () Unit!3936)

(declare-fun lt!65818 () Unit!3936)

(assert (=> b!127157 (= e!83033 lt!65818)))

(declare-fun lt!65819 () ListLongMap!1685)

(assert (=> b!127157 (= lt!65819 (getCurrentListMapNoExtraKeys!132 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65808 () (_ BitVec 64))

(assert (=> b!127157 (= lt!65808 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65799 () (_ BitVec 64))

(assert (=> b!127157 (= lt!65799 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!65815 () Unit!3936)

(assert (=> b!127157 (= lt!65815 (addStillContains!87 lt!65819 lt!65808 (zeroValue!2646 newMap!16) lt!65799))))

(assert (=> b!127157 (contains!877 (+!165 lt!65819 (tuple2!2569 lt!65808 (zeroValue!2646 newMap!16))) lt!65799)))

(declare-fun lt!65803 () Unit!3936)

(assert (=> b!127157 (= lt!65803 lt!65815)))

(declare-fun lt!65812 () ListLongMap!1685)

(assert (=> b!127157 (= lt!65812 (getCurrentListMapNoExtraKeys!132 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65817 () (_ BitVec 64))

(assert (=> b!127157 (= lt!65817 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65805 () (_ BitVec 64))

(assert (=> b!127157 (= lt!65805 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!65810 () Unit!3936)

(assert (=> b!127157 (= lt!65810 (addApplyDifferent!87 lt!65812 lt!65817 (minValue!2646 newMap!16) lt!65805))))

(assert (=> b!127157 (= (apply!111 (+!165 lt!65812 (tuple2!2569 lt!65817 (minValue!2646 newMap!16))) lt!65805) (apply!111 lt!65812 lt!65805))))

(declare-fun lt!65813 () Unit!3936)

(assert (=> b!127157 (= lt!65813 lt!65810)))

(declare-fun lt!65811 () ListLongMap!1685)

(assert (=> b!127157 (= lt!65811 (getCurrentListMapNoExtraKeys!132 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65806 () (_ BitVec 64))

(assert (=> b!127157 (= lt!65806 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65801 () (_ BitVec 64))

(assert (=> b!127157 (= lt!65801 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!65804 () Unit!3936)

(assert (=> b!127157 (= lt!65804 (addApplyDifferent!87 lt!65811 lt!65806 (zeroValue!2646 newMap!16) lt!65801))))

(assert (=> b!127157 (= (apply!111 (+!165 lt!65811 (tuple2!2569 lt!65806 (zeroValue!2646 newMap!16))) lt!65801) (apply!111 lt!65811 lt!65801))))

(declare-fun lt!65807 () Unit!3936)

(assert (=> b!127157 (= lt!65807 lt!65804)))

(declare-fun lt!65814 () ListLongMap!1685)

(assert (=> b!127157 (= lt!65814 (getCurrentListMapNoExtraKeys!132 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65816 () (_ BitVec 64))

(assert (=> b!127157 (= lt!65816 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65809 () (_ BitVec 64))

(assert (=> b!127157 (= lt!65809 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!127157 (= lt!65818 (addApplyDifferent!87 lt!65814 lt!65816 (minValue!2646 newMap!16) lt!65809))))

(assert (=> b!127157 (= (apply!111 (+!165 lt!65814 (tuple2!2569 lt!65816 (minValue!2646 newMap!16))) lt!65809) (apply!111 lt!65814 lt!65809))))

(declare-fun c!23299 () Bool)

(declare-fun call!13716 () ListLongMap!1685)

(declare-fun bm!13710 () Bool)

(declare-fun c!23296 () Bool)

(assert (=> bm!13710 (= call!13712 (+!165 (ite c!23296 call!13716 (ite c!23299 call!13713 call!13715)) (ite (or c!23296 c!23299) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(declare-fun b!127158 () Bool)

(declare-fun Unit!3974 () Unit!3936)

(assert (=> b!127158 (= e!83033 Unit!3974)))

(declare-fun bm!13711 () Bool)

(assert (=> bm!13711 (= call!13716 (getCurrentListMapNoExtraKeys!132 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun b!127159 () Bool)

(declare-fun res!61484 () Bool)

(declare-fun e!83036 () Bool)

(assert (=> b!127159 (=> (not res!61484) (not e!83036))))

(declare-fun e!83038 () Bool)

(assert (=> b!127159 (= res!61484 e!83038)))

(declare-fun c!23297 () Bool)

(assert (=> b!127159 (= c!23297 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!127160 () Bool)

(declare-fun e!83030 () Bool)

(declare-fun lt!65800 () ListLongMap!1685)

(assert (=> b!127160 (= e!83030 (= (apply!111 lt!65800 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2646 newMap!16)))))

(declare-fun bm!13712 () Bool)

(declare-fun call!13710 () Bool)

(assert (=> bm!13712 (= call!13710 (contains!877 lt!65800 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127161 () Bool)

(declare-fun e!83027 () ListLongMap!1685)

(assert (=> b!127161 (= e!83027 call!13711)))

(declare-fun b!127162 () Bool)

(declare-fun e!83035 () Bool)

(declare-fun e!83028 () Bool)

(assert (=> b!127162 (= e!83035 e!83028)))

(declare-fun res!61489 () Bool)

(assert (=> b!127162 (=> (not res!61489) (not e!83028))))

(assert (=> b!127162 (= res!61489 (contains!877 lt!65800 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!127162 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))))))

(declare-fun b!127163 () Bool)

(declare-fun c!23300 () Bool)

(assert (=> b!127163 (= c!23300 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!83029 () ListLongMap!1685)

(assert (=> b!127163 (= e!83027 e!83029)))

(declare-fun bm!13707 () Bool)

(declare-fun call!13714 () Bool)

(assert (=> bm!13707 (= call!13714 (contains!877 lt!65800 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!38397 () Bool)

(assert (=> d!38397 e!83036))

(declare-fun res!61488 () Bool)

(assert (=> d!38397 (=> (not res!61488) (not e!83036))))

(assert (=> d!38397 (= res!61488 (or (bvsge #b00000000000000000000000000000000 (size!2488 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))))))))

(declare-fun lt!65798 () ListLongMap!1685)

(assert (=> d!38397 (= lt!65800 lt!65798)))

(declare-fun lt!65802 () Unit!3936)

(assert (=> d!38397 (= lt!65802 e!83033)))

(declare-fun c!23295 () Bool)

(declare-fun e!83032 () Bool)

(assert (=> d!38397 (= c!23295 e!83032)))

(declare-fun res!61491 () Bool)

(assert (=> d!38397 (=> (not res!61491) (not e!83032))))

(assert (=> d!38397 (= res!61491 (bvslt #b00000000000000000000000000000000 (size!2488 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))))))

(declare-fun e!83037 () ListLongMap!1685)

(assert (=> d!38397 (= lt!65798 e!83037)))

(assert (=> d!38397 (= c!23296 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!38397 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38397 (= (getCurrentListMap!530 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65800)))

(declare-fun e!83031 () Bool)

(declare-fun b!127164 () Bool)

(assert (=> b!127164 (= e!83031 (validKeyInArray!0 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!127165 () Bool)

(assert (=> b!127165 (= e!83028 (= (apply!111 lt!65800 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!127165 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (array!4701 (store (arr!2225 (_values!2766 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (ValueCellFull!1077 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2489 (_values!2766 newMap!16))))))))

(assert (=> b!127165 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))))))

(declare-fun b!127166 () Bool)

(assert (=> b!127166 (= e!83038 (not call!13714))))

(declare-fun b!127167 () Bool)

(assert (=> b!127167 (= e!83029 call!13715)))

(declare-fun b!127168 () Bool)

(assert (=> b!127168 (= e!83038 e!83030)))

(declare-fun res!61483 () Bool)

(assert (=> b!127168 (= res!61483 call!13714)))

(assert (=> b!127168 (=> (not res!61483) (not e!83030))))

(declare-fun b!127169 () Bool)

(assert (=> b!127169 (= e!83029 call!13711)))

(declare-fun b!127170 () Bool)

(declare-fun e!83034 () Bool)

(declare-fun e!83026 () Bool)

(assert (=> b!127170 (= e!83034 e!83026)))

(declare-fun res!61487 () Bool)

(assert (=> b!127170 (= res!61487 call!13710)))

(assert (=> b!127170 (=> (not res!61487) (not e!83026))))

(declare-fun b!127171 () Bool)

(assert (=> b!127171 (= e!83036 e!83034)))

(declare-fun c!23298 () Bool)

(assert (=> b!127171 (= c!23298 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!127172 () Bool)

(assert (=> b!127172 (= e!83037 e!83027)))

(assert (=> b!127172 (= c!23299 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!127173 () Bool)

(assert (=> b!127173 (= e!83032 (validKeyInArray!0 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!127174 () Bool)

(declare-fun res!61490 () Bool)

(assert (=> b!127174 (=> (not res!61490) (not e!83036))))

(assert (=> b!127174 (= res!61490 e!83035)))

(declare-fun res!61485 () Bool)

(assert (=> b!127174 (=> res!61485 e!83035)))

(assert (=> b!127174 (= res!61485 (not e!83031))))

(declare-fun res!61486 () Bool)

(assert (=> b!127174 (=> (not res!61486) (not e!83031))))

(assert (=> b!127174 (= res!61486 (bvslt #b00000000000000000000000000000000 (size!2488 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))))))

(declare-fun bm!13713 () Bool)

(assert (=> bm!13713 (= call!13713 call!13716)))

(declare-fun b!127175 () Bool)

(assert (=> b!127175 (= e!83037 (+!165 call!13712 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))

(declare-fun b!127176 () Bool)

(assert (=> b!127176 (= e!83026 (= (apply!111 lt!65800 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2646 newMap!16)))))

(declare-fun b!127177 () Bool)

(assert (=> b!127177 (= e!83034 (not call!13710))))

(assert (= (and d!38397 c!23296) b!127175))

(assert (= (and d!38397 (not c!23296)) b!127172))

(assert (= (and b!127172 c!23299) b!127161))

(assert (= (and b!127172 (not c!23299)) b!127163))

(assert (= (and b!127163 c!23300) b!127169))

(assert (= (and b!127163 (not c!23300)) b!127167))

(assert (= (or b!127169 b!127167) bm!13708))

(assert (= (or b!127161 bm!13708) bm!13713))

(assert (= (or b!127161 b!127169) bm!13709))

(assert (= (or b!127175 bm!13713) bm!13711))

(assert (= (or b!127175 bm!13709) bm!13710))

(assert (= (and d!38397 res!61491) b!127173))

(assert (= (and d!38397 c!23295) b!127157))

(assert (= (and d!38397 (not c!23295)) b!127158))

(assert (= (and d!38397 res!61488) b!127174))

(assert (= (and b!127174 res!61486) b!127164))

(assert (= (and b!127174 (not res!61485)) b!127162))

(assert (= (and b!127162 res!61489) b!127165))

(assert (= (and b!127174 res!61490) b!127159))

(assert (= (and b!127159 c!23297) b!127168))

(assert (= (and b!127159 (not c!23297)) b!127166))

(assert (= (and b!127168 res!61483) b!127160))

(assert (= (or b!127168 b!127166) bm!13707))

(assert (= (and b!127159 res!61484) b!127171))

(assert (= (and b!127171 c!23298) b!127170))

(assert (= (and b!127171 (not c!23298)) b!127177))

(assert (= (and b!127170 res!61487) b!127176))

(assert (= (or b!127170 b!127177) bm!13712))

(declare-fun b_lambda!5629 () Bool)

(assert (=> (not b_lambda!5629) (not b!127165)))

(assert (=> b!127165 t!6085))

(declare-fun b_and!7849 () Bool)

(assert (= b_and!7845 (and (=> t!6085 result!3859) b_and!7849)))

(assert (=> b!127165 t!6087))

(declare-fun b_and!7851 () Bool)

(assert (= b_and!7847 (and (=> t!6087 result!3861) b_and!7851)))

(declare-fun m!148695 () Bool)

(assert (=> bm!13710 m!148695))

(declare-fun m!148697 () Bool)

(assert (=> bm!13711 m!148697))

(assert (=> b!127173 m!148593))

(assert (=> b!127173 m!148593))

(assert (=> b!127173 m!148595))

(assert (=> d!38397 m!147475))

(declare-fun m!148699 () Bool)

(assert (=> bm!13707 m!148699))

(declare-fun m!148701 () Bool)

(assert (=> bm!13712 m!148701))

(declare-fun m!148703 () Bool)

(assert (=> b!127175 m!148703))

(declare-fun m!148705 () Bool)

(assert (=> b!127160 m!148705))

(declare-fun m!148707 () Bool)

(assert (=> b!127157 m!148707))

(declare-fun m!148709 () Bool)

(assert (=> b!127157 m!148709))

(declare-fun m!148711 () Bool)

(assert (=> b!127157 m!148711))

(declare-fun m!148713 () Bool)

(assert (=> b!127157 m!148713))

(declare-fun m!148715 () Bool)

(assert (=> b!127157 m!148715))

(declare-fun m!148717 () Bool)

(assert (=> b!127157 m!148717))

(assert (=> b!127157 m!148697))

(declare-fun m!148719 () Bool)

(assert (=> b!127157 m!148719))

(declare-fun m!148721 () Bool)

(assert (=> b!127157 m!148721))

(declare-fun m!148723 () Bool)

(assert (=> b!127157 m!148723))

(assert (=> b!127157 m!148715))

(declare-fun m!148725 () Bool)

(assert (=> b!127157 m!148725))

(assert (=> b!127157 m!148713))

(declare-fun m!148727 () Bool)

(assert (=> b!127157 m!148727))

(declare-fun m!148729 () Bool)

(assert (=> b!127157 m!148729))

(assert (=> b!127157 m!148593))

(assert (=> b!127157 m!148719))

(declare-fun m!148731 () Bool)

(assert (=> b!127157 m!148731))

(declare-fun m!148733 () Bool)

(assert (=> b!127157 m!148733))

(declare-fun m!148735 () Bool)

(assert (=> b!127157 m!148735))

(assert (=> b!127157 m!148733))

(assert (=> b!127164 m!148593))

(assert (=> b!127164 m!148593))

(assert (=> b!127164 m!148595))

(declare-fun m!148737 () Bool)

(assert (=> b!127165 m!148737))

(assert (=> b!127165 m!147581))

(declare-fun m!148739 () Bool)

(assert (=> b!127165 m!148739))

(assert (=> b!127165 m!148737))

(assert (=> b!127165 m!148593))

(declare-fun m!148741 () Bool)

(assert (=> b!127165 m!148741))

(assert (=> b!127165 m!147581))

(assert (=> b!127165 m!148593))

(assert (=> b!127162 m!148593))

(assert (=> b!127162 m!148593))

(declare-fun m!148743 () Bool)

(assert (=> b!127162 m!148743))

(declare-fun m!148745 () Bool)

(assert (=> b!127176 m!148745))

(assert (=> d!38097 d!38397))

(declare-fun b!127179 () Bool)

(declare-fun e!83039 () Bool)

(declare-fun call!13717 () Bool)

(assert (=> b!127179 (= e!83039 call!13717)))

(declare-fun bm!13714 () Bool)

(assert (=> bm!13714 (= call!13717 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (mask!7039 newMap!16)))))

(declare-fun b!127180 () Bool)

(declare-fun e!83040 () Bool)

(assert (=> b!127180 (= e!83040 call!13717)))

(declare-fun b!127181 () Bool)

(assert (=> b!127181 (= e!83039 e!83040)))

(declare-fun lt!65821 () (_ BitVec 64))

(assert (=> b!127181 (= lt!65821 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!65820 () Unit!3936)

(assert (=> b!127181 (= lt!65820 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) lt!65821 #b00000000000000000000000000000000))))

(assert (=> b!127181 (arrayContainsKey!0 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) lt!65821 #b00000000000000000000000000000000)))

(declare-fun lt!65822 () Unit!3936)

(assert (=> b!127181 (= lt!65822 lt!65820)))

(declare-fun res!61492 () Bool)

(assert (=> b!127181 (= res!61492 (= (seekEntryOrOpen!0 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000) (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (mask!7039 newMap!16)) (Found!280 #b00000000000000000000000000000000)))))

(assert (=> b!127181 (=> (not res!61492) (not e!83040))))

(declare-fun d!38399 () Bool)

(declare-fun res!61493 () Bool)

(declare-fun e!83041 () Bool)

(assert (=> d!38399 (=> res!61493 e!83041)))

(assert (=> d!38399 (= res!61493 (bvsge #b00000000000000000000000000000000 (size!2488 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))))))))

(assert (=> d!38399 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16))) (mask!7039 newMap!16)) e!83041)))

(declare-fun b!127178 () Bool)

(assert (=> b!127178 (= e!83041 e!83039)))

(declare-fun c!23301 () Bool)

(assert (=> b!127178 (= c!23301 (validKeyInArray!0 (select (arr!2224 (array!4699 (store (arr!2224 (_keys!4516 newMap!16)) (ite c!23075 (index!3278 lt!65194) (index!3275 lt!65194)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (size!2488 (_keys!4516 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!38399 (not res!61493)) b!127178))

(assert (= (and b!127178 c!23301) b!127181))

(assert (= (and b!127178 (not c!23301)) b!127179))

(assert (= (and b!127181 res!61492) b!127180))

(assert (= (or b!127180 b!127179) bm!13714))

(declare-fun m!148747 () Bool)

(assert (=> bm!13714 m!148747))

(assert (=> b!127181 m!148593))

(declare-fun m!148749 () Bool)

(assert (=> b!127181 m!148749))

(declare-fun m!148751 () Bool)

(assert (=> b!127181 m!148751))

(assert (=> b!127181 m!148593))

(declare-fun m!148753 () Bool)

(assert (=> b!127181 m!148753))

(assert (=> b!127178 m!148593))

(assert (=> b!127178 m!148593))

(assert (=> b!127178 m!148595))

(assert (=> d!38097 d!38399))

(declare-fun d!38401 () Bool)

(declare-fun e!83043 () Bool)

(assert (=> d!38401 e!83043))

(declare-fun res!61494 () Bool)

(assert (=> d!38401 (=> res!61494 e!83043)))

(declare-fun lt!65824 () Bool)

(assert (=> d!38401 (= res!61494 (not lt!65824))))

(declare-fun lt!65823 () Bool)

(assert (=> d!38401 (= lt!65824 lt!65823)))

(declare-fun lt!65825 () Unit!3936)

(declare-fun e!83042 () Unit!3936)

(assert (=> d!38401 (= lt!65825 e!83042)))

(declare-fun c!23302 () Bool)

(assert (=> d!38401 (= c!23302 lt!65823)))

(assert (=> d!38401 (= lt!65823 (containsKey!170 (toList!858 lt!65320) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38401 (= (contains!877 lt!65320 #b0000000000000000000000000000000000000000000000000000000000000000) lt!65824)))

(declare-fun b!127182 () Bool)

(declare-fun lt!65826 () Unit!3936)

(assert (=> b!127182 (= e!83042 lt!65826)))

(assert (=> b!127182 (= lt!65826 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65320) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!127182 (isDefined!120 (getValueByKey!166 (toList!858 lt!65320) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127183 () Bool)

(declare-fun Unit!3975 () Unit!3936)

(assert (=> b!127183 (= e!83042 Unit!3975)))

(declare-fun b!127184 () Bool)

(assert (=> b!127184 (= e!83043 (isDefined!120 (getValueByKey!166 (toList!858 lt!65320) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38401 c!23302) b!127182))

(assert (= (and d!38401 (not c!23302)) b!127183))

(assert (= (and d!38401 (not res!61494)) b!127184))

(declare-fun m!148755 () Bool)

(assert (=> d!38401 m!148755))

(declare-fun m!148757 () Bool)

(assert (=> b!127182 m!148757))

(assert (=> b!127182 m!148487))

(assert (=> b!127182 m!148487))

(declare-fun m!148759 () Bool)

(assert (=> b!127182 m!148759))

(assert (=> b!127184 m!148487))

(assert (=> b!127184 m!148487))

(assert (=> b!127184 m!148759))

(assert (=> bm!13619 d!38401))

(declare-fun b!127188 () Bool)

(declare-fun e!83045 () Option!172)

(assert (=> b!127188 (= e!83045 None!170)))

(declare-fun d!38403 () Bool)

(declare-fun c!23303 () Bool)

(assert (=> d!38403 (= c!23303 (and ((_ is Cons!1715) (toList!858 lt!65244)) (= (_1!1294 (h!2317 (toList!858 lt!65244))) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!83044 () Option!172)

(assert (=> d!38403 (= (getValueByKey!166 (toList!858 lt!65244) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) e!83044)))

(declare-fun b!127187 () Bool)

(assert (=> b!127187 (= e!83045 (getValueByKey!166 (t!6078 (toList!858 lt!65244)) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127185 () Bool)

(assert (=> b!127185 (= e!83044 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65244)))))))

(declare-fun b!127186 () Bool)

(assert (=> b!127186 (= e!83044 e!83045)))

(declare-fun c!23304 () Bool)

(assert (=> b!127186 (= c!23304 (and ((_ is Cons!1715) (toList!858 lt!65244)) (not (= (_1!1294 (h!2317 (toList!858 lt!65244))) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38403 c!23303) b!127185))

(assert (= (and d!38403 (not c!23303)) b!127186))

(assert (= (and b!127186 c!23304) b!127187))

(assert (= (and b!127186 (not c!23304)) b!127188))

(declare-fun m!148761 () Bool)

(assert (=> b!127187 m!148761))

(assert (=> b!126406 d!38403))

(declare-fun d!38405 () Bool)

(declare-fun e!83047 () Bool)

(assert (=> d!38405 e!83047))

(declare-fun res!61495 () Bool)

(assert (=> d!38405 (=> res!61495 e!83047)))

(declare-fun lt!65828 () Bool)

(assert (=> d!38405 (= res!61495 (not lt!65828))))

(declare-fun lt!65827 () Bool)

(assert (=> d!38405 (= lt!65828 lt!65827)))

(declare-fun lt!65829 () Unit!3936)

(declare-fun e!83046 () Unit!3936)

(assert (=> d!38405 (= lt!65829 e!83046)))

(declare-fun c!23305 () Bool)

(assert (=> d!38405 (= c!23305 lt!65827)))

(assert (=> d!38405 (= lt!65827 (containsKey!170 (toList!858 (map!1383 (_2!1295 lt!65442))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> d!38405 (= (contains!877 (map!1383 (_2!1295 lt!65442)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) lt!65828)))

(declare-fun b!127189 () Bool)

(declare-fun lt!65830 () Unit!3936)

(assert (=> b!127189 (= e!83046 lt!65830)))

(assert (=> b!127189 (= lt!65830 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 (map!1383 (_2!1295 lt!65442))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (=> b!127189 (isDefined!120 (getValueByKey!166 (toList!858 (map!1383 (_2!1295 lt!65442))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!127190 () Bool)

(declare-fun Unit!3976 () Unit!3936)

(assert (=> b!127190 (= e!83046 Unit!3976)))

(declare-fun b!127191 () Bool)

(assert (=> b!127191 (= e!83047 (isDefined!120 (getValueByKey!166 (toList!858 (map!1383 (_2!1295 lt!65442))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(assert (= (and d!38405 c!23305) b!127189))

(assert (= (and d!38405 (not c!23305)) b!127190))

(assert (= (and d!38405 (not res!61495)) b!127191))

(assert (=> d!38405 m!147095))

(declare-fun m!148763 () Bool)

(assert (=> d!38405 m!148763))

(assert (=> b!127189 m!147095))

(declare-fun m!148765 () Bool)

(assert (=> b!127189 m!148765))

(assert (=> b!127189 m!147095))

(declare-fun m!148767 () Bool)

(assert (=> b!127189 m!148767))

(assert (=> b!127189 m!148767))

(declare-fun m!148769 () Bool)

(assert (=> b!127189 m!148769))

(assert (=> b!127191 m!147095))

(assert (=> b!127191 m!148767))

(assert (=> b!127191 m!148767))

(assert (=> b!127191 m!148769))

(assert (=> b!126616 d!38405))

(assert (=> b!126616 d!38341))

(declare-fun d!38407 () Bool)

(assert (=> d!38407 (= (size!2492 newMap!16) (bvadd (_size!580 newMap!16) (bvsdiv (bvadd (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!126527 d!38407))

(assert (=> b!126393 d!38169))

(assert (=> b!126645 d!38153))

(assert (=> b!126684 d!38153))

(declare-fun d!38409 () Bool)

(declare-fun res!61496 () Bool)

(declare-fun e!83048 () Bool)

(assert (=> d!38409 (=> res!61496 e!83048)))

(assert (=> d!38409 (= res!61496 (and ((_ is Cons!1715) (toList!858 lt!65101)) (= (_1!1294 (h!2317 (toList!858 lt!65101))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!38409 (= (containsKey!170 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000) e!83048)))

(declare-fun b!127192 () Bool)

(declare-fun e!83049 () Bool)

(assert (=> b!127192 (= e!83048 e!83049)))

(declare-fun res!61497 () Bool)

(assert (=> b!127192 (=> (not res!61497) (not e!83049))))

(assert (=> b!127192 (= res!61497 (and (or (not ((_ is Cons!1715) (toList!858 lt!65101))) (bvsle (_1!1294 (h!2317 (toList!858 lt!65101))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1715) (toList!858 lt!65101)) (bvslt (_1!1294 (h!2317 (toList!858 lt!65101))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!127193 () Bool)

(assert (=> b!127193 (= e!83049 (containsKey!170 (t!6078 (toList!858 lt!65101)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!38409 (not res!61496)) b!127192))

(assert (= (and b!127192 res!61497) b!127193))

(declare-fun m!148771 () Bool)

(assert (=> b!127193 m!148771))

(assert (=> d!38101 d!38409))

(declare-fun d!38411 () Bool)

(declare-fun res!61498 () Bool)

(declare-fun e!83050 () Bool)

(assert (=> d!38411 (=> res!61498 e!83050)))

(assert (=> d!38411 (= res!61498 (and ((_ is Cons!1715) (t!6078 (toList!858 lt!65045))) (= (_1!1294 (h!2317 (t!6078 (toList!858 lt!65045)))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(assert (=> d!38411 (= (containsKey!170 (t!6078 (toList!858 lt!65045)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) e!83050)))

(declare-fun b!127194 () Bool)

(declare-fun e!83051 () Bool)

(assert (=> b!127194 (= e!83050 e!83051)))

(declare-fun res!61499 () Bool)

(assert (=> b!127194 (=> (not res!61499) (not e!83051))))

(assert (=> b!127194 (= res!61499 (and (or (not ((_ is Cons!1715) (t!6078 (toList!858 lt!65045)))) (bvsle (_1!1294 (h!2317 (t!6078 (toList!858 lt!65045)))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))) ((_ is Cons!1715) (t!6078 (toList!858 lt!65045))) (bvslt (_1!1294 (h!2317 (t!6078 (toList!858 lt!65045)))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(declare-fun b!127195 () Bool)

(assert (=> b!127195 (= e!83051 (containsKey!170 (t!6078 (t!6078 (toList!858 lt!65045))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (= (and d!38411 (not res!61498)) b!127194))

(assert (= (and b!127194 res!61499) b!127195))

(assert (=> b!127195 m!147095))

(declare-fun m!148773 () Bool)

(assert (=> b!127195 m!148773))

(assert (=> b!126441 d!38411))

(assert (=> b!126632 d!38107))

(assert (=> b!126471 d!38153))

(declare-fun d!38413 () Bool)

(declare-fun res!61500 () Bool)

(declare-fun e!83052 () Bool)

(assert (=> d!38413 (=> res!61500 e!83052)))

(assert (=> d!38413 (= res!61500 (and ((_ is Cons!1715) (toList!858 call!13595)) (= (_1!1294 (h!2317 (toList!858 call!13595))) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194)))))))

(assert (=> d!38413 (= (containsKey!170 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))) e!83052)))

(declare-fun b!127196 () Bool)

(declare-fun e!83053 () Bool)

(assert (=> b!127196 (= e!83052 e!83053)))

(declare-fun res!61501 () Bool)

(assert (=> b!127196 (=> (not res!61501) (not e!83053))))

(assert (=> b!127196 (= res!61501 (and (or (not ((_ is Cons!1715) (toList!858 call!13595))) (bvsle (_1!1294 (h!2317 (toList!858 call!13595))) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194)))) ((_ is Cons!1715) (toList!858 call!13595)) (bvslt (_1!1294 (h!2317 (toList!858 call!13595))) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194)))))))

(declare-fun b!127197 () Bool)

(assert (=> b!127197 (= e!83053 (containsKey!170 (t!6078 (toList!858 call!13595)) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(assert (= (and d!38413 (not res!61500)) b!127196))

(assert (= (and b!127196 res!61501) b!127197))

(assert (=> b!127197 m!147229))

(declare-fun m!148775 () Bool)

(assert (=> b!127197 m!148775))

(assert (=> d!38111 d!38413))

(declare-fun d!38415 () Bool)

(declare-fun e!83055 () Bool)

(assert (=> d!38415 e!83055))

(declare-fun res!61502 () Bool)

(assert (=> d!38415 (=> res!61502 e!83055)))

(declare-fun lt!65832 () Bool)

(assert (=> d!38415 (= res!61502 (not lt!65832))))

(declare-fun lt!65831 () Bool)

(assert (=> d!38415 (= lt!65832 lt!65831)))

(declare-fun lt!65833 () Unit!3936)

(declare-fun e!83054 () Unit!3936)

(assert (=> d!38415 (= lt!65833 e!83054)))

(declare-fun c!23306 () Bool)

(assert (=> d!38415 (= c!23306 lt!65831)))

(assert (=> d!38415 (= lt!65831 (containsKey!170 (toList!858 lt!65248) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> d!38415 (= (contains!877 lt!65248 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) lt!65832)))

(declare-fun b!127198 () Bool)

(declare-fun lt!65834 () Unit!3936)

(assert (=> b!127198 (= e!83054 lt!65834)))

(assert (=> b!127198 (= lt!65834 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65248) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> b!127198 (isDefined!120 (getValueByKey!166 (toList!858 lt!65248) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!127199 () Bool)

(declare-fun Unit!3977 () Unit!3936)

(assert (=> b!127199 (= e!83054 Unit!3977)))

(declare-fun b!127200 () Bool)

(assert (=> b!127200 (= e!83055 (isDefined!120 (getValueByKey!166 (toList!858 lt!65248) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38415 c!23306) b!127198))

(assert (= (and d!38415 (not c!23306)) b!127199))

(assert (= (and d!38415 (not res!61502)) b!127200))

(declare-fun m!148777 () Bool)

(assert (=> d!38415 m!148777))

(declare-fun m!148779 () Bool)

(assert (=> b!127198 m!148779))

(assert (=> b!127198 m!147351))

(assert (=> b!127198 m!147351))

(declare-fun m!148781 () Bool)

(assert (=> b!127198 m!148781))

(assert (=> b!127200 m!147351))

(assert (=> b!127200 m!147351))

(assert (=> b!127200 m!148781))

(assert (=> d!38013 d!38415))

(declare-fun b!127204 () Bool)

(declare-fun e!83057 () Option!172)

(assert (=> b!127204 (= e!83057 None!170)))

(declare-fun c!23307 () Bool)

(declare-fun d!38417 () Bool)

(assert (=> d!38417 (= c!23307 (and ((_ is Cons!1715) lt!65247) (= (_1!1294 (h!2317 lt!65247)) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(declare-fun e!83056 () Option!172)

(assert (=> d!38417 (= (getValueByKey!166 lt!65247 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) e!83056)))

(declare-fun b!127203 () Bool)

(assert (=> b!127203 (= e!83057 (getValueByKey!166 (t!6078 lt!65247) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!127201 () Bool)

(assert (=> b!127201 (= e!83056 (Some!171 (_2!1294 (h!2317 lt!65247))))))

(declare-fun b!127202 () Bool)

(assert (=> b!127202 (= e!83056 e!83057)))

(declare-fun c!23308 () Bool)

(assert (=> b!127202 (= c!23308 (and ((_ is Cons!1715) lt!65247) (not (= (_1!1294 (h!2317 lt!65247)) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))))

(assert (= (and d!38417 c!23307) b!127201))

(assert (= (and d!38417 (not c!23307)) b!127202))

(assert (= (and b!127202 c!23308) b!127203))

(assert (= (and b!127202 (not c!23308)) b!127204))

(declare-fun m!148783 () Bool)

(assert (=> b!127203 m!148783))

(assert (=> d!38013 d!38417))

(declare-fun d!38419 () Bool)

(assert (=> d!38419 (= (getValueByKey!166 lt!65247 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) (Some!171 (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun lt!65835 () Unit!3936)

(assert (=> d!38419 (= lt!65835 (choose!777 lt!65247 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!83058 () Bool)

(assert (=> d!38419 e!83058))

(declare-fun res!61503 () Bool)

(assert (=> d!38419 (=> (not res!61503) (not e!83058))))

(assert (=> d!38419 (= res!61503 (isStrictlySorted!312 lt!65247))))

(assert (=> d!38419 (= (lemmaContainsTupThenGetReturnValue!83 lt!65247 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) lt!65835)))

(declare-fun b!127205 () Bool)

(declare-fun res!61504 () Bool)

(assert (=> b!127205 (=> (not res!61504) (not e!83058))))

(assert (=> b!127205 (= res!61504 (containsKey!170 lt!65247 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!127206 () Bool)

(assert (=> b!127206 (= e!83058 (contains!878 lt!65247 (tuple2!2569 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38419 res!61503) b!127205))

(assert (= (and b!127205 res!61504) b!127206))

(assert (=> d!38419 m!147345))

(declare-fun m!148785 () Bool)

(assert (=> d!38419 m!148785))

(declare-fun m!148787 () Bool)

(assert (=> d!38419 m!148787))

(declare-fun m!148789 () Bool)

(assert (=> b!127205 m!148789))

(declare-fun m!148791 () Bool)

(assert (=> b!127206 m!148791))

(assert (=> d!38013 d!38419))

(declare-fun b!127207 () Bool)

(declare-fun e!83059 () List!1719)

(declare-fun e!83063 () List!1719)

(assert (=> b!127207 (= e!83059 e!83063)))

(declare-fun c!23311 () Bool)

(assert (=> b!127207 (= c!23311 (and ((_ is Cons!1715) (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536)))) (= (_1!1294 (h!2317 (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536))))) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(declare-fun e!83061 () List!1719)

(declare-fun b!127208 () Bool)

(assert (=> b!127208 (= e!83061 (insertStrictlySorted!85 (t!6078 (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536)))) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun bm!13715 () Bool)

(declare-fun call!13720 () List!1719)

(declare-fun call!13718 () List!1719)

(assert (=> bm!13715 (= call!13720 call!13718)))

(declare-fun b!127209 () Bool)

(declare-fun e!83062 () List!1719)

(assert (=> b!127209 (= e!83062 call!13720)))

(declare-fun b!127210 () Bool)

(declare-fun call!13719 () List!1719)

(assert (=> b!127210 (= e!83059 call!13719)))

(declare-fun b!127211 () Bool)

(assert (=> b!127211 (= e!83063 call!13718)))

(declare-fun bm!13717 () Bool)

(declare-fun c!23310 () Bool)

(assert (=> bm!13717 (= call!13719 ($colon$colon!88 e!83061 (ite c!23310 (h!2317 (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536)))) (tuple2!2569 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))))

(declare-fun c!23312 () Bool)

(assert (=> bm!13717 (= c!23312 c!23310)))

(declare-fun b!127212 () Bool)

(declare-fun res!61506 () Bool)

(declare-fun e!83060 () Bool)

(assert (=> b!127212 (=> (not res!61506) (not e!83060))))

(declare-fun lt!65836 () List!1719)

(assert (=> b!127212 (= res!61506 (containsKey!170 lt!65836 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!127213 () Bool)

(assert (=> b!127213 (= e!83060 (contains!878 lt!65836 (tuple2!2569 (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(declare-fun b!127214 () Bool)

(assert (=> b!127214 (= e!83062 call!13720)))

(declare-fun b!127215 () Bool)

(declare-fun c!23309 () Bool)

(assert (=> b!127215 (= e!83061 (ite c!23311 (t!6078 (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536)))) (ite c!23309 (Cons!1715 (h!2317 (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536)))) (t!6078 (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536))))) Nil!1716)))))

(declare-fun b!127216 () Bool)

(assert (=> b!127216 (= c!23309 (and ((_ is Cons!1715) (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536)))) (bvsgt (_1!1294 (h!2317 (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536))))) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (=> b!127216 (= e!83063 e!83062)))

(declare-fun d!38421 () Bool)

(assert (=> d!38421 e!83060))

(declare-fun res!61505 () Bool)

(assert (=> d!38421 (=> (not res!61505) (not e!83060))))

(assert (=> d!38421 (= res!61505 (isStrictlySorted!312 lt!65836))))

(assert (=> d!38421 (= lt!65836 e!83059)))

(assert (=> d!38421 (= c!23310 (and ((_ is Cons!1715) (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536)))) (bvslt (_1!1294 (h!2317 (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536))))) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (=> d!38421 (isStrictlySorted!312 (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536))))))

(assert (=> d!38421 (= (insertStrictlySorted!85 (toList!858 (ite c!23032 call!13537 (ite c!23035 call!13534 call!13536))) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (_2!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) lt!65836)))

(declare-fun bm!13716 () Bool)

(assert (=> bm!13716 (= call!13718 call!13719)))

(assert (= (and d!38421 c!23310) b!127210))

(assert (= (and d!38421 (not c!23310)) b!127207))

(assert (= (and b!127207 c!23311) b!127211))

(assert (= (and b!127207 (not c!23311)) b!127216))

(assert (= (and b!127216 c!23309) b!127214))

(assert (= (and b!127216 (not c!23309)) b!127209))

(assert (= (or b!127214 b!127209) bm!13715))

(assert (= (or b!127211 bm!13715) bm!13716))

(assert (= (or b!127210 bm!13716) bm!13717))

(assert (= (and bm!13717 c!23312) b!127208))

(assert (= (and bm!13717 (not c!23312)) b!127215))

(assert (= (and d!38421 res!61505) b!127212))

(assert (= (and b!127212 res!61506) b!127213))

(declare-fun m!148793 () Bool)

(assert (=> bm!13717 m!148793))

(declare-fun m!148795 () Bool)

(assert (=> d!38421 m!148795))

(declare-fun m!148797 () Bool)

(assert (=> d!38421 m!148797))

(declare-fun m!148799 () Bool)

(assert (=> b!127213 m!148799))

(declare-fun m!148801 () Bool)

(assert (=> b!127208 m!148801))

(declare-fun m!148803 () Bool)

(assert (=> b!127212 m!148803))

(assert (=> d!38013 d!38421))

(declare-fun d!38423 () Bool)

(assert (=> d!38423 (contains!877 (getCurrentListMap!530 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194)))))

(assert (=> d!38423 true))

(declare-fun _$16!142 () Unit!3936)

(assert (=> d!38423 (= (choose!775 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (index!3276 lt!65194) (defaultEntry!2783 newMap!16)) _$16!142)))

(declare-fun bs!5267 () Bool)

(assert (= bs!5267 d!38423))

(assert (=> bs!5267 m!147819))

(assert (=> bs!5267 m!147229))

(assert (=> bs!5267 m!147819))

(assert (=> bs!5267 m!147229))

(assert (=> bs!5267 m!147821))

(assert (=> d!38113 d!38423))

(assert (=> d!38113 d!38139))

(declare-fun d!38425 () Bool)

(assert (=> d!38425 (= (apply!111 (+!165 lt!65467 (tuple2!2569 lt!65469 (minValue!2646 newMap!16))) lt!65462) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65467 (tuple2!2569 lt!65469 (minValue!2646 newMap!16)))) lt!65462)))))

(declare-fun bs!5268 () Bool)

(assert (= bs!5268 d!38425))

(declare-fun m!148805 () Bool)

(assert (=> bs!5268 m!148805))

(assert (=> bs!5268 m!148805))

(declare-fun m!148807 () Bool)

(assert (=> bs!5268 m!148807))

(assert (=> b!126638 d!38425))

(declare-fun d!38427 () Bool)

(assert (=> d!38427 (= (apply!111 (+!165 lt!65465 (tuple2!2569 lt!65470 (minValue!2646 newMap!16))) lt!65458) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65465 (tuple2!2569 lt!65470 (minValue!2646 newMap!16)))) lt!65458)))))

(declare-fun bs!5269 () Bool)

(assert (= bs!5269 d!38427))

(declare-fun m!148809 () Bool)

(assert (=> bs!5269 m!148809))

(assert (=> bs!5269 m!148809))

(declare-fun m!148811 () Bool)

(assert (=> bs!5269 m!148811))

(assert (=> b!126638 d!38427))

(declare-fun d!38429 () Bool)

(declare-fun e!83064 () Bool)

(assert (=> d!38429 e!83064))

(declare-fun res!61507 () Bool)

(assert (=> d!38429 (=> (not res!61507) (not e!83064))))

(declare-fun lt!65838 () ListLongMap!1685)

(assert (=> d!38429 (= res!61507 (contains!877 lt!65838 (_1!1294 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16)))))))

(declare-fun lt!65837 () List!1719)

(assert (=> d!38429 (= lt!65838 (ListLongMap!1686 lt!65837))))

(declare-fun lt!65840 () Unit!3936)

(declare-fun lt!65839 () Unit!3936)

(assert (=> d!38429 (= lt!65840 lt!65839)))

(assert (=> d!38429 (= (getValueByKey!166 lt!65837 (_1!1294 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38429 (= lt!65839 (lemmaContainsTupThenGetReturnValue!83 lt!65837 (_1!1294 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38429 (= lt!65837 (insertStrictlySorted!85 (toList!858 lt!65464) (_1!1294 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38429 (= (+!165 lt!65464 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16))) lt!65838)))

(declare-fun b!127217 () Bool)

(declare-fun res!61508 () Bool)

(assert (=> b!127217 (=> (not res!61508) (not e!83064))))

(assert (=> b!127217 (= res!61508 (= (getValueByKey!166 (toList!858 lt!65838) (_1!1294 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16))))))))

(declare-fun b!127218 () Bool)

(assert (=> b!127218 (= e!83064 (contains!878 (toList!858 lt!65838) (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16))))))

(assert (= (and d!38429 res!61507) b!127217))

(assert (= (and b!127217 res!61508) b!127218))

(declare-fun m!148813 () Bool)

(assert (=> d!38429 m!148813))

(declare-fun m!148815 () Bool)

(assert (=> d!38429 m!148815))

(declare-fun m!148817 () Bool)

(assert (=> d!38429 m!148817))

(declare-fun m!148819 () Bool)

(assert (=> d!38429 m!148819))

(declare-fun m!148821 () Bool)

(assert (=> b!127217 m!148821))

(declare-fun m!148823 () Bool)

(assert (=> b!127218 m!148823))

(assert (=> b!126638 d!38429))

(declare-fun d!38431 () Bool)

(assert (=> d!38431 (contains!877 (+!165 lt!65472 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16))) lt!65452)))

(declare-fun lt!65841 () Unit!3936)

(assert (=> d!38431 (= lt!65841 (choose!769 lt!65472 lt!65461 (zeroValue!2646 newMap!16) lt!65452))))

(assert (=> d!38431 (contains!877 lt!65472 lt!65452)))

(assert (=> d!38431 (= (addStillContains!87 lt!65472 lt!65461 (zeroValue!2646 newMap!16) lt!65452) lt!65841)))

(declare-fun bs!5270 () Bool)

(assert (= bs!5270 d!38431))

(assert (=> bs!5270 m!147733))

(assert (=> bs!5270 m!147733))

(assert (=> bs!5270 m!147735))

(declare-fun m!148825 () Bool)

(assert (=> bs!5270 m!148825))

(declare-fun m!148827 () Bool)

(assert (=> bs!5270 m!148827))

(assert (=> b!126638 d!38431))

(declare-fun d!38433 () Bool)

(assert (=> d!38433 (= (apply!111 (+!165 lt!65467 (tuple2!2569 lt!65469 (minValue!2646 newMap!16))) lt!65462) (apply!111 lt!65467 lt!65462))))

(declare-fun lt!65842 () Unit!3936)

(assert (=> d!38433 (= lt!65842 (choose!768 lt!65467 lt!65469 (minValue!2646 newMap!16) lt!65462))))

(declare-fun e!83065 () Bool)

(assert (=> d!38433 e!83065))

(declare-fun res!61509 () Bool)

(assert (=> d!38433 (=> (not res!61509) (not e!83065))))

(assert (=> d!38433 (= res!61509 (contains!877 lt!65467 lt!65462))))

(assert (=> d!38433 (= (addApplyDifferent!87 lt!65467 lt!65469 (minValue!2646 newMap!16) lt!65462) lt!65842)))

(declare-fun b!127219 () Bool)

(assert (=> b!127219 (= e!83065 (not (= lt!65462 lt!65469)))))

(assert (= (and d!38433 res!61509) b!127219))

(declare-fun m!148829 () Bool)

(assert (=> d!38433 m!148829))

(assert (=> d!38433 m!147709))

(declare-fun m!148831 () Bool)

(assert (=> d!38433 m!148831))

(assert (=> d!38433 m!147713))

(assert (=> d!38433 m!147727))

(assert (=> d!38433 m!147713))

(assert (=> b!126638 d!38433))

(declare-fun d!38435 () Bool)

(assert (=> d!38435 (= (apply!111 (+!165 lt!65464 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16))) lt!65454) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65464 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16)))) lt!65454)))))

(declare-fun bs!5271 () Bool)

(assert (= bs!5271 d!38435))

(declare-fun m!148833 () Bool)

(assert (=> bs!5271 m!148833))

(assert (=> bs!5271 m!148833))

(declare-fun m!148835 () Bool)

(assert (=> bs!5271 m!148835))

(assert (=> b!126638 d!38435))

(declare-fun d!38437 () Bool)

(assert (=> d!38437 (= (apply!111 (+!165 lt!65465 (tuple2!2569 lt!65470 (minValue!2646 newMap!16))) lt!65458) (apply!111 lt!65465 lt!65458))))

(declare-fun lt!65843 () Unit!3936)

(assert (=> d!38437 (= lt!65843 (choose!768 lt!65465 lt!65470 (minValue!2646 newMap!16) lt!65458))))

(declare-fun e!83066 () Bool)

(assert (=> d!38437 e!83066))

(declare-fun res!61510 () Bool)

(assert (=> d!38437 (=> (not res!61510) (not e!83066))))

(assert (=> d!38437 (= res!61510 (contains!877 lt!65465 lt!65458))))

(assert (=> d!38437 (= (addApplyDifferent!87 lt!65465 lt!65470 (minValue!2646 newMap!16) lt!65458) lt!65843)))

(declare-fun b!127220 () Bool)

(assert (=> b!127220 (= e!83066 (not (= lt!65458 lt!65470)))))

(assert (= (and d!38437 res!61510) b!127220))

(declare-fun m!148837 () Bool)

(assert (=> d!38437 m!148837))

(assert (=> d!38437 m!147717))

(declare-fun m!148839 () Bool)

(assert (=> d!38437 m!148839))

(assert (=> d!38437 m!147719))

(assert (=> d!38437 m!147731))

(assert (=> d!38437 m!147719))

(assert (=> b!126638 d!38437))

(declare-fun d!38439 () Bool)

(assert (=> d!38439 (= (apply!111 lt!65464 lt!65454) (get!1455 (getValueByKey!166 (toList!858 lt!65464) lt!65454)))))

(declare-fun bs!5272 () Bool)

(assert (= bs!5272 d!38439))

(declare-fun m!148841 () Bool)

(assert (=> bs!5272 m!148841))

(assert (=> bs!5272 m!148841))

(declare-fun m!148843 () Bool)

(assert (=> bs!5272 m!148843))

(assert (=> b!126638 d!38439))

(declare-fun d!38441 () Bool)

(declare-fun e!83067 () Bool)

(assert (=> d!38441 e!83067))

(declare-fun res!61511 () Bool)

(assert (=> d!38441 (=> (not res!61511) (not e!83067))))

(declare-fun lt!65845 () ListLongMap!1685)

(assert (=> d!38441 (= res!61511 (contains!877 lt!65845 (_1!1294 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16)))))))

(declare-fun lt!65844 () List!1719)

(assert (=> d!38441 (= lt!65845 (ListLongMap!1686 lt!65844))))

(declare-fun lt!65847 () Unit!3936)

(declare-fun lt!65846 () Unit!3936)

(assert (=> d!38441 (= lt!65847 lt!65846)))

(assert (=> d!38441 (= (getValueByKey!166 lt!65844 (_1!1294 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38441 (= lt!65846 (lemmaContainsTupThenGetReturnValue!83 lt!65844 (_1!1294 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38441 (= lt!65844 (insertStrictlySorted!85 (toList!858 lt!65472) (_1!1294 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38441 (= (+!165 lt!65472 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16))) lt!65845)))

(declare-fun b!127221 () Bool)

(declare-fun res!61512 () Bool)

(assert (=> b!127221 (=> (not res!61512) (not e!83067))))

(assert (=> b!127221 (= res!61512 (= (getValueByKey!166 (toList!858 lt!65845) (_1!1294 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16))))))))

(declare-fun b!127222 () Bool)

(assert (=> b!127222 (= e!83067 (contains!878 (toList!858 lt!65845) (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16))))))

(assert (= (and d!38441 res!61511) b!127221))

(assert (= (and b!127221 res!61512) b!127222))

(declare-fun m!148845 () Bool)

(assert (=> d!38441 m!148845))

(declare-fun m!148847 () Bool)

(assert (=> d!38441 m!148847))

(declare-fun m!148849 () Bool)

(assert (=> d!38441 m!148849))

(declare-fun m!148851 () Bool)

(assert (=> d!38441 m!148851))

(declare-fun m!148853 () Bool)

(assert (=> b!127221 m!148853))

(declare-fun m!148855 () Bool)

(assert (=> b!127222 m!148855))

(assert (=> b!126638 d!38441))

(declare-fun d!38443 () Bool)

(assert (=> d!38443 (= (apply!111 lt!65467 lt!65462) (get!1455 (getValueByKey!166 (toList!858 lt!65467) lt!65462)))))

(declare-fun bs!5273 () Bool)

(assert (= bs!5273 d!38443))

(declare-fun m!148857 () Bool)

(assert (=> bs!5273 m!148857))

(assert (=> bs!5273 m!148857))

(declare-fun m!148859 () Bool)

(assert (=> bs!5273 m!148859))

(assert (=> b!126638 d!38443))

(declare-fun d!38445 () Bool)

(declare-fun e!83068 () Bool)

(assert (=> d!38445 e!83068))

(declare-fun res!61516 () Bool)

(assert (=> d!38445 (=> (not res!61516) (not e!83068))))

(declare-fun lt!65853 () ListLongMap!1685)

(assert (=> d!38445 (= res!61516 (not (contains!877 lt!65853 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!83072 () ListLongMap!1685)

(assert (=> d!38445 (= lt!65853 e!83072)))

(declare-fun c!23316 () Bool)

(assert (=> d!38445 (= c!23316 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38445 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38445 (= (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65853)))

(declare-fun b!127223 () Bool)

(declare-fun e!83073 () ListLongMap!1685)

(declare-fun call!13721 () ListLongMap!1685)

(assert (=> b!127223 (= e!83073 call!13721)))

(declare-fun b!127224 () Bool)

(assert (=> b!127224 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> b!127224 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207))))))

(declare-fun e!83074 () Bool)

(assert (=> b!127224 (= e!83074 (= (apply!111 lt!65853 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!127225 () Bool)

(declare-fun e!83069 () Bool)

(declare-fun e!83070 () Bool)

(assert (=> b!127225 (= e!83069 e!83070)))

(declare-fun c!23315 () Bool)

(assert (=> b!127225 (= c!23315 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127226 () Bool)

(assert (=> b!127226 (= e!83070 (= lt!65853 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2783 newMap!16))))))

(declare-fun b!127227 () Bool)

(declare-fun e!83071 () Bool)

(assert (=> b!127227 (= e!83071 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!127227 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!127228 () Bool)

(assert (=> b!127228 (= e!83069 e!83074)))

(assert (=> b!127228 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun res!61514 () Bool)

(assert (=> b!127228 (= res!61514 (contains!877 lt!65853 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!127228 (=> (not res!61514) (not e!83074))))

(declare-fun b!127229 () Bool)

(declare-fun res!61515 () Bool)

(assert (=> b!127229 (=> (not res!61515) (not e!83068))))

(assert (=> b!127229 (= res!61515 (not (contains!877 lt!65853 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!127230 () Bool)

(assert (=> b!127230 (= e!83072 (ListLongMap!1686 Nil!1716))))

(declare-fun b!127231 () Bool)

(assert (=> b!127231 (= e!83068 e!83069)))

(declare-fun c!23313 () Bool)

(assert (=> b!127231 (= c!23313 e!83071)))

(declare-fun res!61513 () Bool)

(assert (=> b!127231 (=> (not res!61513) (not e!83071))))

(assert (=> b!127231 (= res!61513 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127232 () Bool)

(assert (=> b!127232 (= e!83070 (isEmpty!401 lt!65853))))

(declare-fun b!127233 () Bool)

(assert (=> b!127233 (= e!83072 e!83073)))

(declare-fun c!23314 () Bool)

(assert (=> b!127233 (= c!23314 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!127234 () Bool)

(declare-fun lt!65854 () Unit!3936)

(declare-fun lt!65850 () Unit!3936)

(assert (=> b!127234 (= lt!65854 lt!65850)))

(declare-fun lt!65849 () ListLongMap!1685)

(declare-fun lt!65848 () V!3435)

(declare-fun lt!65851 () (_ BitVec 64))

(declare-fun lt!65852 () (_ BitVec 64))

(assert (=> b!127234 (not (contains!877 (+!165 lt!65849 (tuple2!2569 lt!65851 lt!65848)) lt!65852))))

(assert (=> b!127234 (= lt!65850 (addStillNotContains!58 lt!65849 lt!65851 lt!65848 lt!65852))))

(assert (=> b!127234 (= lt!65852 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!127234 (= lt!65848 (get!1452 (select (arr!2225 (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!127234 (= lt!65851 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!127234 (= lt!65849 call!13721)))

(assert (=> b!127234 (= e!83073 (+!165 call!13721 (tuple2!2569 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) (get!1452 (select (arr!2225 (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!13718 () Bool)

(assert (=> bm!13718 (= call!13721 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (ite (or c!23078 c!23070) (_values!2766 newMap!16) lt!65207) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2783 newMap!16)))))

(assert (= (and d!38445 c!23316) b!127230))

(assert (= (and d!38445 (not c!23316)) b!127233))

(assert (= (and b!127233 c!23314) b!127234))

(assert (= (and b!127233 (not c!23314)) b!127223))

(assert (= (or b!127234 b!127223) bm!13718))

(assert (= (and d!38445 res!61516) b!127229))

(assert (= (and b!127229 res!61515) b!127231))

(assert (= (and b!127231 res!61513) b!127227))

(assert (= (and b!127231 c!23313) b!127228))

(assert (= (and b!127231 (not c!23313)) b!127225))

(assert (= (and b!127228 res!61514) b!127224))

(assert (= (and b!127225 c!23315) b!127226))

(assert (= (and b!127225 (not c!23315)) b!127232))

(declare-fun b_lambda!5631 () Bool)

(assert (=> (not b_lambda!5631) (not b!127224)))

(assert (=> b!127224 t!6085))

(declare-fun b_and!7853 () Bool)

(assert (= b_and!7849 (and (=> t!6085 result!3859) b_and!7853)))

(assert (=> b!127224 t!6087))

(declare-fun b_and!7855 () Bool)

(assert (= b_and!7851 (and (=> t!6087 result!3861) b_and!7855)))

(declare-fun b_lambda!5633 () Bool)

(assert (=> (not b_lambda!5633) (not b!127234)))

(assert (=> b!127234 t!6085))

(declare-fun b_and!7857 () Bool)

(assert (= b_and!7853 (and (=> t!6085 result!3859) b_and!7857)))

(assert (=> b!127234 t!6087))

(declare-fun b_and!7859 () Bool)

(assert (= b_and!7855 (and (=> t!6087 result!3861) b_and!7859)))

(assert (=> b!127227 m!147467))

(assert (=> b!127227 m!147467))

(assert (=> b!127227 m!147495))

(declare-fun m!148861 () Bool)

(assert (=> b!127226 m!148861))

(assert (=> b!127224 m!147581))

(assert (=> b!127224 m!147737))

(assert (=> b!127224 m!147737))

(assert (=> b!127224 m!147581))

(assert (=> b!127224 m!147739))

(assert (=> b!127224 m!147467))

(declare-fun m!148863 () Bool)

(assert (=> b!127224 m!148863))

(assert (=> b!127224 m!147467))

(assert (=> b!127234 m!147467))

(assert (=> b!127234 m!147581))

(assert (=> b!127234 m!147737))

(declare-fun m!148865 () Bool)

(assert (=> b!127234 m!148865))

(assert (=> b!127234 m!147737))

(assert (=> b!127234 m!147581))

(assert (=> b!127234 m!147739))

(declare-fun m!148867 () Bool)

(assert (=> b!127234 m!148867))

(declare-fun m!148869 () Bool)

(assert (=> b!127234 m!148869))

(assert (=> b!127234 m!148865))

(declare-fun m!148871 () Bool)

(assert (=> b!127234 m!148871))

(declare-fun m!148873 () Bool)

(assert (=> d!38445 m!148873))

(assert (=> d!38445 m!147475))

(declare-fun m!148875 () Bool)

(assert (=> b!127232 m!148875))

(assert (=> b!127228 m!147467))

(assert (=> b!127228 m!147467))

(declare-fun m!148877 () Bool)

(assert (=> b!127228 m!148877))

(declare-fun m!148879 () Bool)

(assert (=> b!127229 m!148879))

(assert (=> b!127233 m!147467))

(assert (=> b!127233 m!147467))

(assert (=> b!127233 m!147495))

(assert (=> bm!13718 m!148861))

(assert (=> b!126638 d!38445))

(declare-fun d!38447 () Bool)

(declare-fun e!83075 () Bool)

(assert (=> d!38447 e!83075))

(declare-fun res!61517 () Bool)

(assert (=> d!38447 (=> (not res!61517) (not e!83075))))

(declare-fun lt!65856 () ListLongMap!1685)

(assert (=> d!38447 (= res!61517 (contains!877 lt!65856 (_1!1294 (tuple2!2569 lt!65470 (minValue!2646 newMap!16)))))))

(declare-fun lt!65855 () List!1719)

(assert (=> d!38447 (= lt!65856 (ListLongMap!1686 lt!65855))))

(declare-fun lt!65858 () Unit!3936)

(declare-fun lt!65857 () Unit!3936)

(assert (=> d!38447 (= lt!65858 lt!65857)))

(assert (=> d!38447 (= (getValueByKey!166 lt!65855 (_1!1294 (tuple2!2569 lt!65470 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65470 (minValue!2646 newMap!16)))))))

(assert (=> d!38447 (= lt!65857 (lemmaContainsTupThenGetReturnValue!83 lt!65855 (_1!1294 (tuple2!2569 lt!65470 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65470 (minValue!2646 newMap!16)))))))

(assert (=> d!38447 (= lt!65855 (insertStrictlySorted!85 (toList!858 lt!65465) (_1!1294 (tuple2!2569 lt!65470 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65470 (minValue!2646 newMap!16)))))))

(assert (=> d!38447 (= (+!165 lt!65465 (tuple2!2569 lt!65470 (minValue!2646 newMap!16))) lt!65856)))

(declare-fun b!127235 () Bool)

(declare-fun res!61518 () Bool)

(assert (=> b!127235 (=> (not res!61518) (not e!83075))))

(assert (=> b!127235 (= res!61518 (= (getValueByKey!166 (toList!858 lt!65856) (_1!1294 (tuple2!2569 lt!65470 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65470 (minValue!2646 newMap!16))))))))

(declare-fun b!127236 () Bool)

(assert (=> b!127236 (= e!83075 (contains!878 (toList!858 lt!65856) (tuple2!2569 lt!65470 (minValue!2646 newMap!16))))))

(assert (= (and d!38447 res!61517) b!127235))

(assert (= (and b!127235 res!61518) b!127236))

(declare-fun m!148881 () Bool)

(assert (=> d!38447 m!148881))

(declare-fun m!148883 () Bool)

(assert (=> d!38447 m!148883))

(declare-fun m!148885 () Bool)

(assert (=> d!38447 m!148885))

(declare-fun m!148887 () Bool)

(assert (=> d!38447 m!148887))

(declare-fun m!148889 () Bool)

(assert (=> b!127235 m!148889))

(declare-fun m!148891 () Bool)

(assert (=> b!127236 m!148891))

(assert (=> b!126638 d!38447))

(declare-fun d!38449 () Bool)

(assert (=> d!38449 (= (apply!111 lt!65465 lt!65458) (get!1455 (getValueByKey!166 (toList!858 lt!65465) lt!65458)))))

(declare-fun bs!5274 () Bool)

(assert (= bs!5274 d!38449))

(declare-fun m!148893 () Bool)

(assert (=> bs!5274 m!148893))

(assert (=> bs!5274 m!148893))

(declare-fun m!148895 () Bool)

(assert (=> bs!5274 m!148895))

(assert (=> b!126638 d!38449))

(declare-fun d!38451 () Bool)

(assert (=> d!38451 (= (apply!111 (+!165 lt!65464 (tuple2!2569 lt!65459 (zeroValue!2646 newMap!16))) lt!65454) (apply!111 lt!65464 lt!65454))))

(declare-fun lt!65859 () Unit!3936)

(assert (=> d!38451 (= lt!65859 (choose!768 lt!65464 lt!65459 (zeroValue!2646 newMap!16) lt!65454))))

(declare-fun e!83076 () Bool)

(assert (=> d!38451 e!83076))

(declare-fun res!61519 () Bool)

(assert (=> d!38451 (=> (not res!61519) (not e!83076))))

(assert (=> d!38451 (= res!61519 (contains!877 lt!65464 lt!65454))))

(assert (=> d!38451 (= (addApplyDifferent!87 lt!65464 lt!65459 (zeroValue!2646 newMap!16) lt!65454) lt!65859)))

(declare-fun b!127237 () Bool)

(assert (=> b!127237 (= e!83076 (not (= lt!65454 lt!65459)))))

(assert (= (and d!38451 res!61519) b!127237))

(declare-fun m!148897 () Bool)

(assert (=> d!38451 m!148897))

(assert (=> d!38451 m!147707))

(declare-fun m!148899 () Bool)

(assert (=> d!38451 m!148899))

(assert (=> d!38451 m!147715))

(assert (=> d!38451 m!147725))

(assert (=> d!38451 m!147715))

(assert (=> b!126638 d!38451))

(declare-fun d!38453 () Bool)

(declare-fun e!83077 () Bool)

(assert (=> d!38453 e!83077))

(declare-fun res!61520 () Bool)

(assert (=> d!38453 (=> (not res!61520) (not e!83077))))

(declare-fun lt!65861 () ListLongMap!1685)

(assert (=> d!38453 (= res!61520 (contains!877 lt!65861 (_1!1294 (tuple2!2569 lt!65469 (minValue!2646 newMap!16)))))))

(declare-fun lt!65860 () List!1719)

(assert (=> d!38453 (= lt!65861 (ListLongMap!1686 lt!65860))))

(declare-fun lt!65863 () Unit!3936)

(declare-fun lt!65862 () Unit!3936)

(assert (=> d!38453 (= lt!65863 lt!65862)))

(assert (=> d!38453 (= (getValueByKey!166 lt!65860 (_1!1294 (tuple2!2569 lt!65469 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65469 (minValue!2646 newMap!16)))))))

(assert (=> d!38453 (= lt!65862 (lemmaContainsTupThenGetReturnValue!83 lt!65860 (_1!1294 (tuple2!2569 lt!65469 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65469 (minValue!2646 newMap!16)))))))

(assert (=> d!38453 (= lt!65860 (insertStrictlySorted!85 (toList!858 lt!65467) (_1!1294 (tuple2!2569 lt!65469 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65469 (minValue!2646 newMap!16)))))))

(assert (=> d!38453 (= (+!165 lt!65467 (tuple2!2569 lt!65469 (minValue!2646 newMap!16))) lt!65861)))

(declare-fun b!127238 () Bool)

(declare-fun res!61521 () Bool)

(assert (=> b!127238 (=> (not res!61521) (not e!83077))))

(assert (=> b!127238 (= res!61521 (= (getValueByKey!166 (toList!858 lt!65861) (_1!1294 (tuple2!2569 lt!65469 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65469 (minValue!2646 newMap!16))))))))

(declare-fun b!127239 () Bool)

(assert (=> b!127239 (= e!83077 (contains!878 (toList!858 lt!65861) (tuple2!2569 lt!65469 (minValue!2646 newMap!16))))))

(assert (= (and d!38453 res!61520) b!127238))

(assert (= (and b!127238 res!61521) b!127239))

(declare-fun m!148901 () Bool)

(assert (=> d!38453 m!148901))

(declare-fun m!148903 () Bool)

(assert (=> d!38453 m!148903))

(declare-fun m!148905 () Bool)

(assert (=> d!38453 m!148905))

(declare-fun m!148907 () Bool)

(assert (=> d!38453 m!148907))

(declare-fun m!148909 () Bool)

(assert (=> b!127238 m!148909))

(declare-fun m!148911 () Bool)

(assert (=> b!127239 m!148911))

(assert (=> b!126638 d!38453))

(declare-fun d!38455 () Bool)

(declare-fun e!83079 () Bool)

(assert (=> d!38455 e!83079))

(declare-fun res!61522 () Bool)

(assert (=> d!38455 (=> res!61522 e!83079)))

(declare-fun lt!65865 () Bool)

(assert (=> d!38455 (= res!61522 (not lt!65865))))

(declare-fun lt!65864 () Bool)

(assert (=> d!38455 (= lt!65865 lt!65864)))

(declare-fun lt!65866 () Unit!3936)

(declare-fun e!83078 () Unit!3936)

(assert (=> d!38455 (= lt!65866 e!83078)))

(declare-fun c!23317 () Bool)

(assert (=> d!38455 (= c!23317 lt!65864)))

(assert (=> d!38455 (= lt!65864 (containsKey!170 (toList!858 (+!165 lt!65472 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16)))) lt!65452))))

(assert (=> d!38455 (= (contains!877 (+!165 lt!65472 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16))) lt!65452) lt!65865)))

(declare-fun b!127240 () Bool)

(declare-fun lt!65867 () Unit!3936)

(assert (=> b!127240 (= e!83078 lt!65867)))

(assert (=> b!127240 (= lt!65867 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 (+!165 lt!65472 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16)))) lt!65452))))

(assert (=> b!127240 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65472 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16)))) lt!65452))))

(declare-fun b!127241 () Bool)

(declare-fun Unit!3978 () Unit!3936)

(assert (=> b!127241 (= e!83078 Unit!3978)))

(declare-fun b!127242 () Bool)

(assert (=> b!127242 (= e!83079 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65472 (tuple2!2569 lt!65461 (zeroValue!2646 newMap!16)))) lt!65452)))))

(assert (= (and d!38455 c!23317) b!127240))

(assert (= (and d!38455 (not c!23317)) b!127241))

(assert (= (and d!38455 (not res!61522)) b!127242))

(declare-fun m!148913 () Bool)

(assert (=> d!38455 m!148913))

(declare-fun m!148915 () Bool)

(assert (=> b!127240 m!148915))

(declare-fun m!148917 () Bool)

(assert (=> b!127240 m!148917))

(assert (=> b!127240 m!148917))

(declare-fun m!148919 () Bool)

(assert (=> b!127240 m!148919))

(assert (=> b!127242 m!148917))

(assert (=> b!127242 m!148917))

(assert (=> b!127242 m!148919))

(assert (=> b!126638 d!38455))

(declare-fun d!38457 () Bool)

(declare-fun e!83081 () Bool)

(assert (=> d!38457 e!83081))

(declare-fun res!61523 () Bool)

(assert (=> d!38457 (=> res!61523 e!83081)))

(declare-fun lt!65869 () Bool)

(assert (=> d!38457 (= res!61523 (not lt!65869))))

(declare-fun lt!65868 () Bool)

(assert (=> d!38457 (= lt!65869 lt!65868)))

(declare-fun lt!65870 () Unit!3936)

(declare-fun e!83080 () Unit!3936)

(assert (=> d!38457 (= lt!65870 e!83080)))

(declare-fun c!23318 () Bool)

(assert (=> d!38457 (= c!23318 lt!65868)))

(assert (=> d!38457 (= lt!65868 (containsKey!170 (toList!858 lt!65263) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38457 (= (contains!877 lt!65263 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65869)))

(declare-fun b!127243 () Bool)

(declare-fun lt!65871 () Unit!3936)

(assert (=> b!127243 (= e!83080 lt!65871)))

(assert (=> b!127243 (= lt!65871 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65263) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> b!127243 (isDefined!120 (getValueByKey!166 (toList!858 lt!65263) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127244 () Bool)

(declare-fun Unit!3979 () Unit!3936)

(assert (=> b!127244 (= e!83080 Unit!3979)))

(declare-fun b!127245 () Bool)

(assert (=> b!127245 (= e!83081 (isDefined!120 (getValueByKey!166 (toList!858 lt!65263) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (= (and d!38457 c!23318) b!127243))

(assert (= (and d!38457 (not c!23318)) b!127244))

(assert (= (and d!38457 (not res!61523)) b!127245))

(declare-fun m!148921 () Bool)

(assert (=> d!38457 m!148921))

(declare-fun m!148923 () Bool)

(assert (=> b!127243 m!148923))

(assert (=> b!127243 m!147395))

(assert (=> b!127243 m!147395))

(declare-fun m!148925 () Bool)

(assert (=> b!127243 m!148925))

(assert (=> b!127245 m!147395))

(assert (=> b!127245 m!147395))

(assert (=> b!127245 m!148925))

(assert (=> d!38025 d!38457))

(declare-fun b!127249 () Bool)

(declare-fun e!83083 () Option!172)

(assert (=> b!127249 (= e!83083 None!170)))

(declare-fun d!38459 () Bool)

(declare-fun c!23319 () Bool)

(assert (=> d!38459 (= c!23319 (and ((_ is Cons!1715) lt!65262) (= (_1!1294 (h!2317 lt!65262)) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!83082 () Option!172)

(assert (=> d!38459 (= (getValueByKey!166 lt!65262 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) e!83082)))

(declare-fun b!127248 () Bool)

(assert (=> b!127248 (= e!83083 (getValueByKey!166 (t!6078 lt!65262) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127246 () Bool)

(assert (=> b!127246 (= e!83082 (Some!171 (_2!1294 (h!2317 lt!65262))))))

(declare-fun b!127247 () Bool)

(assert (=> b!127247 (= e!83082 e!83083)))

(declare-fun c!23320 () Bool)

(assert (=> b!127247 (= c!23320 (and ((_ is Cons!1715) lt!65262) (not (= (_1!1294 (h!2317 lt!65262)) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38459 c!23319) b!127246))

(assert (= (and d!38459 (not c!23319)) b!127247))

(assert (= (and b!127247 c!23320) b!127248))

(assert (= (and b!127247 (not c!23320)) b!127249))

(declare-fun m!148927 () Bool)

(assert (=> b!127248 m!148927))

(assert (=> d!38025 d!38459))

(declare-fun d!38461 () Bool)

(assert (=> d!38461 (= (getValueByKey!166 lt!65262 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun lt!65872 () Unit!3936)

(assert (=> d!38461 (= lt!65872 (choose!777 lt!65262 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun e!83084 () Bool)

(assert (=> d!38461 e!83084))

(declare-fun res!61524 () Bool)

(assert (=> d!38461 (=> (not res!61524) (not e!83084))))

(assert (=> d!38461 (= res!61524 (isStrictlySorted!312 lt!65262))))

(assert (=> d!38461 (= (lemmaContainsTupThenGetReturnValue!83 lt!65262 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65872)))

(declare-fun b!127250 () Bool)

(declare-fun res!61525 () Bool)

(assert (=> b!127250 (=> (not res!61525) (not e!83084))))

(assert (=> b!127250 (= res!61525 (containsKey!170 lt!65262 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127251 () Bool)

(assert (=> b!127251 (= e!83084 (contains!878 lt!65262 (tuple2!2569 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (= (and d!38461 res!61524) b!127250))

(assert (= (and b!127250 res!61525) b!127251))

(assert (=> d!38461 m!147389))

(declare-fun m!148929 () Bool)

(assert (=> d!38461 m!148929))

(declare-fun m!148931 () Bool)

(assert (=> d!38461 m!148931))

(declare-fun m!148933 () Bool)

(assert (=> b!127250 m!148933))

(declare-fun m!148935 () Bool)

(assert (=> b!127251 m!148935))

(assert (=> d!38025 d!38461))

(declare-fun b!127252 () Bool)

(declare-fun e!83085 () List!1719)

(declare-fun e!83089 () List!1719)

(assert (=> b!127252 (= e!83085 e!83089)))

(declare-fun c!23323 () Bool)

(assert (=> b!127252 (= c!23323 (and ((_ is Cons!1715) (toList!858 lt!65113)) (= (_1!1294 (h!2317 (toList!858 lt!65113))) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!83087 () List!1719)

(declare-fun b!127253 () Bool)

(assert (=> b!127253 (= e!83087 (insertStrictlySorted!85 (t!6078 (toList!858 lt!65113)) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun bm!13719 () Bool)

(declare-fun call!13724 () List!1719)

(declare-fun call!13722 () List!1719)

(assert (=> bm!13719 (= call!13724 call!13722)))

(declare-fun b!127254 () Bool)

(declare-fun e!83088 () List!1719)

(assert (=> b!127254 (= e!83088 call!13724)))

(declare-fun b!127255 () Bool)

(declare-fun call!13723 () List!1719)

(assert (=> b!127255 (= e!83085 call!13723)))

(declare-fun b!127256 () Bool)

(assert (=> b!127256 (= e!83089 call!13722)))

(declare-fun c!23322 () Bool)

(declare-fun bm!13721 () Bool)

(assert (=> bm!13721 (= call!13723 ($colon$colon!88 e!83087 (ite c!23322 (h!2317 (toList!858 lt!65113)) (tuple2!2569 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(declare-fun c!23324 () Bool)

(assert (=> bm!13721 (= c!23324 c!23322)))

(declare-fun b!127257 () Bool)

(declare-fun res!61527 () Bool)

(declare-fun e!83086 () Bool)

(assert (=> b!127257 (=> (not res!61527) (not e!83086))))

(declare-fun lt!65873 () List!1719)

(assert (=> b!127257 (= res!61527 (containsKey!170 lt!65873 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127258 () Bool)

(assert (=> b!127258 (= e!83086 (contains!878 lt!65873 (tuple2!2569 (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!127259 () Bool)

(assert (=> b!127259 (= e!83088 call!13724)))

(declare-fun b!127260 () Bool)

(declare-fun c!23321 () Bool)

(assert (=> b!127260 (= e!83087 (ite c!23323 (t!6078 (toList!858 lt!65113)) (ite c!23321 (Cons!1715 (h!2317 (toList!858 lt!65113)) (t!6078 (toList!858 lt!65113))) Nil!1716)))))

(declare-fun b!127261 () Bool)

(assert (=> b!127261 (= c!23321 (and ((_ is Cons!1715) (toList!858 lt!65113)) (bvsgt (_1!1294 (h!2317 (toList!858 lt!65113))) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> b!127261 (= e!83089 e!83088)))

(declare-fun d!38463 () Bool)

(assert (=> d!38463 e!83086))

(declare-fun res!61526 () Bool)

(assert (=> d!38463 (=> (not res!61526) (not e!83086))))

(assert (=> d!38463 (= res!61526 (isStrictlySorted!312 lt!65873))))

(assert (=> d!38463 (= lt!65873 e!83085)))

(assert (=> d!38463 (= c!23322 (and ((_ is Cons!1715) (toList!858 lt!65113)) (bvslt (_1!1294 (h!2317 (toList!858 lt!65113))) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> d!38463 (isStrictlySorted!312 (toList!858 lt!65113))))

(assert (=> d!38463 (= (insertStrictlySorted!85 (toList!858 lt!65113) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65873)))

(declare-fun bm!13720 () Bool)

(assert (=> bm!13720 (= call!13722 call!13723)))

(assert (= (and d!38463 c!23322) b!127255))

(assert (= (and d!38463 (not c!23322)) b!127252))

(assert (= (and b!127252 c!23323) b!127256))

(assert (= (and b!127252 (not c!23323)) b!127261))

(assert (= (and b!127261 c!23321) b!127259))

(assert (= (and b!127261 (not c!23321)) b!127254))

(assert (= (or b!127259 b!127254) bm!13719))

(assert (= (or b!127256 bm!13719) bm!13720))

(assert (= (or b!127255 bm!13720) bm!13721))

(assert (= (and bm!13721 c!23324) b!127253))

(assert (= (and bm!13721 (not c!23324)) b!127260))

(assert (= (and d!38463 res!61526) b!127257))

(assert (= (and b!127257 res!61527) b!127258))

(declare-fun m!148937 () Bool)

(assert (=> bm!13721 m!148937))

(declare-fun m!148939 () Bool)

(assert (=> d!38463 m!148939))

(declare-fun m!148941 () Bool)

(assert (=> d!38463 m!148941))

(declare-fun m!148943 () Bool)

(assert (=> b!127258 m!148943))

(declare-fun m!148945 () Bool)

(assert (=> b!127253 m!148945))

(declare-fun m!148947 () Bool)

(assert (=> b!127257 m!148947))

(assert (=> d!38025 d!38463))

(declare-fun b!127265 () Bool)

(declare-fun e!83091 () Option!172)

(assert (=> b!127265 (= e!83091 None!170)))

(declare-fun d!38465 () Bool)

(declare-fun c!23325 () Bool)

(assert (=> d!38465 (= c!23325 (and ((_ is Cons!1715) (t!6078 (toList!858 lt!65045))) (= (_1!1294 (h!2317 (t!6078 (toList!858 lt!65045)))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(declare-fun e!83090 () Option!172)

(assert (=> d!38465 (= (getValueByKey!166 (t!6078 (toList!858 lt!65045)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) e!83090)))

(declare-fun b!127264 () Bool)

(assert (=> b!127264 (= e!83091 (getValueByKey!166 (t!6078 (t!6078 (toList!858 lt!65045))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!127262 () Bool)

(assert (=> b!127262 (= e!83090 (Some!171 (_2!1294 (h!2317 (t!6078 (toList!858 lt!65045))))))))

(declare-fun b!127263 () Bool)

(assert (=> b!127263 (= e!83090 e!83091)))

(declare-fun c!23326 () Bool)

(assert (=> b!127263 (= c!23326 (and ((_ is Cons!1715) (t!6078 (toList!858 lt!65045))) (not (= (_1!1294 (h!2317 (t!6078 (toList!858 lt!65045)))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))))

(assert (= (and d!38465 c!23325) b!127262))

(assert (= (and d!38465 (not c!23325)) b!127263))

(assert (= (and b!127263 c!23326) b!127264))

(assert (= (and b!127263 (not c!23326)) b!127265))

(assert (=> b!127264 m!147095))

(declare-fun m!148949 () Bool)

(assert (=> b!127264 m!148949))

(assert (=> b!126497 d!38465))

(declare-fun d!38467 () Bool)

(declare-fun res!61528 () Bool)

(declare-fun e!83092 () Bool)

(assert (=> d!38467 (=> res!61528 e!83092)))

(assert (=> d!38467 (= res!61528 (and ((_ is Cons!1715) (toList!858 call!13598)) (= (_1!1294 (h!2317 (toList!858 call!13598))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(assert (=> d!38467 (= (containsKey!170 (toList!858 call!13598) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) e!83092)))

(declare-fun b!127266 () Bool)

(declare-fun e!83093 () Bool)

(assert (=> b!127266 (= e!83092 e!83093)))

(declare-fun res!61529 () Bool)

(assert (=> b!127266 (=> (not res!61529) (not e!83093))))

(assert (=> b!127266 (= res!61529 (and (or (not ((_ is Cons!1715) (toList!858 call!13598))) (bvsle (_1!1294 (h!2317 (toList!858 call!13598))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))) ((_ is Cons!1715) (toList!858 call!13598)) (bvslt (_1!1294 (h!2317 (toList!858 call!13598))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(declare-fun b!127267 () Bool)

(assert (=> b!127267 (= e!83093 (containsKey!170 (t!6078 (toList!858 call!13598)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (= (and d!38467 (not res!61528)) b!127266))

(assert (= (and b!127266 res!61529) b!127267))

(assert (=> b!127267 m!147095))

(declare-fun m!148951 () Bool)

(assert (=> b!127267 m!148951))

(assert (=> d!38105 d!38467))

(assert (=> d!38107 d!38077))

(declare-fun d!38469 () Bool)

(declare-fun e!83096 () Bool)

(assert (=> d!38469 e!83096))

(declare-fun res!61534 () Bool)

(assert (=> d!38469 (=> (not res!61534) (not e!83096))))

(declare-fun lt!65876 () SeekEntryResult!280)

(assert (=> d!38469 (= res!61534 ((_ is Found!280) lt!65876))))

(assert (=> d!38469 (= lt!65876 (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(assert (=> d!38469 true))

(declare-fun _$33!105 () Unit!3936)

(assert (=> d!38469 (= (choose!774 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (defaultEntry!2783 newMap!16)) _$33!105)))

(declare-fun b!127272 () Bool)

(declare-fun res!61535 () Bool)

(assert (=> b!127272 (=> (not res!61535) (not e!83096))))

(assert (=> b!127272 (= res!61535 (inRange!0 (index!3276 lt!65876) (mask!7039 newMap!16)))))

(declare-fun b!127273 () Bool)

(assert (=> b!127273 (= e!83096 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65876)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (= (and d!38469 res!61534) b!127272))

(assert (= (and b!127272 res!61535) b!127273))

(assert (=> d!38469 m!147095))

(assert (=> d!38469 m!147245))

(declare-fun m!148953 () Bool)

(assert (=> b!127272 m!148953))

(declare-fun m!148955 () Bool)

(assert (=> b!127273 m!148955))

(assert (=> d!38107 d!38469))

(assert (=> d!38107 d!38139))

(declare-fun d!38471 () Bool)

(declare-fun e!83098 () Bool)

(assert (=> d!38471 e!83098))

(declare-fun res!61536 () Bool)

(assert (=> d!38471 (=> res!61536 e!83098)))

(declare-fun lt!65878 () Bool)

(assert (=> d!38471 (= res!61536 (not lt!65878))))

(declare-fun lt!65877 () Bool)

(assert (=> d!38471 (= lt!65878 lt!65877)))

(declare-fun lt!65879 () Unit!3936)

(declare-fun e!83097 () Unit!3936)

(assert (=> d!38471 (= lt!65879 e!83097)))

(declare-fun c!23327 () Bool)

(assert (=> d!38471 (= c!23327 lt!65877)))

(assert (=> d!38471 (= lt!65877 (containsKey!170 (toList!858 lt!65514) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38471 (= (contains!877 lt!65514 #b1000000000000000000000000000000000000000000000000000000000000000) lt!65878)))

(declare-fun b!127274 () Bool)

(declare-fun lt!65880 () Unit!3936)

(assert (=> b!127274 (= e!83097 lt!65880)))

(assert (=> b!127274 (= lt!65880 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65514) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!127274 (isDefined!120 (getValueByKey!166 (toList!858 lt!65514) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127275 () Bool)

(declare-fun Unit!3980 () Unit!3936)

(assert (=> b!127275 (= e!83097 Unit!3980)))

(declare-fun b!127276 () Bool)

(assert (=> b!127276 (= e!83098 (isDefined!120 (getValueByKey!166 (toList!858 lt!65514) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38471 c!23327) b!127274))

(assert (= (and d!38471 (not c!23327)) b!127275))

(assert (= (and d!38471 (not res!61536)) b!127276))

(declare-fun m!148957 () Bool)

(assert (=> d!38471 m!148957))

(declare-fun m!148959 () Bool)

(assert (=> b!127274 m!148959))

(declare-fun m!148961 () Bool)

(assert (=> b!127274 m!148961))

(assert (=> b!127274 m!148961))

(declare-fun m!148963 () Bool)

(assert (=> b!127274 m!148963))

(assert (=> b!127276 m!148961))

(assert (=> b!127276 m!148961))

(assert (=> b!127276 m!148963))

(assert (=> bm!13663 d!38471))

(declare-fun b!127280 () Bool)

(declare-fun e!83100 () Option!172)

(assert (=> b!127280 (= e!83100 None!170)))

(declare-fun d!38473 () Bool)

(declare-fun c!23328 () Bool)

(assert (=> d!38473 (= c!23328 (and ((_ is Cons!1715) (toList!858 lt!65256)) (= (_1!1294 (h!2317 (toList!858 lt!65256))) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!83099 () Option!172)

(assert (=> d!38473 (= (getValueByKey!166 (toList!858 lt!65256) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) e!83099)))

(declare-fun b!127279 () Bool)

(assert (=> b!127279 (= e!83100 (getValueByKey!166 (t!6078 (toList!858 lt!65256)) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127277 () Bool)

(assert (=> b!127277 (= e!83099 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65256)))))))

(declare-fun b!127278 () Bool)

(assert (=> b!127278 (= e!83099 e!83100)))

(declare-fun c!23329 () Bool)

(assert (=> b!127278 (= c!23329 (and ((_ is Cons!1715) (toList!858 lt!65256)) (not (= (_1!1294 (h!2317 (toList!858 lt!65256))) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38473 c!23328) b!127277))

(assert (= (and d!38473 (not c!23328)) b!127278))

(assert (= (and b!127278 c!23329) b!127279))

(assert (= (and b!127278 (not c!23329)) b!127280))

(declare-fun m!148965 () Bool)

(assert (=> b!127279 m!148965))

(assert (=> b!126413 d!38473))

(declare-fun d!38475 () Bool)

(declare-fun e!83102 () Bool)

(assert (=> d!38475 e!83102))

(declare-fun res!61537 () Bool)

(assert (=> d!38475 (=> res!61537 e!83102)))

(declare-fun lt!65882 () Bool)

(assert (=> d!38475 (= res!61537 (not lt!65882))))

(declare-fun lt!65881 () Bool)

(assert (=> d!38475 (= lt!65882 lt!65881)))

(declare-fun lt!65883 () Unit!3936)

(declare-fun e!83101 () Unit!3936)

(assert (=> d!38475 (= lt!65883 e!83101)))

(declare-fun c!23330 () Bool)

(assert (=> d!38475 (= c!23330 lt!65881)))

(assert (=> d!38475 (= lt!65881 (containsKey!170 (toList!858 lt!65320) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!38475 (= (contains!877 lt!65320 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) lt!65882)))

(declare-fun b!127281 () Bool)

(declare-fun lt!65884 () Unit!3936)

(assert (=> b!127281 (= e!83101 lt!65884)))

(assert (=> b!127281 (= lt!65884 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65320) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!127281 (isDefined!120 (getValueByKey!166 (toList!858 lt!65320) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!127282 () Bool)

(declare-fun Unit!3981 () Unit!3936)

(assert (=> b!127282 (= e!83101 Unit!3981)))

(declare-fun b!127283 () Bool)

(assert (=> b!127283 (= e!83102 (isDefined!120 (getValueByKey!166 (toList!858 lt!65320) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!38475 c!23330) b!127281))

(assert (= (and d!38475 (not c!23330)) b!127282))

(assert (= (and d!38475 (not res!61537)) b!127283))

(assert (=> d!38475 m!147467))

(declare-fun m!148967 () Bool)

(assert (=> d!38475 m!148967))

(assert (=> b!127281 m!147467))

(declare-fun m!148969 () Bool)

(assert (=> b!127281 m!148969))

(assert (=> b!127281 m!147467))

(declare-fun m!148971 () Bool)

(assert (=> b!127281 m!148971))

(assert (=> b!127281 m!148971))

(declare-fun m!148973 () Bool)

(assert (=> b!127281 m!148973))

(assert (=> b!127283 m!147467))

(assert (=> b!127283 m!148971))

(assert (=> b!127283 m!148971))

(assert (=> b!127283 m!148973))

(assert (=> b!126534 d!38475))

(assert (=> b!126702 d!38153))

(declare-fun d!38477 () Bool)

(assert (=> d!38477 (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!65885 () Unit!3936)

(assert (=> d!38477 (= lt!65885 (choose!772 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!83103 () Bool)

(assert (=> d!38477 e!83103))

(declare-fun res!61538 () Bool)

(assert (=> d!38477 (=> (not res!61538) (not e!83103))))

(assert (=> d!38477 (= res!61538 (isStrictlySorted!312 (toList!858 lt!65101)))))

(assert (=> d!38477 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!65885)))

(declare-fun b!127284 () Bool)

(assert (=> b!127284 (= e!83103 (containsKey!170 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!38477 res!61538) b!127284))

(assert (=> d!38477 m!147165))

(assert (=> d!38477 m!147591))

(assert (=> d!38477 m!147591))

(assert (=> d!38477 m!147617))

(assert (=> d!38477 m!147165))

(declare-fun m!148975 () Bool)

(assert (=> d!38477 m!148975))

(assert (=> d!38477 m!148129))

(assert (=> b!127284 m!147165))

(assert (=> b!127284 m!147613))

(assert (=> b!126579 d!38477))

(assert (=> b!126579 d!38159))

(assert (=> b!126579 d!38133))

(assert (=> bm!13642 d!38077))

(declare-fun d!38479 () Bool)

(assert (=> d!38479 (= (apply!111 lt!65514 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1455 (getValueByKey!166 (toList!858 lt!65514) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5275 () Bool)

(assert (= bs!5275 d!38479))

(assert (=> bs!5275 m!148961))

(assert (=> bs!5275 m!148961))

(declare-fun m!148977 () Bool)

(assert (=> bs!5275 m!148977))

(assert (=> b!126714 d!38479))

(declare-fun b!127297 () Bool)

(declare-fun e!83112 () SeekEntryResult!280)

(assert (=> b!127297 (= e!83112 (MissingVacant!280 (index!3277 lt!65315)))))

(declare-fun b!127298 () Bool)

(declare-fun c!23339 () Bool)

(declare-fun lt!65891 () (_ BitVec 64))

(assert (=> b!127298 (= c!23339 (= lt!65891 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!83110 () SeekEntryResult!280)

(assert (=> b!127298 (= e!83110 e!83112)))

(declare-fun d!38481 () Bool)

(declare-fun lt!65890 () SeekEntryResult!280)

(assert (=> d!38481 (and (or ((_ is Undefined!280) lt!65890) (not ((_ is Found!280) lt!65890)) (and (bvsge (index!3276 lt!65890) #b00000000000000000000000000000000) (bvslt (index!3276 lt!65890) (size!2488 (_keys!4516 newMap!16))))) (or ((_ is Undefined!280) lt!65890) ((_ is Found!280) lt!65890) (not ((_ is MissingVacant!280) lt!65890)) (not (= (index!3278 lt!65890) (index!3277 lt!65315))) (and (bvsge (index!3278 lt!65890) #b00000000000000000000000000000000) (bvslt (index!3278 lt!65890) (size!2488 (_keys!4516 newMap!16))))) (or ((_ is Undefined!280) lt!65890) (ite ((_ is Found!280) lt!65890) (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65890)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) (and ((_ is MissingVacant!280) lt!65890) (= (index!3278 lt!65890) (index!3277 lt!65315)) (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3278 lt!65890)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!83111 () SeekEntryResult!280)

(assert (=> d!38481 (= lt!65890 e!83111)))

(declare-fun c!23338 () Bool)

(assert (=> d!38481 (= c!23338 (bvsge (x!14973 lt!65315) #b01111111111111111111111111111110))))

(assert (=> d!38481 (= lt!65891 (select (arr!2224 (_keys!4516 newMap!16)) (index!3277 lt!65315)))))

(assert (=> d!38481 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38481 (= (seekKeyOrZeroReturnVacant!0 (x!14973 lt!65315) (index!3277 lt!65315) (index!3277 lt!65315) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)) lt!65890)))

(declare-fun b!127299 () Bool)

(assert (=> b!127299 (= e!83111 e!83110)))

(declare-fun c!23337 () Bool)

(assert (=> b!127299 (= c!23337 (= lt!65891 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun b!127300 () Bool)

(assert (=> b!127300 (= e!83112 (seekKeyOrZeroReturnVacant!0 (bvadd (x!14973 lt!65315) #b00000000000000000000000000000001) (nextIndex!0 (index!3277 lt!65315) (x!14973 lt!65315) (mask!7039 newMap!16)) (index!3277 lt!65315) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(declare-fun b!127301 () Bool)

(assert (=> b!127301 (= e!83111 Undefined!280)))

(declare-fun b!127302 () Bool)

(assert (=> b!127302 (= e!83110 (Found!280 (index!3277 lt!65315)))))

(assert (= (and d!38481 c!23338) b!127301))

(assert (= (and d!38481 (not c!23338)) b!127299))

(assert (= (and b!127299 c!23337) b!127302))

(assert (= (and b!127299 (not c!23337)) b!127298))

(assert (= (and b!127298 c!23339) b!127297))

(assert (= (and b!127298 (not c!23339)) b!127300))

(declare-fun m!148979 () Bool)

(assert (=> d!38481 m!148979))

(declare-fun m!148981 () Bool)

(assert (=> d!38481 m!148981))

(assert (=> d!38481 m!147523))

(assert (=> d!38481 m!147475))

(declare-fun m!148983 () Bool)

(assert (=> b!127300 m!148983))

(assert (=> b!127300 m!148983))

(assert (=> b!127300 m!147095))

(declare-fun m!148985 () Bool)

(assert (=> b!127300 m!148985))

(assert (=> b!126511 d!38481))

(assert (=> b!126400 d!38057))

(declare-fun d!38483 () Bool)

(declare-fun e!83113 () Bool)

(assert (=> d!38483 e!83113))

(declare-fun res!61539 () Bool)

(assert (=> d!38483 (=> (not res!61539) (not e!83113))))

(declare-fun lt!65893 () ListLongMap!1685)

(assert (=> d!38483 (= res!61539 (contains!877 lt!65893 (_1!1294 (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(declare-fun lt!65892 () List!1719)

(assert (=> d!38483 (= lt!65893 (ListLongMap!1686 lt!65892))))

(declare-fun lt!65895 () Unit!3936)

(declare-fun lt!65894 () Unit!3936)

(assert (=> d!38483 (= lt!65895 lt!65894)))

(assert (=> d!38483 (= (getValueByKey!166 lt!65892 (_1!1294 (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(assert (=> d!38483 (= lt!65894 (lemmaContainsTupThenGetReturnValue!83 lt!65892 (_1!1294 (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (_2!1294 (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(assert (=> d!38483 (= lt!65892 (insertStrictlySorted!85 (toList!858 (ite c!23159 call!13660 (ite c!23162 call!13657 call!13659))) (_1!1294 (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (_2!1294 (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(assert (=> d!38483 (= (+!165 (ite c!23159 call!13660 (ite c!23162 call!13657 call!13659)) (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) lt!65893)))

(declare-fun b!127303 () Bool)

(declare-fun res!61540 () Bool)

(assert (=> b!127303 (=> (not res!61540) (not e!83113))))

(assert (=> b!127303 (= res!61540 (= (getValueByKey!166 (toList!858 lt!65893) (_1!1294 (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))))

(declare-fun b!127304 () Bool)

(assert (=> b!127304 (= e!83113 (contains!878 (toList!858 lt!65893) (ite (or c!23159 c!23162) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (= (and d!38483 res!61539) b!127303))

(assert (= (and b!127303 res!61540) b!127304))

(declare-fun m!148987 () Bool)

(assert (=> d!38483 m!148987))

(declare-fun m!148989 () Bool)

(assert (=> d!38483 m!148989))

(declare-fun m!148991 () Bool)

(assert (=> d!38483 m!148991))

(declare-fun m!148993 () Bool)

(assert (=> d!38483 m!148993))

(declare-fun m!148995 () Bool)

(assert (=> b!127303 m!148995))

(declare-fun m!148997 () Bool)

(assert (=> b!127304 m!148997))

(assert (=> bm!13654 d!38483))

(declare-fun d!38485 () Bool)

(assert (=> d!38485 (isDefined!120 (getValueByKey!166 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun lt!65896 () Unit!3936)

(assert (=> d!38485 (= lt!65896 (choose!772 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(declare-fun e!83114 () Bool)

(assert (=> d!38485 e!83114))

(declare-fun res!61541 () Bool)

(assert (=> d!38485 (=> (not res!61541) (not e!83114))))

(assert (=> d!38485 (= res!61541 (isStrictlySorted!312 (toList!858 e!82524)))))

(assert (=> d!38485 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) lt!65896)))

(declare-fun b!127305 () Bool)

(assert (=> b!127305 (= e!83114 (containsKey!170 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (= (and d!38485 res!61541) b!127305))

(assert (=> d!38485 m!147095))

(assert (=> d!38485 m!147485))

(assert (=> d!38485 m!147485))

(assert (=> d!38485 m!147487))

(assert (=> d!38485 m!147095))

(declare-fun m!148999 () Bool)

(assert (=> d!38485 m!148999))

(declare-fun m!149001 () Bool)

(assert (=> d!38485 m!149001))

(assert (=> b!127305 m!147095))

(assert (=> b!127305 m!147481))

(assert (=> b!126442 d!38485))

(assert (=> b!126442 d!38175))

(assert (=> b!126442 d!38177))

(declare-fun d!38487 () Bool)

(declare-fun e!83115 () Bool)

(assert (=> d!38487 e!83115))

(declare-fun res!61542 () Bool)

(assert (=> d!38487 (=> (not res!61542) (not e!83115))))

(declare-fun lt!65898 () ListLongMap!1685)

(assert (=> d!38487 (= res!61542 (contains!877 lt!65898 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(declare-fun lt!65897 () List!1719)

(assert (=> d!38487 (= lt!65898 (ListLongMap!1686 lt!65897))))

(declare-fun lt!65900 () Unit!3936)

(declare-fun lt!65899 () Unit!3936)

(assert (=> d!38487 (= lt!65900 lt!65899)))

(assert (=> d!38487 (= (getValueByKey!166 lt!65897 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (=> d!38487 (= lt!65899 (lemmaContainsTupThenGetReturnValue!83 lt!65897 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (=> d!38487 (= lt!65897 (insertStrictlySorted!85 (toList!858 call!13656) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (=> d!38487 (= (+!165 call!13656 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))) lt!65898)))

(declare-fun b!127306 () Bool)

(declare-fun res!61543 () Bool)

(assert (=> b!127306 (=> (not res!61543) (not e!83115))))

(assert (=> b!127306 (= res!61543 (= (getValueByKey!166 (toList!858 lt!65898) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(declare-fun b!127307 () Bool)

(assert (=> b!127307 (= e!83115 (contains!878 (toList!858 lt!65898) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))

(assert (= (and d!38487 res!61542) b!127306))

(assert (= (and b!127306 res!61543) b!127307))

(declare-fun m!149003 () Bool)

(assert (=> d!38487 m!149003))

(declare-fun m!149005 () Bool)

(assert (=> d!38487 m!149005))

(declare-fun m!149007 () Bool)

(assert (=> d!38487 m!149007))

(declare-fun m!149009 () Bool)

(assert (=> d!38487 m!149009))

(declare-fun m!149011 () Bool)

(assert (=> b!127306 m!149011))

(declare-fun m!149013 () Bool)

(assert (=> b!127307 m!149013))

(assert (=> b!126686 d!38487))

(declare-fun d!38489 () Bool)

(declare-fun e!83117 () Bool)

(assert (=> d!38489 e!83117))

(declare-fun res!61544 () Bool)

(assert (=> d!38489 (=> res!61544 e!83117)))

(declare-fun lt!65902 () Bool)

(assert (=> d!38489 (= res!61544 (not lt!65902))))

(declare-fun lt!65901 () Bool)

(assert (=> d!38489 (= lt!65902 lt!65901)))

(declare-fun lt!65903 () Unit!3936)

(declare-fun e!83116 () Unit!3936)

(assert (=> d!38489 (= lt!65903 e!83116)))

(declare-fun c!23340 () Bool)

(assert (=> d!38489 (= c!23340 lt!65901)))

(assert (=> d!38489 (= lt!65901 (containsKey!170 (toList!858 lt!65233) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38489 (= (contains!877 lt!65233 #b1000000000000000000000000000000000000000000000000000000000000000) lt!65902)))

(declare-fun b!127308 () Bool)

(declare-fun lt!65904 () Unit!3936)

(assert (=> b!127308 (= e!83116 lt!65904)))

(assert (=> b!127308 (= lt!65904 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65233) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!127308 (isDefined!120 (getValueByKey!166 (toList!858 lt!65233) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127309 () Bool)

(declare-fun Unit!3982 () Unit!3936)

(assert (=> b!127309 (= e!83116 Unit!3982)))

(declare-fun b!127310 () Bool)

(assert (=> b!127310 (= e!83117 (isDefined!120 (getValueByKey!166 (toList!858 lt!65233) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38489 c!23340) b!127308))

(assert (= (and d!38489 (not c!23340)) b!127309))

(assert (= (and d!38489 (not res!61544)) b!127310))

(declare-fun m!149015 () Bool)

(assert (=> d!38489 m!149015))

(declare-fun m!149017 () Bool)

(assert (=> b!127308 m!149017))

(declare-fun m!149019 () Bool)

(assert (=> b!127308 m!149019))

(assert (=> b!127308 m!149019))

(declare-fun m!149021 () Bool)

(assert (=> b!127308 m!149021))

(assert (=> b!127310 m!149019))

(assert (=> b!127310 m!149019))

(assert (=> b!127310 m!149021))

(assert (=> b!126396 d!38489))

(declare-fun d!38491 () Bool)

(assert (=> d!38491 (= (get!1454 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!126551 d!38491))

(declare-fun d!38493 () Bool)

(assert (=> d!38493 (= (apply!111 lt!65485 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1455 (getValueByKey!166 (toList!858 lt!65485) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5276 () Bool)

(assert (= bs!5276 d!38493))

(declare-fun m!149023 () Bool)

(assert (=> bs!5276 m!149023))

(assert (=> bs!5276 m!149023))

(declare-fun m!149025 () Bool)

(assert (=> bs!5276 m!149025))

(assert (=> b!126671 d!38493))

(declare-fun d!38495 () Bool)

(assert (=> d!38495 (isDefined!120 (getValueByKey!166 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!65905 () Unit!3936)

(assert (=> d!38495 (= lt!65905 (choose!772 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!83118 () Bool)

(assert (=> d!38495 e!83118))

(declare-fun res!61545 () Bool)

(assert (=> d!38495 (=> (not res!61545) (not e!83118))))

(assert (=> d!38495 (= res!61545 (isStrictlySorted!312 (toList!858 lt!65101)))))

(assert (=> d!38495 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000) lt!65905)))

(declare-fun b!127311 () Bool)

(assert (=> b!127311 (= e!83118 (containsKey!170 (toList!858 lt!65101) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!38495 res!61545) b!127311))

(assert (=> d!38495 m!147463))

(assert (=> d!38495 m!147463))

(assert (=> d!38495 m!147693))

(declare-fun m!149027 () Bool)

(assert (=> d!38495 m!149027))

(assert (=> d!38495 m!148129))

(assert (=> b!127311 m!147689))

(assert (=> b!126635 d!38495))

(assert (=> b!126635 d!38185))

(assert (=> b!126635 d!38187))

(declare-fun d!38497 () Bool)

(assert (=> d!38497 (isDefined!120 (getValueByKey!166 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(declare-fun lt!65906 () Unit!3936)

(assert (=> d!38497 (= lt!65906 (choose!772 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(declare-fun e!83119 () Bool)

(assert (=> d!38497 e!83119))

(declare-fun res!61546 () Bool)

(assert (=> d!38497 (=> (not res!61546) (not e!83119))))

(assert (=> d!38497 (= res!61546 (isStrictlySorted!312 (toList!858 call!13595)))))

(assert (=> d!38497 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))) lt!65906)))

(declare-fun b!127312 () Bool)

(assert (=> b!127312 (= e!83119 (containsKey!170 (toList!858 call!13595) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(assert (= (and d!38497 res!61546) b!127312))

(assert (=> d!38497 m!147229))

(assert (=> d!38497 m!147813))

(assert (=> d!38497 m!147813))

(assert (=> d!38497 m!147815))

(assert (=> d!38497 m!147229))

(declare-fun m!149029 () Bool)

(assert (=> d!38497 m!149029))

(declare-fun m!149031 () Bool)

(assert (=> d!38497 m!149031))

(assert (=> b!127312 m!147229))

(assert (=> b!127312 m!147809))

(assert (=> b!126689 d!38497))

(assert (=> b!126689 d!38165))

(assert (=> b!126689 d!38167))

(declare-fun d!38499 () Bool)

(declare-fun res!61547 () Bool)

(declare-fun e!83120 () Bool)

(assert (=> d!38499 (=> (not res!61547) (not e!83120))))

(assert (=> d!38499 (= res!61547 (validMask!0 (mask!7039 (v!3122 (underlying!438 thiss!992)))))))

(assert (=> d!38499 (= (simpleValid!86 (v!3122 (underlying!438 thiss!992))) e!83120)))

(declare-fun b!127313 () Bool)

(declare-fun res!61548 () Bool)

(assert (=> b!127313 (=> (not res!61548) (not e!83120))))

(assert (=> b!127313 (= res!61548 (and (= (size!2489 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000001)) (= (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (size!2489 (_values!2766 (v!3122 (underlying!438 thiss!992))))) (bvsge (_size!580 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!580 (v!3122 (underlying!438 thiss!992))) (bvadd (mask!7039 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!127315 () Bool)

(declare-fun res!61550 () Bool)

(assert (=> b!127315 (=> (not res!61550) (not e!83120))))

(assert (=> b!127315 (= res!61550 (= (size!2492 (v!3122 (underlying!438 thiss!992))) (bvadd (_size!580 (v!3122 (underlying!438 thiss!992))) (bvsdiv (bvadd (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!127316 () Bool)

(assert (=> b!127316 (= e!83120 (and (bvsge (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2564 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!580 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!127314 () Bool)

(declare-fun res!61549 () Bool)

(assert (=> b!127314 (=> (not res!61549) (not e!83120))))

(assert (=> b!127314 (= res!61549 (bvsge (size!2492 (v!3122 (underlying!438 thiss!992))) (_size!580 (v!3122 (underlying!438 thiss!992)))))))

(assert (= (and d!38499 res!61547) b!127313))

(assert (= (and b!127313 res!61548) b!127314))

(assert (= (and b!127314 res!61549) b!127315))

(assert (= (and b!127315 res!61550) b!127316))

(assert (=> d!38499 m!147113))

(declare-fun m!149033 () Bool)

(assert (=> b!127315 m!149033))

(assert (=> b!127314 m!149033))

(assert (=> d!38003 d!38499))

(assert (=> d!38115 d!38139))

(declare-fun d!38501 () Bool)

(declare-fun e!83122 () Bool)

(assert (=> d!38501 e!83122))

(declare-fun res!61551 () Bool)

(assert (=> d!38501 (=> res!61551 e!83122)))

(declare-fun lt!65908 () Bool)

(assert (=> d!38501 (= res!61551 (not lt!65908))))

(declare-fun lt!65907 () Bool)

(assert (=> d!38501 (= lt!65908 lt!65907)))

(declare-fun lt!65909 () Unit!3936)

(declare-fun e!83121 () Unit!3936)

(assert (=> d!38501 (= lt!65909 e!83121)))

(declare-fun c!23341 () Bool)

(assert (=> d!38501 (= c!23341 lt!65907)))

(assert (=> d!38501 (= lt!65907 (containsKey!170 (toList!858 lt!65256) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> d!38501 (= (contains!877 lt!65256 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65908)))

(declare-fun b!127317 () Bool)

(declare-fun lt!65910 () Unit!3936)

(assert (=> b!127317 (= e!83121 lt!65910)))

(assert (=> b!127317 (= lt!65910 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65256) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (=> b!127317 (isDefined!120 (getValueByKey!166 (toList!858 lt!65256) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127318 () Bool)

(declare-fun Unit!3983 () Unit!3936)

(assert (=> b!127318 (= e!83121 Unit!3983)))

(declare-fun b!127319 () Bool)

(assert (=> b!127319 (= e!83122 (isDefined!120 (getValueByKey!166 (toList!858 lt!65256) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (= (and d!38501 c!23341) b!127317))

(assert (= (and d!38501 (not c!23341)) b!127318))

(assert (= (and d!38501 (not res!61551)) b!127319))

(declare-fun m!149035 () Bool)

(assert (=> d!38501 m!149035))

(declare-fun m!149037 () Bool)

(assert (=> b!127317 m!149037))

(assert (=> b!127317 m!147375))

(assert (=> b!127317 m!147375))

(declare-fun m!149039 () Bool)

(assert (=> b!127317 m!149039))

(assert (=> b!127319 m!147375))

(assert (=> b!127319 m!147375))

(assert (=> b!127319 m!149039))

(assert (=> d!38019 d!38501))

(declare-fun b!127323 () Bool)

(declare-fun e!83124 () Option!172)

(assert (=> b!127323 (= e!83124 None!170)))

(declare-fun c!23342 () Bool)

(declare-fun d!38503 () Bool)

(assert (=> d!38503 (= c!23342 (and ((_ is Cons!1715) lt!65255) (= (_1!1294 (h!2317 lt!65255)) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!83123 () Option!172)

(assert (=> d!38503 (= (getValueByKey!166 lt!65255 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) e!83123)))

(declare-fun b!127322 () Bool)

(assert (=> b!127322 (= e!83124 (getValueByKey!166 (t!6078 lt!65255) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127320 () Bool)

(assert (=> b!127320 (= e!83123 (Some!171 (_2!1294 (h!2317 lt!65255))))))

(declare-fun b!127321 () Bool)

(assert (=> b!127321 (= e!83123 e!83124)))

(declare-fun c!23343 () Bool)

(assert (=> b!127321 (= c!23343 (and ((_ is Cons!1715) lt!65255) (not (= (_1!1294 (h!2317 lt!65255)) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38503 c!23342) b!127320))

(assert (= (and d!38503 (not c!23342)) b!127321))

(assert (= (and b!127321 c!23343) b!127322))

(assert (= (and b!127321 (not c!23343)) b!127323))

(declare-fun m!149041 () Bool)

(assert (=> b!127322 m!149041))

(assert (=> d!38019 d!38503))

(declare-fun d!38505 () Bool)

(assert (=> d!38505 (= (getValueByKey!166 lt!65255 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) (Some!171 (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun lt!65911 () Unit!3936)

(assert (=> d!38505 (= lt!65911 (choose!777 lt!65255 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun e!83125 () Bool)

(assert (=> d!38505 e!83125))

(declare-fun res!61552 () Bool)

(assert (=> d!38505 (=> (not res!61552) (not e!83125))))

(assert (=> d!38505 (= res!61552 (isStrictlySorted!312 lt!65255))))

(assert (=> d!38505 (= (lemmaContainsTupThenGetReturnValue!83 lt!65255 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65911)))

(declare-fun b!127324 () Bool)

(declare-fun res!61553 () Bool)

(assert (=> b!127324 (=> (not res!61553) (not e!83125))))

(assert (=> b!127324 (= res!61553 (containsKey!170 lt!65255 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127325 () Bool)

(assert (=> b!127325 (= e!83125 (contains!878 lt!65255 (tuple2!2569 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (= (and d!38505 res!61552) b!127324))

(assert (= (and b!127324 res!61553) b!127325))

(assert (=> d!38505 m!147369))

(declare-fun m!149043 () Bool)

(assert (=> d!38505 m!149043))

(declare-fun m!149045 () Bool)

(assert (=> d!38505 m!149045))

(declare-fun m!149047 () Bool)

(assert (=> b!127324 m!149047))

(declare-fun m!149049 () Bool)

(assert (=> b!127325 m!149049))

(assert (=> d!38019 d!38505))

(declare-fun b!127326 () Bool)

(declare-fun e!83126 () List!1719)

(declare-fun e!83130 () List!1719)

(assert (=> b!127326 (= e!83126 e!83130)))

(declare-fun c!23346 () Bool)

(assert (=> b!127326 (= c!23346 (and ((_ is Cons!1715) (toList!858 lt!65120)) (= (_1!1294 (h!2317 (toList!858 lt!65120))) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!127327 () Bool)

(declare-fun e!83128 () List!1719)

(assert (=> b!127327 (= e!83128 (insertStrictlySorted!85 (t!6078 (toList!858 lt!65120)) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun bm!13722 () Bool)

(declare-fun call!13727 () List!1719)

(declare-fun call!13725 () List!1719)

(assert (=> bm!13722 (= call!13727 call!13725)))

(declare-fun b!127328 () Bool)

(declare-fun e!83129 () List!1719)

(assert (=> b!127328 (= e!83129 call!13727)))

(declare-fun b!127329 () Bool)

(declare-fun call!13726 () List!1719)

(assert (=> b!127329 (= e!83126 call!13726)))

(declare-fun b!127330 () Bool)

(assert (=> b!127330 (= e!83130 call!13725)))

(declare-fun bm!13724 () Bool)

(declare-fun c!23345 () Bool)

(assert (=> bm!13724 (= call!13726 ($colon$colon!88 e!83128 (ite c!23345 (h!2317 (toList!858 lt!65120)) (tuple2!2569 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(declare-fun c!23347 () Bool)

(assert (=> bm!13724 (= c!23347 c!23345)))

(declare-fun b!127331 () Bool)

(declare-fun res!61555 () Bool)

(declare-fun e!83127 () Bool)

(assert (=> b!127331 (=> (not res!61555) (not e!83127))))

(declare-fun lt!65912 () List!1719)

(assert (=> b!127331 (= res!61555 (containsKey!170 lt!65912 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127332 () Bool)

(assert (=> b!127332 (= e!83127 (contains!878 lt!65912 (tuple2!2569 (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!127333 () Bool)

(assert (=> b!127333 (= e!83129 call!13727)))

(declare-fun b!127334 () Bool)

(declare-fun c!23344 () Bool)

(assert (=> b!127334 (= e!83128 (ite c!23346 (t!6078 (toList!858 lt!65120)) (ite c!23344 (Cons!1715 (h!2317 (toList!858 lt!65120)) (t!6078 (toList!858 lt!65120))) Nil!1716)))))

(declare-fun b!127335 () Bool)

(assert (=> b!127335 (= c!23344 (and ((_ is Cons!1715) (toList!858 lt!65120)) (bvsgt (_1!1294 (h!2317 (toList!858 lt!65120))) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> b!127335 (= e!83130 e!83129)))

(declare-fun d!38507 () Bool)

(assert (=> d!38507 e!83127))

(declare-fun res!61554 () Bool)

(assert (=> d!38507 (=> (not res!61554) (not e!83127))))

(assert (=> d!38507 (= res!61554 (isStrictlySorted!312 lt!65912))))

(assert (=> d!38507 (= lt!65912 e!83126)))

(assert (=> d!38507 (= c!23345 (and ((_ is Cons!1715) (toList!858 lt!65120)) (bvslt (_1!1294 (h!2317 (toList!858 lt!65120))) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(assert (=> d!38507 (isStrictlySorted!312 (toList!858 lt!65120))))

(assert (=> d!38507 (= (insertStrictlySorted!85 (toList!858 lt!65120) (_1!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))) (_2!1294 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65912)))

(declare-fun bm!13723 () Bool)

(assert (=> bm!13723 (= call!13725 call!13726)))

(assert (= (and d!38507 c!23345) b!127329))

(assert (= (and d!38507 (not c!23345)) b!127326))

(assert (= (and b!127326 c!23346) b!127330))

(assert (= (and b!127326 (not c!23346)) b!127335))

(assert (= (and b!127335 c!23344) b!127333))

(assert (= (and b!127335 (not c!23344)) b!127328))

(assert (= (or b!127333 b!127328) bm!13722))

(assert (= (or b!127330 bm!13722) bm!13723))

(assert (= (or b!127329 bm!13723) bm!13724))

(assert (= (and bm!13724 c!23347) b!127327))

(assert (= (and bm!13724 (not c!23347)) b!127334))

(assert (= (and d!38507 res!61554) b!127331))

(assert (= (and b!127331 res!61555) b!127332))

(declare-fun m!149051 () Bool)

(assert (=> bm!13724 m!149051))

(declare-fun m!149053 () Bool)

(assert (=> d!38507 m!149053))

(declare-fun m!149055 () Bool)

(assert (=> d!38507 m!149055))

(declare-fun m!149057 () Bool)

(assert (=> b!127332 m!149057))

(declare-fun m!149059 () Bool)

(assert (=> b!127327 m!149059))

(declare-fun m!149061 () Bool)

(assert (=> b!127331 m!149061))

(assert (=> d!38019 d!38507))

(declare-fun d!38509 () Bool)

(declare-fun e!83132 () Bool)

(assert (=> d!38509 e!83132))

(declare-fun res!61556 () Bool)

(assert (=> d!38509 (=> res!61556 e!83132)))

(declare-fun lt!65914 () Bool)

(assert (=> d!38509 (= res!61556 (not lt!65914))))

(declare-fun lt!65913 () Bool)

(assert (=> d!38509 (= lt!65914 lt!65913)))

(declare-fun lt!65915 () Unit!3936)

(declare-fun e!83131 () Unit!3936)

(assert (=> d!38509 (= lt!65915 e!83131)))

(declare-fun c!23348 () Bool)

(assert (=> d!38509 (= c!23348 lt!65913)))

(assert (=> d!38509 (= lt!65913 (containsKey!170 (toList!858 lt!65485) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38509 (= (contains!877 lt!65485 #b0000000000000000000000000000000000000000000000000000000000000000) lt!65914)))

(declare-fun b!127336 () Bool)

(declare-fun lt!65916 () Unit!3936)

(assert (=> b!127336 (= e!83131 lt!65916)))

(assert (=> b!127336 (= lt!65916 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65485) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!127336 (isDefined!120 (getValueByKey!166 (toList!858 lt!65485) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127337 () Bool)

(declare-fun Unit!3984 () Unit!3936)

(assert (=> b!127337 (= e!83131 Unit!3984)))

(declare-fun b!127338 () Bool)

(assert (=> b!127338 (= e!83132 (isDefined!120 (getValueByKey!166 (toList!858 lt!65485) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38509 c!23348) b!127336))

(assert (= (and d!38509 (not c!23348)) b!127337))

(assert (= (and d!38509 (not res!61556)) b!127338))

(declare-fun m!149063 () Bool)

(assert (=> d!38509 m!149063))

(declare-fun m!149065 () Bool)

(assert (=> b!127336 m!149065))

(assert (=> b!127336 m!149023))

(assert (=> b!127336 m!149023))

(declare-fun m!149067 () Bool)

(assert (=> b!127336 m!149067))

(assert (=> b!127338 m!149023))

(assert (=> b!127338 m!149023))

(assert (=> b!127338 m!149067))

(assert (=> bm!13651 d!38509))

(declare-fun d!38511 () Bool)

(declare-fun lt!65917 () Bool)

(assert (=> d!38511 (= lt!65917 (select (content!124 (toList!858 lt!65248)) (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun e!83134 () Bool)

(assert (=> d!38511 (= lt!65917 e!83134)))

(declare-fun res!61557 () Bool)

(assert (=> d!38511 (=> (not res!61557) (not e!83134))))

(assert (=> d!38511 (= res!61557 ((_ is Cons!1715) (toList!858 lt!65248)))))

(assert (=> d!38511 (= (contains!878 (toList!858 lt!65248) (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65917)))

(declare-fun b!127339 () Bool)

(declare-fun e!83133 () Bool)

(assert (=> b!127339 (= e!83134 e!83133)))

(declare-fun res!61558 () Bool)

(assert (=> b!127339 (=> res!61558 e!83133)))

(assert (=> b!127339 (= res!61558 (= (h!2317 (toList!858 lt!65248)) (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127340 () Bool)

(assert (=> b!127340 (= e!83133 (contains!878 (t!6078 (toList!858 lt!65248)) (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(assert (= (and d!38511 res!61557) b!127339))

(assert (= (and b!127339 (not res!61558)) b!127340))

(declare-fun m!149069 () Bool)

(assert (=> d!38511 m!149069))

(declare-fun m!149071 () Bool)

(assert (=> d!38511 m!149071))

(declare-fun m!149073 () Bool)

(assert (=> b!127340 m!149073))

(assert (=> b!126409 d!38511))

(declare-fun d!38513 () Bool)

(declare-fun e!83135 () Bool)

(assert (=> d!38513 e!83135))

(declare-fun res!61562 () Bool)

(assert (=> d!38513 (=> (not res!61562) (not e!83135))))

(declare-fun lt!65923 () ListLongMap!1685)

(assert (=> d!38513 (= res!61562 (not (contains!877 lt!65923 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!83139 () ListLongMap!1685)

(assert (=> d!38513 (= lt!65923 e!83139)))

(declare-fun c!23352 () Bool)

(assert (=> d!38513 (= c!23352 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38513 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38513 (= (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65923)))

(declare-fun b!127341 () Bool)

(declare-fun e!83140 () ListLongMap!1685)

(declare-fun call!13728 () ListLongMap!1685)

(assert (=> b!127341 (= e!83140 call!13728)))

(declare-fun b!127342 () Bool)

(assert (=> b!127342 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(assert (=> b!127342 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (_values!2766 newMap!16))))))

(declare-fun e!83141 () Bool)

(assert (=> b!127342 (= e!83141 (= (apply!111 lt!65923 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!127343 () Bool)

(declare-fun e!83136 () Bool)

(declare-fun e!83137 () Bool)

(assert (=> b!127343 (= e!83136 e!83137)))

(declare-fun c!23351 () Bool)

(assert (=> b!127343 (= c!23351 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127344 () Bool)

(assert (=> b!127344 (= e!83137 (= lt!65923 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2783 newMap!16))))))

(declare-fun b!127345 () Bool)

(declare-fun e!83138 () Bool)

(assert (=> b!127345 (= e!83138 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!127345 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!127346 () Bool)

(assert (=> b!127346 (= e!83136 e!83141)))

(assert (=> b!127346 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun res!61560 () Bool)

(assert (=> b!127346 (= res!61560 (contains!877 lt!65923 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!127346 (=> (not res!61560) (not e!83141))))

(declare-fun b!127347 () Bool)

(declare-fun res!61561 () Bool)

(assert (=> b!127347 (=> (not res!61561) (not e!83135))))

(assert (=> b!127347 (= res!61561 (not (contains!877 lt!65923 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!127348 () Bool)

(assert (=> b!127348 (= e!83139 (ListLongMap!1686 Nil!1716))))

(declare-fun b!127349 () Bool)

(assert (=> b!127349 (= e!83135 e!83136)))

(declare-fun c!23349 () Bool)

(assert (=> b!127349 (= c!23349 e!83138)))

(declare-fun res!61559 () Bool)

(assert (=> b!127349 (=> (not res!61559) (not e!83138))))

(assert (=> b!127349 (= res!61559 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127350 () Bool)

(assert (=> b!127350 (= e!83137 (isEmpty!401 lt!65923))))

(declare-fun b!127351 () Bool)

(assert (=> b!127351 (= e!83139 e!83140)))

(declare-fun c!23350 () Bool)

(assert (=> b!127351 (= c!23350 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!127352 () Bool)

(declare-fun lt!65924 () Unit!3936)

(declare-fun lt!65920 () Unit!3936)

(assert (=> b!127352 (= lt!65924 lt!65920)))

(declare-fun lt!65918 () V!3435)

(declare-fun lt!65921 () (_ BitVec 64))

(declare-fun lt!65922 () (_ BitVec 64))

(declare-fun lt!65919 () ListLongMap!1685)

(assert (=> b!127352 (not (contains!877 (+!165 lt!65919 (tuple2!2569 lt!65921 lt!65918)) lt!65922))))

(assert (=> b!127352 (= lt!65920 (addStillNotContains!58 lt!65919 lt!65921 lt!65918 lt!65922))))

(assert (=> b!127352 (= lt!65922 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!127352 (= lt!65918 (get!1452 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!127352 (= lt!65921 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!127352 (= lt!65919 call!13728)))

(assert (=> b!127352 (= e!83140 (+!165 call!13728 (tuple2!2569 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) (get!1452 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!13725 () Bool)

(assert (=> bm!13725 (= call!13728 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (ite c!23078 (ite c!23066 lt!65187 lt!65196) (extraKeys!2564 newMap!16)) (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2783 newMap!16)))))

(assert (= (and d!38513 c!23352) b!127348))

(assert (= (and d!38513 (not c!23352)) b!127351))

(assert (= (and b!127351 c!23350) b!127352))

(assert (= (and b!127351 (not c!23350)) b!127341))

(assert (= (or b!127352 b!127341) bm!13725))

(assert (= (and d!38513 res!61562) b!127347))

(assert (= (and b!127347 res!61561) b!127349))

(assert (= (and b!127349 res!61559) b!127345))

(assert (= (and b!127349 c!23349) b!127346))

(assert (= (and b!127349 (not c!23349)) b!127343))

(assert (= (and b!127346 res!61560) b!127342))

(assert (= (and b!127343 c!23351) b!127344))

(assert (= (and b!127343 (not c!23351)) b!127350))

(declare-fun b_lambda!5635 () Bool)

(assert (=> (not b_lambda!5635) (not b!127342)))

(assert (=> b!127342 t!6085))

(declare-fun b_and!7861 () Bool)

(assert (= b_and!7857 (and (=> t!6085 result!3859) b_and!7861)))

(assert (=> b!127342 t!6087))

(declare-fun b_and!7863 () Bool)

(assert (= b_and!7859 (and (=> t!6087 result!3861) b_and!7863)))

(declare-fun b_lambda!5637 () Bool)

(assert (=> (not b_lambda!5637) (not b!127352)))

(assert (=> b!127352 t!6085))

(declare-fun b_and!7865 () Bool)

(assert (= b_and!7861 (and (=> t!6085 result!3859) b_and!7865)))

(assert (=> b!127352 t!6087))

(declare-fun b_and!7867 () Bool)

(assert (= b_and!7863 (and (=> t!6087 result!3861) b_and!7867)))

(assert (=> b!127345 m!147467))

(assert (=> b!127345 m!147467))

(assert (=> b!127345 m!147495))

(declare-fun m!149075 () Bool)

(assert (=> b!127344 m!149075))

(assert (=> b!127342 m!147581))

(assert (=> b!127342 m!147579))

(assert (=> b!127342 m!147579))

(assert (=> b!127342 m!147581))

(assert (=> b!127342 m!147583))

(assert (=> b!127342 m!147467))

(declare-fun m!149077 () Bool)

(assert (=> b!127342 m!149077))

(assert (=> b!127342 m!147467))

(assert (=> b!127352 m!147467))

(assert (=> b!127352 m!147581))

(assert (=> b!127352 m!147579))

(declare-fun m!149079 () Bool)

(assert (=> b!127352 m!149079))

(assert (=> b!127352 m!147579))

(assert (=> b!127352 m!147581))

(assert (=> b!127352 m!147583))

(declare-fun m!149081 () Bool)

(assert (=> b!127352 m!149081))

(declare-fun m!149083 () Bool)

(assert (=> b!127352 m!149083))

(assert (=> b!127352 m!149079))

(declare-fun m!149085 () Bool)

(assert (=> b!127352 m!149085))

(declare-fun m!149087 () Bool)

(assert (=> d!38513 m!149087))

(assert (=> d!38513 m!147475))

(declare-fun m!149089 () Bool)

(assert (=> b!127350 m!149089))

(assert (=> b!127346 m!147467))

(assert (=> b!127346 m!147467))

(declare-fun m!149091 () Bool)

(assert (=> b!127346 m!149091))

(declare-fun m!149093 () Bool)

(assert (=> b!127347 m!149093))

(assert (=> b!127351 m!147467))

(assert (=> b!127351 m!147467))

(assert (=> b!127351 m!147495))

(assert (=> bm!13725 m!149075))

(assert (=> b!126529 d!38513))

(declare-fun d!38515 () Bool)

(assert (=> d!38515 (= (apply!111 lt!65331 lt!65321) (get!1455 (getValueByKey!166 (toList!858 lt!65331) lt!65321)))))

(declare-fun bs!5277 () Bool)

(assert (= bs!5277 d!38515))

(declare-fun m!149095 () Bool)

(assert (=> bs!5277 m!149095))

(assert (=> bs!5277 m!149095))

(declare-fun m!149097 () Bool)

(assert (=> bs!5277 m!149097))

(assert (=> b!126529 d!38515))

(declare-fun d!38517 () Bool)

(assert (=> d!38517 (= (apply!111 (+!165 lt!65332 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) lt!65325) (apply!111 lt!65332 lt!65325))))

(declare-fun lt!65925 () Unit!3936)

(assert (=> d!38517 (= lt!65925 (choose!768 lt!65332 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) lt!65325))))

(declare-fun e!83142 () Bool)

(assert (=> d!38517 e!83142))

(declare-fun res!61563 () Bool)

(assert (=> d!38517 (=> (not res!61563) (not e!83142))))

(assert (=> d!38517 (= res!61563 (contains!877 lt!65332 lt!65325))))

(assert (=> d!38517 (= (addApplyDifferent!87 lt!65332 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) lt!65325) lt!65925)))

(declare-fun b!127353 () Bool)

(assert (=> b!127353 (= e!83142 (not (= lt!65325 lt!65337)))))

(assert (= (and d!38517 res!61563) b!127353))

(declare-fun m!149099 () Bool)

(assert (=> d!38517 m!149099))

(assert (=> d!38517 m!147559))

(declare-fun m!149101 () Bool)

(assert (=> d!38517 m!149101))

(assert (=> d!38517 m!147561))

(assert (=> d!38517 m!147573))

(assert (=> d!38517 m!147561))

(assert (=> b!126529 d!38517))

(declare-fun d!38519 () Bool)

(assert (=> d!38519 (= (apply!111 lt!65334 lt!65329) (get!1455 (getValueByKey!166 (toList!858 lt!65334) lt!65329)))))

(declare-fun bs!5278 () Bool)

(assert (= bs!5278 d!38519))

(declare-fun m!149103 () Bool)

(assert (=> bs!5278 m!149103))

(assert (=> bs!5278 m!149103))

(declare-fun m!149105 () Bool)

(assert (=> bs!5278 m!149105))

(assert (=> b!126529 d!38519))

(declare-fun d!38521 () Bool)

(assert (=> d!38521 (= (apply!111 lt!65332 lt!65325) (get!1455 (getValueByKey!166 (toList!858 lt!65332) lt!65325)))))

(declare-fun bs!5279 () Bool)

(assert (= bs!5279 d!38521))

(declare-fun m!149107 () Bool)

(assert (=> bs!5279 m!149107))

(assert (=> bs!5279 m!149107))

(declare-fun m!149109 () Bool)

(assert (=> bs!5279 m!149109))

(assert (=> b!126529 d!38521))

(declare-fun d!38523 () Bool)

(assert (=> d!38523 (= (apply!111 (+!165 lt!65334 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) lt!65329) (apply!111 lt!65334 lt!65329))))

(declare-fun lt!65926 () Unit!3936)

(assert (=> d!38523 (= lt!65926 (choose!768 lt!65334 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) lt!65329))))

(declare-fun e!83143 () Bool)

(assert (=> d!38523 e!83143))

(declare-fun res!61564 () Bool)

(assert (=> d!38523 (=> (not res!61564) (not e!83143))))

(assert (=> d!38523 (= res!61564 (contains!877 lt!65334 lt!65329))))

(assert (=> d!38523 (= (addApplyDifferent!87 lt!65334 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)) lt!65329) lt!65926)))

(declare-fun b!127354 () Bool)

(assert (=> b!127354 (= e!83143 (not (= lt!65329 lt!65336)))))

(assert (= (and d!38523 res!61564) b!127354))

(declare-fun m!149111 () Bool)

(assert (=> d!38523 m!149111))

(assert (=> d!38523 m!147551))

(declare-fun m!149113 () Bool)

(assert (=> d!38523 m!149113))

(assert (=> d!38523 m!147555))

(assert (=> d!38523 m!147569))

(assert (=> d!38523 m!147555))

(assert (=> b!126529 d!38523))

(declare-fun d!38525 () Bool)

(declare-fun e!83144 () Bool)

(assert (=> d!38525 e!83144))

(declare-fun res!61565 () Bool)

(assert (=> d!38525 (=> (not res!61565) (not e!83144))))

(declare-fun lt!65928 () ListLongMap!1685)

(assert (=> d!38525 (= res!61565 (contains!877 lt!65928 (_1!1294 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(declare-fun lt!65927 () List!1719)

(assert (=> d!38525 (= lt!65928 (ListLongMap!1686 lt!65927))))

(declare-fun lt!65930 () Unit!3936)

(declare-fun lt!65929 () Unit!3936)

(assert (=> d!38525 (= lt!65930 lt!65929)))

(assert (=> d!38525 (= (getValueByKey!166 lt!65927 (_1!1294 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(assert (=> d!38525 (= lt!65929 (lemmaContainsTupThenGetReturnValue!83 lt!65927 (_1!1294 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) (_2!1294 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(assert (=> d!38525 (= lt!65927 (insertStrictlySorted!85 (toList!858 lt!65332) (_1!1294 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) (_2!1294 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(assert (=> d!38525 (= (+!165 lt!65332 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) lt!65928)))

(declare-fun b!127355 () Bool)

(declare-fun res!61566 () Bool)

(assert (=> b!127355 (=> (not res!61566) (not e!83144))))

(assert (=> b!127355 (= res!61566 (= (getValueByKey!166 (toList!858 lt!65928) (_1!1294 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))))))

(declare-fun b!127356 () Bool)

(assert (=> b!127356 (= e!83144 (contains!878 (toList!858 lt!65928) (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))))

(assert (= (and d!38525 res!61565) b!127355))

(assert (= (and b!127355 res!61566) b!127356))

(declare-fun m!149115 () Bool)

(assert (=> d!38525 m!149115))

(declare-fun m!149117 () Bool)

(assert (=> d!38525 m!149117))

(declare-fun m!149119 () Bool)

(assert (=> d!38525 m!149119))

(declare-fun m!149121 () Bool)

(assert (=> d!38525 m!149121))

(declare-fun m!149123 () Bool)

(assert (=> b!127355 m!149123))

(declare-fun m!149125 () Bool)

(assert (=> b!127356 m!149125))

(assert (=> b!126529 d!38525))

(declare-fun d!38527 () Bool)

(declare-fun e!83146 () Bool)

(assert (=> d!38527 e!83146))

(declare-fun res!61567 () Bool)

(assert (=> d!38527 (=> res!61567 e!83146)))

(declare-fun lt!65932 () Bool)

(assert (=> d!38527 (= res!61567 (not lt!65932))))

(declare-fun lt!65931 () Bool)

(assert (=> d!38527 (= lt!65932 lt!65931)))

(declare-fun lt!65933 () Unit!3936)

(declare-fun e!83145 () Unit!3936)

(assert (=> d!38527 (= lt!65933 e!83145)))

(declare-fun c!23353 () Bool)

(assert (=> d!38527 (= c!23353 lt!65931)))

(assert (=> d!38527 (= lt!65931 (containsKey!170 (toList!858 (+!165 lt!65339 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))) lt!65319))))

(assert (=> d!38527 (= (contains!877 (+!165 lt!65339 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) lt!65319) lt!65932)))

(declare-fun b!127357 () Bool)

(declare-fun lt!65934 () Unit!3936)

(assert (=> b!127357 (= e!83145 lt!65934)))

(assert (=> b!127357 (= lt!65934 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 (+!165 lt!65339 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))) lt!65319))))

(assert (=> b!127357 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65339 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))) lt!65319))))

(declare-fun b!127358 () Bool)

(declare-fun Unit!3985 () Unit!3936)

(assert (=> b!127358 (= e!83145 Unit!3985)))

(declare-fun b!127359 () Bool)

(assert (=> b!127359 (= e!83146 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65339 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))) lt!65319)))))

(assert (= (and d!38527 c!23353) b!127357))

(assert (= (and d!38527 (not c!23353)) b!127358))

(assert (= (and d!38527 (not res!61567)) b!127359))

(declare-fun m!149127 () Bool)

(assert (=> d!38527 m!149127))

(declare-fun m!149129 () Bool)

(assert (=> b!127357 m!149129))

(declare-fun m!149131 () Bool)

(assert (=> b!127357 m!149131))

(assert (=> b!127357 m!149131))

(declare-fun m!149133 () Bool)

(assert (=> b!127357 m!149133))

(assert (=> b!127359 m!149131))

(assert (=> b!127359 m!149131))

(assert (=> b!127359 m!149133))

(assert (=> b!126529 d!38527))

(declare-fun d!38529 () Bool)

(assert (=> d!38529 (= (apply!111 (+!165 lt!65332 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) lt!65325) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65332 (tuple2!2569 lt!65337 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))) lt!65325)))))

(declare-fun bs!5280 () Bool)

(assert (= bs!5280 d!38529))

(declare-fun m!149135 () Bool)

(assert (=> bs!5280 m!149135))

(assert (=> bs!5280 m!149135))

(declare-fun m!149137 () Bool)

(assert (=> bs!5280 m!149137))

(assert (=> b!126529 d!38529))

(declare-fun d!38531 () Bool)

(declare-fun e!83147 () Bool)

(assert (=> d!38531 e!83147))

(declare-fun res!61568 () Bool)

(assert (=> d!38531 (=> (not res!61568) (not e!83147))))

(declare-fun lt!65936 () ListLongMap!1685)

(assert (=> d!38531 (= res!61568 (contains!877 lt!65936 (_1!1294 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))))))

(declare-fun lt!65935 () List!1719)

(assert (=> d!38531 (= lt!65936 (ListLongMap!1686 lt!65935))))

(declare-fun lt!65938 () Unit!3936)

(declare-fun lt!65937 () Unit!3936)

(assert (=> d!38531 (= lt!65938 lt!65937)))

(assert (=> d!38531 (= (getValueByKey!166 lt!65935 (_1!1294 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))) (Some!171 (_2!1294 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))))))

(assert (=> d!38531 (= lt!65937 (lemmaContainsTupThenGetReturnValue!83 lt!65935 (_1!1294 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) (_2!1294 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))))))

(assert (=> d!38531 (= lt!65935 (insertStrictlySorted!85 (toList!858 lt!65339) (_1!1294 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) (_2!1294 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))))))

(assert (=> d!38531 (= (+!165 lt!65339 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) lt!65936)))

(declare-fun b!127360 () Bool)

(declare-fun res!61569 () Bool)

(assert (=> b!127360 (=> (not res!61569) (not e!83147))))

(assert (=> b!127360 (= res!61569 (= (getValueByKey!166 (toList!858 lt!65936) (_1!1294 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))) (Some!171 (_2!1294 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))))))))

(declare-fun b!127361 () Bool)

(assert (=> b!127361 (= e!83147 (contains!878 (toList!858 lt!65936) (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))))))

(assert (= (and d!38531 res!61568) b!127360))

(assert (= (and b!127360 res!61569) b!127361))

(declare-fun m!149139 () Bool)

(assert (=> d!38531 m!149139))

(declare-fun m!149141 () Bool)

(assert (=> d!38531 m!149141))

(declare-fun m!149143 () Bool)

(assert (=> d!38531 m!149143))

(declare-fun m!149145 () Bool)

(assert (=> d!38531 m!149145))

(declare-fun m!149147 () Bool)

(assert (=> b!127360 m!149147))

(declare-fun m!149149 () Bool)

(assert (=> b!127361 m!149149))

(assert (=> b!126529 d!38531))

(declare-fun d!38533 () Bool)

(declare-fun e!83148 () Bool)

(assert (=> d!38533 e!83148))

(declare-fun res!61570 () Bool)

(assert (=> d!38533 (=> (not res!61570) (not e!83148))))

(declare-fun lt!65940 () ListLongMap!1685)

(assert (=> d!38533 (= res!61570 (contains!877 lt!65940 (_1!1294 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(declare-fun lt!65939 () List!1719)

(assert (=> d!38533 (= lt!65940 (ListLongMap!1686 lt!65939))))

(declare-fun lt!65942 () Unit!3936)

(declare-fun lt!65941 () Unit!3936)

(assert (=> d!38533 (= lt!65942 lt!65941)))

(assert (=> d!38533 (= (getValueByKey!166 lt!65939 (_1!1294 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(assert (=> d!38533 (= lt!65941 (lemmaContainsTupThenGetReturnValue!83 lt!65939 (_1!1294 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) (_2!1294 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(assert (=> d!38533 (= lt!65939 (insertStrictlySorted!85 (toList!858 lt!65334) (_1!1294 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) (_2!1294 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))))))

(assert (=> d!38533 (= (+!165 lt!65334 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) lt!65940)))

(declare-fun b!127362 () Bool)

(declare-fun res!61571 () Bool)

(assert (=> b!127362 (=> (not res!61571) (not e!83148))))

(assert (=> b!127362 (= res!61571 (= (getValueByKey!166 (toList!858 lt!65940) (_1!1294 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))))))

(declare-fun b!127363 () Bool)

(assert (=> b!127363 (= e!83148 (contains!878 (toList!858 lt!65940) (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))))))

(assert (= (and d!38533 res!61570) b!127362))

(assert (= (and b!127362 res!61571) b!127363))

(declare-fun m!149151 () Bool)

(assert (=> d!38533 m!149151))

(declare-fun m!149153 () Bool)

(assert (=> d!38533 m!149153))

(declare-fun m!149155 () Bool)

(assert (=> d!38533 m!149155))

(declare-fun m!149157 () Bool)

(assert (=> d!38533 m!149157))

(declare-fun m!149159 () Bool)

(assert (=> b!127362 m!149159))

(declare-fun m!149161 () Bool)

(assert (=> b!127363 m!149161))

(assert (=> b!126529 d!38533))

(declare-fun d!38535 () Bool)

(assert (=> d!38535 (= (apply!111 (+!165 lt!65331 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) lt!65321) (apply!111 lt!65331 lt!65321))))

(declare-fun lt!65943 () Unit!3936)

(assert (=> d!38535 (= lt!65943 (choose!768 lt!65331 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) lt!65321))))

(declare-fun e!83149 () Bool)

(assert (=> d!38535 e!83149))

(declare-fun res!61572 () Bool)

(assert (=> d!38535 (=> (not res!61572) (not e!83149))))

(assert (=> d!38535 (= res!61572 (contains!877 lt!65331 lt!65321))))

(assert (=> d!38535 (= (addApplyDifferent!87 lt!65331 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) lt!65321) lt!65943)))

(declare-fun b!127364 () Bool)

(assert (=> b!127364 (= e!83149 (not (= lt!65321 lt!65326)))))

(assert (= (and d!38535 res!61572) b!127364))

(declare-fun m!149163 () Bool)

(assert (=> d!38535 m!149163))

(assert (=> d!38535 m!147549))

(declare-fun m!149165 () Bool)

(assert (=> d!38535 m!149165))

(assert (=> d!38535 m!147557))

(assert (=> d!38535 m!147567))

(assert (=> d!38535 m!147557))

(assert (=> b!126529 d!38535))

(declare-fun d!38537 () Bool)

(assert (=> d!38537 (= (apply!111 (+!165 lt!65334 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16)))) lt!65329) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65334 (tuple2!2569 lt!65336 (ite c!23078 (ite c!23066 (minValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2646 newMap!16))))) lt!65329)))))

(declare-fun bs!5281 () Bool)

(assert (= bs!5281 d!38537))

(declare-fun m!149167 () Bool)

(assert (=> bs!5281 m!149167))

(assert (=> bs!5281 m!149167))

(declare-fun m!149169 () Bool)

(assert (=> bs!5281 m!149169))

(assert (=> b!126529 d!38537))

(declare-fun d!38539 () Bool)

(declare-fun e!83150 () Bool)

(assert (=> d!38539 e!83150))

(declare-fun res!61573 () Bool)

(assert (=> d!38539 (=> (not res!61573) (not e!83150))))

(declare-fun lt!65945 () ListLongMap!1685)

(assert (=> d!38539 (= res!61573 (contains!877 lt!65945 (_1!1294 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))))))

(declare-fun lt!65944 () List!1719)

(assert (=> d!38539 (= lt!65945 (ListLongMap!1686 lt!65944))))

(declare-fun lt!65947 () Unit!3936)

(declare-fun lt!65946 () Unit!3936)

(assert (=> d!38539 (= lt!65947 lt!65946)))

(assert (=> d!38539 (= (getValueByKey!166 lt!65944 (_1!1294 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))) (Some!171 (_2!1294 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))))))

(assert (=> d!38539 (= lt!65946 (lemmaContainsTupThenGetReturnValue!83 lt!65944 (_1!1294 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) (_2!1294 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))))))

(assert (=> d!38539 (= lt!65944 (insertStrictlySorted!85 (toList!858 lt!65331) (_1!1294 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) (_2!1294 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))))))

(assert (=> d!38539 (= (+!165 lt!65331 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) lt!65945)))

(declare-fun b!127365 () Bool)

(declare-fun res!61574 () Bool)

(assert (=> b!127365 (=> (not res!61574) (not e!83150))))

(assert (=> b!127365 (= res!61574 (= (getValueByKey!166 (toList!858 lt!65945) (_1!1294 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))) (Some!171 (_2!1294 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))))))))

(declare-fun b!127366 () Bool)

(assert (=> b!127366 (= e!83150 (contains!878 (toList!858 lt!65945) (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))))))

(assert (= (and d!38539 res!61573) b!127365))

(assert (= (and b!127365 res!61574) b!127366))

(declare-fun m!149171 () Bool)

(assert (=> d!38539 m!149171))

(declare-fun m!149173 () Bool)

(assert (=> d!38539 m!149173))

(declare-fun m!149175 () Bool)

(assert (=> d!38539 m!149175))

(declare-fun m!149177 () Bool)

(assert (=> d!38539 m!149177))

(declare-fun m!149179 () Bool)

(assert (=> b!127365 m!149179))

(declare-fun m!149181 () Bool)

(assert (=> b!127366 m!149181))

(assert (=> b!126529 d!38539))

(declare-fun d!38541 () Bool)

(assert (=> d!38541 (contains!877 (+!165 lt!65339 (tuple2!2569 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) lt!65319)))

(declare-fun lt!65948 () Unit!3936)

(assert (=> d!38541 (= lt!65948 (choose!769 lt!65339 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) lt!65319))))

(assert (=> d!38541 (contains!877 lt!65339 lt!65319)))

(assert (=> d!38541 (= (addStillContains!87 lt!65339 lt!65328 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)) lt!65319) lt!65948)))

(declare-fun bs!5282 () Bool)

(assert (= bs!5282 d!38541))

(assert (=> bs!5282 m!147575))

(assert (=> bs!5282 m!147575))

(assert (=> bs!5282 m!147577))

(declare-fun m!149183 () Bool)

(assert (=> bs!5282 m!149183))

(declare-fun m!149185 () Bool)

(assert (=> bs!5282 m!149185))

(assert (=> b!126529 d!38541))

(declare-fun d!38543 () Bool)

(assert (=> d!38543 (= (apply!111 (+!165 lt!65331 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16)))) lt!65321) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65331 (tuple2!2569 lt!65326 (ite (and c!23078 c!23066) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2646 newMap!16))))) lt!65321)))))

(declare-fun bs!5283 () Bool)

(assert (= bs!5283 d!38543))

(declare-fun m!149187 () Bool)

(assert (=> bs!5283 m!149187))

(assert (=> bs!5283 m!149187))

(declare-fun m!149189 () Bool)

(assert (=> bs!5283 m!149189))

(assert (=> b!126529 d!38543))

(declare-fun d!38545 () Bool)

(declare-fun res!61575 () Bool)

(declare-fun e!83151 () Bool)

(assert (=> d!38545 (=> res!61575 e!83151)))

(assert (=> d!38545 (= res!61575 (and ((_ is Cons!1715) (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))) (= (_1!1294 (h!2317 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))) lt!65100)))))

(assert (=> d!38545 (= (containsKey!170 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65100) e!83151)))

(declare-fun b!127367 () Bool)

(declare-fun e!83152 () Bool)

(assert (=> b!127367 (= e!83151 e!83152)))

(declare-fun res!61576 () Bool)

(assert (=> b!127367 (=> (not res!61576) (not e!83152))))

(assert (=> b!127367 (= res!61576 (and (or (not ((_ is Cons!1715) (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))) (bvsle (_1!1294 (h!2317 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))) lt!65100)) ((_ is Cons!1715) (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))) (bvslt (_1!1294 (h!2317 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))) lt!65100)))))

(declare-fun b!127368 () Bool)

(assert (=> b!127368 (= e!83152 (containsKey!170 (t!6078 (toList!858 (+!165 lt!65120 (tuple2!2569 lt!65109 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))) lt!65100))))

(assert (= (and d!38545 (not res!61575)) b!127367))

(assert (= (and b!127367 res!61576) b!127368))

(declare-fun m!149191 () Bool)

(assert (=> b!127368 m!149191))

(assert (=> d!38017 d!38545))

(declare-fun d!38547 () Bool)

(declare-fun res!61577 () Bool)

(declare-fun e!83153 () Bool)

(assert (=> d!38547 (=> (not res!61577) (not e!83153))))

(assert (=> d!38547 (= res!61577 (validMask!0 (mask!7039 (_2!1295 lt!65202))))))

(assert (=> d!38547 (= (simpleValid!86 (_2!1295 lt!65202)) e!83153)))

(declare-fun b!127369 () Bool)

(declare-fun res!61578 () Bool)

(assert (=> b!127369 (=> (not res!61578) (not e!83153))))

(assert (=> b!127369 (= res!61578 (and (= (size!2489 (_values!2766 (_2!1295 lt!65202))) (bvadd (mask!7039 (_2!1295 lt!65202)) #b00000000000000000000000000000001)) (= (size!2488 (_keys!4516 (_2!1295 lt!65202))) (size!2489 (_values!2766 (_2!1295 lt!65202)))) (bvsge (_size!580 (_2!1295 lt!65202)) #b00000000000000000000000000000000) (bvsle (_size!580 (_2!1295 lt!65202)) (bvadd (mask!7039 (_2!1295 lt!65202)) #b00000000000000000000000000000001))))))

(declare-fun b!127371 () Bool)

(declare-fun res!61580 () Bool)

(assert (=> b!127371 (=> (not res!61580) (not e!83153))))

(assert (=> b!127371 (= res!61580 (= (size!2492 (_2!1295 lt!65202)) (bvadd (_size!580 (_2!1295 lt!65202)) (bvsdiv (bvadd (extraKeys!2564 (_2!1295 lt!65202)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!127372 () Bool)

(assert (=> b!127372 (= e!83153 (and (bvsge (extraKeys!2564 (_2!1295 lt!65202)) #b00000000000000000000000000000000) (bvsle (extraKeys!2564 (_2!1295 lt!65202)) #b00000000000000000000000000000011) (bvsge (_vacant!580 (_2!1295 lt!65202)) #b00000000000000000000000000000000)))))

(declare-fun b!127370 () Bool)

(declare-fun res!61579 () Bool)

(assert (=> b!127370 (=> (not res!61579) (not e!83153))))

(assert (=> b!127370 (= res!61579 (bvsge (size!2492 (_2!1295 lt!65202)) (_size!580 (_2!1295 lt!65202))))))

(assert (= (and d!38547 res!61577) b!127369))

(assert (= (and b!127369 res!61578) b!127370))

(assert (= (and b!127370 res!61579) b!127371))

(assert (= (and b!127371 res!61580) b!127372))

(declare-fun m!149193 () Bool)

(assert (=> d!38547 m!149193))

(declare-fun m!149195 () Bool)

(assert (=> b!127371 m!149195))

(assert (=> b!127370 m!149195))

(assert (=> d!38005 d!38547))

(declare-fun b!127376 () Bool)

(declare-fun e!83155 () Option!172)

(assert (=> b!127376 (= e!83155 None!170)))

(declare-fun c!23354 () Bool)

(declare-fun d!38549 () Bool)

(assert (=> d!38549 (= c!23354 (and ((_ is Cons!1715) (toList!858 lt!65276)) (= (_1!1294 (h!2317 (toList!858 lt!65276))) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!83154 () Option!172)

(assert (=> d!38549 (= (getValueByKey!166 (toList!858 lt!65276) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) e!83154)))

(declare-fun b!127375 () Bool)

(assert (=> b!127375 (= e!83155 (getValueByKey!166 (t!6078 (toList!858 lt!65276)) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127373 () Bool)

(assert (=> b!127373 (= e!83154 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65276)))))))

(declare-fun b!127374 () Bool)

(assert (=> b!127374 (= e!83154 e!83155)))

(declare-fun c!23355 () Bool)

(assert (=> b!127374 (= c!23355 (and ((_ is Cons!1715) (toList!858 lt!65276)) (not (= (_1!1294 (h!2317 (toList!858 lt!65276))) (_1!1294 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38549 c!23354) b!127373))

(assert (= (and d!38549 (not c!23354)) b!127374))

(assert (= (and b!127374 c!23355) b!127375))

(assert (= (and b!127374 (not c!23355)) b!127376))

(declare-fun m!149197 () Bool)

(assert (=> b!127375 m!149197))

(assert (=> b!126426 d!38549))

(declare-fun d!38551 () Bool)

(assert (=> d!38551 (= (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65102)) (v!3125 (getValueByKey!166 (toList!858 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65102)))))

(assert (=> d!38035 d!38551))

(declare-fun b!127380 () Bool)

(declare-fun e!83157 () Option!172)

(assert (=> b!127380 (= e!83157 None!170)))

(declare-fun d!38553 () Bool)

(declare-fun c!23356 () Bool)

(assert (=> d!38553 (= c!23356 (and ((_ is Cons!1715) (toList!858 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))) (= (_1!1294 (h!2317 (toList!858 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))) lt!65102)))))

(declare-fun e!83156 () Option!172)

(assert (=> d!38553 (= (getValueByKey!166 (toList!858 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65102) e!83156)))

(declare-fun b!127379 () Bool)

(assert (=> b!127379 (= e!83157 (getValueByKey!166 (t!6078 (toList!858 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))) lt!65102))))

(declare-fun b!127377 () Bool)

(assert (=> b!127377 (= e!83156 (Some!171 (_2!1294 (h!2317 (toList!858 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))))))))

(declare-fun b!127378 () Bool)

(assert (=> b!127378 (= e!83156 e!83157)))

(declare-fun c!23357 () Bool)

(assert (=> b!127378 (= c!23357 (and ((_ is Cons!1715) (toList!858 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992))))))) (not (= (_1!1294 (h!2317 (toList!858 (+!165 lt!65112 (tuple2!2569 lt!65107 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))))))) lt!65102))))))

(assert (= (and d!38553 c!23356) b!127377))

(assert (= (and d!38553 (not c!23356)) b!127378))

(assert (= (and b!127378 c!23357) b!127379))

(assert (= (and b!127378 (not c!23357)) b!127380))

(declare-fun m!149199 () Bool)

(assert (=> b!127379 m!149199))

(assert (=> d!38035 d!38553))

(assert (=> b!126459 d!38201))

(assert (=> b!126459 d!38203))

(declare-fun d!38555 () Bool)

(declare-fun e!83159 () Bool)

(assert (=> d!38555 e!83159))

(declare-fun res!61581 () Bool)

(assert (=> d!38555 (=> res!61581 e!83159)))

(declare-fun lt!65950 () Bool)

(assert (=> d!38555 (= res!61581 (not lt!65950))))

(declare-fun lt!65949 () Bool)

(assert (=> d!38555 (= lt!65950 lt!65949)))

(declare-fun lt!65951 () Unit!3936)

(declare-fun e!83158 () Unit!3936)

(assert (=> d!38555 (= lt!65951 e!83158)))

(declare-fun c!23358 () Bool)

(assert (=> d!38555 (= c!23358 lt!65949)))

(assert (=> d!38555 (= lt!65949 (containsKey!170 (toList!858 (getCurrentListMap!530 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(assert (=> d!38555 (= (contains!877 (getCurrentListMap!530 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))) lt!65950)))

(declare-fun b!127381 () Bool)

(declare-fun lt!65952 () Unit!3936)

(assert (=> b!127381 (= e!83158 lt!65952)))

(assert (=> b!127381 (= lt!65952 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 (getCurrentListMap!530 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(assert (=> b!127381 (isDefined!120 (getValueByKey!166 (toList!858 (getCurrentListMap!530 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194))))))

(declare-fun b!127382 () Bool)

(declare-fun Unit!3986 () Unit!3936)

(assert (=> b!127382 (= e!83158 Unit!3986)))

(declare-fun b!127383 () Bool)

(assert (=> b!127383 (= e!83159 (isDefined!120 (getValueByKey!166 (toList!858 (getCurrentListMap!530 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (select (arr!2224 (_keys!4516 newMap!16)) (index!3276 lt!65194)))))))

(assert (= (and d!38555 c!23358) b!127381))

(assert (= (and d!38555 (not c!23358)) b!127382))

(assert (= (and d!38555 (not res!61581)) b!127383))

(assert (=> d!38555 m!147229))

(declare-fun m!149201 () Bool)

(assert (=> d!38555 m!149201))

(assert (=> b!127381 m!147229))

(declare-fun m!149203 () Bool)

(assert (=> b!127381 m!149203))

(assert (=> b!127381 m!147229))

(declare-fun m!149205 () Bool)

(assert (=> b!127381 m!149205))

(assert (=> b!127381 m!149205))

(declare-fun m!149207 () Bool)

(assert (=> b!127381 m!149207))

(assert (=> b!127383 m!147229))

(assert (=> b!127383 m!149205))

(assert (=> b!127383 m!149205))

(assert (=> b!127383 m!149207))

(assert (=> b!126694 d!38555))

(declare-fun bm!13727 () Bool)

(declare-fun call!13734 () ListLongMap!1685)

(declare-fun call!13732 () ListLongMap!1685)

(assert (=> bm!13727 (= call!13734 call!13732)))

(declare-fun bm!13728 () Bool)

(declare-fun call!13730 () ListLongMap!1685)

(declare-fun call!13731 () ListLongMap!1685)

(assert (=> bm!13728 (= call!13730 call!13731)))

(declare-fun b!127384 () Bool)

(declare-fun e!83167 () Unit!3936)

(declare-fun lt!65973 () Unit!3936)

(assert (=> b!127384 (= e!83167 lt!65973)))

(declare-fun lt!65974 () ListLongMap!1685)

(assert (=> b!127384 (= lt!65974 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65963 () (_ BitVec 64))

(assert (=> b!127384 (= lt!65963 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65954 () (_ BitVec 64))

(assert (=> b!127384 (= lt!65954 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65970 () Unit!3936)

(assert (=> b!127384 (= lt!65970 (addStillContains!87 lt!65974 lt!65963 (zeroValue!2646 newMap!16) lt!65954))))

(assert (=> b!127384 (contains!877 (+!165 lt!65974 (tuple2!2569 lt!65963 (zeroValue!2646 newMap!16))) lt!65954)))

(declare-fun lt!65958 () Unit!3936)

(assert (=> b!127384 (= lt!65958 lt!65970)))

(declare-fun lt!65967 () ListLongMap!1685)

(assert (=> b!127384 (= lt!65967 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65972 () (_ BitVec 64))

(assert (=> b!127384 (= lt!65972 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65960 () (_ BitVec 64))

(assert (=> b!127384 (= lt!65960 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65965 () Unit!3936)

(assert (=> b!127384 (= lt!65965 (addApplyDifferent!87 lt!65967 lt!65972 (minValue!2646 newMap!16) lt!65960))))

(assert (=> b!127384 (= (apply!111 (+!165 lt!65967 (tuple2!2569 lt!65972 (minValue!2646 newMap!16))) lt!65960) (apply!111 lt!65967 lt!65960))))

(declare-fun lt!65968 () Unit!3936)

(assert (=> b!127384 (= lt!65968 lt!65965)))

(declare-fun lt!65966 () ListLongMap!1685)

(assert (=> b!127384 (= lt!65966 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65961 () (_ BitVec 64))

(assert (=> b!127384 (= lt!65961 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65956 () (_ BitVec 64))

(assert (=> b!127384 (= lt!65956 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!65959 () Unit!3936)

(assert (=> b!127384 (= lt!65959 (addApplyDifferent!87 lt!65966 lt!65961 (zeroValue!2646 newMap!16) lt!65956))))

(assert (=> b!127384 (= (apply!111 (+!165 lt!65966 (tuple2!2569 lt!65961 (zeroValue!2646 newMap!16))) lt!65956) (apply!111 lt!65966 lt!65956))))

(declare-fun lt!65962 () Unit!3936)

(assert (=> b!127384 (= lt!65962 lt!65959)))

(declare-fun lt!65969 () ListLongMap!1685)

(assert (=> b!127384 (= lt!65969 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!65971 () (_ BitVec 64))

(assert (=> b!127384 (= lt!65971 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65964 () (_ BitVec 64))

(assert (=> b!127384 (= lt!65964 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!127384 (= lt!65973 (addApplyDifferent!87 lt!65969 lt!65971 (minValue!2646 newMap!16) lt!65964))))

(assert (=> b!127384 (= (apply!111 (+!165 lt!65969 (tuple2!2569 lt!65971 (minValue!2646 newMap!16))) lt!65964) (apply!111 lt!65969 lt!65964))))

(declare-fun bm!13729 () Bool)

(declare-fun call!13735 () ListLongMap!1685)

(declare-fun c!23363 () Bool)

(declare-fun c!23360 () Bool)

(assert (=> bm!13729 (= call!13731 (+!165 (ite c!23360 call!13735 (ite c!23363 call!13732 call!13734)) (ite (or c!23360 c!23363) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(declare-fun b!127385 () Bool)

(declare-fun Unit!3987 () Unit!3936)

(assert (=> b!127385 (= e!83167 Unit!3987)))

(declare-fun bm!13730 () Bool)

(assert (=> bm!13730 (= call!13735 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun b!127386 () Bool)

(declare-fun res!61583 () Bool)

(declare-fun e!83170 () Bool)

(assert (=> b!127386 (=> (not res!61583) (not e!83170))))

(declare-fun e!83172 () Bool)

(assert (=> b!127386 (= res!61583 e!83172)))

(declare-fun c!23361 () Bool)

(assert (=> b!127386 (= c!23361 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!127387 () Bool)

(declare-fun e!83164 () Bool)

(declare-fun lt!65955 () ListLongMap!1685)

(assert (=> b!127387 (= e!83164 (= (apply!111 lt!65955 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2646 newMap!16)))))

(declare-fun bm!13731 () Bool)

(declare-fun call!13729 () Bool)

(assert (=> bm!13731 (= call!13729 (contains!877 lt!65955 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127388 () Bool)

(declare-fun e!83161 () ListLongMap!1685)

(assert (=> b!127388 (= e!83161 call!13730)))

(declare-fun b!127389 () Bool)

(declare-fun e!83169 () Bool)

(declare-fun e!83162 () Bool)

(assert (=> b!127389 (= e!83169 e!83162)))

(declare-fun res!61588 () Bool)

(assert (=> b!127389 (=> (not res!61588) (not e!83162))))

(assert (=> b!127389 (= res!61588 (contains!877 lt!65955 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!127389 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127390 () Bool)

(declare-fun c!23364 () Bool)

(assert (=> b!127390 (= c!23364 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!83163 () ListLongMap!1685)

(assert (=> b!127390 (= e!83161 e!83163)))

(declare-fun bm!13726 () Bool)

(declare-fun call!13733 () Bool)

(assert (=> bm!13726 (= call!13733 (contains!877 lt!65955 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!38557 () Bool)

(assert (=> d!38557 e!83170))

(declare-fun res!61587 () Bool)

(assert (=> d!38557 (=> (not res!61587) (not e!83170))))

(assert (=> d!38557 (= res!61587 (or (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))))

(declare-fun lt!65953 () ListLongMap!1685)

(assert (=> d!38557 (= lt!65955 lt!65953)))

(declare-fun lt!65957 () Unit!3936)

(assert (=> d!38557 (= lt!65957 e!83167)))

(declare-fun c!23359 () Bool)

(declare-fun e!83166 () Bool)

(assert (=> d!38557 (= c!23359 e!83166)))

(declare-fun res!61590 () Bool)

(assert (=> d!38557 (=> (not res!61590) (not e!83166))))

(assert (=> d!38557 (= res!61590 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun e!83171 () ListLongMap!1685)

(assert (=> d!38557 (= lt!65953 e!83171)))

(assert (=> d!38557 (= c!23360 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!38557 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38557 (= (getCurrentListMap!530 (_keys!4516 newMap!16) lt!65207 (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!65955)))

(declare-fun b!127391 () Bool)

(declare-fun e!83165 () Bool)

(assert (=> b!127391 (= e!83165 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!127392 () Bool)

(assert (=> b!127392 (= e!83162 (= (apply!111 lt!65955 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 lt!65207) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!127392 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 lt!65207)))))

(assert (=> b!127392 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127393 () Bool)

(assert (=> b!127393 (= e!83172 (not call!13733))))

(declare-fun b!127394 () Bool)

(assert (=> b!127394 (= e!83163 call!13734)))

(declare-fun b!127395 () Bool)

(assert (=> b!127395 (= e!83172 e!83164)))

(declare-fun res!61582 () Bool)

(assert (=> b!127395 (= res!61582 call!13733)))

(assert (=> b!127395 (=> (not res!61582) (not e!83164))))

(declare-fun b!127396 () Bool)

(assert (=> b!127396 (= e!83163 call!13730)))

(declare-fun b!127397 () Bool)

(declare-fun e!83168 () Bool)

(declare-fun e!83160 () Bool)

(assert (=> b!127397 (= e!83168 e!83160)))

(declare-fun res!61586 () Bool)

(assert (=> b!127397 (= res!61586 call!13729)))

(assert (=> b!127397 (=> (not res!61586) (not e!83160))))

(declare-fun b!127398 () Bool)

(assert (=> b!127398 (= e!83170 e!83168)))

(declare-fun c!23362 () Bool)

(assert (=> b!127398 (= c!23362 (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!127399 () Bool)

(assert (=> b!127399 (= e!83171 e!83161)))

(assert (=> b!127399 (= c!23363 (and (not (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!127400 () Bool)

(assert (=> b!127400 (= e!83166 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!127401 () Bool)

(declare-fun res!61589 () Bool)

(assert (=> b!127401 (=> (not res!61589) (not e!83170))))

(assert (=> b!127401 (= res!61589 e!83169)))

(declare-fun res!61584 () Bool)

(assert (=> b!127401 (=> res!61584 e!83169)))

(assert (=> b!127401 (= res!61584 (not e!83165))))

(declare-fun res!61585 () Bool)

(assert (=> b!127401 (=> (not res!61585) (not e!83165))))

(assert (=> b!127401 (= res!61585 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun bm!13732 () Bool)

(assert (=> bm!13732 (= call!13732 call!13735)))

(declare-fun b!127402 () Bool)

(assert (=> b!127402 (= e!83171 (+!165 call!13731 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))

(declare-fun b!127403 () Bool)

(assert (=> b!127403 (= e!83160 (= (apply!111 lt!65955 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2646 newMap!16)))))

(declare-fun b!127404 () Bool)

(assert (=> b!127404 (= e!83168 (not call!13729))))

(assert (= (and d!38557 c!23360) b!127402))

(assert (= (and d!38557 (not c!23360)) b!127399))

(assert (= (and b!127399 c!23363) b!127388))

(assert (= (and b!127399 (not c!23363)) b!127390))

(assert (= (and b!127390 c!23364) b!127396))

(assert (= (and b!127390 (not c!23364)) b!127394))

(assert (= (or b!127396 b!127394) bm!13727))

(assert (= (or b!127388 bm!13727) bm!13732))

(assert (= (or b!127388 b!127396) bm!13728))

(assert (= (or b!127402 bm!13732) bm!13730))

(assert (= (or b!127402 bm!13728) bm!13729))

(assert (= (and d!38557 res!61590) b!127400))

(assert (= (and d!38557 c!23359) b!127384))

(assert (= (and d!38557 (not c!23359)) b!127385))

(assert (= (and d!38557 res!61587) b!127401))

(assert (= (and b!127401 res!61585) b!127391))

(assert (= (and b!127401 (not res!61584)) b!127389))

(assert (= (and b!127389 res!61588) b!127392))

(assert (= (and b!127401 res!61589) b!127386))

(assert (= (and b!127386 c!23361) b!127395))

(assert (= (and b!127386 (not c!23361)) b!127393))

(assert (= (and b!127395 res!61582) b!127387))

(assert (= (or b!127395 b!127393) bm!13726))

(assert (= (and b!127386 res!61583) b!127398))

(assert (= (and b!127398 c!23362) b!127397))

(assert (= (and b!127398 (not c!23362)) b!127404))

(assert (= (and b!127397 res!61586) b!127403))

(assert (= (or b!127397 b!127404) bm!13731))

(declare-fun b_lambda!5639 () Bool)

(assert (=> (not b_lambda!5639) (not b!127392)))

(assert (=> b!127392 t!6085))

(declare-fun b_and!7869 () Bool)

(assert (= b_and!7865 (and (=> t!6085 result!3859) b_and!7869)))

(assert (=> b!127392 t!6087))

(declare-fun b_and!7871 () Bool)

(assert (= b_and!7867 (and (=> t!6087 result!3861) b_and!7871)))

(declare-fun m!149209 () Bool)

(assert (=> bm!13729 m!149209))

(declare-fun m!149211 () Bool)

(assert (=> bm!13730 m!149211))

(assert (=> b!127400 m!147467))

(assert (=> b!127400 m!147467))

(assert (=> b!127400 m!147495))

(assert (=> d!38557 m!147475))

(declare-fun m!149213 () Bool)

(assert (=> bm!13726 m!149213))

(declare-fun m!149215 () Bool)

(assert (=> bm!13731 m!149215))

(declare-fun m!149217 () Bool)

(assert (=> b!127402 m!149217))

(declare-fun m!149219 () Bool)

(assert (=> b!127387 m!149219))

(declare-fun m!149221 () Bool)

(assert (=> b!127384 m!149221))

(declare-fun m!149223 () Bool)

(assert (=> b!127384 m!149223))

(declare-fun m!149225 () Bool)

(assert (=> b!127384 m!149225))

(declare-fun m!149227 () Bool)

(assert (=> b!127384 m!149227))

(declare-fun m!149229 () Bool)

(assert (=> b!127384 m!149229))

(declare-fun m!149231 () Bool)

(assert (=> b!127384 m!149231))

(assert (=> b!127384 m!149211))

(declare-fun m!149233 () Bool)

(assert (=> b!127384 m!149233))

(declare-fun m!149235 () Bool)

(assert (=> b!127384 m!149235))

(declare-fun m!149237 () Bool)

(assert (=> b!127384 m!149237))

(assert (=> b!127384 m!149229))

(declare-fun m!149239 () Bool)

(assert (=> b!127384 m!149239))

(assert (=> b!127384 m!149227))

(declare-fun m!149241 () Bool)

(assert (=> b!127384 m!149241))

(declare-fun m!149243 () Bool)

(assert (=> b!127384 m!149243))

(assert (=> b!127384 m!147467))

(assert (=> b!127384 m!149233))

(declare-fun m!149245 () Bool)

(assert (=> b!127384 m!149245))

(declare-fun m!149247 () Bool)

(assert (=> b!127384 m!149247))

(declare-fun m!149249 () Bool)

(assert (=> b!127384 m!149249))

(assert (=> b!127384 m!149247))

(assert (=> b!127391 m!147467))

(assert (=> b!127391 m!147467))

(assert (=> b!127391 m!147495))

(declare-fun m!149251 () Bool)

(assert (=> b!127392 m!149251))

(assert (=> b!127392 m!147581))

(declare-fun m!149253 () Bool)

(assert (=> b!127392 m!149253))

(assert (=> b!127392 m!149251))

(assert (=> b!127392 m!147467))

(declare-fun m!149255 () Bool)

(assert (=> b!127392 m!149255))

(assert (=> b!127392 m!147581))

(assert (=> b!127392 m!147467))

(assert (=> b!127389 m!147467))

(assert (=> b!127389 m!147467))

(declare-fun m!149257 () Bool)

(assert (=> b!127389 m!149257))

(declare-fun m!149259 () Bool)

(assert (=> b!127403 m!149259))

(assert (=> b!126694 d!38557))

(assert (=> b!126526 d!38407))

(declare-fun d!38559 () Bool)

(assert (=> d!38559 (= (get!1455 (getValueByKey!166 (toList!858 lt!65112) lt!65102)) (v!3125 (getValueByKey!166 (toList!858 lt!65112) lt!65102)))))

(assert (=> d!38039 d!38559))

(declare-fun b!127408 () Bool)

(declare-fun e!83174 () Option!172)

(assert (=> b!127408 (= e!83174 None!170)))

(declare-fun d!38561 () Bool)

(declare-fun c!23365 () Bool)

(assert (=> d!38561 (= c!23365 (and ((_ is Cons!1715) (toList!858 lt!65112)) (= (_1!1294 (h!2317 (toList!858 lt!65112))) lt!65102)))))

(declare-fun e!83173 () Option!172)

(assert (=> d!38561 (= (getValueByKey!166 (toList!858 lt!65112) lt!65102) e!83173)))

(declare-fun b!127407 () Bool)

(assert (=> b!127407 (= e!83174 (getValueByKey!166 (t!6078 (toList!858 lt!65112)) lt!65102))))

(declare-fun b!127405 () Bool)

(assert (=> b!127405 (= e!83173 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65112)))))))

(declare-fun b!127406 () Bool)

(assert (=> b!127406 (= e!83173 e!83174)))

(declare-fun c!23366 () Bool)

(assert (=> b!127406 (= c!23366 (and ((_ is Cons!1715) (toList!858 lt!65112)) (not (= (_1!1294 (h!2317 (toList!858 lt!65112))) lt!65102))))))

(assert (= (and d!38561 c!23365) b!127405))

(assert (= (and d!38561 (not c!23365)) b!127406))

(assert (= (and b!127406 c!23366) b!127407))

(assert (= (and b!127406 (not c!23366)) b!127408))

(declare-fun m!149261 () Bool)

(assert (=> b!127407 m!149261))

(assert (=> d!38039 d!38561))

(declare-fun lt!65975 () Bool)

(declare-fun d!38563 () Bool)

(assert (=> d!38563 (= lt!65975 (select (content!124 (toList!858 lt!65263)) (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun e!83176 () Bool)

(assert (=> d!38563 (= lt!65975 e!83176)))

(declare-fun res!61591 () Bool)

(assert (=> d!38563 (=> (not res!61591) (not e!83176))))

(assert (=> d!38563 (= res!61591 ((_ is Cons!1715) (toList!858 lt!65263)))))

(assert (=> d!38563 (= (contains!878 (toList!858 lt!65263) (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65975)))

(declare-fun b!127409 () Bool)

(declare-fun e!83175 () Bool)

(assert (=> b!127409 (= e!83176 e!83175)))

(declare-fun res!61592 () Bool)

(assert (=> b!127409 (=> res!61592 e!83175)))

(assert (=> b!127409 (= res!61592 (= (h!2317 (toList!858 lt!65263)) (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(declare-fun b!127410 () Bool)

(assert (=> b!127410 (= e!83175 (contains!878 (t!6078 (toList!858 lt!65263)) (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))

(assert (= (and d!38563 res!61591) b!127409))

(assert (= (and b!127409 (not res!61592)) b!127410))

(declare-fun m!149263 () Bool)

(assert (=> d!38563 m!149263))

(declare-fun m!149265 () Bool)

(assert (=> d!38563 m!149265))

(declare-fun m!149267 () Bool)

(assert (=> b!127410 m!149267))

(assert (=> b!126420 d!38563))

(assert (=> b!126711 d!38153))

(declare-fun bm!13734 () Bool)

(declare-fun call!13741 () ListLongMap!1685)

(declare-fun call!13739 () ListLongMap!1685)

(assert (=> bm!13734 (= call!13741 call!13739)))

(declare-fun bm!13735 () Bool)

(declare-fun call!13737 () ListLongMap!1685)

(declare-fun call!13738 () ListLongMap!1685)

(assert (=> bm!13735 (= call!13737 call!13738)))

(declare-fun b!127411 () Bool)

(declare-fun e!83184 () Unit!3936)

(declare-fun lt!65996 () Unit!3936)

(assert (=> b!127411 (= e!83184 lt!65996)))

(declare-fun lt!65997 () ListLongMap!1685)

(assert (=> b!127411 (= lt!65997 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (_2!1295 lt!65202)) (_values!2766 (_2!1295 lt!65202)) (mask!7039 (_2!1295 lt!65202)) (extraKeys!2564 (_2!1295 lt!65202)) (zeroValue!2646 (_2!1295 lt!65202)) (minValue!2646 (_2!1295 lt!65202)) #b00000000000000000000000000000000 (defaultEntry!2783 (_2!1295 lt!65202))))))

(declare-fun lt!65986 () (_ BitVec 64))

(assert (=> b!127411 (= lt!65986 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65977 () (_ BitVec 64))

(assert (=> b!127411 (= lt!65977 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000))))

(declare-fun lt!65993 () Unit!3936)

(assert (=> b!127411 (= lt!65993 (addStillContains!87 lt!65997 lt!65986 (zeroValue!2646 (_2!1295 lt!65202)) lt!65977))))

(assert (=> b!127411 (contains!877 (+!165 lt!65997 (tuple2!2569 lt!65986 (zeroValue!2646 (_2!1295 lt!65202)))) lt!65977)))

(declare-fun lt!65981 () Unit!3936)

(assert (=> b!127411 (= lt!65981 lt!65993)))

(declare-fun lt!65990 () ListLongMap!1685)

(assert (=> b!127411 (= lt!65990 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (_2!1295 lt!65202)) (_values!2766 (_2!1295 lt!65202)) (mask!7039 (_2!1295 lt!65202)) (extraKeys!2564 (_2!1295 lt!65202)) (zeroValue!2646 (_2!1295 lt!65202)) (minValue!2646 (_2!1295 lt!65202)) #b00000000000000000000000000000000 (defaultEntry!2783 (_2!1295 lt!65202))))))

(declare-fun lt!65995 () (_ BitVec 64))

(assert (=> b!127411 (= lt!65995 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65983 () (_ BitVec 64))

(assert (=> b!127411 (= lt!65983 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000))))

(declare-fun lt!65988 () Unit!3936)

(assert (=> b!127411 (= lt!65988 (addApplyDifferent!87 lt!65990 lt!65995 (minValue!2646 (_2!1295 lt!65202)) lt!65983))))

(assert (=> b!127411 (= (apply!111 (+!165 lt!65990 (tuple2!2569 lt!65995 (minValue!2646 (_2!1295 lt!65202)))) lt!65983) (apply!111 lt!65990 lt!65983))))

(declare-fun lt!65991 () Unit!3936)

(assert (=> b!127411 (= lt!65991 lt!65988)))

(declare-fun lt!65989 () ListLongMap!1685)

(assert (=> b!127411 (= lt!65989 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (_2!1295 lt!65202)) (_values!2766 (_2!1295 lt!65202)) (mask!7039 (_2!1295 lt!65202)) (extraKeys!2564 (_2!1295 lt!65202)) (zeroValue!2646 (_2!1295 lt!65202)) (minValue!2646 (_2!1295 lt!65202)) #b00000000000000000000000000000000 (defaultEntry!2783 (_2!1295 lt!65202))))))

(declare-fun lt!65984 () (_ BitVec 64))

(assert (=> b!127411 (= lt!65984 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65979 () (_ BitVec 64))

(assert (=> b!127411 (= lt!65979 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000))))

(declare-fun lt!65982 () Unit!3936)

(assert (=> b!127411 (= lt!65982 (addApplyDifferent!87 lt!65989 lt!65984 (zeroValue!2646 (_2!1295 lt!65202)) lt!65979))))

(assert (=> b!127411 (= (apply!111 (+!165 lt!65989 (tuple2!2569 lt!65984 (zeroValue!2646 (_2!1295 lt!65202)))) lt!65979) (apply!111 lt!65989 lt!65979))))

(declare-fun lt!65985 () Unit!3936)

(assert (=> b!127411 (= lt!65985 lt!65982)))

(declare-fun lt!65992 () ListLongMap!1685)

(assert (=> b!127411 (= lt!65992 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (_2!1295 lt!65202)) (_values!2766 (_2!1295 lt!65202)) (mask!7039 (_2!1295 lt!65202)) (extraKeys!2564 (_2!1295 lt!65202)) (zeroValue!2646 (_2!1295 lt!65202)) (minValue!2646 (_2!1295 lt!65202)) #b00000000000000000000000000000000 (defaultEntry!2783 (_2!1295 lt!65202))))))

(declare-fun lt!65994 () (_ BitVec 64))

(assert (=> b!127411 (= lt!65994 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!65987 () (_ BitVec 64))

(assert (=> b!127411 (= lt!65987 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000))))

(assert (=> b!127411 (= lt!65996 (addApplyDifferent!87 lt!65992 lt!65994 (minValue!2646 (_2!1295 lt!65202)) lt!65987))))

(assert (=> b!127411 (= (apply!111 (+!165 lt!65992 (tuple2!2569 lt!65994 (minValue!2646 (_2!1295 lt!65202)))) lt!65987) (apply!111 lt!65992 lt!65987))))

(declare-fun c!23368 () Bool)

(declare-fun c!23371 () Bool)

(declare-fun call!13742 () ListLongMap!1685)

(declare-fun bm!13736 () Bool)

(assert (=> bm!13736 (= call!13738 (+!165 (ite c!23368 call!13742 (ite c!23371 call!13739 call!13741)) (ite (or c!23368 c!23371) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (_2!1295 lt!65202))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (_2!1295 lt!65202))))))))

(declare-fun b!127412 () Bool)

(declare-fun Unit!3988 () Unit!3936)

(assert (=> b!127412 (= e!83184 Unit!3988)))

(declare-fun bm!13737 () Bool)

(assert (=> bm!13737 (= call!13742 (getCurrentListMapNoExtraKeys!132 (_keys!4516 (_2!1295 lt!65202)) (_values!2766 (_2!1295 lt!65202)) (mask!7039 (_2!1295 lt!65202)) (extraKeys!2564 (_2!1295 lt!65202)) (zeroValue!2646 (_2!1295 lt!65202)) (minValue!2646 (_2!1295 lt!65202)) #b00000000000000000000000000000000 (defaultEntry!2783 (_2!1295 lt!65202))))))

(declare-fun b!127413 () Bool)

(declare-fun res!61594 () Bool)

(declare-fun e!83187 () Bool)

(assert (=> b!127413 (=> (not res!61594) (not e!83187))))

(declare-fun e!83189 () Bool)

(assert (=> b!127413 (= res!61594 e!83189)))

(declare-fun c!23369 () Bool)

(assert (=> b!127413 (= c!23369 (not (= (bvand (extraKeys!2564 (_2!1295 lt!65202)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!127414 () Bool)

(declare-fun e!83181 () Bool)

(declare-fun lt!65978 () ListLongMap!1685)

(assert (=> b!127414 (= e!83181 (= (apply!111 lt!65978 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2646 (_2!1295 lt!65202))))))

(declare-fun bm!13738 () Bool)

(declare-fun call!13736 () Bool)

(assert (=> bm!13738 (= call!13736 (contains!877 lt!65978 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127415 () Bool)

(declare-fun e!83178 () ListLongMap!1685)

(assert (=> b!127415 (= e!83178 call!13737)))

(declare-fun b!127416 () Bool)

(declare-fun e!83186 () Bool)

(declare-fun e!83179 () Bool)

(assert (=> b!127416 (= e!83186 e!83179)))

(declare-fun res!61599 () Bool)

(assert (=> b!127416 (=> (not res!61599) (not e!83179))))

(assert (=> b!127416 (= res!61599 (contains!877 lt!65978 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000)))))

(assert (=> b!127416 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))))))

(declare-fun b!127417 () Bool)

(declare-fun c!23372 () Bool)

(assert (=> b!127417 (= c!23372 (and (not (= (bvand (extraKeys!2564 (_2!1295 lt!65202)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 (_2!1295 lt!65202)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!83180 () ListLongMap!1685)

(assert (=> b!127417 (= e!83178 e!83180)))

(declare-fun bm!13733 () Bool)

(declare-fun call!13740 () Bool)

(assert (=> bm!13733 (= call!13740 (contains!877 lt!65978 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!38565 () Bool)

(assert (=> d!38565 e!83187))

(declare-fun res!61598 () Bool)

(assert (=> d!38565 (=> (not res!61598) (not e!83187))))

(assert (=> d!38565 (= res!61598 (or (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))))))))

(declare-fun lt!65976 () ListLongMap!1685)

(assert (=> d!38565 (= lt!65978 lt!65976)))

(declare-fun lt!65980 () Unit!3936)

(assert (=> d!38565 (= lt!65980 e!83184)))

(declare-fun c!23367 () Bool)

(declare-fun e!83183 () Bool)

(assert (=> d!38565 (= c!23367 e!83183)))

(declare-fun res!61601 () Bool)

(assert (=> d!38565 (=> (not res!61601) (not e!83183))))

(assert (=> d!38565 (= res!61601 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))))))

(declare-fun e!83188 () ListLongMap!1685)

(assert (=> d!38565 (= lt!65976 e!83188)))

(assert (=> d!38565 (= c!23368 (and (not (= (bvand (extraKeys!2564 (_2!1295 lt!65202)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2564 (_2!1295 lt!65202)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!38565 (validMask!0 (mask!7039 (_2!1295 lt!65202)))))

(assert (=> d!38565 (= (getCurrentListMap!530 (_keys!4516 (_2!1295 lt!65202)) (_values!2766 (_2!1295 lt!65202)) (mask!7039 (_2!1295 lt!65202)) (extraKeys!2564 (_2!1295 lt!65202)) (zeroValue!2646 (_2!1295 lt!65202)) (minValue!2646 (_2!1295 lt!65202)) #b00000000000000000000000000000000 (defaultEntry!2783 (_2!1295 lt!65202))) lt!65978)))

(declare-fun b!127418 () Bool)

(declare-fun e!83182 () Bool)

(assert (=> b!127418 (= e!83182 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000)))))

(declare-fun b!127419 () Bool)

(assert (=> b!127419 (= e!83179 (= (apply!111 lt!65978 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (_values!2766 (_2!1295 lt!65202))) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 (_2!1295 lt!65202)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!127419 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (_values!2766 (_2!1295 lt!65202)))))))

(assert (=> b!127419 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))))))

(declare-fun b!127420 () Bool)

(assert (=> b!127420 (= e!83189 (not call!13740))))

(declare-fun b!127421 () Bool)

(assert (=> b!127421 (= e!83180 call!13741)))

(declare-fun b!127422 () Bool)

(assert (=> b!127422 (= e!83189 e!83181)))

(declare-fun res!61593 () Bool)

(assert (=> b!127422 (= res!61593 call!13740)))

(assert (=> b!127422 (=> (not res!61593) (not e!83181))))

(declare-fun b!127423 () Bool)

(assert (=> b!127423 (= e!83180 call!13737)))

(declare-fun b!127424 () Bool)

(declare-fun e!83185 () Bool)

(declare-fun e!83177 () Bool)

(assert (=> b!127424 (= e!83185 e!83177)))

(declare-fun res!61597 () Bool)

(assert (=> b!127424 (= res!61597 call!13736)))

(assert (=> b!127424 (=> (not res!61597) (not e!83177))))

(declare-fun b!127425 () Bool)

(assert (=> b!127425 (= e!83187 e!83185)))

(declare-fun c!23370 () Bool)

(assert (=> b!127425 (= c!23370 (not (= (bvand (extraKeys!2564 (_2!1295 lt!65202)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!127426 () Bool)

(assert (=> b!127426 (= e!83188 e!83178)))

(assert (=> b!127426 (= c!23371 (and (not (= (bvand (extraKeys!2564 (_2!1295 lt!65202)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2564 (_2!1295 lt!65202)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!127427 () Bool)

(assert (=> b!127427 (= e!83183 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000)))))

(declare-fun b!127428 () Bool)

(declare-fun res!61600 () Bool)

(assert (=> b!127428 (=> (not res!61600) (not e!83187))))

(assert (=> b!127428 (= res!61600 e!83186)))

(declare-fun res!61595 () Bool)

(assert (=> b!127428 (=> res!61595 e!83186)))

(assert (=> b!127428 (= res!61595 (not e!83182))))

(declare-fun res!61596 () Bool)

(assert (=> b!127428 (=> (not res!61596) (not e!83182))))

(assert (=> b!127428 (= res!61596 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))))))

(declare-fun bm!13739 () Bool)

(assert (=> bm!13739 (= call!13739 call!13742)))

(declare-fun b!127429 () Bool)

(assert (=> b!127429 (= e!83188 (+!165 call!13738 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (_2!1295 lt!65202)))))))

(declare-fun b!127430 () Bool)

(assert (=> b!127430 (= e!83177 (= (apply!111 lt!65978 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2646 (_2!1295 lt!65202))))))

(declare-fun b!127431 () Bool)

(assert (=> b!127431 (= e!83185 (not call!13736))))

(assert (= (and d!38565 c!23368) b!127429))

(assert (= (and d!38565 (not c!23368)) b!127426))

(assert (= (and b!127426 c!23371) b!127415))

(assert (= (and b!127426 (not c!23371)) b!127417))

(assert (= (and b!127417 c!23372) b!127423))

(assert (= (and b!127417 (not c!23372)) b!127421))

(assert (= (or b!127423 b!127421) bm!13734))

(assert (= (or b!127415 bm!13734) bm!13739))

(assert (= (or b!127415 b!127423) bm!13735))

(assert (= (or b!127429 bm!13739) bm!13737))

(assert (= (or b!127429 bm!13735) bm!13736))

(assert (= (and d!38565 res!61601) b!127427))

(assert (= (and d!38565 c!23367) b!127411))

(assert (= (and d!38565 (not c!23367)) b!127412))

(assert (= (and d!38565 res!61598) b!127428))

(assert (= (and b!127428 res!61596) b!127418))

(assert (= (and b!127428 (not res!61595)) b!127416))

(assert (= (and b!127416 res!61599) b!127419))

(assert (= (and b!127428 res!61600) b!127413))

(assert (= (and b!127413 c!23369) b!127422))

(assert (= (and b!127413 (not c!23369)) b!127420))

(assert (= (and b!127422 res!61593) b!127414))

(assert (= (or b!127422 b!127420) bm!13733))

(assert (= (and b!127413 res!61594) b!127425))

(assert (= (and b!127425 c!23370) b!127424))

(assert (= (and b!127425 (not c!23370)) b!127431))

(assert (= (and b!127424 res!61597) b!127430))

(assert (= (or b!127424 b!127431) bm!13738))

(declare-fun b_lambda!5641 () Bool)

(assert (=> (not b_lambda!5641) (not b!127419)))

(declare-fun t!6089 () Bool)

(declare-fun tb!2333 () Bool)

(assert (=> (and b!126082 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 (_2!1295 lt!65202))) t!6089) tb!2333))

(declare-fun result!3863 () Bool)

(assert (=> tb!2333 (= result!3863 tp_is_empty!2841)))

(assert (=> b!127419 t!6089))

(declare-fun b_and!7873 () Bool)

(assert (= b_and!7869 (and (=> t!6089 result!3863) b_and!7873)))

(declare-fun tb!2335 () Bool)

(declare-fun t!6091 () Bool)

(assert (=> (and b!126074 (= (defaultEntry!2783 newMap!16) (defaultEntry!2783 (_2!1295 lt!65202))) t!6091) tb!2335))

(declare-fun result!3865 () Bool)

(assert (= result!3865 result!3863))

(assert (=> b!127419 t!6091))

(declare-fun b_and!7875 () Bool)

(assert (= b_and!7871 (and (=> t!6091 result!3865) b_and!7875)))

(declare-fun m!149269 () Bool)

(assert (=> bm!13736 m!149269))

(declare-fun m!149271 () Bool)

(assert (=> bm!13737 m!149271))

(assert (=> b!127427 m!148095))

(assert (=> b!127427 m!148095))

(assert (=> b!127427 m!148103))

(assert (=> d!38565 m!149193))

(declare-fun m!149273 () Bool)

(assert (=> bm!13733 m!149273))

(declare-fun m!149275 () Bool)

(assert (=> bm!13738 m!149275))

(declare-fun m!149277 () Bool)

(assert (=> b!127429 m!149277))

(declare-fun m!149279 () Bool)

(assert (=> b!127414 m!149279))

(declare-fun m!149281 () Bool)

(assert (=> b!127411 m!149281))

(declare-fun m!149283 () Bool)

(assert (=> b!127411 m!149283))

(declare-fun m!149285 () Bool)

(assert (=> b!127411 m!149285))

(declare-fun m!149287 () Bool)

(assert (=> b!127411 m!149287))

(declare-fun m!149289 () Bool)

(assert (=> b!127411 m!149289))

(declare-fun m!149291 () Bool)

(assert (=> b!127411 m!149291))

(assert (=> b!127411 m!149271))

(declare-fun m!149293 () Bool)

(assert (=> b!127411 m!149293))

(declare-fun m!149295 () Bool)

(assert (=> b!127411 m!149295))

(declare-fun m!149297 () Bool)

(assert (=> b!127411 m!149297))

(assert (=> b!127411 m!149289))

(declare-fun m!149299 () Bool)

(assert (=> b!127411 m!149299))

(assert (=> b!127411 m!149287))

(declare-fun m!149301 () Bool)

(assert (=> b!127411 m!149301))

(declare-fun m!149303 () Bool)

(assert (=> b!127411 m!149303))

(assert (=> b!127411 m!148095))

(assert (=> b!127411 m!149293))

(declare-fun m!149305 () Bool)

(assert (=> b!127411 m!149305))

(declare-fun m!149307 () Bool)

(assert (=> b!127411 m!149307))

(declare-fun m!149309 () Bool)

(assert (=> b!127411 m!149309))

(assert (=> b!127411 m!149307))

(assert (=> b!127418 m!148095))

(assert (=> b!127418 m!148095))

(assert (=> b!127418 m!148103))

(declare-fun m!149311 () Bool)

(assert (=> b!127419 m!149311))

(declare-fun m!149313 () Bool)

(assert (=> b!127419 m!149313))

(declare-fun m!149315 () Bool)

(assert (=> b!127419 m!149315))

(assert (=> b!127419 m!149311))

(assert (=> b!127419 m!148095))

(declare-fun m!149317 () Bool)

(assert (=> b!127419 m!149317))

(assert (=> b!127419 m!149313))

(assert (=> b!127419 m!148095))

(assert (=> b!127416 m!148095))

(assert (=> b!127416 m!148095))

(declare-fun m!149319 () Bool)

(assert (=> b!127416 m!149319))

(declare-fun m!149321 () Bool)

(assert (=> b!127430 m!149321))

(assert (=> d!38093 d!38565))

(declare-fun b!127432 () Bool)

(declare-fun e!83190 () Bool)

(declare-fun call!13743 () Bool)

(assert (=> b!127432 (= e!83190 call!13743)))

(declare-fun b!127433 () Bool)

(declare-fun e!83192 () Bool)

(assert (=> b!127433 (= e!83192 e!83190)))

(declare-fun c!23373 () Bool)

(assert (=> b!127433 (= c!23373 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!127434 () Bool)

(declare-fun e!83193 () Bool)

(assert (=> b!127434 (= e!83193 (contains!879 (ite c!23105 (Cons!1716 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717) (select (arr!2224 (_keys!4516 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!127435 () Bool)

(declare-fun e!83191 () Bool)

(assert (=> b!127435 (= e!83191 e!83192)))

(declare-fun res!61603 () Bool)

(assert (=> b!127435 (=> (not res!61603) (not e!83192))))

(assert (=> b!127435 (= res!61603 (not e!83193))))

(declare-fun res!61602 () Bool)

(assert (=> b!127435 (=> (not res!61602) (not e!83193))))

(assert (=> b!127435 (= res!61602 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!13740 () Bool)

(assert (=> bm!13740 (= call!13743 (arrayNoDuplicates!0 (_keys!4516 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!23373 (Cons!1716 (select (arr!2224 (_keys!4516 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!23105 (Cons!1716 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) (ite c!23105 (Cons!1716 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717))))))

(declare-fun d!38567 () Bool)

(declare-fun res!61604 () Bool)

(assert (=> d!38567 (=> res!61604 e!83191)))

(assert (=> d!38567 (= res!61604 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38567 (= (arrayNoDuplicates!0 (_keys!4516 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!23105 (Cons!1716 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000) Nil!1717) Nil!1717)) e!83191)))

(declare-fun b!127436 () Bool)

(assert (=> b!127436 (= e!83190 call!13743)))

(assert (= (and d!38567 (not res!61604)) b!127435))

(assert (= (and b!127435 res!61602) b!127434))

(assert (= (and b!127435 res!61603) b!127433))

(assert (= (and b!127433 c!23373) b!127432))

(assert (= (and b!127433 (not c!23373)) b!127436))

(assert (= (or b!127432 b!127436) bm!13740))

(assert (=> b!127433 m!148481))

(assert (=> b!127433 m!148481))

(declare-fun m!149323 () Bool)

(assert (=> b!127433 m!149323))

(assert (=> b!127434 m!148481))

(assert (=> b!127434 m!148481))

(declare-fun m!149325 () Bool)

(assert (=> b!127434 m!149325))

(assert (=> b!127435 m!148481))

(assert (=> b!127435 m!148481))

(assert (=> b!127435 m!149323))

(assert (=> bm!13740 m!148481))

(declare-fun m!149327 () Bool)

(assert (=> bm!13740 m!149327))

(assert (=> bm!13615 d!38567))

(declare-fun d!38569 () Bool)

(declare-fun e!83195 () Bool)

(assert (=> d!38569 e!83195))

(declare-fun res!61605 () Bool)

(assert (=> d!38569 (=> res!61605 e!83195)))

(declare-fun lt!65999 () Bool)

(assert (=> d!38569 (= res!61605 (not lt!65999))))

(declare-fun lt!65998 () Bool)

(assert (=> d!38569 (= lt!65999 lt!65998)))

(declare-fun lt!66000 () Unit!3936)

(declare-fun e!83194 () Unit!3936)

(assert (=> d!38569 (= lt!66000 e!83194)))

(declare-fun c!23374 () Bool)

(assert (=> d!38569 (= c!23374 lt!65998)))

(assert (=> d!38569 (= lt!65998 (containsKey!170 (toList!858 lt!65280) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!38569 (= (contains!877 lt!65280 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!65999)))

(declare-fun b!127437 () Bool)

(declare-fun lt!66001 () Unit!3936)

(assert (=> b!127437 (= e!83194 lt!66001)))

(assert (=> b!127437 (= lt!66001 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65280) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!127437 (isDefined!120 (getValueByKey!166 (toList!858 lt!65280) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!127438 () Bool)

(declare-fun Unit!3989 () Unit!3936)

(assert (=> b!127438 (= e!83194 Unit!3989)))

(declare-fun b!127439 () Bool)

(assert (=> b!127439 (= e!83195 (isDefined!120 (getValueByKey!166 (toList!858 lt!65280) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!38569 c!23374) b!127437))

(assert (= (and d!38569 (not c!23374)) b!127438))

(assert (= (and d!38569 (not res!61605)) b!127439))

(declare-fun m!149329 () Bool)

(assert (=> d!38569 m!149329))

(declare-fun m!149331 () Bool)

(assert (=> b!127437 m!149331))

(assert (=> b!127437 m!147459))

(assert (=> b!127437 m!147459))

(declare-fun m!149333 () Bool)

(assert (=> b!127437 m!149333))

(assert (=> b!127439 m!147459))

(assert (=> b!127439 m!147459))

(assert (=> b!127439 m!149333))

(assert (=> d!38045 d!38569))

(declare-fun b!127443 () Bool)

(declare-fun e!83197 () Option!172)

(assert (=> b!127443 (= e!83197 None!170)))

(declare-fun c!23375 () Bool)

(declare-fun d!38571 () Bool)

(assert (=> d!38571 (= c!23375 (and ((_ is Cons!1715) lt!65279) (= (_1!1294 (h!2317 lt!65279)) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!83196 () Option!172)

(assert (=> d!38571 (= (getValueByKey!166 lt!65279 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!83196)))

(declare-fun b!127442 () Bool)

(assert (=> b!127442 (= e!83197 (getValueByKey!166 (t!6078 lt!65279) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!127440 () Bool)

(assert (=> b!127440 (= e!83196 (Some!171 (_2!1294 (h!2317 lt!65279))))))

(declare-fun b!127441 () Bool)

(assert (=> b!127441 (= e!83196 e!83197)))

(declare-fun c!23376 () Bool)

(assert (=> b!127441 (= c!23376 (and ((_ is Cons!1715) lt!65279) (not (= (_1!1294 (h!2317 lt!65279)) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!38571 c!23375) b!127440))

(assert (= (and d!38571 (not c!23375)) b!127441))

(assert (= (and b!127441 c!23376) b!127442))

(assert (= (and b!127441 (not c!23376)) b!127443))

(declare-fun m!149335 () Bool)

(assert (=> b!127442 m!149335))

(assert (=> d!38045 d!38571))

(declare-fun d!38573 () Bool)

(assert (=> d!38573 (= (getValueByKey!166 lt!65279 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!171 (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!66002 () Unit!3936)

(assert (=> d!38573 (= lt!66002 (choose!777 lt!65279 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!83198 () Bool)

(assert (=> d!38573 e!83198))

(declare-fun res!61606 () Bool)

(assert (=> d!38573 (=> (not res!61606) (not e!83198))))

(assert (=> d!38573 (= res!61606 (isStrictlySorted!312 lt!65279))))

(assert (=> d!38573 (= (lemmaContainsTupThenGetReturnValue!83 lt!65279 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!66002)))

(declare-fun b!127444 () Bool)

(declare-fun res!61607 () Bool)

(assert (=> b!127444 (=> (not res!61607) (not e!83198))))

(assert (=> b!127444 (= res!61607 (containsKey!170 lt!65279 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!127445 () Bool)

(assert (=> b!127445 (= e!83198 (contains!878 lt!65279 (tuple2!2569 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!38573 res!61606) b!127444))

(assert (= (and b!127444 res!61607) b!127445))

(assert (=> d!38573 m!147453))

(declare-fun m!149337 () Bool)

(assert (=> d!38573 m!149337))

(declare-fun m!149339 () Bool)

(assert (=> d!38573 m!149339))

(declare-fun m!149341 () Bool)

(assert (=> b!127444 m!149341))

(declare-fun m!149343 () Bool)

(assert (=> b!127445 m!149343))

(assert (=> d!38045 d!38573))

(declare-fun b!127446 () Bool)

(declare-fun e!83199 () List!1719)

(declare-fun e!83203 () List!1719)

(assert (=> b!127446 (= e!83199 e!83203)))

(declare-fun c!23379 () Bool)

(assert (=> b!127446 (= c!23379 (and ((_ is Cons!1715) (toList!858 (ite c!23078 call!13605 call!13603))) (= (_1!1294 (h!2317 (toList!858 (ite c!23078 call!13605 call!13603)))) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!127447 () Bool)

(declare-fun e!83201 () List!1719)

(assert (=> b!127447 (= e!83201 (insertStrictlySorted!85 (t!6078 (toList!858 (ite c!23078 call!13605 call!13603))) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!13741 () Bool)

(declare-fun call!13746 () List!1719)

(declare-fun call!13744 () List!1719)

(assert (=> bm!13741 (= call!13746 call!13744)))

(declare-fun b!127448 () Bool)

(declare-fun e!83202 () List!1719)

(assert (=> b!127448 (= e!83202 call!13746)))

(declare-fun b!127449 () Bool)

(declare-fun call!13745 () List!1719)

(assert (=> b!127449 (= e!83199 call!13745)))

(declare-fun b!127450 () Bool)

(assert (=> b!127450 (= e!83203 call!13744)))

(declare-fun c!23378 () Bool)

(declare-fun bm!13743 () Bool)

(assert (=> bm!13743 (= call!13745 ($colon$colon!88 e!83201 (ite c!23378 (h!2317 (toList!858 (ite c!23078 call!13605 call!13603))) (tuple2!2569 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!23380 () Bool)

(assert (=> bm!13743 (= c!23380 c!23378)))

(declare-fun b!127451 () Bool)

(declare-fun res!61609 () Bool)

(declare-fun e!83200 () Bool)

(assert (=> b!127451 (=> (not res!61609) (not e!83200))))

(declare-fun lt!66003 () List!1719)

(assert (=> b!127451 (= res!61609 (containsKey!170 lt!66003 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!127452 () Bool)

(assert (=> b!127452 (= e!83200 (contains!878 lt!66003 (tuple2!2569 (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!127453 () Bool)

(assert (=> b!127453 (= e!83202 call!13746)))

(declare-fun b!127454 () Bool)

(declare-fun c!23377 () Bool)

(assert (=> b!127454 (= e!83201 (ite c!23379 (t!6078 (toList!858 (ite c!23078 call!13605 call!13603))) (ite c!23377 (Cons!1715 (h!2317 (toList!858 (ite c!23078 call!13605 call!13603))) (t!6078 (toList!858 (ite c!23078 call!13605 call!13603)))) Nil!1716)))))

(declare-fun b!127455 () Bool)

(assert (=> b!127455 (= c!23377 (and ((_ is Cons!1715) (toList!858 (ite c!23078 call!13605 call!13603))) (bvsgt (_1!1294 (h!2317 (toList!858 (ite c!23078 call!13605 call!13603)))) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!127455 (= e!83203 e!83202)))

(declare-fun d!38575 () Bool)

(assert (=> d!38575 e!83200))

(declare-fun res!61608 () Bool)

(assert (=> d!38575 (=> (not res!61608) (not e!83200))))

(assert (=> d!38575 (= res!61608 (isStrictlySorted!312 lt!66003))))

(assert (=> d!38575 (= lt!66003 e!83199)))

(assert (=> d!38575 (= c!23378 (and ((_ is Cons!1715) (toList!858 (ite c!23078 call!13605 call!13603))) (bvslt (_1!1294 (h!2317 (toList!858 (ite c!23078 call!13605 call!13603)))) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!38575 (isStrictlySorted!312 (toList!858 (ite c!23078 call!13605 call!13603)))))

(assert (=> d!38575 (= (insertStrictlySorted!85 (toList!858 (ite c!23078 call!13605 call!13603)) (_1!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1294 (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!66003)))

(declare-fun bm!13742 () Bool)

(assert (=> bm!13742 (= call!13744 call!13745)))

(assert (= (and d!38575 c!23378) b!127449))

(assert (= (and d!38575 (not c!23378)) b!127446))

(assert (= (and b!127446 c!23379) b!127450))

(assert (= (and b!127446 (not c!23379)) b!127455))

(assert (= (and b!127455 c!23377) b!127453))

(assert (= (and b!127455 (not c!23377)) b!127448))

(assert (= (or b!127453 b!127448) bm!13741))

(assert (= (or b!127450 bm!13741) bm!13742))

(assert (= (or b!127449 bm!13742) bm!13743))

(assert (= (and bm!13743 c!23380) b!127447))

(assert (= (and bm!13743 (not c!23380)) b!127454))

(assert (= (and d!38575 res!61608) b!127451))

(assert (= (and b!127451 res!61609) b!127452))

(declare-fun m!149345 () Bool)

(assert (=> bm!13743 m!149345))

(declare-fun m!149347 () Bool)

(assert (=> d!38575 m!149347))

(declare-fun m!149349 () Bool)

(assert (=> d!38575 m!149349))

(declare-fun m!149351 () Bool)

(assert (=> b!127452 m!149351))

(declare-fun m!149353 () Bool)

(assert (=> b!127447 m!149353))

(declare-fun m!149355 () Bool)

(assert (=> b!127451 m!149355))

(assert (=> d!38045 d!38575))

(assert (=> bm!13648 d!38445))

(declare-fun d!38577 () Bool)

(declare-fun e!83205 () Bool)

(assert (=> d!38577 e!83205))

(declare-fun res!61610 () Bool)

(assert (=> d!38577 (=> res!61610 e!83205)))

(declare-fun lt!66005 () Bool)

(assert (=> d!38577 (= res!61610 (not lt!66005))))

(declare-fun lt!66004 () Bool)

(assert (=> d!38577 (= lt!66005 lt!66004)))

(declare-fun lt!66006 () Unit!3936)

(declare-fun e!83204 () Unit!3936)

(assert (=> d!38577 (= lt!66006 e!83204)))

(declare-fun c!23381 () Bool)

(assert (=> d!38577 (= c!23381 lt!66004)))

(assert (=> d!38577 (= lt!66004 (containsKey!170 (toList!858 lt!65485) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!38577 (= (contains!877 lt!65485 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) lt!66005)))

(declare-fun b!127456 () Bool)

(declare-fun lt!66007 () Unit!3936)

(assert (=> b!127456 (= e!83204 lt!66007)))

(assert (=> b!127456 (= lt!66007 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65485) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!127456 (isDefined!120 (getValueByKey!166 (toList!858 lt!65485) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!127457 () Bool)

(declare-fun Unit!3990 () Unit!3936)

(assert (=> b!127457 (= e!83204 Unit!3990)))

(declare-fun b!127458 () Bool)

(assert (=> b!127458 (= e!83205 (isDefined!120 (getValueByKey!166 (toList!858 lt!65485) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!38577 c!23381) b!127456))

(assert (= (and d!38577 (not c!23381)) b!127457))

(assert (= (and d!38577 (not res!61610)) b!127458))

(assert (=> d!38577 m!147467))

(declare-fun m!149357 () Bool)

(assert (=> d!38577 m!149357))

(assert (=> b!127456 m!147467))

(declare-fun m!149359 () Bool)

(assert (=> b!127456 m!149359))

(assert (=> b!127456 m!147467))

(assert (=> b!127456 m!147897))

(assert (=> b!127456 m!147897))

(declare-fun m!149361 () Bool)

(assert (=> b!127456 m!149361))

(assert (=> b!127458 m!147467))

(assert (=> b!127458 m!147897))

(assert (=> b!127458 m!147897))

(assert (=> b!127458 m!149361))

(assert (=> b!126673 d!38577))

(assert (=> d!38051 d!38109))

(assert (=> d!38051 d!38139))

(declare-fun bm!13745 () Bool)

(declare-fun call!13752 () ListLongMap!1685)

(declare-fun call!13750 () ListLongMap!1685)

(assert (=> bm!13745 (= call!13752 call!13750)))

(declare-fun bm!13746 () Bool)

(declare-fun call!13748 () ListLongMap!1685)

(declare-fun call!13749 () ListLongMap!1685)

(assert (=> bm!13746 (= call!13748 call!13749)))

(declare-fun b!127459 () Bool)

(declare-fun e!83213 () Unit!3936)

(declare-fun lt!66028 () Unit!3936)

(assert (=> b!127459 (= e!83213 lt!66028)))

(declare-fun lt!66029 () ListLongMap!1685)

(assert (=> b!127459 (= lt!66029 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65187 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!66018 () (_ BitVec 64))

(assert (=> b!127459 (= lt!66018 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!66009 () (_ BitVec 64))

(assert (=> b!127459 (= lt!66009 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!66025 () Unit!3936)

(assert (=> b!127459 (= lt!66025 (addStillContains!87 lt!66029 lt!66018 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!66009))))

(assert (=> b!127459 (contains!877 (+!165 lt!66029 (tuple2!2569 lt!66018 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!66009)))

(declare-fun lt!66013 () Unit!3936)

(assert (=> b!127459 (= lt!66013 lt!66025)))

(declare-fun lt!66022 () ListLongMap!1685)

(assert (=> b!127459 (= lt!66022 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65187 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!66027 () (_ BitVec 64))

(assert (=> b!127459 (= lt!66027 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!66015 () (_ BitVec 64))

(assert (=> b!127459 (= lt!66015 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!66020 () Unit!3936)

(assert (=> b!127459 (= lt!66020 (addApplyDifferent!87 lt!66022 lt!66027 (minValue!2646 newMap!16) lt!66015))))

(assert (=> b!127459 (= (apply!111 (+!165 lt!66022 (tuple2!2569 lt!66027 (minValue!2646 newMap!16))) lt!66015) (apply!111 lt!66022 lt!66015))))

(declare-fun lt!66023 () Unit!3936)

(assert (=> b!127459 (= lt!66023 lt!66020)))

(declare-fun lt!66021 () ListLongMap!1685)

(assert (=> b!127459 (= lt!66021 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65187 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!66016 () (_ BitVec 64))

(assert (=> b!127459 (= lt!66016 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!66011 () (_ BitVec 64))

(assert (=> b!127459 (= lt!66011 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!66014 () Unit!3936)

(assert (=> b!127459 (= lt!66014 (addApplyDifferent!87 lt!66021 lt!66016 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!66011))))

(assert (=> b!127459 (= (apply!111 (+!165 lt!66021 (tuple2!2569 lt!66016 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!66011) (apply!111 lt!66021 lt!66011))))

(declare-fun lt!66017 () Unit!3936)

(assert (=> b!127459 (= lt!66017 lt!66014)))

(declare-fun lt!66024 () ListLongMap!1685)

(assert (=> b!127459 (= lt!66024 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65187 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun lt!66026 () (_ BitVec 64))

(assert (=> b!127459 (= lt!66026 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!66019 () (_ BitVec 64))

(assert (=> b!127459 (= lt!66019 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!127459 (= lt!66028 (addApplyDifferent!87 lt!66024 lt!66026 (minValue!2646 newMap!16) lt!66019))))

(assert (=> b!127459 (= (apply!111 (+!165 lt!66024 (tuple2!2569 lt!66026 (minValue!2646 newMap!16))) lt!66019) (apply!111 lt!66024 lt!66019))))

(declare-fun c!23383 () Bool)

(declare-fun call!13753 () ListLongMap!1685)

(declare-fun c!23386 () Bool)

(declare-fun bm!13747 () Bool)

(assert (=> bm!13747 (= call!13749 (+!165 (ite c!23383 call!13753 (ite c!23386 call!13750 call!13752)) (ite (or c!23383 c!23386) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(declare-fun b!127460 () Bool)

(declare-fun Unit!3991 () Unit!3936)

(assert (=> b!127460 (= e!83213 Unit!3991)))

(declare-fun bm!13748 () Bool)

(assert (=> bm!13748 (= call!13753 (getCurrentListMapNoExtraKeys!132 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65187 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(declare-fun b!127461 () Bool)

(declare-fun res!61612 () Bool)

(declare-fun e!83216 () Bool)

(assert (=> b!127461 (=> (not res!61612) (not e!83216))))

(declare-fun e!83218 () Bool)

(assert (=> b!127461 (= res!61612 e!83218)))

(declare-fun c!23384 () Bool)

(assert (=> b!127461 (= c!23384 (not (= (bvand lt!65187 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun lt!66010 () ListLongMap!1685)

(declare-fun b!127462 () Bool)

(declare-fun e!83210 () Bool)

(assert (=> b!127462 (= e!83210 (= (apply!111 lt!66010 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!13749 () Bool)

(declare-fun call!13747 () Bool)

(assert (=> bm!13749 (= call!13747 (contains!877 lt!66010 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127463 () Bool)

(declare-fun e!83207 () ListLongMap!1685)

(assert (=> b!127463 (= e!83207 call!13748)))

(declare-fun b!127464 () Bool)

(declare-fun e!83215 () Bool)

(declare-fun e!83208 () Bool)

(assert (=> b!127464 (= e!83215 e!83208)))

(declare-fun res!61617 () Bool)

(assert (=> b!127464 (=> (not res!61617) (not e!83208))))

(assert (=> b!127464 (= res!61617 (contains!877 lt!66010 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!127464 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127465 () Bool)

(declare-fun c!23387 () Bool)

(assert (=> b!127465 (= c!23387 (and (not (= (bvand lt!65187 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!65187 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!83209 () ListLongMap!1685)

(assert (=> b!127465 (= e!83207 e!83209)))

(declare-fun bm!13744 () Bool)

(declare-fun call!13751 () Bool)

(assert (=> bm!13744 (= call!13751 (contains!877 lt!66010 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!38579 () Bool)

(assert (=> d!38579 e!83216))

(declare-fun res!61616 () Bool)

(assert (=> d!38579 (=> (not res!61616) (not e!83216))))

(assert (=> d!38579 (= res!61616 (or (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))))

(declare-fun lt!66008 () ListLongMap!1685)

(assert (=> d!38579 (= lt!66010 lt!66008)))

(declare-fun lt!66012 () Unit!3936)

(assert (=> d!38579 (= lt!66012 e!83213)))

(declare-fun c!23382 () Bool)

(declare-fun e!83212 () Bool)

(assert (=> d!38579 (= c!23382 e!83212)))

(declare-fun res!61619 () Bool)

(assert (=> d!38579 (=> (not res!61619) (not e!83212))))

(assert (=> d!38579 (= res!61619 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun e!83217 () ListLongMap!1685)

(assert (=> d!38579 (= lt!66008 e!83217)))

(assert (=> d!38579 (= c!23383 (and (not (= (bvand lt!65187 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!65187 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!38579 (validMask!0 (mask!7039 newMap!16))))

(assert (=> d!38579 (= (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65187 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) lt!66010)))

(declare-fun b!127466 () Bool)

(declare-fun e!83211 () Bool)

(assert (=> b!127466 (= e!83211 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!127467 () Bool)

(assert (=> b!127467 (= e!83208 (= (apply!111 lt!66010 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1452 (select (arr!2225 (_values!2766 newMap!16)) #b00000000000000000000000000000000) (dynLambda!416 (defaultEntry!2783 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!127467 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2489 (_values!2766 newMap!16))))))

(assert (=> b!127467 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127468 () Bool)

(assert (=> b!127468 (= e!83218 (not call!13751))))

(declare-fun b!127469 () Bool)

(assert (=> b!127469 (= e!83209 call!13752)))

(declare-fun b!127470 () Bool)

(assert (=> b!127470 (= e!83218 e!83210)))

(declare-fun res!61611 () Bool)

(assert (=> b!127470 (= res!61611 call!13751)))

(assert (=> b!127470 (=> (not res!61611) (not e!83210))))

(declare-fun b!127471 () Bool)

(assert (=> b!127471 (= e!83209 call!13748)))

(declare-fun b!127472 () Bool)

(declare-fun e!83214 () Bool)

(declare-fun e!83206 () Bool)

(assert (=> b!127472 (= e!83214 e!83206)))

(declare-fun res!61615 () Bool)

(assert (=> b!127472 (= res!61615 call!13747)))

(assert (=> b!127472 (=> (not res!61615) (not e!83206))))

(declare-fun b!127473 () Bool)

(assert (=> b!127473 (= e!83216 e!83214)))

(declare-fun c!23385 () Bool)

(assert (=> b!127473 (= c!23385 (not (= (bvand lt!65187 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!127474 () Bool)

(assert (=> b!127474 (= e!83217 e!83207)))

(assert (=> b!127474 (= c!23386 (and (not (= (bvand lt!65187 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!65187 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!127475 () Bool)

(assert (=> b!127475 (= e!83212 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!127476 () Bool)

(declare-fun res!61618 () Bool)

(assert (=> b!127476 (=> (not res!61618) (not e!83216))))

(assert (=> b!127476 (= res!61618 e!83215)))

(declare-fun res!61613 () Bool)

(assert (=> b!127476 (=> res!61613 e!83215)))

(assert (=> b!127476 (= res!61613 (not e!83211))))

(declare-fun res!61614 () Bool)

(assert (=> b!127476 (=> (not res!61614) (not e!83211))))

(assert (=> b!127476 (= res!61614 (bvslt #b00000000000000000000000000000000 (size!2488 (_keys!4516 newMap!16))))))

(declare-fun bm!13750 () Bool)

(assert (=> bm!13750 (= call!13750 call!13753)))

(declare-fun b!127477 () Bool)

(assert (=> b!127477 (= e!83217 (+!165 call!13749 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))

(declare-fun b!127478 () Bool)

(assert (=> b!127478 (= e!83206 (= (apply!111 lt!66010 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2646 newMap!16)))))

(declare-fun b!127479 () Bool)

(assert (=> b!127479 (= e!83214 (not call!13747))))

(assert (= (and d!38579 c!23383) b!127477))

(assert (= (and d!38579 (not c!23383)) b!127474))

(assert (= (and b!127474 c!23386) b!127463))

(assert (= (and b!127474 (not c!23386)) b!127465))

(assert (= (and b!127465 c!23387) b!127471))

(assert (= (and b!127465 (not c!23387)) b!127469))

(assert (= (or b!127471 b!127469) bm!13745))

(assert (= (or b!127463 bm!13745) bm!13750))

(assert (= (or b!127463 b!127471) bm!13746))

(assert (= (or b!127477 bm!13750) bm!13748))

(assert (= (or b!127477 bm!13746) bm!13747))

(assert (= (and d!38579 res!61619) b!127475))

(assert (= (and d!38579 c!23382) b!127459))

(assert (= (and d!38579 (not c!23382)) b!127460))

(assert (= (and d!38579 res!61616) b!127476))

(assert (= (and b!127476 res!61614) b!127466))

(assert (= (and b!127476 (not res!61613)) b!127464))

(assert (= (and b!127464 res!61617) b!127467))

(assert (= (and b!127476 res!61618) b!127461))

(assert (= (and b!127461 c!23384) b!127470))

(assert (= (and b!127461 (not c!23384)) b!127468))

(assert (= (and b!127470 res!61611) b!127462))

(assert (= (or b!127470 b!127468) bm!13744))

(assert (= (and b!127461 res!61612) b!127473))

(assert (= (and b!127473 c!23385) b!127472))

(assert (= (and b!127473 (not c!23385)) b!127479))

(assert (= (and b!127472 res!61615) b!127478))

(assert (= (or b!127472 b!127479) bm!13749))

(declare-fun b_lambda!5643 () Bool)

(assert (=> (not b_lambda!5643) (not b!127467)))

(assert (=> b!127467 t!6085))

(declare-fun b_and!7877 () Bool)

(assert (= b_and!7873 (and (=> t!6085 result!3859) b_and!7877)))

(assert (=> b!127467 t!6087))

(declare-fun b_and!7879 () Bool)

(assert (= b_and!7875 (and (=> t!6087 result!3861) b_and!7879)))

(declare-fun m!149363 () Bool)

(assert (=> bm!13747 m!149363))

(assert (=> bm!13748 m!147093))

(declare-fun m!149365 () Bool)

(assert (=> bm!13748 m!149365))

(assert (=> b!127475 m!147467))

(assert (=> b!127475 m!147467))

(assert (=> b!127475 m!147495))

(assert (=> d!38579 m!147475))

(declare-fun m!149367 () Bool)

(assert (=> bm!13744 m!149367))

(declare-fun m!149369 () Bool)

(assert (=> bm!13749 m!149369))

(declare-fun m!149371 () Bool)

(assert (=> b!127477 m!149371))

(declare-fun m!149373 () Bool)

(assert (=> b!127462 m!149373))

(declare-fun m!149375 () Bool)

(assert (=> b!127459 m!149375))

(declare-fun m!149377 () Bool)

(assert (=> b!127459 m!149377))

(assert (=> b!127459 m!147093))

(declare-fun m!149379 () Bool)

(assert (=> b!127459 m!149379))

(declare-fun m!149381 () Bool)

(assert (=> b!127459 m!149381))

(declare-fun m!149383 () Bool)

(assert (=> b!127459 m!149383))

(declare-fun m!149385 () Bool)

(assert (=> b!127459 m!149385))

(assert (=> b!127459 m!147093))

(assert (=> b!127459 m!149365))

(declare-fun m!149387 () Bool)

(assert (=> b!127459 m!149387))

(declare-fun m!149389 () Bool)

(assert (=> b!127459 m!149389))

(declare-fun m!149391 () Bool)

(assert (=> b!127459 m!149391))

(assert (=> b!127459 m!149383))

(declare-fun m!149393 () Bool)

(assert (=> b!127459 m!149393))

(assert (=> b!127459 m!149381))

(declare-fun m!149395 () Bool)

(assert (=> b!127459 m!149395))

(assert (=> b!127459 m!147093))

(declare-fun m!149397 () Bool)

(assert (=> b!127459 m!149397))

(assert (=> b!127459 m!147467))

(assert (=> b!127459 m!149387))

(declare-fun m!149399 () Bool)

(assert (=> b!127459 m!149399))

(declare-fun m!149401 () Bool)

(assert (=> b!127459 m!149401))

(declare-fun m!149403 () Bool)

(assert (=> b!127459 m!149403))

(assert (=> b!127459 m!149401))

(assert (=> b!127466 m!147467))

(assert (=> b!127466 m!147467))

(assert (=> b!127466 m!147495))

(assert (=> b!127467 m!147579))

(assert (=> b!127467 m!147581))

(assert (=> b!127467 m!147583))

(assert (=> b!127467 m!147579))

(assert (=> b!127467 m!147467))

(declare-fun m!149405 () Bool)

(assert (=> b!127467 m!149405))

(assert (=> b!127467 m!147581))

(assert (=> b!127467 m!147467))

(assert (=> b!127464 m!147467))

(assert (=> b!127464 m!147467))

(declare-fun m!149407 () Bool)

(assert (=> b!127464 m!149407))

(declare-fun m!149409 () Bool)

(assert (=> b!127478 m!149409))

(assert (=> d!38051 d!38579))

(declare-fun d!38581 () Bool)

(declare-fun e!83219 () Bool)

(assert (=> d!38581 e!83219))

(declare-fun res!61620 () Bool)

(assert (=> d!38581 (=> (not res!61620) (not e!83219))))

(declare-fun lt!66031 () ListLongMap!1685)

(assert (=> d!38581 (= res!61620 (contains!877 lt!66031 (_1!1294 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!66030 () List!1719)

(assert (=> d!38581 (= lt!66031 (ListLongMap!1686 lt!66030))))

(declare-fun lt!66033 () Unit!3936)

(declare-fun lt!66032 () Unit!3936)

(assert (=> d!38581 (= lt!66033 lt!66032)))

(assert (=> d!38581 (= (getValueByKey!166 lt!66030 (_1!1294 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38581 (= lt!66032 (lemmaContainsTupThenGetReturnValue!83 lt!66030 (_1!1294 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38581 (= lt!66030 (insertStrictlySorted!85 (toList!858 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16))) (_1!1294 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1294 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!38581 (= (+!165 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!66031)))

(declare-fun b!127480 () Bool)

(declare-fun res!61621 () Bool)

(assert (=> b!127480 (=> (not res!61621) (not e!83219))))

(assert (=> b!127480 (= res!61621 (= (getValueByKey!166 (toList!858 lt!66031) (_1!1294 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!171 (_2!1294 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!127481 () Bool)

(assert (=> b!127481 (= e!83219 (contains!878 (toList!858 lt!66031) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!38581 res!61620) b!127480))

(assert (= (and b!127480 res!61621) b!127481))

(declare-fun m!149411 () Bool)

(assert (=> d!38581 m!149411))

(declare-fun m!149413 () Bool)

(assert (=> d!38581 m!149413))

(declare-fun m!149415 () Bool)

(assert (=> d!38581 m!149415))

(declare-fun m!149417 () Bool)

(assert (=> d!38581 m!149417))

(declare-fun m!149419 () Bool)

(assert (=> b!127480 m!149419))

(declare-fun m!149421 () Bool)

(assert (=> b!127481 m!149421))

(assert (=> d!38051 d!38581))

(declare-fun d!38583 () Bool)

(assert (=> d!38583 (= (+!165 (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!530 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) lt!65187 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2783 newMap!16)))))

(assert (=> d!38583 true))

(declare-fun _$7!107 () Unit!3936)

(assert (=> d!38583 (= (choose!770 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) lt!65187 (zeroValue!2646 newMap!16) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2646 newMap!16) (defaultEntry!2783 newMap!16)) _$7!107)))

(declare-fun bs!5284 () Bool)

(assert (= bs!5284 d!38583))

(assert (=> bs!5284 m!147159))

(assert (=> bs!5284 m!147159))

(assert (=> bs!5284 m!147473))

(assert (=> bs!5284 m!147093))

(assert (=> bs!5284 m!147471))

(assert (=> d!38051 d!38583))

(assert (=> b!126412 d!38321))

(assert (=> b!126412 d!38323))

(declare-fun d!38585 () Bool)

(assert (=> d!38585 (= (apply!111 lt!65320 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) (get!1455 (getValueByKey!166 (toList!858 lt!65320) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5285 () Bool)

(assert (= bs!5285 d!38585))

(assert (=> bs!5285 m!147467))

(assert (=> bs!5285 m!148971))

(assert (=> bs!5285 m!148971))

(declare-fun m!149423 () Bool)

(assert (=> bs!5285 m!149423))

(assert (=> b!126537 d!38585))

(assert (=> b!126537 d!38129))

(declare-fun b!127482 () Bool)

(declare-fun e!83220 () Bool)

(declare-fun call!13754 () Bool)

(assert (=> b!127482 (= e!83220 call!13754)))

(declare-fun b!127483 () Bool)

(declare-fun e!83222 () Bool)

(assert (=> b!127483 (= e!83222 e!83220)))

(declare-fun c!23388 () Bool)

(assert (=> b!127483 (= c!23388 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!127484 () Bool)

(declare-fun e!83223 () Bool)

(assert (=> b!127484 (= e!83223 (contains!879 Nil!1717 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!127485 () Bool)

(declare-fun e!83221 () Bool)

(assert (=> b!127485 (= e!83221 e!83222)))

(declare-fun res!61623 () Bool)

(assert (=> b!127485 (=> (not res!61623) (not e!83222))))

(assert (=> b!127485 (= res!61623 (not e!83223))))

(declare-fun res!61622 () Bool)

(assert (=> b!127485 (=> (not res!61622) (not e!83223))))

(assert (=> b!127485 (= res!61622 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!13751 () Bool)

(assert (=> bm!13751 (= call!13754 (arrayNoDuplicates!0 (_keys!4516 (v!3122 (underlying!438 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!23388 (Cons!1716 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) #b00000000000000000000000000000000) Nil!1717) Nil!1717)))))

(declare-fun d!38587 () Bool)

(declare-fun res!61624 () Bool)

(assert (=> d!38587 (=> res!61624 e!83221)))

(assert (=> d!38587 (= res!61624 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 (v!3122 (underlying!438 thiss!992))))))))

(assert (=> d!38587 (= (arrayNoDuplicates!0 (_keys!4516 (v!3122 (underlying!438 thiss!992))) #b00000000000000000000000000000000 Nil!1717) e!83221)))

(declare-fun b!127486 () Bool)

(assert (=> b!127486 (= e!83220 call!13754)))

(assert (= (and d!38587 (not res!61624)) b!127485))

(assert (= (and b!127485 res!61622) b!127484))

(assert (= (and b!127485 res!61623) b!127483))

(assert (= (and b!127483 c!23388) b!127482))

(assert (= (and b!127483 (not c!23388)) b!127486))

(assert (= (or b!127482 b!127486) bm!13751))

(assert (=> b!127483 m!147947))

(assert (=> b!127483 m!147947))

(assert (=> b!127483 m!147955))

(assert (=> b!127484 m!147947))

(assert (=> b!127484 m!147947))

(declare-fun m!149425 () Bool)

(assert (=> b!127484 m!149425))

(assert (=> b!127485 m!147947))

(assert (=> b!127485 m!147947))

(assert (=> b!127485 m!147955))

(assert (=> bm!13751 m!147947))

(declare-fun m!149427 () Bool)

(assert (=> bm!13751 m!149427))

(assert (=> b!126362 d!38587))

(declare-fun d!38589 () Bool)

(declare-fun res!61625 () Bool)

(declare-fun e!83224 () Bool)

(assert (=> d!38589 (=> (not res!61625) (not e!83224))))

(assert (=> d!38589 (= res!61625 (simpleValid!86 (_2!1295 lt!65442)))))

(assert (=> d!38589 (= (valid!504 (_2!1295 lt!65442)) e!83224)))

(declare-fun b!127487 () Bool)

(declare-fun res!61626 () Bool)

(assert (=> b!127487 (=> (not res!61626) (not e!83224))))

(assert (=> b!127487 (= res!61626 (= (arrayCountValidKeys!0 (_keys!4516 (_2!1295 lt!65442)) #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65442)))) (_size!580 (_2!1295 lt!65442))))))

(declare-fun b!127488 () Bool)

(declare-fun res!61627 () Bool)

(assert (=> b!127488 (=> (not res!61627) (not e!83224))))

(assert (=> b!127488 (= res!61627 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4516 (_2!1295 lt!65442)) (mask!7039 (_2!1295 lt!65442))))))

(declare-fun b!127489 () Bool)

(assert (=> b!127489 (= e!83224 (arrayNoDuplicates!0 (_keys!4516 (_2!1295 lt!65442)) #b00000000000000000000000000000000 Nil!1717))))

(assert (= (and d!38589 res!61625) b!127487))

(assert (= (and b!127487 res!61626) b!127488))

(assert (= (and b!127488 res!61627) b!127489))

(declare-fun m!149429 () Bool)

(assert (=> d!38589 m!149429))

(declare-fun m!149431 () Bool)

(assert (=> b!127487 m!149431))

(declare-fun m!149433 () Bool)

(assert (=> b!127488 m!149433))

(declare-fun m!149435 () Bool)

(assert (=> b!127489 m!149435))

(assert (=> b!126624 d!38589))

(declare-fun d!38591 () Bool)

(assert (=> d!38591 (= (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65110)) (v!3125 (getValueByKey!166 (toList!858 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65110)))))

(assert (=> d!38031 d!38591))

(declare-fun b!127493 () Bool)

(declare-fun e!83226 () Option!172)

(assert (=> b!127493 (= e!83226 None!170)))

(declare-fun c!23389 () Bool)

(declare-fun d!38593 () Bool)

(assert (=> d!38593 (= c!23389 (and ((_ is Cons!1715) (toList!858 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) (= (_1!1294 (h!2317 (toList!858 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))) lt!65110)))))

(declare-fun e!83225 () Option!172)

(assert (=> d!38593 (= (getValueByKey!166 (toList!858 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) lt!65110) e!83225)))

(declare-fun b!127492 () Bool)

(assert (=> b!127492 (= e!83226 (getValueByKey!166 (t!6078 (toList!858 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) lt!65110))))

(declare-fun b!127490 () Bool)

(assert (=> b!127490 (= e!83225 (Some!171 (_2!1294 (h!2317 (toList!858 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))))

(declare-fun b!127491 () Bool)

(assert (=> b!127491 (= e!83225 e!83226)))

(declare-fun c!23390 () Bool)

(assert (=> b!127491 (= c!23390 (and ((_ is Cons!1715) (toList!858 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) (not (= (_1!1294 (h!2317 (toList!858 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))) lt!65110))))))

(assert (= (and d!38593 c!23389) b!127490))

(assert (= (and d!38593 (not c!23389)) b!127491))

(assert (= (and b!127491 c!23390) b!127492))

(assert (= (and b!127491 (not c!23390)) b!127493))

(declare-fun m!149437 () Bool)

(assert (=> b!127492 m!149437))

(assert (=> d!38031 d!38593))

(assert (=> d!38037 d!38033))

(declare-fun d!38595 () Bool)

(declare-fun e!83228 () Bool)

(assert (=> d!38595 e!83228))

(declare-fun res!61628 () Bool)

(assert (=> d!38595 (=> res!61628 e!83228)))

(declare-fun lt!66035 () Bool)

(assert (=> d!38595 (= res!61628 (not lt!66035))))

(declare-fun lt!66034 () Bool)

(assert (=> d!38595 (= lt!66035 lt!66034)))

(declare-fun lt!66036 () Unit!3936)

(declare-fun e!83227 () Unit!3936)

(assert (=> d!38595 (= lt!66036 e!83227)))

(declare-fun c!23391 () Bool)

(assert (=> d!38595 (= c!23391 lt!66034)))

(assert (=> d!38595 (= lt!66034 (containsKey!170 (toList!858 lt!65113) lt!65106))))

(assert (=> d!38595 (= (contains!877 lt!65113 lt!65106) lt!66035)))

(declare-fun b!127494 () Bool)

(declare-fun lt!66037 () Unit!3936)

(assert (=> b!127494 (= e!83227 lt!66037)))

(assert (=> b!127494 (= lt!66037 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65113) lt!65106))))

(assert (=> b!127494 (isDefined!120 (getValueByKey!166 (toList!858 lt!65113) lt!65106))))

(declare-fun b!127495 () Bool)

(declare-fun Unit!3992 () Unit!3936)

(assert (=> b!127495 (= e!83227 Unit!3992)))

(declare-fun b!127496 () Bool)

(assert (=> b!127496 (= e!83228 (isDefined!120 (getValueByKey!166 (toList!858 lt!65113) lt!65106)))))

(assert (= (and d!38595 c!23391) b!127494))

(assert (= (and d!38595 (not c!23391)) b!127495))

(assert (= (and d!38595 (not res!61628)) b!127496))

(declare-fun m!149439 () Bool)

(assert (=> d!38595 m!149439))

(declare-fun m!149441 () Bool)

(assert (=> b!127494 m!149441))

(assert (=> b!127494 m!147419))

(assert (=> b!127494 m!147419))

(declare-fun m!149443 () Bool)

(assert (=> b!127494 m!149443))

(assert (=> b!127496 m!147419))

(assert (=> b!127496 m!147419))

(assert (=> b!127496 m!149443))

(assert (=> d!38037 d!38595))

(assert (=> d!38037 d!38023))

(declare-fun d!38597 () Bool)

(assert (=> d!38597 (= (apply!111 (+!165 lt!65113 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65106) (apply!111 lt!65113 lt!65106))))

(assert (=> d!38597 true))

(declare-fun _$34!948 () Unit!3936)

(assert (=> d!38597 (= (choose!768 lt!65113 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65106) _$34!948)))

(declare-fun bs!5286 () Bool)

(assert (= bs!5286 d!38597))

(assert (=> bs!5286 m!147189))

(assert (=> bs!5286 m!147189))

(assert (=> bs!5286 m!147201))

(assert (=> bs!5286 m!147187))

(assert (=> d!38037 d!38597))

(assert (=> d!38037 d!38025))

(assert (=> d!38091 d!38077))

(declare-fun d!38599 () Bool)

(declare-fun e!83240 () Bool)

(assert (=> d!38599 e!83240))

(declare-fun c!23396 () Bool)

(declare-fun lt!66040 () SeekEntryResult!280)

(assert (=> d!38599 (= c!23396 ((_ is MissingZero!280) lt!66040))))

(assert (=> d!38599 (= lt!66040 (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(assert (=> d!38599 true))

(declare-fun _$34!951 () Unit!3936)

(assert (=> d!38599 (= (choose!773 (_keys!4516 newMap!16) (_values!2766 newMap!16) (mask!7039 newMap!16) (extraKeys!2564 newMap!16) (zeroValue!2646 newMap!16) (minValue!2646 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (defaultEntry!2783 newMap!16)) _$34!951)))

(declare-fun b!127513 () Bool)

(declare-fun res!61639 () Bool)

(declare-fun e!83237 () Bool)

(assert (=> b!127513 (=> (not res!61639) (not e!83237))))

(declare-fun call!13759 () Bool)

(assert (=> b!127513 (= res!61639 call!13759)))

(declare-fun e!83239 () Bool)

(assert (=> b!127513 (= e!83239 e!83237)))

(declare-fun b!127514 () Bool)

(assert (=> b!127514 (= e!83240 e!83239)))

(declare-fun c!23397 () Bool)

(assert (=> b!127514 (= c!23397 ((_ is MissingVacant!280) lt!66040))))

(declare-fun b!127515 () Bool)

(declare-fun call!13760 () Bool)

(assert (=> b!127515 (= e!83237 (not call!13760))))

(declare-fun bm!13756 () Bool)

(assert (=> bm!13756 (= call!13760 (arrayContainsKey!0 (_keys!4516 newMap!16) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!127516 () Bool)

(declare-fun e!83238 () Bool)

(assert (=> b!127516 (= e!83240 e!83238)))

(declare-fun res!61638 () Bool)

(assert (=> b!127516 (= res!61638 call!13759)))

(assert (=> b!127516 (=> (not res!61638) (not e!83238))))

(declare-fun bm!13757 () Bool)

(assert (=> bm!13757 (= call!13759 (inRange!0 (ite c!23396 (index!3275 lt!66040) (index!3278 lt!66040)) (mask!7039 newMap!16)))))

(declare-fun b!127517 () Bool)

(declare-fun res!61637 () Bool)

(assert (=> b!127517 (= res!61637 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3275 lt!66040)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!127517 (=> (not res!61637) (not e!83238))))

(declare-fun b!127518 () Bool)

(assert (=> b!127518 (= e!83239 ((_ is Undefined!280) lt!66040))))

(declare-fun b!127519 () Bool)

(declare-fun res!61640 () Bool)

(assert (=> b!127519 (=> (not res!61640) (not e!83237))))

(assert (=> b!127519 (= res!61640 (= (select (arr!2224 (_keys!4516 newMap!16)) (index!3278 lt!66040)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127520 () Bool)

(assert (=> b!127520 (= e!83238 (not call!13760))))

(assert (= (and d!38599 c!23396) b!127516))

(assert (= (and d!38599 (not c!23396)) b!127514))

(assert (= (and b!127516 res!61638) b!127517))

(assert (= (and b!127517 res!61637) b!127520))

(assert (= (and b!127514 c!23397) b!127513))

(assert (= (and b!127514 (not c!23397)) b!127518))

(assert (= (and b!127513 res!61639) b!127519))

(assert (= (and b!127519 res!61640) b!127515))

(assert (= (or b!127516 b!127513) bm!13757))

(assert (= (or b!127520 b!127515) bm!13756))

(declare-fun m!149445 () Bool)

(assert (=> b!127517 m!149445))

(assert (=> bm!13756 m!147095))

(assert (=> bm!13756 m!147271))

(declare-fun m!149447 () Bool)

(assert (=> bm!13757 m!149447))

(assert (=> d!38599 m!147095))

(assert (=> d!38599 m!147245))

(declare-fun m!149449 () Bool)

(assert (=> b!127519 m!149449))

(assert (=> d!38091 d!38599))

(assert (=> d!38091 d!38139))

(declare-fun d!38601 () Bool)

(declare-fun isEmpty!403 (List!1719) Bool)

(assert (=> d!38601 (= (isEmpty!401 lt!65233) (isEmpty!403 (toList!858 lt!65233)))))

(declare-fun bs!5287 () Bool)

(assert (= bs!5287 d!38601))

(declare-fun m!149451 () Bool)

(assert (=> bs!5287 m!149451))

(assert (=> b!126399 d!38601))

(declare-fun b!127521 () Bool)

(declare-fun e!83241 () (_ BitVec 32))

(declare-fun call!13761 () (_ BitVec 32))

(assert (=> b!127521 (= e!83241 (bvadd #b00000000000000000000000000000001 call!13761))))

(declare-fun b!127522 () Bool)

(declare-fun e!83242 () (_ BitVec 32))

(assert (=> b!127522 (= e!83242 e!83241)))

(declare-fun c!23399 () Bool)

(assert (=> b!127522 (= c!23399 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!127523 () Bool)

(assert (=> b!127523 (= e!83242 #b00000000000000000000000000000000)))

(declare-fun d!38603 () Bool)

(declare-fun lt!66041 () (_ BitVec 32))

(assert (=> d!38603 (and (bvsge lt!66041 #b00000000000000000000000000000000) (bvsle lt!66041 (bvsub (size!2488 (_keys!4516 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!38603 (= lt!66041 e!83242)))

(declare-fun c!23398 () Bool)

(assert (=> d!38603 (= c!23398 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38603 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 (_keys!4516 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2488 (_keys!4516 newMap!16)) (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38603 (= (arrayCountValidKeys!0 (_keys!4516 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 (_keys!4516 newMap!16))) lt!66041)))

(declare-fun bm!13758 () Bool)

(assert (=> bm!13758 (= call!13761 (arrayCountValidKeys!0 (_keys!4516 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2488 (_keys!4516 newMap!16))))))

(declare-fun b!127524 () Bool)

(assert (=> b!127524 (= e!83241 call!13761)))

(assert (= (and d!38603 c!23398) b!127523))

(assert (= (and d!38603 (not c!23398)) b!127522))

(assert (= (and b!127522 c!23399) b!127521))

(assert (= (and b!127522 (not c!23399)) b!127524))

(assert (= (or b!127521 b!127524) bm!13758))

(assert (=> b!127522 m!148481))

(assert (=> b!127522 m!148481))

(assert (=> b!127522 m!149323))

(declare-fun m!149453 () Bool)

(assert (=> bm!13758 m!149453))

(assert (=> bm!13612 d!38603))

(declare-fun d!38605 () Bool)

(declare-fun e!83243 () Bool)

(assert (=> d!38605 e!83243))

(declare-fun res!61641 () Bool)

(assert (=> d!38605 (=> (not res!61641) (not e!83243))))

(declare-fun lt!66043 () ListLongMap!1685)

(assert (=> d!38605 (= res!61641 (contains!877 lt!66043 (_1!1294 (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(declare-fun lt!66042 () List!1719)

(assert (=> d!38605 (= lt!66043 (ListLongMap!1686 lt!66042))))

(declare-fun lt!66045 () Unit!3936)

(declare-fun lt!66044 () Unit!3936)

(assert (=> d!38605 (= lt!66045 lt!66044)))

(assert (=> d!38605 (= (getValueByKey!166 lt!66042 (_1!1294 (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(assert (=> d!38605 (= lt!66044 (lemmaContainsTupThenGetReturnValue!83 lt!66042 (_1!1294 (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (_2!1294 (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(assert (=> d!38605 (= lt!66042 (insertStrictlySorted!85 (toList!858 (ite c!23166 call!13667 (ite c!23169 call!13664 call!13666))) (_1!1294 (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (_2!1294 (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(assert (=> d!38605 (= (+!165 (ite c!23166 call!13667 (ite c!23169 call!13664 call!13666)) (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) lt!66043)))

(declare-fun b!127525 () Bool)

(declare-fun res!61642 () Bool)

(assert (=> b!127525 (=> (not res!61642) (not e!83243))))

(assert (=> b!127525 (= res!61642 (= (getValueByKey!166 (toList!858 lt!66043) (_1!1294 (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))) (Some!171 (_2!1294 (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))))

(declare-fun b!127526 () Bool)

(assert (=> b!127526 (= e!83243 (contains!878 (toList!858 lt!66043) (ite (or c!23166 c!23169) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 newMap!16)) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (= (and d!38605 res!61641) b!127525))

(assert (= (and b!127525 res!61642) b!127526))

(declare-fun m!149455 () Bool)

(assert (=> d!38605 m!149455))

(declare-fun m!149457 () Bool)

(assert (=> d!38605 m!149457))

(declare-fun m!149459 () Bool)

(assert (=> d!38605 m!149459))

(declare-fun m!149461 () Bool)

(assert (=> d!38605 m!149461))

(declare-fun m!149463 () Bool)

(assert (=> b!127525 m!149463))

(declare-fun m!149465 () Bool)

(assert (=> b!127526 m!149465))

(assert (=> bm!13661 d!38605))

(declare-fun b!127527 () Bool)

(declare-fun e!83244 () Bool)

(declare-fun call!13762 () Bool)

(assert (=> b!127527 (= e!83244 call!13762)))

(declare-fun b!127528 () Bool)

(declare-fun e!83246 () Bool)

(assert (=> b!127528 (= e!83246 e!83244)))

(declare-fun c!23400 () Bool)

(assert (=> b!127528 (= c!23400 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000)))))

(declare-fun b!127529 () Bool)

(declare-fun e!83247 () Bool)

(assert (=> b!127529 (= e!83247 (contains!879 Nil!1717 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000)))))

(declare-fun b!127530 () Bool)

(declare-fun e!83245 () Bool)

(assert (=> b!127530 (= e!83245 e!83246)))

(declare-fun res!61644 () Bool)

(assert (=> b!127530 (=> (not res!61644) (not e!83246))))

(assert (=> b!127530 (= res!61644 (not e!83247))))

(declare-fun res!61643 () Bool)

(assert (=> b!127530 (=> (not res!61643) (not e!83247))))

(assert (=> b!127530 (= res!61643 (validKeyInArray!0 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000)))))

(declare-fun bm!13759 () Bool)

(assert (=> bm!13759 (= call!13762 (arrayNoDuplicates!0 (_keys!4516 (_2!1295 lt!65202)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!23400 (Cons!1716 (select (arr!2224 (_keys!4516 (_2!1295 lt!65202))) #b00000000000000000000000000000000) Nil!1717) Nil!1717)))))

(declare-fun d!38607 () Bool)

(declare-fun res!61645 () Bool)

(assert (=> d!38607 (=> res!61645 e!83245)))

(assert (=> d!38607 (= res!61645 (bvsge #b00000000000000000000000000000000 (size!2488 (_keys!4516 (_2!1295 lt!65202)))))))

(assert (=> d!38607 (= (arrayNoDuplicates!0 (_keys!4516 (_2!1295 lt!65202)) #b00000000000000000000000000000000 Nil!1717) e!83245)))

(declare-fun b!127531 () Bool)

(assert (=> b!127531 (= e!83244 call!13762)))

(assert (= (and d!38607 (not res!61645)) b!127530))

(assert (= (and b!127530 res!61643) b!127529))

(assert (= (and b!127530 res!61644) b!127528))

(assert (= (and b!127528 c!23400) b!127527))

(assert (= (and b!127528 (not c!23400)) b!127531))

(assert (= (or b!127527 b!127531) bm!13759))

(assert (=> b!127528 m!148095))

(assert (=> b!127528 m!148095))

(assert (=> b!127528 m!148103))

(assert (=> b!127529 m!148095))

(assert (=> b!127529 m!148095))

(declare-fun m!149467 () Bool)

(assert (=> b!127529 m!149467))

(assert (=> b!127530 m!148095))

(assert (=> b!127530 m!148095))

(assert (=> b!127530 m!148103))

(assert (=> bm!13759 m!148095))

(declare-fun m!149469 () Bool)

(assert (=> bm!13759 m!149469))

(assert (=> b!126365 d!38607))

(declare-fun b!127533 () Bool)

(declare-fun e!83248 () Bool)

(declare-fun call!13763 () Bool)

(assert (=> b!127533 (= e!83248 call!13763)))

(declare-fun bm!13760 () Bool)

(assert (=> bm!13760 (= call!13763 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4516 newMap!16) (mask!7039 newMap!16)))))

(declare-fun b!127534 () Bool)

(declare-fun e!83249 () Bool)

(assert (=> b!127534 (= e!83249 call!13763)))

(declare-fun b!127535 () Bool)

(assert (=> b!127535 (= e!83248 e!83249)))

(declare-fun lt!66047 () (_ BitVec 64))

(assert (=> b!127535 (= lt!66047 (select (arr!2224 (_keys!4516 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!66046 () Unit!3936)

(assert (=> b!127535 (= lt!66046 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4516 newMap!16) lt!66047 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!127535 (arrayContainsKey!0 (_keys!4516 newMap!16) lt!66047 #b00000000000000000000000000000000)))

(declare-fun lt!66048 () Unit!3936)

(assert (=> b!127535 (= lt!66048 lt!66046)))

(declare-fun res!61646 () Bool)

(assert (=> b!127535 (= res!61646 (= (seekEntryOrOpen!0 (select (arr!2224 (_keys!4516 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4516 newMap!16) (mask!7039 newMap!16)) (Found!280 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!127535 (=> (not res!61646) (not e!83249))))

(declare-fun d!38609 () Bool)

(declare-fun res!61647 () Bool)

(declare-fun e!83250 () Bool)

(assert (=> d!38609 (=> res!61647 e!83250)))

(assert (=> d!38609 (= res!61647 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2488 (_keys!4516 newMap!16))))))

(assert (=> d!38609 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4516 newMap!16) (mask!7039 newMap!16)) e!83250)))

(declare-fun b!127532 () Bool)

(assert (=> b!127532 (= e!83250 e!83248)))

(declare-fun c!23401 () Bool)

(assert (=> b!127532 (= c!23401 (validKeyInArray!0 (select (arr!2224 (_keys!4516 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!38609 (not res!61647)) b!127532))

(assert (= (and b!127532 c!23401) b!127535))

(assert (= (and b!127532 (not c!23401)) b!127533))

(assert (= (and b!127535 res!61646) b!127534))

(assert (= (or b!127534 b!127533) bm!13760))

(declare-fun m!149471 () Bool)

(assert (=> bm!13760 m!149471))

(assert (=> b!127535 m!148481))

(declare-fun m!149473 () Bool)

(assert (=> b!127535 m!149473))

(declare-fun m!149475 () Bool)

(assert (=> b!127535 m!149475))

(assert (=> b!127535 m!148481))

(declare-fun m!149477 () Bool)

(assert (=> b!127535 m!149477))

(assert (=> b!127532 m!148481))

(assert (=> b!127532 m!148481))

(assert (=> b!127532 m!149323))

(assert (=> bm!13618 d!38609))

(declare-fun d!38611 () Bool)

(declare-fun e!83251 () Bool)

(assert (=> d!38611 e!83251))

(declare-fun res!61648 () Bool)

(assert (=> d!38611 (=> (not res!61648) (not e!83251))))

(declare-fun lt!66050 () ListLongMap!1685)

(assert (=> d!38611 (= res!61648 (contains!877 lt!66050 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(declare-fun lt!66049 () List!1719)

(assert (=> d!38611 (= lt!66050 (ListLongMap!1686 lt!66049))))

(declare-fun lt!66052 () Unit!3936)

(declare-fun lt!66051 () Unit!3936)

(assert (=> d!38611 (= lt!66052 lt!66051)))

(assert (=> d!38611 (= (getValueByKey!166 lt!66049 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (=> d!38611 (= lt!66051 (lemmaContainsTupThenGetReturnValue!83 lt!66049 (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (=> d!38611 (= lt!66049 (insertStrictlySorted!85 (toList!858 call!13663) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))))))

(assert (=> d!38611 (= (+!165 call!13663 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))) lt!66050)))

(declare-fun b!127536 () Bool)

(declare-fun res!61649 () Bool)

(assert (=> b!127536 (=> (not res!61649) (not e!83251))))

(assert (=> b!127536 (= res!61649 (= (getValueByKey!166 (toList!858 lt!66050) (_1!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))))

(declare-fun b!127537 () Bool)

(assert (=> b!127537 (= e!83251 (contains!878 (toList!858 lt!66050) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 newMap!16))))))

(assert (= (and d!38611 res!61648) b!127536))

(assert (= (and b!127536 res!61649) b!127537))

(declare-fun m!149479 () Bool)

(assert (=> d!38611 m!149479))

(declare-fun m!149481 () Bool)

(assert (=> d!38611 m!149481))

(declare-fun m!149483 () Bool)

(assert (=> d!38611 m!149483))

(declare-fun m!149485 () Bool)

(assert (=> d!38611 m!149485))

(declare-fun m!149487 () Bool)

(assert (=> b!127536 m!149487))

(declare-fun m!149489 () Bool)

(assert (=> b!127537 m!149489))

(assert (=> b!126713 d!38611))

(declare-fun d!38613 () Bool)

(assert (=> d!38613 (= (apply!111 lt!65514 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1455 (getValueByKey!166 (toList!858 lt!65514) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5288 () Bool)

(assert (= bs!5288 d!38613))

(declare-fun m!149491 () Bool)

(assert (=> bs!5288 m!149491))

(assert (=> bs!5288 m!149491))

(declare-fun m!149493 () Bool)

(assert (=> bs!5288 m!149493))

(assert (=> b!126698 d!38613))

(assert (=> bm!13623 d!38513))

(declare-fun lt!66053 () Bool)

(declare-fun d!38615 () Bool)

(assert (=> d!38615 (= lt!66053 (select (content!124 (toList!858 lt!65280)) (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!83253 () Bool)

(assert (=> d!38615 (= lt!66053 e!83253)))

(declare-fun res!61650 () Bool)

(assert (=> d!38615 (=> (not res!61650) (not e!83253))))

(assert (=> d!38615 (= res!61650 ((_ is Cons!1715) (toList!858 lt!65280)))))

(assert (=> d!38615 (= (contains!878 (toList!858 lt!65280) (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!66053)))

(declare-fun b!127538 () Bool)

(declare-fun e!83252 () Bool)

(assert (=> b!127538 (= e!83253 e!83252)))

(declare-fun res!61651 () Bool)

(assert (=> b!127538 (=> res!61651 e!83252)))

(assert (=> b!127538 (= res!61651 (= (h!2317 (toList!858 lt!65280)) (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!127539 () Bool)

(assert (=> b!127539 (= e!83252 (contains!878 (t!6078 (toList!858 lt!65280)) (ite c!23078 (ite c!23066 (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2569 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355) (get!1452 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) from!355) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!38615 res!61650) b!127538))

(assert (= (and b!127538 (not res!61651)) b!127539))

(declare-fun m!149495 () Bool)

(assert (=> d!38615 m!149495))

(declare-fun m!149497 () Bool)

(assert (=> d!38615 m!149497))

(declare-fun m!149499 () Bool)

(assert (=> b!127539 m!149499))

(assert (=> b!126429 d!38615))

(assert (=> d!38041 d!38015))

(assert (=> d!38041 d!38031))

(declare-fun d!38617 () Bool)

(declare-fun e!83255 () Bool)

(assert (=> d!38617 e!83255))

(declare-fun res!61652 () Bool)

(assert (=> d!38617 (=> res!61652 e!83255)))

(declare-fun lt!66055 () Bool)

(assert (=> d!38617 (= res!61652 (not lt!66055))))

(declare-fun lt!66054 () Bool)

(assert (=> d!38617 (= lt!66055 lt!66054)))

(declare-fun lt!66056 () Unit!3936)

(declare-fun e!83254 () Unit!3936)

(assert (=> d!38617 (= lt!66056 e!83254)))

(declare-fun c!23402 () Bool)

(assert (=> d!38617 (= c!23402 lt!66054)))

(assert (=> d!38617 (= lt!66054 (containsKey!170 (toList!858 lt!65115) lt!65110))))

(assert (=> d!38617 (= (contains!877 lt!65115 lt!65110) lt!66055)))

(declare-fun b!127540 () Bool)

(declare-fun lt!66057 () Unit!3936)

(assert (=> b!127540 (= e!83254 lt!66057)))

(assert (=> b!127540 (= lt!66057 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65115) lt!65110))))

(assert (=> b!127540 (isDefined!120 (getValueByKey!166 (toList!858 lt!65115) lt!65110))))

(declare-fun b!127541 () Bool)

(declare-fun Unit!3993 () Unit!3936)

(assert (=> b!127541 (= e!83254 Unit!3993)))

(declare-fun b!127542 () Bool)

(assert (=> b!127542 (= e!83255 (isDefined!120 (getValueByKey!166 (toList!858 lt!65115) lt!65110)))))

(assert (= (and d!38617 c!23402) b!127540))

(assert (= (and d!38617 (not c!23402)) b!127541))

(assert (= (and d!38617 (not res!61652)) b!127542))

(declare-fun m!149501 () Bool)

(assert (=> d!38617 m!149501))

(declare-fun m!149503 () Bool)

(assert (=> b!127540 m!149503))

(assert (=> b!127540 m!147355))

(assert (=> b!127540 m!147355))

(declare-fun m!149505 () Bool)

(assert (=> b!127540 m!149505))

(assert (=> b!127542 m!147355))

(assert (=> b!127542 m!147355))

(assert (=> b!127542 m!149505))

(assert (=> d!38041 d!38617))

(assert (=> d!38041 d!38043))

(declare-fun d!38619 () Bool)

(assert (=> d!38619 (= (apply!111 (+!165 lt!65115 (tuple2!2569 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))))) lt!65110) (apply!111 lt!65115 lt!65110))))

(assert (=> d!38619 true))

(declare-fun _$34!952 () Unit!3936)

(assert (=> d!38619 (= (choose!768 lt!65115 lt!65117 (minValue!2646 (v!3122 (underlying!438 thiss!992))) lt!65110) _$34!952)))

(declare-fun bs!5289 () Bool)

(assert (= bs!5289 d!38619))

(assert (=> bs!5289 m!147183))

(assert (=> bs!5289 m!147183))

(assert (=> bs!5289 m!147197))

(assert (=> bs!5289 m!147179))

(assert (=> d!38041 d!38619))

(declare-fun d!38621 () Bool)

(declare-fun res!61653 () Bool)

(declare-fun e!83256 () Bool)

(assert (=> d!38621 (=> res!61653 e!83256)))

(assert (=> d!38621 (= res!61653 (and ((_ is Cons!1715) (toList!858 lt!65101)) (= (_1!1294 (h!2317 (toList!858 lt!65101))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!38621 (= (containsKey!170 (toList!858 lt!65101) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!83256)))

(declare-fun b!127543 () Bool)

(declare-fun e!83257 () Bool)

(assert (=> b!127543 (= e!83256 e!83257)))

(declare-fun res!61654 () Bool)

(assert (=> b!127543 (=> (not res!61654) (not e!83257))))

(assert (=> b!127543 (= res!61654 (and (or (not ((_ is Cons!1715) (toList!858 lt!65101))) (bvsle (_1!1294 (h!2317 (toList!858 lt!65101))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1715) (toList!858 lt!65101)) (bvslt (_1!1294 (h!2317 (toList!858 lt!65101))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!127544 () Bool)

(assert (=> b!127544 (= e!83257 (containsKey!170 (t!6078 (toList!858 lt!65101)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!38621 (not res!61653)) b!127543))

(assert (= (and b!127543 res!61654) b!127544))

(assert (=> b!127544 m!147165))

(declare-fun m!149507 () Bool)

(assert (=> b!127544 m!149507))

(assert (=> d!38095 d!38621))

(declare-fun b!127548 () Bool)

(declare-fun e!83259 () Option!172)

(assert (=> b!127548 (= e!83259 None!170)))

(declare-fun c!23403 () Bool)

(declare-fun d!38623 () Bool)

(assert (=> d!38623 (= c!23403 (and ((_ is Cons!1715) (toList!858 lt!65248)) (= (_1!1294 (h!2317 (toList!858 lt!65248))) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(declare-fun e!83258 () Option!172)

(assert (=> d!38623 (= (getValueByKey!166 (toList!858 lt!65248) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))) e!83258)))

(declare-fun b!127547 () Bool)

(assert (=> b!127547 (= e!83259 (getValueByKey!166 (t!6078 (toList!858 lt!65248)) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun b!127545 () Bool)

(assert (=> b!127545 (= e!83258 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65248)))))))

(declare-fun b!127546 () Bool)

(assert (=> b!127546 (= e!83258 e!83259)))

(declare-fun c!23404 () Bool)

(assert (=> b!127546 (= c!23404 (and ((_ is Cons!1715) (toList!858 lt!65248)) (not (= (_1!1294 (h!2317 (toList!858 lt!65248))) (_1!1294 (ite (or c!23032 c!23035) (tuple2!2569 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2646 (v!3122 (underlying!438 thiss!992)))) (tuple2!2569 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))))

(assert (= (and d!38623 c!23403) b!127545))

(assert (= (and d!38623 (not c!23403)) b!127546))

(assert (= (and b!127546 c!23404) b!127547))

(assert (= (and b!127546 (not c!23404)) b!127548))

(declare-fun m!149509 () Bool)

(assert (=> b!127547 m!149509))

(assert (=> b!126408 d!38623))

(declare-fun d!38625 () Bool)

(declare-fun e!83261 () Bool)

(assert (=> d!38625 e!83261))

(declare-fun res!61655 () Bool)

(assert (=> d!38625 (=> res!61655 e!83261)))

(declare-fun lt!66059 () Bool)

(assert (=> d!38625 (= res!61655 (not lt!66059))))

(declare-fun lt!66058 () Bool)

(assert (=> d!38625 (= lt!66059 lt!66058)))

(declare-fun lt!66060 () Unit!3936)

(declare-fun e!83260 () Unit!3936)

(assert (=> d!38625 (= lt!66060 e!83260)))

(declare-fun c!23405 () Bool)

(assert (=> d!38625 (= c!23405 lt!66058)))

(assert (=> d!38625 (= lt!66058 (containsKey!170 (toList!858 lt!65514) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!38625 (= (contains!877 lt!65514 #b0000000000000000000000000000000000000000000000000000000000000000) lt!66059)))

(declare-fun b!127549 () Bool)

(declare-fun lt!66061 () Unit!3936)

(assert (=> b!127549 (= e!83260 lt!66061)))

(assert (=> b!127549 (= lt!66061 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65514) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!127549 (isDefined!120 (getValueByKey!166 (toList!858 lt!65514) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!127550 () Bool)

(declare-fun Unit!3994 () Unit!3936)

(assert (=> b!127550 (= e!83260 Unit!3994)))

(declare-fun b!127551 () Bool)

(assert (=> b!127551 (= e!83261 (isDefined!120 (getValueByKey!166 (toList!858 lt!65514) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!38625 c!23405) b!127549))

(assert (= (and d!38625 (not c!23405)) b!127550))

(assert (= (and d!38625 (not res!61655)) b!127551))

(declare-fun m!149511 () Bool)

(assert (=> d!38625 m!149511))

(declare-fun m!149513 () Bool)

(assert (=> b!127549 m!149513))

(assert (=> b!127549 m!149491))

(assert (=> b!127549 m!149491))

(declare-fun m!149515 () Bool)

(assert (=> b!127549 m!149515))

(assert (=> b!127551 m!149491))

(assert (=> b!127551 m!149491))

(assert (=> b!127551 m!149515))

(assert (=> bm!13658 d!38625))

(declare-fun d!38627 () Bool)

(declare-fun e!83263 () Bool)

(assert (=> d!38627 e!83263))

(declare-fun res!61656 () Bool)

(assert (=> d!38627 (=> res!61656 e!83263)))

(declare-fun lt!66063 () Bool)

(assert (=> d!38627 (= res!61656 (not lt!66063))))

(declare-fun lt!66062 () Bool)

(assert (=> d!38627 (= lt!66063 lt!66062)))

(declare-fun lt!66064 () Unit!3936)

(declare-fun e!83262 () Unit!3936)

(assert (=> d!38627 (= lt!66064 e!83262)))

(declare-fun c!23406 () Bool)

(assert (=> d!38627 (= c!23406 lt!66062)))

(assert (=> d!38627 (= lt!66062 (containsKey!170 (toList!858 lt!65233) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!38627 (= (contains!877 lt!65233 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!66063)))

(declare-fun b!127552 () Bool)

(declare-fun lt!66065 () Unit!3936)

(assert (=> b!127552 (= e!83262 lt!66065)))

(assert (=> b!127552 (= lt!66065 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65233) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!127552 (isDefined!120 (getValueByKey!166 (toList!858 lt!65233) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!127553 () Bool)

(declare-fun Unit!3995 () Unit!3936)

(assert (=> b!127553 (= e!83262 Unit!3995)))

(declare-fun b!127554 () Bool)

(assert (=> b!127554 (= e!83263 (isDefined!120 (getValueByKey!166 (toList!858 lt!65233) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!38627 c!23406) b!127552))

(assert (= (and d!38627 (not c!23406)) b!127553))

(assert (= (and d!38627 (not res!61656)) b!127554))

(assert (=> d!38627 m!147165))

(declare-fun m!149517 () Bool)

(assert (=> d!38627 m!149517))

(assert (=> b!127552 m!147165))

(declare-fun m!149519 () Bool)

(assert (=> b!127552 m!149519))

(assert (=> b!127552 m!147165))

(declare-fun m!149521 () Bool)

(assert (=> b!127552 m!149521))

(assert (=> b!127552 m!149521))

(declare-fun m!149523 () Bool)

(assert (=> b!127552 m!149523))

(assert (=> b!127554 m!147165))

(assert (=> b!127554 m!149521))

(assert (=> b!127554 m!149521))

(assert (=> b!127554 m!149523))

(assert (=> b!126395 d!38627))

(declare-fun d!38629 () Bool)

(assert (=> d!38629 (= (get!1453 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!416 (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3121 (select (arr!2225 (_values!2766 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!126550 d!38629))

(declare-fun d!38631 () Bool)

(assert (=> d!38631 (= (apply!111 lt!65233 (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1455 (getValueByKey!166 (toList!858 lt!65233) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5290 () Bool)

(assert (= bs!5290 d!38631))

(assert (=> bs!5290 m!147165))

(assert (=> bs!5290 m!149521))

(assert (=> bs!5290 m!149521))

(declare-fun m!149525 () Bool)

(assert (=> bs!5290 m!149525))

(assert (=> b!126391 d!38631))

(assert (=> b!126391 d!38087))

(declare-fun d!38633 () Bool)

(declare-fun e!83265 () Bool)

(assert (=> d!38633 e!83265))

(declare-fun res!61657 () Bool)

(assert (=> d!38633 (=> res!61657 e!83265)))

(declare-fun lt!66067 () Bool)

(assert (=> d!38633 (= res!61657 (not lt!66067))))

(declare-fun lt!66066 () Bool)

(assert (=> d!38633 (= lt!66067 lt!66066)))

(declare-fun lt!66068 () Unit!3936)

(declare-fun e!83264 () Unit!3936)

(assert (=> d!38633 (= lt!66068 e!83264)))

(declare-fun c!23407 () Bool)

(assert (=> d!38633 (= c!23407 lt!66066)))

(assert (=> d!38633 (= lt!66066 (containsKey!170 (toList!858 lt!65453) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!38633 (= (contains!877 lt!65453 (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)) lt!66067)))

(declare-fun b!127555 () Bool)

(declare-fun lt!66069 () Unit!3936)

(assert (=> b!127555 (= e!83264 lt!66069)))

(assert (=> b!127555 (= lt!66069 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 lt!65453) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!127555 (isDefined!120 (getValueByKey!166 (toList!858 lt!65453) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!127556 () Bool)

(declare-fun Unit!3996 () Unit!3936)

(assert (=> b!127556 (= e!83264 Unit!3996)))

(declare-fun b!127557 () Bool)

(assert (=> b!127557 (= e!83265 (isDefined!120 (getValueByKey!166 (toList!858 lt!65453) (select (arr!2224 (_keys!4516 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!38633 c!23407) b!127555))

(assert (= (and d!38633 (not c!23407)) b!127556))

(assert (= (and d!38633 (not res!61657)) b!127557))

(assert (=> d!38633 m!147467))

(declare-fun m!149527 () Bool)

(assert (=> d!38633 m!149527))

(assert (=> b!127555 m!147467))

(declare-fun m!149529 () Bool)

(assert (=> b!127555 m!149529))

(assert (=> b!127555 m!147467))

(assert (=> b!127555 m!148135))

(assert (=> b!127555 m!148135))

(declare-fun m!149531 () Bool)

(assert (=> b!127555 m!149531))

(assert (=> b!127557 m!147467))

(assert (=> b!127557 m!148135))

(assert (=> b!127557 m!148135))

(assert (=> b!127557 m!149531))

(assert (=> b!126643 d!38633))

(declare-fun d!38635 () Bool)

(declare-fun e!83266 () Bool)

(assert (=> d!38635 e!83266))

(declare-fun res!61658 () Bool)

(assert (=> d!38635 (=> (not res!61658) (not e!83266))))

(declare-fun lt!66071 () ListLongMap!1685)

(assert (=> d!38635 (= res!61658 (contains!877 lt!66071 (_1!1294 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16)))))))

(declare-fun lt!66070 () List!1719)

(assert (=> d!38635 (= lt!66071 (ListLongMap!1686 lt!66070))))

(declare-fun lt!66073 () Unit!3936)

(declare-fun lt!66072 () Unit!3936)

(assert (=> d!38635 (= lt!66073 lt!66072)))

(assert (=> d!38635 (= (getValueByKey!166 lt!66070 (_1!1294 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38635 (= lt!66072 (lemmaContainsTupThenGetReturnValue!83 lt!66070 (_1!1294 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38635 (= lt!66070 (insertStrictlySorted!85 (toList!858 lt!65496) (_1!1294 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38635 (= (+!165 lt!65496 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16))) lt!66071)))

(declare-fun b!127558 () Bool)

(declare-fun res!61659 () Bool)

(assert (=> b!127558 (=> (not res!61659) (not e!83266))))

(assert (=> b!127558 (= res!61659 (= (getValueByKey!166 (toList!858 lt!66071) (_1!1294 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16))))))))

(declare-fun b!127559 () Bool)

(assert (=> b!127559 (= e!83266 (contains!878 (toList!858 lt!66071) (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16))))))

(assert (= (and d!38635 res!61658) b!127558))

(assert (= (and b!127558 res!61659) b!127559))

(declare-fun m!149533 () Bool)

(assert (=> d!38635 m!149533))

(declare-fun m!149535 () Bool)

(assert (=> d!38635 m!149535))

(declare-fun m!149537 () Bool)

(assert (=> d!38635 m!149537))

(declare-fun m!149539 () Bool)

(assert (=> d!38635 m!149539))

(declare-fun m!149541 () Bool)

(assert (=> b!127558 m!149541))

(declare-fun m!149543 () Bool)

(assert (=> b!127559 m!149543))

(assert (=> b!126668 d!38635))

(declare-fun d!38637 () Bool)

(assert (=> d!38637 (contains!877 (+!165 lt!65504 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16))) lt!65484)))

(declare-fun lt!66074 () Unit!3936)

(assert (=> d!38637 (= lt!66074 (choose!769 lt!65504 lt!65493 (zeroValue!2646 newMap!16) lt!65484))))

(assert (=> d!38637 (contains!877 lt!65504 lt!65484)))

(assert (=> d!38637 (= (addStillContains!87 lt!65504 lt!65493 (zeroValue!2646 newMap!16) lt!65484) lt!66074)))

(declare-fun bs!5291 () Bool)

(assert (= bs!5291 d!38637))

(assert (=> bs!5291 m!147799))

(assert (=> bs!5291 m!147799))

(assert (=> bs!5291 m!147801))

(declare-fun m!149545 () Bool)

(assert (=> bs!5291 m!149545))

(declare-fun m!149547 () Bool)

(assert (=> bs!5291 m!149547))

(assert (=> b!126668 d!38637))

(declare-fun d!38639 () Bool)

(assert (=> d!38639 (= (apply!111 (+!165 lt!65496 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16))) lt!65486) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65496 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16)))) lt!65486)))))

(declare-fun bs!5292 () Bool)

(assert (= bs!5292 d!38639))

(declare-fun m!149549 () Bool)

(assert (=> bs!5292 m!149549))

(assert (=> bs!5292 m!149549))

(declare-fun m!149551 () Bool)

(assert (=> bs!5292 m!149551))

(assert (=> b!126668 d!38639))

(declare-fun d!38641 () Bool)

(assert (=> d!38641 (= (apply!111 (+!165 lt!65496 (tuple2!2569 lt!65491 (zeroValue!2646 newMap!16))) lt!65486) (apply!111 lt!65496 lt!65486))))

(declare-fun lt!66075 () Unit!3936)

(assert (=> d!38641 (= lt!66075 (choose!768 lt!65496 lt!65491 (zeroValue!2646 newMap!16) lt!65486))))

(declare-fun e!83267 () Bool)

(assert (=> d!38641 e!83267))

(declare-fun res!61660 () Bool)

(assert (=> d!38641 (=> (not res!61660) (not e!83267))))

(assert (=> d!38641 (= res!61660 (contains!877 lt!65496 lt!65486))))

(assert (=> d!38641 (= (addApplyDifferent!87 lt!65496 lt!65491 (zeroValue!2646 newMap!16) lt!65486) lt!66075)))

(declare-fun b!127560 () Bool)

(assert (=> b!127560 (= e!83267 (not (= lt!65486 lt!65491)))))

(assert (= (and d!38641 res!61660) b!127560))

(declare-fun m!149553 () Bool)

(assert (=> d!38641 m!149553))

(assert (=> d!38641 m!147773))

(declare-fun m!149555 () Bool)

(assert (=> d!38641 m!149555))

(assert (=> d!38641 m!147781))

(assert (=> d!38641 m!147791))

(assert (=> d!38641 m!147781))

(assert (=> b!126668 d!38641))

(declare-fun d!38643 () Bool)

(assert (=> d!38643 (= (apply!111 lt!65497 lt!65490) (get!1455 (getValueByKey!166 (toList!858 lt!65497) lt!65490)))))

(declare-fun bs!5293 () Bool)

(assert (= bs!5293 d!38643))

(declare-fun m!149557 () Bool)

(assert (=> bs!5293 m!149557))

(assert (=> bs!5293 m!149557))

(declare-fun m!149559 () Bool)

(assert (=> bs!5293 m!149559))

(assert (=> b!126668 d!38643))

(declare-fun d!38645 () Bool)

(assert (=> d!38645 (= (apply!111 lt!65496 lt!65486) (get!1455 (getValueByKey!166 (toList!858 lt!65496) lt!65486)))))

(declare-fun bs!5294 () Bool)

(assert (= bs!5294 d!38645))

(declare-fun m!149561 () Bool)

(assert (=> bs!5294 m!149561))

(assert (=> bs!5294 m!149561))

(declare-fun m!149563 () Bool)

(assert (=> bs!5294 m!149563))

(assert (=> b!126668 d!38645))

(declare-fun d!38647 () Bool)

(declare-fun e!83268 () Bool)

(assert (=> d!38647 e!83268))

(declare-fun res!61661 () Bool)

(assert (=> d!38647 (=> (not res!61661) (not e!83268))))

(declare-fun lt!66077 () ListLongMap!1685)

(assert (=> d!38647 (= res!61661 (contains!877 lt!66077 (_1!1294 (tuple2!2569 lt!65501 (minValue!2646 newMap!16)))))))

(declare-fun lt!66076 () List!1719)

(assert (=> d!38647 (= lt!66077 (ListLongMap!1686 lt!66076))))

(declare-fun lt!66079 () Unit!3936)

(declare-fun lt!66078 () Unit!3936)

(assert (=> d!38647 (= lt!66079 lt!66078)))

(assert (=> d!38647 (= (getValueByKey!166 lt!66076 (_1!1294 (tuple2!2569 lt!65501 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65501 (minValue!2646 newMap!16)))))))

(assert (=> d!38647 (= lt!66078 (lemmaContainsTupThenGetReturnValue!83 lt!66076 (_1!1294 (tuple2!2569 lt!65501 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65501 (minValue!2646 newMap!16)))))))

(assert (=> d!38647 (= lt!66076 (insertStrictlySorted!85 (toList!858 lt!65499) (_1!1294 (tuple2!2569 lt!65501 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65501 (minValue!2646 newMap!16)))))))

(assert (=> d!38647 (= (+!165 lt!65499 (tuple2!2569 lt!65501 (minValue!2646 newMap!16))) lt!66077)))

(declare-fun b!127561 () Bool)

(declare-fun res!61662 () Bool)

(assert (=> b!127561 (=> (not res!61662) (not e!83268))))

(assert (=> b!127561 (= res!61662 (= (getValueByKey!166 (toList!858 lt!66077) (_1!1294 (tuple2!2569 lt!65501 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65501 (minValue!2646 newMap!16))))))))

(declare-fun b!127562 () Bool)

(assert (=> b!127562 (= e!83268 (contains!878 (toList!858 lt!66077) (tuple2!2569 lt!65501 (minValue!2646 newMap!16))))))

(assert (= (and d!38647 res!61661) b!127561))

(assert (= (and b!127561 res!61662) b!127562))

(declare-fun m!149565 () Bool)

(assert (=> d!38647 m!149565))

(declare-fun m!149567 () Bool)

(assert (=> d!38647 m!149567))

(declare-fun m!149569 () Bool)

(assert (=> d!38647 m!149569))

(declare-fun m!149571 () Bool)

(assert (=> d!38647 m!149571))

(declare-fun m!149573 () Bool)

(assert (=> b!127561 m!149573))

(declare-fun m!149575 () Bool)

(assert (=> b!127562 m!149575))

(assert (=> b!126668 d!38647))

(declare-fun d!38649 () Bool)

(assert (=> d!38649 (= (apply!111 lt!65499 lt!65494) (get!1455 (getValueByKey!166 (toList!858 lt!65499) lt!65494)))))

(declare-fun bs!5295 () Bool)

(assert (= bs!5295 d!38649))

(declare-fun m!149577 () Bool)

(assert (=> bs!5295 m!149577))

(assert (=> bs!5295 m!149577))

(declare-fun m!149579 () Bool)

(assert (=> bs!5295 m!149579))

(assert (=> b!126668 d!38649))

(declare-fun d!38651 () Bool)

(declare-fun e!83270 () Bool)

(assert (=> d!38651 e!83270))

(declare-fun res!61663 () Bool)

(assert (=> d!38651 (=> res!61663 e!83270)))

(declare-fun lt!66081 () Bool)

(assert (=> d!38651 (= res!61663 (not lt!66081))))

(declare-fun lt!66080 () Bool)

(assert (=> d!38651 (= lt!66081 lt!66080)))

(declare-fun lt!66082 () Unit!3936)

(declare-fun e!83269 () Unit!3936)

(assert (=> d!38651 (= lt!66082 e!83269)))

(declare-fun c!23408 () Bool)

(assert (=> d!38651 (= c!23408 lt!66080)))

(assert (=> d!38651 (= lt!66080 (containsKey!170 (toList!858 (+!165 lt!65504 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16)))) lt!65484))))

(assert (=> d!38651 (= (contains!877 (+!165 lt!65504 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16))) lt!65484) lt!66081)))

(declare-fun b!127563 () Bool)

(declare-fun lt!66083 () Unit!3936)

(assert (=> b!127563 (= e!83269 lt!66083)))

(assert (=> b!127563 (= lt!66083 (lemmaContainsKeyImpliesGetValueByKeyDefined!119 (toList!858 (+!165 lt!65504 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16)))) lt!65484))))

(assert (=> b!127563 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65504 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16)))) lt!65484))))

(declare-fun b!127564 () Bool)

(declare-fun Unit!3997 () Unit!3936)

(assert (=> b!127564 (= e!83269 Unit!3997)))

(declare-fun b!127565 () Bool)

(assert (=> b!127565 (= e!83270 (isDefined!120 (getValueByKey!166 (toList!858 (+!165 lt!65504 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16)))) lt!65484)))))

(assert (= (and d!38651 c!23408) b!127563))

(assert (= (and d!38651 (not c!23408)) b!127564))

(assert (= (and d!38651 (not res!61663)) b!127565))

(declare-fun m!149581 () Bool)

(assert (=> d!38651 m!149581))

(declare-fun m!149583 () Bool)

(assert (=> b!127563 m!149583))

(declare-fun m!149585 () Bool)

(assert (=> b!127563 m!149585))

(assert (=> b!127563 m!149585))

(declare-fun m!149587 () Bool)

(assert (=> b!127563 m!149587))

(assert (=> b!127565 m!149585))

(assert (=> b!127565 m!149585))

(assert (=> b!127565 m!149587))

(assert (=> b!126668 d!38651))

(declare-fun d!38653 () Bool)

(declare-fun e!83271 () Bool)

(assert (=> d!38653 e!83271))

(declare-fun res!61664 () Bool)

(assert (=> d!38653 (=> (not res!61664) (not e!83271))))

(declare-fun lt!66085 () ListLongMap!1685)

(assert (=> d!38653 (= res!61664 (contains!877 lt!66085 (_1!1294 (tuple2!2569 lt!65502 (minValue!2646 newMap!16)))))))

(declare-fun lt!66084 () List!1719)

(assert (=> d!38653 (= lt!66085 (ListLongMap!1686 lt!66084))))

(declare-fun lt!66087 () Unit!3936)

(declare-fun lt!66086 () Unit!3936)

(assert (=> d!38653 (= lt!66087 lt!66086)))

(assert (=> d!38653 (= (getValueByKey!166 lt!66084 (_1!1294 (tuple2!2569 lt!65502 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65502 (minValue!2646 newMap!16)))))))

(assert (=> d!38653 (= lt!66086 (lemmaContainsTupThenGetReturnValue!83 lt!66084 (_1!1294 (tuple2!2569 lt!65502 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65502 (minValue!2646 newMap!16)))))))

(assert (=> d!38653 (= lt!66084 (insertStrictlySorted!85 (toList!858 lt!65497) (_1!1294 (tuple2!2569 lt!65502 (minValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65502 (minValue!2646 newMap!16)))))))

(assert (=> d!38653 (= (+!165 lt!65497 (tuple2!2569 lt!65502 (minValue!2646 newMap!16))) lt!66085)))

(declare-fun b!127566 () Bool)

(declare-fun res!61665 () Bool)

(assert (=> b!127566 (=> (not res!61665) (not e!83271))))

(assert (=> b!127566 (= res!61665 (= (getValueByKey!166 (toList!858 lt!66085) (_1!1294 (tuple2!2569 lt!65502 (minValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65502 (minValue!2646 newMap!16))))))))

(declare-fun b!127567 () Bool)

(assert (=> b!127567 (= e!83271 (contains!878 (toList!858 lt!66085) (tuple2!2569 lt!65502 (minValue!2646 newMap!16))))))

(assert (= (and d!38653 res!61664) b!127566))

(assert (= (and b!127566 res!61665) b!127567))

(declare-fun m!149589 () Bool)

(assert (=> d!38653 m!149589))

(declare-fun m!149591 () Bool)

(assert (=> d!38653 m!149591))

(declare-fun m!149593 () Bool)

(assert (=> d!38653 m!149593))

(declare-fun m!149595 () Bool)

(assert (=> d!38653 m!149595))

(declare-fun m!149597 () Bool)

(assert (=> b!127566 m!149597))

(declare-fun m!149599 () Bool)

(assert (=> b!127567 m!149599))

(assert (=> b!126668 d!38653))

(declare-fun d!38655 () Bool)

(assert (=> d!38655 (= (apply!111 (+!165 lt!65499 (tuple2!2569 lt!65501 (minValue!2646 newMap!16))) lt!65494) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65499 (tuple2!2569 lt!65501 (minValue!2646 newMap!16)))) lt!65494)))))

(declare-fun bs!5296 () Bool)

(assert (= bs!5296 d!38655))

(declare-fun m!149601 () Bool)

(assert (=> bs!5296 m!149601))

(assert (=> bs!5296 m!149601))

(declare-fun m!149603 () Bool)

(assert (=> bs!5296 m!149603))

(assert (=> b!126668 d!38655))

(declare-fun d!38657 () Bool)

(declare-fun e!83272 () Bool)

(assert (=> d!38657 e!83272))

(declare-fun res!61666 () Bool)

(assert (=> d!38657 (=> (not res!61666) (not e!83272))))

(declare-fun lt!66089 () ListLongMap!1685)

(assert (=> d!38657 (= res!61666 (contains!877 lt!66089 (_1!1294 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16)))))))

(declare-fun lt!66088 () List!1719)

(assert (=> d!38657 (= lt!66089 (ListLongMap!1686 lt!66088))))

(declare-fun lt!66091 () Unit!3936)

(declare-fun lt!66090 () Unit!3936)

(assert (=> d!38657 (= lt!66091 lt!66090)))

(assert (=> d!38657 (= (getValueByKey!166 lt!66088 (_1!1294 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38657 (= lt!66090 (lemmaContainsTupThenGetReturnValue!83 lt!66088 (_1!1294 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38657 (= lt!66088 (insertStrictlySorted!85 (toList!858 lt!65504) (_1!1294 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16))) (_2!1294 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16)))))))

(assert (=> d!38657 (= (+!165 lt!65504 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16))) lt!66089)))

(declare-fun b!127568 () Bool)

(declare-fun res!61667 () Bool)

(assert (=> b!127568 (=> (not res!61667) (not e!83272))))

(assert (=> b!127568 (= res!61667 (= (getValueByKey!166 (toList!858 lt!66089) (_1!1294 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16)))) (Some!171 (_2!1294 (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16))))))))

(declare-fun b!127569 () Bool)

(assert (=> b!127569 (= e!83272 (contains!878 (toList!858 lt!66089) (tuple2!2569 lt!65493 (zeroValue!2646 newMap!16))))))

(assert (= (and d!38657 res!61666) b!127568))

(assert (= (and b!127568 res!61667) b!127569))

(declare-fun m!149605 () Bool)

(assert (=> d!38657 m!149605))

(declare-fun m!149607 () Bool)

(assert (=> d!38657 m!149607))

(declare-fun m!149609 () Bool)

(assert (=> d!38657 m!149609))

(declare-fun m!149611 () Bool)

(assert (=> d!38657 m!149611))

(declare-fun m!149613 () Bool)

(assert (=> b!127568 m!149613))

(declare-fun m!149615 () Bool)

(assert (=> b!127569 m!149615))

(assert (=> b!126668 d!38657))

(declare-fun d!38659 () Bool)

(assert (=> d!38659 (= (apply!111 (+!165 lt!65497 (tuple2!2569 lt!65502 (minValue!2646 newMap!16))) lt!65490) (apply!111 lt!65497 lt!65490))))

(declare-fun lt!66092 () Unit!3936)

(assert (=> d!38659 (= lt!66092 (choose!768 lt!65497 lt!65502 (minValue!2646 newMap!16) lt!65490))))

(declare-fun e!83273 () Bool)

(assert (=> d!38659 e!83273))

(declare-fun res!61668 () Bool)

(assert (=> d!38659 (=> (not res!61668) (not e!83273))))

(assert (=> d!38659 (= res!61668 (contains!877 lt!65497 lt!65490))))

(assert (=> d!38659 (= (addApplyDifferent!87 lt!65497 lt!65502 (minValue!2646 newMap!16) lt!65490) lt!66092)))

(declare-fun b!127570 () Bool)

(assert (=> b!127570 (= e!83273 (not (= lt!65490 lt!65502)))))

(assert (= (and d!38659 res!61668) b!127570))

(declare-fun m!149617 () Bool)

(assert (=> d!38659 m!149617))

(assert (=> d!38659 m!147783))

(declare-fun m!149619 () Bool)

(assert (=> d!38659 m!149619))

(assert (=> d!38659 m!147785))

(assert (=> d!38659 m!147797))

(assert (=> d!38659 m!147785))

(assert (=> b!126668 d!38659))

(declare-fun d!38661 () Bool)

(assert (=> d!38661 (= (apply!111 (+!165 lt!65497 (tuple2!2569 lt!65502 (minValue!2646 newMap!16))) lt!65490) (get!1455 (getValueByKey!166 (toList!858 (+!165 lt!65497 (tuple2!2569 lt!65502 (minValue!2646 newMap!16)))) lt!65490)))))

(declare-fun bs!5297 () Bool)

(assert (= bs!5297 d!38661))

(declare-fun m!149621 () Bool)

(assert (=> bs!5297 m!149621))

(assert (=> bs!5297 m!149621))

(declare-fun m!149623 () Bool)

(assert (=> bs!5297 m!149623))

(assert (=> b!126668 d!38661))

(declare-fun d!38663 () Bool)

(assert (=> d!38663 (= (apply!111 (+!165 lt!65499 (tuple2!2569 lt!65501 (minValue!2646 newMap!16))) lt!65494) (apply!111 lt!65499 lt!65494))))

(declare-fun lt!66093 () Unit!3936)

(assert (=> d!38663 (= lt!66093 (choose!768 lt!65499 lt!65501 (minValue!2646 newMap!16) lt!65494))))

(declare-fun e!83274 () Bool)

(assert (=> d!38663 e!83274))

(declare-fun res!61669 () Bool)

(assert (=> d!38663 (=> (not res!61669) (not e!83274))))

(assert (=> d!38663 (= res!61669 (contains!877 lt!65499 lt!65494))))

(assert (=> d!38663 (= (addApplyDifferent!87 lt!65499 lt!65501 (minValue!2646 newMap!16) lt!65494) lt!66093)))

(declare-fun b!127571 () Bool)

(assert (=> b!127571 (= e!83274 (not (= lt!65494 lt!65501)))))

(assert (= (and d!38663 res!61669) b!127571))

(declare-fun m!149625 () Bool)

(assert (=> d!38663 m!149625))

(assert (=> d!38663 m!147775))

(declare-fun m!149627 () Bool)

(assert (=> d!38663 m!149627))

(assert (=> d!38663 m!147779))

(assert (=> d!38663 m!147793))

(assert (=> d!38663 m!147779))

(assert (=> b!126668 d!38663))

(assert (=> b!126668 d!38197))

(declare-fun b!127575 () Bool)

(declare-fun e!83276 () Option!172)

(assert (=> b!127575 (= e!83276 None!170)))

(declare-fun c!23409 () Bool)

(declare-fun d!38665 () Bool)

(assert (=> d!38665 (= c!23409 (and ((_ is Cons!1715) (toList!858 lt!65263)) (= (_1!1294 (h!2317 (toList!858 lt!65263))) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992))))))))))

(declare-fun e!83275 () Option!172)

(assert (=> d!38665 (= (getValueByKey!166 (toList!858 lt!65263) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))) e!83275)))

(declare-fun b!127574 () Bool)

(assert (=> b!127574 (= e!83276 (getValueByKey!166 (t!6078 (toList!858 lt!65263)) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))

(declare-fun b!127572 () Bool)

(assert (=> b!127572 (= e!83275 (Some!171 (_2!1294 (h!2317 (toList!858 lt!65263)))))))

(declare-fun b!127573 () Bool)

(assert (=> b!127573 (= e!83275 e!83276)))

(declare-fun c!23410 () Bool)

(assert (=> b!127573 (= c!23410 (and ((_ is Cons!1715) (toList!858 lt!65263)) (not (= (_1!1294 (h!2317 (toList!858 lt!65263))) (_1!1294 (tuple2!2569 lt!65118 (minValue!2646 (v!3122 (underlying!438 thiss!992)))))))))))

(assert (= (and d!38665 c!23409) b!127572))

(assert (= (and d!38665 (not c!23409)) b!127573))

(assert (= (and b!127573 c!23410) b!127574))

(assert (= (and b!127573 (not c!23410)) b!127575))

(declare-fun m!149629 () Bool)

(assert (=> b!127574 m!149629))

(assert (=> b!126419 d!38665))

(declare-fun d!38667 () Bool)

(declare-fun res!61670 () Bool)

(declare-fun e!83277 () Bool)

(assert (=> d!38667 (=> res!61670 e!83277)))

(assert (=> d!38667 (= res!61670 (and ((_ is Cons!1715) (toList!858 e!82524)) (= (_1!1294 (h!2317 (toList!858 e!82524))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(assert (=> d!38667 (= (containsKey!170 (toList!858 e!82524) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)) e!83277)))

(declare-fun b!127576 () Bool)

(declare-fun e!83278 () Bool)

(assert (=> b!127576 (= e!83277 e!83278)))

(declare-fun res!61671 () Bool)

(assert (=> b!127576 (=> (not res!61671) (not e!83278))))

(assert (=> b!127576 (= res!61671 (and (or (not ((_ is Cons!1715) (toList!858 e!82524))) (bvsle (_1!1294 (h!2317 (toList!858 e!82524))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))) ((_ is Cons!1715) (toList!858 e!82524)) (bvslt (_1!1294 (h!2317 (toList!858 e!82524))) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355))))))

(declare-fun b!127577 () Bool)

(assert (=> b!127577 (= e!83278 (containsKey!170 (t!6078 (toList!858 e!82524)) (select (arr!2224 (_keys!4516 (v!3122 (underlying!438 thiss!992)))) from!355)))))

(assert (= (and d!38667 (not res!61670)) b!127576))

(assert (= (and b!127576 res!61671) b!127577))

(assert (=> b!127577 m!147095))

(declare-fun m!149631 () Bool)

(assert (=> b!127577 m!149631))

(assert (=> d!38055 d!38667))

(declare-fun mapNonEmpty!4513 () Bool)

(declare-fun mapRes!4513 () Bool)

(declare-fun tp!10975 () Bool)

(declare-fun e!83280 () Bool)

(assert (=> mapNonEmpty!4513 (= mapRes!4513 (and tp!10975 e!83280))))

(declare-fun mapValue!4513 () ValueCell!1077)

(declare-fun mapKey!4513 () (_ BitVec 32))

(declare-fun mapRest!4513 () (Array (_ BitVec 32) ValueCell!1077))

(assert (=> mapNonEmpty!4513 (= mapRest!4511 (store mapRest!4513 mapKey!4513 mapValue!4513))))

(declare-fun b!127579 () Bool)

(declare-fun e!83279 () Bool)

(assert (=> b!127579 (= e!83279 tp_is_empty!2841)))

(declare-fun condMapEmpty!4513 () Bool)

(declare-fun mapDefault!4513 () ValueCell!1077)

(assert (=> mapNonEmpty!4511 (= condMapEmpty!4513 (= mapRest!4511 ((as const (Array (_ BitVec 32) ValueCell!1077)) mapDefault!4513)))))

(assert (=> mapNonEmpty!4511 (= tp!10973 (and e!83279 mapRes!4513))))

(declare-fun mapIsEmpty!4513 () Bool)

(assert (=> mapIsEmpty!4513 mapRes!4513))

(declare-fun b!127578 () Bool)

(assert (=> b!127578 (= e!83280 tp_is_empty!2841)))

(assert (= (and mapNonEmpty!4511 condMapEmpty!4513) mapIsEmpty!4513))

(assert (= (and mapNonEmpty!4511 (not condMapEmpty!4513)) mapNonEmpty!4513))

(assert (= (and mapNonEmpty!4513 ((_ is ValueCellFull!1077) mapValue!4513)) b!127578))

(assert (= (and mapNonEmpty!4511 ((_ is ValueCellFull!1077) mapDefault!4513)) b!127579))

(declare-fun m!149633 () Bool)

(assert (=> mapNonEmpty!4513 m!149633))

(declare-fun mapNonEmpty!4514 () Bool)

(declare-fun mapRes!4514 () Bool)

(declare-fun tp!10976 () Bool)

(declare-fun e!83282 () Bool)

(assert (=> mapNonEmpty!4514 (= mapRes!4514 (and tp!10976 e!83282))))

(declare-fun mapKey!4514 () (_ BitVec 32))

(declare-fun mapValue!4514 () ValueCell!1077)

(declare-fun mapRest!4514 () (Array (_ BitVec 32) ValueCell!1077))

(assert (=> mapNonEmpty!4514 (= mapRest!4512 (store mapRest!4514 mapKey!4514 mapValue!4514))))

(declare-fun b!127581 () Bool)

(declare-fun e!83281 () Bool)

(assert (=> b!127581 (= e!83281 tp_is_empty!2841)))

(declare-fun condMapEmpty!4514 () Bool)

(declare-fun mapDefault!4514 () ValueCell!1077)

(assert (=> mapNonEmpty!4512 (= condMapEmpty!4514 (= mapRest!4512 ((as const (Array (_ BitVec 32) ValueCell!1077)) mapDefault!4514)))))

(assert (=> mapNonEmpty!4512 (= tp!10974 (and e!83281 mapRes!4514))))

(declare-fun mapIsEmpty!4514 () Bool)

(assert (=> mapIsEmpty!4514 mapRes!4514))

(declare-fun b!127580 () Bool)

(assert (=> b!127580 (= e!83282 tp_is_empty!2841)))

(assert (= (and mapNonEmpty!4512 condMapEmpty!4514) mapIsEmpty!4514))

(assert (= (and mapNonEmpty!4512 (not condMapEmpty!4514)) mapNonEmpty!4514))

(assert (= (and mapNonEmpty!4514 ((_ is ValueCellFull!1077) mapValue!4514)) b!127580))

(assert (= (and mapNonEmpty!4512 ((_ is ValueCellFull!1077) mapDefault!4514)) b!127581))

(declare-fun m!149635 () Bool)

(assert (=> mapNonEmpty!4514 m!149635))

(declare-fun b_lambda!5645 () Bool)

(assert (= b_lambda!5637 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5645)))

(declare-fun b_lambda!5647 () Bool)

(assert (= b_lambda!5643 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5647)))

(declare-fun b_lambda!5649 () Bool)

(assert (= b_lambda!5635 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5649)))

(declare-fun b_lambda!5651 () Bool)

(assert (= b_lambda!5631 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5651)))

(declare-fun b_lambda!5653 () Bool)

(assert (= b_lambda!5625 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5653)))

(declare-fun b_lambda!5655 () Bool)

(assert (= b_lambda!5639 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5655)))

(declare-fun b_lambda!5657 () Bool)

(assert (= b_lambda!5615 (or (and b!126082 b_free!2849) (and b!126074 b_free!2851 (= (defaultEntry!2783 newMap!16) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))))) b_lambda!5657)))

(declare-fun b_lambda!5659 () Bool)

(assert (= b_lambda!5623 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5659)))

(declare-fun b_lambda!5661 () Bool)

(assert (= b_lambda!5621 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5661)))

(declare-fun b_lambda!5663 () Bool)

(assert (= b_lambda!5617 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5663)))

(declare-fun b_lambda!5665 () Bool)

(assert (= b_lambda!5629 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5665)))

(declare-fun b_lambda!5667 () Bool)

(assert (= b_lambda!5613 (or (and b!126082 b_free!2849) (and b!126074 b_free!2851 (= (defaultEntry!2783 newMap!16) (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))))) b_lambda!5667)))

(declare-fun b_lambda!5669 () Bool)

(assert (= b_lambda!5633 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5669)))

(declare-fun b_lambda!5671 () Bool)

(assert (= b_lambda!5619 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5671)))

(declare-fun b_lambda!5673 () Bool)

(assert (= b_lambda!5627 (or (and b!126082 b_free!2849 (= (defaultEntry!2783 (v!3122 (underlying!438 thiss!992))) (defaultEntry!2783 newMap!16))) (and b!126074 b_free!2851) b_lambda!5673)))

(check-sat (not b!127305) (not b!126797) (not b!127283) (not b!127176) (not d!38579) (not d!38625) (not b!127165) (not bm!13674) (not d!38449) (not d!38575) (not bm!13744) (not b!126873) (not d!38191) (not b!127239) (not d!38577) (not d!38441) (not b!127218) (not d!38475) (not b!127276) (not b!127157) (not b!127061) (not b!127205) (not b!126869) (not d!38649) (not b!127101) (not d!38347) (not b_lambda!5649) (not b!127063) (not d!38391) (not b!126848) (not b_lambda!5655) (not b!127558) (not b!126970) (not d!38127) (not b!127342) (not d!38457) (not bm!13707) (not b!127452) (not d!38639) (not d!38653) (not b!127051) (not d!38387) (not d!38305) (not b!127563) (not b!127324) (not b!127307) (not b!127414) (not bm!13759) (not mapNonEmpty!4514) (not b!127077) (not b!127407) (not d!38283) (not b!126951) (not d!38339) (not b!126829) (not b!127245) (not b!127109) (not d!38455) (not b!127284) (not d!38315) (not b!127418) (not b!127483) (not b!127347) (not b!127234) (not b!127136) (not d!38525) (not bm!13736) (not b!126962) (not b!127143) tp_is_empty!2841 (not b!127160) (not b!126954) (not b!127175) (not d!38293) (not bm!13711) (not b_lambda!5665) (not d!38615) (not b!127274) (not bm!13696) (not d!38493) (not b!127257) (not d!38319) (not b!127010) (not b!127562) (not b!127356) (not b!127184) (not b!126939) (not d!38595) (not b!127485) (not d!38523) (not b!127264) (not d!38539) (not d!38631) (not d!38427) (not b!127197) (not b!127325) (not b!127038) (not b!126886) (not b!127089) (not d!38353) (not d!38627) (not b!127035) (not b!126924) (not bm!13729) (not b!127098) (not b!127552) (not b!126923) (not d!38431) (not d!38519) (not d!38527) (not b!126997) (not d!38489) (not b!126879) (not d!38497) (not d!38529) (not d!38281) (not b!127228) (not b!126931) (not b!126828) (not d!38201) (not d!38509) (not b!127539) (not b!127235) (not d!38505) (not bm!13679) (not b!127151) (not b!127250) (not bm!13733) (not b!127026) (not d!38469) (not d!38247) (not b!127462) (not bm!13684) (not b_lambda!5607) (not d!38135) (not d!38175) (not bm!13702) (not b!127118) (not b!126815) (not b_lambda!5611) (not b!127383) (not b!127189) (not d!38543) (not b!127458) (not b!127208) (not d!38583) (not b!127554) (not d!38401) (not b!126877) (not b!127547) (not b!127384) (not d!38227) (not bm!13718) (not b!127148) (not d!38317) (not d!38329) (not bm!13704) (not d!38251) (not b_lambda!5601) (not b!126817) (not b!126810) b_and!7879 (not bm!13747) (not b!126734) (not b!127024) (not bm!13749) (not b_lambda!5653) (not b!127360) (not b!127551) (not b!127206) (not d!38383) (not d!38599) (not b!126728) (not b!127023) (not b!127300) (not b!126859) (not b!126949) (not b!127088) (not d!38257) (not b!127310) (not d!38471) (not bm!13712) (not b!126979) (not b!127073) (not b!127154) (not b!127030) (not bm!13694) (not d!38189) (not b!126745) (not b!127481) (not b!127456) (not b!127152) (not b_lambda!5603) (not b_next!2849) (not d!38159) (not d!38537) (not bm!13756) (not b!127484) (not b!127467) (not b!127340) (not d!38613) (not b!126853) (not b!127099) (not b!127317) (not b!127311) (not b!127359) (not d!38573) (not b!127532) (not d!38485) (not b!127561) (not b!126731) (not b!127540) (not b!127055) (not d!38301) (not b!127164) (not b!126823) (not b!127400) (not b!127217) (not d!38183) (not b!127279) (not b!126746) (not b!127070) (not b!127015) (not b_lambda!5587) (not d!38181) (not b!127042) (not b_lambda!5669) (not d!38451) (not b!126838) (not d!38215) (not b!126872) (not b!127555) (not d!38445) (not d!38145) (not d!38237) (not b!127416) (not d!38185) (not b!127162) (not d!38421) (not b!126978) (not d!38405) (not d!38535) (not b!127557) (not b!127365) (not d!38581) (not d!38141) (not b!127138) (not b!127156) (not b!127492) (not b!127475) (not d!38157) (not b!126807) (not b!127018) (not b!127200) (not b!126811) (not b!126944) (not b!127195) (not b!127248) (not b!126801) (not d!38541) (not b!127306) (not d!38433) (not b!126937) (not b!127123) (not b!127565) (not b!126981) (not d!38617) (not b!127075) (not d!38267) (not b!127336) (not d!38373) (not b!126737) (not d!38601) (not b!127487) (not b!126791) (not bm!13710) (not d!38207) (not b!127181) (not d!38241) (not b!127191) (not bm!13680) (not b_lambda!5673) (not b!127480) (not b!127338) (not bm!13748) (not b!126942) (not bm!13697) (not b!127187) (not bm!13673) (not d!38565) (not b!127419) (not b!126799) (not d!38511) (not b!126921) (not b!127072) (not d!38641) (not b!127251) (not d!38121) (not bm!13699) (not b!127363) (not bm!13731) (not b!127178) (not d!38657) (not b!127351) (not d!38231) (not d!38119) (not bm!13760) (not b_lambda!5641) (not b_lambda!5657) (not d!38651) (not b!126992) (not b!126740) (not b!126729) (not b!127403) (not b!127319) (not d!38161) (not b!127445) (not b!126751) (not d!38487) (not b!126926) (not b!127000) (not b!127344) (not b!126878) (not b!127327) (not d!38297) (not b!127224) (not bm!13717) (not d!38171) (not b!127303) (not d!38235) (not b!127314) (not d!38557) (not bm!13675) (not d!38309) (not b!126855) (not d!38499) (not bm!13706) (not b_lambda!5661) (not d!38479) (not d!38423) (not d!38637) (not d!38225) (not d!38531) (not b!126948) (not d!38253) (not d!38495) (not b_lambda!5605) (not d!38533) (not d!38501) (not b!127352) (not b!126973) (not b!127332) (not d!38605) (not b!127366) (not b!127005) (not d!38261) (not d!38461) (not bm!13757) (not b!127368) (not b!126880) (not bm!13698) (not bm!13751) (not b!127361) (not b!127071) (not d!38597) (not b!126816) (not b!127221) (not b!127375) (not b_next!2851) (not d!38443) (not b!126857) (not d!38425) (not b!126809) (not b!127391) (not b!127103) (not d!38369) (not bm!13695) (not b!126830) (not b!127041) (not b!126919) (not b!127193) (not bm!13683) (not d!38515) (not b!127411) (not d!38563) (not b!127139) (not b!127062) (not b!127567) (not b!127451) (not b!126941) (not bm!13676) (not b!126849) (not b!127434) (not b!126947) (not b!127312) (not d!38661) (not b!127574) (not b!126971) (not d!38655) (not b!127127) (not b!126932) (not b!127544) (not d!38415) (not b!127060) (not d!38197) (not b!126736) (not b!127049) (not d!38483) (not d!38357) (not d!38381) (not b!127198) (not b!127569) (not d!38263) (not b!126871) (not b!127526) (not b!126874) (not b!127272) (not b!126925) (not b!127410) (not b!127379) (not d!38245) (not b!127430) (not b!126935) (not b!126757) (not d!38635) (not d!38419) (not bm!13691) (not b!126976) (not b!127253) (not b!127304) (not b!126960) (not b!127387) (not b!126758) (not b!126959) (not d!38359) (not b!127459) (not d!38521) (not b!127437) (not b_lambda!5645) (not bm!13681) (not b!127057) (not b!126866) (not b!126911) (not d!38277) (not d!38439) (not bm!13740) (not b!127004) (not b!127427) (not b!127322) (not d!38379) (not b!127350) (not b!127529) (not b!126956) (not b!127355) (not b!127435) (not d!38199) (not b!127566) (not b!126889) (not b!127113) (not d!38453) (not d!38303) (not b!127226) (not b!127068) (not bm!13725) (not bm!13685) (not b!126826) (not d!38221) (not b!127439) (not b!127021) (not d!38385) (not d!38243) (not bm!13714) (not b!127478) (not d!38291) (not b!127128) (not b!127120) (not b!127084) (not b!127258) (not d!38307) (not b!126990) (not bm!13688) (not d!38355) (not d!38211) (not d!38165) (not b!127466) (not b_lambda!5651) (not b!127107) (not d!38343) (not b!127236) (not b!127182) (not b!127357) (not d!38547) (not b!126748) (not d!38611) (not b!127346) (not b!127267) (not b!126812) (not d!38255) (not b_lambda!5583) (not b!126998) (not d!38463) (not b!127488) (not d!38295) (not b!127447) (not b!127568) (not b!127345) (not b!126837) (not d!38663) (not b!127240) (not d!38223) (not b!126995) (not b!127464) (not b!126958) (not b!126943) (not b!127233) (not b!127429) (not d!38589) (not b_lambda!5609) (not b!127013) (not b!127009) (not b!127238) (not b!126860) (not d!38437) (not b!127577) (not b!127315) (not b!127477) (not bm!13738) (not b!127173) (not b!127080) (not b!127331) (not d!38219) (not b!127536) (not d!38287) (not d!38371) (not d!38569) (not d!38643) (not d!38659) (not b!127222) (not b!126833) (not d!38325) (not b!127371) (not d!38273) (not d!38285) (not d!38393) (not b!127370) (not b!126743) (not d!38249) (not d!38517) (not b!127522) (not d!38585) (not b!127146) (not b!126985) (not d!38229) (not d!38321) (not b!127494) (not d!38435) (not b!127362) (not b!127528) (not d!38147) (not b!127108) (not b!127392) (not b!126936) (not d!38331) (not d!38397) (not mapNonEmpty!4513) (not d!38633) (not b!126883) (not b!127549) (not b!127537) (not b!126986) (not b!127389) (not bm!13758) (not b!126846) (not b!126835) (not d!38447) (not d!38311) (not b!127442) (not d!38169) (not b!127242) (not d!38555) (not b!127087) (not b!127229) (not b!127530) (not d!38477) (not d!38645) (not b!127308) (not d!38507) (not b!127433) (not b!127212) (not b_lambda!5663) (not d!38349) (not b!127281) (not bm!13737) (not b!127125) (not d!38367) (not b!127016) (not b!127489) (not d!38429) (not b!126964) (not b!127525) (not d!38233) (not d!38481) (not b!126863) (not b_lambda!5671) (not b!126928) (not b!127213) (not b!127012) (not bm!13730) (not b_lambda!5647) (not b!127444) (not d!38341) (not b!126885) (not b!126856) (not b!126961) (not bm!13703) (not b!126934) (not d!38647) (not bm!13743) (not b!126784) (not d!38137) (not b_lambda!5667) (not b!127402) (not b!127559) (not b!127542) (not d!38179) (not b!126793) (not b!127232) (not d!38619) (not bm!13726) (not b!127227) (not b!126780) (not b!127203) (not b!127535) (not b!127243) (not bm!13724) (not d!38239) (not b!126796) (not b!126804) (not b!127011) (not b!126785) (not b!127496) b_and!7877 (not b!127031) (not b_lambda!5659) (not b!127086) (not d!38351) (not bm!13721) (not d!38513) (not b!127381))
(check-sat b_and!7877 b_and!7879 (not b_next!2849) (not b_next!2851))
