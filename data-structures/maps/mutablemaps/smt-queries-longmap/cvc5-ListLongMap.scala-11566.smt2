; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!134778 () Bool)

(assert start!134778)

(declare-fun res!1073786 () Bool)

(declare-fun e!876275 () Bool)

(assert (=> start!134778 (=> (not res!1073786) (not e!876275))))

(declare-fun mask!889 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!134778 (= res!1073786 (validMask!0 mask!889))))

(assert (=> start!134778 e!876275))

(assert (=> start!134778 true))

(declare-datatypes ((array!104860 0))(
  ( (array!104861 (arr!50599 (Array (_ BitVec 32) (_ BitVec 64))) (size!51150 (_ BitVec 32))) )
))
(declare-fun _keys!600 () array!104860)

(declare-fun array_inv!39244 (array!104860) Bool)

(assert (=> start!134778 (array_inv!39244 _keys!600)))

(declare-fun b!1571535 () Bool)

(declare-fun res!1073784 () Bool)

(assert (=> b!1571535 (=> (not res!1073784) (not e!876275))))

(assert (=> b!1571535 (= res!1073784 (= (size!51150 _keys!600) (bvadd #b00000000000000000000000000000001 mask!889)))))

(declare-fun b!1571536 () Bool)

(declare-fun res!1073785 () Bool)

(assert (=> b!1571536 (=> (not res!1073785) (not e!876275))))

(declare-fun k!754 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1571536 (= res!1073785 (validKeyInArray!0 k!754))))

(declare-fun b!1571537 () Bool)

(assert (=> b!1571537 (= e!876275 (bvslt mask!889 #b00000000000000000000000000000000))))

(declare-fun lt!673585 () (_ BitVec 32))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1571537 (= lt!673585 (toIndex!0 k!754 mask!889))))

(assert (= (and start!134778 res!1073786) b!1571535))

(assert (= (and b!1571535 res!1073784) b!1571536))

(assert (= (and b!1571536 res!1073785) b!1571537))

(declare-fun m!1445473 () Bool)

(assert (=> start!134778 m!1445473))

(declare-fun m!1445475 () Bool)

(assert (=> start!134778 m!1445475))

(declare-fun m!1445477 () Bool)

(assert (=> b!1571536 m!1445477))

(declare-fun m!1445479 () Bool)

(assert (=> b!1571537 m!1445479))

(push 1)

(assert (not start!134778))

(assert (not b!1571536))

(assert (not b!1571537))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!164527 () Bool)

(assert (=> d!164527 (= (validMask!0 mask!889) (and (or (= mask!889 #b00000000000000000000000000000111) (= mask!889 #b00000000000000000000000000001111) (= mask!889 #b00000000000000000000000000011111) (= mask!889 #b00000000000000000000000000111111) (= mask!889 #b00000000000000000000000001111111) (= mask!889 #b00000000000000000000000011111111) (= mask!889 #b00000000000000000000000111111111) (= mask!889 #b00000000000000000000001111111111) (= mask!889 #b00000000000000000000011111111111) (= mask!889 #b00000000000000000000111111111111) (= mask!889 #b00000000000000000001111111111111) (= mask!889 #b00000000000000000011111111111111) (= mask!889 #b00000000000000000111111111111111) (= mask!889 #b00000000000000001111111111111111) (= mask!889 #b00000000000000011111111111111111) (= mask!889 #b00000000000000111111111111111111) (= mask!889 #b00000000000001111111111111111111) (= mask!889 #b00000000000011111111111111111111) (= mask!889 #b00000000000111111111111111111111) (= mask!889 #b00000000001111111111111111111111) (= mask!889 #b00000000011111111111111111111111) (= mask!889 #b00000000111111111111111111111111) (= mask!889 #b00000001111111111111111111111111) (= mask!889 #b00000011111111111111111111111111) (= mask!889 #b00000111111111111111111111111111) (= mask!889 #b00001111111111111111111111111111) (= mask!889 #b00011111111111111111111111111111) (= mask!889 #b00111111111111111111111111111111)) (bvsle mask!889 #b00111111111111111111111111111111)))))

(assert (=> start!134778 d!164527))

(declare-fun d!164533 () Bool)

(assert (=> d!164533 (= (array_inv!39244 _keys!600) (bvsge (size!51150 _keys!600) #b00000000000000000000000000000000))))

(assert (=> start!134778 d!164533))

(declare-fun d!164535 () Bool)

(assert (=> d!164535 (= (validKeyInArray!0 k!754) (and (not (= k!754 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k!754 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1571536 d!164535))

(declare-fun d!164539 () Bool)

(declare-fun lt!673603 () (_ BitVec 32))

(declare-fun lt!673602 () (_ BitVec 32))

(assert (=> d!164539 (= lt!673603 (bvmul (bvxor lt!673602 (bvlshr lt!673602 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!164539 (= lt!673602 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!164539 (and (bvsge mask!889 #b00000000000000000000000000000000) (let ((res!1073806 (let ((h!38367 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141299 (bvmul (bvxor h!38367 (bvlshr h!38367 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141299 (bvlshr x!141299 #b00000000000000000000000000001101)) mask!889))))) (and (bvslt res!1073806 (bvadd mask!889 #b00000000000000000000000000000001)) (bvsge res!1073806 #b00000000000000000000000000000000))))))

(assert (=> d!164539 (= (toIndex!0 k!754 mask!889) (bvand (bvxor lt!673603 (bvlshr lt!673603 #b00000000000000000000000000001101)) mask!889))))

(assert (=> b!1571537 d!164539))

(push 1)

(check-sat)

(pop 1)

