; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12364 () Bool)

(assert start!12364)

(declare-fun b!105370 () Bool)

(declare-fun b_free!2525 () Bool)

(declare-fun b_next!2525 () Bool)

(assert (=> b!105370 (= b_free!2525 (not b_next!2525))))

(declare-fun tp!9897 () Bool)

(declare-fun b_and!6513 () Bool)

(assert (=> b!105370 (= tp!9897 b_and!6513)))

(declare-fun b!105373 () Bool)

(declare-fun b_free!2527 () Bool)

(declare-fun b_next!2527 () Bool)

(assert (=> b!105373 (= b_free!2527 (not b_next!2527))))

(declare-fun tp!9898 () Bool)

(declare-fun b_and!6515 () Bool)

(assert (=> b!105373 (= tp!9898 b_and!6515)))

(declare-fun b!105360 () Bool)

(declare-fun e!68605 () Bool)

(declare-fun e!68620 () Bool)

(assert (=> b!105360 (= e!68605 e!68620)))

(declare-fun mapNonEmpty!3929 () Bool)

(declare-fun mapRes!3930 () Bool)

(declare-fun tp!9900 () Bool)

(declare-fun e!68610 () Bool)

(assert (=> mapNonEmpty!3929 (= mapRes!3930 (and tp!9900 e!68610))))

(declare-datatypes ((V!3219 0))(
  ( (V!3220 (val!1384 Int)) )
))
(declare-datatypes ((ValueCell!996 0))(
  ( (ValueCellFull!996 (v!2891 V!3219)) (EmptyCell!996) )
))
(declare-fun mapValue!3929 () ValueCell!996)

(declare-datatypes ((array!4348 0))(
  ( (array!4349 (arr!2062 (Array (_ BitVec 32) (_ BitVec 64))) (size!2317 (_ BitVec 32))) )
))
(declare-datatypes ((array!4350 0))(
  ( (array!4351 (arr!2063 (Array (_ BitVec 32) ValueCell!996)) (size!2318 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!900 0))(
  ( (LongMapFixedSize!901 (defaultEntry!2582 Int) (mask!6728 (_ BitVec 32)) (extraKeys!2387 (_ BitVec 32)) (zeroValue!2457 V!3219) (minValue!2457 V!3219) (_size!499 (_ BitVec 32)) (_keys!4288 array!4348) (_values!2565 array!4350) (_vacant!499 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!900)

(declare-fun mapRest!3929 () (Array (_ BitVec 32) ValueCell!996))

(declare-fun mapKey!3929 () (_ BitVec 32))

(assert (=> mapNonEmpty!3929 (= (arr!2063 (_values!2565 newMap!16)) (store mapRest!3929 mapKey!3929 mapValue!3929))))

(declare-fun b!105361 () Bool)

(declare-fun e!68609 () Bool)

(declare-fun e!68618 () Bool)

(assert (=> b!105361 (= e!68609 (not e!68618))))

(declare-fun res!52458 () Bool)

(assert (=> b!105361 (=> res!52458 e!68618)))

(declare-datatypes ((Cell!702 0))(
  ( (Cell!703 (v!2892 LongMapFixedSize!900)) )
))
(declare-datatypes ((LongMap!702 0))(
  ( (LongMap!703 (underlying!362 Cell!702)) )
))
(declare-fun thiss!992 () LongMap!702)

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!105361 (= res!52458 (not (validMask!0 (mask!6728 (v!2892 (underlying!362 thiss!992))))))))

(declare-datatypes ((tuple2!2410 0))(
  ( (tuple2!2411 (_1!1215 (_ BitVec 64)) (_2!1215 V!3219)) )
))
(declare-datatypes ((List!1642 0))(
  ( (Nil!1639) (Cons!1638 (h!2235 tuple2!2410) (t!5737 List!1642)) )
))
(declare-datatypes ((ListLongMap!1585 0))(
  ( (ListLongMap!1586 (toList!808 List!1642)) )
))
(declare-fun lt!53824 () ListLongMap!1585)

(declare-fun lt!53818 () tuple2!2410)

(declare-fun lt!53817 () tuple2!2410)

(declare-fun +!146 (ListLongMap!1585 tuple2!2410) ListLongMap!1585)

(assert (=> b!105361 (= (+!146 (+!146 lt!53824 lt!53818) lt!53817) (+!146 (+!146 lt!53824 lt!53817) lt!53818))))

(assert (=> b!105361 (= lt!53817 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun lt!53815 () V!3219)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!105361 (= lt!53818 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))

(declare-datatypes ((Unit!3250 0))(
  ( (Unit!3251) )
))
(declare-fun lt!53816 () Unit!3250)

(declare-fun addCommutativeForDiffKeys!58 (ListLongMap!1585 (_ BitVec 64) V!3219 (_ BitVec 64) V!3219) Unit!3250)

(assert (=> b!105361 (= lt!53816 (addCommutativeForDiffKeys!58 lt!53824 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!113 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) Int) ListLongMap!1585)

(assert (=> b!105361 (= lt!53824 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun b!105362 () Bool)

(declare-fun e!68608 () Bool)

(declare-fun tp_is_empty!2679 () Bool)

(assert (=> b!105362 (= e!68608 tp_is_empty!2679)))

(declare-fun b!105363 () Bool)

(declare-fun e!68621 () Bool)

(assert (=> b!105363 (= e!68621 tp_is_empty!2679)))

(declare-fun b!105364 () Bool)

(declare-fun e!68616 () Bool)

(assert (=> b!105364 (= e!68616 e!68609)))

(declare-fun res!52453 () Bool)

(assert (=> b!105364 (=> (not res!52453) (not e!68609))))

(declare-datatypes ((tuple2!2412 0))(
  ( (tuple2!2413 (_1!1216 Bool) (_2!1216 LongMapFixedSize!900)) )
))
(declare-fun lt!53825 () tuple2!2412)

(assert (=> b!105364 (= res!52453 (and (_1!1216 lt!53825) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!53822 () Unit!3250)

(declare-fun e!68622 () Unit!3250)

(assert (=> b!105364 (= lt!53822 e!68622)))

(declare-fun c!18322 () Bool)

(declare-fun lt!53820 () ListLongMap!1585)

(declare-fun contains!829 (ListLongMap!1585 (_ BitVec 64)) Bool)

(assert (=> b!105364 (= c!18322 (contains!829 lt!53820 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun update!158 (LongMapFixedSize!900 (_ BitVec 64) V!3219) tuple2!2412)

(assert (=> b!105364 (= lt!53825 (update!158 newMap!16 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))

(declare-fun b!105365 () Bool)

(declare-fun e!68615 () Bool)

(assert (=> b!105365 (= e!68615 tp_is_empty!2679)))

(declare-fun b!105366 () Bool)

(declare-fun res!52455 () Bool)

(declare-fun e!68619 () Bool)

(assert (=> b!105366 (=> (not res!52455) (not e!68619))))

(declare-fun valid!408 (LongMapFixedSize!900) Bool)

(assert (=> b!105366 (= res!52455 (valid!408 newMap!16))))

(declare-fun b!105367 () Bool)

(declare-fun Unit!3252 () Unit!3250)

(assert (=> b!105367 (= e!68622 Unit!3252)))

(declare-fun lt!53821 () Unit!3250)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!112 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) (_ BitVec 32) Int) Unit!3250)

(assert (=> b!105367 (= lt!53821 (lemmaListMapContainsThenArrayContainsFrom!112 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4348 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!105367 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!53823 () Unit!3250)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4348 (_ BitVec 32) (_ BitVec 32)) Unit!3250)

(assert (=> b!105367 (= lt!53823 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1643 0))(
  ( (Nil!1640) (Cons!1639 (h!2236 (_ BitVec 64)) (t!5738 List!1643)) )
))
(declare-fun arrayNoDuplicates!0 (array!4348 (_ BitVec 32) List!1643) Bool)

(assert (=> b!105367 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) from!355 Nil!1640)))

(declare-fun lt!53819 () Unit!3250)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4348 (_ BitVec 32) (_ BitVec 64) List!1643) Unit!3250)

(assert (=> b!105367 (= lt!53819 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640)))))

(assert (=> b!105367 false))

(declare-fun b!105368 () Bool)

(declare-fun res!52459 () Bool)

(assert (=> b!105368 (=> (not res!52459) (not e!68619))))

(assert (=> b!105368 (= res!52459 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!105369 () Bool)

(assert (=> b!105369 (= e!68610 tp_is_empty!2679)))

(declare-fun e!68611 () Bool)

(declare-fun e!68613 () Bool)

(declare-fun array_inv!1241 (array!4348) Bool)

(declare-fun array_inv!1242 (array!4350) Bool)

(assert (=> b!105370 (= e!68611 (and tp!9897 tp_is_empty!2679 (array_inv!1241 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (array_inv!1242 (_values!2565 (v!2892 (underlying!362 thiss!992)))) e!68613))))

(declare-fun b!105371 () Bool)

(declare-fun mapRes!3929 () Bool)

(assert (=> b!105371 (= e!68613 (and e!68621 mapRes!3929))))

(declare-fun condMapEmpty!3929 () Bool)

(declare-fun mapDefault!3930 () ValueCell!996)

(assert (=> b!105371 (= condMapEmpty!3929 (= (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3930)))))

(declare-fun b!105372 () Bool)

(declare-fun e!68606 () Bool)

(assert (=> b!105372 (= e!68606 (and e!68615 mapRes!3930))))

(declare-fun condMapEmpty!3930 () Bool)

(declare-fun mapDefault!3929 () ValueCell!996)

(assert (=> b!105372 (= condMapEmpty!3930 (= (arr!2063 (_values!2565 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3929)))))

(declare-fun res!52460 () Bool)

(assert (=> start!12364 (=> (not res!52460) (not e!68619))))

(declare-fun valid!409 (LongMap!702) Bool)

(assert (=> start!12364 (= res!52460 (valid!409 thiss!992))))

(assert (=> start!12364 e!68619))

(assert (=> start!12364 e!68605))

(assert (=> start!12364 true))

(declare-fun e!68607 () Bool)

(assert (=> start!12364 e!68607))

(declare-fun mapIsEmpty!3929 () Bool)

(assert (=> mapIsEmpty!3929 mapRes!3929))

(assert (=> b!105373 (= e!68607 (and tp!9898 tp_is_empty!2679 (array_inv!1241 (_keys!4288 newMap!16)) (array_inv!1242 (_values!2565 newMap!16)) e!68606))))

(declare-fun mapIsEmpty!3930 () Bool)

(assert (=> mapIsEmpty!3930 mapRes!3930))

(declare-fun mapNonEmpty!3930 () Bool)

(declare-fun tp!9899 () Bool)

(assert (=> mapNonEmpty!3930 (= mapRes!3929 (and tp!9899 e!68608))))

(declare-fun mapKey!3930 () (_ BitVec 32))

(declare-fun mapValue!3930 () ValueCell!996)

(declare-fun mapRest!3930 () (Array (_ BitVec 32) ValueCell!996))

(assert (=> mapNonEmpty!3930 (= (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (store mapRest!3930 mapKey!3930 mapValue!3930))))

(declare-fun b!105374 () Bool)

(assert (=> b!105374 (= e!68620 e!68611)))

(declare-fun b!105375 () Bool)

(declare-fun e!68617 () Bool)

(assert (=> b!105375 (= e!68617 e!68616)))

(declare-fun res!52457 () Bool)

(assert (=> b!105375 (=> (not res!52457) (not e!68616))))

(assert (=> b!105375 (= res!52457 (and (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1339 (ValueCell!996 V!3219) V!3219)

(declare-fun dynLambda!388 (Int (_ BitVec 64)) V!3219)

(assert (=> b!105375 (= lt!53815 (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) from!355) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105376 () Bool)

(declare-fun Unit!3253 () Unit!3250)

(assert (=> b!105376 (= e!68622 Unit!3253)))

(declare-fun b!105377 () Bool)

(declare-fun res!52456 () Bool)

(assert (=> b!105377 (=> (not res!52456) (not e!68619))))

(assert (=> b!105377 (= res!52456 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6728 newMap!16)) (_size!499 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun b!105378 () Bool)

(assert (=> b!105378 (= e!68619 e!68617)))

(declare-fun res!52454 () Bool)

(assert (=> b!105378 (=> (not res!52454) (not e!68617))))

(declare-fun lt!53814 () ListLongMap!1585)

(assert (=> b!105378 (= res!52454 (= lt!53814 lt!53820))))

(declare-fun map!1283 (LongMapFixedSize!900) ListLongMap!1585)

(assert (=> b!105378 (= lt!53820 (map!1283 newMap!16))))

(declare-fun getCurrentListMap!484 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) Int) ListLongMap!1585)

(assert (=> b!105378 (= lt!53814 (getCurrentListMap!484 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun b!105379 () Bool)

(assert (=> b!105379 (= e!68618 (or (not (= (size!2318 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6728 (v!2892 (underlying!362 thiss!992)))))) (= (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (size!2318 (_values!2565 (v!2892 (underlying!362 thiss!992)))))))))

(assert (= (and start!12364 res!52460) b!105368))

(assert (= (and b!105368 res!52459) b!105366))

(assert (= (and b!105366 res!52455) b!105377))

(assert (= (and b!105377 res!52456) b!105378))

(assert (= (and b!105378 res!52454) b!105375))

(assert (= (and b!105375 res!52457) b!105364))

(assert (= (and b!105364 c!18322) b!105367))

(assert (= (and b!105364 (not c!18322)) b!105376))

(assert (= (and b!105364 res!52453) b!105361))

(assert (= (and b!105361 (not res!52458)) b!105379))

(assert (= (and b!105371 condMapEmpty!3929) mapIsEmpty!3929))

(assert (= (and b!105371 (not condMapEmpty!3929)) mapNonEmpty!3930))

(get-info :version)

(assert (= (and mapNonEmpty!3930 ((_ is ValueCellFull!996) mapValue!3930)) b!105362))

(assert (= (and b!105371 ((_ is ValueCellFull!996) mapDefault!3930)) b!105363))

(assert (= b!105370 b!105371))

(assert (= b!105374 b!105370))

(assert (= b!105360 b!105374))

(assert (= start!12364 b!105360))

(assert (= (and b!105372 condMapEmpty!3930) mapIsEmpty!3930))

(assert (= (and b!105372 (not condMapEmpty!3930)) mapNonEmpty!3929))

(assert (= (and mapNonEmpty!3929 ((_ is ValueCellFull!996) mapValue!3929)) b!105369))

(assert (= (and b!105372 ((_ is ValueCellFull!996) mapDefault!3929)) b!105365))

(assert (= b!105373 b!105372))

(assert (= start!12364 b!105373))

(declare-fun b_lambda!4733 () Bool)

(assert (=> (not b_lambda!4733) (not b!105375)))

(declare-fun t!5734 () Bool)

(declare-fun tb!2061 () Bool)

(assert (=> (and b!105370 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))) t!5734) tb!2061))

(declare-fun result!3461 () Bool)

(assert (=> tb!2061 (= result!3461 tp_is_empty!2679)))

(assert (=> b!105375 t!5734))

(declare-fun b_and!6517 () Bool)

(assert (= b_and!6513 (and (=> t!5734 result!3461) b_and!6517)))

(declare-fun tb!2063 () Bool)

(declare-fun t!5736 () Bool)

(assert (=> (and b!105373 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))) t!5736) tb!2063))

(declare-fun result!3465 () Bool)

(assert (= result!3465 result!3461))

(assert (=> b!105375 t!5736))

(declare-fun b_and!6519 () Bool)

(assert (= b_and!6515 (and (=> t!5736 result!3465) b_and!6519)))

(declare-fun m!117509 () Bool)

(assert (=> start!12364 m!117509))

(declare-fun m!117511 () Bool)

(assert (=> mapNonEmpty!3930 m!117511))

(declare-fun m!117513 () Bool)

(assert (=> mapNonEmpty!3929 m!117513))

(declare-fun m!117515 () Bool)

(assert (=> b!105367 m!117515))

(declare-fun m!117517 () Bool)

(assert (=> b!105367 m!117517))

(declare-fun m!117519 () Bool)

(assert (=> b!105367 m!117519))

(declare-fun m!117521 () Bool)

(assert (=> b!105367 m!117521))

(assert (=> b!105367 m!117519))

(assert (=> b!105367 m!117519))

(declare-fun m!117523 () Bool)

(assert (=> b!105367 m!117523))

(assert (=> b!105367 m!117519))

(declare-fun m!117525 () Bool)

(assert (=> b!105367 m!117525))

(declare-fun m!117527 () Bool)

(assert (=> b!105366 m!117527))

(declare-fun m!117529 () Bool)

(assert (=> b!105361 m!117529))

(declare-fun m!117531 () Bool)

(assert (=> b!105361 m!117531))

(assert (=> b!105361 m!117519))

(declare-fun m!117533 () Bool)

(assert (=> b!105361 m!117533))

(assert (=> b!105361 m!117529))

(declare-fun m!117535 () Bool)

(assert (=> b!105361 m!117535))

(assert (=> b!105361 m!117519))

(declare-fun m!117537 () Bool)

(assert (=> b!105361 m!117537))

(declare-fun m!117539 () Bool)

(assert (=> b!105361 m!117539))

(assert (=> b!105361 m!117537))

(declare-fun m!117541 () Bool)

(assert (=> b!105361 m!117541))

(declare-fun m!117543 () Bool)

(assert (=> b!105378 m!117543))

(declare-fun m!117545 () Bool)

(assert (=> b!105378 m!117545))

(assert (=> b!105375 m!117519))

(declare-fun m!117547 () Bool)

(assert (=> b!105375 m!117547))

(declare-fun m!117549 () Bool)

(assert (=> b!105375 m!117549))

(assert (=> b!105375 m!117547))

(assert (=> b!105375 m!117549))

(declare-fun m!117551 () Bool)

(assert (=> b!105375 m!117551))

(declare-fun m!117553 () Bool)

(assert (=> b!105373 m!117553))

(declare-fun m!117555 () Bool)

(assert (=> b!105373 m!117555))

(assert (=> b!105364 m!117519))

(assert (=> b!105364 m!117519))

(declare-fun m!117557 () Bool)

(assert (=> b!105364 m!117557))

(assert (=> b!105364 m!117519))

(declare-fun m!117559 () Bool)

(assert (=> b!105364 m!117559))

(declare-fun m!117561 () Bool)

(assert (=> b!105370 m!117561))

(declare-fun m!117563 () Bool)

(assert (=> b!105370 m!117563))

(check-sat (not b_next!2527) (not b!105364) (not mapNonEmpty!3930) (not start!12364) (not b!105373) (not b!105361) tp_is_empty!2679 (not b!105375) (not b!105378) (not mapNonEmpty!3929) b_and!6519 b_and!6517 (not b!105367) (not b!105370) (not b_next!2525) (not b!105366) (not b_lambda!4733))
(check-sat b_and!6517 b_and!6519 (not b_next!2525) (not b_next!2527))
(get-model)

(declare-fun b_lambda!4737 () Bool)

(assert (= b_lambda!4733 (or (and b!105370 b_free!2525) (and b!105373 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))))) b_lambda!4737)))

(check-sat (not b_next!2527) (not b!105364) (not mapNonEmpty!3930) (not start!12364) (not b!105373) (not b_lambda!4737) (not b!105361) tp_is_empty!2679 (not b!105375) (not b!105378) (not mapNonEmpty!3929) b_and!6519 (not b!105366) b_and!6517 (not b!105367) (not b!105370) (not b_next!2525))
(check-sat b_and!6517 b_and!6519 (not b_next!2525) (not b_next!2527))
(get-model)

(declare-fun d!28781 () Bool)

(declare-fun e!68682 () Bool)

(assert (=> d!28781 e!68682))

(declare-fun res!52487 () Bool)

(assert (=> d!28781 (=> res!52487 e!68682)))

(declare-fun lt!53870 () Bool)

(assert (=> d!28781 (= res!52487 (not lt!53870))))

(declare-fun lt!53873 () Bool)

(assert (=> d!28781 (= lt!53870 lt!53873)))

(declare-fun lt!53872 () Unit!3250)

(declare-fun e!68681 () Unit!3250)

(assert (=> d!28781 (= lt!53872 e!68681)))

(declare-fun c!18328 () Bool)

(assert (=> d!28781 (= c!18328 lt!53873)))

(declare-fun containsKey!159 (List!1642 (_ BitVec 64)) Bool)

(assert (=> d!28781 (= lt!53873 (containsKey!159 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!28781 (= (contains!829 lt!53820 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) lt!53870)))

(declare-fun b!105450 () Bool)

(declare-fun lt!53871 () Unit!3250)

(assert (=> b!105450 (= e!68681 lt!53871)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!108 (List!1642 (_ BitVec 64)) Unit!3250)

(assert (=> b!105450 (= lt!53871 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-datatypes ((Option!161 0))(
  ( (Some!160 (v!2896 V!3219)) (None!159) )
))
(declare-fun isDefined!109 (Option!161) Bool)

(declare-fun getValueByKey!155 (List!1642 (_ BitVec 64)) Option!161)

(assert (=> b!105450 (isDefined!109 (getValueByKey!155 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!105451 () Bool)

(declare-fun Unit!3257 () Unit!3250)

(assert (=> b!105451 (= e!68681 Unit!3257)))

(declare-fun b!105452 () Bool)

(assert (=> b!105452 (= e!68682 (isDefined!109 (getValueByKey!155 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (= (and d!28781 c!18328) b!105450))

(assert (= (and d!28781 (not c!18328)) b!105451))

(assert (= (and d!28781 (not res!52487)) b!105452))

(assert (=> d!28781 m!117519))

(declare-fun m!117621 () Bool)

(assert (=> d!28781 m!117621))

(assert (=> b!105450 m!117519))

(declare-fun m!117623 () Bool)

(assert (=> b!105450 m!117623))

(assert (=> b!105450 m!117519))

(declare-fun m!117625 () Bool)

(assert (=> b!105450 m!117625))

(assert (=> b!105450 m!117625))

(declare-fun m!117627 () Bool)

(assert (=> b!105450 m!117627))

(assert (=> b!105452 m!117519))

(assert (=> b!105452 m!117625))

(assert (=> b!105452 m!117625))

(assert (=> b!105452 m!117627))

(assert (=> b!105364 d!28781))

(declare-fun b!105529 () Bool)

(declare-fun c!18354 () Bool)

(declare-datatypes ((SeekEntryResult!269 0))(
  ( (MissingZero!269 (index!3224 (_ BitVec 32))) (Found!269 (index!3225 (_ BitVec 32))) (Intermediate!269 (undefined!1081 Bool) (index!3226 (_ BitVec 32)) (x!13655 (_ BitVec 32))) (Undefined!269) (MissingVacant!269 (index!3227 (_ BitVec 32))) )
))
(declare-fun lt!53946 () SeekEntryResult!269)

(assert (=> b!105529 (= c!18354 ((_ is MissingVacant!269) lt!53946))))

(declare-fun e!68730 () Bool)

(declare-fun e!68734 () Bool)

(assert (=> b!105529 (= e!68730 e!68734)))

(declare-fun bm!11120 () Bool)

(declare-fun call!11133 () Bool)

(declare-fun call!11135 () Bool)

(assert (=> bm!11120 (= call!11133 call!11135)))

(declare-fun b!105530 () Bool)

(declare-fun lt!53954 () tuple2!2412)

(declare-fun call!11142 () tuple2!2412)

(assert (=> b!105530 (= lt!53954 call!11142)))

(declare-fun e!68738 () tuple2!2412)

(assert (=> b!105530 (= e!68738 (tuple2!2413 (_1!1216 lt!53954) (_2!1216 lt!53954)))))

(declare-fun b!105531 () Bool)

(declare-fun lt!53929 () Unit!3250)

(declare-fun lt!53944 () Unit!3250)

(assert (=> b!105531 (= lt!53929 lt!53944)))

(declare-fun call!11140 () ListLongMap!1585)

(declare-fun call!11130 () ListLongMap!1585)

(assert (=> b!105531 (= call!11140 call!11130)))

(declare-fun lt!53952 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 V!3219 Int) Unit!3250)

(assert (=> b!105531 (= lt!53944 (lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!53952 (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) lt!53815 (defaultEntry!2582 newMap!16)))))

(assert (=> b!105531 (= lt!53952 (bvor (extraKeys!2387 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!68731 () tuple2!2412)

(assert (=> b!105531 (= e!68731 (tuple2!2413 true (LongMapFixedSize!901 (defaultEntry!2582 newMap!16) (mask!6728 newMap!16) (bvor (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) (zeroValue!2457 newMap!16) lt!53815 (_size!499 newMap!16) (_keys!4288 newMap!16) (_values!2565 newMap!16) (_vacant!499 newMap!16))))))

(declare-fun bm!11121 () Bool)

(declare-fun call!11125 () Bool)

(declare-fun call!11123 () Bool)

(assert (=> bm!11121 (= call!11125 call!11123)))

(declare-fun b!105532 () Bool)

(declare-fun e!68729 () Bool)

(declare-fun e!68733 () Bool)

(assert (=> b!105532 (= e!68729 e!68733)))

(declare-fun res!52519 () Bool)

(declare-fun call!11131 () ListLongMap!1585)

(assert (=> b!105532 (= res!52519 (contains!829 call!11131 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> b!105532 (=> (not res!52519) (not e!68733))))

(declare-fun b!105533 () Bool)

(declare-fun lt!53945 () Unit!3250)

(declare-fun lt!53940 () Unit!3250)

(assert (=> b!105533 (= lt!53945 lt!53940)))

(declare-fun call!11124 () Bool)

(assert (=> b!105533 call!11124))

(declare-fun lt!53938 () SeekEntryResult!269)

(declare-fun lt!53949 () array!4350)

(declare-fun lemmaValidKeyInArrayIsInListMap!105 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) Int) Unit!3250)

(assert (=> b!105533 (= lt!53940 (lemmaValidKeyInArrayIsInListMap!105 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3225 lt!53938) (defaultEntry!2582 newMap!16)))))

(assert (=> b!105533 (= lt!53949 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))))))

(declare-fun lt!53930 () Unit!3250)

(declare-fun lt!53932 () Unit!3250)

(assert (=> b!105533 (= lt!53930 lt!53932)))

(declare-fun call!11134 () ListLongMap!1585)

(assert (=> b!105533 (= call!11134 (getCurrentListMap!484 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) (_ BitVec 64) V!3219 Int) Unit!3250)

(assert (=> b!105533 (= lt!53932 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3225 lt!53938) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!53942 () Unit!3250)

(declare-fun e!68732 () Unit!3250)

(assert (=> b!105533 (= lt!53942 e!68732)))

(declare-fun call!11137 () ListLongMap!1585)

(declare-fun c!18356 () Bool)

(assert (=> b!105533 (= c!18356 (contains!829 call!11137 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> b!105533 (= e!68738 (tuple2!2413 true (LongMapFixedSize!901 (defaultEntry!2582 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (_size!499 newMap!16) (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (_vacant!499 newMap!16))))))

(declare-fun b!105534 () Bool)

(declare-fun res!52521 () Bool)

(declare-fun e!68742 () Bool)

(assert (=> b!105534 (=> (not res!52521) (not e!68742))))

(assert (=> b!105534 (= res!52521 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3224 lt!53946)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!18357 () Bool)

(declare-fun c!18359 () Bool)

(declare-fun call!11141 () ListLongMap!1585)

(declare-fun bm!11122 () Bool)

(declare-fun lt!53953 () (_ BitVec 32))

(declare-fun c!18361 () Bool)

(assert (=> bm!11122 (= call!11141 (getCurrentListMap!484 (_keys!4288 newMap!16) (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949) (mask!6728 newMap!16) (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun b!105535 () Bool)

(declare-fun call!11129 () Bool)

(assert (=> b!105535 (= e!68742 (not call!11129))))

(declare-fun b!105536 () Bool)

(declare-fun lt!53935 () Unit!3250)

(declare-fun lt!53950 () Unit!3250)

(assert (=> b!105536 (= lt!53935 lt!53950)))

(declare-fun call!11128 () ListLongMap!1585)

(assert (=> b!105536 (= call!11140 call!11128)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!47 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 V!3219 Int) Unit!3250)

(assert (=> b!105536 (= lt!53950 (lemmaChangeZeroKeyThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!53953 (zeroValue!2457 newMap!16) lt!53815 (minValue!2457 newMap!16) (defaultEntry!2582 newMap!16)))))

(assert (=> b!105536 (= lt!53953 (bvor (extraKeys!2387 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!105536 (= e!68731 (tuple2!2413 true (LongMapFixedSize!901 (defaultEntry!2582 newMap!16) (mask!6728 newMap!16) (bvor (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) lt!53815 (minValue!2457 newMap!16) (_size!499 newMap!16) (_keys!4288 newMap!16) (_values!2565 newMap!16) (_vacant!499 newMap!16))))))

(declare-fun bm!11123 () Bool)

(declare-fun call!11126 () Bool)

(assert (=> bm!11123 (= call!11126 call!11125)))

(declare-fun b!105537 () Bool)

(declare-fun c!18358 () Bool)

(assert (=> b!105537 (= c!18358 ((_ is MissingVacant!269) lt!53938))))

(declare-fun e!68724 () tuple2!2412)

(declare-fun e!68735 () tuple2!2412)

(assert (=> b!105537 (= e!68724 e!68735)))

(declare-fun call!11127 () SeekEntryResult!269)

(declare-fun bm!11124 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4348 (_ BitVec 32)) SeekEntryResult!269)

(assert (=> bm!11124 (= call!11127 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun b!105538 () Bool)

(declare-fun res!52522 () Bool)

(declare-fun call!11144 () Bool)

(assert (=> b!105538 (= res!52522 call!11144)))

(declare-fun e!68739 () Bool)

(assert (=> b!105538 (=> (not res!52522) (not e!68739))))

(declare-fun call!11138 () ListLongMap!1585)

(declare-fun bm!11125 () Bool)

(assert (=> bm!11125 (= call!11124 (contains!829 call!11138 (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))

(declare-fun call!11139 () Unit!3250)

(declare-fun bm!11126 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) Int) Unit!3250)

(assert (=> bm!11126 (= call!11139 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(declare-fun b!105539 () Bool)

(declare-fun res!52525 () Bool)

(assert (=> b!105539 (= res!52525 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3227 lt!53946)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68723 () Bool)

(assert (=> b!105539 (=> (not res!52525) (not e!68723))))

(declare-fun b!105540 () Bool)

(declare-fun e!68736 () Bool)

(declare-fun e!68726 () Bool)

(assert (=> b!105540 (= e!68736 e!68726)))

(declare-fun res!52529 () Bool)

(declare-fun call!11146 () Bool)

(assert (=> b!105540 (= res!52529 call!11146)))

(assert (=> b!105540 (=> (not res!52529) (not e!68726))))

(declare-fun b!105541 () Bool)

(declare-fun e!68725 () Bool)

(assert (=> b!105541 (= e!68725 e!68729)))

(declare-fun c!18355 () Bool)

(declare-fun lt!53943 () tuple2!2412)

(assert (=> b!105541 (= c!18355 (_1!1216 lt!53943))))

(declare-fun bm!11127 () Bool)

(assert (=> bm!11127 (= call!11138 call!11141)))

(declare-fun bm!11128 () Bool)

(declare-fun call!11132 () SeekEntryResult!269)

(assert (=> bm!11128 (= call!11132 call!11127)))

(declare-fun b!105542 () Bool)

(declare-fun Unit!3258 () Unit!3250)

(assert (=> b!105542 (= e!68732 Unit!3258)))

(declare-fun lt!53931 () Unit!3250)

(assert (=> b!105542 (= lt!53931 call!11139)))

(declare-fun lt!53947 () SeekEntryResult!269)

(assert (=> b!105542 (= lt!53947 call!11132)))

(declare-fun c!18362 () Bool)

(assert (=> b!105542 (= c!18362 ((_ is MissingZero!269) lt!53947))))

(declare-fun e!68741 () Bool)

(assert (=> b!105542 e!68741))

(declare-fun lt!53951 () Unit!3250)

(assert (=> b!105542 (= lt!53951 lt!53931)))

(assert (=> b!105542 false))

(declare-fun b!105543 () Bool)

(declare-fun res!52526 () Bool)

(declare-fun e!68740 () Bool)

(assert (=> b!105543 (=> (not res!52526) (not e!68740))))

(assert (=> b!105543 (= res!52526 call!11146)))

(assert (=> b!105543 (= e!68741 e!68740)))

(declare-fun b!105544 () Bool)

(declare-fun e!68727 () tuple2!2412)

(assert (=> b!105544 (= e!68727 e!68724)))

(assert (=> b!105544 (= lt!53938 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(assert (=> b!105544 (= c!18357 ((_ is Undefined!269) lt!53938))))

(declare-fun bm!11129 () Bool)

(assert (=> bm!11129 (= call!11144 call!11123)))

(declare-fun bm!11130 () Bool)

(assert (=> bm!11130 (= call!11130 call!11137)))

(declare-fun b!105545 () Bool)

(declare-fun call!11143 () ListLongMap!1585)

(assert (=> b!105545 (= e!68733 (= call!11131 (+!146 call!11143 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun bm!11131 () Bool)

(assert (=> bm!11131 (= call!11143 (map!1283 newMap!16))))

(declare-fun b!105546 () Bool)

(assert (=> b!105546 (= e!68723 (not call!11129))))

(declare-fun b!105547 () Bool)

(declare-fun e!68737 () Unit!3250)

(declare-fun Unit!3259 () Unit!3250)

(assert (=> b!105547 (= e!68737 Unit!3259)))

(declare-fun lt!53941 () Unit!3250)

(declare-fun call!11145 () Unit!3250)

(assert (=> b!105547 (= lt!53941 call!11145)))

(declare-fun lt!53939 () SeekEntryResult!269)

(declare-fun call!11136 () SeekEntryResult!269)

(assert (=> b!105547 (= lt!53939 call!11136)))

(declare-fun res!52523 () Bool)

(assert (=> b!105547 (= res!52523 ((_ is Found!269) lt!53939))))

(declare-fun e!68728 () Bool)

(assert (=> b!105547 (=> (not res!52523) (not e!68728))))

(assert (=> b!105547 e!68728))

(declare-fun lt!53928 () Unit!3250)

(assert (=> b!105547 (= lt!53928 lt!53941)))

(assert (=> b!105547 false))

(declare-fun b!105548 () Bool)

(declare-fun res!52517 () Bool)

(assert (=> b!105548 (= res!52517 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3227 lt!53947)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105548 (=> (not res!52517) (not e!68726))))

(declare-fun b!105549 () Bool)

(declare-fun res!52527 () Bool)

(assert (=> b!105549 (= res!52527 call!11125)))

(assert (=> b!105549 (=> (not res!52527) (not e!68728))))

(declare-fun b!105550 () Bool)

(assert (=> b!105550 (= e!68735 e!68738)))

(declare-fun c!18364 () Bool)

(assert (=> b!105550 (= c!18364 ((_ is MissingZero!269) lt!53938))))

(declare-fun b!105551 () Bool)

(assert (=> b!105551 (= e!68728 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53939)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!105552 () Bool)

(assert (=> b!105552 (= e!68734 ((_ is Undefined!269) lt!53946))))

(declare-fun bm!11132 () Bool)

(assert (=> bm!11132 (= call!11128 call!11141)))

(declare-fun b!105553 () Bool)

(assert (=> b!105553 (= e!68740 (not call!11133))))

(declare-fun bm!11133 () Bool)

(declare-fun updateHelperNewKey!47 (LongMapFixedSize!900 (_ BitVec 64) V!3219 (_ BitVec 32)) tuple2!2412)

(assert (=> bm!11133 (= call!11142 (updateHelperNewKey!47 newMap!16 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938))))))

(declare-fun b!105554 () Bool)

(declare-fun lt!53934 () Unit!3250)

(assert (=> b!105554 (= lt!53934 e!68737)))

(declare-fun c!18353 () Bool)

(assert (=> b!105554 (= c!18353 call!11124)))

(assert (=> b!105554 (= e!68724 (tuple2!2413 false newMap!16))))

(declare-fun b!105555 () Bool)

(declare-fun res!52520 () Bool)

(assert (=> b!105555 (=> (not res!52520) (not e!68740))))

(assert (=> b!105555 (= res!52520 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3224 lt!53947)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11134 () Bool)

(assert (=> bm!11134 (= call!11146 call!11144)))

(declare-fun bm!11135 () Bool)

(assert (=> bm!11135 (= call!11135 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!105556 () Bool)

(declare-fun res!52528 () Bool)

(assert (=> b!105556 (=> (not res!52528) (not e!68742))))

(assert (=> b!105556 (= res!52528 call!11126)))

(assert (=> b!105556 (= e!68730 e!68742)))

(declare-fun bm!11136 () Bool)

(assert (=> bm!11136 (= call!11140 call!11134)))

(declare-fun b!105557 () Bool)

(assert (=> b!105557 (= e!68734 e!68723)))

(declare-fun res!52524 () Bool)

(assert (=> b!105557 (= res!52524 call!11126)))

(assert (=> b!105557 (=> (not res!52524) (not e!68723))))

(declare-fun b!105558 () Bool)

(assert (=> b!105558 (= e!68729 (= call!11131 call!11143))))

(declare-fun d!28783 () Bool)

(assert (=> d!28783 e!68725))

(declare-fun res!52518 () Bool)

(assert (=> d!28783 (=> (not res!52518) (not e!68725))))

(assert (=> d!28783 (= res!52518 (valid!408 (_2!1216 lt!53943)))))

(assert (=> d!28783 (= lt!53943 e!68727)))

(assert (=> d!28783 (= c!18361 (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvneg (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (=> d!28783 (valid!408 newMap!16)))

(assert (=> d!28783 (= (update!158 newMap!16 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815) lt!53943)))

(declare-fun b!105559 () Bool)

(declare-fun c!18360 () Bool)

(assert (=> b!105559 (= c!18360 ((_ is MissingVacant!269) lt!53947))))

(assert (=> b!105559 (= e!68741 e!68736)))

(declare-fun bm!11137 () Bool)

(assert (=> bm!11137 (= call!11134 (+!146 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137) (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun bm!11138 () Bool)

(declare-fun c!18363 () Bool)

(declare-fun lt!53948 () SeekEntryResult!269)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11138 (= call!11123 (inRange!0 (ite c!18357 (ite c!18353 (index!3225 lt!53939) (ite c!18363 (index!3224 lt!53946) (index!3227 lt!53946))) (ite c!18356 (index!3225 lt!53948) (ite c!18362 (index!3224 lt!53947) (index!3227 lt!53947)))) (mask!6728 newMap!16)))))

(declare-fun b!105560 () Bool)

(declare-fun lt!53936 () tuple2!2412)

(assert (=> b!105560 (= e!68735 (tuple2!2413 (_1!1216 lt!53936) (_2!1216 lt!53936)))))

(assert (=> b!105560 (= lt!53936 call!11142)))

(declare-fun b!105561 () Bool)

(assert (=> b!105561 (= e!68727 e!68731)))

(assert (=> b!105561 (= c!18359 (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11139 () Bool)

(assert (=> bm!11139 (= call!11137 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bm!11140 () Bool)

(assert (=> bm!11140 (= call!11131 (map!1283 (_2!1216 lt!53943)))))

(declare-fun bm!11141 () Bool)

(assert (=> bm!11141 (= call!11136 call!11127)))

(declare-fun b!105562 () Bool)

(assert (=> b!105562 (= e!68739 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53948)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!105563 () Bool)

(declare-fun lt!53937 () Unit!3250)

(assert (=> b!105563 (= e!68737 lt!53937)))

(assert (=> b!105563 (= lt!53937 call!11139)))

(assert (=> b!105563 (= lt!53946 call!11136)))

(assert (=> b!105563 (= c!18363 ((_ is MissingZero!269) lt!53946))))

(assert (=> b!105563 e!68730))

(declare-fun b!105564 () Bool)

(declare-fun lt!53933 () Unit!3250)

(assert (=> b!105564 (= e!68732 lt!53933)))

(assert (=> b!105564 (= lt!53933 call!11145)))

(assert (=> b!105564 (= lt!53948 call!11132)))

(declare-fun res!52516 () Bool)

(assert (=> b!105564 (= res!52516 ((_ is Found!269) lt!53948))))

(assert (=> b!105564 (=> (not res!52516) (not e!68739))))

(assert (=> b!105564 e!68739))

(declare-fun b!105565 () Bool)

(assert (=> b!105565 (= e!68726 (not call!11133))))

(declare-fun b!105566 () Bool)

(assert (=> b!105566 (= e!68736 ((_ is Undefined!269) lt!53947))))

(declare-fun bm!11142 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) Int) Unit!3250)

(assert (=> bm!11142 (= call!11145 (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(declare-fun bm!11143 () Bool)

(assert (=> bm!11143 (= call!11129 call!11135)))

(assert (= (and d!28783 c!18361) b!105561))

(assert (= (and d!28783 (not c!18361)) b!105544))

(assert (= (and b!105561 c!18359) b!105536))

(assert (= (and b!105561 (not c!18359)) b!105531))

(assert (= (or b!105536 b!105531) bm!11130))

(assert (= (or b!105536 b!105531) bm!11132))

(assert (= (or b!105536 b!105531) bm!11136))

(assert (= (and b!105544 c!18357) b!105554))

(assert (= (and b!105544 (not c!18357)) b!105537))

(assert (= (and b!105554 c!18353) b!105547))

(assert (= (and b!105554 (not c!18353)) b!105563))

(assert (= (and b!105547 res!52523) b!105549))

(assert (= (and b!105549 res!52527) b!105551))

(assert (= (and b!105563 c!18363) b!105556))

(assert (= (and b!105563 (not c!18363)) b!105529))

(assert (= (and b!105556 res!52528) b!105534))

(assert (= (and b!105534 res!52521) b!105535))

(assert (= (and b!105529 c!18354) b!105557))

(assert (= (and b!105529 (not c!18354)) b!105552))

(assert (= (and b!105557 res!52524) b!105539))

(assert (= (and b!105539 res!52525) b!105546))

(assert (= (or b!105556 b!105557) bm!11123))

(assert (= (or b!105535 b!105546) bm!11143))

(assert (= (or b!105549 bm!11123) bm!11121))

(assert (= (or b!105547 b!105563) bm!11141))

(assert (= (and b!105537 c!18358) b!105560))

(assert (= (and b!105537 (not c!18358)) b!105550))

(assert (= (and b!105550 c!18364) b!105530))

(assert (= (and b!105550 (not c!18364)) b!105533))

(assert (= (and b!105533 c!18356) b!105564))

(assert (= (and b!105533 (not c!18356)) b!105542))

(assert (= (and b!105564 res!52516) b!105538))

(assert (= (and b!105538 res!52522) b!105562))

(assert (= (and b!105542 c!18362) b!105543))

(assert (= (and b!105542 (not c!18362)) b!105559))

(assert (= (and b!105543 res!52526) b!105555))

(assert (= (and b!105555 res!52520) b!105553))

(assert (= (and b!105559 c!18360) b!105540))

(assert (= (and b!105559 (not c!18360)) b!105566))

(assert (= (and b!105540 res!52529) b!105548))

(assert (= (and b!105548 res!52517) b!105565))

(assert (= (or b!105543 b!105540) bm!11134))

(assert (= (or b!105553 b!105565) bm!11120))

(assert (= (or b!105538 bm!11134) bm!11129))

(assert (= (or b!105564 b!105542) bm!11128))

(assert (= (or b!105560 b!105530) bm!11133))

(assert (= (or b!105554 b!105533) bm!11127))

(assert (= (or bm!11143 bm!11120) bm!11135))

(assert (= (or bm!11141 bm!11128) bm!11124))

(assert (= (or bm!11121 bm!11129) bm!11138))

(assert (= (or b!105563 b!105542) bm!11126))

(assert (= (or b!105547 b!105564) bm!11142))

(assert (= (or b!105554 b!105533) bm!11125))

(assert (= (or bm!11132 bm!11127) bm!11122))

(assert (= (or bm!11130 b!105533) bm!11139))

(assert (= (or bm!11136 b!105533) bm!11137))

(assert (= (and d!28783 res!52518) b!105541))

(assert (= (and b!105541 c!18355) b!105532))

(assert (= (and b!105541 (not c!18355)) b!105558))

(assert (= (and b!105532 res!52519) b!105545))

(assert (= (or b!105545 b!105558) bm!11131))

(assert (= (or b!105532 b!105545 b!105558) bm!11140))

(assert (=> bm!11131 m!117543))

(declare-fun m!117629 () Bool)

(assert (=> b!105548 m!117629))

(assert (=> bm!11126 m!117519))

(declare-fun m!117631 () Bool)

(assert (=> bm!11126 m!117631))

(assert (=> bm!11133 m!117519))

(declare-fun m!117633 () Bool)

(assert (=> bm!11133 m!117633))

(assert (=> bm!11124 m!117519))

(declare-fun m!117635 () Bool)

(assert (=> bm!11124 m!117635))

(assert (=> bm!11142 m!117519))

(declare-fun m!117637 () Bool)

(assert (=> bm!11142 m!117637))

(declare-fun m!117639 () Bool)

(assert (=> bm!11138 m!117639))

(declare-fun m!117641 () Bool)

(assert (=> bm!11137 m!117641))

(declare-fun m!117643 () Bool)

(assert (=> b!105562 m!117643))

(assert (=> b!105532 m!117519))

(declare-fun m!117645 () Bool)

(assert (=> b!105532 m!117645))

(declare-fun m!117647 () Bool)

(assert (=> b!105534 m!117647))

(assert (=> b!105544 m!117519))

(assert (=> b!105544 m!117635))

(declare-fun m!117649 () Bool)

(assert (=> b!105551 m!117649))

(declare-fun m!117651 () Bool)

(assert (=> b!105539 m!117651))

(declare-fun m!117653 () Bool)

(assert (=> bm!11122 m!117653))

(declare-fun m!117655 () Bool)

(assert (=> d!28783 m!117655))

(assert (=> d!28783 m!117527))

(assert (=> bm!11135 m!117519))

(declare-fun m!117657 () Bool)

(assert (=> bm!11135 m!117657))

(declare-fun m!117659 () Bool)

(assert (=> bm!11125 m!117659))

(declare-fun m!117661 () Bool)

(assert (=> bm!11125 m!117661))

(declare-fun m!117663 () Bool)

(assert (=> bm!11140 m!117663))

(declare-fun m!117665 () Bool)

(assert (=> b!105545 m!117665))

(declare-fun m!117667 () Bool)

(assert (=> bm!11139 m!117667))

(declare-fun m!117669 () Bool)

(assert (=> b!105531 m!117669))

(declare-fun m!117671 () Bool)

(assert (=> b!105536 m!117671))

(declare-fun m!117673 () Bool)

(assert (=> b!105555 m!117673))

(declare-fun m!117675 () Bool)

(assert (=> b!105533 m!117675))

(declare-fun m!117677 () Bool)

(assert (=> b!105533 m!117677))

(assert (=> b!105533 m!117519))

(declare-fun m!117679 () Bool)

(assert (=> b!105533 m!117679))

(assert (=> b!105533 m!117519))

(declare-fun m!117681 () Bool)

(assert (=> b!105533 m!117681))

(declare-fun m!117683 () Bool)

(assert (=> b!105533 m!117683))

(assert (=> b!105364 d!28783))

(declare-fun d!28785 () Bool)

(assert (=> d!28785 (= (map!1283 newMap!16) (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bs!4327 () Bool)

(assert (= bs!4327 d!28785))

(declare-fun m!117685 () Bool)

(assert (=> bs!4327 m!117685))

(assert (=> b!105378 d!28785))

(declare-fun b!105609 () Bool)

(declare-fun e!68777 () Bool)

(declare-fun e!68780 () Bool)

(assert (=> b!105609 (= e!68777 e!68780)))

(declare-fun res!52554 () Bool)

(declare-fun call!11167 () Bool)

(assert (=> b!105609 (= res!52554 call!11167)))

(assert (=> b!105609 (=> (not res!52554) (not e!68780))))

(declare-fun bm!11158 () Bool)

(declare-fun call!11161 () ListLongMap!1585)

(assert (=> bm!11158 (= call!11161 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun bm!11159 () Bool)

(declare-fun call!11165 () ListLongMap!1585)

(assert (=> bm!11159 (= call!11165 call!11161)))

(declare-fun b!105611 () Bool)

(declare-fun e!68772 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!105611 (= e!68772 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!11160 () Bool)

(declare-fun call!11164 () ListLongMap!1585)

(declare-fun call!11166 () ListLongMap!1585)

(assert (=> bm!11160 (= call!11164 call!11166)))

(declare-fun b!105612 () Bool)

(declare-fun e!68775 () Unit!3250)

(declare-fun lt!54004 () Unit!3250)

(assert (=> b!105612 (= e!68775 lt!54004)))

(declare-fun lt!54017 () ListLongMap!1585)

(assert (=> b!105612 (= lt!54017 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun lt!54013 () (_ BitVec 64))

(assert (=> b!105612 (= lt!54013 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54016 () (_ BitVec 64))

(assert (=> b!105612 (= lt!54016 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!54000 () Unit!3250)

(declare-fun addStillContains!74 (ListLongMap!1585 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3250)

(assert (=> b!105612 (= lt!54000 (addStillContains!74 lt!54017 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54016))))

(assert (=> b!105612 (contains!829 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54016)))

(declare-fun lt!53999 () Unit!3250)

(assert (=> b!105612 (= lt!53999 lt!54000)))

(declare-fun lt!54009 () ListLongMap!1585)

(assert (=> b!105612 (= lt!54009 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun lt!54001 () (_ BitVec 64))

(assert (=> b!105612 (= lt!54001 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54007 () (_ BitVec 64))

(assert (=> b!105612 (= lt!54007 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!54005 () Unit!3250)

(declare-fun addApplyDifferent!74 (ListLongMap!1585 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3250)

(assert (=> b!105612 (= lt!54005 (addApplyDifferent!74 lt!54009 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54007))))

(declare-fun apply!98 (ListLongMap!1585 (_ BitVec 64)) V!3219)

(assert (=> b!105612 (= (apply!98 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54007) (apply!98 lt!54009 lt!54007))))

(declare-fun lt!54015 () Unit!3250)

(assert (=> b!105612 (= lt!54015 lt!54005)))

(declare-fun lt!54012 () ListLongMap!1585)

(assert (=> b!105612 (= lt!54012 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun lt!54010 () (_ BitVec 64))

(assert (=> b!105612 (= lt!54010 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54019 () (_ BitVec 64))

(assert (=> b!105612 (= lt!54019 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!54020 () Unit!3250)

(assert (=> b!105612 (= lt!54020 (addApplyDifferent!74 lt!54012 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54019))))

(assert (=> b!105612 (= (apply!98 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54019) (apply!98 lt!54012 lt!54019))))

(declare-fun lt!54006 () Unit!3250)

(assert (=> b!105612 (= lt!54006 lt!54020)))

(declare-fun lt!54008 () ListLongMap!1585)

(assert (=> b!105612 (= lt!54008 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun lt!54018 () (_ BitVec 64))

(assert (=> b!105612 (= lt!54018 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54003 () (_ BitVec 64))

(assert (=> b!105612 (= lt!54003 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!105612 (= lt!54004 (addApplyDifferent!74 lt!54008 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54003))))

(assert (=> b!105612 (= (apply!98 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54003) (apply!98 lt!54008 lt!54003))))

(declare-fun b!105613 () Bool)

(declare-fun e!68776 () Bool)

(assert (=> b!105613 (= e!68776 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105614 () Bool)

(declare-fun lt!54011 () ListLongMap!1585)

(assert (=> b!105614 (= e!68780 (= (apply!98 lt!54011 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun b!105615 () Bool)

(declare-fun e!68779 () Bool)

(declare-fun e!68773 () Bool)

(assert (=> b!105615 (= e!68779 e!68773)))

(declare-fun res!52552 () Bool)

(declare-fun call!11163 () Bool)

(assert (=> b!105615 (= res!52552 call!11163)))

(assert (=> b!105615 (=> (not res!52552) (not e!68773))))

(declare-fun b!105616 () Bool)

(declare-fun res!52553 () Bool)

(declare-fun e!68781 () Bool)

(assert (=> b!105616 (=> (not res!52553) (not e!68781))))

(assert (=> b!105616 (= res!52553 e!68779)))

(declare-fun c!18382 () Bool)

(assert (=> b!105616 (= c!18382 (not (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!105617 () Bool)

(declare-fun c!18378 () Bool)

(assert (=> b!105617 (= c!18378 (and (not (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68770 () ListLongMap!1585)

(declare-fun e!68778 () ListLongMap!1585)

(assert (=> b!105617 (= e!68770 e!68778)))

(declare-fun b!105618 () Bool)

(declare-fun res!52550 () Bool)

(assert (=> b!105618 (=> (not res!52550) (not e!68781))))

(declare-fun e!68771 () Bool)

(assert (=> b!105618 (= res!52550 e!68771)))

(declare-fun res!52556 () Bool)

(assert (=> b!105618 (=> res!52556 e!68771)))

(assert (=> b!105618 (= res!52556 (not e!68776))))

(declare-fun res!52551 () Bool)

(assert (=> b!105618 (=> (not res!52551) (not e!68776))))

(assert (=> b!105618 (= res!52551 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!105619 () Bool)

(declare-fun e!68774 () Bool)

(assert (=> b!105619 (= e!68771 e!68774)))

(declare-fun res!52549 () Bool)

(assert (=> b!105619 (=> (not res!52549) (not e!68774))))

(assert (=> b!105619 (= res!52549 (contains!829 lt!54011 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105619 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!105620 () Bool)

(assert (=> b!105620 (= e!68778 call!11164)))

(declare-fun bm!11161 () Bool)

(assert (=> bm!11161 (= call!11163 (contains!829 lt!54011 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!28787 () Bool)

(assert (=> d!28787 e!68781))

(declare-fun res!52555 () Bool)

(assert (=> d!28787 (=> (not res!52555) (not e!68781))))

(assert (=> d!28787 (= res!52555 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun lt!54002 () ListLongMap!1585)

(assert (=> d!28787 (= lt!54011 lt!54002)))

(declare-fun lt!54014 () Unit!3250)

(assert (=> d!28787 (= lt!54014 e!68775)))

(declare-fun c!18380 () Bool)

(assert (=> d!28787 (= c!18380 e!68772)))

(declare-fun res!52548 () Bool)

(assert (=> d!28787 (=> (not res!52548) (not e!68772))))

(assert (=> d!28787 (= res!52548 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun e!68769 () ListLongMap!1585)

(assert (=> d!28787 (= lt!54002 e!68769)))

(declare-fun c!18381 () Bool)

(assert (=> d!28787 (= c!18381 (and (not (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28787 (validMask!0 (mask!6728 (v!2892 (underlying!362 thiss!992))))))

(assert (=> d!28787 (= (getCurrentListMap!484 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))) lt!54011)))

(declare-fun b!105610 () Bool)

(declare-fun Unit!3260 () Unit!3250)

(assert (=> b!105610 (= e!68775 Unit!3260)))

(declare-fun b!105621 () Bool)

(assert (=> b!105621 (= e!68769 e!68770)))

(declare-fun c!18377 () Bool)

(assert (=> b!105621 (= c!18377 (and (not (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105622 () Bool)

(assert (=> b!105622 (= e!68781 e!68777)))

(declare-fun c!18379 () Bool)

(assert (=> b!105622 (= c!18379 (not (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11162 () Bool)

(assert (=> bm!11162 (= call!11167 (contains!829 lt!54011 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105623 () Bool)

(assert (=> b!105623 (= e!68770 call!11164)))

(declare-fun bm!11163 () Bool)

(declare-fun call!11162 () ListLongMap!1585)

(assert (=> bm!11163 (= call!11166 (+!146 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162)) (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!105624 () Bool)

(assert (=> b!105624 (= e!68774 (= (apply!98 lt!54011 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105624 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_values!2565 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> b!105624 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!105625 () Bool)

(assert (=> b!105625 (= e!68779 (not call!11163))))

(declare-fun b!105626 () Bool)

(assert (=> b!105626 (= e!68777 (not call!11167))))

(declare-fun b!105627 () Bool)

(assert (=> b!105627 (= e!68778 call!11162)))

(declare-fun bm!11164 () Bool)

(assert (=> bm!11164 (= call!11162 call!11165)))

(declare-fun b!105628 () Bool)

(assert (=> b!105628 (= e!68773 (= (apply!98 lt!54011 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun b!105629 () Bool)

(assert (=> b!105629 (= e!68769 (+!146 call!11166 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!28787 c!18381) b!105629))

(assert (= (and d!28787 (not c!18381)) b!105621))

(assert (= (and b!105621 c!18377) b!105623))

(assert (= (and b!105621 (not c!18377)) b!105617))

(assert (= (and b!105617 c!18378) b!105620))

(assert (= (and b!105617 (not c!18378)) b!105627))

(assert (= (or b!105620 b!105627) bm!11164))

(assert (= (or b!105623 bm!11164) bm!11159))

(assert (= (or b!105623 b!105620) bm!11160))

(assert (= (or b!105629 bm!11159) bm!11158))

(assert (= (or b!105629 bm!11160) bm!11163))

(assert (= (and d!28787 res!52548) b!105611))

(assert (= (and d!28787 c!18380) b!105612))

(assert (= (and d!28787 (not c!18380)) b!105610))

(assert (= (and d!28787 res!52555) b!105618))

(assert (= (and b!105618 res!52551) b!105613))

(assert (= (and b!105618 (not res!52556)) b!105619))

(assert (= (and b!105619 res!52549) b!105624))

(assert (= (and b!105618 res!52550) b!105616))

(assert (= (and b!105616 c!18382) b!105615))

(assert (= (and b!105616 (not c!18382)) b!105625))

(assert (= (and b!105615 res!52552) b!105628))

(assert (= (or b!105615 b!105625) bm!11161))

(assert (= (and b!105616 res!52553) b!105622))

(assert (= (and b!105622 c!18379) b!105609))

(assert (= (and b!105622 (not c!18379)) b!105626))

(assert (= (and b!105609 res!52554) b!105614))

(assert (= (or b!105609 b!105626) bm!11162))

(declare-fun b_lambda!4739 () Bool)

(assert (=> (not b_lambda!4739) (not b!105624)))

(assert (=> b!105624 t!5734))

(declare-fun b_and!6529 () Bool)

(assert (= b_and!6517 (and (=> t!5734 result!3461) b_and!6529)))

(assert (=> b!105624 t!5736))

(declare-fun b_and!6531 () Bool)

(assert (= b_and!6519 (and (=> t!5736 result!3465) b_and!6531)))

(declare-fun m!117687 () Bool)

(assert (=> b!105624 m!117687))

(declare-fun m!117689 () Bool)

(assert (=> b!105624 m!117689))

(assert (=> b!105624 m!117549))

(declare-fun m!117691 () Bool)

(assert (=> b!105624 m!117691))

(assert (=> b!105624 m!117687))

(declare-fun m!117693 () Bool)

(assert (=> b!105624 m!117693))

(assert (=> b!105624 m!117689))

(assert (=> b!105624 m!117549))

(declare-fun m!117695 () Bool)

(assert (=> bm!11162 m!117695))

(declare-fun m!117697 () Bool)

(assert (=> bm!11163 m!117697))

(declare-fun m!117699 () Bool)

(assert (=> b!105629 m!117699))

(assert (=> d!28787 m!117531))

(assert (=> b!105611 m!117687))

(assert (=> b!105611 m!117687))

(declare-fun m!117701 () Bool)

(assert (=> b!105611 m!117701))

(declare-fun m!117703 () Bool)

(assert (=> b!105614 m!117703))

(assert (=> b!105613 m!117687))

(assert (=> b!105613 m!117687))

(assert (=> b!105613 m!117701))

(declare-fun m!117705 () Bool)

(assert (=> b!105628 m!117705))

(declare-fun m!117707 () Bool)

(assert (=> bm!11161 m!117707))

(assert (=> bm!11158 m!117539))

(assert (=> b!105619 m!117687))

(assert (=> b!105619 m!117687))

(declare-fun m!117709 () Bool)

(assert (=> b!105619 m!117709))

(declare-fun m!117711 () Bool)

(assert (=> b!105612 m!117711))

(declare-fun m!117713 () Bool)

(assert (=> b!105612 m!117713))

(assert (=> b!105612 m!117539))

(assert (=> b!105612 m!117687))

(declare-fun m!117715 () Bool)

(assert (=> b!105612 m!117715))

(declare-fun m!117717 () Bool)

(assert (=> b!105612 m!117717))

(declare-fun m!117719 () Bool)

(assert (=> b!105612 m!117719))

(declare-fun m!117721 () Bool)

(assert (=> b!105612 m!117721))

(declare-fun m!117723 () Bool)

(assert (=> b!105612 m!117723))

(declare-fun m!117725 () Bool)

(assert (=> b!105612 m!117725))

(declare-fun m!117727 () Bool)

(assert (=> b!105612 m!117727))

(assert (=> b!105612 m!117721))

(declare-fun m!117729 () Bool)

(assert (=> b!105612 m!117729))

(declare-fun m!117731 () Bool)

(assert (=> b!105612 m!117731))

(declare-fun m!117733 () Bool)

(assert (=> b!105612 m!117733))

(assert (=> b!105612 m!117729))

(declare-fun m!117735 () Bool)

(assert (=> b!105612 m!117735))

(assert (=> b!105612 m!117725))

(declare-fun m!117737 () Bool)

(assert (=> b!105612 m!117737))

(assert (=> b!105612 m!117715))

(declare-fun m!117739 () Bool)

(assert (=> b!105612 m!117739))

(assert (=> b!105378 d!28787))

(declare-fun d!28789 () Bool)

(assert (=> d!28789 (= (array_inv!1241 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvsge (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!105370 d!28789))

(declare-fun d!28791 () Bool)

(assert (=> d!28791 (= (array_inv!1242 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvsge (size!2318 (_values!2565 (v!2892 (underlying!362 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!105370 d!28791))

(declare-fun d!28793 () Bool)

(declare-fun e!68784 () Bool)

(assert (=> d!28793 e!68784))

(declare-fun res!52562 () Bool)

(assert (=> d!28793 (=> (not res!52562) (not e!68784))))

(declare-fun lt!54031 () ListLongMap!1585)

(assert (=> d!28793 (= res!52562 (contains!829 lt!54031 (_1!1215 lt!53818)))))

(declare-fun lt!54030 () List!1642)

(assert (=> d!28793 (= lt!54031 (ListLongMap!1586 lt!54030))))

(declare-fun lt!54032 () Unit!3250)

(declare-fun lt!54029 () Unit!3250)

(assert (=> d!28793 (= lt!54032 lt!54029)))

(assert (=> d!28793 (= (getValueByKey!155 lt!54030 (_1!1215 lt!53818)) (Some!160 (_2!1215 lt!53818)))))

(declare-fun lemmaContainsTupThenGetReturnValue!73 (List!1642 (_ BitVec 64) V!3219) Unit!3250)

(assert (=> d!28793 (= lt!54029 (lemmaContainsTupThenGetReturnValue!73 lt!54030 (_1!1215 lt!53818) (_2!1215 lt!53818)))))

(declare-fun insertStrictlySorted!75 (List!1642 (_ BitVec 64) V!3219) List!1642)

(assert (=> d!28793 (= lt!54030 (insertStrictlySorted!75 (toList!808 lt!53824) (_1!1215 lt!53818) (_2!1215 lt!53818)))))

(assert (=> d!28793 (= (+!146 lt!53824 lt!53818) lt!54031)))

(declare-fun b!105634 () Bool)

(declare-fun res!52561 () Bool)

(assert (=> b!105634 (=> (not res!52561) (not e!68784))))

(assert (=> b!105634 (= res!52561 (= (getValueByKey!155 (toList!808 lt!54031) (_1!1215 lt!53818)) (Some!160 (_2!1215 lt!53818))))))

(declare-fun b!105635 () Bool)

(declare-fun contains!830 (List!1642 tuple2!2410) Bool)

(assert (=> b!105635 (= e!68784 (contains!830 (toList!808 lt!54031) lt!53818))))

(assert (= (and d!28793 res!52562) b!105634))

(assert (= (and b!105634 res!52561) b!105635))

(declare-fun m!117741 () Bool)

(assert (=> d!28793 m!117741))

(declare-fun m!117743 () Bool)

(assert (=> d!28793 m!117743))

(declare-fun m!117745 () Bool)

(assert (=> d!28793 m!117745))

(declare-fun m!117747 () Bool)

(assert (=> d!28793 m!117747))

(declare-fun m!117749 () Bool)

(assert (=> b!105634 m!117749))

(declare-fun m!117751 () Bool)

(assert (=> b!105635 m!117751))

(assert (=> b!105361 d!28793))

(declare-fun d!28795 () Bool)

(assert (=> d!28795 (= (+!146 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (+!146 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(declare-fun lt!54035 () Unit!3250)

(declare-fun choose!660 (ListLongMap!1585 (_ BitVec 64) V!3219 (_ BitVec 64) V!3219) Unit!3250)

(assert (=> d!28795 (= lt!54035 (choose!660 lt!53824 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))

(assert (=> d!28795 (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28795 (= (addCommutativeForDiffKeys!58 lt!53824 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) lt!54035)))

(declare-fun bs!4328 () Bool)

(assert (= bs!4328 d!28795))

(assert (=> bs!4328 m!117519))

(declare-fun m!117753 () Bool)

(assert (=> bs!4328 m!117753))

(declare-fun m!117755 () Bool)

(assert (=> bs!4328 m!117755))

(declare-fun m!117757 () Bool)

(assert (=> bs!4328 m!117757))

(declare-fun m!117759 () Bool)

(assert (=> bs!4328 m!117759))

(assert (=> bs!4328 m!117757))

(assert (=> bs!4328 m!117755))

(declare-fun m!117761 () Bool)

(assert (=> bs!4328 m!117761))

(assert (=> b!105361 d!28795))

(declare-fun d!28797 () Bool)

(assert (=> d!28797 (= (validMask!0 (mask!6728 (v!2892 (underlying!362 thiss!992)))) (and (or (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000001111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000011111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000001111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000011111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000001111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000011111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000001111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000011111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000001111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000011111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000001111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000011111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000111111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000001111111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000011111111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000111111111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000001111111111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000011111111111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000111111111111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00001111111111111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00011111111111111111111111111111) (= (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!105361 d!28797))

(declare-fun d!28799 () Bool)

(declare-fun e!68785 () Bool)

(assert (=> d!28799 e!68785))

(declare-fun res!52564 () Bool)

(assert (=> d!28799 (=> (not res!52564) (not e!68785))))

(declare-fun lt!54038 () ListLongMap!1585)

(assert (=> d!28799 (= res!52564 (contains!829 lt!54038 (_1!1215 lt!53817)))))

(declare-fun lt!54037 () List!1642)

(assert (=> d!28799 (= lt!54038 (ListLongMap!1586 lt!54037))))

(declare-fun lt!54039 () Unit!3250)

(declare-fun lt!54036 () Unit!3250)

(assert (=> d!28799 (= lt!54039 lt!54036)))

(assert (=> d!28799 (= (getValueByKey!155 lt!54037 (_1!1215 lt!53817)) (Some!160 (_2!1215 lt!53817)))))

(assert (=> d!28799 (= lt!54036 (lemmaContainsTupThenGetReturnValue!73 lt!54037 (_1!1215 lt!53817) (_2!1215 lt!53817)))))

(assert (=> d!28799 (= lt!54037 (insertStrictlySorted!75 (toList!808 lt!53824) (_1!1215 lt!53817) (_2!1215 lt!53817)))))

(assert (=> d!28799 (= (+!146 lt!53824 lt!53817) lt!54038)))

(declare-fun b!105636 () Bool)

(declare-fun res!52563 () Bool)

(assert (=> b!105636 (=> (not res!52563) (not e!68785))))

(assert (=> b!105636 (= res!52563 (= (getValueByKey!155 (toList!808 lt!54038) (_1!1215 lt!53817)) (Some!160 (_2!1215 lt!53817))))))

(declare-fun b!105637 () Bool)

(assert (=> b!105637 (= e!68785 (contains!830 (toList!808 lt!54038) lt!53817))))

(assert (= (and d!28799 res!52564) b!105636))

(assert (= (and b!105636 res!52563) b!105637))

(declare-fun m!117763 () Bool)

(assert (=> d!28799 m!117763))

(declare-fun m!117765 () Bool)

(assert (=> d!28799 m!117765))

(declare-fun m!117767 () Bool)

(assert (=> d!28799 m!117767))

(declare-fun m!117769 () Bool)

(assert (=> d!28799 m!117769))

(declare-fun m!117771 () Bool)

(assert (=> b!105636 m!117771))

(declare-fun m!117773 () Bool)

(assert (=> b!105637 m!117773))

(assert (=> b!105361 d!28799))

(declare-fun b!105662 () Bool)

(declare-fun e!68805 () Bool)

(declare-fun e!68804 () Bool)

(assert (=> b!105662 (= e!68805 e!68804)))

(declare-fun c!18391 () Bool)

(assert (=> b!105662 (= c!18391 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!105663 () Bool)

(declare-fun e!68800 () Bool)

(assert (=> b!105663 (= e!68805 e!68800)))

(assert (=> b!105663 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun lt!54058 () ListLongMap!1585)

(declare-fun res!52575 () Bool)

(assert (=> b!105663 (= res!52575 (contains!829 lt!54058 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105663 (=> (not res!52575) (not e!68800))))

(declare-fun d!28801 () Bool)

(declare-fun e!68803 () Bool)

(assert (=> d!28801 e!68803))

(declare-fun res!52576 () Bool)

(assert (=> d!28801 (=> (not res!52576) (not e!68803))))

(assert (=> d!28801 (= res!52576 (not (contains!829 lt!54058 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!68802 () ListLongMap!1585)

(assert (=> d!28801 (= lt!54058 e!68802)))

(declare-fun c!18393 () Bool)

(assert (=> d!28801 (= c!18393 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> d!28801 (validMask!0 (mask!6728 (v!2892 (underlying!362 thiss!992))))))

(assert (=> d!28801 (= (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))) lt!54058)))

(declare-fun b!105664 () Bool)

(assert (=> b!105664 (= e!68803 e!68805)))

(declare-fun c!18392 () Bool)

(declare-fun e!68806 () Bool)

(assert (=> b!105664 (= c!18392 e!68806)))

(declare-fun res!52574 () Bool)

(assert (=> b!105664 (=> (not res!52574) (not e!68806))))

(assert (=> b!105664 (= res!52574 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!105665 () Bool)

(assert (=> b!105665 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> b!105665 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2318 (_values!2565 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> b!105665 (= e!68800 (= (apply!98 lt!54058 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!105666 () Bool)

(declare-fun lt!54056 () Unit!3250)

(declare-fun lt!54054 () Unit!3250)

(assert (=> b!105666 (= lt!54056 lt!54054)))

(declare-fun lt!54060 () (_ BitVec 64))

(declare-fun lt!54059 () ListLongMap!1585)

(declare-fun lt!54057 () V!3219)

(declare-fun lt!54055 () (_ BitVec 64))

(assert (=> b!105666 (not (contains!829 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)) lt!54060))))

(declare-fun addStillNotContains!48 (ListLongMap!1585 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3250)

(assert (=> b!105666 (= lt!54054 (addStillNotContains!48 lt!54059 lt!54055 lt!54057 lt!54060))))

(assert (=> b!105666 (= lt!54060 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!105666 (= lt!54057 (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!105666 (= lt!54055 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!11170 () ListLongMap!1585)

(assert (=> b!105666 (= lt!54059 call!11170)))

(declare-fun e!68801 () ListLongMap!1585)

(assert (=> b!105666 (= e!68801 (+!146 call!11170 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!105667 () Bool)

(assert (=> b!105667 (= e!68802 (ListLongMap!1586 Nil!1639))))

(declare-fun b!105668 () Bool)

(assert (=> b!105668 (= e!68801 call!11170)))

(declare-fun b!105669 () Bool)

(assert (=> b!105669 (= e!68802 e!68801)))

(declare-fun c!18394 () Bool)

(assert (=> b!105669 (= c!18394 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105670 () Bool)

(declare-fun isEmpty!375 (ListLongMap!1585) Bool)

(assert (=> b!105670 (= e!68804 (isEmpty!375 lt!54058))))

(declare-fun bm!11167 () Bool)

(assert (=> bm!11167 (= call!11170 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun b!105671 () Bool)

(assert (=> b!105671 (= e!68806 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105671 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!105672 () Bool)

(assert (=> b!105672 (= e!68804 (= lt!54058 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!105673 () Bool)

(declare-fun res!52573 () Bool)

(assert (=> b!105673 (=> (not res!52573) (not e!68803))))

(assert (=> b!105673 (= res!52573 (not (contains!829 lt!54058 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28801 c!18393) b!105667))

(assert (= (and d!28801 (not c!18393)) b!105669))

(assert (= (and b!105669 c!18394) b!105666))

(assert (= (and b!105669 (not c!18394)) b!105668))

(assert (= (or b!105666 b!105668) bm!11167))

(assert (= (and d!28801 res!52576) b!105673))

(assert (= (and b!105673 res!52573) b!105664))

(assert (= (and b!105664 res!52574) b!105671))

(assert (= (and b!105664 c!18392) b!105663))

(assert (= (and b!105664 (not c!18392)) b!105662))

(assert (= (and b!105663 res!52575) b!105665))

(assert (= (and b!105662 c!18391) b!105672))

(assert (= (and b!105662 (not c!18391)) b!105670))

(declare-fun b_lambda!4741 () Bool)

(assert (=> (not b_lambda!4741) (not b!105665)))

(assert (=> b!105665 t!5734))

(declare-fun b_and!6533 () Bool)

(assert (= b_and!6529 (and (=> t!5734 result!3461) b_and!6533)))

(assert (=> b!105665 t!5736))

(declare-fun b_and!6535 () Bool)

(assert (= b_and!6531 (and (=> t!5736 result!3465) b_and!6535)))

(declare-fun b_lambda!4743 () Bool)

(assert (=> (not b_lambda!4743) (not b!105666)))

(assert (=> b!105666 t!5734))

(declare-fun b_and!6537 () Bool)

(assert (= b_and!6533 (and (=> t!5734 result!3461) b_and!6537)))

(assert (=> b!105666 t!5736))

(declare-fun b_and!6539 () Bool)

(assert (= b_and!6535 (and (=> t!5736 result!3465) b_and!6539)))

(assert (=> b!105669 m!117687))

(assert (=> b!105669 m!117687))

(assert (=> b!105669 m!117701))

(declare-fun m!117775 () Bool)

(assert (=> d!28801 m!117775))

(assert (=> d!28801 m!117531))

(assert (=> b!105665 m!117549))

(assert (=> b!105665 m!117689))

(assert (=> b!105665 m!117687))

(declare-fun m!117777 () Bool)

(assert (=> b!105665 m!117777))

(assert (=> b!105665 m!117689))

(assert (=> b!105665 m!117549))

(assert (=> b!105665 m!117691))

(assert (=> b!105665 m!117687))

(declare-fun m!117779 () Bool)

(assert (=> b!105670 m!117779))

(assert (=> b!105663 m!117687))

(assert (=> b!105663 m!117687))

(declare-fun m!117781 () Bool)

(assert (=> b!105663 m!117781))

(assert (=> b!105671 m!117687))

(assert (=> b!105671 m!117687))

(assert (=> b!105671 m!117701))

(declare-fun m!117783 () Bool)

(assert (=> b!105673 m!117783))

(declare-fun m!117785 () Bool)

(assert (=> b!105666 m!117785))

(assert (=> b!105666 m!117785))

(declare-fun m!117787 () Bool)

(assert (=> b!105666 m!117787))

(declare-fun m!117789 () Bool)

(assert (=> b!105666 m!117789))

(assert (=> b!105666 m!117549))

(assert (=> b!105666 m!117689))

(declare-fun m!117791 () Bool)

(assert (=> b!105666 m!117791))

(assert (=> b!105666 m!117689))

(assert (=> b!105666 m!117549))

(assert (=> b!105666 m!117691))

(assert (=> b!105666 m!117687))

(declare-fun m!117793 () Bool)

(assert (=> bm!11167 m!117793))

(assert (=> b!105672 m!117793))

(assert (=> b!105361 d!28801))

(declare-fun d!28803 () Bool)

(declare-fun e!68807 () Bool)

(assert (=> d!28803 e!68807))

(declare-fun res!52578 () Bool)

(assert (=> d!28803 (=> (not res!52578) (not e!68807))))

(declare-fun lt!54063 () ListLongMap!1585)

(assert (=> d!28803 (= res!52578 (contains!829 lt!54063 (_1!1215 lt!53818)))))

(declare-fun lt!54062 () List!1642)

(assert (=> d!28803 (= lt!54063 (ListLongMap!1586 lt!54062))))

(declare-fun lt!54064 () Unit!3250)

(declare-fun lt!54061 () Unit!3250)

(assert (=> d!28803 (= lt!54064 lt!54061)))

(assert (=> d!28803 (= (getValueByKey!155 lt!54062 (_1!1215 lt!53818)) (Some!160 (_2!1215 lt!53818)))))

(assert (=> d!28803 (= lt!54061 (lemmaContainsTupThenGetReturnValue!73 lt!54062 (_1!1215 lt!53818) (_2!1215 lt!53818)))))

(assert (=> d!28803 (= lt!54062 (insertStrictlySorted!75 (toList!808 (+!146 lt!53824 lt!53817)) (_1!1215 lt!53818) (_2!1215 lt!53818)))))

(assert (=> d!28803 (= (+!146 (+!146 lt!53824 lt!53817) lt!53818) lt!54063)))

(declare-fun b!105674 () Bool)

(declare-fun res!52577 () Bool)

(assert (=> b!105674 (=> (not res!52577) (not e!68807))))

(assert (=> b!105674 (= res!52577 (= (getValueByKey!155 (toList!808 lt!54063) (_1!1215 lt!53818)) (Some!160 (_2!1215 lt!53818))))))

(declare-fun b!105675 () Bool)

(assert (=> b!105675 (= e!68807 (contains!830 (toList!808 lt!54063) lt!53818))))

(assert (= (and d!28803 res!52578) b!105674))

(assert (= (and b!105674 res!52577) b!105675))

(declare-fun m!117795 () Bool)

(assert (=> d!28803 m!117795))

(declare-fun m!117797 () Bool)

(assert (=> d!28803 m!117797))

(declare-fun m!117799 () Bool)

(assert (=> d!28803 m!117799))

(declare-fun m!117801 () Bool)

(assert (=> d!28803 m!117801))

(declare-fun m!117803 () Bool)

(assert (=> b!105674 m!117803))

(declare-fun m!117805 () Bool)

(assert (=> b!105675 m!117805))

(assert (=> b!105361 d!28803))

(declare-fun d!28805 () Bool)

(declare-fun e!68808 () Bool)

(assert (=> d!28805 e!68808))

(declare-fun res!52580 () Bool)

(assert (=> d!28805 (=> (not res!52580) (not e!68808))))

(declare-fun lt!54067 () ListLongMap!1585)

(assert (=> d!28805 (= res!52580 (contains!829 lt!54067 (_1!1215 lt!53817)))))

(declare-fun lt!54066 () List!1642)

(assert (=> d!28805 (= lt!54067 (ListLongMap!1586 lt!54066))))

(declare-fun lt!54068 () Unit!3250)

(declare-fun lt!54065 () Unit!3250)

(assert (=> d!28805 (= lt!54068 lt!54065)))

(assert (=> d!28805 (= (getValueByKey!155 lt!54066 (_1!1215 lt!53817)) (Some!160 (_2!1215 lt!53817)))))

(assert (=> d!28805 (= lt!54065 (lemmaContainsTupThenGetReturnValue!73 lt!54066 (_1!1215 lt!53817) (_2!1215 lt!53817)))))

(assert (=> d!28805 (= lt!54066 (insertStrictlySorted!75 (toList!808 (+!146 lt!53824 lt!53818)) (_1!1215 lt!53817) (_2!1215 lt!53817)))))

(assert (=> d!28805 (= (+!146 (+!146 lt!53824 lt!53818) lt!53817) lt!54067)))

(declare-fun b!105676 () Bool)

(declare-fun res!52579 () Bool)

(assert (=> b!105676 (=> (not res!52579) (not e!68808))))

(assert (=> b!105676 (= res!52579 (= (getValueByKey!155 (toList!808 lt!54067) (_1!1215 lt!53817)) (Some!160 (_2!1215 lt!53817))))))

(declare-fun b!105677 () Bool)

(assert (=> b!105677 (= e!68808 (contains!830 (toList!808 lt!54067) lt!53817))))

(assert (= (and d!28805 res!52580) b!105676))

(assert (= (and b!105676 res!52579) b!105677))

(declare-fun m!117807 () Bool)

(assert (=> d!28805 m!117807))

(declare-fun m!117809 () Bool)

(assert (=> d!28805 m!117809))

(declare-fun m!117811 () Bool)

(assert (=> d!28805 m!117811))

(declare-fun m!117813 () Bool)

(assert (=> d!28805 m!117813))

(declare-fun m!117815 () Bool)

(assert (=> b!105676 m!117815))

(declare-fun m!117817 () Bool)

(assert (=> b!105677 m!117817))

(assert (=> b!105361 d!28805))

(declare-fun d!28807 () Bool)

(declare-fun res!52587 () Bool)

(declare-fun e!68811 () Bool)

(assert (=> d!28807 (=> (not res!52587) (not e!68811))))

(declare-fun simpleValid!73 (LongMapFixedSize!900) Bool)

(assert (=> d!28807 (= res!52587 (simpleValid!73 newMap!16))))

(assert (=> d!28807 (= (valid!408 newMap!16) e!68811)))

(declare-fun b!105684 () Bool)

(declare-fun res!52588 () Bool)

(assert (=> b!105684 (=> (not res!52588) (not e!68811))))

(declare-fun arrayCountValidKeys!0 (array!4348 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!105684 (= res!52588 (= (arrayCountValidKeys!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (_size!499 newMap!16)))))

(declare-fun b!105685 () Bool)

(declare-fun res!52589 () Bool)

(assert (=> b!105685 (=> (not res!52589) (not e!68811))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4348 (_ BitVec 32)) Bool)

(assert (=> b!105685 (= res!52589 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun b!105686 () Bool)

(assert (=> b!105686 (= e!68811 (arrayNoDuplicates!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 Nil!1640))))

(assert (= (and d!28807 res!52587) b!105684))

(assert (= (and b!105684 res!52588) b!105685))

(assert (= (and b!105685 res!52589) b!105686))

(declare-fun m!117819 () Bool)

(assert (=> d!28807 m!117819))

(declare-fun m!117821 () Bool)

(assert (=> b!105684 m!117821))

(declare-fun m!117823 () Bool)

(assert (=> b!105685 m!117823))

(declare-fun m!117825 () Bool)

(assert (=> b!105686 m!117825))

(assert (=> b!105366 d!28807))

(declare-fun d!28809 () Bool)

(assert (=> d!28809 (= (valid!409 thiss!992) (valid!408 (v!2892 (underlying!362 thiss!992))))))

(declare-fun bs!4329 () Bool)

(assert (= bs!4329 d!28809))

(declare-fun m!117827 () Bool)

(assert (=> bs!4329 m!117827))

(assert (=> start!12364 d!28809))

(declare-fun d!28811 () Bool)

(declare-fun c!18397 () Bool)

(assert (=> d!28811 (= c!18397 ((_ is ValueCellFull!996) (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun e!68814 () V!3219)

(assert (=> d!28811 (= (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) from!355) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68814)))

(declare-fun b!105691 () Bool)

(declare-fun get!1340 (ValueCell!996 V!3219) V!3219)

(assert (=> b!105691 (= e!68814 (get!1340 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) from!355) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105692 () Bool)

(declare-fun get!1341 (ValueCell!996 V!3219) V!3219)

(assert (=> b!105692 (= e!68814 (get!1341 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) from!355) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28811 c!18397) b!105691))

(assert (= (and d!28811 (not c!18397)) b!105692))

(assert (=> b!105691 m!117547))

(assert (=> b!105691 m!117549))

(declare-fun m!117829 () Bool)

(assert (=> b!105691 m!117829))

(assert (=> b!105692 m!117547))

(assert (=> b!105692 m!117549))

(declare-fun m!117831 () Bool)

(assert (=> b!105692 m!117831))

(assert (=> b!105375 d!28811))

(declare-fun d!28813 () Bool)

(assert (=> d!28813 (not (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!54071 () Unit!3250)

(declare-fun choose!68 (array!4348 (_ BitVec 32) (_ BitVec 64) List!1643) Unit!3250)

(assert (=> d!28813 (= lt!54071 (choose!68 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640)))))

(assert (=> d!28813 (bvslt (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!28813 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640)) lt!54071)))

(declare-fun bs!4330 () Bool)

(assert (= bs!4330 d!28813))

(assert (=> bs!4330 m!117519))

(assert (=> bs!4330 m!117523))

(assert (=> bs!4330 m!117519))

(declare-fun m!117833 () Bool)

(assert (=> bs!4330 m!117833))

(assert (=> b!105367 d!28813))

(declare-fun d!28815 () Bool)

(assert (=> d!28815 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) from!355 Nil!1640)))

(declare-fun lt!54074 () Unit!3250)

(declare-fun choose!39 (array!4348 (_ BitVec 32) (_ BitVec 32)) Unit!3250)

(assert (=> d!28815 (= lt!54074 (choose!39 (_keys!4288 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!28815 (bvslt (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!28815 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000000 from!355) lt!54074)))

(declare-fun bs!4331 () Bool)

(assert (= bs!4331 d!28815))

(assert (=> bs!4331 m!117517))

(declare-fun m!117835 () Bool)

(assert (=> bs!4331 m!117835))

(assert (=> b!105367 d!28815))

(declare-fun d!28817 () Bool)

(declare-fun res!52594 () Bool)

(declare-fun e!68819 () Bool)

(assert (=> d!28817 (=> res!52594 e!68819)))

(assert (=> d!28817 (= res!52594 (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!28817 (= (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!68819)))

(declare-fun b!105697 () Bool)

(declare-fun e!68820 () Bool)

(assert (=> b!105697 (= e!68819 e!68820)))

(declare-fun res!52595 () Bool)

(assert (=> b!105697 (=> (not res!52595) (not e!68820))))

(assert (=> b!105697 (= res!52595 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!105698 () Bool)

(assert (=> b!105698 (= e!68820 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!28817 (not res!52594)) b!105697))

(assert (= (and b!105697 res!52595) b!105698))

(assert (=> d!28817 m!117687))

(assert (=> b!105698 m!117519))

(declare-fun m!117837 () Bool)

(assert (=> b!105698 m!117837))

(assert (=> b!105367 d!28817))

(declare-fun d!28819 () Bool)

(declare-fun e!68823 () Bool)

(assert (=> d!28819 e!68823))

(declare-fun c!18400 () Bool)

(assert (=> d!28819 (= c!18400 (and (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!54077 () Unit!3250)

(declare-fun choose!661 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) (_ BitVec 32) Int) Unit!3250)

(assert (=> d!28819 (= lt!54077 (choose!661 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(assert (=> d!28819 (validMask!0 (mask!6728 (v!2892 (underlying!362 thiss!992))))))

(assert (=> d!28819 (= (lemmaListMapContainsThenArrayContainsFrom!112 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))) lt!54077)))

(declare-fun b!105703 () Bool)

(assert (=> b!105703 (= e!68823 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!105704 () Bool)

(assert (=> b!105704 (= e!68823 (ite (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!28819 c!18400) b!105703))

(assert (= (and d!28819 (not c!18400)) b!105704))

(assert (=> d!28819 m!117519))

(declare-fun m!117839 () Bool)

(assert (=> d!28819 m!117839))

(assert (=> d!28819 m!117531))

(assert (=> b!105703 m!117519))

(assert (=> b!105703 m!117523))

(assert (=> b!105367 d!28819))

(declare-fun b!105715 () Bool)

(declare-fun e!68835 () Bool)

(declare-fun call!11173 () Bool)

(assert (=> b!105715 (= e!68835 call!11173)))

(declare-fun b!105716 () Bool)

(declare-fun e!68833 () Bool)

(assert (=> b!105716 (= e!68833 e!68835)))

(declare-fun c!18403 () Bool)

(assert (=> b!105716 (= c!18403 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!105717 () Bool)

(declare-fun e!68832 () Bool)

(assert (=> b!105717 (= e!68832 e!68833)))

(declare-fun res!52604 () Bool)

(assert (=> b!105717 (=> (not res!52604) (not e!68833))))

(declare-fun e!68834 () Bool)

(assert (=> b!105717 (= res!52604 (not e!68834))))

(declare-fun res!52603 () Bool)

(assert (=> b!105717 (=> (not res!52603) (not e!68834))))

(assert (=> b!105717 (= res!52603 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!105718 () Bool)

(declare-fun contains!831 (List!1643 (_ BitVec 64)) Bool)

(assert (=> b!105718 (= e!68834 (contains!831 Nil!1640 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun d!28821 () Bool)

(declare-fun res!52602 () Bool)

(assert (=> d!28821 (=> res!52602 e!68832)))

(assert (=> d!28821 (= res!52602 (bvsge from!355 (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> d!28821 (= (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) from!355 Nil!1640) e!68832)))

(declare-fun b!105719 () Bool)

(assert (=> b!105719 (= e!68835 call!11173)))

(declare-fun bm!11170 () Bool)

(assert (=> bm!11170 (= call!11173 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)))))

(assert (= (and d!28821 (not res!52602)) b!105717))

(assert (= (and b!105717 res!52603) b!105718))

(assert (= (and b!105717 res!52604) b!105716))

(assert (= (and b!105716 c!18403) b!105715))

(assert (= (and b!105716 (not c!18403)) b!105719))

(assert (= (or b!105715 b!105719) bm!11170))

(assert (=> b!105716 m!117519))

(assert (=> b!105716 m!117519))

(declare-fun m!117841 () Bool)

(assert (=> b!105716 m!117841))

(assert (=> b!105717 m!117519))

(assert (=> b!105717 m!117519))

(assert (=> b!105717 m!117841))

(assert (=> b!105718 m!117519))

(assert (=> b!105718 m!117519))

(declare-fun m!117843 () Bool)

(assert (=> b!105718 m!117843))

(assert (=> bm!11170 m!117519))

(declare-fun m!117845 () Bool)

(assert (=> bm!11170 m!117845))

(assert (=> b!105367 d!28821))

(declare-fun d!28823 () Bool)

(assert (=> d!28823 (= (array_inv!1241 (_keys!4288 newMap!16)) (bvsge (size!2317 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105373 d!28823))

(declare-fun d!28825 () Bool)

(assert (=> d!28825 (= (array_inv!1242 (_values!2565 newMap!16)) (bvsge (size!2318 (_values!2565 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105373 d!28825))

(declare-fun mapIsEmpty!3939 () Bool)

(declare-fun mapRes!3939 () Bool)

(assert (=> mapIsEmpty!3939 mapRes!3939))

(declare-fun b!105727 () Bool)

(declare-fun e!68841 () Bool)

(assert (=> b!105727 (= e!68841 tp_is_empty!2679)))

(declare-fun b!105726 () Bool)

(declare-fun e!68840 () Bool)

(assert (=> b!105726 (= e!68840 tp_is_empty!2679)))

(declare-fun mapNonEmpty!3939 () Bool)

(declare-fun tp!9915 () Bool)

(assert (=> mapNonEmpty!3939 (= mapRes!3939 (and tp!9915 e!68840))))

(declare-fun mapValue!3939 () ValueCell!996)

(declare-fun mapRest!3939 () (Array (_ BitVec 32) ValueCell!996))

(declare-fun mapKey!3939 () (_ BitVec 32))

(assert (=> mapNonEmpty!3939 (= mapRest!3929 (store mapRest!3939 mapKey!3939 mapValue!3939))))

(declare-fun condMapEmpty!3939 () Bool)

(declare-fun mapDefault!3939 () ValueCell!996)

(assert (=> mapNonEmpty!3929 (= condMapEmpty!3939 (= mapRest!3929 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3939)))))

(assert (=> mapNonEmpty!3929 (= tp!9900 (and e!68841 mapRes!3939))))

(assert (= (and mapNonEmpty!3929 condMapEmpty!3939) mapIsEmpty!3939))

(assert (= (and mapNonEmpty!3929 (not condMapEmpty!3939)) mapNonEmpty!3939))

(assert (= (and mapNonEmpty!3939 ((_ is ValueCellFull!996) mapValue!3939)) b!105726))

(assert (= (and mapNonEmpty!3929 ((_ is ValueCellFull!996) mapDefault!3939)) b!105727))

(declare-fun m!117847 () Bool)

(assert (=> mapNonEmpty!3939 m!117847))

(declare-fun mapIsEmpty!3940 () Bool)

(declare-fun mapRes!3940 () Bool)

(assert (=> mapIsEmpty!3940 mapRes!3940))

(declare-fun b!105729 () Bool)

(declare-fun e!68843 () Bool)

(assert (=> b!105729 (= e!68843 tp_is_empty!2679)))

(declare-fun b!105728 () Bool)

(declare-fun e!68842 () Bool)

(assert (=> b!105728 (= e!68842 tp_is_empty!2679)))

(declare-fun mapNonEmpty!3940 () Bool)

(declare-fun tp!9916 () Bool)

(assert (=> mapNonEmpty!3940 (= mapRes!3940 (and tp!9916 e!68842))))

(declare-fun mapKey!3940 () (_ BitVec 32))

(declare-fun mapRest!3940 () (Array (_ BitVec 32) ValueCell!996))

(declare-fun mapValue!3940 () ValueCell!996)

(assert (=> mapNonEmpty!3940 (= mapRest!3930 (store mapRest!3940 mapKey!3940 mapValue!3940))))

(declare-fun condMapEmpty!3940 () Bool)

(declare-fun mapDefault!3940 () ValueCell!996)

(assert (=> mapNonEmpty!3930 (= condMapEmpty!3940 (= mapRest!3930 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3940)))))

(assert (=> mapNonEmpty!3930 (= tp!9899 (and e!68843 mapRes!3940))))

(assert (= (and mapNonEmpty!3930 condMapEmpty!3940) mapIsEmpty!3940))

(assert (= (and mapNonEmpty!3930 (not condMapEmpty!3940)) mapNonEmpty!3940))

(assert (= (and mapNonEmpty!3940 ((_ is ValueCellFull!996) mapValue!3940)) b!105728))

(assert (= (and mapNonEmpty!3930 ((_ is ValueCellFull!996) mapDefault!3940)) b!105729))

(declare-fun m!117849 () Bool)

(assert (=> mapNonEmpty!3940 m!117849))

(declare-fun b_lambda!4745 () Bool)

(assert (= b_lambda!4739 (or (and b!105370 b_free!2525) (and b!105373 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))))) b_lambda!4745)))

(declare-fun b_lambda!4747 () Bool)

(assert (= b_lambda!4743 (or (and b!105370 b_free!2525) (and b!105373 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))))) b_lambda!4747)))

(declare-fun b_lambda!4749 () Bool)

(assert (= b_lambda!4741 (or (and b!105370 b_free!2525) (and b!105373 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))))) b_lambda!4749)))

(check-sat (not bm!11170) (not b!105634) (not d!28819) (not bm!11140) (not b!105635) (not b!105628) (not b!105676) (not b!105703) (not b!105452) (not bm!11161) (not mapNonEmpty!3939) (not b!105614) (not b_next!2527) (not d!28807) (not b!105691) (not b!105536) (not bm!11125) (not d!28783) (not d!28803) (not b!105545) (not b!105611) (not bm!11122) (not d!28781) (not b!105674) (not d!28801) (not d!28815) (not bm!11137) (not b!105686) (not bm!11158) (not b!105671) (not d!28785) (not bm!11162) (not b!105613) (not bm!11124) (not bm!11135) (not b!105624) (not b!105532) (not b!105717) (not b!105666) b_and!6539 (not b!105673) (not b!105629) (not d!28793) (not b_lambda!4745) (not b!105684) (not b_lambda!4737) (not b!105533) (not b!105698) (not b!105637) (not b!105619) (not mapNonEmpty!3940) (not b!105450) (not d!28795) (not bm!11138) (not b!105531) (not d!28813) (not b!105612) (not d!28799) (not b!105663) (not bm!11167) tp_is_empty!2679 (not b!105677) (not d!28805) (not bm!11163) (not b!105685) (not b!105544) (not b!105669) (not b!105665) (not b_next!2525) (not bm!11139) (not b!105672) (not b!105716) (not b!105670) (not b!105692) b_and!6537 (not bm!11133) (not bm!11131) (not bm!11142) (not b!105675) (not d!28787) (not bm!11126) (not b_lambda!4747) (not b!105718) (not b!105636) (not d!28809) (not b_lambda!4749))
(check-sat b_and!6537 b_and!6539 (not b_next!2525) (not b_next!2527))
(get-model)

(declare-fun d!28827 () Bool)

(assert (=> d!28827 (= (map!1283 (_2!1216 lt!53943)) (getCurrentListMap!484 (_keys!4288 (_2!1216 lt!53943)) (_values!2565 (_2!1216 lt!53943)) (mask!6728 (_2!1216 lt!53943)) (extraKeys!2387 (_2!1216 lt!53943)) (zeroValue!2457 (_2!1216 lt!53943)) (minValue!2457 (_2!1216 lt!53943)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1216 lt!53943))))))

(declare-fun bs!4332 () Bool)

(assert (= bs!4332 d!28827))

(declare-fun m!117851 () Bool)

(assert (=> bs!4332 m!117851))

(assert (=> bm!11140 d!28827))

(assert (=> d!28813 d!28817))

(declare-fun d!28829 () Bool)

(assert (=> d!28829 (not (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!28829 true))

(declare-fun _$68!106 () Unit!3250)

(assert (=> d!28829 (= (choose!68 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640)) _$68!106)))

(declare-fun bs!4333 () Bool)

(assert (= bs!4333 d!28829))

(assert (=> bs!4333 m!117519))

(assert (=> bs!4333 m!117523))

(assert (=> d!28813 d!28829))

(declare-fun d!28831 () Bool)

(assert (=> d!28831 (= (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105669 d!28831))

(declare-fun d!28833 () Bool)

(declare-fun lt!54080 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!108 (List!1642) (InoxSet tuple2!2410))

(assert (=> d!28833 (= lt!54080 (select (content!108 (toList!808 lt!54038)) lt!53817))))

(declare-fun e!68848 () Bool)

(assert (=> d!28833 (= lt!54080 e!68848)))

(declare-fun res!52610 () Bool)

(assert (=> d!28833 (=> (not res!52610) (not e!68848))))

(assert (=> d!28833 (= res!52610 ((_ is Cons!1638) (toList!808 lt!54038)))))

(assert (=> d!28833 (= (contains!830 (toList!808 lt!54038) lt!53817) lt!54080)))

(declare-fun b!105734 () Bool)

(declare-fun e!68849 () Bool)

(assert (=> b!105734 (= e!68848 e!68849)))

(declare-fun res!52609 () Bool)

(assert (=> b!105734 (=> res!52609 e!68849)))

(assert (=> b!105734 (= res!52609 (= (h!2235 (toList!808 lt!54038)) lt!53817))))

(declare-fun b!105735 () Bool)

(assert (=> b!105735 (= e!68849 (contains!830 (t!5737 (toList!808 lt!54038)) lt!53817))))

(assert (= (and d!28833 res!52610) b!105734))

(assert (= (and b!105734 (not res!52609)) b!105735))

(declare-fun m!117853 () Bool)

(assert (=> d!28833 m!117853))

(declare-fun m!117855 () Bool)

(assert (=> d!28833 m!117855))

(declare-fun m!117857 () Bool)

(assert (=> b!105735 m!117857))

(assert (=> b!105637 d!28833))

(declare-fun b!105744 () Bool)

(declare-fun e!68854 () (_ BitVec 32))

(declare-fun call!11176 () (_ BitVec 32))

(assert (=> b!105744 (= e!68854 (bvadd #b00000000000000000000000000000001 call!11176))))

(declare-fun b!105745 () Bool)

(assert (=> b!105745 (= e!68854 call!11176)))

(declare-fun b!105746 () Bool)

(declare-fun e!68855 () (_ BitVec 32))

(assert (=> b!105746 (= e!68855 #b00000000000000000000000000000000)))

(declare-fun d!28835 () Bool)

(declare-fun lt!54083 () (_ BitVec 32))

(assert (=> d!28835 (and (bvsge lt!54083 #b00000000000000000000000000000000) (bvsle lt!54083 (bvsub (size!2317 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28835 (= lt!54083 e!68855)))

(declare-fun c!18408 () Bool)

(assert (=> d!28835 (= c!18408 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!28835 (and (bvsle #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2317 (_keys!4288 newMap!16)) (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!28835 (= (arrayCountValidKeys!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) lt!54083)))

(declare-fun b!105747 () Bool)

(assert (=> b!105747 (= e!68855 e!68854)))

(declare-fun c!18409 () Bool)

(assert (=> b!105747 (= c!18409 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11173 () Bool)

(assert (=> bm!11173 (= call!11176 (arrayCountValidKeys!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 (_keys!4288 newMap!16))))))

(assert (= (and d!28835 c!18408) b!105746))

(assert (= (and d!28835 (not c!18408)) b!105747))

(assert (= (and b!105747 c!18409) b!105744))

(assert (= (and b!105747 (not c!18409)) b!105745))

(assert (= (or b!105744 b!105745) bm!11173))

(declare-fun m!117859 () Bool)

(assert (=> b!105747 m!117859))

(assert (=> b!105747 m!117859))

(declare-fun m!117861 () Bool)

(assert (=> b!105747 m!117861))

(declare-fun m!117863 () Bool)

(assert (=> bm!11173 m!117863))

(assert (=> b!105684 d!28835))

(declare-fun b!105760 () Bool)

(declare-fun lt!54090 () SeekEntryResult!269)

(declare-fun e!68863 () SeekEntryResult!269)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4348 (_ BitVec 32)) SeekEntryResult!269)

(assert (=> b!105760 (= e!68863 (seekKeyOrZeroReturnVacant!0 (x!13655 lt!54090) (index!3226 lt!54090) (index!3226 lt!54090) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun b!105761 () Bool)

(declare-fun c!18417 () Bool)

(declare-fun lt!54091 () (_ BitVec 64))

(assert (=> b!105761 (= c!18417 (= lt!54091 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68864 () SeekEntryResult!269)

(assert (=> b!105761 (= e!68864 e!68863)))

(declare-fun b!105762 () Bool)

(declare-fun e!68862 () SeekEntryResult!269)

(assert (=> b!105762 (= e!68862 Undefined!269)))

(declare-fun b!105763 () Bool)

(assert (=> b!105763 (= e!68863 (MissingZero!269 (index!3226 lt!54090)))))

(declare-fun d!28837 () Bool)

(declare-fun lt!54092 () SeekEntryResult!269)

(assert (=> d!28837 (and (or ((_ is Undefined!269) lt!54092) (not ((_ is Found!269) lt!54092)) (and (bvsge (index!3225 lt!54092) #b00000000000000000000000000000000) (bvslt (index!3225 lt!54092) (size!2317 (_keys!4288 newMap!16))))) (or ((_ is Undefined!269) lt!54092) ((_ is Found!269) lt!54092) (not ((_ is MissingZero!269) lt!54092)) (and (bvsge (index!3224 lt!54092) #b00000000000000000000000000000000) (bvslt (index!3224 lt!54092) (size!2317 (_keys!4288 newMap!16))))) (or ((_ is Undefined!269) lt!54092) ((_ is Found!269) lt!54092) ((_ is MissingZero!269) lt!54092) (not ((_ is MissingVacant!269) lt!54092)) (and (bvsge (index!3227 lt!54092) #b00000000000000000000000000000000) (bvslt (index!3227 lt!54092) (size!2317 (_keys!4288 newMap!16))))) (or ((_ is Undefined!269) lt!54092) (ite ((_ is Found!269) lt!54092) (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!54092)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (ite ((_ is MissingZero!269) lt!54092) (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3224 lt!54092)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!269) lt!54092) (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3227 lt!54092)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28837 (= lt!54092 e!68862)))

(declare-fun c!18416 () Bool)

(assert (=> d!28837 (= c!18416 (and ((_ is Intermediate!269) lt!54090) (undefined!1081 lt!54090)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4348 (_ BitVec 32)) SeekEntryResult!269)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!28837 (= lt!54090 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (mask!6728 newMap!16)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(assert (=> d!28837 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28837 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)) lt!54092)))

(declare-fun b!105764 () Bool)

(assert (=> b!105764 (= e!68862 e!68864)))

(assert (=> b!105764 (= lt!54091 (select (arr!2062 (_keys!4288 newMap!16)) (index!3226 lt!54090)))))

(declare-fun c!18418 () Bool)

(assert (=> b!105764 (= c!18418 (= lt!54091 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!105765 () Bool)

(assert (=> b!105765 (= e!68864 (Found!269 (index!3226 lt!54090)))))

(assert (= (and d!28837 c!18416) b!105762))

(assert (= (and d!28837 (not c!18416)) b!105764))

(assert (= (and b!105764 c!18418) b!105765))

(assert (= (and b!105764 (not c!18418)) b!105761))

(assert (= (and b!105761 c!18417) b!105763))

(assert (= (and b!105761 (not c!18417)) b!105760))

(assert (=> b!105760 m!117519))

(declare-fun m!117865 () Bool)

(assert (=> b!105760 m!117865))

(declare-fun m!117867 () Bool)

(assert (=> d!28837 m!117867))

(declare-fun m!117869 () Bool)

(assert (=> d!28837 m!117869))

(assert (=> d!28837 m!117519))

(declare-fun m!117871 () Bool)

(assert (=> d!28837 m!117871))

(assert (=> d!28837 m!117871))

(assert (=> d!28837 m!117519))

(declare-fun m!117873 () Bool)

(assert (=> d!28837 m!117873))

(declare-fun m!117875 () Bool)

(assert (=> d!28837 m!117875))

(declare-fun m!117877 () Bool)

(assert (=> d!28837 m!117877))

(declare-fun m!117879 () Bool)

(assert (=> b!105764 m!117879))

(assert (=> bm!11124 d!28837))

(declare-fun b!105766 () Bool)

(declare-fun e!68870 () Bool)

(declare-fun e!68869 () Bool)

(assert (=> b!105766 (= e!68870 e!68869)))

(declare-fun c!18419 () Bool)

(assert (=> b!105766 (= c!18419 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!105767 () Bool)

(declare-fun e!68865 () Bool)

(assert (=> b!105767 (= e!68870 e!68865)))

(assert (=> b!105767 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun res!52613 () Bool)

(declare-fun lt!54097 () ListLongMap!1585)

(assert (=> b!105767 (= res!52613 (contains!829 lt!54097 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!105767 (=> (not res!52613) (not e!68865))))

(declare-fun d!28839 () Bool)

(declare-fun e!68868 () Bool)

(assert (=> d!28839 e!68868))

(declare-fun res!52614 () Bool)

(assert (=> d!28839 (=> (not res!52614) (not e!68868))))

(assert (=> d!28839 (= res!52614 (not (contains!829 lt!54097 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!68867 () ListLongMap!1585)

(assert (=> d!28839 (= lt!54097 e!68867)))

(declare-fun c!18421 () Bool)

(assert (=> d!28839 (= c!18421 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> d!28839 (validMask!0 (mask!6728 (v!2892 (underlying!362 thiss!992))))))

(assert (=> d!28839 (= (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))) lt!54097)))

(declare-fun b!105768 () Bool)

(assert (=> b!105768 (= e!68868 e!68870)))

(declare-fun c!18420 () Bool)

(declare-fun e!68871 () Bool)

(assert (=> b!105768 (= c!18420 e!68871)))

(declare-fun res!52612 () Bool)

(assert (=> b!105768 (=> (not res!52612) (not e!68871))))

(assert (=> b!105768 (= res!52612 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!105769 () Bool)

(assert (=> b!105769 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> b!105769 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2318 (_values!2565 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> b!105769 (= e!68865 (= (apply!98 lt!54097 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!105770 () Bool)

(declare-fun lt!54095 () Unit!3250)

(declare-fun lt!54093 () Unit!3250)

(assert (=> b!105770 (= lt!54095 lt!54093)))

(declare-fun lt!54094 () (_ BitVec 64))

(declare-fun lt!54098 () ListLongMap!1585)

(declare-fun lt!54096 () V!3219)

(declare-fun lt!54099 () (_ BitVec 64))

(assert (=> b!105770 (not (contains!829 (+!146 lt!54098 (tuple2!2411 lt!54094 lt!54096)) lt!54099))))

(assert (=> b!105770 (= lt!54093 (addStillNotContains!48 lt!54098 lt!54094 lt!54096 lt!54099))))

(assert (=> b!105770 (= lt!54099 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!105770 (= lt!54096 (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!105770 (= lt!54094 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!11177 () ListLongMap!1585)

(assert (=> b!105770 (= lt!54098 call!11177)))

(declare-fun e!68866 () ListLongMap!1585)

(assert (=> b!105770 (= e!68866 (+!146 call!11177 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!105771 () Bool)

(assert (=> b!105771 (= e!68867 (ListLongMap!1586 Nil!1639))))

(declare-fun b!105772 () Bool)

(assert (=> b!105772 (= e!68866 call!11177)))

(declare-fun b!105773 () Bool)

(assert (=> b!105773 (= e!68867 e!68866)))

(declare-fun c!18422 () Bool)

(assert (=> b!105773 (= c!18422 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!105774 () Bool)

(assert (=> b!105774 (= e!68869 (isEmpty!375 lt!54097))))

(declare-fun bm!11174 () Bool)

(assert (=> bm!11174 (= call!11177 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun b!105775 () Bool)

(assert (=> b!105775 (= e!68871 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!105775 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!105776 () Bool)

(assert (=> b!105776 (= e!68869 (= lt!54097 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!105777 () Bool)

(declare-fun res!52611 () Bool)

(assert (=> b!105777 (=> (not res!52611) (not e!68868))))

(assert (=> b!105777 (= res!52611 (not (contains!829 lt!54097 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28839 c!18421) b!105771))

(assert (= (and d!28839 (not c!18421)) b!105773))

(assert (= (and b!105773 c!18422) b!105770))

(assert (= (and b!105773 (not c!18422)) b!105772))

(assert (= (or b!105770 b!105772) bm!11174))

(assert (= (and d!28839 res!52614) b!105777))

(assert (= (and b!105777 res!52611) b!105768))

(assert (= (and b!105768 res!52612) b!105775))

(assert (= (and b!105768 c!18420) b!105767))

(assert (= (and b!105768 (not c!18420)) b!105766))

(assert (= (and b!105767 res!52613) b!105769))

(assert (= (and b!105766 c!18419) b!105776))

(assert (= (and b!105766 (not c!18419)) b!105774))

(declare-fun b_lambda!4751 () Bool)

(assert (=> (not b_lambda!4751) (not b!105769)))

(assert (=> b!105769 t!5734))

(declare-fun b_and!6541 () Bool)

(assert (= b_and!6537 (and (=> t!5734 result!3461) b_and!6541)))

(assert (=> b!105769 t!5736))

(declare-fun b_and!6543 () Bool)

(assert (= b_and!6539 (and (=> t!5736 result!3465) b_and!6543)))

(declare-fun b_lambda!4753 () Bool)

(assert (=> (not b_lambda!4753) (not b!105770)))

(assert (=> b!105770 t!5734))

(declare-fun b_and!6545 () Bool)

(assert (= b_and!6541 (and (=> t!5734 result!3461) b_and!6545)))

(assert (=> b!105770 t!5736))

(declare-fun b_and!6547 () Bool)

(assert (= b_and!6543 (and (=> t!5736 result!3465) b_and!6547)))

(declare-fun m!117881 () Bool)

(assert (=> b!105773 m!117881))

(assert (=> b!105773 m!117881))

(declare-fun m!117883 () Bool)

(assert (=> b!105773 m!117883))

(declare-fun m!117885 () Bool)

(assert (=> d!28839 m!117885))

(assert (=> d!28839 m!117531))

(assert (=> b!105769 m!117549))

(declare-fun m!117887 () Bool)

(assert (=> b!105769 m!117887))

(assert (=> b!105769 m!117881))

(declare-fun m!117889 () Bool)

(assert (=> b!105769 m!117889))

(assert (=> b!105769 m!117887))

(assert (=> b!105769 m!117549))

(declare-fun m!117891 () Bool)

(assert (=> b!105769 m!117891))

(assert (=> b!105769 m!117881))

(declare-fun m!117893 () Bool)

(assert (=> b!105774 m!117893))

(assert (=> b!105767 m!117881))

(assert (=> b!105767 m!117881))

(declare-fun m!117895 () Bool)

(assert (=> b!105767 m!117895))

(assert (=> b!105775 m!117881))

(assert (=> b!105775 m!117881))

(assert (=> b!105775 m!117883))

(declare-fun m!117897 () Bool)

(assert (=> b!105777 m!117897))

(declare-fun m!117899 () Bool)

(assert (=> b!105770 m!117899))

(assert (=> b!105770 m!117899))

(declare-fun m!117901 () Bool)

(assert (=> b!105770 m!117901))

(declare-fun m!117903 () Bool)

(assert (=> b!105770 m!117903))

(assert (=> b!105770 m!117549))

(assert (=> b!105770 m!117887))

(declare-fun m!117905 () Bool)

(assert (=> b!105770 m!117905))

(assert (=> b!105770 m!117887))

(assert (=> b!105770 m!117549))

(assert (=> b!105770 m!117891))

(assert (=> b!105770 m!117881))

(declare-fun m!117907 () Bool)

(assert (=> bm!11174 m!117907))

(assert (=> b!105776 m!117907))

(assert (=> bm!11167 d!28839))

(declare-fun b!105778 () Bool)

(declare-fun e!68875 () Bool)

(declare-fun call!11178 () Bool)

(assert (=> b!105778 (= e!68875 call!11178)))

(declare-fun b!105779 () Bool)

(declare-fun e!68873 () Bool)

(assert (=> b!105779 (= e!68873 e!68875)))

(declare-fun c!18423 () Bool)

(assert (=> b!105779 (= c!18423 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105780 () Bool)

(declare-fun e!68872 () Bool)

(assert (=> b!105780 (= e!68872 e!68873)))

(declare-fun res!52617 () Bool)

(assert (=> b!105780 (=> (not res!52617) (not e!68873))))

(declare-fun e!68874 () Bool)

(assert (=> b!105780 (= res!52617 (not e!68874))))

(declare-fun res!52616 () Bool)

(assert (=> b!105780 (=> (not res!52616) (not e!68874))))

(assert (=> b!105780 (= res!52616 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105781 () Bool)

(assert (=> b!105781 (= e!68874 (contains!831 Nil!1640 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!28841 () Bool)

(declare-fun res!52615 () Bool)

(assert (=> d!28841 (=> res!52615 e!68872)))

(assert (=> d!28841 (= res!52615 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!28841 (= (arrayNoDuplicates!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 Nil!1640) e!68872)))

(declare-fun b!105782 () Bool)

(assert (=> b!105782 (= e!68875 call!11178)))

(declare-fun bm!11175 () Bool)

(assert (=> bm!11175 (= call!11178 (arrayNoDuplicates!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18423 (Cons!1639 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) Nil!1640) Nil!1640)))))

(assert (= (and d!28841 (not res!52615)) b!105780))

(assert (= (and b!105780 res!52616) b!105781))

(assert (= (and b!105780 res!52617) b!105779))

(assert (= (and b!105779 c!18423) b!105778))

(assert (= (and b!105779 (not c!18423)) b!105782))

(assert (= (or b!105778 b!105782) bm!11175))

(assert (=> b!105779 m!117859))

(assert (=> b!105779 m!117859))

(assert (=> b!105779 m!117861))

(assert (=> b!105780 m!117859))

(assert (=> b!105780 m!117859))

(assert (=> b!105780 m!117861))

(assert (=> b!105781 m!117859))

(assert (=> b!105781 m!117859))

(declare-fun m!117909 () Bool)

(assert (=> b!105781 m!117909))

(assert (=> bm!11175 m!117859))

(declare-fun m!117911 () Bool)

(assert (=> bm!11175 m!117911))

(assert (=> b!105686 d!28841))

(declare-fun d!28843 () Bool)

(declare-fun e!68877 () Bool)

(assert (=> d!28843 e!68877))

(declare-fun res!52618 () Bool)

(assert (=> d!28843 (=> res!52618 e!68877)))

(declare-fun lt!54100 () Bool)

(assert (=> d!28843 (= res!52618 (not lt!54100))))

(declare-fun lt!54103 () Bool)

(assert (=> d!28843 (= lt!54100 lt!54103)))

(declare-fun lt!54102 () Unit!3250)

(declare-fun e!68876 () Unit!3250)

(assert (=> d!28843 (= lt!54102 e!68876)))

(declare-fun c!18424 () Bool)

(assert (=> d!28843 (= c!18424 lt!54103)))

(assert (=> d!28843 (= lt!54103 (containsKey!159 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))

(assert (=> d!28843 (= (contains!829 call!11138 (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))) lt!54100)))

(declare-fun b!105783 () Bool)

(declare-fun lt!54101 () Unit!3250)

(assert (=> b!105783 (= e!68876 lt!54101)))

(assert (=> b!105783 (= lt!54101 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))

(assert (=> b!105783 (isDefined!109 (getValueByKey!155 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))

(declare-fun b!105784 () Bool)

(declare-fun Unit!3261 () Unit!3250)

(assert (=> b!105784 (= e!68876 Unit!3261)))

(declare-fun b!105785 () Bool)

(assert (=> b!105785 (= e!68877 (isDefined!109 (getValueByKey!155 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938))))))))

(assert (= (and d!28843 c!18424) b!105783))

(assert (= (and d!28843 (not c!18424)) b!105784))

(assert (= (and d!28843 (not res!52618)) b!105785))

(declare-fun m!117913 () Bool)

(assert (=> d!28843 m!117913))

(declare-fun m!117915 () Bool)

(assert (=> b!105783 m!117915))

(declare-fun m!117917 () Bool)

(assert (=> b!105783 m!117917))

(assert (=> b!105783 m!117917))

(declare-fun m!117919 () Bool)

(assert (=> b!105783 m!117919))

(assert (=> b!105785 m!117917))

(assert (=> b!105785 m!117917))

(assert (=> b!105785 m!117919))

(assert (=> bm!11125 d!28843))

(declare-fun d!28845 () Bool)

(declare-fun e!68879 () Bool)

(assert (=> d!28845 e!68879))

(declare-fun res!52619 () Bool)

(assert (=> d!28845 (=> res!52619 e!68879)))

(declare-fun lt!54104 () Bool)

(assert (=> d!28845 (= res!52619 (not lt!54104))))

(declare-fun lt!54107 () Bool)

(assert (=> d!28845 (= lt!54104 lt!54107)))

(declare-fun lt!54106 () Unit!3250)

(declare-fun e!68878 () Unit!3250)

(assert (=> d!28845 (= lt!54106 e!68878)))

(declare-fun c!18425 () Bool)

(assert (=> d!28845 (= c!18425 lt!54107)))

(assert (=> d!28845 (= lt!54107 (containsKey!159 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!28845 (= (contains!829 call!11131 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) lt!54104)))

(declare-fun b!105786 () Bool)

(declare-fun lt!54105 () Unit!3250)

(assert (=> b!105786 (= e!68878 lt!54105)))

(assert (=> b!105786 (= lt!54105 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> b!105786 (isDefined!109 (getValueByKey!155 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!105787 () Bool)

(declare-fun Unit!3262 () Unit!3250)

(assert (=> b!105787 (= e!68878 Unit!3262)))

(declare-fun b!105788 () Bool)

(assert (=> b!105788 (= e!68879 (isDefined!109 (getValueByKey!155 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (= (and d!28845 c!18425) b!105786))

(assert (= (and d!28845 (not c!18425)) b!105787))

(assert (= (and d!28845 (not res!52619)) b!105788))

(assert (=> d!28845 m!117519))

(declare-fun m!117921 () Bool)

(assert (=> d!28845 m!117921))

(assert (=> b!105786 m!117519))

(declare-fun m!117923 () Bool)

(assert (=> b!105786 m!117923))

(assert (=> b!105786 m!117519))

(declare-fun m!117925 () Bool)

(assert (=> b!105786 m!117925))

(assert (=> b!105786 m!117925))

(declare-fun m!117927 () Bool)

(assert (=> b!105786 m!117927))

(assert (=> b!105788 m!117519))

(assert (=> b!105788 m!117925))

(assert (=> b!105788 m!117925))

(assert (=> b!105788 m!117927))

(assert (=> b!105532 d!28845))

(declare-fun d!28847 () Bool)

(declare-fun res!52620 () Bool)

(declare-fun e!68880 () Bool)

(assert (=> d!28847 (=> (not res!52620) (not e!68880))))

(assert (=> d!28847 (= res!52620 (simpleValid!73 (_2!1216 lt!53943)))))

(assert (=> d!28847 (= (valid!408 (_2!1216 lt!53943)) e!68880)))

(declare-fun b!105789 () Bool)

(declare-fun res!52621 () Bool)

(assert (=> b!105789 (=> (not res!52621) (not e!68880))))

(assert (=> b!105789 (= res!52621 (= (arrayCountValidKeys!0 (_keys!4288 (_2!1216 lt!53943)) #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))) (_size!499 (_2!1216 lt!53943))))))

(declare-fun b!105790 () Bool)

(declare-fun res!52622 () Bool)

(assert (=> b!105790 (=> (not res!52622) (not e!68880))))

(assert (=> b!105790 (= res!52622 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 (_2!1216 lt!53943)) (mask!6728 (_2!1216 lt!53943))))))

(declare-fun b!105791 () Bool)

(assert (=> b!105791 (= e!68880 (arrayNoDuplicates!0 (_keys!4288 (_2!1216 lt!53943)) #b00000000000000000000000000000000 Nil!1640))))

(assert (= (and d!28847 res!52620) b!105789))

(assert (= (and b!105789 res!52621) b!105790))

(assert (= (and b!105790 res!52622) b!105791))

(declare-fun m!117929 () Bool)

(assert (=> d!28847 m!117929))

(declare-fun m!117931 () Bool)

(assert (=> b!105789 m!117931))

(declare-fun m!117933 () Bool)

(assert (=> b!105790 m!117933))

(declare-fun m!117935 () Bool)

(assert (=> b!105791 m!117935))

(assert (=> d!28783 d!28847))

(assert (=> d!28783 d!28807))

(declare-fun d!28849 () Bool)

(assert (=> d!28849 (= (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (and (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105716 d!28849))

(declare-fun d!28851 () Bool)

(assert (=> d!28851 (= (get!1341 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) from!355) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105692 d!28851))

(declare-fun d!28853 () Bool)

(assert (=> d!28853 (= (inRange!0 (ite c!18357 (ite c!18353 (index!3225 lt!53939) (ite c!18363 (index!3224 lt!53946) (index!3227 lt!53946))) (ite c!18356 (index!3225 lt!53948) (ite c!18362 (index!3224 lt!53947) (index!3227 lt!53947)))) (mask!6728 newMap!16)) (and (bvsge (ite c!18357 (ite c!18353 (index!3225 lt!53939) (ite c!18363 (index!3224 lt!53946) (index!3227 lt!53946))) (ite c!18356 (index!3225 lt!53948) (ite c!18362 (index!3224 lt!53947) (index!3227 lt!53947)))) #b00000000000000000000000000000000) (bvslt (ite c!18357 (ite c!18353 (index!3225 lt!53939) (ite c!18363 (index!3224 lt!53946) (index!3227 lt!53946))) (ite c!18356 (index!3225 lt!53948) (ite c!18362 (index!3224 lt!53947) (index!3227 lt!53947)))) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11138 d!28853))

(declare-fun d!28855 () Bool)

(declare-fun e!68882 () Bool)

(assert (=> d!28855 e!68882))

(declare-fun res!52623 () Bool)

(assert (=> d!28855 (=> res!52623 e!68882)))

(declare-fun lt!54108 () Bool)

(assert (=> d!28855 (= res!52623 (not lt!54108))))

(declare-fun lt!54111 () Bool)

(assert (=> d!28855 (= lt!54108 lt!54111)))

(declare-fun lt!54110 () Unit!3250)

(declare-fun e!68881 () Unit!3250)

(assert (=> d!28855 (= lt!54110 e!68881)))

(declare-fun c!18426 () Bool)

(assert (=> d!28855 (= c!18426 lt!54111)))

(assert (=> d!28855 (= lt!54111 (containsKey!159 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!28855 (= (contains!829 lt!54058 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54108)))

(declare-fun b!105792 () Bool)

(declare-fun lt!54109 () Unit!3250)

(assert (=> b!105792 (= e!68881 lt!54109)))

(assert (=> b!105792 (= lt!54109 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105792 (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!105793 () Bool)

(declare-fun Unit!3263 () Unit!3250)

(assert (=> b!105793 (= e!68881 Unit!3263)))

(declare-fun b!105794 () Bool)

(assert (=> b!105794 (= e!68882 (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!28855 c!18426) b!105792))

(assert (= (and d!28855 (not c!18426)) b!105793))

(assert (= (and d!28855 (not res!52623)) b!105794))

(assert (=> d!28855 m!117687))

(declare-fun m!117937 () Bool)

(assert (=> d!28855 m!117937))

(assert (=> b!105792 m!117687))

(declare-fun m!117939 () Bool)

(assert (=> b!105792 m!117939))

(assert (=> b!105792 m!117687))

(declare-fun m!117941 () Bool)

(assert (=> b!105792 m!117941))

(assert (=> b!105792 m!117941))

(declare-fun m!117943 () Bool)

(assert (=> b!105792 m!117943))

(assert (=> b!105794 m!117687))

(assert (=> b!105794 m!117941))

(assert (=> b!105794 m!117941))

(assert (=> b!105794 m!117943))

(assert (=> b!105663 d!28855))

(assert (=> bm!11131 d!28785))

(declare-fun d!28857 () Bool)

(declare-fun get!1342 (Option!161) V!3219)

(assert (=> d!28857 (= (apply!98 lt!54011 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1342 (getValueByKey!155 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4334 () Bool)

(assert (= bs!4334 d!28857))

(declare-fun m!117945 () Bool)

(assert (=> bs!4334 m!117945))

(assert (=> bs!4334 m!117945))

(declare-fun m!117947 () Bool)

(assert (=> bs!4334 m!117947))

(assert (=> b!105628 d!28857))

(declare-fun d!28859 () Bool)

(assert (=> d!28859 (= (apply!98 lt!54058 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1342 (getValueByKey!155 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4335 () Bool)

(assert (= bs!4335 d!28859))

(assert (=> bs!4335 m!117687))

(assert (=> bs!4335 m!117941))

(assert (=> bs!4335 m!117941))

(declare-fun m!117949 () Bool)

(assert (=> bs!4335 m!117949))

(assert (=> b!105665 d!28859))

(declare-fun d!28861 () Bool)

(declare-fun c!18427 () Bool)

(assert (=> d!28861 (= c!18427 ((_ is ValueCellFull!996) (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!68883 () V!3219)

(assert (=> d!28861 (= (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68883)))

(declare-fun b!105795 () Bool)

(assert (=> b!105795 (= e!68883 (get!1340 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105796 () Bool)

(assert (=> b!105796 (= e!68883 (get!1341 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28861 c!18427) b!105795))

(assert (= (and d!28861 (not c!18427)) b!105796))

(assert (=> b!105795 m!117689))

(assert (=> b!105795 m!117549))

(declare-fun m!117951 () Bool)

(assert (=> b!105795 m!117951))

(assert (=> b!105796 m!117689))

(assert (=> b!105796 m!117549))

(declare-fun m!117953 () Bool)

(assert (=> b!105796 m!117953))

(assert (=> b!105665 d!28861))

(assert (=> b!105613 d!28831))

(declare-fun d!28863 () Bool)

(declare-fun e!68884 () Bool)

(assert (=> d!28863 e!68884))

(declare-fun res!52625 () Bool)

(assert (=> d!28863 (=> (not res!52625) (not e!68884))))

(declare-fun lt!54114 () ListLongMap!1585)

(assert (=> d!28863 (= res!52625 (contains!829 lt!54114 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun lt!54113 () List!1642)

(assert (=> d!28863 (= lt!54114 (ListLongMap!1586 lt!54113))))

(declare-fun lt!54115 () Unit!3250)

(declare-fun lt!54112 () Unit!3250)

(assert (=> d!28863 (= lt!54115 lt!54112)))

(assert (=> d!28863 (= (getValueByKey!155 lt!54113 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) (Some!160 (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!28863 (= lt!54112 (lemmaContainsTupThenGetReturnValue!73 lt!54113 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!28863 (= lt!54113 (insertStrictlySorted!75 (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162))) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!28863 (= (+!146 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162)) (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54114)))

(declare-fun b!105797 () Bool)

(declare-fun res!52624 () Bool)

(assert (=> b!105797 (=> (not res!52624) (not e!68884))))

(assert (=> b!105797 (= res!52624 (= (getValueByKey!155 (toList!808 lt!54114) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) (Some!160 (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun b!105798 () Bool)

(assert (=> b!105798 (= e!68884 (contains!830 (toList!808 lt!54114) (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (= (and d!28863 res!52625) b!105797))

(assert (= (and b!105797 res!52624) b!105798))

(declare-fun m!117955 () Bool)

(assert (=> d!28863 m!117955))

(declare-fun m!117957 () Bool)

(assert (=> d!28863 m!117957))

(declare-fun m!117959 () Bool)

(assert (=> d!28863 m!117959))

(declare-fun m!117961 () Bool)

(assert (=> d!28863 m!117961))

(declare-fun m!117963 () Bool)

(assert (=> b!105797 m!117963))

(declare-fun m!117965 () Bool)

(assert (=> b!105798 m!117965))

(assert (=> bm!11163 d!28863))

(assert (=> b!105544 d!28837))

(declare-fun d!28865 () Bool)

(assert (=> d!28865 (= (+!146 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53952 (zeroValue!2457 newMap!16) lt!53815 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54118 () Unit!3250)

(declare-fun choose!662 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 V!3219 Int) Unit!3250)

(assert (=> d!28865 (= lt!54118 (choose!662 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!53952 (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) lt!53815 (defaultEntry!2582 newMap!16)))))

(assert (=> d!28865 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28865 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!53952 (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) lt!53815 (defaultEntry!2582 newMap!16)) lt!54118)))

(declare-fun bs!4336 () Bool)

(assert (= bs!4336 d!28865))

(declare-fun m!117967 () Bool)

(assert (=> bs!4336 m!117967))

(assert (=> bs!4336 m!117685))

(declare-fun m!117969 () Bool)

(assert (=> bs!4336 m!117969))

(declare-fun m!117971 () Bool)

(assert (=> bs!4336 m!117971))

(assert (=> bs!4336 m!117867))

(assert (=> bs!4336 m!117685))

(assert (=> b!105531 d!28865))

(declare-fun b!105808 () Bool)

(declare-fun e!68889 () Option!161)

(declare-fun e!68890 () Option!161)

(assert (=> b!105808 (= e!68889 e!68890)))

(declare-fun c!18433 () Bool)

(assert (=> b!105808 (= c!18433 (and ((_ is Cons!1638) (toList!808 lt!54031)) (not (= (_1!1215 (h!2235 (toList!808 lt!54031))) (_1!1215 lt!53818)))))))

(declare-fun d!28867 () Bool)

(declare-fun c!18432 () Bool)

(assert (=> d!28867 (= c!18432 (and ((_ is Cons!1638) (toList!808 lt!54031)) (= (_1!1215 (h!2235 (toList!808 lt!54031))) (_1!1215 lt!53818))))))

(assert (=> d!28867 (= (getValueByKey!155 (toList!808 lt!54031) (_1!1215 lt!53818)) e!68889)))

(declare-fun b!105809 () Bool)

(assert (=> b!105809 (= e!68890 (getValueByKey!155 (t!5737 (toList!808 lt!54031)) (_1!1215 lt!53818)))))

(declare-fun b!105807 () Bool)

(assert (=> b!105807 (= e!68889 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54031)))))))

(declare-fun b!105810 () Bool)

(assert (=> b!105810 (= e!68890 None!159)))

(assert (= (and d!28867 c!18432) b!105807))

(assert (= (and d!28867 (not c!18432)) b!105808))

(assert (= (and b!105808 c!18433) b!105809))

(assert (= (and b!105808 (not c!18433)) b!105810))

(declare-fun m!117973 () Bool)

(assert (=> b!105809 m!117973))

(assert (=> b!105634 d!28867))

(assert (=> bm!11158 d!28801))

(assert (=> b!105717 d!28849))

(assert (=> b!105671 d!28831))

(declare-fun b!105827 () Bool)

(declare-fun res!52636 () Bool)

(declare-fun e!68901 () Bool)

(assert (=> b!105827 (=> (not res!52636) (not e!68901))))

(declare-fun call!11183 () Bool)

(assert (=> b!105827 (= res!52636 call!11183)))

(declare-fun e!68902 () Bool)

(assert (=> b!105827 (= e!68902 e!68901)))

(declare-fun d!28869 () Bool)

(declare-fun e!68900 () Bool)

(assert (=> d!28869 e!68900))

(declare-fun c!18438 () Bool)

(declare-fun lt!54123 () SeekEntryResult!269)

(assert (=> d!28869 (= c!18438 ((_ is MissingZero!269) lt!54123))))

(assert (=> d!28869 (= lt!54123 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun lt!54124 () Unit!3250)

(declare-fun choose!663 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) Int) Unit!3250)

(assert (=> d!28869 (= lt!54124 (choose!663 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(assert (=> d!28869 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28869 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)) lt!54124)))

(declare-fun b!105828 () Bool)

(declare-fun e!68899 () Bool)

(declare-fun call!11184 () Bool)

(assert (=> b!105828 (= e!68899 (not call!11184))))

(declare-fun bm!11180 () Bool)

(assert (=> bm!11180 (= call!11184 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!11181 () Bool)

(assert (=> bm!11181 (= call!11183 (inRange!0 (ite c!18438 (index!3224 lt!54123) (index!3227 lt!54123)) (mask!6728 newMap!16)))))

(declare-fun b!105829 () Bool)

(assert (=> b!105829 (= e!68900 e!68899)))

(declare-fun res!52635 () Bool)

(assert (=> b!105829 (= res!52635 call!11183)))

(assert (=> b!105829 (=> (not res!52635) (not e!68899))))

(declare-fun b!105830 () Bool)

(assert (=> b!105830 (= e!68902 ((_ is Undefined!269) lt!54123))))

(declare-fun b!105831 () Bool)

(assert (=> b!105831 (= e!68901 (not call!11184))))

(declare-fun b!105832 () Bool)

(declare-fun res!52637 () Bool)

(assert (=> b!105832 (=> (not res!52637) (not e!68901))))

(assert (=> b!105832 (= res!52637 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3227 lt!54123)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105832 (and (bvsge (index!3227 lt!54123) #b00000000000000000000000000000000) (bvslt (index!3227 lt!54123) (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!105833 () Bool)

(assert (=> b!105833 (= e!68900 e!68902)))

(declare-fun c!18439 () Bool)

(assert (=> b!105833 (= c!18439 ((_ is MissingVacant!269) lt!54123))))

(declare-fun b!105834 () Bool)

(assert (=> b!105834 (and (bvsge (index!3224 lt!54123) #b00000000000000000000000000000000) (bvslt (index!3224 lt!54123) (size!2317 (_keys!4288 newMap!16))))))

(declare-fun res!52634 () Bool)

(assert (=> b!105834 (= res!52634 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3224 lt!54123)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105834 (=> (not res!52634) (not e!68899))))

(assert (= (and d!28869 c!18438) b!105829))

(assert (= (and d!28869 (not c!18438)) b!105833))

(assert (= (and b!105829 res!52635) b!105834))

(assert (= (and b!105834 res!52634) b!105828))

(assert (= (and b!105833 c!18439) b!105827))

(assert (= (and b!105833 (not c!18439)) b!105830))

(assert (= (and b!105827 res!52636) b!105832))

(assert (= (and b!105832 res!52637) b!105831))

(assert (= (or b!105829 b!105827) bm!11181))

(assert (= (or b!105828 b!105831) bm!11180))

(assert (=> bm!11180 m!117519))

(assert (=> bm!11180 m!117657))

(declare-fun m!117975 () Bool)

(assert (=> b!105834 m!117975))

(declare-fun m!117977 () Bool)

(assert (=> b!105832 m!117977))

(assert (=> d!28869 m!117519))

(assert (=> d!28869 m!117635))

(assert (=> d!28869 m!117519))

(declare-fun m!117979 () Bool)

(assert (=> d!28869 m!117979))

(assert (=> d!28869 m!117867))

(declare-fun m!117981 () Bool)

(assert (=> bm!11181 m!117981))

(assert (=> bm!11126 d!28869))

(declare-fun d!28871 () Bool)

(declare-fun isEmpty!376 (Option!161) Bool)

(assert (=> d!28871 (= (isDefined!109 (getValueByKey!155 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))) (not (isEmpty!376 (getValueByKey!155 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))))

(declare-fun bs!4337 () Bool)

(assert (= bs!4337 d!28871))

(assert (=> bs!4337 m!117625))

(declare-fun m!117983 () Bool)

(assert (=> bs!4337 m!117983))

(assert (=> b!105452 d!28871))

(declare-fun b!105836 () Bool)

(declare-fun e!68903 () Option!161)

(declare-fun e!68904 () Option!161)

(assert (=> b!105836 (= e!68903 e!68904)))

(declare-fun c!18441 () Bool)

(assert (=> b!105836 (= c!18441 (and ((_ is Cons!1638) (toList!808 lt!53820)) (not (= (_1!1215 (h!2235 (toList!808 lt!53820))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))))

(declare-fun c!18440 () Bool)

(declare-fun d!28873 () Bool)

(assert (=> d!28873 (= c!18440 (and ((_ is Cons!1638) (toList!808 lt!53820)) (= (_1!1215 (h!2235 (toList!808 lt!53820))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (=> d!28873 (= (getValueByKey!155 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) e!68903)))

(declare-fun b!105837 () Bool)

(assert (=> b!105837 (= e!68904 (getValueByKey!155 (t!5737 (toList!808 lt!53820)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!105835 () Bool)

(assert (=> b!105835 (= e!68903 (Some!160 (_2!1215 (h!2235 (toList!808 lt!53820)))))))

(declare-fun b!105838 () Bool)

(assert (=> b!105838 (= e!68904 None!159)))

(assert (= (and d!28873 c!18440) b!105835))

(assert (= (and d!28873 (not c!18440)) b!105836))

(assert (= (and b!105836 c!18441) b!105837))

(assert (= (and b!105836 (not c!18441)) b!105838))

(assert (=> b!105837 m!117519))

(declare-fun m!117985 () Bool)

(assert (=> b!105837 m!117985))

(assert (=> b!105452 d!28873))

(declare-fun b!105840 () Bool)

(declare-fun e!68905 () Option!161)

(declare-fun e!68906 () Option!161)

(assert (=> b!105840 (= e!68905 e!68906)))

(declare-fun c!18443 () Bool)

(assert (=> b!105840 (= c!18443 (and ((_ is Cons!1638) (toList!808 lt!54063)) (not (= (_1!1215 (h!2235 (toList!808 lt!54063))) (_1!1215 lt!53818)))))))

(declare-fun d!28875 () Bool)

(declare-fun c!18442 () Bool)

(assert (=> d!28875 (= c!18442 (and ((_ is Cons!1638) (toList!808 lt!54063)) (= (_1!1215 (h!2235 (toList!808 lt!54063))) (_1!1215 lt!53818))))))

(assert (=> d!28875 (= (getValueByKey!155 (toList!808 lt!54063) (_1!1215 lt!53818)) e!68905)))

(declare-fun b!105841 () Bool)

(assert (=> b!105841 (= e!68906 (getValueByKey!155 (t!5737 (toList!808 lt!54063)) (_1!1215 lt!53818)))))

(declare-fun b!105839 () Bool)

(assert (=> b!105839 (= e!68905 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54063)))))))

(declare-fun b!105842 () Bool)

(assert (=> b!105842 (= e!68906 None!159)))

(assert (= (and d!28875 c!18442) b!105839))

(assert (= (and d!28875 (not c!18442)) b!105840))

(assert (= (and b!105840 c!18443) b!105841))

(assert (= (and b!105840 (not c!18443)) b!105842))

(declare-fun m!117987 () Bool)

(assert (=> b!105841 m!117987))

(assert (=> b!105674 d!28875))

(declare-fun d!28877 () Bool)

(declare-fun e!68909 () Bool)

(assert (=> d!28877 e!68909))

(declare-fun res!52643 () Bool)

(assert (=> d!28877 (=> (not res!52643) (not e!68909))))

(declare-fun lt!54129 () SeekEntryResult!269)

(assert (=> d!28877 (= res!52643 ((_ is Found!269) lt!54129))))

(assert (=> d!28877 (= lt!54129 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun lt!54130 () Unit!3250)

(declare-fun choose!664 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) Int) Unit!3250)

(assert (=> d!28877 (= lt!54130 (choose!664 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(assert (=> d!28877 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28877 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)) lt!54130)))

(declare-fun b!105847 () Bool)

(declare-fun res!52642 () Bool)

(assert (=> b!105847 (=> (not res!52642) (not e!68909))))

(assert (=> b!105847 (= res!52642 (inRange!0 (index!3225 lt!54129) (mask!6728 newMap!16)))))

(declare-fun b!105848 () Bool)

(assert (=> b!105848 (= e!68909 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!54129)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> b!105848 (and (bvsge (index!3225 lt!54129) #b00000000000000000000000000000000) (bvslt (index!3225 lt!54129) (size!2317 (_keys!4288 newMap!16))))))

(assert (= (and d!28877 res!52643) b!105847))

(assert (= (and b!105847 res!52642) b!105848))

(assert (=> d!28877 m!117519))

(assert (=> d!28877 m!117635))

(assert (=> d!28877 m!117519))

(declare-fun m!117989 () Bool)

(assert (=> d!28877 m!117989))

(assert (=> d!28877 m!117867))

(declare-fun m!117991 () Bool)

(assert (=> b!105847 m!117991))

(declare-fun m!117993 () Bool)

(assert (=> b!105848 m!117993))

(assert (=> bm!11142 d!28877))

(declare-fun d!28879 () Bool)

(declare-fun e!68911 () Bool)

(assert (=> d!28879 e!68911))

(declare-fun res!52644 () Bool)

(assert (=> d!28879 (=> res!52644 e!68911)))

(declare-fun lt!54131 () Bool)

(assert (=> d!28879 (= res!52644 (not lt!54131))))

(declare-fun lt!54134 () Bool)

(assert (=> d!28879 (= lt!54131 lt!54134)))

(declare-fun lt!54133 () Unit!3250)

(declare-fun e!68910 () Unit!3250)

(assert (=> d!28879 (= lt!54133 e!68910)))

(declare-fun c!18444 () Bool)

(assert (=> d!28879 (= c!18444 lt!54134)))

(assert (=> d!28879 (= lt!54134 (containsKey!159 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28879 (= (contains!829 lt!54058 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54131)))

(declare-fun b!105849 () Bool)

(declare-fun lt!54132 () Unit!3250)

(assert (=> b!105849 (= e!68910 lt!54132)))

(assert (=> b!105849 (= lt!54132 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105849 (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105850 () Bool)

(declare-fun Unit!3264 () Unit!3250)

(assert (=> b!105850 (= e!68910 Unit!3264)))

(declare-fun b!105851 () Bool)

(assert (=> b!105851 (= e!68911 (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28879 c!18444) b!105849))

(assert (= (and d!28879 (not c!18444)) b!105850))

(assert (= (and d!28879 (not res!52644)) b!105851))

(declare-fun m!117995 () Bool)

(assert (=> d!28879 m!117995))

(declare-fun m!117997 () Bool)

(assert (=> b!105849 m!117997))

(declare-fun m!117999 () Bool)

(assert (=> b!105849 m!117999))

(assert (=> b!105849 m!117999))

(declare-fun m!118001 () Bool)

(assert (=> b!105849 m!118001))

(assert (=> b!105851 m!117999))

(assert (=> b!105851 m!117999))

(assert (=> b!105851 m!118001))

(assert (=> b!105673 d!28879))

(declare-fun d!28881 () Bool)

(assert (=> d!28881 (= (+!146 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (+!146 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(assert (=> d!28881 true))

(declare-fun _$28!161 () Unit!3250)

(assert (=> d!28881 (= (choose!660 lt!53824 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) _$28!161)))

(declare-fun bs!4338 () Bool)

(assert (= bs!4338 d!28881))

(assert (=> bs!4338 m!117755))

(assert (=> bs!4338 m!117755))

(assert (=> bs!4338 m!117761))

(assert (=> bs!4338 m!117757))

(assert (=> bs!4338 m!117757))

(assert (=> bs!4338 m!117759))

(assert (=> d!28795 d!28881))

(declare-fun d!28883 () Bool)

(declare-fun e!68912 () Bool)

(assert (=> d!28883 e!68912))

(declare-fun res!52646 () Bool)

(assert (=> d!28883 (=> (not res!52646) (not e!68912))))

(declare-fun lt!54137 () ListLongMap!1585)

(assert (=> d!28883 (= res!52646 (contains!829 lt!54137 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun lt!54136 () List!1642)

(assert (=> d!28883 (= lt!54137 (ListLongMap!1586 lt!54136))))

(declare-fun lt!54138 () Unit!3250)

(declare-fun lt!54135 () Unit!3250)

(assert (=> d!28883 (= lt!54138 lt!54135)))

(assert (=> d!28883 (= (getValueByKey!155 lt!54136 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!28883 (= lt!54135 (lemmaContainsTupThenGetReturnValue!73 lt!54136 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!28883 (= lt!54136 (insertStrictlySorted!75 (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!28883 (= (+!146 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) lt!54137)))

(declare-fun b!105852 () Bool)

(declare-fun res!52645 () Bool)

(assert (=> b!105852 (=> (not res!52645) (not e!68912))))

(assert (=> b!105852 (= res!52645 (= (getValueByKey!155 (toList!808 lt!54137) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun b!105853 () Bool)

(assert (=> b!105853 (= e!68912 (contains!830 (toList!808 lt!54137) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(assert (= (and d!28883 res!52646) b!105852))

(assert (= (and b!105852 res!52645) b!105853))

(declare-fun m!118003 () Bool)

(assert (=> d!28883 m!118003))

(declare-fun m!118005 () Bool)

(assert (=> d!28883 m!118005))

(declare-fun m!118007 () Bool)

(assert (=> d!28883 m!118007))

(declare-fun m!118009 () Bool)

(assert (=> d!28883 m!118009))

(declare-fun m!118011 () Bool)

(assert (=> b!105852 m!118011))

(declare-fun m!118013 () Bool)

(assert (=> b!105853 m!118013))

(assert (=> d!28795 d!28883))

(declare-fun d!28885 () Bool)

(declare-fun e!68913 () Bool)

(assert (=> d!28885 e!68913))

(declare-fun res!52648 () Bool)

(assert (=> d!28885 (=> (not res!52648) (not e!68913))))

(declare-fun lt!54141 () ListLongMap!1585)

(assert (=> d!28885 (= res!52648 (contains!829 lt!54141 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54140 () List!1642)

(assert (=> d!28885 (= lt!54141 (ListLongMap!1586 lt!54140))))

(declare-fun lt!54142 () Unit!3250)

(declare-fun lt!54139 () Unit!3250)

(assert (=> d!28885 (= lt!54142 lt!54139)))

(assert (=> d!28885 (= (getValueByKey!155 lt!54140 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28885 (= lt!54139 (lemmaContainsTupThenGetReturnValue!73 lt!54140 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28885 (= lt!54140 (insertStrictlySorted!75 (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28885 (= (+!146 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54141)))

(declare-fun b!105854 () Bool)

(declare-fun res!52647 () Bool)

(assert (=> b!105854 (=> (not res!52647) (not e!68913))))

(assert (=> b!105854 (= res!52647 (= (getValueByKey!155 (toList!808 lt!54141) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!105855 () Bool)

(assert (=> b!105855 (= e!68913 (contains!830 (toList!808 lt!54141) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!28885 res!52648) b!105854))

(assert (= (and b!105854 res!52647) b!105855))

(declare-fun m!118015 () Bool)

(assert (=> d!28885 m!118015))

(declare-fun m!118017 () Bool)

(assert (=> d!28885 m!118017))

(declare-fun m!118019 () Bool)

(assert (=> d!28885 m!118019))

(declare-fun m!118021 () Bool)

(assert (=> d!28885 m!118021))

(declare-fun m!118023 () Bool)

(assert (=> b!105854 m!118023))

(declare-fun m!118025 () Bool)

(assert (=> b!105855 m!118025))

(assert (=> d!28795 d!28885))

(declare-fun d!28887 () Bool)

(declare-fun e!68914 () Bool)

(assert (=> d!28887 e!68914))

(declare-fun res!52650 () Bool)

(assert (=> d!28887 (=> (not res!52650) (not e!68914))))

(declare-fun lt!54145 () ListLongMap!1585)

(assert (=> d!28887 (= res!52650 (contains!829 lt!54145 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54144 () List!1642)

(assert (=> d!28887 (= lt!54145 (ListLongMap!1586 lt!54144))))

(declare-fun lt!54146 () Unit!3250)

(declare-fun lt!54143 () Unit!3250)

(assert (=> d!28887 (= lt!54146 lt!54143)))

(assert (=> d!28887 (= (getValueByKey!155 lt!54144 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28887 (= lt!54143 (lemmaContainsTupThenGetReturnValue!73 lt!54144 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28887 (= lt!54144 (insertStrictlySorted!75 (toList!808 lt!53824) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28887 (= (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54145)))

(declare-fun b!105856 () Bool)

(declare-fun res!52649 () Bool)

(assert (=> b!105856 (=> (not res!52649) (not e!68914))))

(assert (=> b!105856 (= res!52649 (= (getValueByKey!155 (toList!808 lt!54145) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!105857 () Bool)

(assert (=> b!105857 (= e!68914 (contains!830 (toList!808 lt!54145) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!28887 res!52650) b!105856))

(assert (= (and b!105856 res!52649) b!105857))

(declare-fun m!118027 () Bool)

(assert (=> d!28887 m!118027))

(declare-fun m!118029 () Bool)

(assert (=> d!28887 m!118029))

(declare-fun m!118031 () Bool)

(assert (=> d!28887 m!118031))

(declare-fun m!118033 () Bool)

(assert (=> d!28887 m!118033))

(declare-fun m!118035 () Bool)

(assert (=> b!105856 m!118035))

(declare-fun m!118037 () Bool)

(assert (=> b!105857 m!118037))

(assert (=> d!28795 d!28887))

(declare-fun d!28889 () Bool)

(declare-fun e!68915 () Bool)

(assert (=> d!28889 e!68915))

(declare-fun res!52652 () Bool)

(assert (=> d!28889 (=> (not res!52652) (not e!68915))))

(declare-fun lt!54149 () ListLongMap!1585)

(assert (=> d!28889 (= res!52652 (contains!829 lt!54149 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun lt!54148 () List!1642)

(assert (=> d!28889 (= lt!54149 (ListLongMap!1586 lt!54148))))

(declare-fun lt!54150 () Unit!3250)

(declare-fun lt!54147 () Unit!3250)

(assert (=> d!28889 (= lt!54150 lt!54147)))

(assert (=> d!28889 (= (getValueByKey!155 lt!54148 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!28889 (= lt!54147 (lemmaContainsTupThenGetReturnValue!73 lt!54148 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!28889 (= lt!54148 (insertStrictlySorted!75 (toList!808 lt!53824) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!28889 (= (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) lt!54149)))

(declare-fun b!105858 () Bool)

(declare-fun res!52651 () Bool)

(assert (=> b!105858 (=> (not res!52651) (not e!68915))))

(assert (=> b!105858 (= res!52651 (= (getValueByKey!155 (toList!808 lt!54149) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun b!105859 () Bool)

(assert (=> b!105859 (= e!68915 (contains!830 (toList!808 lt!54149) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(assert (= (and d!28889 res!52652) b!105858))

(assert (= (and b!105858 res!52651) b!105859))

(declare-fun m!118039 () Bool)

(assert (=> d!28889 m!118039))

(declare-fun m!118041 () Bool)

(assert (=> d!28889 m!118041))

(declare-fun m!118043 () Bool)

(assert (=> d!28889 m!118043))

(declare-fun m!118045 () Bool)

(assert (=> d!28889 m!118045))

(declare-fun m!118047 () Bool)

(assert (=> b!105858 m!118047))

(declare-fun m!118049 () Bool)

(assert (=> b!105859 m!118049))

(assert (=> d!28795 d!28889))

(declare-fun b!105861 () Bool)

(declare-fun e!68916 () Option!161)

(declare-fun e!68917 () Option!161)

(assert (=> b!105861 (= e!68916 e!68917)))

(declare-fun c!18446 () Bool)

(assert (=> b!105861 (= c!18446 (and ((_ is Cons!1638) (toList!808 lt!54067)) (not (= (_1!1215 (h!2235 (toList!808 lt!54067))) (_1!1215 lt!53817)))))))

(declare-fun d!28891 () Bool)

(declare-fun c!18445 () Bool)

(assert (=> d!28891 (= c!18445 (and ((_ is Cons!1638) (toList!808 lt!54067)) (= (_1!1215 (h!2235 (toList!808 lt!54067))) (_1!1215 lt!53817))))))

(assert (=> d!28891 (= (getValueByKey!155 (toList!808 lt!54067) (_1!1215 lt!53817)) e!68916)))

(declare-fun b!105862 () Bool)

(assert (=> b!105862 (= e!68917 (getValueByKey!155 (t!5737 (toList!808 lt!54067)) (_1!1215 lt!53817)))))

(declare-fun b!105860 () Bool)

(assert (=> b!105860 (= e!68916 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54067)))))))

(declare-fun b!105863 () Bool)

(assert (=> b!105863 (= e!68917 None!159)))

(assert (= (and d!28891 c!18445) b!105860))

(assert (= (and d!28891 (not c!18445)) b!105861))

(assert (= (and b!105861 c!18446) b!105862))

(assert (= (and b!105861 (not c!18446)) b!105863))

(declare-fun m!118051 () Bool)

(assert (=> b!105862 m!118051))

(assert (=> b!105676 d!28891))

(declare-fun d!28893 () Bool)

(declare-fun e!68919 () Bool)

(assert (=> d!28893 e!68919))

(declare-fun res!52653 () Bool)

(assert (=> d!28893 (=> res!52653 e!68919)))

(declare-fun lt!54151 () Bool)

(assert (=> d!28893 (= res!52653 (not lt!54151))))

(declare-fun lt!54154 () Bool)

(assert (=> d!28893 (= lt!54151 lt!54154)))

(declare-fun lt!54153 () Unit!3250)

(declare-fun e!68918 () Unit!3250)

(assert (=> d!28893 (= lt!54153 e!68918)))

(declare-fun c!18447 () Bool)

(assert (=> d!28893 (= c!18447 lt!54154)))

(assert (=> d!28893 (= lt!54154 (containsKey!159 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28893 (= (contains!829 lt!54011 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54151)))

(declare-fun b!105864 () Bool)

(declare-fun lt!54152 () Unit!3250)

(assert (=> b!105864 (= e!68918 lt!54152)))

(assert (=> b!105864 (= lt!54152 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105864 (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105865 () Bool)

(declare-fun Unit!3265 () Unit!3250)

(assert (=> b!105865 (= e!68918 Unit!3265)))

(declare-fun b!105866 () Bool)

(assert (=> b!105866 (= e!68919 (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28893 c!18447) b!105864))

(assert (= (and d!28893 (not c!18447)) b!105865))

(assert (= (and d!28893 (not res!52653)) b!105866))

(declare-fun m!118053 () Bool)

(assert (=> d!28893 m!118053))

(declare-fun m!118055 () Bool)

(assert (=> b!105864 m!118055))

(declare-fun m!118057 () Bool)

(assert (=> b!105864 m!118057))

(assert (=> b!105864 m!118057))

(declare-fun m!118059 () Bool)

(assert (=> b!105864 m!118059))

(assert (=> b!105866 m!118057))

(assert (=> b!105866 m!118057))

(assert (=> b!105866 m!118059))

(assert (=> bm!11162 d!28893))

(assert (=> d!28787 d!28797))

(declare-fun d!28895 () Bool)

(assert (=> d!28895 (= (+!146 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53953 lt!53815 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54157 () Unit!3250)

(declare-fun choose!665 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 V!3219 Int) Unit!3250)

(assert (=> d!28895 (= lt!54157 (choose!665 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!53953 (zeroValue!2457 newMap!16) lt!53815 (minValue!2457 newMap!16) (defaultEntry!2582 newMap!16)))))

(assert (=> d!28895 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28895 (= (lemmaChangeZeroKeyThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!53953 (zeroValue!2457 newMap!16) lt!53815 (minValue!2457 newMap!16) (defaultEntry!2582 newMap!16)) lt!54157)))

(declare-fun bs!4339 () Bool)

(assert (= bs!4339 d!28895))

(assert (=> bs!4339 m!117685))

(declare-fun m!118061 () Bool)

(assert (=> bs!4339 m!118061))

(assert (=> bs!4339 m!117685))

(assert (=> bs!4339 m!117867))

(declare-fun m!118063 () Bool)

(assert (=> bs!4339 m!118063))

(declare-fun m!118065 () Bool)

(assert (=> bs!4339 m!118065))

(assert (=> b!105536 d!28895))

(declare-fun d!28897 () Bool)

(assert (=> d!28897 (= (apply!98 lt!54011 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1342 (getValueByKey!155 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4340 () Bool)

(assert (= bs!4340 d!28897))

(assert (=> bs!4340 m!118057))

(assert (=> bs!4340 m!118057))

(declare-fun m!118067 () Bool)

(assert (=> bs!4340 m!118067))

(assert (=> b!105614 d!28897))

(declare-fun d!28899 () Bool)

(declare-fun e!68921 () Bool)

(assert (=> d!28899 e!68921))

(declare-fun res!52654 () Bool)

(assert (=> d!28899 (=> res!52654 e!68921)))

(declare-fun lt!54158 () Bool)

(assert (=> d!28899 (= res!52654 (not lt!54158))))

(declare-fun lt!54161 () Bool)

(assert (=> d!28899 (= lt!54158 lt!54161)))

(declare-fun lt!54160 () Unit!3250)

(declare-fun e!68920 () Unit!3250)

(assert (=> d!28899 (= lt!54160 e!68920)))

(declare-fun c!18448 () Bool)

(assert (=> d!28899 (= c!18448 lt!54161)))

(assert (=> d!28899 (= lt!54161 (containsKey!159 (toList!808 lt!54067) (_1!1215 lt!53817)))))

(assert (=> d!28899 (= (contains!829 lt!54067 (_1!1215 lt!53817)) lt!54158)))

(declare-fun b!105867 () Bool)

(declare-fun lt!54159 () Unit!3250)

(assert (=> b!105867 (= e!68920 lt!54159)))

(assert (=> b!105867 (= lt!54159 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54067) (_1!1215 lt!53817)))))

(assert (=> b!105867 (isDefined!109 (getValueByKey!155 (toList!808 lt!54067) (_1!1215 lt!53817)))))

(declare-fun b!105868 () Bool)

(declare-fun Unit!3266 () Unit!3250)

(assert (=> b!105868 (= e!68920 Unit!3266)))

(declare-fun b!105869 () Bool)

(assert (=> b!105869 (= e!68921 (isDefined!109 (getValueByKey!155 (toList!808 lt!54067) (_1!1215 lt!53817))))))

(assert (= (and d!28899 c!18448) b!105867))

(assert (= (and d!28899 (not c!18448)) b!105868))

(assert (= (and d!28899 (not res!52654)) b!105869))

(declare-fun m!118069 () Bool)

(assert (=> d!28899 m!118069))

(declare-fun m!118071 () Bool)

(assert (=> b!105867 m!118071))

(assert (=> b!105867 m!117815))

(assert (=> b!105867 m!117815))

(declare-fun m!118073 () Bool)

(assert (=> b!105867 m!118073))

(assert (=> b!105869 m!117815))

(assert (=> b!105869 m!117815))

(assert (=> b!105869 m!118073))

(assert (=> d!28805 d!28899))

(declare-fun b!105871 () Bool)

(declare-fun e!68922 () Option!161)

(declare-fun e!68923 () Option!161)

(assert (=> b!105871 (= e!68922 e!68923)))

(declare-fun c!18450 () Bool)

(assert (=> b!105871 (= c!18450 (and ((_ is Cons!1638) lt!54066) (not (= (_1!1215 (h!2235 lt!54066)) (_1!1215 lt!53817)))))))

(declare-fun d!28901 () Bool)

(declare-fun c!18449 () Bool)

(assert (=> d!28901 (= c!18449 (and ((_ is Cons!1638) lt!54066) (= (_1!1215 (h!2235 lt!54066)) (_1!1215 lt!53817))))))

(assert (=> d!28901 (= (getValueByKey!155 lt!54066 (_1!1215 lt!53817)) e!68922)))

(declare-fun b!105872 () Bool)

(assert (=> b!105872 (= e!68923 (getValueByKey!155 (t!5737 lt!54066) (_1!1215 lt!53817)))))

(declare-fun b!105870 () Bool)

(assert (=> b!105870 (= e!68922 (Some!160 (_2!1215 (h!2235 lt!54066))))))

(declare-fun b!105873 () Bool)

(assert (=> b!105873 (= e!68923 None!159)))

(assert (= (and d!28901 c!18449) b!105870))

(assert (= (and d!28901 (not c!18449)) b!105871))

(assert (= (and b!105871 c!18450) b!105872))

(assert (= (and b!105871 (not c!18450)) b!105873))

(declare-fun m!118075 () Bool)

(assert (=> b!105872 m!118075))

(assert (=> d!28805 d!28901))

(declare-fun d!28903 () Bool)

(assert (=> d!28903 (= (getValueByKey!155 lt!54066 (_1!1215 lt!53817)) (Some!160 (_2!1215 lt!53817)))))

(declare-fun lt!54164 () Unit!3250)

(declare-fun choose!666 (List!1642 (_ BitVec 64) V!3219) Unit!3250)

(assert (=> d!28903 (= lt!54164 (choose!666 lt!54066 (_1!1215 lt!53817) (_2!1215 lt!53817)))))

(declare-fun e!68926 () Bool)

(assert (=> d!28903 e!68926))

(declare-fun res!52659 () Bool)

(assert (=> d!28903 (=> (not res!52659) (not e!68926))))

(declare-fun isStrictlySorted!304 (List!1642) Bool)

(assert (=> d!28903 (= res!52659 (isStrictlySorted!304 lt!54066))))

(assert (=> d!28903 (= (lemmaContainsTupThenGetReturnValue!73 lt!54066 (_1!1215 lt!53817) (_2!1215 lt!53817)) lt!54164)))

(declare-fun b!105878 () Bool)

(declare-fun res!52660 () Bool)

(assert (=> b!105878 (=> (not res!52660) (not e!68926))))

(assert (=> b!105878 (= res!52660 (containsKey!159 lt!54066 (_1!1215 lt!53817)))))

(declare-fun b!105879 () Bool)

(assert (=> b!105879 (= e!68926 (contains!830 lt!54066 (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(assert (= (and d!28903 res!52659) b!105878))

(assert (= (and b!105878 res!52660) b!105879))

(assert (=> d!28903 m!117809))

(declare-fun m!118077 () Bool)

(assert (=> d!28903 m!118077))

(declare-fun m!118079 () Bool)

(assert (=> d!28903 m!118079))

(declare-fun m!118081 () Bool)

(assert (=> b!105878 m!118081))

(declare-fun m!118083 () Bool)

(assert (=> b!105879 m!118083))

(assert (=> d!28805 d!28903))

(declare-fun d!28905 () Bool)

(declare-fun e!68938 () Bool)

(assert (=> d!28905 e!68938))

(declare-fun res!52665 () Bool)

(assert (=> d!28905 (=> (not res!52665) (not e!68938))))

(declare-fun lt!54167 () List!1642)

(assert (=> d!28905 (= res!52665 (isStrictlySorted!304 lt!54167))))

(declare-fun e!68937 () List!1642)

(assert (=> d!28905 (= lt!54167 e!68937)))

(declare-fun c!18459 () Bool)

(assert (=> d!28905 (= c!18459 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 lt!53818))) (bvslt (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 lt!53818)))) (_1!1215 lt!53817))))))

(assert (=> d!28905 (isStrictlySorted!304 (toList!808 (+!146 lt!53824 lt!53818)))))

(assert (=> d!28905 (= (insertStrictlySorted!75 (toList!808 (+!146 lt!53824 lt!53818)) (_1!1215 lt!53817) (_2!1215 lt!53817)) lt!54167)))

(declare-fun b!105900 () Bool)

(declare-fun e!68940 () List!1642)

(declare-fun call!11193 () List!1642)

(assert (=> b!105900 (= e!68940 call!11193)))

(declare-fun b!105901 () Bool)

(declare-fun c!18460 () Bool)

(assert (=> b!105901 (= c!18460 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 lt!53818))) (bvsgt (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 lt!53818)))) (_1!1215 lt!53817))))))

(declare-fun e!68939 () List!1642)

(assert (=> b!105901 (= e!68939 e!68940)))

(declare-fun b!105902 () Bool)

(declare-fun call!11191 () List!1642)

(assert (=> b!105902 (= e!68939 call!11191)))

(declare-fun b!105903 () Bool)

(declare-fun call!11192 () List!1642)

(assert (=> b!105903 (= e!68937 call!11192)))

(declare-fun b!105904 () Bool)

(declare-fun res!52666 () Bool)

(assert (=> b!105904 (=> (not res!52666) (not e!68938))))

(assert (=> b!105904 (= res!52666 (containsKey!159 lt!54167 (_1!1215 lt!53817)))))

(declare-fun bm!11188 () Bool)

(assert (=> bm!11188 (= call!11191 call!11192)))

(declare-fun b!105905 () Bool)

(declare-fun e!68941 () List!1642)

(declare-fun c!18461 () Bool)

(assert (=> b!105905 (= e!68941 (ite c!18461 (t!5737 (toList!808 (+!146 lt!53824 lt!53818))) (ite c!18460 (Cons!1638 (h!2235 (toList!808 (+!146 lt!53824 lt!53818))) (t!5737 (toList!808 (+!146 lt!53824 lt!53818)))) Nil!1639)))))

(declare-fun bm!11189 () Bool)

(declare-fun $colon$colon!80 (List!1642 tuple2!2410) List!1642)

(assert (=> bm!11189 (= call!11192 ($colon$colon!80 e!68941 (ite c!18459 (h!2235 (toList!808 (+!146 lt!53824 lt!53818))) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817)))))))

(declare-fun c!18462 () Bool)

(assert (=> bm!11189 (= c!18462 c!18459)))

(declare-fun b!105906 () Bool)

(assert (=> b!105906 (= e!68941 (insertStrictlySorted!75 (t!5737 (toList!808 (+!146 lt!53824 lt!53818))) (_1!1215 lt!53817) (_2!1215 lt!53817)))))

(declare-fun b!105907 () Bool)

(assert (=> b!105907 (= e!68938 (contains!830 lt!54167 (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun bm!11190 () Bool)

(assert (=> bm!11190 (= call!11193 call!11191)))

(declare-fun b!105908 () Bool)

(assert (=> b!105908 (= e!68940 call!11193)))

(declare-fun b!105909 () Bool)

(assert (=> b!105909 (= e!68937 e!68939)))

(assert (=> b!105909 (= c!18461 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 lt!53818))) (= (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 lt!53818)))) (_1!1215 lt!53817))))))

(assert (= (and d!28905 c!18459) b!105903))

(assert (= (and d!28905 (not c!18459)) b!105909))

(assert (= (and b!105909 c!18461) b!105902))

(assert (= (and b!105909 (not c!18461)) b!105901))

(assert (= (and b!105901 c!18460) b!105908))

(assert (= (and b!105901 (not c!18460)) b!105900))

(assert (= (or b!105908 b!105900) bm!11190))

(assert (= (or b!105902 bm!11190) bm!11188))

(assert (= (or b!105903 bm!11188) bm!11189))

(assert (= (and bm!11189 c!18462) b!105906))

(assert (= (and bm!11189 (not c!18462)) b!105905))

(assert (= (and d!28905 res!52665) b!105904))

(assert (= (and b!105904 res!52666) b!105907))

(declare-fun m!118085 () Bool)

(assert (=> b!105907 m!118085))

(declare-fun m!118087 () Bool)

(assert (=> bm!11189 m!118087))

(declare-fun m!118089 () Bool)

(assert (=> b!105904 m!118089))

(declare-fun m!118091 () Bool)

(assert (=> b!105906 m!118091))

(declare-fun m!118093 () Bool)

(assert (=> d!28905 m!118093))

(declare-fun m!118095 () Bool)

(assert (=> d!28905 m!118095))

(assert (=> d!28805 d!28905))

(declare-fun b!105911 () Bool)

(declare-fun e!68942 () Option!161)

(declare-fun e!68943 () Option!161)

(assert (=> b!105911 (= e!68942 e!68943)))

(declare-fun c!18464 () Bool)

(assert (=> b!105911 (= c!18464 (and ((_ is Cons!1638) (toList!808 lt!54038)) (not (= (_1!1215 (h!2235 (toList!808 lt!54038))) (_1!1215 lt!53817)))))))

(declare-fun d!28907 () Bool)

(declare-fun c!18463 () Bool)

(assert (=> d!28907 (= c!18463 (and ((_ is Cons!1638) (toList!808 lt!54038)) (= (_1!1215 (h!2235 (toList!808 lt!54038))) (_1!1215 lt!53817))))))

(assert (=> d!28907 (= (getValueByKey!155 (toList!808 lt!54038) (_1!1215 lt!53817)) e!68942)))

(declare-fun b!105912 () Bool)

(assert (=> b!105912 (= e!68943 (getValueByKey!155 (t!5737 (toList!808 lt!54038)) (_1!1215 lt!53817)))))

(declare-fun b!105910 () Bool)

(assert (=> b!105910 (= e!68942 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54038)))))))

(declare-fun b!105913 () Bool)

(assert (=> b!105913 (= e!68943 None!159)))

(assert (= (and d!28907 c!18463) b!105910))

(assert (= (and d!28907 (not c!18463)) b!105911))

(assert (= (and b!105911 c!18464) b!105912))

(assert (= (and b!105911 (not c!18464)) b!105913))

(declare-fun m!118097 () Bool)

(assert (=> b!105912 m!118097))

(assert (=> b!105636 d!28907))

(declare-fun b!105925 () Bool)

(declare-fun e!68946 () Bool)

(assert (=> b!105925 (= e!68946 (and (bvsge (extraKeys!2387 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2387 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!499 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!28909 () Bool)

(declare-fun res!52675 () Bool)

(assert (=> d!28909 (=> (not res!52675) (not e!68946))))

(assert (=> d!28909 (= res!52675 (validMask!0 (mask!6728 newMap!16)))))

(assert (=> d!28909 (= (simpleValid!73 newMap!16) e!68946)))

(declare-fun b!105922 () Bool)

(declare-fun res!52676 () Bool)

(assert (=> b!105922 (=> (not res!52676) (not e!68946))))

(assert (=> b!105922 (= res!52676 (and (= (size!2318 (_values!2565 newMap!16)) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001)) (= (size!2317 (_keys!4288 newMap!16)) (size!2318 (_values!2565 newMap!16))) (bvsge (_size!499 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!499 newMap!16) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!105924 () Bool)

(declare-fun res!52678 () Bool)

(assert (=> b!105924 (=> (not res!52678) (not e!68946))))

(declare-fun size!2321 (LongMapFixedSize!900) (_ BitVec 32))

(assert (=> b!105924 (= res!52678 (= (size!2321 newMap!16) (bvadd (_size!499 newMap!16) (bvsdiv (bvadd (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!105923 () Bool)

(declare-fun res!52677 () Bool)

(assert (=> b!105923 (=> (not res!52677) (not e!68946))))

(assert (=> b!105923 (= res!52677 (bvsge (size!2321 newMap!16) (_size!499 newMap!16)))))

(assert (= (and d!28909 res!52675) b!105922))

(assert (= (and b!105922 res!52676) b!105923))

(assert (= (and b!105923 res!52677) b!105924))

(assert (= (and b!105924 res!52678) b!105925))

(assert (=> d!28909 m!117867))

(declare-fun m!118099 () Bool)

(assert (=> b!105924 m!118099))

(assert (=> b!105923 m!118099))

(assert (=> d!28807 d!28909))

(declare-fun b!105926 () Bool)

(declare-fun e!68955 () Bool)

(declare-fun e!68958 () Bool)

(assert (=> b!105926 (= e!68955 e!68958)))

(declare-fun res!52685 () Bool)

(declare-fun call!11200 () Bool)

(assert (=> b!105926 (= res!52685 call!11200)))

(assert (=> b!105926 (=> (not res!52685) (not e!68958))))

(declare-fun bm!11191 () Bool)

(declare-fun call!11194 () ListLongMap!1585)

(assert (=> bm!11191 (= call!11194 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bm!11192 () Bool)

(declare-fun call!11198 () ListLongMap!1585)

(assert (=> bm!11192 (= call!11198 call!11194)))

(declare-fun b!105928 () Bool)

(declare-fun e!68950 () Bool)

(assert (=> b!105928 (= e!68950 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11193 () Bool)

(declare-fun call!11197 () ListLongMap!1585)

(declare-fun call!11199 () ListLongMap!1585)

(assert (=> bm!11193 (= call!11197 call!11199)))

(declare-fun b!105929 () Bool)

(declare-fun e!68953 () Unit!3250)

(declare-fun lt!54173 () Unit!3250)

(assert (=> b!105929 (= e!68953 lt!54173)))

(declare-fun lt!54186 () ListLongMap!1585)

(assert (=> b!105929 (= lt!54186 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54182 () (_ BitVec 64))

(assert (=> b!105929 (= lt!54182 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54185 () (_ BitVec 64))

(assert (=> b!105929 (= lt!54185 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54169 () Unit!3250)

(assert (=> b!105929 (= lt!54169 (addStillContains!74 lt!54186 lt!54182 (zeroValue!2457 newMap!16) lt!54185))))

(assert (=> b!105929 (contains!829 (+!146 lt!54186 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16))) lt!54185)))

(declare-fun lt!54168 () Unit!3250)

(assert (=> b!105929 (= lt!54168 lt!54169)))

(declare-fun lt!54178 () ListLongMap!1585)

(assert (=> b!105929 (= lt!54178 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54170 () (_ BitVec 64))

(assert (=> b!105929 (= lt!54170 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54176 () (_ BitVec 64))

(assert (=> b!105929 (= lt!54176 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54174 () Unit!3250)

(assert (=> b!105929 (= lt!54174 (addApplyDifferent!74 lt!54178 lt!54170 (minValue!2457 newMap!16) lt!54176))))

(assert (=> b!105929 (= (apply!98 (+!146 lt!54178 (tuple2!2411 lt!54170 (minValue!2457 newMap!16))) lt!54176) (apply!98 lt!54178 lt!54176))))

(declare-fun lt!54184 () Unit!3250)

(assert (=> b!105929 (= lt!54184 lt!54174)))

(declare-fun lt!54181 () ListLongMap!1585)

(assert (=> b!105929 (= lt!54181 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54179 () (_ BitVec 64))

(assert (=> b!105929 (= lt!54179 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54188 () (_ BitVec 64))

(assert (=> b!105929 (= lt!54188 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54189 () Unit!3250)

(assert (=> b!105929 (= lt!54189 (addApplyDifferent!74 lt!54181 lt!54179 (zeroValue!2457 newMap!16) lt!54188))))

(assert (=> b!105929 (= (apply!98 (+!146 lt!54181 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16))) lt!54188) (apply!98 lt!54181 lt!54188))))

(declare-fun lt!54175 () Unit!3250)

(assert (=> b!105929 (= lt!54175 lt!54189)))

(declare-fun lt!54177 () ListLongMap!1585)

(assert (=> b!105929 (= lt!54177 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54187 () (_ BitVec 64))

(assert (=> b!105929 (= lt!54187 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54172 () (_ BitVec 64))

(assert (=> b!105929 (= lt!54172 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105929 (= lt!54173 (addApplyDifferent!74 lt!54177 lt!54187 (minValue!2457 newMap!16) lt!54172))))

(assert (=> b!105929 (= (apply!98 (+!146 lt!54177 (tuple2!2411 lt!54187 (minValue!2457 newMap!16))) lt!54172) (apply!98 lt!54177 lt!54172))))

(declare-fun b!105930 () Bool)

(declare-fun e!68954 () Bool)

(assert (=> b!105930 (= e!68954 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105931 () Bool)

(declare-fun lt!54180 () ListLongMap!1585)

(assert (=> b!105931 (= e!68958 (= (apply!98 lt!54180 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!105932 () Bool)

(declare-fun e!68957 () Bool)

(declare-fun e!68951 () Bool)

(assert (=> b!105932 (= e!68957 e!68951)))

(declare-fun res!52683 () Bool)

(declare-fun call!11196 () Bool)

(assert (=> b!105932 (= res!52683 call!11196)))

(assert (=> b!105932 (=> (not res!52683) (not e!68951))))

(declare-fun b!105933 () Bool)

(declare-fun res!52684 () Bool)

(declare-fun e!68959 () Bool)

(assert (=> b!105933 (=> (not res!52684) (not e!68959))))

(assert (=> b!105933 (= res!52684 e!68957)))

(declare-fun c!18470 () Bool)

(assert (=> b!105933 (= c!18470 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!105934 () Bool)

(declare-fun c!18466 () Bool)

(assert (=> b!105934 (= c!18466 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68948 () ListLongMap!1585)

(declare-fun e!68956 () ListLongMap!1585)

(assert (=> b!105934 (= e!68948 e!68956)))

(declare-fun b!105935 () Bool)

(declare-fun res!52681 () Bool)

(assert (=> b!105935 (=> (not res!52681) (not e!68959))))

(declare-fun e!68949 () Bool)

(assert (=> b!105935 (= res!52681 e!68949)))

(declare-fun res!52687 () Bool)

(assert (=> b!105935 (=> res!52687 e!68949)))

(assert (=> b!105935 (= res!52687 (not e!68954))))

(declare-fun res!52682 () Bool)

(assert (=> b!105935 (=> (not res!52682) (not e!68954))))

(assert (=> b!105935 (= res!52682 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!105936 () Bool)

(declare-fun e!68952 () Bool)

(assert (=> b!105936 (= e!68949 e!68952)))

(declare-fun res!52680 () Bool)

(assert (=> b!105936 (=> (not res!52680) (not e!68952))))

(assert (=> b!105936 (= res!52680 (contains!829 lt!54180 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105936 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!105937 () Bool)

(assert (=> b!105937 (= e!68956 call!11197)))

(declare-fun bm!11194 () Bool)

(assert (=> bm!11194 (= call!11196 (contains!829 lt!54180 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!28911 () Bool)

(assert (=> d!28911 e!68959))

(declare-fun res!52686 () Bool)

(assert (=> d!28911 (=> (not res!52686) (not e!68959))))

(assert (=> d!28911 (= res!52686 (or (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))))

(declare-fun lt!54171 () ListLongMap!1585)

(assert (=> d!28911 (= lt!54180 lt!54171)))

(declare-fun lt!54183 () Unit!3250)

(assert (=> d!28911 (= lt!54183 e!68953)))

(declare-fun c!18468 () Bool)

(assert (=> d!28911 (= c!18468 e!68950)))

(declare-fun res!52679 () Bool)

(assert (=> d!28911 (=> (not res!52679) (not e!68950))))

(assert (=> d!28911 (= res!52679 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun e!68947 () ListLongMap!1585)

(assert (=> d!28911 (= lt!54171 e!68947)))

(declare-fun c!18469 () Bool)

(assert (=> d!28911 (= c!18469 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28911 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28911 (= (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54180)))

(declare-fun b!105927 () Bool)

(declare-fun Unit!3267 () Unit!3250)

(assert (=> b!105927 (= e!68953 Unit!3267)))

(declare-fun b!105938 () Bool)

(assert (=> b!105938 (= e!68947 e!68948)))

(declare-fun c!18465 () Bool)

(assert (=> b!105938 (= c!18465 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105939 () Bool)

(assert (=> b!105939 (= e!68959 e!68955)))

(declare-fun c!18467 () Bool)

(assert (=> b!105939 (= c!18467 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11195 () Bool)

(assert (=> bm!11195 (= call!11200 (contains!829 lt!54180 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105940 () Bool)

(assert (=> b!105940 (= e!68948 call!11197)))

(declare-fun call!11195 () ListLongMap!1585)

(declare-fun bm!11196 () Bool)

(assert (=> bm!11196 (= call!11199 (+!146 (ite c!18469 call!11194 (ite c!18465 call!11198 call!11195)) (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!105941 () Bool)

(assert (=> b!105941 (= e!68952 (= (apply!98 lt!54180 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105941 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_values!2565 newMap!16))))))

(assert (=> b!105941 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!105942 () Bool)

(assert (=> b!105942 (= e!68957 (not call!11196))))

(declare-fun b!105943 () Bool)

(assert (=> b!105943 (= e!68955 (not call!11200))))

(declare-fun b!105944 () Bool)

(assert (=> b!105944 (= e!68956 call!11195)))

(declare-fun bm!11197 () Bool)

(assert (=> bm!11197 (= call!11195 call!11198)))

(declare-fun b!105945 () Bool)

(assert (=> b!105945 (= e!68951 (= (apply!98 lt!54180 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun b!105946 () Bool)

(assert (=> b!105946 (= e!68947 (+!146 call!11199 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!28911 c!18469) b!105946))

(assert (= (and d!28911 (not c!18469)) b!105938))

(assert (= (and b!105938 c!18465) b!105940))

(assert (= (and b!105938 (not c!18465)) b!105934))

(assert (= (and b!105934 c!18466) b!105937))

(assert (= (and b!105934 (not c!18466)) b!105944))

(assert (= (or b!105937 b!105944) bm!11197))

(assert (= (or b!105940 bm!11197) bm!11192))

(assert (= (or b!105940 b!105937) bm!11193))

(assert (= (or b!105946 bm!11192) bm!11191))

(assert (= (or b!105946 bm!11193) bm!11196))

(assert (= (and d!28911 res!52679) b!105928))

(assert (= (and d!28911 c!18468) b!105929))

(assert (= (and d!28911 (not c!18468)) b!105927))

(assert (= (and d!28911 res!52686) b!105935))

(assert (= (and b!105935 res!52682) b!105930))

(assert (= (and b!105935 (not res!52687)) b!105936))

(assert (= (and b!105936 res!52680) b!105941))

(assert (= (and b!105935 res!52681) b!105933))

(assert (= (and b!105933 c!18470) b!105932))

(assert (= (and b!105933 (not c!18470)) b!105942))

(assert (= (and b!105932 res!52683) b!105945))

(assert (= (or b!105932 b!105942) bm!11194))

(assert (= (and b!105933 res!52684) b!105939))

(assert (= (and b!105939 c!18467) b!105926))

(assert (= (and b!105939 (not c!18467)) b!105943))

(assert (= (and b!105926 res!52685) b!105931))

(assert (= (or b!105926 b!105943) bm!11195))

(declare-fun b_lambda!4755 () Bool)

(assert (=> (not b_lambda!4755) (not b!105941)))

(declare-fun tb!2069 () Bool)

(declare-fun t!5744 () Bool)

(assert (=> (and b!105370 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16)) t!5744) tb!2069))

(declare-fun result!3475 () Bool)

(assert (=> tb!2069 (= result!3475 tp_is_empty!2679)))

(assert (=> b!105941 t!5744))

(declare-fun b_and!6549 () Bool)

(assert (= b_and!6545 (and (=> t!5744 result!3475) b_and!6549)))

(declare-fun t!5746 () Bool)

(declare-fun tb!2071 () Bool)

(assert (=> (and b!105373 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 newMap!16)) t!5746) tb!2071))

(declare-fun result!3477 () Bool)

(assert (= result!3477 result!3475))

(assert (=> b!105941 t!5746))

(declare-fun b_and!6551 () Bool)

(assert (= b_and!6547 (and (=> t!5746 result!3477) b_and!6551)))

(assert (=> b!105941 m!117859))

(declare-fun m!118101 () Bool)

(assert (=> b!105941 m!118101))

(declare-fun m!118103 () Bool)

(assert (=> b!105941 m!118103))

(declare-fun m!118105 () Bool)

(assert (=> b!105941 m!118105))

(assert (=> b!105941 m!117859))

(declare-fun m!118107 () Bool)

(assert (=> b!105941 m!118107))

(assert (=> b!105941 m!118101))

(assert (=> b!105941 m!118103))

(declare-fun m!118109 () Bool)

(assert (=> bm!11195 m!118109))

(declare-fun m!118111 () Bool)

(assert (=> bm!11196 m!118111))

(declare-fun m!118113 () Bool)

(assert (=> b!105946 m!118113))

(assert (=> d!28911 m!117867))

(assert (=> b!105928 m!117859))

(assert (=> b!105928 m!117859))

(assert (=> b!105928 m!117861))

(declare-fun m!118115 () Bool)

(assert (=> b!105931 m!118115))

(assert (=> b!105930 m!117859))

(assert (=> b!105930 m!117859))

(assert (=> b!105930 m!117861))

(declare-fun m!118117 () Bool)

(assert (=> b!105945 m!118117))

(declare-fun m!118119 () Bool)

(assert (=> bm!11194 m!118119))

(declare-fun m!118121 () Bool)

(assert (=> bm!11191 m!118121))

(assert (=> b!105936 m!117859))

(assert (=> b!105936 m!117859))

(declare-fun m!118123 () Bool)

(assert (=> b!105936 m!118123))

(declare-fun m!118125 () Bool)

(assert (=> b!105929 m!118125))

(declare-fun m!118127 () Bool)

(assert (=> b!105929 m!118127))

(assert (=> b!105929 m!118121))

(assert (=> b!105929 m!117859))

(declare-fun m!118129 () Bool)

(assert (=> b!105929 m!118129))

(declare-fun m!118131 () Bool)

(assert (=> b!105929 m!118131))

(declare-fun m!118133 () Bool)

(assert (=> b!105929 m!118133))

(declare-fun m!118135 () Bool)

(assert (=> b!105929 m!118135))

(declare-fun m!118137 () Bool)

(assert (=> b!105929 m!118137))

(declare-fun m!118139 () Bool)

(assert (=> b!105929 m!118139))

(declare-fun m!118141 () Bool)

(assert (=> b!105929 m!118141))

(assert (=> b!105929 m!118135))

(declare-fun m!118143 () Bool)

(assert (=> b!105929 m!118143))

(declare-fun m!118145 () Bool)

(assert (=> b!105929 m!118145))

(declare-fun m!118147 () Bool)

(assert (=> b!105929 m!118147))

(assert (=> b!105929 m!118143))

(declare-fun m!118149 () Bool)

(assert (=> b!105929 m!118149))

(assert (=> b!105929 m!118139))

(declare-fun m!118151 () Bool)

(assert (=> b!105929 m!118151))

(assert (=> b!105929 m!118129))

(declare-fun m!118153 () Bool)

(assert (=> b!105929 m!118153))

(assert (=> d!28785 d!28911))

(declare-fun d!28913 () Bool)

(declare-fun isEmpty!377 (List!1642) Bool)

(assert (=> d!28913 (= (isEmpty!375 lt!54058) (isEmpty!377 (toList!808 lt!54058)))))

(declare-fun bs!4341 () Bool)

(assert (= bs!4341 d!28913))

(declare-fun m!118155 () Bool)

(assert (=> bs!4341 m!118155))

(assert (=> b!105670 d!28913))

(assert (=> b!105703 d!28817))

(declare-fun d!28915 () Bool)

(declare-fun res!52693 () Bool)

(declare-fun e!68968 () Bool)

(assert (=> d!28915 (=> res!52693 e!68968)))

(assert (=> d!28915 (= res!52693 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!28915 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 newMap!16) (mask!6728 newMap!16)) e!68968)))

(declare-fun b!105955 () Bool)

(declare-fun e!68966 () Bool)

(assert (=> b!105955 (= e!68968 e!68966)))

(declare-fun c!18473 () Bool)

(assert (=> b!105955 (= c!18473 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105956 () Bool)

(declare-fun call!11203 () Bool)

(assert (=> b!105956 (= e!68966 call!11203)))

(declare-fun b!105957 () Bool)

(declare-fun e!68967 () Bool)

(assert (=> b!105957 (= e!68967 call!11203)))

(declare-fun bm!11200 () Bool)

(assert (=> bm!11200 (= call!11203 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun b!105958 () Bool)

(assert (=> b!105958 (= e!68966 e!68967)))

(declare-fun lt!54196 () (_ BitVec 64))

(assert (=> b!105958 (= lt!54196 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54198 () Unit!3250)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4348 (_ BitVec 64) (_ BitVec 32)) Unit!3250)

(assert (=> b!105958 (= lt!54198 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4288 newMap!16) lt!54196 #b00000000000000000000000000000000))))

(assert (=> b!105958 (arrayContainsKey!0 (_keys!4288 newMap!16) lt!54196 #b00000000000000000000000000000000)))

(declare-fun lt!54197 () Unit!3250)

(assert (=> b!105958 (= lt!54197 lt!54198)))

(declare-fun res!52692 () Bool)

(assert (=> b!105958 (= res!52692 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (_keys!4288 newMap!16) (mask!6728 newMap!16)) (Found!269 #b00000000000000000000000000000000)))))

(assert (=> b!105958 (=> (not res!52692) (not e!68967))))

(assert (= (and d!28915 (not res!52693)) b!105955))

(assert (= (and b!105955 c!18473) b!105958))

(assert (= (and b!105955 (not c!18473)) b!105956))

(assert (= (and b!105958 res!52692) b!105957))

(assert (= (or b!105957 b!105956) bm!11200))

(assert (=> b!105955 m!117859))

(assert (=> b!105955 m!117859))

(assert (=> b!105955 m!117861))

(declare-fun m!118157 () Bool)

(assert (=> bm!11200 m!118157))

(assert (=> b!105958 m!117859))

(declare-fun m!118159 () Bool)

(assert (=> b!105958 m!118159))

(declare-fun m!118161 () Bool)

(assert (=> b!105958 m!118161))

(assert (=> b!105958 m!117859))

(declare-fun m!118163 () Bool)

(assert (=> b!105958 m!118163))

(assert (=> b!105685 d!28915))

(declare-fun d!28917 () Bool)

(assert (=> d!28917 (isDefined!109 (getValueByKey!155 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun lt!54201 () Unit!3250)

(declare-fun choose!667 (List!1642 (_ BitVec 64)) Unit!3250)

(assert (=> d!28917 (= lt!54201 (choose!667 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun e!68971 () Bool)

(assert (=> d!28917 e!68971))

(declare-fun res!52696 () Bool)

(assert (=> d!28917 (=> (not res!52696) (not e!68971))))

(assert (=> d!28917 (= res!52696 (isStrictlySorted!304 (toList!808 lt!53820)))))

(assert (=> d!28917 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) lt!54201)))

(declare-fun b!105961 () Bool)

(assert (=> b!105961 (= e!68971 (containsKey!159 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (= (and d!28917 res!52696) b!105961))

(assert (=> d!28917 m!117519))

(assert (=> d!28917 m!117625))

(assert (=> d!28917 m!117625))

(assert (=> d!28917 m!117627))

(assert (=> d!28917 m!117519))

(declare-fun m!118165 () Bool)

(assert (=> d!28917 m!118165))

(declare-fun m!118167 () Bool)

(assert (=> d!28917 m!118167))

(assert (=> b!105961 m!117519))

(assert (=> b!105961 m!117621))

(assert (=> b!105450 d!28917))

(assert (=> b!105450 d!28871))

(assert (=> b!105450 d!28873))

(assert (=> d!28815 d!28821))

(declare-fun d!28919 () Bool)

(assert (=> d!28919 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) from!355 Nil!1640)))

(assert (=> d!28919 true))

(declare-fun _$71!147 () Unit!3250)

(assert (=> d!28919 (= (choose!39 (_keys!4288 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!147)))

(declare-fun bs!4342 () Bool)

(assert (= bs!4342 d!28919))

(assert (=> bs!4342 m!117517))

(assert (=> d!28815 d!28919))

(declare-fun d!28921 () Bool)

(assert (=> d!28921 (= (get!1340 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) from!355) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2891 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> b!105691 d!28921))

(declare-fun d!28923 () Bool)

(declare-fun e!68973 () Bool)

(assert (=> d!28923 e!68973))

(declare-fun res!52697 () Bool)

(assert (=> d!28923 (=> res!52697 e!68973)))

(declare-fun lt!54202 () Bool)

(assert (=> d!28923 (= res!52697 (not lt!54202))))

(declare-fun lt!54205 () Bool)

(assert (=> d!28923 (= lt!54202 lt!54205)))

(declare-fun lt!54204 () Unit!3250)

(declare-fun e!68972 () Unit!3250)

(assert (=> d!28923 (= lt!54204 e!68972)))

(declare-fun c!18474 () Bool)

(assert (=> d!28923 (= c!18474 lt!54205)))

(assert (=> d!28923 (= lt!54205 (containsKey!159 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28923 (= (contains!829 lt!54058 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54202)))

(declare-fun b!105962 () Bool)

(declare-fun lt!54203 () Unit!3250)

(assert (=> b!105962 (= e!68972 lt!54203)))

(assert (=> b!105962 (= lt!54203 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105962 (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105963 () Bool)

(declare-fun Unit!3268 () Unit!3250)

(assert (=> b!105963 (= e!68972 Unit!3268)))

(declare-fun b!105964 () Bool)

(assert (=> b!105964 (= e!68973 (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28923 c!18474) b!105962))

(assert (= (and d!28923 (not c!18474)) b!105963))

(assert (= (and d!28923 (not res!52697)) b!105964))

(declare-fun m!118169 () Bool)

(assert (=> d!28923 m!118169))

(declare-fun m!118171 () Bool)

(assert (=> b!105962 m!118171))

(declare-fun m!118173 () Bool)

(assert (=> b!105962 m!118173))

(assert (=> b!105962 m!118173))

(declare-fun m!118175 () Bool)

(assert (=> b!105962 m!118175))

(assert (=> b!105964 m!118173))

(assert (=> b!105964 m!118173))

(assert (=> b!105964 m!118175))

(assert (=> d!28801 d!28923))

(assert (=> d!28801 d!28797))

(declare-fun d!28925 () Bool)

(declare-fun e!68974 () Bool)

(assert (=> d!28925 e!68974))

(declare-fun res!52699 () Bool)

(assert (=> d!28925 (=> (not res!52699) (not e!68974))))

(declare-fun lt!54208 () ListLongMap!1585)

(assert (=> d!28925 (= res!52699 (contains!829 lt!54208 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun lt!54207 () List!1642)

(assert (=> d!28925 (= lt!54208 (ListLongMap!1586 lt!54207))))

(declare-fun lt!54209 () Unit!3250)

(declare-fun lt!54206 () Unit!3250)

(assert (=> d!28925 (= lt!54209 lt!54206)))

(assert (=> d!28925 (= (getValueByKey!155 lt!54207 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) (Some!160 (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!28925 (= lt!54206 (lemmaContainsTupThenGetReturnValue!73 lt!54207 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!28925 (= lt!54207 (insertStrictlySorted!75 (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137)) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!28925 (= (+!146 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137) (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) lt!54208)))

(declare-fun b!105965 () Bool)

(declare-fun res!52698 () Bool)

(assert (=> b!105965 (=> (not res!52698) (not e!68974))))

(assert (=> b!105965 (= res!52698 (= (getValueByKey!155 (toList!808 lt!54208) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) (Some!160 (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun b!105966 () Bool)

(assert (=> b!105966 (= e!68974 (contains!830 (toList!808 lt!54208) (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (= (and d!28925 res!52699) b!105965))

(assert (= (and b!105965 res!52698) b!105966))

(declare-fun m!118177 () Bool)

(assert (=> d!28925 m!118177))

(declare-fun m!118179 () Bool)

(assert (=> d!28925 m!118179))

(declare-fun m!118181 () Bool)

(assert (=> d!28925 m!118181))

(declare-fun m!118183 () Bool)

(assert (=> d!28925 m!118183))

(declare-fun m!118185 () Bool)

(assert (=> b!105965 m!118185))

(declare-fun m!118187 () Bool)

(assert (=> b!105966 m!118187))

(assert (=> bm!11137 d!28925))

(declare-fun d!28927 () Bool)

(declare-fun e!68975 () Bool)

(assert (=> d!28927 e!68975))

(declare-fun res!52701 () Bool)

(assert (=> d!28927 (=> (not res!52701) (not e!68975))))

(declare-fun lt!54212 () ListLongMap!1585)

(assert (=> d!28927 (= res!52701 (contains!829 lt!54212 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun lt!54211 () List!1642)

(assert (=> d!28927 (= lt!54212 (ListLongMap!1586 lt!54211))))

(declare-fun lt!54213 () Unit!3250)

(declare-fun lt!54210 () Unit!3250)

(assert (=> d!28927 (= lt!54213 lt!54210)))

(assert (=> d!28927 (= (getValueByKey!155 lt!54211 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!28927 (= lt!54210 (lemmaContainsTupThenGetReturnValue!73 lt!54211 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!28927 (= lt!54211 (insertStrictlySorted!75 (toList!808 call!11143) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!28927 (= (+!146 call!11143 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) lt!54212)))

(declare-fun b!105967 () Bool)

(declare-fun res!52700 () Bool)

(assert (=> b!105967 (=> (not res!52700) (not e!68975))))

(assert (=> b!105967 (= res!52700 (= (getValueByKey!155 (toList!808 lt!54212) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun b!105968 () Bool)

(assert (=> b!105968 (= e!68975 (contains!830 (toList!808 lt!54212) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(assert (= (and d!28927 res!52701) b!105967))

(assert (= (and b!105967 res!52700) b!105968))

(declare-fun m!118189 () Bool)

(assert (=> d!28927 m!118189))

(declare-fun m!118191 () Bool)

(assert (=> d!28927 m!118191))

(declare-fun m!118193 () Bool)

(assert (=> d!28927 m!118193))

(declare-fun m!118195 () Bool)

(assert (=> d!28927 m!118195))

(declare-fun m!118197 () Bool)

(assert (=> b!105967 m!118197))

(declare-fun m!118199 () Bool)

(assert (=> b!105968 m!118199))

(assert (=> b!105545 d!28927))

(declare-fun d!28929 () Bool)

(declare-fun e!68978 () Bool)

(assert (=> d!28929 e!68978))

(declare-fun res!52704 () Bool)

(assert (=> d!28929 (=> (not res!52704) (not e!68978))))

(assert (=> d!28929 (= res!52704 (and (bvsge (index!3225 lt!53938) #b00000000000000000000000000000000) (bvslt (index!3225 lt!53938) (size!2317 (_keys!4288 newMap!16)))))))

(declare-fun lt!54216 () Unit!3250)

(declare-fun choose!668 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) Int) Unit!3250)

(assert (=> d!28929 (= lt!54216 (choose!668 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3225 lt!53938) (defaultEntry!2582 newMap!16)))))

(assert (=> d!28929 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28929 (= (lemmaValidKeyInArrayIsInListMap!105 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3225 lt!53938) (defaultEntry!2582 newMap!16)) lt!54216)))

(declare-fun b!105971 () Bool)

(assert (=> b!105971 (= e!68978 (contains!829 (getCurrentListMap!484 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938))))))

(assert (= (and d!28929 res!52704) b!105971))

(declare-fun m!118201 () Bool)

(assert (=> d!28929 m!118201))

(assert (=> d!28929 m!117867))

(declare-fun m!118203 () Bool)

(assert (=> b!105971 m!118203))

(assert (=> b!105971 m!117659))

(assert (=> b!105971 m!118203))

(assert (=> b!105971 m!117659))

(declare-fun m!118205 () Bool)

(assert (=> b!105971 m!118205))

(assert (=> b!105533 d!28929))

(declare-fun b!105972 () Bool)

(declare-fun e!68987 () Bool)

(declare-fun e!68990 () Bool)

(assert (=> b!105972 (= e!68987 e!68990)))

(declare-fun res!52711 () Bool)

(declare-fun call!11210 () Bool)

(assert (=> b!105972 (= res!52711 call!11210)))

(assert (=> b!105972 (=> (not res!52711) (not e!68990))))

(declare-fun bm!11201 () Bool)

(declare-fun call!11204 () ListLongMap!1585)

(assert (=> bm!11201 (= call!11204 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bm!11202 () Bool)

(declare-fun call!11208 () ListLongMap!1585)

(assert (=> bm!11202 (= call!11208 call!11204)))

(declare-fun b!105974 () Bool)

(declare-fun e!68982 () Bool)

(assert (=> b!105974 (= e!68982 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11203 () Bool)

(declare-fun call!11207 () ListLongMap!1585)

(declare-fun call!11209 () ListLongMap!1585)

(assert (=> bm!11203 (= call!11207 call!11209)))

(declare-fun b!105975 () Bool)

(declare-fun e!68985 () Unit!3250)

(declare-fun lt!54222 () Unit!3250)

(assert (=> b!105975 (= e!68985 lt!54222)))

(declare-fun lt!54235 () ListLongMap!1585)

(assert (=> b!105975 (= lt!54235 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54231 () (_ BitVec 64))

(assert (=> b!105975 (= lt!54231 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54234 () (_ BitVec 64))

(assert (=> b!105975 (= lt!54234 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54218 () Unit!3250)

(assert (=> b!105975 (= lt!54218 (addStillContains!74 lt!54235 lt!54231 (zeroValue!2457 newMap!16) lt!54234))))

(assert (=> b!105975 (contains!829 (+!146 lt!54235 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16))) lt!54234)))

(declare-fun lt!54217 () Unit!3250)

(assert (=> b!105975 (= lt!54217 lt!54218)))

(declare-fun lt!54227 () ListLongMap!1585)

(assert (=> b!105975 (= lt!54227 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54219 () (_ BitVec 64))

(assert (=> b!105975 (= lt!54219 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54225 () (_ BitVec 64))

(assert (=> b!105975 (= lt!54225 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54223 () Unit!3250)

(assert (=> b!105975 (= lt!54223 (addApplyDifferent!74 lt!54227 lt!54219 (minValue!2457 newMap!16) lt!54225))))

(assert (=> b!105975 (= (apply!98 (+!146 lt!54227 (tuple2!2411 lt!54219 (minValue!2457 newMap!16))) lt!54225) (apply!98 lt!54227 lt!54225))))

(declare-fun lt!54233 () Unit!3250)

(assert (=> b!105975 (= lt!54233 lt!54223)))

(declare-fun lt!54230 () ListLongMap!1585)

(assert (=> b!105975 (= lt!54230 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54228 () (_ BitVec 64))

(assert (=> b!105975 (= lt!54228 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54237 () (_ BitVec 64))

(assert (=> b!105975 (= lt!54237 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54238 () Unit!3250)

(assert (=> b!105975 (= lt!54238 (addApplyDifferent!74 lt!54230 lt!54228 (zeroValue!2457 newMap!16) lt!54237))))

(assert (=> b!105975 (= (apply!98 (+!146 lt!54230 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16))) lt!54237) (apply!98 lt!54230 lt!54237))))

(declare-fun lt!54224 () Unit!3250)

(assert (=> b!105975 (= lt!54224 lt!54238)))

(declare-fun lt!54226 () ListLongMap!1585)

(assert (=> b!105975 (= lt!54226 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54236 () (_ BitVec 64))

(assert (=> b!105975 (= lt!54236 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54221 () (_ BitVec 64))

(assert (=> b!105975 (= lt!54221 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105975 (= lt!54222 (addApplyDifferent!74 lt!54226 lt!54236 (minValue!2457 newMap!16) lt!54221))))

(assert (=> b!105975 (= (apply!98 (+!146 lt!54226 (tuple2!2411 lt!54236 (minValue!2457 newMap!16))) lt!54221) (apply!98 lt!54226 lt!54221))))

(declare-fun b!105976 () Bool)

(declare-fun e!68986 () Bool)

(assert (=> b!105976 (= e!68986 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105977 () Bool)

(declare-fun lt!54229 () ListLongMap!1585)

(assert (=> b!105977 (= e!68990 (= (apply!98 lt!54229 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!105978 () Bool)

(declare-fun e!68989 () Bool)

(declare-fun e!68983 () Bool)

(assert (=> b!105978 (= e!68989 e!68983)))

(declare-fun res!52709 () Bool)

(declare-fun call!11206 () Bool)

(assert (=> b!105978 (= res!52709 call!11206)))

(assert (=> b!105978 (=> (not res!52709) (not e!68983))))

(declare-fun b!105979 () Bool)

(declare-fun res!52710 () Bool)

(declare-fun e!68991 () Bool)

(assert (=> b!105979 (=> (not res!52710) (not e!68991))))

(assert (=> b!105979 (= res!52710 e!68989)))

(declare-fun c!18480 () Bool)

(assert (=> b!105979 (= c!18480 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!105980 () Bool)

(declare-fun c!18476 () Bool)

(assert (=> b!105980 (= c!18476 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68980 () ListLongMap!1585)

(declare-fun e!68988 () ListLongMap!1585)

(assert (=> b!105980 (= e!68980 e!68988)))

(declare-fun b!105981 () Bool)

(declare-fun res!52707 () Bool)

(assert (=> b!105981 (=> (not res!52707) (not e!68991))))

(declare-fun e!68981 () Bool)

(assert (=> b!105981 (= res!52707 e!68981)))

(declare-fun res!52713 () Bool)

(assert (=> b!105981 (=> res!52713 e!68981)))

(assert (=> b!105981 (= res!52713 (not e!68986))))

(declare-fun res!52708 () Bool)

(assert (=> b!105981 (=> (not res!52708) (not e!68986))))

(assert (=> b!105981 (= res!52708 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!105982 () Bool)

(declare-fun e!68984 () Bool)

(assert (=> b!105982 (= e!68981 e!68984)))

(declare-fun res!52706 () Bool)

(assert (=> b!105982 (=> (not res!52706) (not e!68984))))

(assert (=> b!105982 (= res!52706 (contains!829 lt!54229 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105982 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!105983 () Bool)

(assert (=> b!105983 (= e!68988 call!11207)))

(declare-fun bm!11204 () Bool)

(assert (=> bm!11204 (= call!11206 (contains!829 lt!54229 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!28931 () Bool)

(assert (=> d!28931 e!68991))

(declare-fun res!52712 () Bool)

(assert (=> d!28931 (=> (not res!52712) (not e!68991))))

(assert (=> d!28931 (= res!52712 (or (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))))

(declare-fun lt!54220 () ListLongMap!1585)

(assert (=> d!28931 (= lt!54229 lt!54220)))

(declare-fun lt!54232 () Unit!3250)

(assert (=> d!28931 (= lt!54232 e!68985)))

(declare-fun c!18478 () Bool)

(assert (=> d!28931 (= c!18478 e!68982)))

(declare-fun res!52705 () Bool)

(assert (=> d!28931 (=> (not res!52705) (not e!68982))))

(assert (=> d!28931 (= res!52705 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun e!68979 () ListLongMap!1585)

(assert (=> d!28931 (= lt!54220 e!68979)))

(declare-fun c!18479 () Bool)

(assert (=> d!28931 (= c!18479 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28931 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28931 (= (getCurrentListMap!484 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54229)))

(declare-fun b!105973 () Bool)

(declare-fun Unit!3269 () Unit!3250)

(assert (=> b!105973 (= e!68985 Unit!3269)))

(declare-fun b!105984 () Bool)

(assert (=> b!105984 (= e!68979 e!68980)))

(declare-fun c!18475 () Bool)

(assert (=> b!105984 (= c!18475 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105985 () Bool)

(assert (=> b!105985 (= e!68991 e!68987)))

(declare-fun c!18477 () Bool)

(assert (=> b!105985 (= c!18477 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11205 () Bool)

(assert (=> bm!11205 (= call!11210 (contains!829 lt!54229 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105986 () Bool)

(assert (=> b!105986 (= e!68980 call!11207)))

(declare-fun call!11205 () ListLongMap!1585)

(declare-fun bm!11206 () Bool)

(assert (=> bm!11206 (= call!11209 (+!146 (ite c!18479 call!11204 (ite c!18475 call!11208 call!11205)) (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!105987 () Bool)

(assert (=> b!105987 (= e!68984 (= (apply!98 lt!54229 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105987 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))))))))

(assert (=> b!105987 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!105988 () Bool)

(assert (=> b!105988 (= e!68989 (not call!11206))))

(declare-fun b!105989 () Bool)

(assert (=> b!105989 (= e!68987 (not call!11210))))

(declare-fun b!105990 () Bool)

(assert (=> b!105990 (= e!68988 call!11205)))

(declare-fun bm!11207 () Bool)

(assert (=> bm!11207 (= call!11205 call!11208)))

(declare-fun b!105991 () Bool)

(assert (=> b!105991 (= e!68983 (= (apply!98 lt!54229 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun b!105992 () Bool)

(assert (=> b!105992 (= e!68979 (+!146 call!11209 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!28931 c!18479) b!105992))

(assert (= (and d!28931 (not c!18479)) b!105984))

(assert (= (and b!105984 c!18475) b!105986))

(assert (= (and b!105984 (not c!18475)) b!105980))

(assert (= (and b!105980 c!18476) b!105983))

(assert (= (and b!105980 (not c!18476)) b!105990))

(assert (= (or b!105983 b!105990) bm!11207))

(assert (= (or b!105986 bm!11207) bm!11202))

(assert (= (or b!105986 b!105983) bm!11203))

(assert (= (or b!105992 bm!11202) bm!11201))

(assert (= (or b!105992 bm!11203) bm!11206))

(assert (= (and d!28931 res!52705) b!105974))

(assert (= (and d!28931 c!18478) b!105975))

(assert (= (and d!28931 (not c!18478)) b!105973))

(assert (= (and d!28931 res!52712) b!105981))

(assert (= (and b!105981 res!52708) b!105976))

(assert (= (and b!105981 (not res!52713)) b!105982))

(assert (= (and b!105982 res!52706) b!105987))

(assert (= (and b!105981 res!52707) b!105979))

(assert (= (and b!105979 c!18480) b!105978))

(assert (= (and b!105979 (not c!18480)) b!105988))

(assert (= (and b!105978 res!52709) b!105991))

(assert (= (or b!105978 b!105988) bm!11204))

(assert (= (and b!105979 res!52710) b!105985))

(assert (= (and b!105985 c!18477) b!105972))

(assert (= (and b!105985 (not c!18477)) b!105989))

(assert (= (and b!105972 res!52711) b!105977))

(assert (= (or b!105972 b!105989) bm!11205))

(declare-fun b_lambda!4757 () Bool)

(assert (=> (not b_lambda!4757) (not b!105987)))

(assert (=> b!105987 t!5744))

(declare-fun b_and!6553 () Bool)

(assert (= b_and!6549 (and (=> t!5744 result!3475) b_and!6553)))

(assert (=> b!105987 t!5746))

(declare-fun b_and!6555 () Bool)

(assert (= b_and!6551 (and (=> t!5746 result!3477) b_and!6555)))

(assert (=> b!105987 m!117859))

(declare-fun m!118207 () Bool)

(assert (=> b!105987 m!118207))

(assert (=> b!105987 m!118103))

(declare-fun m!118209 () Bool)

(assert (=> b!105987 m!118209))

(assert (=> b!105987 m!117859))

(declare-fun m!118211 () Bool)

(assert (=> b!105987 m!118211))

(assert (=> b!105987 m!118207))

(assert (=> b!105987 m!118103))

(declare-fun m!118213 () Bool)

(assert (=> bm!11205 m!118213))

(declare-fun m!118215 () Bool)

(assert (=> bm!11206 m!118215))

(declare-fun m!118217 () Bool)

(assert (=> b!105992 m!118217))

(assert (=> d!28931 m!117867))

(assert (=> b!105974 m!117859))

(assert (=> b!105974 m!117859))

(assert (=> b!105974 m!117861))

(declare-fun m!118219 () Bool)

(assert (=> b!105977 m!118219))

(assert (=> b!105976 m!117859))

(assert (=> b!105976 m!117859))

(assert (=> b!105976 m!117861))

(declare-fun m!118221 () Bool)

(assert (=> b!105991 m!118221))

(declare-fun m!118223 () Bool)

(assert (=> bm!11204 m!118223))

(declare-fun m!118225 () Bool)

(assert (=> bm!11201 m!118225))

(assert (=> b!105982 m!117859))

(assert (=> b!105982 m!117859))

(declare-fun m!118227 () Bool)

(assert (=> b!105982 m!118227))

(declare-fun m!118229 () Bool)

(assert (=> b!105975 m!118229))

(declare-fun m!118231 () Bool)

(assert (=> b!105975 m!118231))

(assert (=> b!105975 m!118225))

(assert (=> b!105975 m!117859))

(declare-fun m!118233 () Bool)

(assert (=> b!105975 m!118233))

(declare-fun m!118235 () Bool)

(assert (=> b!105975 m!118235))

(declare-fun m!118237 () Bool)

(assert (=> b!105975 m!118237))

(declare-fun m!118239 () Bool)

(assert (=> b!105975 m!118239))

(declare-fun m!118241 () Bool)

(assert (=> b!105975 m!118241))

(declare-fun m!118243 () Bool)

(assert (=> b!105975 m!118243))

(declare-fun m!118245 () Bool)

(assert (=> b!105975 m!118245))

(assert (=> b!105975 m!118239))

(declare-fun m!118247 () Bool)

(assert (=> b!105975 m!118247))

(declare-fun m!118249 () Bool)

(assert (=> b!105975 m!118249))

(declare-fun m!118251 () Bool)

(assert (=> b!105975 m!118251))

(assert (=> b!105975 m!118247))

(declare-fun m!118253 () Bool)

(assert (=> b!105975 m!118253))

(assert (=> b!105975 m!118243))

(declare-fun m!118255 () Bool)

(assert (=> b!105975 m!118255))

(assert (=> b!105975 m!118233))

(declare-fun m!118257 () Bool)

(assert (=> b!105975 m!118257))

(assert (=> b!105533 d!28931))

(declare-fun d!28933 () Bool)

(declare-fun e!68994 () Bool)

(assert (=> d!28933 e!68994))

(declare-fun res!52716 () Bool)

(assert (=> d!28933 (=> (not res!52716) (not e!68994))))

(assert (=> d!28933 (= res!52716 (and (bvsge (index!3225 lt!53938) #b00000000000000000000000000000000) (bvslt (index!3225 lt!53938) (size!2318 (_values!2565 newMap!16)))))))

(declare-fun lt!54241 () Unit!3250)

(declare-fun choose!669 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) (_ BitVec 64) V!3219 Int) Unit!3250)

(assert (=> d!28933 (= lt!54241 (choose!669 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3225 lt!53938) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 (defaultEntry!2582 newMap!16)))))

(assert (=> d!28933 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28933 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3225 lt!53938) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 (defaultEntry!2582 newMap!16)) lt!54241)))

(declare-fun b!105995 () Bool)

(assert (=> b!105995 (= e!68994 (= (+!146 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (getCurrentListMap!484 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))))))

(assert (= (and d!28933 res!52716) b!105995))

(assert (=> d!28933 m!117519))

(declare-fun m!118259 () Bool)

(assert (=> d!28933 m!118259))

(assert (=> d!28933 m!117867))

(assert (=> b!105995 m!117685))

(assert (=> b!105995 m!117685))

(declare-fun m!118261 () Bool)

(assert (=> b!105995 m!118261))

(assert (=> b!105995 m!117683))

(assert (=> b!105995 m!117677))

(assert (=> b!105533 d!28933))

(declare-fun d!28935 () Bool)

(declare-fun e!68996 () Bool)

(assert (=> d!28935 e!68996))

(declare-fun res!52717 () Bool)

(assert (=> d!28935 (=> res!52717 e!68996)))

(declare-fun lt!54242 () Bool)

(assert (=> d!28935 (= res!52717 (not lt!54242))))

(declare-fun lt!54245 () Bool)

(assert (=> d!28935 (= lt!54242 lt!54245)))

(declare-fun lt!54244 () Unit!3250)

(declare-fun e!68995 () Unit!3250)

(assert (=> d!28935 (= lt!54244 e!68995)))

(declare-fun c!18481 () Bool)

(assert (=> d!28935 (= c!18481 lt!54245)))

(assert (=> d!28935 (= lt!54245 (containsKey!159 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!28935 (= (contains!829 call!11137 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) lt!54242)))

(declare-fun b!105996 () Bool)

(declare-fun lt!54243 () Unit!3250)

(assert (=> b!105996 (= e!68995 lt!54243)))

(assert (=> b!105996 (= lt!54243 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> b!105996 (isDefined!109 (getValueByKey!155 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!105997 () Bool)

(declare-fun Unit!3270 () Unit!3250)

(assert (=> b!105997 (= e!68995 Unit!3270)))

(declare-fun b!105998 () Bool)

(assert (=> b!105998 (= e!68996 (isDefined!109 (getValueByKey!155 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (= (and d!28935 c!18481) b!105996))

(assert (= (and d!28935 (not c!18481)) b!105997))

(assert (= (and d!28935 (not res!52717)) b!105998))

(assert (=> d!28935 m!117519))

(declare-fun m!118263 () Bool)

(assert (=> d!28935 m!118263))

(assert (=> b!105996 m!117519))

(declare-fun m!118265 () Bool)

(assert (=> b!105996 m!118265))

(assert (=> b!105996 m!117519))

(declare-fun m!118267 () Bool)

(assert (=> b!105996 m!118267))

(assert (=> b!105996 m!118267))

(declare-fun m!118269 () Bool)

(assert (=> b!105996 m!118269))

(assert (=> b!105998 m!117519))

(assert (=> b!105998 m!118267))

(assert (=> b!105998 m!118267))

(assert (=> b!105998 m!118269))

(assert (=> b!105533 d!28935))

(assert (=> b!105611 d!28831))

(declare-fun d!28937 () Bool)

(declare-fun e!68997 () Bool)

(assert (=> d!28937 e!68997))

(declare-fun res!52719 () Bool)

(assert (=> d!28937 (=> (not res!52719) (not e!68997))))

(declare-fun lt!54248 () ListLongMap!1585)

(assert (=> d!28937 (= res!52719 (contains!829 lt!54248 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54247 () List!1642)

(assert (=> d!28937 (= lt!54248 (ListLongMap!1586 lt!54247))))

(declare-fun lt!54249 () Unit!3250)

(declare-fun lt!54246 () Unit!3250)

(assert (=> d!28937 (= lt!54249 lt!54246)))

(assert (=> d!28937 (= (getValueByKey!155 lt!54247 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28937 (= lt!54246 (lemmaContainsTupThenGetReturnValue!73 lt!54247 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28937 (= lt!54247 (insertStrictlySorted!75 (toList!808 call!11166) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28937 (= (+!146 call!11166 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54248)))

(declare-fun b!105999 () Bool)

(declare-fun res!52718 () Bool)

(assert (=> b!105999 (=> (not res!52718) (not e!68997))))

(assert (=> b!105999 (= res!52718 (= (getValueByKey!155 (toList!808 lt!54248) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!106000 () Bool)

(assert (=> b!106000 (= e!68997 (contains!830 (toList!808 lt!54248) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!28937 res!52719) b!105999))

(assert (= (and b!105999 res!52718) b!106000))

(declare-fun m!118271 () Bool)

(assert (=> d!28937 m!118271))

(declare-fun m!118273 () Bool)

(assert (=> d!28937 m!118273))

(declare-fun m!118275 () Bool)

(assert (=> d!28937 m!118275))

(declare-fun m!118277 () Bool)

(assert (=> d!28937 m!118277))

(declare-fun m!118279 () Bool)

(assert (=> b!105999 m!118279))

(declare-fun m!118281 () Bool)

(assert (=> b!106000 m!118281))

(assert (=> b!105629 d!28937))

(declare-fun b!106001 () Bool)

(declare-fun e!69006 () Bool)

(declare-fun e!69009 () Bool)

(assert (=> b!106001 (= e!69006 e!69009)))

(declare-fun res!52726 () Bool)

(declare-fun call!11217 () Bool)

(assert (=> b!106001 (= res!52726 call!11217)))

(assert (=> b!106001 (=> (not res!52726) (not e!69009))))

(declare-fun bm!11208 () Bool)

(declare-fun call!11211 () ListLongMap!1585)

(assert (=> bm!11208 (= call!11211 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949) (mask!6728 newMap!16) (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bm!11209 () Bool)

(declare-fun call!11215 () ListLongMap!1585)

(assert (=> bm!11209 (= call!11215 call!11211)))

(declare-fun b!106003 () Bool)

(declare-fun e!69001 () Bool)

(assert (=> b!106003 (= e!69001 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11210 () Bool)

(declare-fun call!11214 () ListLongMap!1585)

(declare-fun call!11216 () ListLongMap!1585)

(assert (=> bm!11210 (= call!11214 call!11216)))

(declare-fun b!106004 () Bool)

(declare-fun e!69004 () Unit!3250)

(declare-fun lt!54255 () Unit!3250)

(assert (=> b!106004 (= e!69004 lt!54255)))

(declare-fun lt!54268 () ListLongMap!1585)

(assert (=> b!106004 (= lt!54268 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949) (mask!6728 newMap!16) (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54264 () (_ BitVec 64))

(assert (=> b!106004 (= lt!54264 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54267 () (_ BitVec 64))

(assert (=> b!106004 (= lt!54267 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54251 () Unit!3250)

(assert (=> b!106004 (= lt!54251 (addStillContains!74 lt!54268 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) lt!54267))))

(assert (=> b!106004 (contains!829 (+!146 lt!54268 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) lt!54267)))

(declare-fun lt!54250 () Unit!3250)

(assert (=> b!106004 (= lt!54250 lt!54251)))

(declare-fun lt!54260 () ListLongMap!1585)

(assert (=> b!106004 (= lt!54260 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949) (mask!6728 newMap!16) (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54252 () (_ BitVec 64))

(assert (=> b!106004 (= lt!54252 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54258 () (_ BitVec 64))

(assert (=> b!106004 (= lt!54258 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54256 () Unit!3250)

(assert (=> b!106004 (= lt!54256 (addApplyDifferent!74 lt!54260 lt!54252 (minValue!2457 newMap!16) lt!54258))))

(assert (=> b!106004 (= (apply!98 (+!146 lt!54260 (tuple2!2411 lt!54252 (minValue!2457 newMap!16))) lt!54258) (apply!98 lt!54260 lt!54258))))

(declare-fun lt!54266 () Unit!3250)

(assert (=> b!106004 (= lt!54266 lt!54256)))

(declare-fun lt!54263 () ListLongMap!1585)

(assert (=> b!106004 (= lt!54263 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949) (mask!6728 newMap!16) (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54261 () (_ BitVec 64))

(assert (=> b!106004 (= lt!54261 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54270 () (_ BitVec 64))

(assert (=> b!106004 (= lt!54270 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54271 () Unit!3250)

(assert (=> b!106004 (= lt!54271 (addApplyDifferent!74 lt!54263 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) lt!54270))))

(assert (=> b!106004 (= (apply!98 (+!146 lt!54263 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) lt!54270) (apply!98 lt!54263 lt!54270))))

(declare-fun lt!54257 () Unit!3250)

(assert (=> b!106004 (= lt!54257 lt!54271)))

(declare-fun lt!54259 () ListLongMap!1585)

(assert (=> b!106004 (= lt!54259 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949) (mask!6728 newMap!16) (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54269 () (_ BitVec 64))

(assert (=> b!106004 (= lt!54269 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54254 () (_ BitVec 64))

(assert (=> b!106004 (= lt!54254 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106004 (= lt!54255 (addApplyDifferent!74 lt!54259 lt!54269 (minValue!2457 newMap!16) lt!54254))))

(assert (=> b!106004 (= (apply!98 (+!146 lt!54259 (tuple2!2411 lt!54269 (minValue!2457 newMap!16))) lt!54254) (apply!98 lt!54259 lt!54254))))

(declare-fun b!106005 () Bool)

(declare-fun e!69005 () Bool)

(assert (=> b!106005 (= e!69005 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106006 () Bool)

(declare-fun lt!54262 () ListLongMap!1585)

(assert (=> b!106006 (= e!69009 (= (apply!98 lt!54262 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!106007 () Bool)

(declare-fun e!69008 () Bool)

(declare-fun e!69002 () Bool)

(assert (=> b!106007 (= e!69008 e!69002)))

(declare-fun res!52724 () Bool)

(declare-fun call!11213 () Bool)

(assert (=> b!106007 (= res!52724 call!11213)))

(assert (=> b!106007 (=> (not res!52724) (not e!69002))))

(declare-fun b!106008 () Bool)

(declare-fun res!52725 () Bool)

(declare-fun e!69010 () Bool)

(assert (=> b!106008 (=> (not res!52725) (not e!69010))))

(assert (=> b!106008 (= res!52725 e!69008)))

(declare-fun c!18487 () Bool)

(assert (=> b!106008 (= c!18487 (not (= (bvand (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106009 () Bool)

(declare-fun c!18483 () Bool)

(assert (=> b!106009 (= c!18483 (and (not (= (bvand (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68999 () ListLongMap!1585)

(declare-fun e!69007 () ListLongMap!1585)

(assert (=> b!106009 (= e!68999 e!69007)))

(declare-fun b!106010 () Bool)

(declare-fun res!52722 () Bool)

(assert (=> b!106010 (=> (not res!52722) (not e!69010))))

(declare-fun e!69000 () Bool)

(assert (=> b!106010 (= res!52722 e!69000)))

(declare-fun res!52728 () Bool)

(assert (=> b!106010 (=> res!52728 e!69000)))

(assert (=> b!106010 (= res!52728 (not e!69005))))

(declare-fun res!52723 () Bool)

(assert (=> b!106010 (=> (not res!52723) (not e!69005))))

(assert (=> b!106010 (= res!52723 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106011 () Bool)

(declare-fun e!69003 () Bool)

(assert (=> b!106011 (= e!69000 e!69003)))

(declare-fun res!52721 () Bool)

(assert (=> b!106011 (=> (not res!52721) (not e!69003))))

(assert (=> b!106011 (= res!52721 (contains!829 lt!54262 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106011 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106012 () Bool)

(assert (=> b!106012 (= e!69007 call!11214)))

(declare-fun bm!11211 () Bool)

(assert (=> bm!11211 (= call!11213 (contains!829 lt!54262 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!28939 () Bool)

(assert (=> d!28939 e!69010))

(declare-fun res!52727 () Bool)

(assert (=> d!28939 (=> (not res!52727) (not e!69010))))

(assert (=> d!28939 (= res!52727 (or (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))))

(declare-fun lt!54253 () ListLongMap!1585)

(assert (=> d!28939 (= lt!54262 lt!54253)))

(declare-fun lt!54265 () Unit!3250)

(assert (=> d!28939 (= lt!54265 e!69004)))

(declare-fun c!18485 () Bool)

(assert (=> d!28939 (= c!18485 e!69001)))

(declare-fun res!52720 () Bool)

(assert (=> d!28939 (=> (not res!52720) (not e!69001))))

(assert (=> d!28939 (= res!52720 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun e!68998 () ListLongMap!1585)

(assert (=> d!28939 (= lt!54253 e!68998)))

(declare-fun c!18486 () Bool)

(assert (=> d!28939 (= c!18486 (and (not (= (bvand (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28939 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28939 (= (getCurrentListMap!484 (_keys!4288 newMap!16) (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949) (mask!6728 newMap!16) (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54262)))

(declare-fun b!106002 () Bool)

(declare-fun Unit!3271 () Unit!3250)

(assert (=> b!106002 (= e!69004 Unit!3271)))

(declare-fun b!106013 () Bool)

(assert (=> b!106013 (= e!68998 e!68999)))

(declare-fun c!18482 () Bool)

(assert (=> b!106013 (= c!18482 (and (not (= (bvand (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106014 () Bool)

(assert (=> b!106014 (= e!69010 e!69006)))

(declare-fun c!18484 () Bool)

(assert (=> b!106014 (= c!18484 (not (= (bvand (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11212 () Bool)

(assert (=> bm!11212 (= call!11217 (contains!829 lt!54262 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106015 () Bool)

(assert (=> b!106015 (= e!68999 call!11214)))

(declare-fun bm!11213 () Bool)

(declare-fun call!11212 () ListLongMap!1585)

(assert (=> bm!11213 (= call!11216 (+!146 (ite c!18486 call!11211 (ite c!18482 call!11215 call!11212)) (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!106016 () Bool)

(assert (=> b!106016 (= e!69003 (= (apply!98 lt!54262 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106016 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949))))))

(assert (=> b!106016 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106017 () Bool)

(assert (=> b!106017 (= e!69008 (not call!11213))))

(declare-fun b!106018 () Bool)

(assert (=> b!106018 (= e!69006 (not call!11217))))

(declare-fun b!106019 () Bool)

(assert (=> b!106019 (= e!69007 call!11212)))

(declare-fun bm!11214 () Bool)

(assert (=> bm!11214 (= call!11212 call!11215)))

(declare-fun b!106020 () Bool)

(assert (=> b!106020 (= e!69002 (= (apply!98 lt!54262 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))))

(declare-fun b!106021 () Bool)

(assert (=> b!106021 (= e!68998 (+!146 call!11216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!28939 c!18486) b!106021))

(assert (= (and d!28939 (not c!18486)) b!106013))

(assert (= (and b!106013 c!18482) b!106015))

(assert (= (and b!106013 (not c!18482)) b!106009))

(assert (= (and b!106009 c!18483) b!106012))

(assert (= (and b!106009 (not c!18483)) b!106019))

(assert (= (or b!106012 b!106019) bm!11214))

(assert (= (or b!106015 bm!11214) bm!11209))

(assert (= (or b!106015 b!106012) bm!11210))

(assert (= (or b!106021 bm!11209) bm!11208))

(assert (= (or b!106021 bm!11210) bm!11213))

(assert (= (and d!28939 res!52720) b!106003))

(assert (= (and d!28939 c!18485) b!106004))

(assert (= (and d!28939 (not c!18485)) b!106002))

(assert (= (and d!28939 res!52727) b!106010))

(assert (= (and b!106010 res!52723) b!106005))

(assert (= (and b!106010 (not res!52728)) b!106011))

(assert (= (and b!106011 res!52721) b!106016))

(assert (= (and b!106010 res!52722) b!106008))

(assert (= (and b!106008 c!18487) b!106007))

(assert (= (and b!106008 (not c!18487)) b!106017))

(assert (= (and b!106007 res!52724) b!106020))

(assert (= (or b!106007 b!106017) bm!11211))

(assert (= (and b!106008 res!52725) b!106014))

(assert (= (and b!106014 c!18484) b!106001))

(assert (= (and b!106014 (not c!18484)) b!106018))

(assert (= (and b!106001 res!52726) b!106006))

(assert (= (or b!106001 b!106018) bm!11212))

(declare-fun b_lambda!4759 () Bool)

(assert (=> (not b_lambda!4759) (not b!106016)))

(assert (=> b!106016 t!5744))

(declare-fun b_and!6557 () Bool)

(assert (= b_and!6553 (and (=> t!5744 result!3475) b_and!6557)))

(assert (=> b!106016 t!5746))

(declare-fun b_and!6559 () Bool)

(assert (= b_and!6555 (and (=> t!5746 result!3477) b_and!6559)))

(assert (=> b!106016 m!117859))

(declare-fun m!118283 () Bool)

(assert (=> b!106016 m!118283))

(assert (=> b!106016 m!118103))

(declare-fun m!118285 () Bool)

(assert (=> b!106016 m!118285))

(assert (=> b!106016 m!117859))

(declare-fun m!118287 () Bool)

(assert (=> b!106016 m!118287))

(assert (=> b!106016 m!118283))

(assert (=> b!106016 m!118103))

(declare-fun m!118289 () Bool)

(assert (=> bm!11212 m!118289))

(declare-fun m!118291 () Bool)

(assert (=> bm!11213 m!118291))

(declare-fun m!118293 () Bool)

(assert (=> b!106021 m!118293))

(assert (=> d!28939 m!117867))

(assert (=> b!106003 m!117859))

(assert (=> b!106003 m!117859))

(assert (=> b!106003 m!117861))

(declare-fun m!118295 () Bool)

(assert (=> b!106006 m!118295))

(assert (=> b!106005 m!117859))

(assert (=> b!106005 m!117859))

(assert (=> b!106005 m!117861))

(declare-fun m!118297 () Bool)

(assert (=> b!106020 m!118297))

(declare-fun m!118299 () Bool)

(assert (=> bm!11211 m!118299))

(declare-fun m!118301 () Bool)

(assert (=> bm!11208 m!118301))

(assert (=> b!106011 m!117859))

(assert (=> b!106011 m!117859))

(declare-fun m!118303 () Bool)

(assert (=> b!106011 m!118303))

(declare-fun m!118305 () Bool)

(assert (=> b!106004 m!118305))

(declare-fun m!118307 () Bool)

(assert (=> b!106004 m!118307))

(assert (=> b!106004 m!118301))

(assert (=> b!106004 m!117859))

(declare-fun m!118309 () Bool)

(assert (=> b!106004 m!118309))

(declare-fun m!118311 () Bool)

(assert (=> b!106004 m!118311))

(declare-fun m!118313 () Bool)

(assert (=> b!106004 m!118313))

(declare-fun m!118315 () Bool)

(assert (=> b!106004 m!118315))

(declare-fun m!118317 () Bool)

(assert (=> b!106004 m!118317))

(declare-fun m!118319 () Bool)

(assert (=> b!106004 m!118319))

(declare-fun m!118321 () Bool)

(assert (=> b!106004 m!118321))

(assert (=> b!106004 m!118315))

(declare-fun m!118323 () Bool)

(assert (=> b!106004 m!118323))

(declare-fun m!118325 () Bool)

(assert (=> b!106004 m!118325))

(declare-fun m!118327 () Bool)

(assert (=> b!106004 m!118327))

(assert (=> b!106004 m!118323))

(declare-fun m!118329 () Bool)

(assert (=> b!106004 m!118329))

(assert (=> b!106004 m!118319))

(declare-fun m!118331 () Bool)

(assert (=> b!106004 m!118331))

(assert (=> b!106004 m!118309))

(declare-fun m!118333 () Bool)

(assert (=> b!106004 m!118333))

(assert (=> bm!11122 d!28939))

(declare-fun d!28941 () Bool)

(assert (=> d!28941 (= (apply!98 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54003) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54003)))))

(declare-fun bs!4343 () Bool)

(assert (= bs!4343 d!28941))

(declare-fun m!118335 () Bool)

(assert (=> bs!4343 m!118335))

(assert (=> bs!4343 m!118335))

(declare-fun m!118337 () Bool)

(assert (=> bs!4343 m!118337))

(assert (=> b!105612 d!28941))

(declare-fun d!28943 () Bool)

(assert (=> d!28943 (= (apply!98 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54019) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54019)))))

(declare-fun bs!4344 () Bool)

(assert (= bs!4344 d!28943))

(declare-fun m!118339 () Bool)

(assert (=> bs!4344 m!118339))

(assert (=> bs!4344 m!118339))

(declare-fun m!118341 () Bool)

(assert (=> bs!4344 m!118341))

(assert (=> b!105612 d!28943))

(declare-fun d!28945 () Bool)

(declare-fun e!69012 () Bool)

(assert (=> d!28945 e!69012))

(declare-fun res!52729 () Bool)

(assert (=> d!28945 (=> res!52729 e!69012)))

(declare-fun lt!54272 () Bool)

(assert (=> d!28945 (= res!52729 (not lt!54272))))

(declare-fun lt!54275 () Bool)

(assert (=> d!28945 (= lt!54272 lt!54275)))

(declare-fun lt!54274 () Unit!3250)

(declare-fun e!69011 () Unit!3250)

(assert (=> d!28945 (= lt!54274 e!69011)))

(declare-fun c!18488 () Bool)

(assert (=> d!28945 (= c!18488 lt!54275)))

(assert (=> d!28945 (= lt!54275 (containsKey!159 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016))))

(assert (=> d!28945 (= (contains!829 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54016) lt!54272)))

(declare-fun b!106022 () Bool)

(declare-fun lt!54273 () Unit!3250)

(assert (=> b!106022 (= e!69011 lt!54273)))

(assert (=> b!106022 (= lt!54273 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016))))

(assert (=> b!106022 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016))))

(declare-fun b!106023 () Bool)

(declare-fun Unit!3272 () Unit!3250)

(assert (=> b!106023 (= e!69011 Unit!3272)))

(declare-fun b!106024 () Bool)

(assert (=> b!106024 (= e!69012 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016)))))

(assert (= (and d!28945 c!18488) b!106022))

(assert (= (and d!28945 (not c!18488)) b!106023))

(assert (= (and d!28945 (not res!52729)) b!106024))

(declare-fun m!118343 () Bool)

(assert (=> d!28945 m!118343))

(declare-fun m!118345 () Bool)

(assert (=> b!106022 m!118345))

(declare-fun m!118347 () Bool)

(assert (=> b!106022 m!118347))

(assert (=> b!106022 m!118347))

(declare-fun m!118349 () Bool)

(assert (=> b!106022 m!118349))

(assert (=> b!106024 m!118347))

(assert (=> b!106024 m!118347))

(assert (=> b!106024 m!118349))

(assert (=> b!105612 d!28945))

(declare-fun d!28947 () Bool)

(assert (=> d!28947 (= (apply!98 lt!54012 lt!54019) (get!1342 (getValueByKey!155 (toList!808 lt!54012) lt!54019)))))

(declare-fun bs!4345 () Bool)

(assert (= bs!4345 d!28947))

(declare-fun m!118351 () Bool)

(assert (=> bs!4345 m!118351))

(assert (=> bs!4345 m!118351))

(declare-fun m!118353 () Bool)

(assert (=> bs!4345 m!118353))

(assert (=> b!105612 d!28947))

(declare-fun d!28949 () Bool)

(assert (=> d!28949 (= (apply!98 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54007) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54007)))))

(declare-fun bs!4346 () Bool)

(assert (= bs!4346 d!28949))

(declare-fun m!118355 () Bool)

(assert (=> bs!4346 m!118355))

(assert (=> bs!4346 m!118355))

(declare-fun m!118357 () Bool)

(assert (=> bs!4346 m!118357))

(assert (=> b!105612 d!28949))

(declare-fun d!28951 () Bool)

(assert (=> d!28951 (= (apply!98 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54007) (apply!98 lt!54009 lt!54007))))

(declare-fun lt!54278 () Unit!3250)

(declare-fun choose!670 (ListLongMap!1585 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3250)

(assert (=> d!28951 (= lt!54278 (choose!670 lt!54009 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54007))))

(declare-fun e!69015 () Bool)

(assert (=> d!28951 e!69015))

(declare-fun res!52732 () Bool)

(assert (=> d!28951 (=> (not res!52732) (not e!69015))))

(assert (=> d!28951 (= res!52732 (contains!829 lt!54009 lt!54007))))

(assert (=> d!28951 (= (addApplyDifferent!74 lt!54009 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54007) lt!54278)))

(declare-fun b!106028 () Bool)

(assert (=> b!106028 (= e!69015 (not (= lt!54007 lt!54001)))))

(assert (= (and d!28951 res!52732) b!106028))

(declare-fun m!118359 () Bool)

(assert (=> d!28951 m!118359))

(assert (=> d!28951 m!117715))

(assert (=> d!28951 m!117717))

(assert (=> d!28951 m!117715))

(assert (=> d!28951 m!117711))

(declare-fun m!118361 () Bool)

(assert (=> d!28951 m!118361))

(assert (=> b!105612 d!28951))

(declare-fun d!28953 () Bool)

(declare-fun e!69016 () Bool)

(assert (=> d!28953 e!69016))

(declare-fun res!52734 () Bool)

(assert (=> d!28953 (=> (not res!52734) (not e!69016))))

(declare-fun lt!54281 () ListLongMap!1585)

(assert (=> d!28953 (= res!52734 (contains!829 lt!54281 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54280 () List!1642)

(assert (=> d!28953 (= lt!54281 (ListLongMap!1586 lt!54280))))

(declare-fun lt!54282 () Unit!3250)

(declare-fun lt!54279 () Unit!3250)

(assert (=> d!28953 (= lt!54282 lt!54279)))

(assert (=> d!28953 (= (getValueByKey!155 lt!54280 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28953 (= lt!54279 (lemmaContainsTupThenGetReturnValue!73 lt!54280 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28953 (= lt!54280 (insertStrictlySorted!75 (toList!808 lt!54009) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28953 (= (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54281)))

(declare-fun b!106029 () Bool)

(declare-fun res!52733 () Bool)

(assert (=> b!106029 (=> (not res!52733) (not e!69016))))

(assert (=> b!106029 (= res!52733 (= (getValueByKey!155 (toList!808 lt!54281) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!106030 () Bool)

(assert (=> b!106030 (= e!69016 (contains!830 (toList!808 lt!54281) (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!28953 res!52734) b!106029))

(assert (= (and b!106029 res!52733) b!106030))

(declare-fun m!118363 () Bool)

(assert (=> d!28953 m!118363))

(declare-fun m!118365 () Bool)

(assert (=> d!28953 m!118365))

(declare-fun m!118367 () Bool)

(assert (=> d!28953 m!118367))

(declare-fun m!118369 () Bool)

(assert (=> d!28953 m!118369))

(declare-fun m!118371 () Bool)

(assert (=> b!106029 m!118371))

(declare-fun m!118373 () Bool)

(assert (=> b!106030 m!118373))

(assert (=> b!105612 d!28953))

(declare-fun d!28955 () Bool)

(assert (=> d!28955 (= (apply!98 lt!54009 lt!54007) (get!1342 (getValueByKey!155 (toList!808 lt!54009) lt!54007)))))

(declare-fun bs!4347 () Bool)

(assert (= bs!4347 d!28955))

(declare-fun m!118375 () Bool)

(assert (=> bs!4347 m!118375))

(assert (=> bs!4347 m!118375))

(declare-fun m!118377 () Bool)

(assert (=> bs!4347 m!118377))

(assert (=> b!105612 d!28955))

(declare-fun d!28957 () Bool)

(assert (=> d!28957 (= (apply!98 lt!54008 lt!54003) (get!1342 (getValueByKey!155 (toList!808 lt!54008) lt!54003)))))

(declare-fun bs!4348 () Bool)

(assert (= bs!4348 d!28957))

(declare-fun m!118379 () Bool)

(assert (=> bs!4348 m!118379))

(assert (=> bs!4348 m!118379))

(declare-fun m!118381 () Bool)

(assert (=> bs!4348 m!118381))

(assert (=> b!105612 d!28957))

(declare-fun d!28959 () Bool)

(declare-fun e!69017 () Bool)

(assert (=> d!28959 e!69017))

(declare-fun res!52736 () Bool)

(assert (=> d!28959 (=> (not res!52736) (not e!69017))))

(declare-fun lt!54285 () ListLongMap!1585)

(assert (=> d!28959 (= res!52736 (contains!829 lt!54285 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54284 () List!1642)

(assert (=> d!28959 (= lt!54285 (ListLongMap!1586 lt!54284))))

(declare-fun lt!54286 () Unit!3250)

(declare-fun lt!54283 () Unit!3250)

(assert (=> d!28959 (= lt!54286 lt!54283)))

(assert (=> d!28959 (= (getValueByKey!155 lt!54284 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28959 (= lt!54283 (lemmaContainsTupThenGetReturnValue!73 lt!54284 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28959 (= lt!54284 (insertStrictlySorted!75 (toList!808 lt!54012) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28959 (= (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54285)))

(declare-fun b!106031 () Bool)

(declare-fun res!52735 () Bool)

(assert (=> b!106031 (=> (not res!52735) (not e!69017))))

(assert (=> b!106031 (= res!52735 (= (getValueByKey!155 (toList!808 lt!54285) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!106032 () Bool)

(assert (=> b!106032 (= e!69017 (contains!830 (toList!808 lt!54285) (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!28959 res!52736) b!106031))

(assert (= (and b!106031 res!52735) b!106032))

(declare-fun m!118383 () Bool)

(assert (=> d!28959 m!118383))

(declare-fun m!118385 () Bool)

(assert (=> d!28959 m!118385))

(declare-fun m!118387 () Bool)

(assert (=> d!28959 m!118387))

(declare-fun m!118389 () Bool)

(assert (=> d!28959 m!118389))

(declare-fun m!118391 () Bool)

(assert (=> b!106031 m!118391))

(declare-fun m!118393 () Bool)

(assert (=> b!106032 m!118393))

(assert (=> b!105612 d!28959))

(declare-fun d!28961 () Bool)

(assert (=> d!28961 (= (apply!98 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54003) (apply!98 lt!54008 lt!54003))))

(declare-fun lt!54287 () Unit!3250)

(assert (=> d!28961 (= lt!54287 (choose!670 lt!54008 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54003))))

(declare-fun e!69018 () Bool)

(assert (=> d!28961 e!69018))

(declare-fun res!52737 () Bool)

(assert (=> d!28961 (=> (not res!52737) (not e!69018))))

(assert (=> d!28961 (= res!52737 (contains!829 lt!54008 lt!54003))))

(assert (=> d!28961 (= (addApplyDifferent!74 lt!54008 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54003) lt!54287)))

(declare-fun b!106033 () Bool)

(assert (=> b!106033 (= e!69018 (not (= lt!54003 lt!54018)))))

(assert (= (and d!28961 res!52737) b!106033))

(declare-fun m!118395 () Bool)

(assert (=> d!28961 m!118395))

(assert (=> d!28961 m!117721))

(assert (=> d!28961 m!117723))

(assert (=> d!28961 m!117721))

(assert (=> d!28961 m!117733))

(declare-fun m!118397 () Bool)

(assert (=> d!28961 m!118397))

(assert (=> b!105612 d!28961))

(declare-fun d!28963 () Bool)

(assert (=> d!28963 (= (apply!98 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54019) (apply!98 lt!54012 lt!54019))))

(declare-fun lt!54288 () Unit!3250)

(assert (=> d!28963 (= lt!54288 (choose!670 lt!54012 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54019))))

(declare-fun e!69019 () Bool)

(assert (=> d!28963 e!69019))

(declare-fun res!52738 () Bool)

(assert (=> d!28963 (=> (not res!52738) (not e!69019))))

(assert (=> d!28963 (= res!52738 (contains!829 lt!54012 lt!54019))))

(assert (=> d!28963 (= (addApplyDifferent!74 lt!54012 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54019) lt!54288)))

(declare-fun b!106034 () Bool)

(assert (=> b!106034 (= e!69019 (not (= lt!54019 lt!54010)))))

(assert (= (and d!28963 res!52738) b!106034))

(declare-fun m!118399 () Bool)

(assert (=> d!28963 m!118399))

(assert (=> d!28963 m!117725))

(assert (=> d!28963 m!117737))

(assert (=> d!28963 m!117725))

(assert (=> d!28963 m!117727))

(declare-fun m!118401 () Bool)

(assert (=> d!28963 m!118401))

(assert (=> b!105612 d!28963))

(declare-fun d!28965 () Bool)

(declare-fun e!69020 () Bool)

(assert (=> d!28965 e!69020))

(declare-fun res!52740 () Bool)

(assert (=> d!28965 (=> (not res!52740) (not e!69020))))

(declare-fun lt!54291 () ListLongMap!1585)

(assert (=> d!28965 (= res!52740 (contains!829 lt!54291 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54290 () List!1642)

(assert (=> d!28965 (= lt!54291 (ListLongMap!1586 lt!54290))))

(declare-fun lt!54292 () Unit!3250)

(declare-fun lt!54289 () Unit!3250)

(assert (=> d!28965 (= lt!54292 lt!54289)))

(assert (=> d!28965 (= (getValueByKey!155 lt!54290 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28965 (= lt!54289 (lemmaContainsTupThenGetReturnValue!73 lt!54290 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28965 (= lt!54290 (insertStrictlySorted!75 (toList!808 lt!54008) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28965 (= (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54291)))

(declare-fun b!106035 () Bool)

(declare-fun res!52739 () Bool)

(assert (=> b!106035 (=> (not res!52739) (not e!69020))))

(assert (=> b!106035 (= res!52739 (= (getValueByKey!155 (toList!808 lt!54291) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!106036 () Bool)

(assert (=> b!106036 (= e!69020 (contains!830 (toList!808 lt!54291) (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!28965 res!52740) b!106035))

(assert (= (and b!106035 res!52739) b!106036))

(declare-fun m!118403 () Bool)

(assert (=> d!28965 m!118403))

(declare-fun m!118405 () Bool)

(assert (=> d!28965 m!118405))

(declare-fun m!118407 () Bool)

(assert (=> d!28965 m!118407))

(declare-fun m!118409 () Bool)

(assert (=> d!28965 m!118409))

(declare-fun m!118411 () Bool)

(assert (=> b!106035 m!118411))

(declare-fun m!118413 () Bool)

(assert (=> b!106036 m!118413))

(assert (=> b!105612 d!28965))

(assert (=> b!105612 d!28801))

(declare-fun d!28967 () Bool)

(assert (=> d!28967 (contains!829 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54016)))

(declare-fun lt!54295 () Unit!3250)

(declare-fun choose!671 (ListLongMap!1585 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3250)

(assert (=> d!28967 (= lt!54295 (choose!671 lt!54017 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54016))))

(assert (=> d!28967 (contains!829 lt!54017 lt!54016)))

(assert (=> d!28967 (= (addStillContains!74 lt!54017 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54016) lt!54295)))

(declare-fun bs!4349 () Bool)

(assert (= bs!4349 d!28967))

(assert (=> bs!4349 m!117729))

(assert (=> bs!4349 m!117729))

(assert (=> bs!4349 m!117731))

(declare-fun m!118415 () Bool)

(assert (=> bs!4349 m!118415))

(declare-fun m!118417 () Bool)

(assert (=> bs!4349 m!118417))

(assert (=> b!105612 d!28967))

(declare-fun d!28969 () Bool)

(declare-fun e!69021 () Bool)

(assert (=> d!28969 e!69021))

(declare-fun res!52742 () Bool)

(assert (=> d!28969 (=> (not res!52742) (not e!69021))))

(declare-fun lt!54298 () ListLongMap!1585)

(assert (=> d!28969 (= res!52742 (contains!829 lt!54298 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54297 () List!1642)

(assert (=> d!28969 (= lt!54298 (ListLongMap!1586 lt!54297))))

(declare-fun lt!54299 () Unit!3250)

(declare-fun lt!54296 () Unit!3250)

(assert (=> d!28969 (= lt!54299 lt!54296)))

(assert (=> d!28969 (= (getValueByKey!155 lt!54297 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28969 (= lt!54296 (lemmaContainsTupThenGetReturnValue!73 lt!54297 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28969 (= lt!54297 (insertStrictlySorted!75 (toList!808 lt!54017) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!28969 (= (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54298)))

(declare-fun b!106038 () Bool)

(declare-fun res!52741 () Bool)

(assert (=> b!106038 (=> (not res!52741) (not e!69021))))

(assert (=> b!106038 (= res!52741 (= (getValueByKey!155 (toList!808 lt!54298) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!106039 () Bool)

(assert (=> b!106039 (= e!69021 (contains!830 (toList!808 lt!54298) (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!28969 res!52742) b!106038))

(assert (= (and b!106038 res!52741) b!106039))

(declare-fun m!118419 () Bool)

(assert (=> d!28969 m!118419))

(declare-fun m!118421 () Bool)

(assert (=> d!28969 m!118421))

(declare-fun m!118423 () Bool)

(assert (=> d!28969 m!118423))

(declare-fun m!118425 () Bool)

(assert (=> d!28969 m!118425))

(declare-fun m!118427 () Bool)

(assert (=> b!106038 m!118427))

(declare-fun m!118429 () Bool)

(assert (=> b!106039 m!118429))

(assert (=> b!105612 d!28969))

(declare-fun d!28971 () Bool)

(declare-fun e!69023 () Bool)

(assert (=> d!28971 e!69023))

(declare-fun res!52743 () Bool)

(assert (=> d!28971 (=> res!52743 e!69023)))

(declare-fun lt!54300 () Bool)

(assert (=> d!28971 (= res!52743 (not lt!54300))))

(declare-fun lt!54303 () Bool)

(assert (=> d!28971 (= lt!54300 lt!54303)))

(declare-fun lt!54302 () Unit!3250)

(declare-fun e!69022 () Unit!3250)

(assert (=> d!28971 (= lt!54302 e!69022)))

(declare-fun c!18489 () Bool)

(assert (=> d!28971 (= c!18489 lt!54303)))

(assert (=> d!28971 (= lt!54303 (containsKey!159 (toList!808 lt!54063) (_1!1215 lt!53818)))))

(assert (=> d!28971 (= (contains!829 lt!54063 (_1!1215 lt!53818)) lt!54300)))

(declare-fun b!106040 () Bool)

(declare-fun lt!54301 () Unit!3250)

(assert (=> b!106040 (= e!69022 lt!54301)))

(assert (=> b!106040 (= lt!54301 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54063) (_1!1215 lt!53818)))))

(assert (=> b!106040 (isDefined!109 (getValueByKey!155 (toList!808 lt!54063) (_1!1215 lt!53818)))))

(declare-fun b!106041 () Bool)

(declare-fun Unit!3273 () Unit!3250)

(assert (=> b!106041 (= e!69022 Unit!3273)))

(declare-fun b!106042 () Bool)

(assert (=> b!106042 (= e!69023 (isDefined!109 (getValueByKey!155 (toList!808 lt!54063) (_1!1215 lt!53818))))))

(assert (= (and d!28971 c!18489) b!106040))

(assert (= (and d!28971 (not c!18489)) b!106041))

(assert (= (and d!28971 (not res!52743)) b!106042))

(declare-fun m!118431 () Bool)

(assert (=> d!28971 m!118431))

(declare-fun m!118433 () Bool)

(assert (=> b!106040 m!118433))

(assert (=> b!106040 m!117803))

(assert (=> b!106040 m!117803))

(declare-fun m!118435 () Bool)

(assert (=> b!106040 m!118435))

(assert (=> b!106042 m!117803))

(assert (=> b!106042 m!117803))

(assert (=> b!106042 m!118435))

(assert (=> d!28803 d!28971))

(declare-fun b!106044 () Bool)

(declare-fun e!69024 () Option!161)

(declare-fun e!69025 () Option!161)

(assert (=> b!106044 (= e!69024 e!69025)))

(declare-fun c!18491 () Bool)

(assert (=> b!106044 (= c!18491 (and ((_ is Cons!1638) lt!54062) (not (= (_1!1215 (h!2235 lt!54062)) (_1!1215 lt!53818)))))))

(declare-fun d!28973 () Bool)

(declare-fun c!18490 () Bool)

(assert (=> d!28973 (= c!18490 (and ((_ is Cons!1638) lt!54062) (= (_1!1215 (h!2235 lt!54062)) (_1!1215 lt!53818))))))

(assert (=> d!28973 (= (getValueByKey!155 lt!54062 (_1!1215 lt!53818)) e!69024)))

(declare-fun b!106045 () Bool)

(assert (=> b!106045 (= e!69025 (getValueByKey!155 (t!5737 lt!54062) (_1!1215 lt!53818)))))

(declare-fun b!106043 () Bool)

(assert (=> b!106043 (= e!69024 (Some!160 (_2!1215 (h!2235 lt!54062))))))

(declare-fun b!106046 () Bool)

(assert (=> b!106046 (= e!69025 None!159)))

(assert (= (and d!28973 c!18490) b!106043))

(assert (= (and d!28973 (not c!18490)) b!106044))

(assert (= (and b!106044 c!18491) b!106045))

(assert (= (and b!106044 (not c!18491)) b!106046))

(declare-fun m!118437 () Bool)

(assert (=> b!106045 m!118437))

(assert (=> d!28803 d!28973))

(declare-fun d!28975 () Bool)

(assert (=> d!28975 (= (getValueByKey!155 lt!54062 (_1!1215 lt!53818)) (Some!160 (_2!1215 lt!53818)))))

(declare-fun lt!54304 () Unit!3250)

(assert (=> d!28975 (= lt!54304 (choose!666 lt!54062 (_1!1215 lt!53818) (_2!1215 lt!53818)))))

(declare-fun e!69026 () Bool)

(assert (=> d!28975 e!69026))

(declare-fun res!52744 () Bool)

(assert (=> d!28975 (=> (not res!52744) (not e!69026))))

(assert (=> d!28975 (= res!52744 (isStrictlySorted!304 lt!54062))))

(assert (=> d!28975 (= (lemmaContainsTupThenGetReturnValue!73 lt!54062 (_1!1215 lt!53818) (_2!1215 lt!53818)) lt!54304)))

(declare-fun b!106047 () Bool)

(declare-fun res!52745 () Bool)

(assert (=> b!106047 (=> (not res!52745) (not e!69026))))

(assert (=> b!106047 (= res!52745 (containsKey!159 lt!54062 (_1!1215 lt!53818)))))

(declare-fun b!106048 () Bool)

(assert (=> b!106048 (= e!69026 (contains!830 lt!54062 (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(assert (= (and d!28975 res!52744) b!106047))

(assert (= (and b!106047 res!52745) b!106048))

(assert (=> d!28975 m!117797))

(declare-fun m!118439 () Bool)

(assert (=> d!28975 m!118439))

(declare-fun m!118441 () Bool)

(assert (=> d!28975 m!118441))

(declare-fun m!118443 () Bool)

(assert (=> b!106047 m!118443))

(declare-fun m!118445 () Bool)

(assert (=> b!106048 m!118445))

(assert (=> d!28803 d!28975))

(declare-fun d!28977 () Bool)

(declare-fun e!69028 () Bool)

(assert (=> d!28977 e!69028))

(declare-fun res!52746 () Bool)

(assert (=> d!28977 (=> (not res!52746) (not e!69028))))

(declare-fun lt!54305 () List!1642)

(assert (=> d!28977 (= res!52746 (isStrictlySorted!304 lt!54305))))

(declare-fun e!69027 () List!1642)

(assert (=> d!28977 (= lt!54305 e!69027)))

(declare-fun c!18492 () Bool)

(assert (=> d!28977 (= c!18492 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 lt!53817))) (bvslt (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 lt!53817)))) (_1!1215 lt!53818))))))

(assert (=> d!28977 (isStrictlySorted!304 (toList!808 (+!146 lt!53824 lt!53817)))))

(assert (=> d!28977 (= (insertStrictlySorted!75 (toList!808 (+!146 lt!53824 lt!53817)) (_1!1215 lt!53818) (_2!1215 lt!53818)) lt!54305)))

(declare-fun b!106049 () Bool)

(declare-fun e!69030 () List!1642)

(declare-fun call!11220 () List!1642)

(assert (=> b!106049 (= e!69030 call!11220)))

(declare-fun b!106050 () Bool)

(declare-fun c!18493 () Bool)

(assert (=> b!106050 (= c!18493 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 lt!53817))) (bvsgt (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 lt!53817)))) (_1!1215 lt!53818))))))

(declare-fun e!69029 () List!1642)

(assert (=> b!106050 (= e!69029 e!69030)))

(declare-fun b!106051 () Bool)

(declare-fun call!11218 () List!1642)

(assert (=> b!106051 (= e!69029 call!11218)))

(declare-fun b!106052 () Bool)

(declare-fun call!11219 () List!1642)

(assert (=> b!106052 (= e!69027 call!11219)))

(declare-fun b!106053 () Bool)

(declare-fun res!52747 () Bool)

(assert (=> b!106053 (=> (not res!52747) (not e!69028))))

(assert (=> b!106053 (= res!52747 (containsKey!159 lt!54305 (_1!1215 lt!53818)))))

(declare-fun bm!11215 () Bool)

(assert (=> bm!11215 (= call!11218 call!11219)))

(declare-fun e!69031 () List!1642)

(declare-fun c!18494 () Bool)

(declare-fun b!106054 () Bool)

(assert (=> b!106054 (= e!69031 (ite c!18494 (t!5737 (toList!808 (+!146 lt!53824 lt!53817))) (ite c!18493 (Cons!1638 (h!2235 (toList!808 (+!146 lt!53824 lt!53817))) (t!5737 (toList!808 (+!146 lt!53824 lt!53817)))) Nil!1639)))))

(declare-fun bm!11216 () Bool)

(assert (=> bm!11216 (= call!11219 ($colon$colon!80 e!69031 (ite c!18492 (h!2235 (toList!808 (+!146 lt!53824 lt!53817))) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818)))))))

(declare-fun c!18495 () Bool)

(assert (=> bm!11216 (= c!18495 c!18492)))

(declare-fun b!106055 () Bool)

(assert (=> b!106055 (= e!69031 (insertStrictlySorted!75 (t!5737 (toList!808 (+!146 lt!53824 lt!53817))) (_1!1215 lt!53818) (_2!1215 lt!53818)))))

(declare-fun b!106056 () Bool)

(assert (=> b!106056 (= e!69028 (contains!830 lt!54305 (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun bm!11217 () Bool)

(assert (=> bm!11217 (= call!11220 call!11218)))

(declare-fun b!106057 () Bool)

(assert (=> b!106057 (= e!69030 call!11220)))

(declare-fun b!106058 () Bool)

(assert (=> b!106058 (= e!69027 e!69029)))

(assert (=> b!106058 (= c!18494 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 lt!53817))) (= (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 lt!53817)))) (_1!1215 lt!53818))))))

(assert (= (and d!28977 c!18492) b!106052))

(assert (= (and d!28977 (not c!18492)) b!106058))

(assert (= (and b!106058 c!18494) b!106051))

(assert (= (and b!106058 (not c!18494)) b!106050))

(assert (= (and b!106050 c!18493) b!106057))

(assert (= (and b!106050 (not c!18493)) b!106049))

(assert (= (or b!106057 b!106049) bm!11217))

(assert (= (or b!106051 bm!11217) bm!11215))

(assert (= (or b!106052 bm!11215) bm!11216))

(assert (= (and bm!11216 c!18495) b!106055))

(assert (= (and bm!11216 (not c!18495)) b!106054))

(assert (= (and d!28977 res!52746) b!106053))

(assert (= (and b!106053 res!52747) b!106056))

(declare-fun m!118447 () Bool)

(assert (=> b!106056 m!118447))

(declare-fun m!118449 () Bool)

(assert (=> bm!11216 m!118449))

(declare-fun m!118451 () Bool)

(assert (=> b!106053 m!118451))

(declare-fun m!118453 () Bool)

(assert (=> b!106055 m!118453))

(declare-fun m!118455 () Bool)

(assert (=> d!28977 m!118455))

(declare-fun m!118457 () Bool)

(assert (=> d!28977 m!118457))

(assert (=> d!28803 d!28977))

(declare-fun b!106059 () Bool)

(declare-fun e!69040 () Bool)

(declare-fun e!69043 () Bool)

(assert (=> b!106059 (= e!69040 e!69043)))

(declare-fun res!52754 () Bool)

(declare-fun call!11227 () Bool)

(assert (=> b!106059 (= res!52754 call!11227)))

(assert (=> b!106059 (=> (not res!52754) (not e!69043))))

(declare-fun call!11221 () ListLongMap!1585)

(declare-fun bm!11218 () Bool)

(assert (=> bm!11218 (= call!11221 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bm!11219 () Bool)

(declare-fun call!11225 () ListLongMap!1585)

(assert (=> bm!11219 (= call!11225 call!11221)))

(declare-fun b!106061 () Bool)

(declare-fun e!69035 () Bool)

(assert (=> b!106061 (= e!69035 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11220 () Bool)

(declare-fun call!11224 () ListLongMap!1585)

(declare-fun call!11226 () ListLongMap!1585)

(assert (=> bm!11220 (= call!11224 call!11226)))

(declare-fun b!106062 () Bool)

(declare-fun e!69038 () Unit!3250)

(declare-fun lt!54311 () Unit!3250)

(assert (=> b!106062 (= e!69038 lt!54311)))

(declare-fun lt!54324 () ListLongMap!1585)

(assert (=> b!106062 (= lt!54324 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54320 () (_ BitVec 64))

(assert (=> b!106062 (= lt!54320 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54323 () (_ BitVec 64))

(assert (=> b!106062 (= lt!54323 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54307 () Unit!3250)

(assert (=> b!106062 (= lt!54307 (addStillContains!74 lt!54324 lt!54320 (zeroValue!2457 newMap!16) lt!54323))))

(assert (=> b!106062 (contains!829 (+!146 lt!54324 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16))) lt!54323)))

(declare-fun lt!54306 () Unit!3250)

(assert (=> b!106062 (= lt!54306 lt!54307)))

(declare-fun lt!54316 () ListLongMap!1585)

(assert (=> b!106062 (= lt!54316 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54308 () (_ BitVec 64))

(assert (=> b!106062 (= lt!54308 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54314 () (_ BitVec 64))

(assert (=> b!106062 (= lt!54314 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54312 () Unit!3250)

(assert (=> b!106062 (= lt!54312 (addApplyDifferent!74 lt!54316 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) lt!54314))))

(assert (=> b!106062 (= (apply!98 (+!146 lt!54316 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) lt!54314) (apply!98 lt!54316 lt!54314))))

(declare-fun lt!54322 () Unit!3250)

(assert (=> b!106062 (= lt!54322 lt!54312)))

(declare-fun lt!54319 () ListLongMap!1585)

(assert (=> b!106062 (= lt!54319 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54317 () (_ BitVec 64))

(assert (=> b!106062 (= lt!54317 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54326 () (_ BitVec 64))

(assert (=> b!106062 (= lt!54326 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54327 () Unit!3250)

(assert (=> b!106062 (= lt!54327 (addApplyDifferent!74 lt!54319 lt!54317 (zeroValue!2457 newMap!16) lt!54326))))

(assert (=> b!106062 (= (apply!98 (+!146 lt!54319 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16))) lt!54326) (apply!98 lt!54319 lt!54326))))

(declare-fun lt!54313 () Unit!3250)

(assert (=> b!106062 (= lt!54313 lt!54327)))

(declare-fun lt!54315 () ListLongMap!1585)

(assert (=> b!106062 (= lt!54315 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54325 () (_ BitVec 64))

(assert (=> b!106062 (= lt!54325 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54310 () (_ BitVec 64))

(assert (=> b!106062 (= lt!54310 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106062 (= lt!54311 (addApplyDifferent!74 lt!54315 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) lt!54310))))

(assert (=> b!106062 (= (apply!98 (+!146 lt!54315 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) lt!54310) (apply!98 lt!54315 lt!54310))))

(declare-fun b!106063 () Bool)

(declare-fun e!69039 () Bool)

(assert (=> b!106063 (= e!69039 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106064 () Bool)

(declare-fun lt!54318 () ListLongMap!1585)

(assert (=> b!106064 (= e!69043 (= (apply!98 lt!54318 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))

(declare-fun b!106065 () Bool)

(declare-fun e!69042 () Bool)

(declare-fun e!69036 () Bool)

(assert (=> b!106065 (= e!69042 e!69036)))

(declare-fun res!52752 () Bool)

(declare-fun call!11223 () Bool)

(assert (=> b!106065 (= res!52752 call!11223)))

(assert (=> b!106065 (=> (not res!52752) (not e!69036))))

(declare-fun b!106066 () Bool)

(declare-fun res!52753 () Bool)

(declare-fun e!69044 () Bool)

(assert (=> b!106066 (=> (not res!52753) (not e!69044))))

(assert (=> b!106066 (= res!52753 e!69042)))

(declare-fun c!18501 () Bool)

(assert (=> b!106066 (= c!18501 (not (= (bvand (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106067 () Bool)

(declare-fun c!18497 () Bool)

(assert (=> b!106067 (= c!18497 (and (not (= (bvand (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69033 () ListLongMap!1585)

(declare-fun e!69041 () ListLongMap!1585)

(assert (=> b!106067 (= e!69033 e!69041)))

(declare-fun b!106068 () Bool)

(declare-fun res!52750 () Bool)

(assert (=> b!106068 (=> (not res!52750) (not e!69044))))

(declare-fun e!69034 () Bool)

(assert (=> b!106068 (= res!52750 e!69034)))

(declare-fun res!52756 () Bool)

(assert (=> b!106068 (=> res!52756 e!69034)))

(assert (=> b!106068 (= res!52756 (not e!69039))))

(declare-fun res!52751 () Bool)

(assert (=> b!106068 (=> (not res!52751) (not e!69039))))

(assert (=> b!106068 (= res!52751 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106069 () Bool)

(declare-fun e!69037 () Bool)

(assert (=> b!106069 (= e!69034 e!69037)))

(declare-fun res!52749 () Bool)

(assert (=> b!106069 (=> (not res!52749) (not e!69037))))

(assert (=> b!106069 (= res!52749 (contains!829 lt!54318 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106069 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106070 () Bool)

(assert (=> b!106070 (= e!69041 call!11224)))

(declare-fun bm!11221 () Bool)

(assert (=> bm!11221 (= call!11223 (contains!829 lt!54318 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!28979 () Bool)

(assert (=> d!28979 e!69044))

(declare-fun res!52755 () Bool)

(assert (=> d!28979 (=> (not res!52755) (not e!69044))))

(assert (=> d!28979 (= res!52755 (or (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))))

(declare-fun lt!54309 () ListLongMap!1585)

(assert (=> d!28979 (= lt!54318 lt!54309)))

(declare-fun lt!54321 () Unit!3250)

(assert (=> d!28979 (= lt!54321 e!69038)))

(declare-fun c!18499 () Bool)

(assert (=> d!28979 (= c!18499 e!69035)))

(declare-fun res!52748 () Bool)

(assert (=> d!28979 (=> (not res!52748) (not e!69035))))

(assert (=> d!28979 (= res!52748 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun e!69032 () ListLongMap!1585)

(assert (=> d!28979 (= lt!54309 e!69032)))

(declare-fun c!18500 () Bool)

(assert (=> d!28979 (= c!18500 (and (not (= (bvand (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28979 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!28979 (= (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54318)))

(declare-fun b!106060 () Bool)

(declare-fun Unit!3274 () Unit!3250)

(assert (=> b!106060 (= e!69038 Unit!3274)))

(declare-fun b!106071 () Bool)

(assert (=> b!106071 (= e!69032 e!69033)))

(declare-fun c!18496 () Bool)

(assert (=> b!106071 (= c!18496 (and (not (= (bvand (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106072 () Bool)

(assert (=> b!106072 (= e!69044 e!69040)))

(declare-fun c!18498 () Bool)

(assert (=> b!106072 (= c!18498 (not (= (bvand (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11222 () Bool)

(assert (=> bm!11222 (= call!11227 (contains!829 lt!54318 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106073 () Bool)

(assert (=> b!106073 (= e!69033 call!11224)))

(declare-fun call!11222 () ListLongMap!1585)

(declare-fun bm!11223 () Bool)

(assert (=> bm!11223 (= call!11226 (+!146 (ite c!18500 call!11221 (ite c!18496 call!11225 call!11222)) (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(declare-fun b!106074 () Bool)

(assert (=> b!106074 (= e!69037 (= (apply!98 lt!54318 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106074 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_values!2565 newMap!16))))))

(assert (=> b!106074 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106075 () Bool)

(assert (=> b!106075 (= e!69042 (not call!11223))))

(declare-fun b!106076 () Bool)

(assert (=> b!106076 (= e!69040 (not call!11227))))

(declare-fun b!106077 () Bool)

(assert (=> b!106077 (= e!69041 call!11222)))

(declare-fun bm!11224 () Bool)

(assert (=> bm!11224 (= call!11222 call!11225)))

(declare-fun b!106078 () Bool)

(assert (=> b!106078 (= e!69036 (= (apply!98 lt!54318 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun b!106079 () Bool)

(assert (=> b!106079 (= e!69032 (+!146 call!11226 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))))

(assert (= (and d!28979 c!18500) b!106079))

(assert (= (and d!28979 (not c!18500)) b!106071))

(assert (= (and b!106071 c!18496) b!106073))

(assert (= (and b!106071 (not c!18496)) b!106067))

(assert (= (and b!106067 c!18497) b!106070))

(assert (= (and b!106067 (not c!18497)) b!106077))

(assert (= (or b!106070 b!106077) bm!11224))

(assert (= (or b!106073 bm!11224) bm!11219))

(assert (= (or b!106073 b!106070) bm!11220))

(assert (= (or b!106079 bm!11219) bm!11218))

(assert (= (or b!106079 bm!11220) bm!11223))

(assert (= (and d!28979 res!52748) b!106061))

(assert (= (and d!28979 c!18499) b!106062))

(assert (= (and d!28979 (not c!18499)) b!106060))

(assert (= (and d!28979 res!52755) b!106068))

(assert (= (and b!106068 res!52751) b!106063))

(assert (= (and b!106068 (not res!52756)) b!106069))

(assert (= (and b!106069 res!52749) b!106074))

(assert (= (and b!106068 res!52750) b!106066))

(assert (= (and b!106066 c!18501) b!106065))

(assert (= (and b!106066 (not c!18501)) b!106075))

(assert (= (and b!106065 res!52752) b!106078))

(assert (= (or b!106065 b!106075) bm!11221))

(assert (= (and b!106066 res!52753) b!106072))

(assert (= (and b!106072 c!18498) b!106059))

(assert (= (and b!106072 (not c!18498)) b!106076))

(assert (= (and b!106059 res!52754) b!106064))

(assert (= (or b!106059 b!106076) bm!11222))

(declare-fun b_lambda!4761 () Bool)

(assert (=> (not b_lambda!4761) (not b!106074)))

(assert (=> b!106074 t!5744))

(declare-fun b_and!6561 () Bool)

(assert (= b_and!6557 (and (=> t!5744 result!3475) b_and!6561)))

(assert (=> b!106074 t!5746))

(declare-fun b_and!6563 () Bool)

(assert (= b_and!6559 (and (=> t!5746 result!3477) b_and!6563)))

(assert (=> b!106074 m!117859))

(assert (=> b!106074 m!118101))

(assert (=> b!106074 m!118103))

(assert (=> b!106074 m!118105))

(assert (=> b!106074 m!117859))

(declare-fun m!118459 () Bool)

(assert (=> b!106074 m!118459))

(assert (=> b!106074 m!118101))

(assert (=> b!106074 m!118103))

(declare-fun m!118461 () Bool)

(assert (=> bm!11222 m!118461))

(declare-fun m!118463 () Bool)

(assert (=> bm!11223 m!118463))

(declare-fun m!118465 () Bool)

(assert (=> b!106079 m!118465))

(assert (=> d!28979 m!117867))

(assert (=> b!106061 m!117859))

(assert (=> b!106061 m!117859))

(assert (=> b!106061 m!117861))

(declare-fun m!118467 () Bool)

(assert (=> b!106064 m!118467))

(assert (=> b!106063 m!117859))

(assert (=> b!106063 m!117859))

(assert (=> b!106063 m!117861))

(declare-fun m!118469 () Bool)

(assert (=> b!106078 m!118469))

(declare-fun m!118471 () Bool)

(assert (=> bm!11221 m!118471))

(declare-fun m!118473 () Bool)

(assert (=> bm!11218 m!118473))

(assert (=> b!106069 m!117859))

(assert (=> b!106069 m!117859))

(declare-fun m!118475 () Bool)

(assert (=> b!106069 m!118475))

(declare-fun m!118477 () Bool)

(assert (=> b!106062 m!118477))

(declare-fun m!118479 () Bool)

(assert (=> b!106062 m!118479))

(assert (=> b!106062 m!118473))

(assert (=> b!106062 m!117859))

(declare-fun m!118481 () Bool)

(assert (=> b!106062 m!118481))

(declare-fun m!118483 () Bool)

(assert (=> b!106062 m!118483))

(declare-fun m!118485 () Bool)

(assert (=> b!106062 m!118485))

(declare-fun m!118487 () Bool)

(assert (=> b!106062 m!118487))

(declare-fun m!118489 () Bool)

(assert (=> b!106062 m!118489))

(declare-fun m!118491 () Bool)

(assert (=> b!106062 m!118491))

(declare-fun m!118493 () Bool)

(assert (=> b!106062 m!118493))

(assert (=> b!106062 m!118487))

(declare-fun m!118495 () Bool)

(assert (=> b!106062 m!118495))

(declare-fun m!118497 () Bool)

(assert (=> b!106062 m!118497))

(declare-fun m!118499 () Bool)

(assert (=> b!106062 m!118499))

(assert (=> b!106062 m!118495))

(declare-fun m!118501 () Bool)

(assert (=> b!106062 m!118501))

(assert (=> b!106062 m!118491))

(declare-fun m!118503 () Bool)

(assert (=> b!106062 m!118503))

(assert (=> b!106062 m!118481))

(declare-fun m!118505 () Bool)

(assert (=> b!106062 m!118505))

(assert (=> bm!11139 d!28979))

(assert (=> b!105666 d!28861))

(declare-fun d!28981 () Bool)

(assert (=> d!28981 (not (contains!829 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)) lt!54060))))

(declare-fun lt!54330 () Unit!3250)

(declare-fun choose!672 (ListLongMap!1585 (_ BitVec 64) V!3219 (_ BitVec 64)) Unit!3250)

(assert (=> d!28981 (= lt!54330 (choose!672 lt!54059 lt!54055 lt!54057 lt!54060))))

(declare-fun e!69047 () Bool)

(assert (=> d!28981 e!69047))

(declare-fun res!52759 () Bool)

(assert (=> d!28981 (=> (not res!52759) (not e!69047))))

(assert (=> d!28981 (= res!52759 (not (contains!829 lt!54059 lt!54060)))))

(assert (=> d!28981 (= (addStillNotContains!48 lt!54059 lt!54055 lt!54057 lt!54060) lt!54330)))

(declare-fun b!106083 () Bool)

(assert (=> b!106083 (= e!69047 (not (= lt!54055 lt!54060)))))

(assert (= (and d!28981 res!52759) b!106083))

(assert (=> d!28981 m!117785))

(assert (=> d!28981 m!117785))

(assert (=> d!28981 m!117787))

(declare-fun m!118507 () Bool)

(assert (=> d!28981 m!118507))

(declare-fun m!118509 () Bool)

(assert (=> d!28981 m!118509))

(assert (=> b!105666 d!28981))

(declare-fun d!28983 () Bool)

(declare-fun e!69049 () Bool)

(assert (=> d!28983 e!69049))

(declare-fun res!52760 () Bool)

(assert (=> d!28983 (=> res!52760 e!69049)))

(declare-fun lt!54331 () Bool)

(assert (=> d!28983 (= res!52760 (not lt!54331))))

(declare-fun lt!54334 () Bool)

(assert (=> d!28983 (= lt!54331 lt!54334)))

(declare-fun lt!54333 () Unit!3250)

(declare-fun e!69048 () Unit!3250)

(assert (=> d!28983 (= lt!54333 e!69048)))

(declare-fun c!18502 () Bool)

(assert (=> d!28983 (= c!18502 lt!54334)))

(assert (=> d!28983 (= lt!54334 (containsKey!159 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060))))

(assert (=> d!28983 (= (contains!829 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)) lt!54060) lt!54331)))

(declare-fun b!106084 () Bool)

(declare-fun lt!54332 () Unit!3250)

(assert (=> b!106084 (= e!69048 lt!54332)))

(assert (=> b!106084 (= lt!54332 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060))))

(assert (=> b!106084 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060))))

(declare-fun b!106085 () Bool)

(declare-fun Unit!3275 () Unit!3250)

(assert (=> b!106085 (= e!69048 Unit!3275)))

(declare-fun b!106086 () Bool)

(assert (=> b!106086 (= e!69049 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060)))))

(assert (= (and d!28983 c!18502) b!106084))

(assert (= (and d!28983 (not c!18502)) b!106085))

(assert (= (and d!28983 (not res!52760)) b!106086))

(declare-fun m!118511 () Bool)

(assert (=> d!28983 m!118511))

(declare-fun m!118513 () Bool)

(assert (=> b!106084 m!118513))

(declare-fun m!118515 () Bool)

(assert (=> b!106084 m!118515))

(assert (=> b!106084 m!118515))

(declare-fun m!118517 () Bool)

(assert (=> b!106084 m!118517))

(assert (=> b!106086 m!118515))

(assert (=> b!106086 m!118515))

(assert (=> b!106086 m!118517))

(assert (=> b!105666 d!28983))

(declare-fun d!28985 () Bool)

(declare-fun e!69050 () Bool)

(assert (=> d!28985 e!69050))

(declare-fun res!52762 () Bool)

(assert (=> d!28985 (=> (not res!52762) (not e!69050))))

(declare-fun lt!54337 () ListLongMap!1585)

(assert (=> d!28985 (= res!52762 (contains!829 lt!54337 (_1!1215 (tuple2!2411 lt!54055 lt!54057))))))

(declare-fun lt!54336 () List!1642)

(assert (=> d!28985 (= lt!54337 (ListLongMap!1586 lt!54336))))

(declare-fun lt!54338 () Unit!3250)

(declare-fun lt!54335 () Unit!3250)

(assert (=> d!28985 (= lt!54338 lt!54335)))

(assert (=> d!28985 (= (getValueByKey!155 lt!54336 (_1!1215 (tuple2!2411 lt!54055 lt!54057))) (Some!160 (_2!1215 (tuple2!2411 lt!54055 lt!54057))))))

(assert (=> d!28985 (= lt!54335 (lemmaContainsTupThenGetReturnValue!73 lt!54336 (_1!1215 (tuple2!2411 lt!54055 lt!54057)) (_2!1215 (tuple2!2411 lt!54055 lt!54057))))))

(assert (=> d!28985 (= lt!54336 (insertStrictlySorted!75 (toList!808 lt!54059) (_1!1215 (tuple2!2411 lt!54055 lt!54057)) (_2!1215 (tuple2!2411 lt!54055 lt!54057))))))

(assert (=> d!28985 (= (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)) lt!54337)))

(declare-fun b!106087 () Bool)

(declare-fun res!52761 () Bool)

(assert (=> b!106087 (=> (not res!52761) (not e!69050))))

(assert (=> b!106087 (= res!52761 (= (getValueByKey!155 (toList!808 lt!54337) (_1!1215 (tuple2!2411 lt!54055 lt!54057))) (Some!160 (_2!1215 (tuple2!2411 lt!54055 lt!54057)))))))

(declare-fun b!106088 () Bool)

(assert (=> b!106088 (= e!69050 (contains!830 (toList!808 lt!54337) (tuple2!2411 lt!54055 lt!54057)))))

(assert (= (and d!28985 res!52762) b!106087))

(assert (= (and b!106087 res!52761) b!106088))

(declare-fun m!118519 () Bool)

(assert (=> d!28985 m!118519))

(declare-fun m!118521 () Bool)

(assert (=> d!28985 m!118521))

(declare-fun m!118523 () Bool)

(assert (=> d!28985 m!118523))

(declare-fun m!118525 () Bool)

(assert (=> d!28985 m!118525))

(declare-fun m!118527 () Bool)

(assert (=> b!106087 m!118527))

(declare-fun m!118529 () Bool)

(assert (=> b!106088 m!118529))

(assert (=> b!105666 d!28985))

(declare-fun d!28987 () Bool)

(declare-fun e!69051 () Bool)

(assert (=> d!28987 e!69051))

(declare-fun res!52764 () Bool)

(assert (=> d!28987 (=> (not res!52764) (not e!69051))))

(declare-fun lt!54341 () ListLongMap!1585)

(assert (=> d!28987 (= res!52764 (contains!829 lt!54341 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!54340 () List!1642)

(assert (=> d!28987 (= lt!54341 (ListLongMap!1586 lt!54340))))

(declare-fun lt!54342 () Unit!3250)

(declare-fun lt!54339 () Unit!3250)

(assert (=> d!28987 (= lt!54342 lt!54339)))

(assert (=> d!28987 (= (getValueByKey!155 lt!54340 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28987 (= lt!54339 (lemmaContainsTupThenGetReturnValue!73 lt!54340 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28987 (= lt!54340 (insertStrictlySorted!75 (toList!808 call!11170) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28987 (= (+!146 call!11170 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!54341)))

(declare-fun b!106089 () Bool)

(declare-fun res!52763 () Bool)

(assert (=> b!106089 (=> (not res!52763) (not e!69051))))

(assert (=> b!106089 (= res!52763 (= (getValueByKey!155 (toList!808 lt!54341) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!106090 () Bool)

(assert (=> b!106090 (= e!69051 (contains!830 (toList!808 lt!54341) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28987 res!52764) b!106089))

(assert (= (and b!106089 res!52763) b!106090))

(declare-fun m!118531 () Bool)

(assert (=> d!28987 m!118531))

(declare-fun m!118533 () Bool)

(assert (=> d!28987 m!118533))

(declare-fun m!118535 () Bool)

(assert (=> d!28987 m!118535))

(declare-fun m!118537 () Bool)

(assert (=> d!28987 m!118537))

(declare-fun m!118539 () Bool)

(assert (=> b!106089 m!118539))

(declare-fun m!118541 () Bool)

(assert (=> b!106090 m!118541))

(assert (=> b!105666 d!28987))

(declare-fun d!28989 () Bool)

(declare-fun res!52765 () Bool)

(declare-fun e!69052 () Bool)

(assert (=> d!28989 (=> res!52765 e!69052)))

(assert (=> d!28989 (= res!52765 (= (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!28989 (= (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000) e!69052)))

(declare-fun b!106091 () Bool)

(declare-fun e!69053 () Bool)

(assert (=> b!106091 (= e!69052 e!69053)))

(declare-fun res!52766 () Bool)

(assert (=> b!106091 (=> (not res!52766) (not e!69053))))

(assert (=> b!106091 (= res!52766 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106092 () Bool)

(assert (=> b!106092 (= e!69053 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28989 (not res!52765)) b!106091))

(assert (= (and b!106091 res!52766) b!106092))

(assert (=> d!28989 m!117859))

(assert (=> b!106092 m!117519))

(declare-fun m!118543 () Bool)

(assert (=> b!106092 m!118543))

(assert (=> bm!11135 d!28989))

(declare-fun b!106093 () Bool)

(declare-fun e!69057 () Bool)

(declare-fun call!11228 () Bool)

(assert (=> b!106093 (= e!69057 call!11228)))

(declare-fun b!106094 () Bool)

(declare-fun e!69055 () Bool)

(assert (=> b!106094 (= e!69055 e!69057)))

(declare-fun c!18503 () Bool)

(assert (=> b!106094 (= c!18503 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!106095 () Bool)

(declare-fun e!69054 () Bool)

(assert (=> b!106095 (= e!69054 e!69055)))

(declare-fun res!52769 () Bool)

(assert (=> b!106095 (=> (not res!52769) (not e!69055))))

(declare-fun e!69056 () Bool)

(assert (=> b!106095 (= res!52769 (not e!69056))))

(declare-fun res!52768 () Bool)

(assert (=> b!106095 (=> (not res!52768) (not e!69056))))

(assert (=> b!106095 (= res!52768 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!106096 () Bool)

(assert (=> b!106096 (= e!69056 (contains!831 (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!28991 () Bool)

(declare-fun res!52767 () Bool)

(assert (=> d!28991 (=> res!52767 e!69054)))

(assert (=> d!28991 (= res!52767 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> d!28991 (= (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)) e!69054)))

(declare-fun b!106097 () Bool)

(assert (=> b!106097 (= e!69057 call!11228)))

(declare-fun bm!11225 () Bool)

(assert (=> bm!11225 (= call!11228 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18503 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640))))))

(assert (= (and d!28991 (not res!52767)) b!106095))

(assert (= (and b!106095 res!52768) b!106096))

(assert (= (and b!106095 res!52769) b!106094))

(assert (= (and b!106094 c!18503) b!106093))

(assert (= (and b!106094 (not c!18503)) b!106097))

(assert (= (or b!106093 b!106097) bm!11225))

(declare-fun m!118545 () Bool)

(assert (=> b!106094 m!118545))

(assert (=> b!106094 m!118545))

(declare-fun m!118547 () Bool)

(assert (=> b!106094 m!118547))

(assert (=> b!106095 m!118545))

(assert (=> b!106095 m!118545))

(assert (=> b!106095 m!118547))

(assert (=> b!106096 m!118545))

(assert (=> b!106096 m!118545))

(declare-fun m!118549 () Bool)

(assert (=> b!106096 m!118549))

(assert (=> bm!11225 m!118545))

(declare-fun m!118551 () Bool)

(assert (=> bm!11225 m!118551))

(assert (=> bm!11170 d!28991))

(declare-fun d!28993 () Bool)

(declare-fun res!52774 () Bool)

(declare-fun e!69062 () Bool)

(assert (=> d!28993 (=> res!52774 e!69062)))

(assert (=> d!28993 (= res!52774 (and ((_ is Cons!1638) (toList!808 lt!53820)) (= (_1!1215 (h!2235 (toList!808 lt!53820))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (=> d!28993 (= (containsKey!159 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) e!69062)))

(declare-fun b!106102 () Bool)

(declare-fun e!69063 () Bool)

(assert (=> b!106102 (= e!69062 e!69063)))

(declare-fun res!52775 () Bool)

(assert (=> b!106102 (=> (not res!52775) (not e!69063))))

(assert (=> b!106102 (= res!52775 (and (or (not ((_ is Cons!1638) (toList!808 lt!53820))) (bvsle (_1!1215 (h!2235 (toList!808 lt!53820))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))) ((_ is Cons!1638) (toList!808 lt!53820)) (bvslt (_1!1215 (h!2235 (toList!808 lt!53820))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(declare-fun b!106103 () Bool)

(assert (=> b!106103 (= e!69063 (containsKey!159 (t!5737 (toList!808 lt!53820)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (= (and d!28993 (not res!52774)) b!106102))

(assert (= (and b!106102 res!52775) b!106103))

(assert (=> b!106103 m!117519))

(declare-fun m!118553 () Bool)

(assert (=> b!106103 m!118553))

(assert (=> d!28781 d!28993))

(declare-fun d!28995 () Bool)

(assert (=> d!28995 (= (apply!98 lt!54011 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1342 (getValueByKey!155 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4350 () Bool)

(assert (= bs!4350 d!28995))

(assert (=> bs!4350 m!117687))

(declare-fun m!118555 () Bool)

(assert (=> bs!4350 m!118555))

(assert (=> bs!4350 m!118555))

(declare-fun m!118557 () Bool)

(assert (=> bs!4350 m!118557))

(assert (=> b!105624 d!28995))

(assert (=> b!105624 d!28861))

(declare-fun d!28997 () Bool)

(declare-fun e!69066 () Bool)

(assert (=> d!28997 e!69066))

(declare-fun c!18506 () Bool)

(assert (=> d!28997 (= c!18506 (and (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!28997 true))

(declare-fun _$29!141 () Unit!3250)

(assert (=> d!28997 (= (choose!661 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))) _$29!141)))

(declare-fun b!106108 () Bool)

(assert (=> b!106108 (= e!69066 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!106109 () Bool)

(assert (=> b!106109 (= e!69066 (ite (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!28997 c!18506) b!106108))

(assert (= (and d!28997 (not c!18506)) b!106109))

(assert (=> b!106108 m!117519))

(assert (=> b!106108 m!117523))

(assert (=> d!28819 d!28997))

(assert (=> d!28819 d!28797))

(declare-fun d!28999 () Bool)

(declare-fun lt!54345 () Bool)

(declare-fun content!109 (List!1643) (InoxSet (_ BitVec 64)))

(assert (=> d!28999 (= lt!54345 (select (content!109 Nil!1640) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun e!69072 () Bool)

(assert (=> d!28999 (= lt!54345 e!69072)))

(declare-fun res!52781 () Bool)

(assert (=> d!28999 (=> (not res!52781) (not e!69072))))

(assert (=> d!28999 (= res!52781 ((_ is Cons!1639) Nil!1640))))

(assert (=> d!28999 (= (contains!831 Nil!1640 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) lt!54345)))

(declare-fun b!106114 () Bool)

(declare-fun e!69071 () Bool)

(assert (=> b!106114 (= e!69072 e!69071)))

(declare-fun res!52780 () Bool)

(assert (=> b!106114 (=> res!52780 e!69071)))

(assert (=> b!106114 (= res!52780 (= (h!2236 Nil!1640) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!106115 () Bool)

(assert (=> b!106115 (= e!69071 (contains!831 (t!5738 Nil!1640) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (= (and d!28999 res!52781) b!106114))

(assert (= (and b!106114 (not res!52780)) b!106115))

(declare-fun m!118559 () Bool)

(assert (=> d!28999 m!118559))

(assert (=> d!28999 m!117519))

(declare-fun m!118561 () Bool)

(assert (=> d!28999 m!118561))

(assert (=> b!106115 m!117519))

(declare-fun m!118563 () Bool)

(assert (=> b!106115 m!118563))

(assert (=> b!105718 d!28999))

(declare-fun d!29001 () Bool)

(declare-fun res!52782 () Bool)

(declare-fun e!69073 () Bool)

(assert (=> d!29001 (=> (not res!52782) (not e!69073))))

(assert (=> d!29001 (= res!52782 (simpleValid!73 (v!2892 (underlying!362 thiss!992))))))

(assert (=> d!29001 (= (valid!408 (v!2892 (underlying!362 thiss!992))) e!69073)))

(declare-fun b!106116 () Bool)

(declare-fun res!52783 () Bool)

(assert (=> b!106116 (=> (not res!52783) (not e!69073))))

(assert (=> b!106116 (= res!52783 (= (arrayCountValidKeys!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000000 (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))) (_size!499 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun b!106117 () Bool)

(declare-fun res!52784 () Bool)

(assert (=> b!106117 (=> (not res!52784) (not e!69073))))

(assert (=> b!106117 (= res!52784 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun b!106118 () Bool)

(assert (=> b!106118 (= e!69073 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000000 Nil!1640))))

(assert (= (and d!29001 res!52782) b!106116))

(assert (= (and b!106116 res!52783) b!106117))

(assert (= (and b!106117 res!52784) b!106118))

(declare-fun m!118565 () Bool)

(assert (=> d!29001 m!118565))

(declare-fun m!118567 () Bool)

(assert (=> b!106116 m!118567))

(declare-fun m!118569 () Bool)

(assert (=> b!106117 m!118569))

(declare-fun m!118571 () Bool)

(assert (=> b!106118 m!118571))

(assert (=> d!28809 d!29001))

(declare-fun d!29003 () Bool)

(declare-fun e!69075 () Bool)

(assert (=> d!29003 e!69075))

(declare-fun res!52785 () Bool)

(assert (=> d!29003 (=> res!52785 e!69075)))

(declare-fun lt!54346 () Bool)

(assert (=> d!29003 (= res!52785 (not lt!54346))))

(declare-fun lt!54349 () Bool)

(assert (=> d!29003 (= lt!54346 lt!54349)))

(declare-fun lt!54348 () Unit!3250)

(declare-fun e!69074 () Unit!3250)

(assert (=> d!29003 (= lt!54348 e!69074)))

(declare-fun c!18507 () Bool)

(assert (=> d!29003 (= c!18507 lt!54349)))

(assert (=> d!29003 (= lt!54349 (containsKey!159 (toList!808 lt!54038) (_1!1215 lt!53817)))))

(assert (=> d!29003 (= (contains!829 lt!54038 (_1!1215 lt!53817)) lt!54346)))

(declare-fun b!106119 () Bool)

(declare-fun lt!54347 () Unit!3250)

(assert (=> b!106119 (= e!69074 lt!54347)))

(assert (=> b!106119 (= lt!54347 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54038) (_1!1215 lt!53817)))))

(assert (=> b!106119 (isDefined!109 (getValueByKey!155 (toList!808 lt!54038) (_1!1215 lt!53817)))))

(declare-fun b!106120 () Bool)

(declare-fun Unit!3276 () Unit!3250)

(assert (=> b!106120 (= e!69074 Unit!3276)))

(declare-fun b!106121 () Bool)

(assert (=> b!106121 (= e!69075 (isDefined!109 (getValueByKey!155 (toList!808 lt!54038) (_1!1215 lt!53817))))))

(assert (= (and d!29003 c!18507) b!106119))

(assert (= (and d!29003 (not c!18507)) b!106120))

(assert (= (and d!29003 (not res!52785)) b!106121))

(declare-fun m!118573 () Bool)

(assert (=> d!29003 m!118573))

(declare-fun m!118575 () Bool)

(assert (=> b!106119 m!118575))

(assert (=> b!106119 m!117771))

(assert (=> b!106119 m!117771))

(declare-fun m!118577 () Bool)

(assert (=> b!106119 m!118577))

(assert (=> b!106121 m!117771))

(assert (=> b!106121 m!117771))

(assert (=> b!106121 m!118577))

(assert (=> d!28799 d!29003))

(declare-fun b!106123 () Bool)

(declare-fun e!69076 () Option!161)

(declare-fun e!69077 () Option!161)

(assert (=> b!106123 (= e!69076 e!69077)))

(declare-fun c!18509 () Bool)

(assert (=> b!106123 (= c!18509 (and ((_ is Cons!1638) lt!54037) (not (= (_1!1215 (h!2235 lt!54037)) (_1!1215 lt!53817)))))))

(declare-fun d!29005 () Bool)

(declare-fun c!18508 () Bool)

(assert (=> d!29005 (= c!18508 (and ((_ is Cons!1638) lt!54037) (= (_1!1215 (h!2235 lt!54037)) (_1!1215 lt!53817))))))

(assert (=> d!29005 (= (getValueByKey!155 lt!54037 (_1!1215 lt!53817)) e!69076)))

(declare-fun b!106124 () Bool)

(assert (=> b!106124 (= e!69077 (getValueByKey!155 (t!5737 lt!54037) (_1!1215 lt!53817)))))

(declare-fun b!106122 () Bool)

(assert (=> b!106122 (= e!69076 (Some!160 (_2!1215 (h!2235 lt!54037))))))

(declare-fun b!106125 () Bool)

(assert (=> b!106125 (= e!69077 None!159)))

(assert (= (and d!29005 c!18508) b!106122))

(assert (= (and d!29005 (not c!18508)) b!106123))

(assert (= (and b!106123 c!18509) b!106124))

(assert (= (and b!106123 (not c!18509)) b!106125))

(declare-fun m!118579 () Bool)

(assert (=> b!106124 m!118579))

(assert (=> d!28799 d!29005))

(declare-fun d!29007 () Bool)

(assert (=> d!29007 (= (getValueByKey!155 lt!54037 (_1!1215 lt!53817)) (Some!160 (_2!1215 lt!53817)))))

(declare-fun lt!54350 () Unit!3250)

(assert (=> d!29007 (= lt!54350 (choose!666 lt!54037 (_1!1215 lt!53817) (_2!1215 lt!53817)))))

(declare-fun e!69078 () Bool)

(assert (=> d!29007 e!69078))

(declare-fun res!52786 () Bool)

(assert (=> d!29007 (=> (not res!52786) (not e!69078))))

(assert (=> d!29007 (= res!52786 (isStrictlySorted!304 lt!54037))))

(assert (=> d!29007 (= (lemmaContainsTupThenGetReturnValue!73 lt!54037 (_1!1215 lt!53817) (_2!1215 lt!53817)) lt!54350)))

(declare-fun b!106126 () Bool)

(declare-fun res!52787 () Bool)

(assert (=> b!106126 (=> (not res!52787) (not e!69078))))

(assert (=> b!106126 (= res!52787 (containsKey!159 lt!54037 (_1!1215 lt!53817)))))

(declare-fun b!106127 () Bool)

(assert (=> b!106127 (= e!69078 (contains!830 lt!54037 (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(assert (= (and d!29007 res!52786) b!106126))

(assert (= (and b!106126 res!52787) b!106127))

(assert (=> d!29007 m!117765))

(declare-fun m!118581 () Bool)

(assert (=> d!29007 m!118581))

(declare-fun m!118583 () Bool)

(assert (=> d!29007 m!118583))

(declare-fun m!118585 () Bool)

(assert (=> b!106126 m!118585))

(declare-fun m!118587 () Bool)

(assert (=> b!106127 m!118587))

(assert (=> d!28799 d!29007))

(declare-fun d!29009 () Bool)

(declare-fun e!69080 () Bool)

(assert (=> d!29009 e!69080))

(declare-fun res!52788 () Bool)

(assert (=> d!29009 (=> (not res!52788) (not e!69080))))

(declare-fun lt!54351 () List!1642)

(assert (=> d!29009 (= res!52788 (isStrictlySorted!304 lt!54351))))

(declare-fun e!69079 () List!1642)

(assert (=> d!29009 (= lt!54351 e!69079)))

(declare-fun c!18510 () Bool)

(assert (=> d!29009 (= c!18510 (and ((_ is Cons!1638) (toList!808 lt!53824)) (bvslt (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 lt!53817))))))

(assert (=> d!29009 (isStrictlySorted!304 (toList!808 lt!53824))))

(assert (=> d!29009 (= (insertStrictlySorted!75 (toList!808 lt!53824) (_1!1215 lt!53817) (_2!1215 lt!53817)) lt!54351)))

(declare-fun b!106128 () Bool)

(declare-fun e!69082 () List!1642)

(declare-fun call!11231 () List!1642)

(assert (=> b!106128 (= e!69082 call!11231)))

(declare-fun b!106129 () Bool)

(declare-fun c!18511 () Bool)

(assert (=> b!106129 (= c!18511 (and ((_ is Cons!1638) (toList!808 lt!53824)) (bvsgt (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 lt!53817))))))

(declare-fun e!69081 () List!1642)

(assert (=> b!106129 (= e!69081 e!69082)))

(declare-fun b!106130 () Bool)

(declare-fun call!11229 () List!1642)

(assert (=> b!106130 (= e!69081 call!11229)))

(declare-fun b!106131 () Bool)

(declare-fun call!11230 () List!1642)

(assert (=> b!106131 (= e!69079 call!11230)))

(declare-fun b!106132 () Bool)

(declare-fun res!52789 () Bool)

(assert (=> b!106132 (=> (not res!52789) (not e!69080))))

(assert (=> b!106132 (= res!52789 (containsKey!159 lt!54351 (_1!1215 lt!53817)))))

(declare-fun bm!11226 () Bool)

(assert (=> bm!11226 (= call!11229 call!11230)))

(declare-fun e!69083 () List!1642)

(declare-fun b!106133 () Bool)

(declare-fun c!18512 () Bool)

(assert (=> b!106133 (= e!69083 (ite c!18512 (t!5737 (toList!808 lt!53824)) (ite c!18511 (Cons!1638 (h!2235 (toList!808 lt!53824)) (t!5737 (toList!808 lt!53824))) Nil!1639)))))

(declare-fun bm!11227 () Bool)

(assert (=> bm!11227 (= call!11230 ($colon$colon!80 e!69083 (ite c!18510 (h!2235 (toList!808 lt!53824)) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817)))))))

(declare-fun c!18513 () Bool)

(assert (=> bm!11227 (= c!18513 c!18510)))

(declare-fun b!106134 () Bool)

(assert (=> b!106134 (= e!69083 (insertStrictlySorted!75 (t!5737 (toList!808 lt!53824)) (_1!1215 lt!53817) (_2!1215 lt!53817)))))

(declare-fun b!106135 () Bool)

(assert (=> b!106135 (= e!69080 (contains!830 lt!54351 (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun bm!11228 () Bool)

(assert (=> bm!11228 (= call!11231 call!11229)))

(declare-fun b!106136 () Bool)

(assert (=> b!106136 (= e!69082 call!11231)))

(declare-fun b!106137 () Bool)

(assert (=> b!106137 (= e!69079 e!69081)))

(assert (=> b!106137 (= c!18512 (and ((_ is Cons!1638) (toList!808 lt!53824)) (= (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 lt!53817))))))

(assert (= (and d!29009 c!18510) b!106131))

(assert (= (and d!29009 (not c!18510)) b!106137))

(assert (= (and b!106137 c!18512) b!106130))

(assert (= (and b!106137 (not c!18512)) b!106129))

(assert (= (and b!106129 c!18511) b!106136))

(assert (= (and b!106129 (not c!18511)) b!106128))

(assert (= (or b!106136 b!106128) bm!11228))

(assert (= (or b!106130 bm!11228) bm!11226))

(assert (= (or b!106131 bm!11226) bm!11227))

(assert (= (and bm!11227 c!18513) b!106134))

(assert (= (and bm!11227 (not c!18513)) b!106133))

(assert (= (and d!29009 res!52788) b!106132))

(assert (= (and b!106132 res!52789) b!106135))

(declare-fun m!118589 () Bool)

(assert (=> b!106135 m!118589))

(declare-fun m!118591 () Bool)

(assert (=> bm!11227 m!118591))

(declare-fun m!118593 () Bool)

(assert (=> b!106132 m!118593))

(declare-fun m!118595 () Bool)

(assert (=> b!106134 m!118595))

(declare-fun m!118597 () Bool)

(assert (=> d!29009 m!118597))

(declare-fun m!118599 () Bool)

(assert (=> d!29009 m!118599))

(assert (=> d!28799 d!29009))

(declare-fun d!29011 () Bool)

(declare-fun lt!54352 () Bool)

(assert (=> d!29011 (= lt!54352 (select (content!108 (toList!808 lt!54031)) lt!53818))))

(declare-fun e!69084 () Bool)

(assert (=> d!29011 (= lt!54352 e!69084)))

(declare-fun res!52791 () Bool)

(assert (=> d!29011 (=> (not res!52791) (not e!69084))))

(assert (=> d!29011 (= res!52791 ((_ is Cons!1638) (toList!808 lt!54031)))))

(assert (=> d!29011 (= (contains!830 (toList!808 lt!54031) lt!53818) lt!54352)))

(declare-fun b!106138 () Bool)

(declare-fun e!69085 () Bool)

(assert (=> b!106138 (= e!69084 e!69085)))

(declare-fun res!52790 () Bool)

(assert (=> b!106138 (=> res!52790 e!69085)))

(assert (=> b!106138 (= res!52790 (= (h!2235 (toList!808 lt!54031)) lt!53818))))

(declare-fun b!106139 () Bool)

(assert (=> b!106139 (= e!69085 (contains!830 (t!5737 (toList!808 lt!54031)) lt!53818))))

(assert (= (and d!29011 res!52791) b!106138))

(assert (= (and b!106138 (not res!52790)) b!106139))

(declare-fun m!118601 () Bool)

(assert (=> d!29011 m!118601))

(declare-fun m!118603 () Bool)

(assert (=> d!29011 m!118603))

(declare-fun m!118605 () Bool)

(assert (=> b!106139 m!118605))

(assert (=> b!105635 d!29011))

(declare-fun d!29013 () Bool)

(declare-fun e!69087 () Bool)

(assert (=> d!29013 e!69087))

(declare-fun res!52792 () Bool)

(assert (=> d!29013 (=> res!52792 e!69087)))

(declare-fun lt!54353 () Bool)

(assert (=> d!29013 (= res!52792 (not lt!54353))))

(declare-fun lt!54356 () Bool)

(assert (=> d!29013 (= lt!54353 lt!54356)))

(declare-fun lt!54355 () Unit!3250)

(declare-fun e!69086 () Unit!3250)

(assert (=> d!29013 (= lt!54355 e!69086)))

(declare-fun c!18514 () Bool)

(assert (=> d!29013 (= c!18514 lt!54356)))

(assert (=> d!29013 (= lt!54356 (containsKey!159 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!29013 (= (contains!829 lt!54011 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54353)))

(declare-fun b!106140 () Bool)

(declare-fun lt!54354 () Unit!3250)

(assert (=> b!106140 (= e!69086 lt!54354)))

(assert (=> b!106140 (= lt!54354 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!106140 (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!106141 () Bool)

(declare-fun Unit!3277 () Unit!3250)

(assert (=> b!106141 (= e!69086 Unit!3277)))

(declare-fun b!106142 () Bool)

(assert (=> b!106142 (= e!69087 (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!29013 c!18514) b!106140))

(assert (= (and d!29013 (not c!18514)) b!106141))

(assert (= (and d!29013 (not res!52792)) b!106142))

(assert (=> d!29013 m!117687))

(declare-fun m!118607 () Bool)

(assert (=> d!29013 m!118607))

(assert (=> b!106140 m!117687))

(declare-fun m!118609 () Bool)

(assert (=> b!106140 m!118609))

(assert (=> b!106140 m!117687))

(assert (=> b!106140 m!118555))

(assert (=> b!106140 m!118555))

(declare-fun m!118611 () Bool)

(assert (=> b!106140 m!118611))

(assert (=> b!106142 m!117687))

(assert (=> b!106142 m!118555))

(assert (=> b!106142 m!118555))

(assert (=> b!106142 m!118611))

(assert (=> b!105619 d!29013))

(declare-fun d!29015 () Bool)

(declare-fun e!69089 () Bool)

(assert (=> d!29015 e!69089))

(declare-fun res!52793 () Bool)

(assert (=> d!29015 (=> res!52793 e!69089)))

(declare-fun lt!54357 () Bool)

(assert (=> d!29015 (= res!52793 (not lt!54357))))

(declare-fun lt!54360 () Bool)

(assert (=> d!29015 (= lt!54357 lt!54360)))

(declare-fun lt!54359 () Unit!3250)

(declare-fun e!69088 () Unit!3250)

(assert (=> d!29015 (= lt!54359 e!69088)))

(declare-fun c!18515 () Bool)

(assert (=> d!29015 (= c!18515 lt!54360)))

(assert (=> d!29015 (= lt!54360 (containsKey!159 (toList!808 lt!54031) (_1!1215 lt!53818)))))

(assert (=> d!29015 (= (contains!829 lt!54031 (_1!1215 lt!53818)) lt!54357)))

(declare-fun b!106143 () Bool)

(declare-fun lt!54358 () Unit!3250)

(assert (=> b!106143 (= e!69088 lt!54358)))

(assert (=> b!106143 (= lt!54358 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54031) (_1!1215 lt!53818)))))

(assert (=> b!106143 (isDefined!109 (getValueByKey!155 (toList!808 lt!54031) (_1!1215 lt!53818)))))

(declare-fun b!106144 () Bool)

(declare-fun Unit!3278 () Unit!3250)

(assert (=> b!106144 (= e!69088 Unit!3278)))

(declare-fun b!106145 () Bool)

(assert (=> b!106145 (= e!69089 (isDefined!109 (getValueByKey!155 (toList!808 lt!54031) (_1!1215 lt!53818))))))

(assert (= (and d!29015 c!18515) b!106143))

(assert (= (and d!29015 (not c!18515)) b!106144))

(assert (= (and d!29015 (not res!52793)) b!106145))

(declare-fun m!118613 () Bool)

(assert (=> d!29015 m!118613))

(declare-fun m!118615 () Bool)

(assert (=> b!106143 m!118615))

(assert (=> b!106143 m!117749))

(assert (=> b!106143 m!117749))

(declare-fun m!118617 () Bool)

(assert (=> b!106143 m!118617))

(assert (=> b!106145 m!117749))

(assert (=> b!106145 m!117749))

(assert (=> b!106145 m!118617))

(assert (=> d!28793 d!29015))

(declare-fun b!106147 () Bool)

(declare-fun e!69090 () Option!161)

(declare-fun e!69091 () Option!161)

(assert (=> b!106147 (= e!69090 e!69091)))

(declare-fun c!18517 () Bool)

(assert (=> b!106147 (= c!18517 (and ((_ is Cons!1638) lt!54030) (not (= (_1!1215 (h!2235 lt!54030)) (_1!1215 lt!53818)))))))

(declare-fun d!29017 () Bool)

(declare-fun c!18516 () Bool)

(assert (=> d!29017 (= c!18516 (and ((_ is Cons!1638) lt!54030) (= (_1!1215 (h!2235 lt!54030)) (_1!1215 lt!53818))))))

(assert (=> d!29017 (= (getValueByKey!155 lt!54030 (_1!1215 lt!53818)) e!69090)))

(declare-fun b!106148 () Bool)

(assert (=> b!106148 (= e!69091 (getValueByKey!155 (t!5737 lt!54030) (_1!1215 lt!53818)))))

(declare-fun b!106146 () Bool)

(assert (=> b!106146 (= e!69090 (Some!160 (_2!1215 (h!2235 lt!54030))))))

(declare-fun b!106149 () Bool)

(assert (=> b!106149 (= e!69091 None!159)))

(assert (= (and d!29017 c!18516) b!106146))

(assert (= (and d!29017 (not c!18516)) b!106147))

(assert (= (and b!106147 c!18517) b!106148))

(assert (= (and b!106147 (not c!18517)) b!106149))

(declare-fun m!118619 () Bool)

(assert (=> b!106148 m!118619))

(assert (=> d!28793 d!29017))

(declare-fun d!29019 () Bool)

(assert (=> d!29019 (= (getValueByKey!155 lt!54030 (_1!1215 lt!53818)) (Some!160 (_2!1215 lt!53818)))))

(declare-fun lt!54361 () Unit!3250)

(assert (=> d!29019 (= lt!54361 (choose!666 lt!54030 (_1!1215 lt!53818) (_2!1215 lt!53818)))))

(declare-fun e!69092 () Bool)

(assert (=> d!29019 e!69092))

(declare-fun res!52794 () Bool)

(assert (=> d!29019 (=> (not res!52794) (not e!69092))))

(assert (=> d!29019 (= res!52794 (isStrictlySorted!304 lt!54030))))

(assert (=> d!29019 (= (lemmaContainsTupThenGetReturnValue!73 lt!54030 (_1!1215 lt!53818) (_2!1215 lt!53818)) lt!54361)))

(declare-fun b!106150 () Bool)

(declare-fun res!52795 () Bool)

(assert (=> b!106150 (=> (not res!52795) (not e!69092))))

(assert (=> b!106150 (= res!52795 (containsKey!159 lt!54030 (_1!1215 lt!53818)))))

(declare-fun b!106151 () Bool)

(assert (=> b!106151 (= e!69092 (contains!830 lt!54030 (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(assert (= (and d!29019 res!52794) b!106150))

(assert (= (and b!106150 res!52795) b!106151))

(assert (=> d!29019 m!117743))

(declare-fun m!118621 () Bool)

(assert (=> d!29019 m!118621))

(declare-fun m!118623 () Bool)

(assert (=> d!29019 m!118623))

(declare-fun m!118625 () Bool)

(assert (=> b!106150 m!118625))

(declare-fun m!118627 () Bool)

(assert (=> b!106151 m!118627))

(assert (=> d!28793 d!29019))

(declare-fun d!29021 () Bool)

(declare-fun e!69094 () Bool)

(assert (=> d!29021 e!69094))

(declare-fun res!52796 () Bool)

(assert (=> d!29021 (=> (not res!52796) (not e!69094))))

(declare-fun lt!54362 () List!1642)

(assert (=> d!29021 (= res!52796 (isStrictlySorted!304 lt!54362))))

(declare-fun e!69093 () List!1642)

(assert (=> d!29021 (= lt!54362 e!69093)))

(declare-fun c!18518 () Bool)

(assert (=> d!29021 (= c!18518 (and ((_ is Cons!1638) (toList!808 lt!53824)) (bvslt (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 lt!53818))))))

(assert (=> d!29021 (isStrictlySorted!304 (toList!808 lt!53824))))

(assert (=> d!29021 (= (insertStrictlySorted!75 (toList!808 lt!53824) (_1!1215 lt!53818) (_2!1215 lt!53818)) lt!54362)))

(declare-fun b!106152 () Bool)

(declare-fun e!69096 () List!1642)

(declare-fun call!11234 () List!1642)

(assert (=> b!106152 (= e!69096 call!11234)))

(declare-fun b!106153 () Bool)

(declare-fun c!18519 () Bool)

(assert (=> b!106153 (= c!18519 (and ((_ is Cons!1638) (toList!808 lt!53824)) (bvsgt (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 lt!53818))))))

(declare-fun e!69095 () List!1642)

(assert (=> b!106153 (= e!69095 e!69096)))

(declare-fun b!106154 () Bool)

(declare-fun call!11232 () List!1642)

(assert (=> b!106154 (= e!69095 call!11232)))

(declare-fun b!106155 () Bool)

(declare-fun call!11233 () List!1642)

(assert (=> b!106155 (= e!69093 call!11233)))

(declare-fun b!106156 () Bool)

(declare-fun res!52797 () Bool)

(assert (=> b!106156 (=> (not res!52797) (not e!69094))))

(assert (=> b!106156 (= res!52797 (containsKey!159 lt!54362 (_1!1215 lt!53818)))))

(declare-fun bm!11229 () Bool)

(assert (=> bm!11229 (= call!11232 call!11233)))

(declare-fun e!69097 () List!1642)

(declare-fun b!106157 () Bool)

(declare-fun c!18520 () Bool)

(assert (=> b!106157 (= e!69097 (ite c!18520 (t!5737 (toList!808 lt!53824)) (ite c!18519 (Cons!1638 (h!2235 (toList!808 lt!53824)) (t!5737 (toList!808 lt!53824))) Nil!1639)))))

(declare-fun bm!11230 () Bool)

(assert (=> bm!11230 (= call!11233 ($colon$colon!80 e!69097 (ite c!18518 (h!2235 (toList!808 lt!53824)) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818)))))))

(declare-fun c!18521 () Bool)

(assert (=> bm!11230 (= c!18521 c!18518)))

(declare-fun b!106158 () Bool)

(assert (=> b!106158 (= e!69097 (insertStrictlySorted!75 (t!5737 (toList!808 lt!53824)) (_1!1215 lt!53818) (_2!1215 lt!53818)))))

(declare-fun b!106159 () Bool)

(assert (=> b!106159 (= e!69094 (contains!830 lt!54362 (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun bm!11231 () Bool)

(assert (=> bm!11231 (= call!11234 call!11232)))

(declare-fun b!106160 () Bool)

(assert (=> b!106160 (= e!69096 call!11234)))

(declare-fun b!106161 () Bool)

(assert (=> b!106161 (= e!69093 e!69095)))

(assert (=> b!106161 (= c!18520 (and ((_ is Cons!1638) (toList!808 lt!53824)) (= (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 lt!53818))))))

(assert (= (and d!29021 c!18518) b!106155))

(assert (= (and d!29021 (not c!18518)) b!106161))

(assert (= (and b!106161 c!18520) b!106154))

(assert (= (and b!106161 (not c!18520)) b!106153))

(assert (= (and b!106153 c!18519) b!106160))

(assert (= (and b!106153 (not c!18519)) b!106152))

(assert (= (or b!106160 b!106152) bm!11231))

(assert (= (or b!106154 bm!11231) bm!11229))

(assert (= (or b!106155 bm!11229) bm!11230))

(assert (= (and bm!11230 c!18521) b!106158))

(assert (= (and bm!11230 (not c!18521)) b!106157))

(assert (= (and d!29021 res!52796) b!106156))

(assert (= (and b!106156 res!52797) b!106159))

(declare-fun m!118629 () Bool)

(assert (=> b!106159 m!118629))

(declare-fun m!118631 () Bool)

(assert (=> bm!11230 m!118631))

(declare-fun m!118633 () Bool)

(assert (=> b!106156 m!118633))

(declare-fun m!118635 () Bool)

(assert (=> b!106158 m!118635))

(declare-fun m!118637 () Bool)

(assert (=> d!29021 m!118637))

(assert (=> d!29021 m!118599))

(assert (=> d!28793 d!29021))

(assert (=> b!105672 d!28839))

(declare-fun bm!11240 () Bool)

(declare-fun call!11244 () Bool)

(declare-fun call!11243 () Bool)

(assert (=> bm!11240 (= call!11244 call!11243)))

(declare-fun b!106197 () Bool)

(declare-fun e!69115 () Unit!3250)

(declare-fun Unit!3279 () Unit!3250)

(assert (=> b!106197 (= e!69115 Unit!3279)))

(declare-fun lt!54436 () Unit!3250)

(declare-fun lemmaArrayContainsKeyThenInListMap!30 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) (_ BitVec 32) Int) Unit!3250)

(assert (=> b!106197 (= lt!54436 (lemmaArrayContainsKeyThenInListMap!30 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(assert (=> b!106197 (contains!829 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))

(declare-fun lt!54444 () Unit!3250)

(assert (=> b!106197 (= lt!54444 lt!54436)))

(assert (=> b!106197 false))

(declare-fun b!106198 () Bool)

(declare-fun e!69114 () Bool)

(declare-fun lt!54434 () SeekEntryResult!269)

(assert (=> b!106198 (= e!69114 ((_ is Undefined!269) lt!54434))))

(declare-fun b!106199 () Bool)

(declare-fun e!69117 () Unit!3250)

(declare-fun Unit!3280 () Unit!3250)

(assert (=> b!106199 (= e!69117 Unit!3280)))

(declare-fun lt!54429 () Unit!3250)

(assert (=> b!106199 (= lt!54429 (lemmaInListMapThenSeekEntryOrOpenFindsIt!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54425 () SeekEntryResult!269)

(declare-fun call!11245 () SeekEntryResult!269)

(assert (=> b!106199 (= lt!54425 call!11245)))

(declare-fun res!52817 () Bool)

(assert (=> b!106199 (= res!52817 ((_ is Found!269) lt!54425))))

(declare-fun e!69118 () Bool)

(assert (=> b!106199 (=> (not res!52817) (not e!69118))))

(assert (=> b!106199 e!69118))

(declare-fun lt!54449 () Unit!3250)

(assert (=> b!106199 (= lt!54449 lt!54429)))

(assert (=> b!106199 false))

(declare-fun b!106200 () Bool)

(declare-fun lt!54452 () Unit!3250)

(assert (=> b!106200 (= e!69117 lt!54452)))

(assert (=> b!106200 (= lt!54452 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!47 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)))))

(assert (=> b!106200 (= lt!54434 call!11245)))

(declare-fun c!18530 () Bool)

(assert (=> b!106200 (= c!18530 ((_ is MissingZero!269) lt!54434))))

(declare-fun e!69121 () Bool)

(assert (=> b!106200 e!69121))

(declare-fun b!106201 () Bool)

(declare-fun e!69119 () Bool)

(assert (=> b!106201 (= e!69114 e!69119)))

(declare-fun res!52819 () Bool)

(assert (=> b!106201 (= res!52819 call!11244)))

(assert (=> b!106201 (=> (not res!52819) (not e!69119))))

(declare-fun b!106202 () Bool)

(assert (=> b!106202 (= e!69118 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!54425)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!106203 () Bool)

(declare-fun c!18533 () Bool)

(assert (=> b!106203 (= c!18533 ((_ is MissingVacant!269) lt!54434))))

(assert (=> b!106203 (= e!69121 e!69114)))

(declare-fun b!106204 () Bool)

(declare-fun lt!54427 () tuple2!2412)

(declare-fun e!69120 () Bool)

(assert (=> b!106204 (= e!69120 (= (map!1283 (_2!1216 lt!54427)) (+!146 (map!1283 newMap!16) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106205 () Bool)

(declare-fun res!52816 () Bool)

(assert (=> b!106205 (=> (not res!52816) (not e!69120))))

(assert (=> b!106205 (= res!52816 (valid!408 (_2!1216 lt!54427)))))

(declare-fun b!106206 () Bool)

(declare-fun Unit!3281 () Unit!3250)

(assert (=> b!106206 (= e!69115 Unit!3281)))

(declare-fun bm!11241 () Bool)

(assert (=> bm!11241 (= call!11245 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun d!29023 () Bool)

(assert (=> d!29023 e!69120))

(declare-fun res!52818 () Bool)

(assert (=> d!29023 (=> (not res!52818) (not e!69120))))

(assert (=> d!29023 (= res!52818 (_1!1216 lt!54427))))

(assert (=> d!29023 (= lt!54427 (tuple2!2413 true (LongMapFixedSize!901 (defaultEntry!2582 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (bvadd (_size!499 newMap!16) #b00000000000000000000000000000001) (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (_vacant!499 newMap!16))))))

(declare-fun lt!54437 () Unit!3250)

(declare-fun lt!54423 () Unit!3250)

(assert (=> d!29023 (= lt!54437 lt!54423)))

(declare-fun lt!54450 () array!4350)

(declare-fun lt!54442 () array!4348)

(assert (=> d!29023 (contains!829 (getCurrentListMap!484 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938))))))

(assert (=> d!29023 (= lt!54423 (lemmaValidKeyInArrayIsInListMap!105 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (defaultEntry!2582 newMap!16)))))

(assert (=> d!29023 (= lt!54450 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))))))

(assert (=> d!29023 (= lt!54442 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))))

(declare-fun lt!54424 () Unit!3250)

(declare-fun lt!54433 () Unit!3250)

(assert (=> d!29023 (= lt!54424 lt!54433)))

(declare-fun lt!54447 () array!4348)

(assert (=> d!29023 (= (arrayCountValidKeys!0 lt!54447 (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (bvadd (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4348 (_ BitVec 32)) Unit!3250)

(assert (=> d!29023 (= lt!54433 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!54447 (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938))))))

(assert (=> d!29023 (= lt!54447 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))))

(declare-fun lt!54451 () Unit!3250)

(declare-fun lt!54448 () Unit!3250)

(assert (=> d!29023 (= lt!54451 lt!54448)))

(declare-fun lt!54435 () array!4348)

(assert (=> d!29023 (arrayContainsKey!0 lt!54435 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!29023 (= lt!54448 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!54435 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938))))))

(assert (=> d!29023 (= lt!54435 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))))

(declare-fun lt!54441 () Unit!3250)

(declare-fun lt!54426 () Unit!3250)

(assert (=> d!29023 (= lt!54441 lt!54426)))

(assert (=> d!29023 (= (+!146 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (getCurrentListMap!484 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!30 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) (_ BitVec 64) V!3219 Int) Unit!3250)

(assert (=> d!29023 (= lt!54426 (lemmaAddValidKeyToArrayThenAddPairToListMap!30 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54445 () Unit!3250)

(declare-fun lt!54446 () Unit!3250)

(assert (=> d!29023 (= lt!54445 lt!54446)))

(assert (=> d!29023 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (mask!6728 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4348 (_ BitVec 32) (_ BitVec 32)) Unit!3250)

(assert (=> d!29023 (= lt!54446 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (mask!6728 newMap!16)))))

(declare-fun lt!54443 () Unit!3250)

(declare-fun lt!54428 () Unit!3250)

(assert (=> d!29023 (= lt!54443 lt!54428)))

(assert (=> d!29023 (= (arrayCountValidKeys!0 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4348 (_ BitVec 32) (_ BitVec 64)) Unit!3250)

(assert (=> d!29023 (= lt!54428 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4288 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun lt!54440 () Unit!3250)

(declare-fun lt!54439 () Unit!3250)

(assert (=> d!29023 (= lt!54440 lt!54439)))

(declare-fun lt!54430 () List!1643)

(declare-fun lt!54432 () (_ BitVec 32))

(assert (=> d!29023 (arrayNoDuplicates!0 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) lt!54432 lt!54430)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4348 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1643) Unit!3250)

(assert (=> d!29023 (= lt!54439 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) lt!54432 lt!54430))))

(assert (=> d!29023 (= lt!54430 Nil!1640)))

(assert (=> d!29023 (= lt!54432 #b00000000000000000000000000000000)))

(declare-fun lt!54438 () Unit!3250)

(assert (=> d!29023 (= lt!54438 e!69115)))

(declare-fun c!18532 () Bool)

(assert (=> d!29023 (= c!18532 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!54431 () Unit!3250)

(assert (=> d!29023 (= lt!54431 e!69117)))

(declare-fun c!18531 () Bool)

(assert (=> d!29023 (= c!18531 (contains!829 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!29023 (valid!408 newMap!16)))

(assert (=> d!29023 (= (updateHelperNewKey!47 newMap!16 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938))) lt!54427)))

(declare-fun b!106196 () Bool)

(declare-fun call!11246 () Bool)

(assert (=> b!106196 (= e!69119 (not call!11246))))

(declare-fun b!106207 () Bool)

(declare-fun res!52820 () Bool)

(assert (=> b!106207 (= res!52820 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3227 lt!54434)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106207 (=> (not res!52820) (not e!69119))))

(declare-fun b!106208 () Bool)

(declare-fun res!52824 () Bool)

(assert (=> b!106208 (= res!52824 call!11243)))

(assert (=> b!106208 (=> (not res!52824) (not e!69118))))

(declare-fun b!106209 () Bool)

(declare-fun e!69116 () Bool)

(assert (=> b!106209 (= e!69116 (not call!11246))))

(declare-fun b!106210 () Bool)

(declare-fun res!52823 () Bool)

(assert (=> b!106210 (=> (not res!52823) (not e!69120))))

(assert (=> b!106210 (= res!52823 (contains!829 (map!1283 (_2!1216 lt!54427)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!106211 () Bool)

(declare-fun res!52822 () Bool)

(assert (=> b!106211 (=> (not res!52822) (not e!69116))))

(assert (=> b!106211 (= res!52822 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3224 lt!54434)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11242 () Bool)

(assert (=> bm!11242 (= call!11246 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!11243 () Bool)

(assert (=> bm!11243 (= call!11243 (inRange!0 (ite c!18531 (index!3225 lt!54425) (ite c!18530 (index!3224 lt!54434) (index!3227 lt!54434))) (mask!6728 newMap!16)))))

(declare-fun b!106212 () Bool)

(declare-fun res!52821 () Bool)

(assert (=> b!106212 (=> (not res!52821) (not e!69116))))

(assert (=> b!106212 (= res!52821 call!11244)))

(assert (=> b!106212 (= e!69121 e!69116)))

(assert (= (and d!29023 c!18531) b!106199))

(assert (= (and d!29023 (not c!18531)) b!106200))

(assert (= (and b!106199 res!52817) b!106208))

(assert (= (and b!106208 res!52824) b!106202))

(assert (= (and b!106200 c!18530) b!106212))

(assert (= (and b!106200 (not c!18530)) b!106203))

(assert (= (and b!106212 res!52821) b!106211))

(assert (= (and b!106211 res!52822) b!106209))

(assert (= (and b!106203 c!18533) b!106201))

(assert (= (and b!106203 (not c!18533)) b!106198))

(assert (= (and b!106201 res!52819) b!106207))

(assert (= (and b!106207 res!52820) b!106196))

(assert (= (or b!106212 b!106201) bm!11240))

(assert (= (or b!106209 b!106196) bm!11242))

(assert (= (or b!106208 bm!11240) bm!11243))

(assert (= (or b!106199 b!106200) bm!11241))

(assert (= (and d!29023 c!18532) b!106197))

(assert (= (and d!29023 (not c!18532)) b!106206))

(assert (= (and d!29023 res!52818) b!106205))

(assert (= (and b!106205 res!52816) b!106210))

(assert (= (and b!106210 res!52823) b!106204))

(declare-fun m!118639 () Bool)

(assert (=> bm!11243 m!118639))

(assert (=> bm!11242 m!117519))

(assert (=> bm!11242 m!117657))

(declare-fun m!118641 () Bool)

(assert (=> b!106207 m!118641))

(declare-fun m!118643 () Bool)

(assert (=> d!29023 m!118643))

(declare-fun m!118645 () Bool)

(assert (=> d!29023 m!118645))

(declare-fun m!118647 () Bool)

(assert (=> d!29023 m!118647))

(declare-fun m!118649 () Bool)

(assert (=> d!29023 m!118649))

(declare-fun m!118651 () Bool)

(assert (=> d!29023 m!118651))

(assert (=> d!29023 m!117527))

(declare-fun m!118653 () Bool)

(assert (=> d!29023 m!118653))

(assert (=> d!29023 m!117519))

(declare-fun m!118655 () Bool)

(assert (=> d!29023 m!118655))

(assert (=> d!29023 m!117519))

(declare-fun m!118657 () Bool)

(assert (=> d!29023 m!118657))

(declare-fun m!118659 () Bool)

(assert (=> d!29023 m!118659))

(declare-fun m!118661 () Bool)

(assert (=> d!29023 m!118661))

(declare-fun m!118663 () Bool)

(assert (=> d!29023 m!118663))

(assert (=> d!29023 m!117685))

(assert (=> d!29023 m!118261))

(assert (=> d!29023 m!117519))

(declare-fun m!118665 () Bool)

(assert (=> d!29023 m!118665))

(declare-fun m!118667 () Bool)

(assert (=> d!29023 m!118667))

(assert (=> d!29023 m!117685))

(assert (=> d!29023 m!117519))

(declare-fun m!118669 () Bool)

(assert (=> d!29023 m!118669))

(assert (=> d!29023 m!118651))

(assert (=> d!29023 m!118643))

(declare-fun m!118671 () Bool)

(assert (=> d!29023 m!118671))

(assert (=> d!29023 m!117519))

(assert (=> d!29023 m!117657))

(assert (=> d!29023 m!117685))

(assert (=> d!29023 m!117519))

(declare-fun m!118673 () Bool)

(assert (=> d!29023 m!118673))

(assert (=> d!29023 m!117519))

(declare-fun m!118675 () Bool)

(assert (=> d!29023 m!118675))

(declare-fun m!118677 () Bool)

(assert (=> d!29023 m!118677))

(assert (=> d!29023 m!117821))

(assert (=> d!29023 m!117519))

(declare-fun m!118679 () Bool)

(assert (=> d!29023 m!118679))

(assert (=> b!106199 m!117519))

(assert (=> b!106199 m!117637))

(declare-fun m!118681 () Bool)

(assert (=> b!106210 m!118681))

(assert (=> b!106210 m!118681))

(assert (=> b!106210 m!117519))

(declare-fun m!118683 () Bool)

(assert (=> b!106210 m!118683))

(declare-fun m!118685 () Bool)

(assert (=> b!106205 m!118685))

(declare-fun m!118687 () Bool)

(assert (=> b!106202 m!118687))

(assert (=> bm!11241 m!117519))

(assert (=> bm!11241 m!117635))

(declare-fun m!118689 () Bool)

(assert (=> b!106211 m!118689))

(assert (=> b!106200 m!117519))

(assert (=> b!106200 m!117631))

(assert (=> b!106197 m!117519))

(declare-fun m!118691 () Bool)

(assert (=> b!106197 m!118691))

(assert (=> b!106197 m!117685))

(assert (=> b!106197 m!117685))

(assert (=> b!106197 m!117519))

(assert (=> b!106197 m!118669))

(assert (=> b!106204 m!118681))

(assert (=> b!106204 m!117543))

(assert (=> b!106204 m!117543))

(declare-fun m!118693 () Bool)

(assert (=> b!106204 m!118693))

(assert (=> bm!11133 d!29023))

(declare-fun d!29025 () Bool)

(declare-fun e!69123 () Bool)

(assert (=> d!29025 e!69123))

(declare-fun res!52825 () Bool)

(assert (=> d!29025 (=> res!52825 e!69123)))

(declare-fun lt!54453 () Bool)

(assert (=> d!29025 (= res!52825 (not lt!54453))))

(declare-fun lt!54456 () Bool)

(assert (=> d!29025 (= lt!54453 lt!54456)))

(declare-fun lt!54455 () Unit!3250)

(declare-fun e!69122 () Unit!3250)

(assert (=> d!29025 (= lt!54455 e!69122)))

(declare-fun c!18534 () Bool)

(assert (=> d!29025 (= c!18534 lt!54456)))

(assert (=> d!29025 (= lt!54456 (containsKey!159 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29025 (= (contains!829 lt!54011 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54453)))

(declare-fun b!106213 () Bool)

(declare-fun lt!54454 () Unit!3250)

(assert (=> b!106213 (= e!69122 lt!54454)))

(assert (=> b!106213 (= lt!54454 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106213 (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106214 () Bool)

(declare-fun Unit!3282 () Unit!3250)

(assert (=> b!106214 (= e!69122 Unit!3282)))

(declare-fun b!106215 () Bool)

(assert (=> b!106215 (= e!69123 (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29025 c!18534) b!106213))

(assert (= (and d!29025 (not c!18534)) b!106214))

(assert (= (and d!29025 (not res!52825)) b!106215))

(declare-fun m!118695 () Bool)

(assert (=> d!29025 m!118695))

(declare-fun m!118697 () Bool)

(assert (=> b!106213 m!118697))

(assert (=> b!106213 m!117945))

(assert (=> b!106213 m!117945))

(declare-fun m!118699 () Bool)

(assert (=> b!106213 m!118699))

(assert (=> b!106215 m!117945))

(assert (=> b!106215 m!117945))

(assert (=> b!106215 m!118699))

(assert (=> bm!11161 d!29025))

(declare-fun d!29027 () Bool)

(declare-fun lt!54457 () Bool)

(assert (=> d!29027 (= lt!54457 (select (content!108 (toList!808 lt!54063)) lt!53818))))

(declare-fun e!69124 () Bool)

(assert (=> d!29027 (= lt!54457 e!69124)))

(declare-fun res!52827 () Bool)

(assert (=> d!29027 (=> (not res!52827) (not e!69124))))

(assert (=> d!29027 (= res!52827 ((_ is Cons!1638) (toList!808 lt!54063)))))

(assert (=> d!29027 (= (contains!830 (toList!808 lt!54063) lt!53818) lt!54457)))

(declare-fun b!106216 () Bool)

(declare-fun e!69125 () Bool)

(assert (=> b!106216 (= e!69124 e!69125)))

(declare-fun res!52826 () Bool)

(assert (=> b!106216 (=> res!52826 e!69125)))

(assert (=> b!106216 (= res!52826 (= (h!2235 (toList!808 lt!54063)) lt!53818))))

(declare-fun b!106217 () Bool)

(assert (=> b!106217 (= e!69125 (contains!830 (t!5737 (toList!808 lt!54063)) lt!53818))))

(assert (= (and d!29027 res!52827) b!106216))

(assert (= (and b!106216 (not res!52826)) b!106217))

(declare-fun m!118701 () Bool)

(assert (=> d!29027 m!118701))

(declare-fun m!118703 () Bool)

(assert (=> d!29027 m!118703))

(declare-fun m!118705 () Bool)

(assert (=> b!106217 m!118705))

(assert (=> b!105675 d!29027))

(declare-fun d!29029 () Bool)

(declare-fun res!52828 () Bool)

(declare-fun e!69126 () Bool)

(assert (=> d!29029 (=> res!52828 e!69126)))

(assert (=> d!29029 (= res!52828 (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!29029 (= (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!69126)))

(declare-fun b!106218 () Bool)

(declare-fun e!69127 () Bool)

(assert (=> b!106218 (= e!69126 e!69127)))

(declare-fun res!52829 () Bool)

(assert (=> b!106218 (=> (not res!52829) (not e!69127))))

(assert (=> b!106218 (= res!52829 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!106219 () Bool)

(assert (=> b!106219 (= e!69127 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29029 (not res!52828)) b!106218))

(assert (= (and b!106218 res!52829) b!106219))

(assert (=> d!29029 m!117881))

(assert (=> b!106219 m!117519))

(declare-fun m!118707 () Bool)

(assert (=> b!106219 m!118707))

(assert (=> b!105698 d!29029))

(declare-fun d!29031 () Bool)

(declare-fun lt!54458 () Bool)

(assert (=> d!29031 (= lt!54458 (select (content!108 (toList!808 lt!54067)) lt!53817))))

(declare-fun e!69128 () Bool)

(assert (=> d!29031 (= lt!54458 e!69128)))

(declare-fun res!52831 () Bool)

(assert (=> d!29031 (=> (not res!52831) (not e!69128))))

(assert (=> d!29031 (= res!52831 ((_ is Cons!1638) (toList!808 lt!54067)))))

(assert (=> d!29031 (= (contains!830 (toList!808 lt!54067) lt!53817) lt!54458)))

(declare-fun b!106220 () Bool)

(declare-fun e!69129 () Bool)

(assert (=> b!106220 (= e!69128 e!69129)))

(declare-fun res!52830 () Bool)

(assert (=> b!106220 (=> res!52830 e!69129)))

(assert (=> b!106220 (= res!52830 (= (h!2235 (toList!808 lt!54067)) lt!53817))))

(declare-fun b!106221 () Bool)

(assert (=> b!106221 (= e!69129 (contains!830 (t!5737 (toList!808 lt!54067)) lt!53817))))

(assert (= (and d!29031 res!52831) b!106220))

(assert (= (and b!106220 (not res!52830)) b!106221))

(declare-fun m!118709 () Bool)

(assert (=> d!29031 m!118709))

(declare-fun m!118711 () Bool)

(assert (=> d!29031 m!118711))

(declare-fun m!118713 () Bool)

(assert (=> b!106221 m!118713))

(assert (=> b!105677 d!29031))

(declare-fun mapIsEmpty!3941 () Bool)

(declare-fun mapRes!3941 () Bool)

(assert (=> mapIsEmpty!3941 mapRes!3941))

(declare-fun b!106223 () Bool)

(declare-fun e!69131 () Bool)

(assert (=> b!106223 (= e!69131 tp_is_empty!2679)))

(declare-fun b!106222 () Bool)

(declare-fun e!69130 () Bool)

(assert (=> b!106222 (= e!69130 tp_is_empty!2679)))

(declare-fun mapNonEmpty!3941 () Bool)

(declare-fun tp!9917 () Bool)

(assert (=> mapNonEmpty!3941 (= mapRes!3941 (and tp!9917 e!69130))))

(declare-fun mapKey!3941 () (_ BitVec 32))

(declare-fun mapValue!3941 () ValueCell!996)

(declare-fun mapRest!3941 () (Array (_ BitVec 32) ValueCell!996))

(assert (=> mapNonEmpty!3941 (= mapRest!3939 (store mapRest!3941 mapKey!3941 mapValue!3941))))

(declare-fun condMapEmpty!3941 () Bool)

(declare-fun mapDefault!3941 () ValueCell!996)

(assert (=> mapNonEmpty!3939 (= condMapEmpty!3941 (= mapRest!3939 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3941)))))

(assert (=> mapNonEmpty!3939 (= tp!9915 (and e!69131 mapRes!3941))))

(assert (= (and mapNonEmpty!3939 condMapEmpty!3941) mapIsEmpty!3941))

(assert (= (and mapNonEmpty!3939 (not condMapEmpty!3941)) mapNonEmpty!3941))

(assert (= (and mapNonEmpty!3941 ((_ is ValueCellFull!996) mapValue!3941)) b!106222))

(assert (= (and mapNonEmpty!3939 ((_ is ValueCellFull!996) mapDefault!3941)) b!106223))

(declare-fun m!118715 () Bool)

(assert (=> mapNonEmpty!3941 m!118715))

(declare-fun mapIsEmpty!3942 () Bool)

(declare-fun mapRes!3942 () Bool)

(assert (=> mapIsEmpty!3942 mapRes!3942))

(declare-fun b!106225 () Bool)

(declare-fun e!69133 () Bool)

(assert (=> b!106225 (= e!69133 tp_is_empty!2679)))

(declare-fun b!106224 () Bool)

(declare-fun e!69132 () Bool)

(assert (=> b!106224 (= e!69132 tp_is_empty!2679)))

(declare-fun mapNonEmpty!3942 () Bool)

(declare-fun tp!9918 () Bool)

(assert (=> mapNonEmpty!3942 (= mapRes!3942 (and tp!9918 e!69132))))

(declare-fun mapRest!3942 () (Array (_ BitVec 32) ValueCell!996))

(declare-fun mapValue!3942 () ValueCell!996)

(declare-fun mapKey!3942 () (_ BitVec 32))

(assert (=> mapNonEmpty!3942 (= mapRest!3940 (store mapRest!3942 mapKey!3942 mapValue!3942))))

(declare-fun condMapEmpty!3942 () Bool)

(declare-fun mapDefault!3942 () ValueCell!996)

(assert (=> mapNonEmpty!3940 (= condMapEmpty!3942 (= mapRest!3940 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3942)))))

(assert (=> mapNonEmpty!3940 (= tp!9916 (and e!69133 mapRes!3942))))

(assert (= (and mapNonEmpty!3940 condMapEmpty!3942) mapIsEmpty!3942))

(assert (= (and mapNonEmpty!3940 (not condMapEmpty!3942)) mapNonEmpty!3942))

(assert (= (and mapNonEmpty!3942 ((_ is ValueCellFull!996) mapValue!3942)) b!106224))

(assert (= (and mapNonEmpty!3940 ((_ is ValueCellFull!996) mapDefault!3942)) b!106225))

(declare-fun m!118717 () Bool)

(assert (=> mapNonEmpty!3942 m!118717))

(declare-fun b_lambda!4763 () Bool)

(assert (= b_lambda!4757 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4763)))

(declare-fun b_lambda!4765 () Bool)

(assert (= b_lambda!4759 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4765)))

(declare-fun b_lambda!4767 () Bool)

(assert (= b_lambda!4751 (or (and b!105370 b_free!2525) (and b!105373 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))))) b_lambda!4767)))

(declare-fun b_lambda!4769 () Bool)

(assert (= b_lambda!4761 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4769)))

(declare-fun b_lambda!4771 () Bool)

(assert (= b_lambda!4753 (or (and b!105370 b_free!2525) (and b!105373 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))))) b_lambda!4771)))

(declare-fun b_lambda!4773 () Bool)

(assert (= b_lambda!4755 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4773)))

(check-sat (not d!28847) (not b!106035) (not b!106210) (not b!106116) (not d!28885) (not bm!11195) (not bm!11181) (not d!28859) (not d!28855) (not b!105976) (not b!105923) (not b!106047) (not b!105856) (not b_next!2527) (not b!106118) (not b!105779) (not b!106150) (not d!28961) (not b!106056) (not d!28883) (not b!106121) (not b!105857) (not d!28839) (not d!28927) (not b!105907) (not b_lambda!4769) (not b!105862) (not d!28967) (not b!106204) (not d!28881) (not bm!11196) (not b!106084) (not d!28871) (not b!105777) (not b!106094) (not b!106011) (not d!28911) (not d!29027) (not b!106139) (not b!105770) (not d!28977) (not b!105931) (not d!28947) (not b!105912) (not d!28933) (not b!106145) (not d!28827) (not b!105780) (not b!105767) (not b!105792) (not bm!11243) (not b!105992) (not bm!11242) (not bm!11241) (not b!105797) (not b!106032) (not b!105967) (not d!29021) (not bm!11216) (not b!105872) (not b!106039) (not d!28893) (not b!105965) b_and!6561 (not bm!11180) (not b!106005) (not b!105869) (not b!105930) (not b!106135) (not b!106156) (not b!106124) (not b!105996) (not d!28969) (not b!105966) (not b!105791) (not b!105790) (not d!28937) (not b!105955) (not bm!11189) (not d!28939) (not b!106088) (not b!106079) (not b!105864) (not d!28899) (not d!28949) (not d!28945) (not d!28983) (not b!106016) (not b!105781) (not b!105847) (not d!28953) (not b!105941) (not b!105991) (not d!28979) (not b!105786) (not b!106103) (not b!106061) (not bm!11211) (not d!28935) (not d!28941) (not b!105936) (not d!28931) (not b!105867) (not b!105974) (not d!28995) (not b_lambda!4737) (not d!28965) (not d!28923) (not b_lambda!4745) (not b!106221) (not d!28879) (not d!28985) (not d!28975) (not b!106086) (not d!28865) (not b!106022) (not b!106151) (not b!105858) (not b!105795) (not d!28909) (not bm!11191) (not b_lambda!4765) (not d!29023) (not bm!11221) (not bm!11212) (not b!105735) (not b!106200) (not d!29007) (not b!105879) (not b!106030) (not b!105783) (not bm!11205) (not d!28929) (not b!106126) (not b!106134) (not b!105851) (not d!28913) (not d!29019) (not d!28925) (not d!28957) (not b!105794) (not b!106217) (not d!28897) (not b!105982) (not b!105774) (not bm!11173) (not d!28971) (not d!28981) (not b!105798) (not b!106096) (not b!105962) (not b!106045) (not b!106219) (not d!28951) (not b!106213) (not d!28917) (not d!28895) (not b!105961) (not b!105906) (not b_lambda!4771) (not b!106143) (not b!106062) (not b!105789) (not d!28959) (not b!106004) (not b!105977) (not d!28833) (not b!105760) (not b!106090) (not b!106036) (not b!106042) (not b!105958) (not b!106115) (not b!106053) (not d!29015) (not b!106140) (not bm!11223) (not b!105878) (not b!106108) (not b!105849) b_and!6563 (not b!106063) (not b!105837) (not b!106024) tp_is_empty!2679 (not b!106020) (not bm!11225) (not bm!11204) (not b!106048) (not b!105968) (not b!105855) (not d!28887) (not b!106074) (not b!106055) (not b!106089) (not b!106040) (not d!29011) (not b!105785) (not b!106148) (not b!106199) (not b!105999) (not b!106205) (not d!29009) (not d!28943) (not b!105866) (not bm!11213) (not bm!11174) (not b!105964) (not b!105924) (not d!28987) (not b!106029) (not b!105946) (not b!106069) (not d!28843) (not d!28877) (not b!106003) (not b!106159) (not b!105971) (not b!105776) (not b!106000) (not b_next!2525) (not b!105788) (not mapNonEmpty!3942) (not bm!11230) (not b!106117) (not b!105995) (not b!106078) (not b!106006) (not b!106064) (not b!106142) (not d!28837) (not bm!11227) (not b!105809) (not b!106127) (not b!105854) (not bm!11201) (not b!105945) (not d!28857) (not bm!11218) (not b!106038) (not b_lambda!4773) (not b!105904) (not b!106092) (not b!106132) (not b!106021) (not d!28955) (not b!106095) (not d!28889) (not b!105747) (not d!29003) (not b!106215) (not b!105987) (not d!28863) (not b!106197) (not bm!11222) (not b!105929) (not bm!11208) (not b!106119) (not b!105796) (not bm!11206) (not b!106087) (not b!105841) (not b_lambda!4767) (not b!105769) (not bm!11194) (not d!28919) (not b!105773) (not d!28903) (not b!105859) (not bm!11175) (not d!28905) (not b!105975) (not d!29031) (not b!105928) (not b!105852) (not d!28845) (not d!29001) (not b!106031) (not d!28963) (not b!105775) (not d!28869) (not d!28999) (not d!29013) (not d!28829) (not b!105998) (not mapNonEmpty!3941) (not bm!11200) (not d!29025) (not b_lambda!4747) (not b!106158) (not b!105853) (not b_lambda!4763) (not b_lambda!4749))
(check-sat b_and!6561 b_and!6563 (not b_next!2525) (not b_next!2527))
(get-model)

(declare-fun d!29033 () Bool)

(assert (=> d!29033 (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54459 () Unit!3250)

(assert (=> d!29033 (= lt!54459 (choose!667 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69134 () Bool)

(assert (=> d!29033 e!69134))

(declare-fun res!52832 () Bool)

(assert (=> d!29033 (=> (not res!52832) (not e!69134))))

(assert (=> d!29033 (= res!52832 (isStrictlySorted!304 (toList!808 lt!54058)))))

(assert (=> d!29033 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000) lt!54459)))

(declare-fun b!106226 () Bool)

(assert (=> b!106226 (= e!69134 (containsKey!159 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29033 res!52832) b!106226))

(assert (=> d!29033 m!118173))

(assert (=> d!29033 m!118173))

(assert (=> d!29033 m!118175))

(declare-fun m!118719 () Bool)

(assert (=> d!29033 m!118719))

(declare-fun m!118721 () Bool)

(assert (=> d!29033 m!118721))

(assert (=> b!106226 m!118169))

(assert (=> b!105962 d!29033))

(declare-fun d!29035 () Bool)

(assert (=> d!29035 (= (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!376 (getValueByKey!155 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4351 () Bool)

(assert (= bs!4351 d!29035))

(assert (=> bs!4351 m!118173))

(declare-fun m!118723 () Bool)

(assert (=> bs!4351 m!118723))

(assert (=> b!105962 d!29035))

(declare-fun b!106228 () Bool)

(declare-fun e!69135 () Option!161)

(declare-fun e!69136 () Option!161)

(assert (=> b!106228 (= e!69135 e!69136)))

(declare-fun c!18536 () Bool)

(assert (=> b!106228 (= c!18536 (and ((_ is Cons!1638) (toList!808 lt!54058)) (not (= (_1!1215 (h!2235 (toList!808 lt!54058))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!29037 () Bool)

(declare-fun c!18535 () Bool)

(assert (=> d!29037 (= c!18535 (and ((_ is Cons!1638) (toList!808 lt!54058)) (= (_1!1215 (h!2235 (toList!808 lt!54058))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29037 (= (getValueByKey!155 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000) e!69135)))

(declare-fun b!106229 () Bool)

(assert (=> b!106229 (= e!69136 (getValueByKey!155 (t!5737 (toList!808 lt!54058)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106227 () Bool)

(assert (=> b!106227 (= e!69135 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54058)))))))

(declare-fun b!106230 () Bool)

(assert (=> b!106230 (= e!69136 None!159)))

(assert (= (and d!29037 c!18535) b!106227))

(assert (= (and d!29037 (not c!18535)) b!106228))

(assert (= (and b!106228 c!18536) b!106229))

(assert (= (and b!106228 (not c!18536)) b!106230))

(declare-fun m!118725 () Bool)

(assert (=> b!106229 m!118725))

(assert (=> b!105962 d!29037))

(declare-fun d!29039 () Bool)

(declare-fun lt!54460 () Bool)

(assert (=> d!29039 (= lt!54460 (select (content!108 lt!54062) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun e!69137 () Bool)

(assert (=> d!29039 (= lt!54460 e!69137)))

(declare-fun res!52834 () Bool)

(assert (=> d!29039 (=> (not res!52834) (not e!69137))))

(assert (=> d!29039 (= res!52834 ((_ is Cons!1638) lt!54062))))

(assert (=> d!29039 (= (contains!830 lt!54062 (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))) lt!54460)))

(declare-fun b!106231 () Bool)

(declare-fun e!69138 () Bool)

(assert (=> b!106231 (= e!69137 e!69138)))

(declare-fun res!52833 () Bool)

(assert (=> b!106231 (=> res!52833 e!69138)))

(assert (=> b!106231 (= res!52833 (= (h!2235 lt!54062) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun b!106232 () Bool)

(assert (=> b!106232 (= e!69138 (contains!830 (t!5737 lt!54062) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(assert (= (and d!29039 res!52834) b!106231))

(assert (= (and b!106231 (not res!52833)) b!106232))

(declare-fun m!118727 () Bool)

(assert (=> d!29039 m!118727))

(declare-fun m!118729 () Bool)

(assert (=> d!29039 m!118729))

(declare-fun m!118731 () Bool)

(assert (=> b!106232 m!118731))

(assert (=> b!106048 d!29039))

(assert (=> d!28963 d!28943))

(assert (=> d!28963 d!28959))

(assert (=> d!28963 d!28947))

(declare-fun d!29041 () Bool)

(assert (=> d!29041 (= (apply!98 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54019) (apply!98 lt!54012 lt!54019))))

(assert (=> d!29041 true))

(declare-fun _$34!887 () Unit!3250)

(assert (=> d!29041 (= (choose!670 lt!54012 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54019) _$34!887)))

(declare-fun bs!4352 () Bool)

(assert (= bs!4352 d!29041))

(assert (=> bs!4352 m!117725))

(assert (=> bs!4352 m!117725))

(assert (=> bs!4352 m!117737))

(assert (=> bs!4352 m!117727))

(assert (=> d!28963 d!29041))

(declare-fun d!29043 () Bool)

(declare-fun e!69140 () Bool)

(assert (=> d!29043 e!69140))

(declare-fun res!52835 () Bool)

(assert (=> d!29043 (=> res!52835 e!69140)))

(declare-fun lt!54461 () Bool)

(assert (=> d!29043 (= res!52835 (not lt!54461))))

(declare-fun lt!54464 () Bool)

(assert (=> d!29043 (= lt!54461 lt!54464)))

(declare-fun lt!54463 () Unit!3250)

(declare-fun e!69139 () Unit!3250)

(assert (=> d!29043 (= lt!54463 e!69139)))

(declare-fun c!18537 () Bool)

(assert (=> d!29043 (= c!18537 lt!54464)))

(assert (=> d!29043 (= lt!54464 (containsKey!159 (toList!808 lt!54012) lt!54019))))

(assert (=> d!29043 (= (contains!829 lt!54012 lt!54019) lt!54461)))

(declare-fun b!106234 () Bool)

(declare-fun lt!54462 () Unit!3250)

(assert (=> b!106234 (= e!69139 lt!54462)))

(assert (=> b!106234 (= lt!54462 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54012) lt!54019))))

(assert (=> b!106234 (isDefined!109 (getValueByKey!155 (toList!808 lt!54012) lt!54019))))

(declare-fun b!106235 () Bool)

(declare-fun Unit!3283 () Unit!3250)

(assert (=> b!106235 (= e!69139 Unit!3283)))

(declare-fun b!106236 () Bool)

(assert (=> b!106236 (= e!69140 (isDefined!109 (getValueByKey!155 (toList!808 lt!54012) lt!54019)))))

(assert (= (and d!29043 c!18537) b!106234))

(assert (= (and d!29043 (not c!18537)) b!106235))

(assert (= (and d!29043 (not res!52835)) b!106236))

(declare-fun m!118733 () Bool)

(assert (=> d!29043 m!118733))

(declare-fun m!118735 () Bool)

(assert (=> b!106234 m!118735))

(assert (=> b!106234 m!118351))

(assert (=> b!106234 m!118351))

(declare-fun m!118737 () Bool)

(assert (=> b!106234 m!118737))

(assert (=> b!106236 m!118351))

(assert (=> b!106236 m!118351))

(assert (=> b!106236 m!118737))

(assert (=> d!28963 d!29043))

(declare-fun d!29045 () Bool)

(assert (=> d!29045 (= (inRange!0 (ite c!18531 (index!3225 lt!54425) (ite c!18530 (index!3224 lt!54434) (index!3227 lt!54434))) (mask!6728 newMap!16)) (and (bvsge (ite c!18531 (index!3225 lt!54425) (ite c!18530 (index!3224 lt!54434) (index!3227 lt!54434))) #b00000000000000000000000000000000) (bvslt (ite c!18531 (index!3225 lt!54425) (ite c!18530 (index!3224 lt!54434) (index!3227 lt!54434))) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11243 d!29045))

(declare-fun d!29047 () Bool)

(declare-fun res!52836 () Bool)

(declare-fun e!69141 () Bool)

(assert (=> d!29047 (=> res!52836 e!69141)))

(assert (=> d!29047 (= res!52836 (and ((_ is Cons!1638) (toList!808 lt!54011)) (= (_1!1215 (h!2235 (toList!808 lt!54011))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29047 (= (containsKey!159 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000) e!69141)))

(declare-fun b!106237 () Bool)

(declare-fun e!69142 () Bool)

(assert (=> b!106237 (= e!69141 e!69142)))

(declare-fun res!52837 () Bool)

(assert (=> b!106237 (=> (not res!52837) (not e!69142))))

(assert (=> b!106237 (= res!52837 (and (or (not ((_ is Cons!1638) (toList!808 lt!54011))) (bvsle (_1!1215 (h!2235 (toList!808 lt!54011))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1638) (toList!808 lt!54011)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54011))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106238 () Bool)

(assert (=> b!106238 (= e!69142 (containsKey!159 (t!5737 (toList!808 lt!54011)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29047 (not res!52836)) b!106237))

(assert (= (and b!106237 res!52837) b!106238))

(declare-fun m!118739 () Bool)

(assert (=> b!106238 m!118739))

(assert (=> d!28893 d!29047))

(declare-fun d!29049 () Bool)

(assert (=> d!29049 (= (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54003)) (v!2896 (getValueByKey!155 (toList!808 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54003)))))

(assert (=> d!28941 d!29049))

(declare-fun b!106240 () Bool)

(declare-fun e!69143 () Option!161)

(declare-fun e!69144 () Option!161)

(assert (=> b!106240 (= e!69143 e!69144)))

(declare-fun c!18539 () Bool)

(assert (=> b!106240 (= c!18539 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) (not (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))) lt!54003))))))

(declare-fun c!18538 () Bool)

(declare-fun d!29051 () Bool)

(assert (=> d!29051 (= c!18538 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))) lt!54003)))))

(assert (=> d!29051 (= (getValueByKey!155 (toList!808 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54003) e!69143)))

(declare-fun b!106241 () Bool)

(assert (=> b!106241 (= e!69144 (getValueByKey!155 (t!5737 (toList!808 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) lt!54003))))

(declare-fun b!106239 () Bool)

(assert (=> b!106239 (= e!69143 (Some!160 (_2!1215 (h!2235 (toList!808 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))))

(declare-fun b!106242 () Bool)

(assert (=> b!106242 (= e!69144 None!159)))

(assert (= (and d!29051 c!18538) b!106239))

(assert (= (and d!29051 (not c!18538)) b!106240))

(assert (= (and b!106240 c!18539) b!106241))

(assert (= (and b!106240 (not c!18539)) b!106242))

(declare-fun m!118741 () Bool)

(assert (=> b!106241 m!118741))

(assert (=> d!28941 d!29051))

(declare-fun d!29053 () Bool)

(declare-fun res!52839 () Bool)

(declare-fun e!69147 () Bool)

(assert (=> d!29053 (=> res!52839 e!69147)))

(assert (=> d!29053 (= res!52839 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!29053 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4288 newMap!16) (mask!6728 newMap!16)) e!69147)))

(declare-fun b!106243 () Bool)

(declare-fun e!69145 () Bool)

(assert (=> b!106243 (= e!69147 e!69145)))

(declare-fun c!18540 () Bool)

(assert (=> b!106243 (= c!18540 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!106244 () Bool)

(declare-fun call!11247 () Bool)

(assert (=> b!106244 (= e!69145 call!11247)))

(declare-fun b!106245 () Bool)

(declare-fun e!69146 () Bool)

(assert (=> b!106245 (= e!69146 call!11247)))

(declare-fun bm!11244 () Bool)

(assert (=> bm!11244 (= call!11247 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun b!106246 () Bool)

(assert (=> b!106246 (= e!69145 e!69146)))

(declare-fun lt!54465 () (_ BitVec 64))

(assert (=> b!106246 (= lt!54465 (select (arr!2062 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!54467 () Unit!3250)

(assert (=> b!106246 (= lt!54467 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4288 newMap!16) lt!54465 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!106246 (arrayContainsKey!0 (_keys!4288 newMap!16) lt!54465 #b00000000000000000000000000000000)))

(declare-fun lt!54466 () Unit!3250)

(assert (=> b!106246 (= lt!54466 lt!54467)))

(declare-fun res!52838 () Bool)

(assert (=> b!106246 (= res!52838 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4288 newMap!16) (mask!6728 newMap!16)) (Found!269 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!106246 (=> (not res!52838) (not e!69146))))

(assert (= (and d!29053 (not res!52839)) b!106243))

(assert (= (and b!106243 c!18540) b!106246))

(assert (= (and b!106243 (not c!18540)) b!106244))

(assert (= (and b!106246 res!52838) b!106245))

(assert (= (or b!106245 b!106244) bm!11244))

(declare-fun m!118743 () Bool)

(assert (=> b!106243 m!118743))

(assert (=> b!106243 m!118743))

(declare-fun m!118745 () Bool)

(assert (=> b!106243 m!118745))

(declare-fun m!118747 () Bool)

(assert (=> bm!11244 m!118747))

(assert (=> b!106246 m!118743))

(declare-fun m!118749 () Bool)

(assert (=> b!106246 m!118749))

(declare-fun m!118751 () Bool)

(assert (=> b!106246 m!118751))

(assert (=> b!106246 m!118743))

(declare-fun m!118753 () Bool)

(assert (=> b!106246 m!118753))

(assert (=> bm!11200 d!29053))

(declare-fun b!106248 () Bool)

(declare-fun e!69148 () Option!161)

(declare-fun e!69149 () Option!161)

(assert (=> b!106248 (= e!69148 e!69149)))

(declare-fun c!18542 () Bool)

(assert (=> b!106248 (= c!18542 (and ((_ is Cons!1638) (t!5737 lt!54030)) (not (= (_1!1215 (h!2235 (t!5737 lt!54030))) (_1!1215 lt!53818)))))))

(declare-fun d!29055 () Bool)

(declare-fun c!18541 () Bool)

(assert (=> d!29055 (= c!18541 (and ((_ is Cons!1638) (t!5737 lt!54030)) (= (_1!1215 (h!2235 (t!5737 lt!54030))) (_1!1215 lt!53818))))))

(assert (=> d!29055 (= (getValueByKey!155 (t!5737 lt!54030) (_1!1215 lt!53818)) e!69148)))

(declare-fun b!106249 () Bool)

(assert (=> b!106249 (= e!69149 (getValueByKey!155 (t!5737 (t!5737 lt!54030)) (_1!1215 lt!53818)))))

(declare-fun b!106247 () Bool)

(assert (=> b!106247 (= e!69148 (Some!160 (_2!1215 (h!2235 (t!5737 lt!54030)))))))

(declare-fun b!106250 () Bool)

(assert (=> b!106250 (= e!69149 None!159)))

(assert (= (and d!29055 c!18541) b!106247))

(assert (= (and d!29055 (not c!18541)) b!106248))

(assert (= (and b!106248 c!18542) b!106249))

(assert (= (and b!106248 (not c!18542)) b!106250))

(declare-fun m!118755 () Bool)

(assert (=> b!106249 m!118755))

(assert (=> b!106148 d!29055))

(declare-fun d!29057 () Bool)

(assert (=> d!29057 (= (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54007)) (v!2896 (getValueByKey!155 (toList!808 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54007)))))

(assert (=> d!28949 d!29057))

(declare-fun b!106252 () Bool)

(declare-fun e!69150 () Option!161)

(declare-fun e!69151 () Option!161)

(assert (=> b!106252 (= e!69150 e!69151)))

(declare-fun c!18544 () Bool)

(assert (=> b!106252 (= c!18544 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) (not (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))) lt!54007))))))

(declare-fun c!18543 () Bool)

(declare-fun d!29059 () Bool)

(assert (=> d!29059 (= c!18543 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))) lt!54007)))))

(assert (=> d!29059 (= (getValueByKey!155 (toList!808 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54007) e!69150)))

(declare-fun b!106253 () Bool)

(assert (=> b!106253 (= e!69151 (getValueByKey!155 (t!5737 (toList!808 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) lt!54007))))

(declare-fun b!106251 () Bool)

(assert (=> b!106251 (= e!69150 (Some!160 (_2!1215 (h!2235 (toList!808 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))))

(declare-fun b!106254 () Bool)

(assert (=> b!106254 (= e!69151 None!159)))

(assert (= (and d!29059 c!18543) b!106251))

(assert (= (and d!29059 (not c!18543)) b!106252))

(assert (= (and b!106252 c!18544) b!106253))

(assert (= (and b!106252 (not c!18544)) b!106254))

(declare-fun m!118757 () Bool)

(assert (=> b!106253 m!118757))

(assert (=> d!28949 d!29059))

(declare-fun d!29061 () Bool)

(assert (=> d!29061 (= (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105930 d!29061))

(declare-fun d!29063 () Bool)

(assert (=> d!29063 (contains!829 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))

(declare-fun lt!54470 () Unit!3250)

(declare-fun choose!673 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 64) (_ BitVec 32) Int) Unit!3250)

(assert (=> d!29063 (= lt!54470 (choose!673 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(assert (=> d!29063 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29063 (= (lemmaArrayContainsKeyThenInListMap!30 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54470)))

(declare-fun bs!4353 () Bool)

(assert (= bs!4353 d!29063))

(assert (=> bs!4353 m!117685))

(assert (=> bs!4353 m!117685))

(assert (=> bs!4353 m!117519))

(assert (=> bs!4353 m!118669))

(assert (=> bs!4353 m!117519))

(declare-fun m!118759 () Bool)

(assert (=> bs!4353 m!118759))

(assert (=> bs!4353 m!117867))

(assert (=> b!106197 d!29063))

(declare-fun d!29065 () Bool)

(declare-fun e!69153 () Bool)

(assert (=> d!29065 e!69153))

(declare-fun res!52840 () Bool)

(assert (=> d!29065 (=> res!52840 e!69153)))

(declare-fun lt!54471 () Bool)

(assert (=> d!29065 (= res!52840 (not lt!54471))))

(declare-fun lt!54474 () Bool)

(assert (=> d!29065 (= lt!54471 lt!54474)))

(declare-fun lt!54473 () Unit!3250)

(declare-fun e!69152 () Unit!3250)

(assert (=> d!29065 (= lt!54473 e!69152)))

(declare-fun c!18545 () Bool)

(assert (=> d!29065 (= c!18545 lt!54474)))

(assert (=> d!29065 (= lt!54474 (containsKey!159 (toList!808 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!29065 (= (contains!829 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) lt!54471)))

(declare-fun b!106255 () Bool)

(declare-fun lt!54472 () Unit!3250)

(assert (=> b!106255 (= e!69152 lt!54472)))

(assert (=> b!106255 (= lt!54472 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> b!106255 (isDefined!109 (getValueByKey!155 (toList!808 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!106256 () Bool)

(declare-fun Unit!3284 () Unit!3250)

(assert (=> b!106256 (= e!69152 Unit!3284)))

(declare-fun b!106257 () Bool)

(assert (=> b!106257 (= e!69153 (isDefined!109 (getValueByKey!155 (toList!808 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (= (and d!29065 c!18545) b!106255))

(assert (= (and d!29065 (not c!18545)) b!106256))

(assert (= (and d!29065 (not res!52840)) b!106257))

(assert (=> d!29065 m!117519))

(declare-fun m!118761 () Bool)

(assert (=> d!29065 m!118761))

(assert (=> b!106255 m!117519))

(declare-fun m!118763 () Bool)

(assert (=> b!106255 m!118763))

(assert (=> b!106255 m!117519))

(declare-fun m!118765 () Bool)

(assert (=> b!106255 m!118765))

(assert (=> b!106255 m!118765))

(declare-fun m!118767 () Bool)

(assert (=> b!106255 m!118767))

(assert (=> b!106257 m!117519))

(assert (=> b!106257 m!118765))

(assert (=> b!106257 m!118765))

(assert (=> b!106257 m!118767))

(assert (=> b!106197 d!29065))

(assert (=> b!106197 d!28911))

(declare-fun d!29067 () Bool)

(declare-fun e!69154 () Bool)

(assert (=> d!29067 e!69154))

(declare-fun res!52842 () Bool)

(assert (=> d!29067 (=> (not res!52842) (not e!69154))))

(declare-fun lt!54477 () ListLongMap!1585)

(assert (=> d!29067 (= res!52842 (contains!829 lt!54477 (_1!1215 (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(declare-fun lt!54476 () List!1642)

(assert (=> d!29067 (= lt!54477 (ListLongMap!1586 lt!54476))))

(declare-fun lt!54478 () Unit!3250)

(declare-fun lt!54475 () Unit!3250)

(assert (=> d!29067 (= lt!54478 lt!54475)))

(assert (=> d!29067 (= (getValueByKey!155 lt!54476 (_1!1215 (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29067 (= lt!54475 (lemmaContainsTupThenGetReturnValue!73 lt!54476 (_1!1215 (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (_2!1215 (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29067 (= lt!54476 (insertStrictlySorted!75 (toList!808 (ite c!18486 call!11211 (ite c!18482 call!11215 call!11212))) (_1!1215 (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (_2!1215 (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29067 (= (+!146 (ite c!18486 call!11211 (ite c!18482 call!11215 call!11212)) (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) lt!54477)))

(declare-fun b!106258 () Bool)

(declare-fun res!52841 () Bool)

(assert (=> b!106258 (=> (not res!52841) (not e!69154))))

(assert (=> b!106258 (= res!52841 (= (getValueByKey!155 (toList!808 lt!54477) (_1!1215 (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))))

(declare-fun b!106259 () Bool)

(assert (=> b!106259 (= e!69154 (contains!830 (toList!808 lt!54477) (ite (or c!18486 c!18482) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (= (and d!29067 res!52842) b!106258))

(assert (= (and b!106258 res!52841) b!106259))

(declare-fun m!118769 () Bool)

(assert (=> d!29067 m!118769))

(declare-fun m!118771 () Bool)

(assert (=> d!29067 m!118771))

(declare-fun m!118773 () Bool)

(assert (=> d!29067 m!118773))

(declare-fun m!118775 () Bool)

(assert (=> d!29067 m!118775))

(declare-fun m!118777 () Bool)

(assert (=> b!106258 m!118777))

(declare-fun m!118779 () Bool)

(assert (=> b!106259 m!118779))

(assert (=> bm!11213 d!29067))

(declare-fun d!29069 () Bool)

(assert (=> d!29069 (= (apply!98 lt!54097 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1342 (getValueByKey!155 (toList!808 lt!54097) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4354 () Bool)

(assert (= bs!4354 d!29069))

(assert (=> bs!4354 m!117881))

(declare-fun m!118781 () Bool)

(assert (=> bs!4354 m!118781))

(assert (=> bs!4354 m!118781))

(declare-fun m!118783 () Bool)

(assert (=> bs!4354 m!118783))

(assert (=> b!105769 d!29069))

(declare-fun d!29071 () Bool)

(declare-fun c!18546 () Bool)

(assert (=> d!29071 (= c!18546 ((_ is ValueCellFull!996) (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!69155 () V!3219)

(assert (=> d!29071 (= (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69155)))

(declare-fun b!106260 () Bool)

(assert (=> b!106260 (= e!69155 (get!1340 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106261 () Bool)

(assert (=> b!106261 (= e!69155 (get!1341 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29071 c!18546) b!106260))

(assert (= (and d!29071 (not c!18546)) b!106261))

(assert (=> b!106260 m!117887))

(assert (=> b!106260 m!117549))

(declare-fun m!118785 () Bool)

(assert (=> b!106260 m!118785))

(assert (=> b!106261 m!117887))

(assert (=> b!106261 m!117549))

(declare-fun m!118787 () Bool)

(assert (=> b!106261 m!118787))

(assert (=> b!105769 d!29071))

(assert (=> d!28981 d!28983))

(assert (=> d!28981 d!28985))

(declare-fun d!29073 () Bool)

(assert (=> d!29073 (not (contains!829 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)) lt!54060))))

(assert (=> d!29073 true))

(declare-fun _$36!319 () Unit!3250)

(assert (=> d!29073 (= (choose!672 lt!54059 lt!54055 lt!54057 lt!54060) _$36!319)))

(declare-fun bs!4355 () Bool)

(assert (= bs!4355 d!29073))

(assert (=> bs!4355 m!117785))

(assert (=> bs!4355 m!117785))

(assert (=> bs!4355 m!117787))

(assert (=> d!28981 d!29073))

(declare-fun d!29075 () Bool)

(declare-fun e!69157 () Bool)

(assert (=> d!29075 e!69157))

(declare-fun res!52843 () Bool)

(assert (=> d!29075 (=> res!52843 e!69157)))

(declare-fun lt!54479 () Bool)

(assert (=> d!29075 (= res!52843 (not lt!54479))))

(declare-fun lt!54482 () Bool)

(assert (=> d!29075 (= lt!54479 lt!54482)))

(declare-fun lt!54481 () Unit!3250)

(declare-fun e!69156 () Unit!3250)

(assert (=> d!29075 (= lt!54481 e!69156)))

(declare-fun c!18547 () Bool)

(assert (=> d!29075 (= c!18547 lt!54482)))

(assert (=> d!29075 (= lt!54482 (containsKey!159 (toList!808 lt!54059) lt!54060))))

(assert (=> d!29075 (= (contains!829 lt!54059 lt!54060) lt!54479)))

(declare-fun b!106263 () Bool)

(declare-fun lt!54480 () Unit!3250)

(assert (=> b!106263 (= e!69156 lt!54480)))

(assert (=> b!106263 (= lt!54480 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54059) lt!54060))))

(assert (=> b!106263 (isDefined!109 (getValueByKey!155 (toList!808 lt!54059) lt!54060))))

(declare-fun b!106264 () Bool)

(declare-fun Unit!3285 () Unit!3250)

(assert (=> b!106264 (= e!69156 Unit!3285)))

(declare-fun b!106265 () Bool)

(assert (=> b!106265 (= e!69157 (isDefined!109 (getValueByKey!155 (toList!808 lt!54059) lt!54060)))))

(assert (= (and d!29075 c!18547) b!106263))

(assert (= (and d!29075 (not c!18547)) b!106264))

(assert (= (and d!29075 (not res!52843)) b!106265))

(declare-fun m!118789 () Bool)

(assert (=> d!29075 m!118789))

(declare-fun m!118791 () Bool)

(assert (=> b!106263 m!118791))

(declare-fun m!118793 () Bool)

(assert (=> b!106263 m!118793))

(assert (=> b!106263 m!118793))

(declare-fun m!118795 () Bool)

(assert (=> b!106263 m!118795))

(assert (=> b!106265 m!118793))

(assert (=> b!106265 m!118793))

(assert (=> b!106265 m!118795))

(assert (=> d!28981 d!29075))

(declare-fun b!106267 () Bool)

(declare-fun e!69158 () Option!161)

(declare-fun e!69159 () Option!161)

(assert (=> b!106267 (= e!69158 e!69159)))

(declare-fun c!18549 () Bool)

(assert (=> b!106267 (= c!18549 (and ((_ is Cons!1638) (toList!808 lt!54145)) (not (= (_1!1215 (h!2235 (toList!808 lt!54145))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun d!29077 () Bool)

(declare-fun c!18548 () Bool)

(assert (=> d!29077 (= c!18548 (and ((_ is Cons!1638) (toList!808 lt!54145)) (= (_1!1215 (h!2235 (toList!808 lt!54145))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29077 (= (getValueByKey!155 (toList!808 lt!54145) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69158)))

(declare-fun b!106268 () Bool)

(assert (=> b!106268 (= e!69159 (getValueByKey!155 (t!5737 (toList!808 lt!54145)) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106266 () Bool)

(assert (=> b!106266 (= e!69158 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54145)))))))

(declare-fun b!106269 () Bool)

(assert (=> b!106269 (= e!69159 None!159)))

(assert (= (and d!29077 c!18548) b!106266))

(assert (= (and d!29077 (not c!18548)) b!106267))

(assert (= (and b!106267 c!18549) b!106268))

(assert (= (and b!106267 (not c!18549)) b!106269))

(declare-fun m!118797 () Bool)

(assert (=> b!106268 m!118797))

(assert (=> b!105856 d!29077))

(declare-fun d!29079 () Bool)

(declare-fun e!69161 () Bool)

(assert (=> d!29079 e!69161))

(declare-fun res!52844 () Bool)

(assert (=> d!29079 (=> res!52844 e!69161)))

(declare-fun lt!54483 () Bool)

(assert (=> d!29079 (= res!52844 (not lt!54483))))

(declare-fun lt!54486 () Bool)

(assert (=> d!29079 (= lt!54483 lt!54486)))

(declare-fun lt!54485 () Unit!3250)

(declare-fun e!69160 () Unit!3250)

(assert (=> d!29079 (= lt!54485 e!69160)))

(declare-fun c!18550 () Bool)

(assert (=> d!29079 (= c!18550 lt!54486)))

(assert (=> d!29079 (= lt!54486 (containsKey!159 (toList!808 lt!54097) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29079 (= (contains!829 lt!54097 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54483)))

(declare-fun b!106270 () Bool)

(declare-fun lt!54484 () Unit!3250)

(assert (=> b!106270 (= e!69160 lt!54484)))

(assert (=> b!106270 (= lt!54484 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54097) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106270 (isDefined!109 (getValueByKey!155 (toList!808 lt!54097) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106271 () Bool)

(declare-fun Unit!3286 () Unit!3250)

(assert (=> b!106271 (= e!69160 Unit!3286)))

(declare-fun b!106272 () Bool)

(assert (=> b!106272 (= e!69161 (isDefined!109 (getValueByKey!155 (toList!808 lt!54097) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29079 c!18550) b!106270))

(assert (= (and d!29079 (not c!18550)) b!106271))

(assert (= (and d!29079 (not res!52844)) b!106272))

(declare-fun m!118799 () Bool)

(assert (=> d!29079 m!118799))

(declare-fun m!118801 () Bool)

(assert (=> b!106270 m!118801))

(declare-fun m!118803 () Bool)

(assert (=> b!106270 m!118803))

(assert (=> b!106270 m!118803))

(declare-fun m!118805 () Bool)

(assert (=> b!106270 m!118805))

(assert (=> b!106272 m!118803))

(assert (=> b!106272 m!118803))

(assert (=> b!106272 m!118805))

(assert (=> b!105777 d!29079))

(declare-fun d!29081 () Bool)

(declare-fun res!52845 () Bool)

(declare-fun e!69162 () Bool)

(assert (=> d!29081 (=> res!52845 e!69162)))

(assert (=> d!29081 (= res!52845 (and ((_ is Cons!1638) (toList!808 call!11131)) (= (_1!1215 (h!2235 (toList!808 call!11131))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (=> d!29081 (= (containsKey!159 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) e!69162)))

(declare-fun b!106273 () Bool)

(declare-fun e!69163 () Bool)

(assert (=> b!106273 (= e!69162 e!69163)))

(declare-fun res!52846 () Bool)

(assert (=> b!106273 (=> (not res!52846) (not e!69163))))

(assert (=> b!106273 (= res!52846 (and (or (not ((_ is Cons!1638) (toList!808 call!11131))) (bvsle (_1!1215 (h!2235 (toList!808 call!11131))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))) ((_ is Cons!1638) (toList!808 call!11131)) (bvslt (_1!1215 (h!2235 (toList!808 call!11131))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(declare-fun b!106274 () Bool)

(assert (=> b!106274 (= e!69163 (containsKey!159 (t!5737 (toList!808 call!11131)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (= (and d!29081 (not res!52845)) b!106273))

(assert (= (and b!106273 res!52846) b!106274))

(assert (=> b!106274 m!117519))

(declare-fun m!118807 () Bool)

(assert (=> b!106274 m!118807))

(assert (=> d!28845 d!29081))

(declare-fun d!29083 () Bool)

(declare-fun e!69165 () Bool)

(assert (=> d!29083 e!69165))

(declare-fun res!52847 () Bool)

(assert (=> d!29083 (=> res!52847 e!69165)))

(declare-fun lt!54487 () Bool)

(assert (=> d!29083 (= res!52847 (not lt!54487))))

(declare-fun lt!54490 () Bool)

(assert (=> d!29083 (= lt!54487 lt!54490)))

(declare-fun lt!54489 () Unit!3250)

(declare-fun e!69164 () Unit!3250)

(assert (=> d!29083 (= lt!54489 e!69164)))

(declare-fun c!18551 () Bool)

(assert (=> d!29083 (= c!18551 lt!54490)))

(assert (=> d!29083 (= lt!54490 (containsKey!159 (toList!808 lt!54285) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!29083 (= (contains!829 lt!54285 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54487)))

(declare-fun b!106275 () Bool)

(declare-fun lt!54488 () Unit!3250)

(assert (=> b!106275 (= e!69164 lt!54488)))

(assert (=> b!106275 (= lt!54488 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54285) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> b!106275 (isDefined!109 (getValueByKey!155 (toList!808 lt!54285) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106276 () Bool)

(declare-fun Unit!3287 () Unit!3250)

(assert (=> b!106276 (= e!69164 Unit!3287)))

(declare-fun b!106277 () Bool)

(assert (=> b!106277 (= e!69165 (isDefined!109 (getValueByKey!155 (toList!808 lt!54285) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29083 c!18551) b!106275))

(assert (= (and d!29083 (not c!18551)) b!106276))

(assert (= (and d!29083 (not res!52847)) b!106277))

(declare-fun m!118809 () Bool)

(assert (=> d!29083 m!118809))

(declare-fun m!118811 () Bool)

(assert (=> b!106275 m!118811))

(assert (=> b!106275 m!118391))

(assert (=> b!106275 m!118391))

(declare-fun m!118813 () Bool)

(assert (=> b!106275 m!118813))

(assert (=> b!106277 m!118391))

(assert (=> b!106277 m!118391))

(assert (=> b!106277 m!118813))

(assert (=> d!28959 d!29083))

(declare-fun b!106279 () Bool)

(declare-fun e!69166 () Option!161)

(declare-fun e!69167 () Option!161)

(assert (=> b!106279 (= e!69166 e!69167)))

(declare-fun c!18553 () Bool)

(assert (=> b!106279 (= c!18553 (and ((_ is Cons!1638) lt!54284) (not (= (_1!1215 (h!2235 lt!54284)) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun d!29085 () Bool)

(declare-fun c!18552 () Bool)

(assert (=> d!29085 (= c!18552 (and ((_ is Cons!1638) lt!54284) (= (_1!1215 (h!2235 lt!54284)) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29085 (= (getValueByKey!155 lt!54284 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69166)))

(declare-fun b!106280 () Bool)

(assert (=> b!106280 (= e!69167 (getValueByKey!155 (t!5737 lt!54284) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106278 () Bool)

(assert (=> b!106278 (= e!69166 (Some!160 (_2!1215 (h!2235 lt!54284))))))

(declare-fun b!106281 () Bool)

(assert (=> b!106281 (= e!69167 None!159)))

(assert (= (and d!29085 c!18552) b!106278))

(assert (= (and d!29085 (not c!18552)) b!106279))

(assert (= (and b!106279 c!18553) b!106280))

(assert (= (and b!106279 (not c!18553)) b!106281))

(declare-fun m!118815 () Bool)

(assert (=> b!106280 m!118815))

(assert (=> d!28959 d!29085))

(declare-fun d!29087 () Bool)

(assert (=> d!29087 (= (getValueByKey!155 lt!54284 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54491 () Unit!3250)

(assert (=> d!29087 (= lt!54491 (choose!666 lt!54284 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun e!69168 () Bool)

(assert (=> d!29087 e!69168))

(declare-fun res!52848 () Bool)

(assert (=> d!29087 (=> (not res!52848) (not e!69168))))

(assert (=> d!29087 (= res!52848 (isStrictlySorted!304 lt!54284))))

(assert (=> d!29087 (= (lemmaContainsTupThenGetReturnValue!73 lt!54284 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54491)))

(declare-fun b!106282 () Bool)

(declare-fun res!52849 () Bool)

(assert (=> b!106282 (=> (not res!52849) (not e!69168))))

(assert (=> b!106282 (= res!52849 (containsKey!159 lt!54284 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106283 () Bool)

(assert (=> b!106283 (= e!69168 (contains!830 lt!54284 (tuple2!2411 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29087 res!52848) b!106282))

(assert (= (and b!106282 res!52849) b!106283))

(assert (=> d!29087 m!118385))

(declare-fun m!118817 () Bool)

(assert (=> d!29087 m!118817))

(declare-fun m!118819 () Bool)

(assert (=> d!29087 m!118819))

(declare-fun m!118821 () Bool)

(assert (=> b!106282 m!118821))

(declare-fun m!118823 () Bool)

(assert (=> b!106283 m!118823))

(assert (=> d!28959 d!29087))

(declare-fun d!29089 () Bool)

(declare-fun e!69170 () Bool)

(assert (=> d!29089 e!69170))

(declare-fun res!52850 () Bool)

(assert (=> d!29089 (=> (not res!52850) (not e!69170))))

(declare-fun lt!54492 () List!1642)

(assert (=> d!29089 (= res!52850 (isStrictlySorted!304 lt!54492))))

(declare-fun e!69169 () List!1642)

(assert (=> d!29089 (= lt!54492 e!69169)))

(declare-fun c!18554 () Bool)

(assert (=> d!29089 (= c!18554 (and ((_ is Cons!1638) (toList!808 lt!54012)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54012))) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29089 (isStrictlySorted!304 (toList!808 lt!54012))))

(assert (=> d!29089 (= (insertStrictlySorted!75 (toList!808 lt!54012) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54492)))

(declare-fun b!106284 () Bool)

(declare-fun e!69172 () List!1642)

(declare-fun call!11250 () List!1642)

(assert (=> b!106284 (= e!69172 call!11250)))

(declare-fun b!106285 () Bool)

(declare-fun c!18555 () Bool)

(assert (=> b!106285 (= c!18555 (and ((_ is Cons!1638) (toList!808 lt!54012)) (bvsgt (_1!1215 (h!2235 (toList!808 lt!54012))) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun e!69171 () List!1642)

(assert (=> b!106285 (= e!69171 e!69172)))

(declare-fun b!106286 () Bool)

(declare-fun call!11248 () List!1642)

(assert (=> b!106286 (= e!69171 call!11248)))

(declare-fun b!106287 () Bool)

(declare-fun call!11249 () List!1642)

(assert (=> b!106287 (= e!69169 call!11249)))

(declare-fun b!106288 () Bool)

(declare-fun res!52851 () Bool)

(assert (=> b!106288 (=> (not res!52851) (not e!69170))))

(assert (=> b!106288 (= res!52851 (containsKey!159 lt!54492 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun bm!11245 () Bool)

(assert (=> bm!11245 (= call!11248 call!11249)))

(declare-fun c!18556 () Bool)

(declare-fun b!106289 () Bool)

(declare-fun e!69173 () List!1642)

(assert (=> b!106289 (= e!69173 (ite c!18556 (t!5737 (toList!808 lt!54012)) (ite c!18555 (Cons!1638 (h!2235 (toList!808 lt!54012)) (t!5737 (toList!808 lt!54012))) Nil!1639)))))

(declare-fun bm!11246 () Bool)

(assert (=> bm!11246 (= call!11249 ($colon$colon!80 e!69173 (ite c!18554 (h!2235 (toList!808 lt!54012)) (tuple2!2411 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun c!18557 () Bool)

(assert (=> bm!11246 (= c!18557 c!18554)))

(declare-fun b!106290 () Bool)

(assert (=> b!106290 (= e!69173 (insertStrictlySorted!75 (t!5737 (toList!808 lt!54012)) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106291 () Bool)

(assert (=> b!106291 (= e!69170 (contains!830 lt!54492 (tuple2!2411 (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun bm!11247 () Bool)

(assert (=> bm!11247 (= call!11250 call!11248)))

(declare-fun b!106292 () Bool)

(assert (=> b!106292 (= e!69172 call!11250)))

(declare-fun b!106293 () Bool)

(assert (=> b!106293 (= e!69169 e!69171)))

(assert (=> b!106293 (= c!18556 (and ((_ is Cons!1638) (toList!808 lt!54012)) (= (_1!1215 (h!2235 (toList!808 lt!54012))) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29089 c!18554) b!106287))

(assert (= (and d!29089 (not c!18554)) b!106293))

(assert (= (and b!106293 c!18556) b!106286))

(assert (= (and b!106293 (not c!18556)) b!106285))

(assert (= (and b!106285 c!18555) b!106292))

(assert (= (and b!106285 (not c!18555)) b!106284))

(assert (= (or b!106292 b!106284) bm!11247))

(assert (= (or b!106286 bm!11247) bm!11245))

(assert (= (or b!106287 bm!11245) bm!11246))

(assert (= (and bm!11246 c!18557) b!106290))

(assert (= (and bm!11246 (not c!18557)) b!106289))

(assert (= (and d!29089 res!52850) b!106288))

(assert (= (and b!106288 res!52851) b!106291))

(declare-fun m!118825 () Bool)

(assert (=> b!106291 m!118825))

(declare-fun m!118827 () Bool)

(assert (=> bm!11246 m!118827))

(declare-fun m!118829 () Bool)

(assert (=> b!106288 m!118829))

(declare-fun m!118831 () Bool)

(assert (=> b!106290 m!118831))

(declare-fun m!118833 () Bool)

(assert (=> d!29089 m!118833))

(declare-fun m!118835 () Bool)

(assert (=> d!29089 m!118835))

(assert (=> d!28959 d!29089))

(declare-fun d!29091 () Bool)

(assert (=> d!29091 (= (get!1342 (getValueByKey!155 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2896 (getValueByKey!155 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28859 d!29091))

(declare-fun b!106295 () Bool)

(declare-fun e!69174 () Option!161)

(declare-fun e!69175 () Option!161)

(assert (=> b!106295 (= e!69174 e!69175)))

(declare-fun c!18559 () Bool)

(assert (=> b!106295 (= c!18559 (and ((_ is Cons!1638) (toList!808 lt!54058)) (not (= (_1!1215 (h!2235 (toList!808 lt!54058))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun c!18558 () Bool)

(declare-fun d!29093 () Bool)

(assert (=> d!29093 (= c!18558 (and ((_ is Cons!1638) (toList!808 lt!54058)) (= (_1!1215 (h!2235 (toList!808 lt!54058))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29093 (= (getValueByKey!155 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69174)))

(declare-fun b!106296 () Bool)

(assert (=> b!106296 (= e!69175 (getValueByKey!155 (t!5737 (toList!808 lt!54058)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!106294 () Bool)

(assert (=> b!106294 (= e!69174 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54058)))))))

(declare-fun b!106297 () Bool)

(assert (=> b!106297 (= e!69175 None!159)))

(assert (= (and d!29093 c!18558) b!106294))

(assert (= (and d!29093 (not c!18558)) b!106295))

(assert (= (and b!106295 c!18559) b!106296))

(assert (= (and b!106295 (not c!18559)) b!106297))

(assert (=> b!106296 m!117687))

(declare-fun m!118837 () Bool)

(assert (=> b!106296 m!118837))

(assert (=> d!28859 d!29093))

(assert (=> b!106003 d!29061))

(assert (=> d!28881 d!28885))

(assert (=> d!28881 d!28889))

(assert (=> d!28881 d!28883))

(assert (=> d!28881 d!28887))

(declare-fun d!29095 () Bool)

(declare-fun lt!54493 () Bool)

(assert (=> d!29095 (= lt!54493 (select (content!108 (toList!808 lt!54248)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun e!69176 () Bool)

(assert (=> d!29095 (= lt!54493 e!69176)))

(declare-fun res!52853 () Bool)

(assert (=> d!29095 (=> (not res!52853) (not e!69176))))

(assert (=> d!29095 (= res!52853 ((_ is Cons!1638) (toList!808 lt!54248)))))

(assert (=> d!29095 (= (contains!830 (toList!808 lt!54248) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54493)))

(declare-fun b!106298 () Bool)

(declare-fun e!69177 () Bool)

(assert (=> b!106298 (= e!69176 e!69177)))

(declare-fun res!52852 () Bool)

(assert (=> b!106298 (=> res!52852 e!69177)))

(assert (=> b!106298 (= res!52852 (= (h!2235 (toList!808 lt!54248)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!106299 () Bool)

(assert (=> b!106299 (= e!69177 (contains!830 (t!5737 (toList!808 lt!54248)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!29095 res!52853) b!106298))

(assert (= (and b!106298 (not res!52852)) b!106299))

(declare-fun m!118839 () Bool)

(assert (=> d!29095 m!118839))

(declare-fun m!118841 () Bool)

(assert (=> d!29095 m!118841))

(declare-fun m!118843 () Bool)

(assert (=> b!106299 m!118843))

(assert (=> b!106000 d!29095))

(declare-fun b!106301 () Bool)

(declare-fun e!69178 () Option!161)

(declare-fun e!69179 () Option!161)

(assert (=> b!106301 (= e!69178 e!69179)))

(declare-fun c!18561 () Bool)

(assert (=> b!106301 (= c!18561 (and ((_ is Cons!1638) (toList!808 lt!54285)) (not (= (_1!1215 (h!2235 (toList!808 lt!54285))) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun c!18560 () Bool)

(declare-fun d!29097 () Bool)

(assert (=> d!29097 (= c!18560 (and ((_ is Cons!1638) (toList!808 lt!54285)) (= (_1!1215 (h!2235 (toList!808 lt!54285))) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29097 (= (getValueByKey!155 (toList!808 lt!54285) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69178)))

(declare-fun b!106302 () Bool)

(assert (=> b!106302 (= e!69179 (getValueByKey!155 (t!5737 (toList!808 lt!54285)) (_1!1215 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106300 () Bool)

(assert (=> b!106300 (= e!69178 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54285)))))))

(declare-fun b!106303 () Bool)

(assert (=> b!106303 (= e!69179 None!159)))

(assert (= (and d!29097 c!18560) b!106300))

(assert (= (and d!29097 (not c!18560)) b!106301))

(assert (= (and b!106301 c!18561) b!106302))

(assert (= (and b!106301 (not c!18561)) b!106303))

(declare-fun m!118845 () Bool)

(assert (=> b!106302 m!118845))

(assert (=> b!106031 d!29097))

(declare-fun d!29099 () Bool)

(assert (=> d!29099 (= (get!1340 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2891 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!105795 d!29099))

(declare-fun d!29101 () Bool)

(declare-fun lt!54499 () SeekEntryResult!269)

(assert (=> d!29101 (and (or ((_ is Undefined!269) lt!54499) (not ((_ is Found!269) lt!54499)) (and (bvsge (index!3225 lt!54499) #b00000000000000000000000000000000) (bvslt (index!3225 lt!54499) (size!2317 (_keys!4288 newMap!16))))) (or ((_ is Undefined!269) lt!54499) ((_ is Found!269) lt!54499) (not ((_ is MissingVacant!269) lt!54499)) (not (= (index!3227 lt!54499) (index!3226 lt!54090))) (and (bvsge (index!3227 lt!54499) #b00000000000000000000000000000000) (bvslt (index!3227 lt!54499) (size!2317 (_keys!4288 newMap!16))))) (or ((_ is Undefined!269) lt!54499) (ite ((_ is Found!269) lt!54499) (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!54499)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (and ((_ is MissingVacant!269) lt!54499) (= (index!3227 lt!54499) (index!3226 lt!54090)) (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3227 lt!54499)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!69187 () SeekEntryResult!269)

(assert (=> d!29101 (= lt!54499 e!69187)))

(declare-fun c!18568 () Bool)

(assert (=> d!29101 (= c!18568 (bvsge (x!13655 lt!54090) #b01111111111111111111111111111110))))

(declare-fun lt!54498 () (_ BitVec 64))

(assert (=> d!29101 (= lt!54498 (select (arr!2062 (_keys!4288 newMap!16)) (index!3226 lt!54090)))))

(assert (=> d!29101 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29101 (= (seekKeyOrZeroReturnVacant!0 (x!13655 lt!54090) (index!3226 lt!54090) (index!3226 lt!54090) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)) lt!54499)))

(declare-fun b!106316 () Bool)

(assert (=> b!106316 (= e!69187 Undefined!269)))

(declare-fun b!106317 () Bool)

(declare-fun e!69186 () SeekEntryResult!269)

(assert (=> b!106317 (= e!69187 e!69186)))

(declare-fun c!18570 () Bool)

(assert (=> b!106317 (= c!18570 (= lt!54498 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!106318 () Bool)

(declare-fun e!69188 () SeekEntryResult!269)

(assert (=> b!106318 (= e!69188 (MissingVacant!269 (index!3226 lt!54090)))))

(declare-fun b!106319 () Bool)

(assert (=> b!106319 (= e!69186 (Found!269 (index!3226 lt!54090)))))

(declare-fun b!106320 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!106320 (= e!69188 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13655 lt!54090) #b00000000000000000000000000000001) (nextIndex!0 (index!3226 lt!54090) (x!13655 lt!54090) (mask!6728 newMap!16)) (index!3226 lt!54090) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun b!106321 () Bool)

(declare-fun c!18569 () Bool)

(assert (=> b!106321 (= c!18569 (= lt!54498 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106321 (= e!69186 e!69188)))

(assert (= (and d!29101 c!18568) b!106316))

(assert (= (and d!29101 (not c!18568)) b!106317))

(assert (= (and b!106317 c!18570) b!106319))

(assert (= (and b!106317 (not c!18570)) b!106321))

(assert (= (and b!106321 c!18569) b!106318))

(assert (= (and b!106321 (not c!18569)) b!106320))

(declare-fun m!118847 () Bool)

(assert (=> d!29101 m!118847))

(declare-fun m!118849 () Bool)

(assert (=> d!29101 m!118849))

(assert (=> d!29101 m!117879))

(assert (=> d!29101 m!117867))

(declare-fun m!118851 () Bool)

(assert (=> b!106320 m!118851))

(assert (=> b!106320 m!118851))

(assert (=> b!106320 m!117519))

(declare-fun m!118853 () Bool)

(assert (=> b!106320 m!118853))

(assert (=> b!105760 d!29101))

(declare-fun d!29103 () Bool)

(declare-fun res!52854 () Bool)

(declare-fun e!69189 () Bool)

(assert (=> d!29103 (=> res!52854 e!69189)))

(assert (=> d!29103 (= res!52854 (and ((_ is Cons!1638) (toList!808 lt!54011)) (= (_1!1215 (h!2235 (toList!808 lt!54011))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29103 (= (containsKey!159 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000) e!69189)))

(declare-fun b!106322 () Bool)

(declare-fun e!69190 () Bool)

(assert (=> b!106322 (= e!69189 e!69190)))

(declare-fun res!52855 () Bool)

(assert (=> b!106322 (=> (not res!52855) (not e!69190))))

(assert (=> b!106322 (= res!52855 (and (or (not ((_ is Cons!1638) (toList!808 lt!54011))) (bvsle (_1!1215 (h!2235 (toList!808 lt!54011))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1638) (toList!808 lt!54011)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54011))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106323 () Bool)

(assert (=> b!106323 (= e!69190 (containsKey!159 (t!5737 (toList!808 lt!54011)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29103 (not res!52854)) b!106322))

(assert (= (and b!106322 res!52855) b!106323))

(declare-fun m!118855 () Bool)

(assert (=> b!106323 m!118855))

(assert (=> d!29025 d!29103))

(declare-fun b!106324 () Bool)

(declare-fun e!69194 () Bool)

(declare-fun call!11251 () Bool)

(assert (=> b!106324 (= e!69194 call!11251)))

(declare-fun b!106325 () Bool)

(declare-fun e!69192 () Bool)

(assert (=> b!106325 (= e!69192 e!69194)))

(declare-fun c!18571 () Bool)

(assert (=> b!106325 (= c!18571 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!106326 () Bool)

(declare-fun e!69191 () Bool)

(assert (=> b!106326 (= e!69191 e!69192)))

(declare-fun res!52858 () Bool)

(assert (=> b!106326 (=> (not res!52858) (not e!69192))))

(declare-fun e!69193 () Bool)

(assert (=> b!106326 (= res!52858 (not e!69193))))

(declare-fun res!52857 () Bool)

(assert (=> b!106326 (=> (not res!52857) (not e!69193))))

(assert (=> b!106326 (= res!52857 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!106327 () Bool)

(assert (=> b!106327 (= e!69193 (contains!831 Nil!1640 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!29105 () Bool)

(declare-fun res!52856 () Bool)

(assert (=> d!29105 (=> res!52856 e!69191)))

(assert (=> d!29105 (= res!52856 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> d!29105 (= (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000000 Nil!1640) e!69191)))

(declare-fun b!106328 () Bool)

(assert (=> b!106328 (= e!69194 call!11251)))

(declare-fun bm!11248 () Bool)

(assert (=> bm!11248 (= call!11251 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18571 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b00000000000000000000000000000000) Nil!1640) Nil!1640)))))

(assert (= (and d!29105 (not res!52856)) b!106326))

(assert (= (and b!106326 res!52857) b!106327))

(assert (= (and b!106326 res!52858) b!106325))

(assert (= (and b!106325 c!18571) b!106324))

(assert (= (and b!106325 (not c!18571)) b!106328))

(assert (= (or b!106324 b!106328) bm!11248))

(declare-fun m!118857 () Bool)

(assert (=> b!106325 m!118857))

(assert (=> b!106325 m!118857))

(declare-fun m!118859 () Bool)

(assert (=> b!106325 m!118859))

(assert (=> b!106326 m!118857))

(assert (=> b!106326 m!118857))

(assert (=> b!106326 m!118859))

(assert (=> b!106327 m!118857))

(assert (=> b!106327 m!118857))

(declare-fun m!118861 () Bool)

(assert (=> b!106327 m!118861))

(assert (=> bm!11248 m!118857))

(declare-fun m!118863 () Bool)

(assert (=> bm!11248 m!118863))

(assert (=> b!106118 d!29105))

(declare-fun d!29107 () Bool)

(declare-fun e!69196 () Bool)

(assert (=> d!29107 e!69196))

(declare-fun res!52859 () Bool)

(assert (=> d!29107 (=> (not res!52859) (not e!69196))))

(declare-fun lt!54500 () List!1642)

(assert (=> d!29107 (= res!52859 (isStrictlySorted!304 lt!54500))))

(declare-fun e!69195 () List!1642)

(assert (=> d!29107 (= lt!54500 e!69195)))

(declare-fun c!18572 () Bool)

(assert (=> d!29107 (= c!18572 (and ((_ is Cons!1638) (t!5737 (toList!808 (+!146 lt!53824 lt!53817)))) (bvslt (_1!1215 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53817))))) (_1!1215 lt!53818))))))

(assert (=> d!29107 (isStrictlySorted!304 (t!5737 (toList!808 (+!146 lt!53824 lt!53817))))))

(assert (=> d!29107 (= (insertStrictlySorted!75 (t!5737 (toList!808 (+!146 lt!53824 lt!53817))) (_1!1215 lt!53818) (_2!1215 lt!53818)) lt!54500)))

(declare-fun b!106329 () Bool)

(declare-fun e!69198 () List!1642)

(declare-fun call!11254 () List!1642)

(assert (=> b!106329 (= e!69198 call!11254)))

(declare-fun b!106330 () Bool)

(declare-fun c!18573 () Bool)

(assert (=> b!106330 (= c!18573 (and ((_ is Cons!1638) (t!5737 (toList!808 (+!146 lt!53824 lt!53817)))) (bvsgt (_1!1215 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53817))))) (_1!1215 lt!53818))))))

(declare-fun e!69197 () List!1642)

(assert (=> b!106330 (= e!69197 e!69198)))

(declare-fun b!106331 () Bool)

(declare-fun call!11252 () List!1642)

(assert (=> b!106331 (= e!69197 call!11252)))

(declare-fun b!106332 () Bool)

(declare-fun call!11253 () List!1642)

(assert (=> b!106332 (= e!69195 call!11253)))

(declare-fun b!106333 () Bool)

(declare-fun res!52860 () Bool)

(assert (=> b!106333 (=> (not res!52860) (not e!69196))))

(assert (=> b!106333 (= res!52860 (containsKey!159 lt!54500 (_1!1215 lt!53818)))))

(declare-fun bm!11249 () Bool)

(assert (=> bm!11249 (= call!11252 call!11253)))

(declare-fun b!106334 () Bool)

(declare-fun e!69199 () List!1642)

(declare-fun c!18574 () Bool)

(assert (=> b!106334 (= e!69199 (ite c!18574 (t!5737 (t!5737 (toList!808 (+!146 lt!53824 lt!53817)))) (ite c!18573 (Cons!1638 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53817)))) (t!5737 (t!5737 (toList!808 (+!146 lt!53824 lt!53817))))) Nil!1639)))))

(declare-fun bm!11250 () Bool)

(assert (=> bm!11250 (= call!11253 ($colon$colon!80 e!69199 (ite c!18572 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53817)))) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818)))))))

(declare-fun c!18575 () Bool)

(assert (=> bm!11250 (= c!18575 c!18572)))

(declare-fun b!106335 () Bool)

(assert (=> b!106335 (= e!69199 (insertStrictlySorted!75 (t!5737 (t!5737 (toList!808 (+!146 lt!53824 lt!53817)))) (_1!1215 lt!53818) (_2!1215 lt!53818)))))

(declare-fun b!106336 () Bool)

(assert (=> b!106336 (= e!69196 (contains!830 lt!54500 (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun bm!11251 () Bool)

(assert (=> bm!11251 (= call!11254 call!11252)))

(declare-fun b!106337 () Bool)

(assert (=> b!106337 (= e!69198 call!11254)))

(declare-fun b!106338 () Bool)

(assert (=> b!106338 (= e!69195 e!69197)))

(assert (=> b!106338 (= c!18574 (and ((_ is Cons!1638) (t!5737 (toList!808 (+!146 lt!53824 lt!53817)))) (= (_1!1215 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53817))))) (_1!1215 lt!53818))))))

(assert (= (and d!29107 c!18572) b!106332))

(assert (= (and d!29107 (not c!18572)) b!106338))

(assert (= (and b!106338 c!18574) b!106331))

(assert (= (and b!106338 (not c!18574)) b!106330))

(assert (= (and b!106330 c!18573) b!106337))

(assert (= (and b!106330 (not c!18573)) b!106329))

(assert (= (or b!106337 b!106329) bm!11251))

(assert (= (or b!106331 bm!11251) bm!11249))

(assert (= (or b!106332 bm!11249) bm!11250))

(assert (= (and bm!11250 c!18575) b!106335))

(assert (= (and bm!11250 (not c!18575)) b!106334))

(assert (= (and d!29107 res!52859) b!106333))

(assert (= (and b!106333 res!52860) b!106336))

(declare-fun m!118865 () Bool)

(assert (=> b!106336 m!118865))

(declare-fun m!118867 () Bool)

(assert (=> bm!11250 m!118867))

(declare-fun m!118869 () Bool)

(assert (=> b!106333 m!118869))

(declare-fun m!118871 () Bool)

(assert (=> b!106335 m!118871))

(declare-fun m!118873 () Bool)

(assert (=> d!29107 m!118873))

(declare-fun m!118875 () Bool)

(assert (=> d!29107 m!118875))

(assert (=> b!106055 d!29107))

(declare-fun b!106340 () Bool)

(declare-fun e!69200 () Option!161)

(declare-fun e!69201 () Option!161)

(assert (=> b!106340 (= e!69200 e!69201)))

(declare-fun c!18577 () Bool)

(assert (=> b!106340 (= c!18577 (and ((_ is Cons!1638) (toList!808 lt!54341)) (not (= (_1!1215 (h!2235 (toList!808 lt!54341))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!18576 () Bool)

(declare-fun d!29109 () Bool)

(assert (=> d!29109 (= c!18576 (and ((_ is Cons!1638) (toList!808 lt!54341)) (= (_1!1215 (h!2235 (toList!808 lt!54341))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29109 (= (getValueByKey!155 (toList!808 lt!54341) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!69200)))

(declare-fun b!106341 () Bool)

(assert (=> b!106341 (= e!69201 (getValueByKey!155 (t!5737 (toList!808 lt!54341)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!106339 () Bool)

(assert (=> b!106339 (= e!69200 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54341)))))))

(declare-fun b!106342 () Bool)

(assert (=> b!106342 (= e!69201 None!159)))

(assert (= (and d!29109 c!18576) b!106339))

(assert (= (and d!29109 (not c!18576)) b!106340))

(assert (= (and b!106340 c!18577) b!106341))

(assert (= (and b!106340 (not c!18577)) b!106342))

(declare-fun m!118877 () Bool)

(assert (=> b!106341 m!118877))

(assert (=> b!106089 d!29109))

(declare-fun d!29111 () Bool)

(assert (=> d!29111 (= (apply!98 lt!54318 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1342 (getValueByKey!155 (toList!808 lt!54318) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4356 () Bool)

(assert (= bs!4356 d!29111))

(declare-fun m!118879 () Bool)

(assert (=> bs!4356 m!118879))

(assert (=> bs!4356 m!118879))

(declare-fun m!118881 () Bool)

(assert (=> bs!4356 m!118881))

(assert (=> b!106064 d!29111))

(assert (=> b!105974 d!29061))

(declare-fun d!29113 () Bool)

(declare-fun res!52861 () Bool)

(declare-fun e!69202 () Bool)

(assert (=> d!29113 (=> res!52861 e!69202)))

(assert (=> d!29113 (= res!52861 (and ((_ is Cons!1638) lt!54062) (= (_1!1215 (h!2235 lt!54062)) (_1!1215 lt!53818))))))

(assert (=> d!29113 (= (containsKey!159 lt!54062 (_1!1215 lt!53818)) e!69202)))

(declare-fun b!106343 () Bool)

(declare-fun e!69203 () Bool)

(assert (=> b!106343 (= e!69202 e!69203)))

(declare-fun res!52862 () Bool)

(assert (=> b!106343 (=> (not res!52862) (not e!69203))))

(assert (=> b!106343 (= res!52862 (and (or (not ((_ is Cons!1638) lt!54062)) (bvsle (_1!1215 (h!2235 lt!54062)) (_1!1215 lt!53818))) ((_ is Cons!1638) lt!54062) (bvslt (_1!1215 (h!2235 lt!54062)) (_1!1215 lt!53818))))))

(declare-fun b!106344 () Bool)

(assert (=> b!106344 (= e!69203 (containsKey!159 (t!5737 lt!54062) (_1!1215 lt!53818)))))

(assert (= (and d!29113 (not res!52861)) b!106343))

(assert (= (and b!106343 res!52862) b!106344))

(declare-fun m!118883 () Bool)

(assert (=> b!106344 m!118883))

(assert (=> b!106047 d!29113))

(assert (=> d!28829 d!28817))

(declare-fun d!29115 () Bool)

(assert (=> d!29115 (= (isDefined!109 (getValueByKey!155 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938))))) (not (isEmpty!376 (getValueByKey!155 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))))

(declare-fun bs!4357 () Bool)

(assert (= bs!4357 d!29115))

(assert (=> bs!4357 m!117917))

(declare-fun m!118885 () Bool)

(assert (=> bs!4357 m!118885))

(assert (=> b!105785 d!29115))

(declare-fun b!106346 () Bool)

(declare-fun e!69204 () Option!161)

(declare-fun e!69205 () Option!161)

(assert (=> b!106346 (= e!69204 e!69205)))

(declare-fun c!18579 () Bool)

(assert (=> b!106346 (= c!18579 (and ((_ is Cons!1638) (toList!808 call!11138)) (not (= (_1!1215 (h!2235 (toList!808 call!11138))) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))))

(declare-fun d!29117 () Bool)

(declare-fun c!18578 () Bool)

(assert (=> d!29117 (= c!18578 (and ((_ is Cons!1638) (toList!808 call!11138)) (= (_1!1215 (h!2235 (toList!808 call!11138))) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938))))))))

(assert (=> d!29117 (= (getValueByKey!155 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))) e!69204)))

(declare-fun b!106347 () Bool)

(assert (=> b!106347 (= e!69205 (getValueByKey!155 (t!5737 (toList!808 call!11138)) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))

(declare-fun b!106345 () Bool)

(assert (=> b!106345 (= e!69204 (Some!160 (_2!1215 (h!2235 (toList!808 call!11138)))))))

(declare-fun b!106348 () Bool)

(assert (=> b!106348 (= e!69205 None!159)))

(assert (= (and d!29117 c!18578) b!106345))

(assert (= (and d!29117 (not c!18578)) b!106346))

(assert (= (and b!106346 c!18579) b!106347))

(assert (= (and b!106346 (not c!18579)) b!106348))

(declare-fun m!118887 () Bool)

(assert (=> b!106347 m!118887))

(assert (=> b!105785 d!29117))

(declare-fun d!29119 () Bool)

(declare-fun lt!54501 () Bool)

(assert (=> d!29119 (= lt!54501 (select (content!108 (t!5737 (toList!808 lt!54038))) lt!53817))))

(declare-fun e!69206 () Bool)

(assert (=> d!29119 (= lt!54501 e!69206)))

(declare-fun res!52864 () Bool)

(assert (=> d!29119 (=> (not res!52864) (not e!69206))))

(assert (=> d!29119 (= res!52864 ((_ is Cons!1638) (t!5737 (toList!808 lt!54038))))))

(assert (=> d!29119 (= (contains!830 (t!5737 (toList!808 lt!54038)) lt!53817) lt!54501)))

(declare-fun b!106349 () Bool)

(declare-fun e!69207 () Bool)

(assert (=> b!106349 (= e!69206 e!69207)))

(declare-fun res!52863 () Bool)

(assert (=> b!106349 (=> res!52863 e!69207)))

(assert (=> b!106349 (= res!52863 (= (h!2235 (t!5737 (toList!808 lt!54038))) lt!53817))))

(declare-fun b!106350 () Bool)

(assert (=> b!106350 (= e!69207 (contains!830 (t!5737 (t!5737 (toList!808 lt!54038))) lt!53817))))

(assert (= (and d!29119 res!52864) b!106349))

(assert (= (and b!106349 (not res!52863)) b!106350))

(declare-fun m!118889 () Bool)

(assert (=> d!29119 m!118889))

(declare-fun m!118891 () Bool)

(assert (=> d!29119 m!118891))

(declare-fun m!118893 () Bool)

(assert (=> b!106350 m!118893))

(assert (=> b!105735 d!29119))

(declare-fun d!29121 () Bool)

(declare-fun res!52865 () Bool)

(declare-fun e!69208 () Bool)

(assert (=> d!29121 (=> res!52865 e!69208)))

(assert (=> d!29121 (= res!52865 (and ((_ is Cons!1638) (toList!808 lt!54031)) (= (_1!1215 (h!2235 (toList!808 lt!54031))) (_1!1215 lt!53818))))))

(assert (=> d!29121 (= (containsKey!159 (toList!808 lt!54031) (_1!1215 lt!53818)) e!69208)))

(declare-fun b!106351 () Bool)

(declare-fun e!69209 () Bool)

(assert (=> b!106351 (= e!69208 e!69209)))

(declare-fun res!52866 () Bool)

(assert (=> b!106351 (=> (not res!52866) (not e!69209))))

(assert (=> b!106351 (= res!52866 (and (or (not ((_ is Cons!1638) (toList!808 lt!54031))) (bvsle (_1!1215 (h!2235 (toList!808 lt!54031))) (_1!1215 lt!53818))) ((_ is Cons!1638) (toList!808 lt!54031)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54031))) (_1!1215 lt!53818))))))

(declare-fun b!106352 () Bool)

(assert (=> b!106352 (= e!69209 (containsKey!159 (t!5737 (toList!808 lt!54031)) (_1!1215 lt!53818)))))

(assert (= (and d!29121 (not res!52865)) b!106351))

(assert (= (and b!106351 res!52866) b!106352))

(declare-fun m!118895 () Bool)

(assert (=> b!106352 m!118895))

(assert (=> d!29015 d!29121))

(assert (=> bm!11242 d!28989))

(declare-fun d!29123 () Bool)

(assert (=> d!29123 (= (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!376 (getValueByKey!155 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4358 () Bool)

(assert (= bs!4358 d!29123))

(assert (=> bs!4358 m!117999))

(declare-fun m!118897 () Bool)

(assert (=> bs!4358 m!118897))

(assert (=> b!105851 d!29123))

(declare-fun b!106354 () Bool)

(declare-fun e!69210 () Option!161)

(declare-fun e!69211 () Option!161)

(assert (=> b!106354 (= e!69210 e!69211)))

(declare-fun c!18581 () Bool)

(assert (=> b!106354 (= c!18581 (and ((_ is Cons!1638) (toList!808 lt!54058)) (not (= (_1!1215 (h!2235 (toList!808 lt!54058))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!29125 () Bool)

(declare-fun c!18580 () Bool)

(assert (=> d!29125 (= c!18580 (and ((_ is Cons!1638) (toList!808 lt!54058)) (= (_1!1215 (h!2235 (toList!808 lt!54058))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29125 (= (getValueByKey!155 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000) e!69210)))

(declare-fun b!106355 () Bool)

(assert (=> b!106355 (= e!69211 (getValueByKey!155 (t!5737 (toList!808 lt!54058)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106353 () Bool)

(assert (=> b!106353 (= e!69210 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54058)))))))

(declare-fun b!106356 () Bool)

(assert (=> b!106356 (= e!69211 None!159)))

(assert (= (and d!29125 c!18580) b!106353))

(assert (= (and d!29125 (not c!18580)) b!106354))

(assert (= (and b!106354 c!18581) b!106355))

(assert (= (and b!106354 (not c!18581)) b!106356))

(declare-fun m!118899 () Bool)

(assert (=> b!106355 m!118899))

(assert (=> b!105851 d!29125))

(declare-fun d!29127 () Bool)

(declare-fun e!69213 () Bool)

(assert (=> d!29127 e!69213))

(declare-fun res!52867 () Bool)

(assert (=> d!29127 (=> res!52867 e!69213)))

(declare-fun lt!54502 () Bool)

(assert (=> d!29127 (= res!52867 (not lt!54502))))

(declare-fun lt!54505 () Bool)

(assert (=> d!29127 (= lt!54502 lt!54505)))

(declare-fun lt!54504 () Unit!3250)

(declare-fun e!69212 () Unit!3250)

(assert (=> d!29127 (= lt!54504 e!69212)))

(declare-fun c!18582 () Bool)

(assert (=> d!29127 (= c!18582 lt!54505)))

(assert (=> d!29127 (= lt!54505 (containsKey!159 (toList!808 lt!54318) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29127 (= (contains!829 lt!54318 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54502)))

(declare-fun b!106357 () Bool)

(declare-fun lt!54503 () Unit!3250)

(assert (=> b!106357 (= e!69212 lt!54503)))

(assert (=> b!106357 (= lt!54503 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54318) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106357 (isDefined!109 (getValueByKey!155 (toList!808 lt!54318) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106358 () Bool)

(declare-fun Unit!3288 () Unit!3250)

(assert (=> b!106358 (= e!69212 Unit!3288)))

(declare-fun b!106359 () Bool)

(assert (=> b!106359 (= e!69213 (isDefined!109 (getValueByKey!155 (toList!808 lt!54318) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29127 c!18582) b!106357))

(assert (= (and d!29127 (not c!18582)) b!106358))

(assert (= (and d!29127 (not res!52867)) b!106359))

(declare-fun m!118901 () Bool)

(assert (=> d!29127 m!118901))

(declare-fun m!118903 () Bool)

(assert (=> b!106357 m!118903))

(declare-fun m!118905 () Bool)

(assert (=> b!106357 m!118905))

(assert (=> b!106357 m!118905))

(declare-fun m!118907 () Bool)

(assert (=> b!106357 m!118907))

(assert (=> b!106359 m!118905))

(assert (=> b!106359 m!118905))

(assert (=> b!106359 m!118907))

(assert (=> bm!11221 d!29127))

(declare-fun d!29129 () Bool)

(assert (=> d!29129 (= (isDefined!109 (getValueByKey!155 (toList!808 lt!54063) (_1!1215 lt!53818))) (not (isEmpty!376 (getValueByKey!155 (toList!808 lt!54063) (_1!1215 lt!53818)))))))

(declare-fun bs!4359 () Bool)

(assert (= bs!4359 d!29129))

(assert (=> bs!4359 m!117803))

(declare-fun m!118909 () Bool)

(assert (=> bs!4359 m!118909))

(assert (=> b!106042 d!29129))

(assert (=> b!106042 d!28875))

(declare-fun d!29131 () Bool)

(assert (=> d!29131 (= (apply!98 lt!54229 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1342 (getValueByKey!155 (toList!808 lt!54229) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4360 () Bool)

(assert (= bs!4360 d!29131))

(assert (=> bs!4360 m!117859))

(declare-fun m!118911 () Bool)

(assert (=> bs!4360 m!118911))

(assert (=> bs!4360 m!118911))

(declare-fun m!118913 () Bool)

(assert (=> bs!4360 m!118913))

(assert (=> b!105987 d!29131))

(declare-fun d!29133 () Bool)

(declare-fun c!18583 () Bool)

(assert (=> d!29133 (= c!18583 ((_ is ValueCellFull!996) (select (arr!2063 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!69214 () V!3219)

(assert (=> d!29133 (= (get!1339 (select (arr!2063 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69214)))

(declare-fun b!106360 () Bool)

(assert (=> b!106360 (= e!69214 (get!1340 (select (arr!2063 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106361 () Bool)

(assert (=> b!106361 (= e!69214 (get!1341 (select (arr!2063 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29133 c!18583) b!106360))

(assert (= (and d!29133 (not c!18583)) b!106361))

(assert (=> b!106360 m!118207))

(assert (=> b!106360 m!118103))

(declare-fun m!118915 () Bool)

(assert (=> b!106360 m!118915))

(assert (=> b!106361 m!118207))

(assert (=> b!106361 m!118103))

(declare-fun m!118917 () Bool)

(assert (=> b!106361 m!118917))

(assert (=> b!105987 d!29133))

(declare-fun d!29135 () Bool)

(declare-fun e!69216 () Bool)

(assert (=> d!29135 e!69216))

(declare-fun res!52868 () Bool)

(assert (=> d!29135 (=> res!52868 e!69216)))

(declare-fun lt!54506 () Bool)

(assert (=> d!29135 (= res!52868 (not lt!54506))))

(declare-fun lt!54509 () Bool)

(assert (=> d!29135 (= lt!54506 lt!54509)))

(declare-fun lt!54508 () Unit!3250)

(declare-fun e!69215 () Unit!3250)

(assert (=> d!29135 (= lt!54508 e!69215)))

(declare-fun c!18584 () Bool)

(assert (=> d!29135 (= c!18584 lt!54509)))

(assert (=> d!29135 (= lt!54509 (containsKey!159 (toList!808 lt!54298) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!29135 (= (contains!829 lt!54298 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54506)))

(declare-fun b!106362 () Bool)

(declare-fun lt!54507 () Unit!3250)

(assert (=> b!106362 (= e!69215 lt!54507)))

(assert (=> b!106362 (= lt!54507 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54298) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> b!106362 (isDefined!109 (getValueByKey!155 (toList!808 lt!54298) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106363 () Bool)

(declare-fun Unit!3289 () Unit!3250)

(assert (=> b!106363 (= e!69215 Unit!3289)))

(declare-fun b!106364 () Bool)

(assert (=> b!106364 (= e!69216 (isDefined!109 (getValueByKey!155 (toList!808 lt!54298) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29135 c!18584) b!106362))

(assert (= (and d!29135 (not c!18584)) b!106363))

(assert (= (and d!29135 (not res!52868)) b!106364))

(declare-fun m!118919 () Bool)

(assert (=> d!29135 m!118919))

(declare-fun m!118921 () Bool)

(assert (=> b!106362 m!118921))

(assert (=> b!106362 m!118427))

(assert (=> b!106362 m!118427))

(declare-fun m!118923 () Bool)

(assert (=> b!106362 m!118923))

(assert (=> b!106364 m!118427))

(assert (=> b!106364 m!118427))

(assert (=> b!106364 m!118923))

(assert (=> d!28969 d!29135))

(declare-fun b!106366 () Bool)

(declare-fun e!69217 () Option!161)

(declare-fun e!69218 () Option!161)

(assert (=> b!106366 (= e!69217 e!69218)))

(declare-fun c!18586 () Bool)

(assert (=> b!106366 (= c!18586 (and ((_ is Cons!1638) lt!54297) (not (= (_1!1215 (h!2235 lt!54297)) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun d!29137 () Bool)

(declare-fun c!18585 () Bool)

(assert (=> d!29137 (= c!18585 (and ((_ is Cons!1638) lt!54297) (= (_1!1215 (h!2235 lt!54297)) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29137 (= (getValueByKey!155 lt!54297 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69217)))

(declare-fun b!106367 () Bool)

(assert (=> b!106367 (= e!69218 (getValueByKey!155 (t!5737 lt!54297) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106365 () Bool)

(assert (=> b!106365 (= e!69217 (Some!160 (_2!1215 (h!2235 lt!54297))))))

(declare-fun b!106368 () Bool)

(assert (=> b!106368 (= e!69218 None!159)))

(assert (= (and d!29137 c!18585) b!106365))

(assert (= (and d!29137 (not c!18585)) b!106366))

(assert (= (and b!106366 c!18586) b!106367))

(assert (= (and b!106366 (not c!18586)) b!106368))

(declare-fun m!118925 () Bool)

(assert (=> b!106367 m!118925))

(assert (=> d!28969 d!29137))

(declare-fun d!29139 () Bool)

(assert (=> d!29139 (= (getValueByKey!155 lt!54297 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54510 () Unit!3250)

(assert (=> d!29139 (= lt!54510 (choose!666 lt!54297 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun e!69219 () Bool)

(assert (=> d!29139 e!69219))

(declare-fun res!52869 () Bool)

(assert (=> d!29139 (=> (not res!52869) (not e!69219))))

(assert (=> d!29139 (= res!52869 (isStrictlySorted!304 lt!54297))))

(assert (=> d!29139 (= (lemmaContainsTupThenGetReturnValue!73 lt!54297 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54510)))

(declare-fun b!106369 () Bool)

(declare-fun res!52870 () Bool)

(assert (=> b!106369 (=> (not res!52870) (not e!69219))))

(assert (=> b!106369 (= res!52870 (containsKey!159 lt!54297 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106370 () Bool)

(assert (=> b!106370 (= e!69219 (contains!830 lt!54297 (tuple2!2411 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29139 res!52869) b!106369))

(assert (= (and b!106369 res!52870) b!106370))

(assert (=> d!29139 m!118421))

(declare-fun m!118927 () Bool)

(assert (=> d!29139 m!118927))

(declare-fun m!118929 () Bool)

(assert (=> d!29139 m!118929))

(declare-fun m!118931 () Bool)

(assert (=> b!106369 m!118931))

(declare-fun m!118933 () Bool)

(assert (=> b!106370 m!118933))

(assert (=> d!28969 d!29139))

(declare-fun d!29141 () Bool)

(declare-fun e!69221 () Bool)

(assert (=> d!29141 e!69221))

(declare-fun res!52871 () Bool)

(assert (=> d!29141 (=> (not res!52871) (not e!69221))))

(declare-fun lt!54511 () List!1642)

(assert (=> d!29141 (= res!52871 (isStrictlySorted!304 lt!54511))))

(declare-fun e!69220 () List!1642)

(assert (=> d!29141 (= lt!54511 e!69220)))

(declare-fun c!18587 () Bool)

(assert (=> d!29141 (= c!18587 (and ((_ is Cons!1638) (toList!808 lt!54017)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54017))) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29141 (isStrictlySorted!304 (toList!808 lt!54017))))

(assert (=> d!29141 (= (insertStrictlySorted!75 (toList!808 lt!54017) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54511)))

(declare-fun b!106371 () Bool)

(declare-fun e!69223 () List!1642)

(declare-fun call!11257 () List!1642)

(assert (=> b!106371 (= e!69223 call!11257)))

(declare-fun c!18588 () Bool)

(declare-fun b!106372 () Bool)

(assert (=> b!106372 (= c!18588 (and ((_ is Cons!1638) (toList!808 lt!54017)) (bvsgt (_1!1215 (h!2235 (toList!808 lt!54017))) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun e!69222 () List!1642)

(assert (=> b!106372 (= e!69222 e!69223)))

(declare-fun b!106373 () Bool)

(declare-fun call!11255 () List!1642)

(assert (=> b!106373 (= e!69222 call!11255)))

(declare-fun b!106374 () Bool)

(declare-fun call!11256 () List!1642)

(assert (=> b!106374 (= e!69220 call!11256)))

(declare-fun b!106375 () Bool)

(declare-fun res!52872 () Bool)

(assert (=> b!106375 (=> (not res!52872) (not e!69221))))

(assert (=> b!106375 (= res!52872 (containsKey!159 lt!54511 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun bm!11252 () Bool)

(assert (=> bm!11252 (= call!11255 call!11256)))

(declare-fun e!69224 () List!1642)

(declare-fun b!106376 () Bool)

(declare-fun c!18589 () Bool)

(assert (=> b!106376 (= e!69224 (ite c!18589 (t!5737 (toList!808 lt!54017)) (ite c!18588 (Cons!1638 (h!2235 (toList!808 lt!54017)) (t!5737 (toList!808 lt!54017))) Nil!1639)))))

(declare-fun bm!11253 () Bool)

(assert (=> bm!11253 (= call!11256 ($colon$colon!80 e!69224 (ite c!18587 (h!2235 (toList!808 lt!54017)) (tuple2!2411 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun c!18590 () Bool)

(assert (=> bm!11253 (= c!18590 c!18587)))

(declare-fun b!106377 () Bool)

(assert (=> b!106377 (= e!69224 (insertStrictlySorted!75 (t!5737 (toList!808 lt!54017)) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106378 () Bool)

(assert (=> b!106378 (= e!69221 (contains!830 lt!54511 (tuple2!2411 (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun bm!11254 () Bool)

(assert (=> bm!11254 (= call!11257 call!11255)))

(declare-fun b!106379 () Bool)

(assert (=> b!106379 (= e!69223 call!11257)))

(declare-fun b!106380 () Bool)

(assert (=> b!106380 (= e!69220 e!69222)))

(assert (=> b!106380 (= c!18589 (and ((_ is Cons!1638) (toList!808 lt!54017)) (= (_1!1215 (h!2235 (toList!808 lt!54017))) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29141 c!18587) b!106374))

(assert (= (and d!29141 (not c!18587)) b!106380))

(assert (= (and b!106380 c!18589) b!106373))

(assert (= (and b!106380 (not c!18589)) b!106372))

(assert (= (and b!106372 c!18588) b!106379))

(assert (= (and b!106372 (not c!18588)) b!106371))

(assert (= (or b!106379 b!106371) bm!11254))

(assert (= (or b!106373 bm!11254) bm!11252))

(assert (= (or b!106374 bm!11252) bm!11253))

(assert (= (and bm!11253 c!18590) b!106377))

(assert (= (and bm!11253 (not c!18590)) b!106376))

(assert (= (and d!29141 res!52871) b!106375))

(assert (= (and b!106375 res!52872) b!106378))

(declare-fun m!118935 () Bool)

(assert (=> b!106378 m!118935))

(declare-fun m!118937 () Bool)

(assert (=> bm!11253 m!118937))

(declare-fun m!118939 () Bool)

(assert (=> b!106375 m!118939))

(declare-fun m!118941 () Bool)

(assert (=> b!106377 m!118941))

(declare-fun m!118943 () Bool)

(assert (=> d!29141 m!118943))

(declare-fun m!118945 () Bool)

(assert (=> d!29141 m!118945))

(assert (=> d!28969 d!29141))

(declare-fun d!29143 () Bool)

(declare-fun e!69226 () Bool)

(assert (=> d!29143 e!69226))

(declare-fun res!52873 () Bool)

(assert (=> d!29143 (=> res!52873 e!69226)))

(declare-fun lt!54512 () Bool)

(assert (=> d!29143 (= res!52873 (not lt!54512))))

(declare-fun lt!54515 () Bool)

(assert (=> d!29143 (= lt!54512 lt!54515)))

(declare-fun lt!54514 () Unit!3250)

(declare-fun e!69225 () Unit!3250)

(assert (=> d!29143 (= lt!54514 e!69225)))

(declare-fun c!18591 () Bool)

(assert (=> d!29143 (= c!18591 lt!54515)))

(assert (=> d!29143 (= lt!54515 (containsKey!159 (toList!808 lt!54149) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!29143 (= (contains!829 lt!54149 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) lt!54512)))

(declare-fun b!106381 () Bool)

(declare-fun lt!54513 () Unit!3250)

(assert (=> b!106381 (= e!69225 lt!54513)))

(assert (=> b!106381 (= lt!54513 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54149) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> b!106381 (isDefined!109 (getValueByKey!155 (toList!808 lt!54149) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106382 () Bool)

(declare-fun Unit!3290 () Unit!3250)

(assert (=> b!106382 (= e!69225 Unit!3290)))

(declare-fun b!106383 () Bool)

(assert (=> b!106383 (= e!69226 (isDefined!109 (getValueByKey!155 (toList!808 lt!54149) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (= (and d!29143 c!18591) b!106381))

(assert (= (and d!29143 (not c!18591)) b!106382))

(assert (= (and d!29143 (not res!52873)) b!106383))

(declare-fun m!118947 () Bool)

(assert (=> d!29143 m!118947))

(declare-fun m!118949 () Bool)

(assert (=> b!106381 m!118949))

(assert (=> b!106381 m!118047))

(assert (=> b!106381 m!118047))

(declare-fun m!118951 () Bool)

(assert (=> b!106381 m!118951))

(assert (=> b!106383 m!118047))

(assert (=> b!106383 m!118047))

(assert (=> b!106383 m!118951))

(assert (=> d!28889 d!29143))

(declare-fun b!106385 () Bool)

(declare-fun e!69227 () Option!161)

(declare-fun e!69228 () Option!161)

(assert (=> b!106385 (= e!69227 e!69228)))

(declare-fun c!18593 () Bool)

(assert (=> b!106385 (= c!18593 (and ((_ is Cons!1638) lt!54148) (not (= (_1!1215 (h!2235 lt!54148)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun d!29145 () Bool)

(declare-fun c!18592 () Bool)

(assert (=> d!29145 (= c!18592 (and ((_ is Cons!1638) lt!54148) (= (_1!1215 (h!2235 lt!54148)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!29145 (= (getValueByKey!155 lt!54148 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) e!69227)))

(declare-fun b!106386 () Bool)

(assert (=> b!106386 (= e!69228 (getValueByKey!155 (t!5737 lt!54148) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106384 () Bool)

(assert (=> b!106384 (= e!69227 (Some!160 (_2!1215 (h!2235 lt!54148))))))

(declare-fun b!106387 () Bool)

(assert (=> b!106387 (= e!69228 None!159)))

(assert (= (and d!29145 c!18592) b!106384))

(assert (= (and d!29145 (not c!18592)) b!106385))

(assert (= (and b!106385 c!18593) b!106386))

(assert (= (and b!106385 (not c!18593)) b!106387))

(declare-fun m!118953 () Bool)

(assert (=> b!106386 m!118953))

(assert (=> d!28889 d!29145))

(declare-fun d!29147 () Bool)

(assert (=> d!29147 (= (getValueByKey!155 lt!54148 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun lt!54516 () Unit!3250)

(assert (=> d!29147 (= lt!54516 (choose!666 lt!54148 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun e!69229 () Bool)

(assert (=> d!29147 e!69229))

(declare-fun res!52874 () Bool)

(assert (=> d!29147 (=> (not res!52874) (not e!69229))))

(assert (=> d!29147 (= res!52874 (isStrictlySorted!304 lt!54148))))

(assert (=> d!29147 (= (lemmaContainsTupThenGetReturnValue!73 lt!54148 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) lt!54516)))

(declare-fun b!106388 () Bool)

(declare-fun res!52875 () Bool)

(assert (=> b!106388 (=> (not res!52875) (not e!69229))))

(assert (=> b!106388 (= res!52875 (containsKey!159 lt!54148 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106389 () Bool)

(assert (=> b!106389 (= e!69229 (contains!830 lt!54148 (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (= (and d!29147 res!52874) b!106388))

(assert (= (and b!106388 res!52875) b!106389))

(assert (=> d!29147 m!118041))

(declare-fun m!118955 () Bool)

(assert (=> d!29147 m!118955))

(declare-fun m!118957 () Bool)

(assert (=> d!29147 m!118957))

(declare-fun m!118959 () Bool)

(assert (=> b!106388 m!118959))

(declare-fun m!118961 () Bool)

(assert (=> b!106389 m!118961))

(assert (=> d!28889 d!29147))

(declare-fun d!29149 () Bool)

(declare-fun e!69231 () Bool)

(assert (=> d!29149 e!69231))

(declare-fun res!52876 () Bool)

(assert (=> d!29149 (=> (not res!52876) (not e!69231))))

(declare-fun lt!54517 () List!1642)

(assert (=> d!29149 (= res!52876 (isStrictlySorted!304 lt!54517))))

(declare-fun e!69230 () List!1642)

(assert (=> d!29149 (= lt!54517 e!69230)))

(declare-fun c!18594 () Bool)

(assert (=> d!29149 (= c!18594 (and ((_ is Cons!1638) (toList!808 lt!53824)) (bvslt (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!29149 (isStrictlySorted!304 (toList!808 lt!53824))))

(assert (=> d!29149 (= (insertStrictlySorted!75 (toList!808 lt!53824) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) lt!54517)))

(declare-fun b!106390 () Bool)

(declare-fun e!69233 () List!1642)

(declare-fun call!11260 () List!1642)

(assert (=> b!106390 (= e!69233 call!11260)))

(declare-fun c!18595 () Bool)

(declare-fun b!106391 () Bool)

(assert (=> b!106391 (= c!18595 (and ((_ is Cons!1638) (toList!808 lt!53824)) (bvsgt (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun e!69232 () List!1642)

(assert (=> b!106391 (= e!69232 e!69233)))

(declare-fun b!106392 () Bool)

(declare-fun call!11258 () List!1642)

(assert (=> b!106392 (= e!69232 call!11258)))

(declare-fun b!106393 () Bool)

(declare-fun call!11259 () List!1642)

(assert (=> b!106393 (= e!69230 call!11259)))

(declare-fun b!106394 () Bool)

(declare-fun res!52877 () Bool)

(assert (=> b!106394 (=> (not res!52877) (not e!69231))))

(assert (=> b!106394 (= res!52877 (containsKey!159 lt!54517 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun bm!11255 () Bool)

(assert (=> bm!11255 (= call!11258 call!11259)))

(declare-fun c!18596 () Bool)

(declare-fun b!106395 () Bool)

(declare-fun e!69234 () List!1642)

(assert (=> b!106395 (= e!69234 (ite c!18596 (t!5737 (toList!808 lt!53824)) (ite c!18595 (Cons!1638 (h!2235 (toList!808 lt!53824)) (t!5737 (toList!808 lt!53824))) Nil!1639)))))

(declare-fun bm!11256 () Bool)

(assert (=> bm!11256 (= call!11259 ($colon$colon!80 e!69234 (ite c!18594 (h!2235 (toList!808 lt!53824)) (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun c!18597 () Bool)

(assert (=> bm!11256 (= c!18597 c!18594)))

(declare-fun b!106396 () Bool)

(assert (=> b!106396 (= e!69234 (insertStrictlySorted!75 (t!5737 (toList!808 lt!53824)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106397 () Bool)

(assert (=> b!106397 (= e!69231 (contains!830 lt!54517 (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun bm!11257 () Bool)

(assert (=> bm!11257 (= call!11260 call!11258)))

(declare-fun b!106398 () Bool)

(assert (=> b!106398 (= e!69233 call!11260)))

(declare-fun b!106399 () Bool)

(assert (=> b!106399 (= e!69230 e!69232)))

(assert (=> b!106399 (= c!18596 (and ((_ is Cons!1638) (toList!808 lt!53824)) (= (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (= (and d!29149 c!18594) b!106393))

(assert (= (and d!29149 (not c!18594)) b!106399))

(assert (= (and b!106399 c!18596) b!106392))

(assert (= (and b!106399 (not c!18596)) b!106391))

(assert (= (and b!106391 c!18595) b!106398))

(assert (= (and b!106391 (not c!18595)) b!106390))

(assert (= (or b!106398 b!106390) bm!11257))

(assert (= (or b!106392 bm!11257) bm!11255))

(assert (= (or b!106393 bm!11255) bm!11256))

(assert (= (and bm!11256 c!18597) b!106396))

(assert (= (and bm!11256 (not c!18597)) b!106395))

(assert (= (and d!29149 res!52876) b!106394))

(assert (= (and b!106394 res!52877) b!106397))

(declare-fun m!118963 () Bool)

(assert (=> b!106397 m!118963))

(declare-fun m!118965 () Bool)

(assert (=> bm!11256 m!118965))

(declare-fun m!118967 () Bool)

(assert (=> b!106394 m!118967))

(declare-fun m!118969 () Bool)

(assert (=> b!106396 m!118969))

(declare-fun m!118971 () Bool)

(assert (=> d!29149 m!118971))

(assert (=> d!29149 m!118599))

(assert (=> d!28889 d!29149))

(declare-fun d!29151 () Bool)

(declare-fun res!52878 () Bool)

(declare-fun e!69235 () Bool)

(assert (=> d!29151 (=> res!52878 e!69235)))

(assert (=> d!29151 (= res!52878 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)))) (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))))) lt!54060)))))

(assert (=> d!29151 (= (containsKey!159 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060) e!69235)))

(declare-fun b!106400 () Bool)

(declare-fun e!69236 () Bool)

(assert (=> b!106400 (= e!69235 e!69236)))

(declare-fun res!52879 () Bool)

(assert (=> b!106400 (=> (not res!52879) (not e!69236))))

(assert (=> b!106400 (= res!52879 (and (or (not ((_ is Cons!1638) (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))))) (bvsle (_1!1215 (h!2235 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))))) lt!54060)) ((_ is Cons!1638) (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)))) (bvslt (_1!1215 (h!2235 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))))) lt!54060)))))

(declare-fun b!106401 () Bool)

(assert (=> b!106401 (= e!69236 (containsKey!159 (t!5737 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)))) lt!54060))))

(assert (= (and d!29151 (not res!52878)) b!106400))

(assert (= (and b!106400 res!52879) b!106401))

(declare-fun m!118973 () Bool)

(assert (=> b!106401 m!118973))

(assert (=> d!28983 d!29151))

(declare-fun b!106402 () Bool)

(declare-fun e!69240 () Bool)

(declare-fun call!11261 () Bool)

(assert (=> b!106402 (= e!69240 call!11261)))

(declare-fun b!106403 () Bool)

(declare-fun e!69238 () Bool)

(assert (=> b!106403 (= e!69238 e!69240)))

(declare-fun c!18598 () Bool)

(assert (=> b!106403 (= c!18598 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!106404 () Bool)

(declare-fun e!69237 () Bool)

(assert (=> b!106404 (= e!69237 e!69238)))

(declare-fun res!52882 () Bool)

(assert (=> b!106404 (=> (not res!52882) (not e!69238))))

(declare-fun e!69239 () Bool)

(assert (=> b!106404 (= res!52882 (not e!69239))))

(declare-fun res!52881 () Bool)

(assert (=> b!106404 (=> (not res!52881) (not e!69239))))

(assert (=> b!106404 (= res!52881 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!106405 () Bool)

(assert (=> b!106405 (= e!69239 (contains!831 (ite c!18423 (Cons!1639 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) Nil!1640) Nil!1640) (select (arr!2062 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!29153 () Bool)

(declare-fun res!52880 () Bool)

(assert (=> d!29153 (=> res!52880 e!69237)))

(assert (=> d!29153 (= res!52880 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!29153 (= (arrayNoDuplicates!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18423 (Cons!1639 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) Nil!1640) Nil!1640)) e!69237)))

(declare-fun b!106406 () Bool)

(assert (=> b!106406 (= e!69240 call!11261)))

(declare-fun bm!11258 () Bool)

(assert (=> bm!11258 (= call!11261 (arrayNoDuplicates!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18598 (Cons!1639 (select (arr!2062 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!18423 (Cons!1639 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) Nil!1640) Nil!1640)) (ite c!18423 (Cons!1639 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) Nil!1640) Nil!1640))))))

(assert (= (and d!29153 (not res!52880)) b!106404))

(assert (= (and b!106404 res!52881) b!106405))

(assert (= (and b!106404 res!52882) b!106403))

(assert (= (and b!106403 c!18598) b!106402))

(assert (= (and b!106403 (not c!18598)) b!106406))

(assert (= (or b!106402 b!106406) bm!11258))

(assert (=> b!106403 m!118743))

(assert (=> b!106403 m!118743))

(assert (=> b!106403 m!118745))

(assert (=> b!106404 m!118743))

(assert (=> b!106404 m!118743))

(assert (=> b!106404 m!118745))

(assert (=> b!106405 m!118743))

(assert (=> b!106405 m!118743))

(declare-fun m!118975 () Bool)

(assert (=> b!106405 m!118975))

(assert (=> bm!11258 m!118743))

(declare-fun m!118977 () Bool)

(assert (=> bm!11258 m!118977))

(assert (=> bm!11175 d!29153))

(declare-fun d!29155 () Bool)

(declare-fun res!52883 () Bool)

(declare-fun e!69241 () Bool)

(assert (=> d!29155 (=> res!52883 e!69241)))

(assert (=> d!29155 (= res!52883 (and ((_ is Cons!1638) (toList!808 lt!54067)) (= (_1!1215 (h!2235 (toList!808 lt!54067))) (_1!1215 lt!53817))))))

(assert (=> d!29155 (= (containsKey!159 (toList!808 lt!54067) (_1!1215 lt!53817)) e!69241)))

(declare-fun b!106407 () Bool)

(declare-fun e!69242 () Bool)

(assert (=> b!106407 (= e!69241 e!69242)))

(declare-fun res!52884 () Bool)

(assert (=> b!106407 (=> (not res!52884) (not e!69242))))

(assert (=> b!106407 (= res!52884 (and (or (not ((_ is Cons!1638) (toList!808 lt!54067))) (bvsle (_1!1215 (h!2235 (toList!808 lt!54067))) (_1!1215 lt!53817))) ((_ is Cons!1638) (toList!808 lt!54067)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54067))) (_1!1215 lt!53817))))))

(declare-fun b!106408 () Bool)

(assert (=> b!106408 (= e!69242 (containsKey!159 (t!5737 (toList!808 lt!54067)) (_1!1215 lt!53817)))))

(assert (= (and d!29155 (not res!52883)) b!106407))

(assert (= (and b!106407 res!52884) b!106408))

(declare-fun m!118979 () Bool)

(assert (=> b!106408 m!118979))

(assert (=> d!28899 d!29155))

(declare-fun d!29157 () Bool)

(assert (=> d!29157 (contains!829 (+!146 lt!54186 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16))) lt!54185)))

(declare-fun lt!54518 () Unit!3250)

(assert (=> d!29157 (= lt!54518 (choose!671 lt!54186 lt!54182 (zeroValue!2457 newMap!16) lt!54185))))

(assert (=> d!29157 (contains!829 lt!54186 lt!54185)))

(assert (=> d!29157 (= (addStillContains!74 lt!54186 lt!54182 (zeroValue!2457 newMap!16) lt!54185) lt!54518)))

(declare-fun bs!4361 () Bool)

(assert (= bs!4361 d!29157))

(assert (=> bs!4361 m!118143))

(assert (=> bs!4361 m!118143))

(assert (=> bs!4361 m!118145))

(declare-fun m!118981 () Bool)

(assert (=> bs!4361 m!118981))

(declare-fun m!118983 () Bool)

(assert (=> bs!4361 m!118983))

(assert (=> b!105929 d!29157))

(declare-fun d!29159 () Bool)

(assert (=> d!29159 (= (apply!98 lt!54181 lt!54188) (get!1342 (getValueByKey!155 (toList!808 lt!54181) lt!54188)))))

(declare-fun bs!4362 () Bool)

(assert (= bs!4362 d!29159))

(declare-fun m!118985 () Bool)

(assert (=> bs!4362 m!118985))

(assert (=> bs!4362 m!118985))

(declare-fun m!118987 () Bool)

(assert (=> bs!4362 m!118987))

(assert (=> b!105929 d!29159))

(declare-fun d!29161 () Bool)

(assert (=> d!29161 (= (apply!98 (+!146 lt!54178 (tuple2!2411 lt!54170 (minValue!2457 newMap!16))) lt!54176) (apply!98 lt!54178 lt!54176))))

(declare-fun lt!54519 () Unit!3250)

(assert (=> d!29161 (= lt!54519 (choose!670 lt!54178 lt!54170 (minValue!2457 newMap!16) lt!54176))))

(declare-fun e!69243 () Bool)

(assert (=> d!29161 e!69243))

(declare-fun res!52885 () Bool)

(assert (=> d!29161 (=> (not res!52885) (not e!69243))))

(assert (=> d!29161 (= res!52885 (contains!829 lt!54178 lt!54176))))

(assert (=> d!29161 (= (addApplyDifferent!74 lt!54178 lt!54170 (minValue!2457 newMap!16) lt!54176) lt!54519)))

(declare-fun b!106409 () Bool)

(assert (=> b!106409 (= e!69243 (not (= lt!54176 lt!54170)))))

(assert (= (and d!29161 res!52885) b!106409))

(declare-fun m!118989 () Bool)

(assert (=> d!29161 m!118989))

(assert (=> d!29161 m!118129))

(assert (=> d!29161 m!118131))

(assert (=> d!29161 m!118129))

(assert (=> d!29161 m!118125))

(declare-fun m!118991 () Bool)

(assert (=> d!29161 m!118991))

(assert (=> b!105929 d!29161))

(declare-fun d!29163 () Bool)

(declare-fun e!69244 () Bool)

(assert (=> d!29163 e!69244))

(declare-fun res!52887 () Bool)

(assert (=> d!29163 (=> (not res!52887) (not e!69244))))

(declare-fun lt!54522 () ListLongMap!1585)

(assert (=> d!29163 (= res!52887 (contains!829 lt!54522 (_1!1215 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16)))))))

(declare-fun lt!54521 () List!1642)

(assert (=> d!29163 (= lt!54522 (ListLongMap!1586 lt!54521))))

(declare-fun lt!54523 () Unit!3250)

(declare-fun lt!54520 () Unit!3250)

(assert (=> d!29163 (= lt!54523 lt!54520)))

(assert (=> d!29163 (= (getValueByKey!155 lt!54521 (_1!1215 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29163 (= lt!54520 (lemmaContainsTupThenGetReturnValue!73 lt!54521 (_1!1215 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29163 (= lt!54521 (insertStrictlySorted!75 (toList!808 lt!54181) (_1!1215 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29163 (= (+!146 lt!54181 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16))) lt!54522)))

(declare-fun b!106410 () Bool)

(declare-fun res!52886 () Bool)

(assert (=> b!106410 (=> (not res!52886) (not e!69244))))

(assert (=> b!106410 (= res!52886 (= (getValueByKey!155 (toList!808 lt!54522) (_1!1215 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16))))))))

(declare-fun b!106411 () Bool)

(assert (=> b!106411 (= e!69244 (contains!830 (toList!808 lt!54522) (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16))))))

(assert (= (and d!29163 res!52887) b!106410))

(assert (= (and b!106410 res!52886) b!106411))

(declare-fun m!118993 () Bool)

(assert (=> d!29163 m!118993))

(declare-fun m!118995 () Bool)

(assert (=> d!29163 m!118995))

(declare-fun m!118997 () Bool)

(assert (=> d!29163 m!118997))

(declare-fun m!118999 () Bool)

(assert (=> d!29163 m!118999))

(declare-fun m!119001 () Bool)

(assert (=> b!106410 m!119001))

(declare-fun m!119003 () Bool)

(assert (=> b!106411 m!119003))

(assert (=> b!105929 d!29163))

(declare-fun d!29165 () Bool)

(declare-fun e!69245 () Bool)

(assert (=> d!29165 e!69245))

(declare-fun res!52889 () Bool)

(assert (=> d!29165 (=> (not res!52889) (not e!69245))))

(declare-fun lt!54526 () ListLongMap!1585)

(assert (=> d!29165 (= res!52889 (contains!829 lt!54526 (_1!1215 (tuple2!2411 lt!54187 (minValue!2457 newMap!16)))))))

(declare-fun lt!54525 () List!1642)

(assert (=> d!29165 (= lt!54526 (ListLongMap!1586 lt!54525))))

(declare-fun lt!54527 () Unit!3250)

(declare-fun lt!54524 () Unit!3250)

(assert (=> d!29165 (= lt!54527 lt!54524)))

(assert (=> d!29165 (= (getValueByKey!155 lt!54525 (_1!1215 (tuple2!2411 lt!54187 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54187 (minValue!2457 newMap!16)))))))

(assert (=> d!29165 (= lt!54524 (lemmaContainsTupThenGetReturnValue!73 lt!54525 (_1!1215 (tuple2!2411 lt!54187 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54187 (minValue!2457 newMap!16)))))))

(assert (=> d!29165 (= lt!54525 (insertStrictlySorted!75 (toList!808 lt!54177) (_1!1215 (tuple2!2411 lt!54187 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54187 (minValue!2457 newMap!16)))))))

(assert (=> d!29165 (= (+!146 lt!54177 (tuple2!2411 lt!54187 (minValue!2457 newMap!16))) lt!54526)))

(declare-fun b!106412 () Bool)

(declare-fun res!52888 () Bool)

(assert (=> b!106412 (=> (not res!52888) (not e!69245))))

(assert (=> b!106412 (= res!52888 (= (getValueByKey!155 (toList!808 lt!54526) (_1!1215 (tuple2!2411 lt!54187 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54187 (minValue!2457 newMap!16))))))))

(declare-fun b!106413 () Bool)

(assert (=> b!106413 (= e!69245 (contains!830 (toList!808 lt!54526) (tuple2!2411 lt!54187 (minValue!2457 newMap!16))))))

(assert (= (and d!29165 res!52889) b!106412))

(assert (= (and b!106412 res!52888) b!106413))

(declare-fun m!119005 () Bool)

(assert (=> d!29165 m!119005))

(declare-fun m!119007 () Bool)

(assert (=> d!29165 m!119007))

(declare-fun m!119009 () Bool)

(assert (=> d!29165 m!119009))

(declare-fun m!119011 () Bool)

(assert (=> d!29165 m!119011))

(declare-fun m!119013 () Bool)

(assert (=> b!106412 m!119013))

(declare-fun m!119015 () Bool)

(assert (=> b!106413 m!119015))

(assert (=> b!105929 d!29165))

(declare-fun d!29167 () Bool)

(assert (=> d!29167 (= (apply!98 (+!146 lt!54181 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16))) lt!54188) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54181 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16)))) lt!54188)))))

(declare-fun bs!4363 () Bool)

(assert (= bs!4363 d!29167))

(declare-fun m!119017 () Bool)

(assert (=> bs!4363 m!119017))

(assert (=> bs!4363 m!119017))

(declare-fun m!119019 () Bool)

(assert (=> bs!4363 m!119019))

(assert (=> b!105929 d!29167))

(declare-fun d!29169 () Bool)

(assert (=> d!29169 (= (apply!98 (+!146 lt!54181 (tuple2!2411 lt!54179 (zeroValue!2457 newMap!16))) lt!54188) (apply!98 lt!54181 lt!54188))))

(declare-fun lt!54528 () Unit!3250)

(assert (=> d!29169 (= lt!54528 (choose!670 lt!54181 lt!54179 (zeroValue!2457 newMap!16) lt!54188))))

(declare-fun e!69246 () Bool)

(assert (=> d!29169 e!69246))

(declare-fun res!52890 () Bool)

(assert (=> d!29169 (=> (not res!52890) (not e!69246))))

(assert (=> d!29169 (= res!52890 (contains!829 lt!54181 lt!54188))))

(assert (=> d!29169 (= (addApplyDifferent!74 lt!54181 lt!54179 (zeroValue!2457 newMap!16) lt!54188) lt!54528)))

(declare-fun b!106414 () Bool)

(assert (=> b!106414 (= e!69246 (not (= lt!54188 lt!54179)))))

(assert (= (and d!29169 res!52890) b!106414))

(declare-fun m!119021 () Bool)

(assert (=> d!29169 m!119021))

(assert (=> d!29169 m!118139))

(assert (=> d!29169 m!118151))

(assert (=> d!29169 m!118139))

(assert (=> d!29169 m!118141))

(declare-fun m!119023 () Bool)

(assert (=> d!29169 m!119023))

(assert (=> b!105929 d!29169))

(declare-fun d!29171 () Bool)

(assert (=> d!29171 (= (apply!98 (+!146 lt!54177 (tuple2!2411 lt!54187 (minValue!2457 newMap!16))) lt!54172) (apply!98 lt!54177 lt!54172))))

(declare-fun lt!54529 () Unit!3250)

(assert (=> d!29171 (= lt!54529 (choose!670 lt!54177 lt!54187 (minValue!2457 newMap!16) lt!54172))))

(declare-fun e!69247 () Bool)

(assert (=> d!29171 e!69247))

(declare-fun res!52891 () Bool)

(assert (=> d!29171 (=> (not res!52891) (not e!69247))))

(assert (=> d!29171 (= res!52891 (contains!829 lt!54177 lt!54172))))

(assert (=> d!29171 (= (addApplyDifferent!74 lt!54177 lt!54187 (minValue!2457 newMap!16) lt!54172) lt!54529)))

(declare-fun b!106415 () Bool)

(assert (=> b!106415 (= e!69247 (not (= lt!54172 lt!54187)))))

(assert (= (and d!29171 res!52891) b!106415))

(declare-fun m!119025 () Bool)

(assert (=> d!29171 m!119025))

(assert (=> d!29171 m!118135))

(assert (=> d!29171 m!118137))

(assert (=> d!29171 m!118135))

(assert (=> d!29171 m!118147))

(declare-fun m!119027 () Bool)

(assert (=> d!29171 m!119027))

(assert (=> b!105929 d!29171))

(declare-fun d!29173 () Bool)

(assert (=> d!29173 (= (apply!98 lt!54178 lt!54176) (get!1342 (getValueByKey!155 (toList!808 lt!54178) lt!54176)))))

(declare-fun bs!4364 () Bool)

(assert (= bs!4364 d!29173))

(declare-fun m!119029 () Bool)

(assert (=> bs!4364 m!119029))

(assert (=> bs!4364 m!119029))

(declare-fun m!119031 () Bool)

(assert (=> bs!4364 m!119031))

(assert (=> b!105929 d!29173))

(declare-fun d!29175 () Bool)

(assert (=> d!29175 (= (apply!98 (+!146 lt!54178 (tuple2!2411 lt!54170 (minValue!2457 newMap!16))) lt!54176) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54178 (tuple2!2411 lt!54170 (minValue!2457 newMap!16)))) lt!54176)))))

(declare-fun bs!4365 () Bool)

(assert (= bs!4365 d!29175))

(declare-fun m!119033 () Bool)

(assert (=> bs!4365 m!119033))

(assert (=> bs!4365 m!119033))

(declare-fun m!119035 () Bool)

(assert (=> bs!4365 m!119035))

(assert (=> b!105929 d!29175))

(declare-fun d!29177 () Bool)

(assert (=> d!29177 (= (apply!98 lt!54177 lt!54172) (get!1342 (getValueByKey!155 (toList!808 lt!54177) lt!54172)))))

(declare-fun bs!4366 () Bool)

(assert (= bs!4366 d!29177))

(declare-fun m!119037 () Bool)

(assert (=> bs!4366 m!119037))

(assert (=> bs!4366 m!119037))

(declare-fun m!119039 () Bool)

(assert (=> bs!4366 m!119039))

(assert (=> b!105929 d!29177))

(declare-fun d!29179 () Bool)

(assert (=> d!29179 (= (apply!98 (+!146 lt!54177 (tuple2!2411 lt!54187 (minValue!2457 newMap!16))) lt!54172) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54177 (tuple2!2411 lt!54187 (minValue!2457 newMap!16)))) lt!54172)))))

(declare-fun bs!4367 () Bool)

(assert (= bs!4367 d!29179))

(declare-fun m!119041 () Bool)

(assert (=> bs!4367 m!119041))

(assert (=> bs!4367 m!119041))

(declare-fun m!119043 () Bool)

(assert (=> bs!4367 m!119043))

(assert (=> b!105929 d!29179))

(declare-fun d!29181 () Bool)

(declare-fun e!69248 () Bool)

(assert (=> d!29181 e!69248))

(declare-fun res!52893 () Bool)

(assert (=> d!29181 (=> (not res!52893) (not e!69248))))

(declare-fun lt!54532 () ListLongMap!1585)

(assert (=> d!29181 (= res!52893 (contains!829 lt!54532 (_1!1215 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16)))))))

(declare-fun lt!54531 () List!1642)

(assert (=> d!29181 (= lt!54532 (ListLongMap!1586 lt!54531))))

(declare-fun lt!54533 () Unit!3250)

(declare-fun lt!54530 () Unit!3250)

(assert (=> d!29181 (= lt!54533 lt!54530)))

(assert (=> d!29181 (= (getValueByKey!155 lt!54531 (_1!1215 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29181 (= lt!54530 (lemmaContainsTupThenGetReturnValue!73 lt!54531 (_1!1215 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29181 (= lt!54531 (insertStrictlySorted!75 (toList!808 lt!54186) (_1!1215 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29181 (= (+!146 lt!54186 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16))) lt!54532)))

(declare-fun b!106416 () Bool)

(declare-fun res!52892 () Bool)

(assert (=> b!106416 (=> (not res!52892) (not e!69248))))

(assert (=> b!106416 (= res!52892 (= (getValueByKey!155 (toList!808 lt!54532) (_1!1215 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16))))))))

(declare-fun b!106417 () Bool)

(assert (=> b!106417 (= e!69248 (contains!830 (toList!808 lt!54532) (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16))))))

(assert (= (and d!29181 res!52893) b!106416))

(assert (= (and b!106416 res!52892) b!106417))

(declare-fun m!119045 () Bool)

(assert (=> d!29181 m!119045))

(declare-fun m!119047 () Bool)

(assert (=> d!29181 m!119047))

(declare-fun m!119049 () Bool)

(assert (=> d!29181 m!119049))

(declare-fun m!119051 () Bool)

(assert (=> d!29181 m!119051))

(declare-fun m!119053 () Bool)

(assert (=> b!106416 m!119053))

(declare-fun m!119055 () Bool)

(assert (=> b!106417 m!119055))

(assert (=> b!105929 d!29181))

(declare-fun d!29183 () Bool)

(declare-fun e!69249 () Bool)

(assert (=> d!29183 e!69249))

(declare-fun res!52895 () Bool)

(assert (=> d!29183 (=> (not res!52895) (not e!69249))))

(declare-fun lt!54536 () ListLongMap!1585)

(assert (=> d!29183 (= res!52895 (contains!829 lt!54536 (_1!1215 (tuple2!2411 lt!54170 (minValue!2457 newMap!16)))))))

(declare-fun lt!54535 () List!1642)

(assert (=> d!29183 (= lt!54536 (ListLongMap!1586 lt!54535))))

(declare-fun lt!54537 () Unit!3250)

(declare-fun lt!54534 () Unit!3250)

(assert (=> d!29183 (= lt!54537 lt!54534)))

(assert (=> d!29183 (= (getValueByKey!155 lt!54535 (_1!1215 (tuple2!2411 lt!54170 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54170 (minValue!2457 newMap!16)))))))

(assert (=> d!29183 (= lt!54534 (lemmaContainsTupThenGetReturnValue!73 lt!54535 (_1!1215 (tuple2!2411 lt!54170 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54170 (minValue!2457 newMap!16)))))))

(assert (=> d!29183 (= lt!54535 (insertStrictlySorted!75 (toList!808 lt!54178) (_1!1215 (tuple2!2411 lt!54170 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54170 (minValue!2457 newMap!16)))))))

(assert (=> d!29183 (= (+!146 lt!54178 (tuple2!2411 lt!54170 (minValue!2457 newMap!16))) lt!54536)))

(declare-fun b!106418 () Bool)

(declare-fun res!52894 () Bool)

(assert (=> b!106418 (=> (not res!52894) (not e!69249))))

(assert (=> b!106418 (= res!52894 (= (getValueByKey!155 (toList!808 lt!54536) (_1!1215 (tuple2!2411 lt!54170 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54170 (minValue!2457 newMap!16))))))))

(declare-fun b!106419 () Bool)

(assert (=> b!106419 (= e!69249 (contains!830 (toList!808 lt!54536) (tuple2!2411 lt!54170 (minValue!2457 newMap!16))))))

(assert (= (and d!29183 res!52895) b!106418))

(assert (= (and b!106418 res!52894) b!106419))

(declare-fun m!119057 () Bool)

(assert (=> d!29183 m!119057))

(declare-fun m!119059 () Bool)

(assert (=> d!29183 m!119059))

(declare-fun m!119061 () Bool)

(assert (=> d!29183 m!119061))

(declare-fun m!119063 () Bool)

(assert (=> d!29183 m!119063))

(declare-fun m!119065 () Bool)

(assert (=> b!106418 m!119065))

(declare-fun m!119067 () Bool)

(assert (=> b!106419 m!119067))

(assert (=> b!105929 d!29183))

(declare-fun d!29185 () Bool)

(declare-fun e!69251 () Bool)

(assert (=> d!29185 e!69251))

(declare-fun res!52896 () Bool)

(assert (=> d!29185 (=> res!52896 e!69251)))

(declare-fun lt!54538 () Bool)

(assert (=> d!29185 (= res!52896 (not lt!54538))))

(declare-fun lt!54541 () Bool)

(assert (=> d!29185 (= lt!54538 lt!54541)))

(declare-fun lt!54540 () Unit!3250)

(declare-fun e!69250 () Unit!3250)

(assert (=> d!29185 (= lt!54540 e!69250)))

(declare-fun c!18599 () Bool)

(assert (=> d!29185 (= c!18599 lt!54541)))

(assert (=> d!29185 (= lt!54541 (containsKey!159 (toList!808 (+!146 lt!54186 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16)))) lt!54185))))

(assert (=> d!29185 (= (contains!829 (+!146 lt!54186 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16))) lt!54185) lt!54538)))

(declare-fun b!106420 () Bool)

(declare-fun lt!54539 () Unit!3250)

(assert (=> b!106420 (= e!69250 lt!54539)))

(assert (=> b!106420 (= lt!54539 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (+!146 lt!54186 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16)))) lt!54185))))

(assert (=> b!106420 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54186 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16)))) lt!54185))))

(declare-fun b!106421 () Bool)

(declare-fun Unit!3291 () Unit!3250)

(assert (=> b!106421 (= e!69250 Unit!3291)))

(declare-fun b!106422 () Bool)

(assert (=> b!106422 (= e!69251 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54186 (tuple2!2411 lt!54182 (zeroValue!2457 newMap!16)))) lt!54185)))))

(assert (= (and d!29185 c!18599) b!106420))

(assert (= (and d!29185 (not c!18599)) b!106421))

(assert (= (and d!29185 (not res!52896)) b!106422))

(declare-fun m!119069 () Bool)

(assert (=> d!29185 m!119069))

(declare-fun m!119071 () Bool)

(assert (=> b!106420 m!119071))

(declare-fun m!119073 () Bool)

(assert (=> b!106420 m!119073))

(assert (=> b!106420 m!119073))

(declare-fun m!119075 () Bool)

(assert (=> b!106420 m!119075))

(assert (=> b!106422 m!119073))

(assert (=> b!106422 m!119073))

(assert (=> b!106422 m!119075))

(assert (=> b!105929 d!29185))

(declare-fun b!106423 () Bool)

(declare-fun e!69257 () Bool)

(declare-fun e!69256 () Bool)

(assert (=> b!106423 (= e!69257 e!69256)))

(declare-fun c!18600 () Bool)

(assert (=> b!106423 (= c!18600 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106424 () Bool)

(declare-fun e!69252 () Bool)

(assert (=> b!106424 (= e!69257 e!69252)))

(assert (=> b!106424 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun res!52899 () Bool)

(declare-fun lt!54546 () ListLongMap!1585)

(assert (=> b!106424 (= res!52899 (contains!829 lt!54546 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106424 (=> (not res!52899) (not e!69252))))

(declare-fun d!29187 () Bool)

(declare-fun e!69255 () Bool)

(assert (=> d!29187 e!69255))

(declare-fun res!52900 () Bool)

(assert (=> d!29187 (=> (not res!52900) (not e!69255))))

(assert (=> d!29187 (= res!52900 (not (contains!829 lt!54546 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!69254 () ListLongMap!1585)

(assert (=> d!29187 (= lt!54546 e!69254)))

(declare-fun c!18602 () Bool)

(assert (=> d!29187 (= c!18602 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!29187 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29187 (= (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54546)))

(declare-fun b!106425 () Bool)

(assert (=> b!106425 (= e!69255 e!69257)))

(declare-fun c!18601 () Bool)

(declare-fun e!69258 () Bool)

(assert (=> b!106425 (= c!18601 e!69258)))

(declare-fun res!52898 () Bool)

(assert (=> b!106425 (=> (not res!52898) (not e!69258))))

(assert (=> b!106425 (= res!52898 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106426 () Bool)

(assert (=> b!106426 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> b!106426 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_values!2565 newMap!16))))))

(assert (=> b!106426 (= e!69252 (= (apply!98 lt!54546 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106427 () Bool)

(declare-fun lt!54544 () Unit!3250)

(declare-fun lt!54542 () Unit!3250)

(assert (=> b!106427 (= lt!54544 lt!54542)))

(declare-fun lt!54548 () (_ BitVec 64))

(declare-fun lt!54545 () V!3219)

(declare-fun lt!54543 () (_ BitVec 64))

(declare-fun lt!54547 () ListLongMap!1585)

(assert (=> b!106427 (not (contains!829 (+!146 lt!54547 (tuple2!2411 lt!54543 lt!54545)) lt!54548))))

(assert (=> b!106427 (= lt!54542 (addStillNotContains!48 lt!54547 lt!54543 lt!54545 lt!54548))))

(assert (=> b!106427 (= lt!54548 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106427 (= lt!54545 (get!1339 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106427 (= lt!54543 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11262 () ListLongMap!1585)

(assert (=> b!106427 (= lt!54547 call!11262)))

(declare-fun e!69253 () ListLongMap!1585)

(assert (=> b!106427 (= e!69253 (+!146 call!11262 (tuple2!2411 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (get!1339 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106428 () Bool)

(assert (=> b!106428 (= e!69254 (ListLongMap!1586 Nil!1639))))

(declare-fun b!106429 () Bool)

(assert (=> b!106429 (= e!69253 call!11262)))

(declare-fun b!106430 () Bool)

(assert (=> b!106430 (= e!69254 e!69253)))

(declare-fun c!18603 () Bool)

(assert (=> b!106430 (= c!18603 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106431 () Bool)

(assert (=> b!106431 (= e!69256 (isEmpty!375 lt!54546))))

(declare-fun bm!11259 () Bool)

(assert (=> bm!11259 (= call!11262 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16)))))

(declare-fun b!106432 () Bool)

(assert (=> b!106432 (= e!69258 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106432 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!106433 () Bool)

(assert (=> b!106433 (= e!69256 (= lt!54546 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16))))))

(declare-fun b!106434 () Bool)

(declare-fun res!52897 () Bool)

(assert (=> b!106434 (=> (not res!52897) (not e!69255))))

(assert (=> b!106434 (= res!52897 (not (contains!829 lt!54546 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29187 c!18602) b!106428))

(assert (= (and d!29187 (not c!18602)) b!106430))

(assert (= (and b!106430 c!18603) b!106427))

(assert (= (and b!106430 (not c!18603)) b!106429))

(assert (= (or b!106427 b!106429) bm!11259))

(assert (= (and d!29187 res!52900) b!106434))

(assert (= (and b!106434 res!52897) b!106425))

(assert (= (and b!106425 res!52898) b!106432))

(assert (= (and b!106425 c!18601) b!106424))

(assert (= (and b!106425 (not c!18601)) b!106423))

(assert (= (and b!106424 res!52899) b!106426))

(assert (= (and b!106423 c!18600) b!106433))

(assert (= (and b!106423 (not c!18600)) b!106431))

(declare-fun b_lambda!4775 () Bool)

(assert (=> (not b_lambda!4775) (not b!106426)))

(assert (=> b!106426 t!5744))

(declare-fun b_and!6565 () Bool)

(assert (= b_and!6561 (and (=> t!5744 result!3475) b_and!6565)))

(assert (=> b!106426 t!5746))

(declare-fun b_and!6567 () Bool)

(assert (= b_and!6563 (and (=> t!5746 result!3477) b_and!6567)))

(declare-fun b_lambda!4777 () Bool)

(assert (=> (not b_lambda!4777) (not b!106427)))

(assert (=> b!106427 t!5744))

(declare-fun b_and!6569 () Bool)

(assert (= b_and!6565 (and (=> t!5744 result!3475) b_and!6569)))

(assert (=> b!106427 t!5746))

(declare-fun b_and!6571 () Bool)

(assert (= b_and!6567 (and (=> t!5746 result!3477) b_and!6571)))

(assert (=> b!106430 m!117859))

(assert (=> b!106430 m!117859))

(assert (=> b!106430 m!117861))

(declare-fun m!119077 () Bool)

(assert (=> d!29187 m!119077))

(assert (=> d!29187 m!117867))

(assert (=> b!106426 m!118103))

(assert (=> b!106426 m!118101))

(assert (=> b!106426 m!117859))

(declare-fun m!119079 () Bool)

(assert (=> b!106426 m!119079))

(assert (=> b!106426 m!118101))

(assert (=> b!106426 m!118103))

(assert (=> b!106426 m!118105))

(assert (=> b!106426 m!117859))

(declare-fun m!119081 () Bool)

(assert (=> b!106431 m!119081))

(assert (=> b!106424 m!117859))

(assert (=> b!106424 m!117859))

(declare-fun m!119083 () Bool)

(assert (=> b!106424 m!119083))

(assert (=> b!106432 m!117859))

(assert (=> b!106432 m!117859))

(assert (=> b!106432 m!117861))

(declare-fun m!119085 () Bool)

(assert (=> b!106434 m!119085))

(declare-fun m!119087 () Bool)

(assert (=> b!106427 m!119087))

(assert (=> b!106427 m!119087))

(declare-fun m!119089 () Bool)

(assert (=> b!106427 m!119089))

(declare-fun m!119091 () Bool)

(assert (=> b!106427 m!119091))

(assert (=> b!106427 m!118103))

(assert (=> b!106427 m!118101))

(declare-fun m!119093 () Bool)

(assert (=> b!106427 m!119093))

(assert (=> b!106427 m!118101))

(assert (=> b!106427 m!118103))

(assert (=> b!106427 m!118105))

(assert (=> b!106427 m!117859))

(declare-fun m!119095 () Bool)

(assert (=> bm!11259 m!119095))

(assert (=> b!106433 m!119095))

(assert (=> b!105929 d!29187))

(declare-fun d!29189 () Bool)

(declare-fun res!52901 () Bool)

(declare-fun e!69259 () Bool)

(assert (=> d!29189 (=> res!52901 e!69259)))

(assert (=> d!29189 (= res!52901 (and ((_ is Cons!1638) lt!54362) (= (_1!1215 (h!2235 lt!54362)) (_1!1215 lt!53818))))))

(assert (=> d!29189 (= (containsKey!159 lt!54362 (_1!1215 lt!53818)) e!69259)))

(declare-fun b!106435 () Bool)

(declare-fun e!69260 () Bool)

(assert (=> b!106435 (= e!69259 e!69260)))

(declare-fun res!52902 () Bool)

(assert (=> b!106435 (=> (not res!52902) (not e!69260))))

(assert (=> b!106435 (= res!52902 (and (or (not ((_ is Cons!1638) lt!54362)) (bvsle (_1!1215 (h!2235 lt!54362)) (_1!1215 lt!53818))) ((_ is Cons!1638) lt!54362) (bvslt (_1!1215 (h!2235 lt!54362)) (_1!1215 lt!53818))))))

(declare-fun b!106436 () Bool)

(assert (=> b!106436 (= e!69260 (containsKey!159 (t!5737 lt!54362) (_1!1215 lt!53818)))))

(assert (= (and d!29189 (not res!52901)) b!106435))

(assert (= (and b!106435 res!52902) b!106436))

(declare-fun m!119097 () Bool)

(assert (=> b!106436 m!119097))

(assert (=> b!106156 d!29189))

(declare-fun d!29191 () Bool)

(declare-fun e!69262 () Bool)

(assert (=> d!29191 e!69262))

(declare-fun res!52903 () Bool)

(assert (=> d!29191 (=> res!52903 e!69262)))

(declare-fun lt!54549 () Bool)

(assert (=> d!29191 (= res!52903 (not lt!54549))))

(declare-fun lt!54552 () Bool)

(assert (=> d!29191 (= lt!54549 lt!54552)))

(declare-fun lt!54551 () Unit!3250)

(declare-fun e!69261 () Unit!3250)

(assert (=> d!29191 (= lt!54551 e!69261)))

(declare-fun c!18604 () Bool)

(assert (=> d!29191 (= c!18604 lt!54552)))

(assert (=> d!29191 (= lt!54552 (containsKey!159 (toList!808 lt!54114) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29191 (= (contains!829 lt!54114 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) lt!54549)))

(declare-fun b!106437 () Bool)

(declare-fun lt!54550 () Unit!3250)

(assert (=> b!106437 (= e!69261 lt!54550)))

(assert (=> b!106437 (= lt!54550 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54114) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> b!106437 (isDefined!109 (getValueByKey!155 (toList!808 lt!54114) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!106438 () Bool)

(declare-fun Unit!3292 () Unit!3250)

(assert (=> b!106438 (= e!69261 Unit!3292)))

(declare-fun b!106439 () Bool)

(assert (=> b!106439 (= e!69262 (isDefined!109 (getValueByKey!155 (toList!808 lt!54114) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(assert (= (and d!29191 c!18604) b!106437))

(assert (= (and d!29191 (not c!18604)) b!106438))

(assert (= (and d!29191 (not res!52903)) b!106439))

(declare-fun m!119099 () Bool)

(assert (=> d!29191 m!119099))

(declare-fun m!119101 () Bool)

(assert (=> b!106437 m!119101))

(assert (=> b!106437 m!117963))

(assert (=> b!106437 m!117963))

(declare-fun m!119103 () Bool)

(assert (=> b!106437 m!119103))

(assert (=> b!106439 m!117963))

(assert (=> b!106439 m!117963))

(assert (=> b!106439 m!119103))

(assert (=> d!28863 d!29191))

(declare-fun b!106441 () Bool)

(declare-fun e!69263 () Option!161)

(declare-fun e!69264 () Option!161)

(assert (=> b!106441 (= e!69263 e!69264)))

(declare-fun c!18606 () Bool)

(assert (=> b!106441 (= c!18606 (and ((_ is Cons!1638) lt!54113) (not (= (_1!1215 (h!2235 lt!54113)) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))))

(declare-fun d!29193 () Bool)

(declare-fun c!18605 () Bool)

(assert (=> d!29193 (= c!18605 (and ((_ is Cons!1638) lt!54113) (= (_1!1215 (h!2235 lt!54113)) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(assert (=> d!29193 (= (getValueByKey!155 lt!54113 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) e!69263)))

(declare-fun b!106442 () Bool)

(assert (=> b!106442 (= e!69264 (getValueByKey!155 (t!5737 lt!54113) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!106440 () Bool)

(assert (=> b!106440 (= e!69263 (Some!160 (_2!1215 (h!2235 lt!54113))))))

(declare-fun b!106443 () Bool)

(assert (=> b!106443 (= e!69264 None!159)))

(assert (= (and d!29193 c!18605) b!106440))

(assert (= (and d!29193 (not c!18605)) b!106441))

(assert (= (and b!106441 c!18606) b!106442))

(assert (= (and b!106441 (not c!18606)) b!106443))

(declare-fun m!119105 () Bool)

(assert (=> b!106442 m!119105))

(assert (=> d!28863 d!29193))

(declare-fun d!29195 () Bool)

(assert (=> d!29195 (= (getValueByKey!155 lt!54113 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) (Some!160 (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun lt!54553 () Unit!3250)

(assert (=> d!29195 (= lt!54553 (choose!666 lt!54113 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun e!69265 () Bool)

(assert (=> d!29195 e!69265))

(declare-fun res!52904 () Bool)

(assert (=> d!29195 (=> (not res!52904) (not e!69265))))

(assert (=> d!29195 (= res!52904 (isStrictlySorted!304 lt!54113))))

(assert (=> d!29195 (= (lemmaContainsTupThenGetReturnValue!73 lt!54113 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) lt!54553)))

(declare-fun b!106444 () Bool)

(declare-fun res!52905 () Bool)

(assert (=> b!106444 (=> (not res!52905) (not e!69265))))

(assert (=> b!106444 (= res!52905 (containsKey!159 lt!54113 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!106445 () Bool)

(assert (=> b!106445 (= e!69265 (contains!830 lt!54113 (tuple2!2411 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(assert (= (and d!29195 res!52904) b!106444))

(assert (= (and b!106444 res!52905) b!106445))

(assert (=> d!29195 m!117957))

(declare-fun m!119107 () Bool)

(assert (=> d!29195 m!119107))

(declare-fun m!119109 () Bool)

(assert (=> d!29195 m!119109))

(declare-fun m!119111 () Bool)

(assert (=> b!106444 m!119111))

(declare-fun m!119113 () Bool)

(assert (=> b!106445 m!119113))

(assert (=> d!28863 d!29195))

(declare-fun d!29197 () Bool)

(declare-fun e!69267 () Bool)

(assert (=> d!29197 e!69267))

(declare-fun res!52906 () Bool)

(assert (=> d!29197 (=> (not res!52906) (not e!69267))))

(declare-fun lt!54554 () List!1642)

(assert (=> d!29197 (= res!52906 (isStrictlySorted!304 lt!54554))))

(declare-fun e!69266 () List!1642)

(assert (=> d!29197 (= lt!54554 e!69266)))

(declare-fun c!18607 () Bool)

(assert (=> d!29197 (= c!18607 (and ((_ is Cons!1638) (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162)))) (bvslt (_1!1215 (h!2235 (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162))))) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(assert (=> d!29197 (isStrictlySorted!304 (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162))))))

(assert (=> d!29197 (= (insertStrictlySorted!75 (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162))) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) lt!54554)))

(declare-fun b!106446 () Bool)

(declare-fun e!69269 () List!1642)

(declare-fun call!11265 () List!1642)

(assert (=> b!106446 (= e!69269 call!11265)))

(declare-fun c!18608 () Bool)

(declare-fun b!106447 () Bool)

(assert (=> b!106447 (= c!18608 (and ((_ is Cons!1638) (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162)))) (bvsgt (_1!1215 (h!2235 (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162))))) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun e!69268 () List!1642)

(assert (=> b!106447 (= e!69268 e!69269)))

(declare-fun b!106448 () Bool)

(declare-fun call!11263 () List!1642)

(assert (=> b!106448 (= e!69268 call!11263)))

(declare-fun b!106449 () Bool)

(declare-fun call!11264 () List!1642)

(assert (=> b!106449 (= e!69266 call!11264)))

(declare-fun b!106450 () Bool)

(declare-fun res!52907 () Bool)

(assert (=> b!106450 (=> (not res!52907) (not e!69267))))

(assert (=> b!106450 (= res!52907 (containsKey!159 lt!54554 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun bm!11260 () Bool)

(assert (=> bm!11260 (= call!11263 call!11264)))

(declare-fun e!69270 () List!1642)

(declare-fun c!18609 () Bool)

(declare-fun b!106451 () Bool)

(assert (=> b!106451 (= e!69270 (ite c!18609 (t!5737 (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162)))) (ite c!18608 (Cons!1638 (h!2235 (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162)))) (t!5737 (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162))))) Nil!1639)))))

(declare-fun bm!11261 () Bool)

(assert (=> bm!11261 (= call!11264 ($colon$colon!80 e!69270 (ite c!18607 (h!2235 (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162)))) (tuple2!2411 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))))

(declare-fun c!18610 () Bool)

(assert (=> bm!11261 (= c!18610 c!18607)))

(declare-fun b!106452 () Bool)

(assert (=> b!106452 (= e!69270 (insertStrictlySorted!75 (t!5737 (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162)))) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!106453 () Bool)

(assert (=> b!106453 (= e!69267 (contains!830 lt!54554 (tuple2!2411 (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (_2!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun bm!11262 () Bool)

(assert (=> bm!11262 (= call!11265 call!11263)))

(declare-fun b!106454 () Bool)

(assert (=> b!106454 (= e!69269 call!11265)))

(declare-fun b!106455 () Bool)

(assert (=> b!106455 (= e!69266 e!69268)))

(assert (=> b!106455 (= c!18609 (and ((_ is Cons!1638) (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162)))) (= (_1!1215 (h!2235 (toList!808 (ite c!18381 call!11161 (ite c!18377 call!11165 call!11162))))) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(assert (= (and d!29197 c!18607) b!106449))

(assert (= (and d!29197 (not c!18607)) b!106455))

(assert (= (and b!106455 c!18609) b!106448))

(assert (= (and b!106455 (not c!18609)) b!106447))

(assert (= (and b!106447 c!18608) b!106454))

(assert (= (and b!106447 (not c!18608)) b!106446))

(assert (= (or b!106454 b!106446) bm!11262))

(assert (= (or b!106448 bm!11262) bm!11260))

(assert (= (or b!106449 bm!11260) bm!11261))

(assert (= (and bm!11261 c!18610) b!106452))

(assert (= (and bm!11261 (not c!18610)) b!106451))

(assert (= (and d!29197 res!52906) b!106450))

(assert (= (and b!106450 res!52907) b!106453))

(declare-fun m!119115 () Bool)

(assert (=> b!106453 m!119115))

(declare-fun m!119117 () Bool)

(assert (=> bm!11261 m!119117))

(declare-fun m!119119 () Bool)

(assert (=> b!106450 m!119119))

(declare-fun m!119121 () Bool)

(assert (=> b!106452 m!119121))

(declare-fun m!119123 () Bool)

(assert (=> d!29197 m!119123))

(declare-fun m!119125 () Bool)

(assert (=> d!29197 m!119125))

(assert (=> d!28863 d!29197))

(declare-fun d!29199 () Bool)

(declare-fun e!69272 () Bool)

(assert (=> d!29199 e!69272))

(declare-fun res!52908 () Bool)

(assert (=> d!29199 (=> res!52908 e!69272)))

(declare-fun lt!54555 () Bool)

(assert (=> d!29199 (= res!52908 (not lt!54555))))

(declare-fun lt!54558 () Bool)

(assert (=> d!29199 (= lt!54555 lt!54558)))

(declare-fun lt!54557 () Unit!3250)

(declare-fun e!69271 () Unit!3250)

(assert (=> d!29199 (= lt!54557 e!69271)))

(declare-fun c!18611 () Bool)

(assert (=> d!29199 (= c!18611 lt!54558)))

(assert (=> d!29199 (= lt!54558 (containsKey!159 (toList!808 lt!54180) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29199 (= (contains!829 lt!54180 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54555)))

(declare-fun b!106456 () Bool)

(declare-fun lt!54556 () Unit!3250)

(assert (=> b!106456 (= e!69271 lt!54556)))

(assert (=> b!106456 (= lt!54556 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54180) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106456 (isDefined!109 (getValueByKey!155 (toList!808 lt!54180) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106457 () Bool)

(declare-fun Unit!3293 () Unit!3250)

(assert (=> b!106457 (= e!69271 Unit!3293)))

(declare-fun b!106458 () Bool)

(assert (=> b!106458 (= e!69272 (isDefined!109 (getValueByKey!155 (toList!808 lt!54180) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29199 c!18611) b!106456))

(assert (= (and d!29199 (not c!18611)) b!106457))

(assert (= (and d!29199 (not res!52908)) b!106458))

(declare-fun m!119127 () Bool)

(assert (=> d!29199 m!119127))

(declare-fun m!119129 () Bool)

(assert (=> b!106456 m!119129))

(declare-fun m!119131 () Bool)

(assert (=> b!106456 m!119131))

(assert (=> b!106456 m!119131))

(declare-fun m!119133 () Bool)

(assert (=> b!106456 m!119133))

(assert (=> b!106458 m!119131))

(assert (=> b!106458 m!119131))

(assert (=> b!106458 m!119133))

(assert (=> bm!11194 d!29199))

(assert (=> d!28877 d!28837))

(declare-fun d!29201 () Bool)

(declare-fun e!69275 () Bool)

(assert (=> d!29201 e!69275))

(declare-fun res!52913 () Bool)

(assert (=> d!29201 (=> (not res!52913) (not e!69275))))

(declare-fun lt!54561 () SeekEntryResult!269)

(assert (=> d!29201 (= res!52913 ((_ is Found!269) lt!54561))))

(assert (=> d!29201 (= lt!54561 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(assert (=> d!29201 true))

(declare-fun _$33!90 () Unit!3250)

(assert (=> d!29201 (= (choose!664 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)) _$33!90)))

(declare-fun b!106463 () Bool)

(declare-fun res!52914 () Bool)

(assert (=> b!106463 (=> (not res!52914) (not e!69275))))

(assert (=> b!106463 (= res!52914 (inRange!0 (index!3225 lt!54561) (mask!6728 newMap!16)))))

(declare-fun b!106464 () Bool)

(assert (=> b!106464 (= e!69275 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!54561)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (= (and d!29201 res!52913) b!106463))

(assert (= (and b!106463 res!52914) b!106464))

(assert (=> d!29201 m!117519))

(assert (=> d!29201 m!117635))

(declare-fun m!119135 () Bool)

(assert (=> b!106463 m!119135))

(declare-fun m!119137 () Bool)

(assert (=> b!106464 m!119137))

(assert (=> d!28877 d!29201))

(declare-fun d!29203 () Bool)

(assert (=> d!29203 (= (validMask!0 (mask!6728 newMap!16)) (and (or (= (mask!6728 newMap!16) #b00000000000000000000000000000111) (= (mask!6728 newMap!16) #b00000000000000000000000000001111) (= (mask!6728 newMap!16) #b00000000000000000000000000011111) (= (mask!6728 newMap!16) #b00000000000000000000000000111111) (= (mask!6728 newMap!16) #b00000000000000000000000001111111) (= (mask!6728 newMap!16) #b00000000000000000000000011111111) (= (mask!6728 newMap!16) #b00000000000000000000000111111111) (= (mask!6728 newMap!16) #b00000000000000000000001111111111) (= (mask!6728 newMap!16) #b00000000000000000000011111111111) (= (mask!6728 newMap!16) #b00000000000000000000111111111111) (= (mask!6728 newMap!16) #b00000000000000000001111111111111) (= (mask!6728 newMap!16) #b00000000000000000011111111111111) (= (mask!6728 newMap!16) #b00000000000000000111111111111111) (= (mask!6728 newMap!16) #b00000000000000001111111111111111) (= (mask!6728 newMap!16) #b00000000000000011111111111111111) (= (mask!6728 newMap!16) #b00000000000000111111111111111111) (= (mask!6728 newMap!16) #b00000000000001111111111111111111) (= (mask!6728 newMap!16) #b00000000000011111111111111111111) (= (mask!6728 newMap!16) #b00000000000111111111111111111111) (= (mask!6728 newMap!16) #b00000000001111111111111111111111) (= (mask!6728 newMap!16) #b00000000011111111111111111111111) (= (mask!6728 newMap!16) #b00000000111111111111111111111111) (= (mask!6728 newMap!16) #b00000001111111111111111111111111) (= (mask!6728 newMap!16) #b00000011111111111111111111111111) (= (mask!6728 newMap!16) #b00000111111111111111111111111111) (= (mask!6728 newMap!16) #b00001111111111111111111111111111) (= (mask!6728 newMap!16) #b00011111111111111111111111111111) (= (mask!6728 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6728 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!28877 d!29203))

(declare-fun d!29205 () Bool)

(assert (=> d!29205 (isDefined!109 (getValueByKey!155 (toList!808 lt!54067) (_1!1215 lt!53817)))))

(declare-fun lt!54562 () Unit!3250)

(assert (=> d!29205 (= lt!54562 (choose!667 (toList!808 lt!54067) (_1!1215 lt!53817)))))

(declare-fun e!69276 () Bool)

(assert (=> d!29205 e!69276))

(declare-fun res!52915 () Bool)

(assert (=> d!29205 (=> (not res!52915) (not e!69276))))

(assert (=> d!29205 (= res!52915 (isStrictlySorted!304 (toList!808 lt!54067)))))

(assert (=> d!29205 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54067) (_1!1215 lt!53817)) lt!54562)))

(declare-fun b!106465 () Bool)

(assert (=> b!106465 (= e!69276 (containsKey!159 (toList!808 lt!54067) (_1!1215 lt!53817)))))

(assert (= (and d!29205 res!52915) b!106465))

(assert (=> d!29205 m!117815))

(assert (=> d!29205 m!117815))

(assert (=> d!29205 m!118073))

(declare-fun m!119139 () Bool)

(assert (=> d!29205 m!119139))

(declare-fun m!119141 () Bool)

(assert (=> d!29205 m!119141))

(assert (=> b!106465 m!118069))

(assert (=> b!105867 d!29205))

(declare-fun d!29207 () Bool)

(assert (=> d!29207 (= (isDefined!109 (getValueByKey!155 (toList!808 lt!54067) (_1!1215 lt!53817))) (not (isEmpty!376 (getValueByKey!155 (toList!808 lt!54067) (_1!1215 lt!53817)))))))

(declare-fun bs!4368 () Bool)

(assert (= bs!4368 d!29207))

(assert (=> bs!4368 m!117815))

(declare-fun m!119143 () Bool)

(assert (=> bs!4368 m!119143))

(assert (=> b!105867 d!29207))

(assert (=> b!105867 d!28891))

(declare-fun d!29209 () Bool)

(declare-fun res!52916 () Bool)

(declare-fun e!69277 () Bool)

(assert (=> d!29209 (=> (not res!52916) (not e!69277))))

(assert (=> d!29209 (= res!52916 (simpleValid!73 (_2!1216 lt!54427)))))

(assert (=> d!29209 (= (valid!408 (_2!1216 lt!54427)) e!69277)))

(declare-fun b!106466 () Bool)

(declare-fun res!52917 () Bool)

(assert (=> b!106466 (=> (not res!52917) (not e!69277))))

(assert (=> b!106466 (= res!52917 (= (arrayCountValidKeys!0 (_keys!4288 (_2!1216 lt!54427)) #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!54427)))) (_size!499 (_2!1216 lt!54427))))))

(declare-fun b!106467 () Bool)

(declare-fun res!52918 () Bool)

(assert (=> b!106467 (=> (not res!52918) (not e!69277))))

(assert (=> b!106467 (= res!52918 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 (_2!1216 lt!54427)) (mask!6728 (_2!1216 lt!54427))))))

(declare-fun b!106468 () Bool)

(assert (=> b!106468 (= e!69277 (arrayNoDuplicates!0 (_keys!4288 (_2!1216 lt!54427)) #b00000000000000000000000000000000 Nil!1640))))

(assert (= (and d!29209 res!52916) b!106466))

(assert (= (and b!106466 res!52917) b!106467))

(assert (= (and b!106467 res!52918) b!106468))

(declare-fun m!119145 () Bool)

(assert (=> d!29209 m!119145))

(declare-fun m!119147 () Bool)

(assert (=> b!106466 m!119147))

(declare-fun m!119149 () Bool)

(assert (=> b!106467 m!119149))

(declare-fun m!119151 () Bool)

(assert (=> b!106468 m!119151))

(assert (=> b!106205 d!29209))

(assert (=> b!106063 d!29061))

(declare-fun d!29211 () Bool)

(declare-fun lt!54563 () Bool)

(assert (=> d!29211 (= lt!54563 (select (content!108 (toList!808 lt!54114)) (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun e!69278 () Bool)

(assert (=> d!29211 (= lt!54563 e!69278)))

(declare-fun res!52920 () Bool)

(assert (=> d!29211 (=> (not res!52920) (not e!69278))))

(assert (=> d!29211 (= res!52920 ((_ is Cons!1638) (toList!808 lt!54114)))))

(assert (=> d!29211 (= (contains!830 (toList!808 lt!54114) (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54563)))

(declare-fun b!106469 () Bool)

(declare-fun e!69279 () Bool)

(assert (=> b!106469 (= e!69278 e!69279)))

(declare-fun res!52919 () Bool)

(assert (=> b!106469 (=> res!52919 e!69279)))

(assert (=> b!106469 (= res!52919 (= (h!2235 (toList!808 lt!54114)) (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106470 () Bool)

(assert (=> b!106470 (= e!69279 (contains!830 (t!5737 (toList!808 lt!54114)) (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (= (and d!29211 res!52920) b!106469))

(assert (= (and b!106469 (not res!52919)) b!106470))

(declare-fun m!119153 () Bool)

(assert (=> d!29211 m!119153))

(declare-fun m!119155 () Bool)

(assert (=> d!29211 m!119155))

(declare-fun m!119157 () Bool)

(assert (=> b!106470 m!119157))

(assert (=> b!105798 d!29211))

(assert (=> d!28967 d!28945))

(assert (=> d!28967 d!28969))

(declare-fun d!29213 () Bool)

(assert (=> d!29213 (contains!829 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54016)))

(assert (=> d!29213 true))

(declare-fun _$35!348 () Unit!3250)

(assert (=> d!29213 (= (choose!671 lt!54017 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54016) _$35!348)))

(declare-fun bs!4369 () Bool)

(assert (= bs!4369 d!29213))

(assert (=> bs!4369 m!117729))

(assert (=> bs!4369 m!117729))

(assert (=> bs!4369 m!117731))

(assert (=> d!28967 d!29213))

(declare-fun d!29215 () Bool)

(declare-fun e!69281 () Bool)

(assert (=> d!29215 e!69281))

(declare-fun res!52921 () Bool)

(assert (=> d!29215 (=> res!52921 e!69281)))

(declare-fun lt!54564 () Bool)

(assert (=> d!29215 (= res!52921 (not lt!54564))))

(declare-fun lt!54567 () Bool)

(assert (=> d!29215 (= lt!54564 lt!54567)))

(declare-fun lt!54566 () Unit!3250)

(declare-fun e!69280 () Unit!3250)

(assert (=> d!29215 (= lt!54566 e!69280)))

(declare-fun c!18612 () Bool)

(assert (=> d!29215 (= c!18612 lt!54567)))

(assert (=> d!29215 (= lt!54567 (containsKey!159 (toList!808 lt!54017) lt!54016))))

(assert (=> d!29215 (= (contains!829 lt!54017 lt!54016) lt!54564)))

(declare-fun b!106472 () Bool)

(declare-fun lt!54565 () Unit!3250)

(assert (=> b!106472 (= e!69280 lt!54565)))

(assert (=> b!106472 (= lt!54565 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54017) lt!54016))))

(assert (=> b!106472 (isDefined!109 (getValueByKey!155 (toList!808 lt!54017) lt!54016))))

(declare-fun b!106473 () Bool)

(declare-fun Unit!3294 () Unit!3250)

(assert (=> b!106473 (= e!69280 Unit!3294)))

(declare-fun b!106474 () Bool)

(assert (=> b!106474 (= e!69281 (isDefined!109 (getValueByKey!155 (toList!808 lt!54017) lt!54016)))))

(assert (= (and d!29215 c!18612) b!106472))

(assert (= (and d!29215 (not c!18612)) b!106473))

(assert (= (and d!29215 (not res!52921)) b!106474))

(declare-fun m!119159 () Bool)

(assert (=> d!29215 m!119159))

(declare-fun m!119161 () Bool)

(assert (=> b!106472 m!119161))

(declare-fun m!119163 () Bool)

(assert (=> b!106472 m!119163))

(assert (=> b!106472 m!119163))

(declare-fun m!119165 () Bool)

(assert (=> b!106472 m!119165))

(assert (=> b!106474 m!119163))

(assert (=> b!106474 m!119163))

(assert (=> b!106474 m!119165))

(assert (=> d!28967 d!29215))

(declare-fun b!106475 () Bool)

(declare-fun e!69287 () Bool)

(declare-fun e!69286 () Bool)

(assert (=> b!106475 (= e!69287 e!69286)))

(declare-fun c!18613 () Bool)

(assert (=> b!106475 (= c!18613 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!106476 () Bool)

(declare-fun e!69282 () Bool)

(assert (=> b!106476 (= e!69287 e!69282)))

(assert (=> b!106476 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun lt!54572 () ListLongMap!1585)

(declare-fun res!52924 () Bool)

(assert (=> b!106476 (= res!52924 (contains!829 lt!54572 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!106476 (=> (not res!52924) (not e!69282))))

(declare-fun d!29217 () Bool)

(declare-fun e!69285 () Bool)

(assert (=> d!29217 e!69285))

(declare-fun res!52925 () Bool)

(assert (=> d!29217 (=> (not res!52925) (not e!69285))))

(assert (=> d!29217 (= res!52925 (not (contains!829 lt!54572 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!69284 () ListLongMap!1585)

(assert (=> d!29217 (= lt!54572 e!69284)))

(declare-fun c!18615 () Bool)

(assert (=> d!29217 (= c!18615 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> d!29217 (validMask!0 (mask!6728 (v!2892 (underlying!362 thiss!992))))))

(assert (=> d!29217 (= (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))) lt!54572)))

(declare-fun b!106477 () Bool)

(assert (=> b!106477 (= e!69285 e!69287)))

(declare-fun c!18614 () Bool)

(declare-fun e!69288 () Bool)

(assert (=> b!106477 (= c!18614 e!69288)))

(declare-fun res!52923 () Bool)

(assert (=> b!106477 (=> (not res!52923) (not e!69288))))

(assert (=> b!106477 (= res!52923 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!106478 () Bool)

(assert (=> b!106478 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> b!106478 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2318 (_values!2565 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> b!106478 (= e!69282 (= (apply!98 lt!54572 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106479 () Bool)

(declare-fun lt!54570 () Unit!3250)

(declare-fun lt!54568 () Unit!3250)

(assert (=> b!106479 (= lt!54570 lt!54568)))

(declare-fun lt!54574 () (_ BitVec 64))

(declare-fun lt!54571 () V!3219)

(declare-fun lt!54569 () (_ BitVec 64))

(declare-fun lt!54573 () ListLongMap!1585)

(assert (=> b!106479 (not (contains!829 (+!146 lt!54573 (tuple2!2411 lt!54569 lt!54571)) lt!54574))))

(assert (=> b!106479 (= lt!54568 (addStillNotContains!48 lt!54573 lt!54569 lt!54571 lt!54574))))

(assert (=> b!106479 (= lt!54574 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106479 (= lt!54571 (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106479 (= lt!54569 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!11266 () ListLongMap!1585)

(assert (=> b!106479 (= lt!54573 call!11266)))

(declare-fun e!69283 () ListLongMap!1585)

(assert (=> b!106479 (= e!69283 (+!146 call!11266 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106480 () Bool)

(assert (=> b!106480 (= e!69284 (ListLongMap!1586 Nil!1639))))

(declare-fun b!106481 () Bool)

(assert (=> b!106481 (= e!69283 call!11266)))

(declare-fun b!106482 () Bool)

(assert (=> b!106482 (= e!69284 e!69283)))

(declare-fun c!18616 () Bool)

(assert (=> b!106482 (= c!18616 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!106483 () Bool)

(assert (=> b!106483 (= e!69286 (isEmpty!375 lt!54572))))

(declare-fun bm!11263 () Bool)

(assert (=> bm!11263 (= call!11266 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun b!106484 () Bool)

(assert (=> b!106484 (= e!69288 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!106484 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!106485 () Bool)

(assert (=> b!106485 (= e!69286 (= lt!54572 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (_values!2565 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992))) (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) (zeroValue!2457 (v!2892 (underlying!362 thiss!992))) (minValue!2457 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!106486 () Bool)

(declare-fun res!52922 () Bool)

(assert (=> b!106486 (=> (not res!52922) (not e!69285))))

(assert (=> b!106486 (= res!52922 (not (contains!829 lt!54572 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29217 c!18615) b!106480))

(assert (= (and d!29217 (not c!18615)) b!106482))

(assert (= (and b!106482 c!18616) b!106479))

(assert (= (and b!106482 (not c!18616)) b!106481))

(assert (= (or b!106479 b!106481) bm!11263))

(assert (= (and d!29217 res!52925) b!106486))

(assert (= (and b!106486 res!52922) b!106477))

(assert (= (and b!106477 res!52923) b!106484))

(assert (= (and b!106477 c!18614) b!106476))

(assert (= (and b!106477 (not c!18614)) b!106475))

(assert (= (and b!106476 res!52924) b!106478))

(assert (= (and b!106475 c!18613) b!106485))

(assert (= (and b!106475 (not c!18613)) b!106483))

(declare-fun b_lambda!4779 () Bool)

(assert (=> (not b_lambda!4779) (not b!106478)))

(assert (=> b!106478 t!5734))

(declare-fun b_and!6573 () Bool)

(assert (= b_and!6569 (and (=> t!5734 result!3461) b_and!6573)))

(assert (=> b!106478 t!5736))

(declare-fun b_and!6575 () Bool)

(assert (= b_and!6571 (and (=> t!5736 result!3465) b_and!6575)))

(declare-fun b_lambda!4781 () Bool)

(assert (=> (not b_lambda!4781) (not b!106479)))

(assert (=> b!106479 t!5734))

(declare-fun b_and!6577 () Bool)

(assert (= b_and!6573 (and (=> t!5734 result!3461) b_and!6577)))

(assert (=> b!106479 t!5736))

(declare-fun b_and!6579 () Bool)

(assert (= b_and!6575 (and (=> t!5736 result!3465) b_and!6579)))

(declare-fun m!119167 () Bool)

(assert (=> b!106482 m!119167))

(assert (=> b!106482 m!119167))

(declare-fun m!119169 () Bool)

(assert (=> b!106482 m!119169))

(declare-fun m!119171 () Bool)

(assert (=> d!29217 m!119171))

(assert (=> d!29217 m!117531))

(assert (=> b!106478 m!117549))

(declare-fun m!119173 () Bool)

(assert (=> b!106478 m!119173))

(assert (=> b!106478 m!119167))

(declare-fun m!119175 () Bool)

(assert (=> b!106478 m!119175))

(assert (=> b!106478 m!119173))

(assert (=> b!106478 m!117549))

(declare-fun m!119177 () Bool)

(assert (=> b!106478 m!119177))

(assert (=> b!106478 m!119167))

(declare-fun m!119179 () Bool)

(assert (=> b!106483 m!119179))

(assert (=> b!106476 m!119167))

(assert (=> b!106476 m!119167))

(declare-fun m!119181 () Bool)

(assert (=> b!106476 m!119181))

(assert (=> b!106484 m!119167))

(assert (=> b!106484 m!119167))

(assert (=> b!106484 m!119169))

(declare-fun m!119183 () Bool)

(assert (=> b!106486 m!119183))

(declare-fun m!119185 () Bool)

(assert (=> b!106479 m!119185))

(assert (=> b!106479 m!119185))

(declare-fun m!119187 () Bool)

(assert (=> b!106479 m!119187))

(declare-fun m!119189 () Bool)

(assert (=> b!106479 m!119189))

(assert (=> b!106479 m!117549))

(assert (=> b!106479 m!119173))

(declare-fun m!119191 () Bool)

(assert (=> b!106479 m!119191))

(assert (=> b!106479 m!119173))

(assert (=> b!106479 m!117549))

(assert (=> b!106479 m!119177))

(assert (=> b!106479 m!119167))

(declare-fun m!119193 () Bool)

(assert (=> bm!11263 m!119193))

(assert (=> b!106485 m!119193))

(assert (=> b!105776 d!29217))

(declare-fun d!29219 () Bool)

(declare-fun e!69290 () Bool)

(assert (=> d!29219 e!69290))

(declare-fun res!52926 () Bool)

(assert (=> d!29219 (=> res!52926 e!69290)))

(declare-fun lt!54575 () Bool)

(assert (=> d!29219 (= res!52926 (not lt!54575))))

(declare-fun lt!54578 () Bool)

(assert (=> d!29219 (= lt!54575 lt!54578)))

(declare-fun lt!54577 () Unit!3250)

(declare-fun e!69289 () Unit!3250)

(assert (=> d!29219 (= lt!54577 e!69289)))

(declare-fun c!18617 () Bool)

(assert (=> d!29219 (= c!18617 lt!54578)))

(assert (=> d!29219 (= lt!54578 (containsKey!159 (toList!808 lt!54229) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29219 (= (contains!829 lt!54229 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) lt!54575)))

(declare-fun b!106487 () Bool)

(declare-fun lt!54576 () Unit!3250)

(assert (=> b!106487 (= e!69289 lt!54576)))

(assert (=> b!106487 (= lt!54576 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54229) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106487 (isDefined!109 (getValueByKey!155 (toList!808 lt!54229) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106488 () Bool)

(declare-fun Unit!3295 () Unit!3250)

(assert (=> b!106488 (= e!69289 Unit!3295)))

(declare-fun b!106489 () Bool)

(assert (=> b!106489 (= e!69290 (isDefined!109 (getValueByKey!155 (toList!808 lt!54229) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29219 c!18617) b!106487))

(assert (= (and d!29219 (not c!18617)) b!106488))

(assert (= (and d!29219 (not res!52926)) b!106489))

(assert (=> d!29219 m!117859))

(declare-fun m!119195 () Bool)

(assert (=> d!29219 m!119195))

(assert (=> b!106487 m!117859))

(declare-fun m!119197 () Bool)

(assert (=> b!106487 m!119197))

(assert (=> b!106487 m!117859))

(assert (=> b!106487 m!118911))

(assert (=> b!106487 m!118911))

(declare-fun m!119199 () Bool)

(assert (=> b!106487 m!119199))

(assert (=> b!106489 m!117859))

(assert (=> b!106489 m!118911))

(assert (=> b!106489 m!118911))

(assert (=> b!106489 m!119199))

(assert (=> b!105982 d!29219))

(declare-fun d!29221 () Bool)

(assert (=> d!29221 (= (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016)) (not (isEmpty!376 (getValueByKey!155 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016))))))

(declare-fun bs!4370 () Bool)

(assert (= bs!4370 d!29221))

(assert (=> bs!4370 m!118347))

(declare-fun m!119201 () Bool)

(assert (=> bs!4370 m!119201))

(assert (=> b!106024 d!29221))

(declare-fun b!106491 () Bool)

(declare-fun e!69291 () Option!161)

(declare-fun e!69292 () Option!161)

(assert (=> b!106491 (= e!69291 e!69292)))

(declare-fun c!18619 () Bool)

(assert (=> b!106491 (= c!18619 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (not (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) lt!54016))))))

(declare-fun d!29223 () Bool)

(declare-fun c!18618 () Bool)

(assert (=> d!29223 (= c!18618 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) lt!54016)))))

(assert (=> d!29223 (= (getValueByKey!155 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016) e!69291)))

(declare-fun b!106492 () Bool)

(assert (=> b!106492 (= e!69292 (getValueByKey!155 (t!5737 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) lt!54016))))

(declare-fun b!106490 () Bool)

(assert (=> b!106490 (= e!69291 (Some!160 (_2!1215 (h!2235 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))))

(declare-fun b!106493 () Bool)

(assert (=> b!106493 (= e!69292 None!159)))

(assert (= (and d!29223 c!18618) b!106490))

(assert (= (and d!29223 (not c!18618)) b!106491))

(assert (= (and b!106491 c!18619) b!106492))

(assert (= (and b!106491 (not c!18619)) b!106493))

(declare-fun m!119203 () Bool)

(assert (=> b!106492 m!119203))

(assert (=> b!106024 d!29223))

(declare-fun d!29225 () Bool)

(assert (=> d!29225 (isDefined!109 (getValueByKey!155 (toList!808 lt!54031) (_1!1215 lt!53818)))))

(declare-fun lt!54579 () Unit!3250)

(assert (=> d!29225 (= lt!54579 (choose!667 (toList!808 lt!54031) (_1!1215 lt!53818)))))

(declare-fun e!69293 () Bool)

(assert (=> d!29225 e!69293))

(declare-fun res!52927 () Bool)

(assert (=> d!29225 (=> (not res!52927) (not e!69293))))

(assert (=> d!29225 (= res!52927 (isStrictlySorted!304 (toList!808 lt!54031)))))

(assert (=> d!29225 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54031) (_1!1215 lt!53818)) lt!54579)))

(declare-fun b!106494 () Bool)

(assert (=> b!106494 (= e!69293 (containsKey!159 (toList!808 lt!54031) (_1!1215 lt!53818)))))

(assert (= (and d!29225 res!52927) b!106494))

(assert (=> d!29225 m!117749))

(assert (=> d!29225 m!117749))

(assert (=> d!29225 m!118617))

(declare-fun m!119205 () Bool)

(assert (=> d!29225 m!119205))

(declare-fun m!119207 () Bool)

(assert (=> d!29225 m!119207))

(assert (=> b!106494 m!118613))

(assert (=> b!106143 d!29225))

(declare-fun d!29227 () Bool)

(assert (=> d!29227 (= (isDefined!109 (getValueByKey!155 (toList!808 lt!54031) (_1!1215 lt!53818))) (not (isEmpty!376 (getValueByKey!155 (toList!808 lt!54031) (_1!1215 lt!53818)))))))

(declare-fun bs!4371 () Bool)

(assert (= bs!4371 d!29227))

(assert (=> bs!4371 m!117749))

(declare-fun m!119209 () Bool)

(assert (=> bs!4371 m!119209))

(assert (=> b!106143 d!29227))

(assert (=> b!106143 d!28867))

(declare-fun b!106496 () Bool)

(declare-fun e!69294 () Option!161)

(declare-fun e!69295 () Option!161)

(assert (=> b!106496 (= e!69294 e!69295)))

(declare-fun c!18621 () Bool)

(assert (=> b!106496 (= c!18621 (and ((_ is Cons!1638) (t!5737 lt!54066)) (not (= (_1!1215 (h!2235 (t!5737 lt!54066))) (_1!1215 lt!53817)))))))

(declare-fun d!29229 () Bool)

(declare-fun c!18620 () Bool)

(assert (=> d!29229 (= c!18620 (and ((_ is Cons!1638) (t!5737 lt!54066)) (= (_1!1215 (h!2235 (t!5737 lt!54066))) (_1!1215 lt!53817))))))

(assert (=> d!29229 (= (getValueByKey!155 (t!5737 lt!54066) (_1!1215 lt!53817)) e!69294)))

(declare-fun b!106497 () Bool)

(assert (=> b!106497 (= e!69295 (getValueByKey!155 (t!5737 (t!5737 lt!54066)) (_1!1215 lt!53817)))))

(declare-fun b!106495 () Bool)

(assert (=> b!106495 (= e!69294 (Some!160 (_2!1215 (h!2235 (t!5737 lt!54066)))))))

(declare-fun b!106498 () Bool)

(assert (=> b!106498 (= e!69295 None!159)))

(assert (= (and d!29229 c!18620) b!106495))

(assert (= (and d!29229 (not c!18620)) b!106496))

(assert (= (and b!106496 c!18621) b!106497))

(assert (= (and b!106496 (not c!18621)) b!106498))

(declare-fun m!119211 () Bool)

(assert (=> b!106497 m!119211))

(assert (=> b!105872 d!29229))

(declare-fun d!29231 () Bool)

(declare-fun e!69297 () Bool)

(assert (=> d!29231 e!69297))

(declare-fun res!52928 () Bool)

(assert (=> d!29231 (=> res!52928 e!69297)))

(declare-fun lt!54580 () Bool)

(assert (=> d!29231 (= res!52928 (not lt!54580))))

(declare-fun lt!54583 () Bool)

(assert (=> d!29231 (= lt!54580 lt!54583)))

(declare-fun lt!54582 () Unit!3250)

(declare-fun e!69296 () Unit!3250)

(assert (=> d!29231 (= lt!54582 e!69296)))

(declare-fun c!18622 () Bool)

(assert (=> d!29231 (= c!18622 lt!54583)))

(assert (=> d!29231 (= lt!54583 (containsKey!159 (toList!808 lt!54248) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!29231 (= (contains!829 lt!54248 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54580)))

(declare-fun b!106499 () Bool)

(declare-fun lt!54581 () Unit!3250)

(assert (=> b!106499 (= e!69296 lt!54581)))

(assert (=> b!106499 (= lt!54581 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54248) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> b!106499 (isDefined!109 (getValueByKey!155 (toList!808 lt!54248) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106500 () Bool)

(declare-fun Unit!3296 () Unit!3250)

(assert (=> b!106500 (= e!69296 Unit!3296)))

(declare-fun b!106501 () Bool)

(assert (=> b!106501 (= e!69297 (isDefined!109 (getValueByKey!155 (toList!808 lt!54248) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29231 c!18622) b!106499))

(assert (= (and d!29231 (not c!18622)) b!106500))

(assert (= (and d!29231 (not res!52928)) b!106501))

(declare-fun m!119213 () Bool)

(assert (=> d!29231 m!119213))

(declare-fun m!119215 () Bool)

(assert (=> b!106499 m!119215))

(assert (=> b!106499 m!118279))

(assert (=> b!106499 m!118279))

(declare-fun m!119217 () Bool)

(assert (=> b!106499 m!119217))

(assert (=> b!106501 m!118279))

(assert (=> b!106501 m!118279))

(assert (=> b!106501 m!119217))

(assert (=> d!28937 d!29231))

(declare-fun b!106503 () Bool)

(declare-fun e!69298 () Option!161)

(declare-fun e!69299 () Option!161)

(assert (=> b!106503 (= e!69298 e!69299)))

(declare-fun c!18624 () Bool)

(assert (=> b!106503 (= c!18624 (and ((_ is Cons!1638) lt!54247) (not (= (_1!1215 (h!2235 lt!54247)) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun d!29233 () Bool)

(declare-fun c!18623 () Bool)

(assert (=> d!29233 (= c!18623 (and ((_ is Cons!1638) lt!54247) (= (_1!1215 (h!2235 lt!54247)) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29233 (= (getValueByKey!155 lt!54247 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69298)))

(declare-fun b!106504 () Bool)

(assert (=> b!106504 (= e!69299 (getValueByKey!155 (t!5737 lt!54247) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106502 () Bool)

(assert (=> b!106502 (= e!69298 (Some!160 (_2!1215 (h!2235 lt!54247))))))

(declare-fun b!106505 () Bool)

(assert (=> b!106505 (= e!69299 None!159)))

(assert (= (and d!29233 c!18623) b!106502))

(assert (= (and d!29233 (not c!18623)) b!106503))

(assert (= (and b!106503 c!18624) b!106504))

(assert (= (and b!106503 (not c!18624)) b!106505))

(declare-fun m!119219 () Bool)

(assert (=> b!106504 m!119219))

(assert (=> d!28937 d!29233))

(declare-fun d!29235 () Bool)

(assert (=> d!29235 (= (getValueByKey!155 lt!54247 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54584 () Unit!3250)

(assert (=> d!29235 (= lt!54584 (choose!666 lt!54247 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun e!69300 () Bool)

(assert (=> d!29235 e!69300))

(declare-fun res!52929 () Bool)

(assert (=> d!29235 (=> (not res!52929) (not e!69300))))

(assert (=> d!29235 (= res!52929 (isStrictlySorted!304 lt!54247))))

(assert (=> d!29235 (= (lemmaContainsTupThenGetReturnValue!73 lt!54247 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54584)))

(declare-fun b!106506 () Bool)

(declare-fun res!52930 () Bool)

(assert (=> b!106506 (=> (not res!52930) (not e!69300))))

(assert (=> b!106506 (= res!52930 (containsKey!159 lt!54247 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106507 () Bool)

(assert (=> b!106507 (= e!69300 (contains!830 lt!54247 (tuple2!2411 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29235 res!52929) b!106506))

(assert (= (and b!106506 res!52930) b!106507))

(assert (=> d!29235 m!118273))

(declare-fun m!119221 () Bool)

(assert (=> d!29235 m!119221))

(declare-fun m!119223 () Bool)

(assert (=> d!29235 m!119223))

(declare-fun m!119225 () Bool)

(assert (=> b!106506 m!119225))

(declare-fun m!119227 () Bool)

(assert (=> b!106507 m!119227))

(assert (=> d!28937 d!29235))

(declare-fun d!29237 () Bool)

(declare-fun e!69302 () Bool)

(assert (=> d!29237 e!69302))

(declare-fun res!52931 () Bool)

(assert (=> d!29237 (=> (not res!52931) (not e!69302))))

(declare-fun lt!54585 () List!1642)

(assert (=> d!29237 (= res!52931 (isStrictlySorted!304 lt!54585))))

(declare-fun e!69301 () List!1642)

(assert (=> d!29237 (= lt!54585 e!69301)))

(declare-fun c!18625 () Bool)

(assert (=> d!29237 (= c!18625 (and ((_ is Cons!1638) (toList!808 call!11166)) (bvslt (_1!1215 (h!2235 (toList!808 call!11166))) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29237 (isStrictlySorted!304 (toList!808 call!11166))))

(assert (=> d!29237 (= (insertStrictlySorted!75 (toList!808 call!11166) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54585)))

(declare-fun b!106508 () Bool)

(declare-fun e!69304 () List!1642)

(declare-fun call!11269 () List!1642)

(assert (=> b!106508 (= e!69304 call!11269)))

(declare-fun b!106509 () Bool)

(declare-fun c!18626 () Bool)

(assert (=> b!106509 (= c!18626 (and ((_ is Cons!1638) (toList!808 call!11166)) (bvsgt (_1!1215 (h!2235 (toList!808 call!11166))) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun e!69303 () List!1642)

(assert (=> b!106509 (= e!69303 e!69304)))

(declare-fun b!106510 () Bool)

(declare-fun call!11267 () List!1642)

(assert (=> b!106510 (= e!69303 call!11267)))

(declare-fun b!106511 () Bool)

(declare-fun call!11268 () List!1642)

(assert (=> b!106511 (= e!69301 call!11268)))

(declare-fun b!106512 () Bool)

(declare-fun res!52932 () Bool)

(assert (=> b!106512 (=> (not res!52932) (not e!69302))))

(assert (=> b!106512 (= res!52932 (containsKey!159 lt!54585 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun bm!11264 () Bool)

(assert (=> bm!11264 (= call!11267 call!11268)))

(declare-fun b!106513 () Bool)

(declare-fun c!18627 () Bool)

(declare-fun e!69305 () List!1642)

(assert (=> b!106513 (= e!69305 (ite c!18627 (t!5737 (toList!808 call!11166)) (ite c!18626 (Cons!1638 (h!2235 (toList!808 call!11166)) (t!5737 (toList!808 call!11166))) Nil!1639)))))

(declare-fun bm!11265 () Bool)

(assert (=> bm!11265 (= call!11268 ($colon$colon!80 e!69305 (ite c!18625 (h!2235 (toList!808 call!11166)) (tuple2!2411 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun c!18628 () Bool)

(assert (=> bm!11265 (= c!18628 c!18625)))

(declare-fun b!106514 () Bool)

(assert (=> b!106514 (= e!69305 (insertStrictlySorted!75 (t!5737 (toList!808 call!11166)) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106515 () Bool)

(assert (=> b!106515 (= e!69302 (contains!830 lt!54585 (tuple2!2411 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun bm!11266 () Bool)

(assert (=> bm!11266 (= call!11269 call!11267)))

(declare-fun b!106516 () Bool)

(assert (=> b!106516 (= e!69304 call!11269)))

(declare-fun b!106517 () Bool)

(assert (=> b!106517 (= e!69301 e!69303)))

(assert (=> b!106517 (= c!18627 (and ((_ is Cons!1638) (toList!808 call!11166)) (= (_1!1215 (h!2235 (toList!808 call!11166))) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29237 c!18625) b!106511))

(assert (= (and d!29237 (not c!18625)) b!106517))

(assert (= (and b!106517 c!18627) b!106510))

(assert (= (and b!106517 (not c!18627)) b!106509))

(assert (= (and b!106509 c!18626) b!106516))

(assert (= (and b!106509 (not c!18626)) b!106508))

(assert (= (or b!106516 b!106508) bm!11266))

(assert (= (or b!106510 bm!11266) bm!11264))

(assert (= (or b!106511 bm!11264) bm!11265))

(assert (= (and bm!11265 c!18628) b!106514))

(assert (= (and bm!11265 (not c!18628)) b!106513))

(assert (= (and d!29237 res!52931) b!106512))

(assert (= (and b!106512 res!52932) b!106515))

(declare-fun m!119229 () Bool)

(assert (=> b!106515 m!119229))

(declare-fun m!119231 () Bool)

(assert (=> bm!11265 m!119231))

(declare-fun m!119233 () Bool)

(assert (=> b!106512 m!119233))

(declare-fun m!119235 () Bool)

(assert (=> b!106514 m!119235))

(declare-fun m!119237 () Bool)

(assert (=> d!29237 m!119237))

(declare-fun m!119239 () Bool)

(assert (=> d!29237 m!119239))

(assert (=> d!28937 d!29237))

(assert (=> d!28919 d!28821))

(declare-fun d!29239 () Bool)

(declare-fun c!18631 () Bool)

(assert (=> d!29239 (= c!18631 ((_ is Nil!1639) (toList!808 lt!54038)))))

(declare-fun e!69308 () (InoxSet tuple2!2410))

(assert (=> d!29239 (= (content!108 (toList!808 lt!54038)) e!69308)))

(declare-fun b!106522 () Bool)

(assert (=> b!106522 (= e!69308 ((as const (Array tuple2!2410 Bool)) false))))

(declare-fun b!106523 () Bool)

(assert (=> b!106523 (= e!69308 ((_ map or) (store ((as const (Array tuple2!2410 Bool)) false) (h!2235 (toList!808 lt!54038)) true) (content!108 (t!5737 (toList!808 lt!54038)))))))

(assert (= (and d!29239 c!18631) b!106522))

(assert (= (and d!29239 (not c!18631)) b!106523))

(declare-fun m!119241 () Bool)

(assert (=> b!106523 m!119241))

(assert (=> b!106523 m!118889))

(assert (=> d!28833 d!29239))

(declare-fun b!106525 () Bool)

(declare-fun e!69309 () Option!161)

(declare-fun e!69310 () Option!161)

(assert (=> b!106525 (= e!69309 e!69310)))

(declare-fun c!18633 () Bool)

(assert (=> b!106525 (= c!18633 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!53820))) (not (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!53820)))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))))

(declare-fun d!29241 () Bool)

(declare-fun c!18632 () Bool)

(assert (=> d!29241 (= c!18632 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!53820))) (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!53820)))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (=> d!29241 (= (getValueByKey!155 (t!5737 (toList!808 lt!53820)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) e!69309)))

(declare-fun b!106526 () Bool)

(assert (=> b!106526 (= e!69310 (getValueByKey!155 (t!5737 (t!5737 (toList!808 lt!53820))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!106524 () Bool)

(assert (=> b!106524 (= e!69309 (Some!160 (_2!1215 (h!2235 (t!5737 (toList!808 lt!53820))))))))

(declare-fun b!106527 () Bool)

(assert (=> b!106527 (= e!69310 None!159)))

(assert (= (and d!29241 c!18632) b!106524))

(assert (= (and d!29241 (not c!18632)) b!106525))

(assert (= (and b!106525 c!18633) b!106526))

(assert (= (and b!106525 (not c!18633)) b!106527))

(assert (=> b!106526 m!117519))

(declare-fun m!119243 () Bool)

(assert (=> b!106526 m!119243))

(assert (=> b!105837 d!29241))

(declare-fun d!29243 () Bool)

(assert (=> d!29243 (contains!829 (getCurrentListMap!484 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))

(assert (=> d!29243 true))

(declare-fun _$16!126 () Unit!3250)

(assert (=> d!29243 (= (choose!668 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3225 lt!53938) (defaultEntry!2582 newMap!16)) _$16!126)))

(declare-fun bs!4372 () Bool)

(assert (= bs!4372 d!29243))

(assert (=> bs!4372 m!118203))

(assert (=> bs!4372 m!117659))

(assert (=> bs!4372 m!118203))

(assert (=> bs!4372 m!117659))

(assert (=> bs!4372 m!118205))

(assert (=> d!28929 d!29243))

(assert (=> d!28929 d!29203))

(declare-fun b!106529 () Bool)

(declare-fun e!69311 () Option!161)

(declare-fun e!69312 () Option!161)

(assert (=> b!106529 (= e!69311 e!69312)))

(declare-fun c!18635 () Bool)

(assert (=> b!106529 (= c!18635 (and ((_ is Cons!1638) (toList!808 lt!54248)) (not (= (_1!1215 (h!2235 (toList!808 lt!54248))) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun d!29245 () Bool)

(declare-fun c!18634 () Bool)

(assert (=> d!29245 (= c!18634 (and ((_ is Cons!1638) (toList!808 lt!54248)) (= (_1!1215 (h!2235 (toList!808 lt!54248))) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29245 (= (getValueByKey!155 (toList!808 lt!54248) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69311)))

(declare-fun b!106530 () Bool)

(assert (=> b!106530 (= e!69312 (getValueByKey!155 (t!5737 (toList!808 lt!54248)) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106528 () Bool)

(assert (=> b!106528 (= e!69311 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54248)))))))

(declare-fun b!106531 () Bool)

(assert (=> b!106531 (= e!69312 None!159)))

(assert (= (and d!29245 c!18634) b!106528))

(assert (= (and d!29245 (not c!18634)) b!106529))

(assert (= (and b!106529 c!18635) b!106530))

(assert (= (and b!106529 (not c!18635)) b!106531))

(declare-fun m!119245 () Bool)

(assert (=> b!106530 m!119245))

(assert (=> b!105999 d!29245))

(declare-fun d!29247 () Bool)

(declare-fun res!52934 () Bool)

(declare-fun e!69315 () Bool)

(assert (=> d!29247 (=> res!52934 e!69315)))

(assert (=> d!29247 (= res!52934 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> d!29247 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992)))) e!69315)))

(declare-fun b!106532 () Bool)

(declare-fun e!69313 () Bool)

(assert (=> b!106532 (= e!69315 e!69313)))

(declare-fun c!18636 () Bool)

(assert (=> b!106532 (= c!18636 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!106533 () Bool)

(declare-fun call!11270 () Bool)

(assert (=> b!106533 (= e!69313 call!11270)))

(declare-fun b!106534 () Bool)

(declare-fun e!69314 () Bool)

(assert (=> b!106534 (= e!69314 call!11270)))

(declare-fun bm!11267 () Bool)

(assert (=> bm!11267 (= call!11270 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4288 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992)))))))

(declare-fun b!106535 () Bool)

(assert (=> b!106535 (= e!69313 e!69314)))

(declare-fun lt!54586 () (_ BitVec 64))

(assert (=> b!106535 (= lt!54586 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!54588 () Unit!3250)

(assert (=> b!106535 (= lt!54588 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) lt!54586 #b00000000000000000000000000000000))))

(assert (=> b!106535 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) lt!54586 #b00000000000000000000000000000000)))

(declare-fun lt!54587 () Unit!3250)

(assert (=> b!106535 (= lt!54587 lt!54588)))

(declare-fun res!52933 () Bool)

(assert (=> b!106535 (= res!52933 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b00000000000000000000000000000000) (_keys!4288 (v!2892 (underlying!362 thiss!992))) (mask!6728 (v!2892 (underlying!362 thiss!992)))) (Found!269 #b00000000000000000000000000000000)))))

(assert (=> b!106535 (=> (not res!52933) (not e!69314))))

(assert (= (and d!29247 (not res!52934)) b!106532))

(assert (= (and b!106532 c!18636) b!106535))

(assert (= (and b!106532 (not c!18636)) b!106533))

(assert (= (and b!106535 res!52933) b!106534))

(assert (= (or b!106534 b!106533) bm!11267))

(assert (=> b!106532 m!118857))

(assert (=> b!106532 m!118857))

(assert (=> b!106532 m!118859))

(declare-fun m!119247 () Bool)

(assert (=> bm!11267 m!119247))

(assert (=> b!106535 m!118857))

(declare-fun m!119249 () Bool)

(assert (=> b!106535 m!119249))

(declare-fun m!119251 () Bool)

(assert (=> b!106535 m!119251))

(assert (=> b!106535 m!118857))

(declare-fun m!119253 () Bool)

(assert (=> b!106535 m!119253))

(assert (=> b!106117 d!29247))

(assert (=> b!106108 d!28817))

(declare-fun d!29249 () Bool)

(assert (=> d!29249 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060))))

(declare-fun lt!54589 () Unit!3250)

(assert (=> d!29249 (= lt!54589 (choose!667 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060))))

(declare-fun e!69316 () Bool)

(assert (=> d!29249 e!69316))

(declare-fun res!52935 () Bool)

(assert (=> d!29249 (=> (not res!52935) (not e!69316))))

(assert (=> d!29249 (= res!52935 (isStrictlySorted!304 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)))))))

(assert (=> d!29249 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060) lt!54589)))

(declare-fun b!106536 () Bool)

(assert (=> b!106536 (= e!69316 (containsKey!159 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060))))

(assert (= (and d!29249 res!52935) b!106536))

(assert (=> d!29249 m!118515))

(assert (=> d!29249 m!118515))

(assert (=> d!29249 m!118517))

(declare-fun m!119255 () Bool)

(assert (=> d!29249 m!119255))

(declare-fun m!119257 () Bool)

(assert (=> d!29249 m!119257))

(assert (=> b!106536 m!118511))

(assert (=> b!106084 d!29249))

(declare-fun d!29251 () Bool)

(assert (=> d!29251 (= (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060)) (not (isEmpty!376 (getValueByKey!155 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060))))))

(declare-fun bs!4373 () Bool)

(assert (= bs!4373 d!29251))

(assert (=> bs!4373 m!118515))

(declare-fun m!119259 () Bool)

(assert (=> bs!4373 m!119259))

(assert (=> b!106084 d!29251))

(declare-fun b!106538 () Bool)

(declare-fun e!69317 () Option!161)

(declare-fun e!69318 () Option!161)

(assert (=> b!106538 (= e!69317 e!69318)))

(declare-fun c!18638 () Bool)

(assert (=> b!106538 (= c!18638 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)))) (not (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))))) lt!54060))))))

(declare-fun d!29253 () Bool)

(declare-fun c!18637 () Bool)

(assert (=> d!29253 (= c!18637 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)))) (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))))) lt!54060)))))

(assert (=> d!29253 (= (getValueByKey!155 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057))) lt!54060) e!69317)))

(declare-fun b!106539 () Bool)

(assert (=> b!106539 (= e!69318 (getValueByKey!155 (t!5737 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)))) lt!54060))))

(declare-fun b!106537 () Bool)

(assert (=> b!106537 (= e!69317 (Some!160 (_2!1215 (h!2235 (toList!808 (+!146 lt!54059 (tuple2!2411 lt!54055 lt!54057)))))))))

(declare-fun b!106540 () Bool)

(assert (=> b!106540 (= e!69318 None!159)))

(assert (= (and d!29253 c!18637) b!106537))

(assert (= (and d!29253 (not c!18637)) b!106538))

(assert (= (and b!106538 c!18638) b!106539))

(assert (= (and b!106538 (not c!18638)) b!106540))

(declare-fun m!119261 () Bool)

(assert (=> b!106539 m!119261))

(assert (=> b!106084 d!29253))

(assert (=> d!29007 d!29005))

(declare-fun d!29255 () Bool)

(assert (=> d!29255 (= (getValueByKey!155 lt!54037 (_1!1215 lt!53817)) (Some!160 (_2!1215 lt!53817)))))

(assert (=> d!29255 true))

(declare-fun _$22!433 () Unit!3250)

(assert (=> d!29255 (= (choose!666 lt!54037 (_1!1215 lt!53817) (_2!1215 lt!53817)) _$22!433)))

(declare-fun bs!4374 () Bool)

(assert (= bs!4374 d!29255))

(assert (=> bs!4374 m!117765))

(assert (=> d!29007 d!29255))

(declare-fun d!29257 () Bool)

(declare-fun res!52940 () Bool)

(declare-fun e!69323 () Bool)

(assert (=> d!29257 (=> res!52940 e!69323)))

(assert (=> d!29257 (= res!52940 (or ((_ is Nil!1639) lt!54037) ((_ is Nil!1639) (t!5737 lt!54037))))))

(assert (=> d!29257 (= (isStrictlySorted!304 lt!54037) e!69323)))

(declare-fun b!106545 () Bool)

(declare-fun e!69324 () Bool)

(assert (=> b!106545 (= e!69323 e!69324)))

(declare-fun res!52941 () Bool)

(assert (=> b!106545 (=> (not res!52941) (not e!69324))))

(assert (=> b!106545 (= res!52941 (bvslt (_1!1215 (h!2235 lt!54037)) (_1!1215 (h!2235 (t!5737 lt!54037)))))))

(declare-fun b!106546 () Bool)

(assert (=> b!106546 (= e!69324 (isStrictlySorted!304 (t!5737 lt!54037)))))

(assert (= (and d!29257 (not res!52940)) b!106545))

(assert (= (and b!106545 res!52941) b!106546))

(declare-fun m!119263 () Bool)

(assert (=> b!106546 m!119263))

(assert (=> d!29007 d!29257))

(declare-fun d!29259 () Bool)

(declare-fun lt!54590 () Bool)

(assert (=> d!29259 (= lt!54590 (select (content!108 (toList!808 lt!54298)) (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun e!69325 () Bool)

(assert (=> d!29259 (= lt!54590 e!69325)))

(declare-fun res!52943 () Bool)

(assert (=> d!29259 (=> (not res!52943) (not e!69325))))

(assert (=> d!29259 (= res!52943 ((_ is Cons!1638) (toList!808 lt!54298)))))

(assert (=> d!29259 (= (contains!830 (toList!808 lt!54298) (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54590)))

(declare-fun b!106547 () Bool)

(declare-fun e!69326 () Bool)

(assert (=> b!106547 (= e!69325 e!69326)))

(declare-fun res!52942 () Bool)

(assert (=> b!106547 (=> res!52942 e!69326)))

(assert (=> b!106547 (= res!52942 (= (h!2235 (toList!808 lt!54298)) (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!106548 () Bool)

(assert (=> b!106548 (= e!69326 (contains!830 (t!5737 (toList!808 lt!54298)) (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!29259 res!52943) b!106547))

(assert (= (and b!106547 (not res!52942)) b!106548))

(declare-fun m!119265 () Bool)

(assert (=> d!29259 m!119265))

(declare-fun m!119267 () Bool)

(assert (=> d!29259 m!119267))

(declare-fun m!119269 () Bool)

(assert (=> b!106548 m!119269))

(assert (=> b!106039 d!29259))

(declare-fun d!29261 () Bool)

(declare-fun lt!54591 () Bool)

(assert (=> d!29261 (= lt!54591 (select (content!108 (toList!808 lt!54149)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(declare-fun e!69327 () Bool)

(assert (=> d!29261 (= lt!54591 e!69327)))

(declare-fun res!52945 () Bool)

(assert (=> d!29261 (=> (not res!52945) (not e!69327))))

(assert (=> d!29261 (= res!52945 ((_ is Cons!1638) (toList!808 lt!54149)))))

(assert (=> d!29261 (= (contains!830 (toList!808 lt!54149) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) lt!54591)))

(declare-fun b!106549 () Bool)

(declare-fun e!69328 () Bool)

(assert (=> b!106549 (= e!69327 e!69328)))

(declare-fun res!52944 () Bool)

(assert (=> b!106549 (=> res!52944 e!69328)))

(assert (=> b!106549 (= res!52944 (= (h!2235 (toList!808 lt!54149)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(declare-fun b!106550 () Bool)

(assert (=> b!106550 (= e!69328 (contains!830 (t!5737 (toList!808 lt!54149)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(assert (= (and d!29261 res!52945) b!106549))

(assert (= (and b!106549 (not res!52944)) b!106550))

(declare-fun m!119271 () Bool)

(assert (=> d!29261 m!119271))

(declare-fun m!119273 () Bool)

(assert (=> d!29261 m!119273))

(declare-fun m!119275 () Bool)

(assert (=> b!106550 m!119275))

(assert (=> b!105859 d!29261))

(declare-fun d!29263 () Bool)

(declare-fun res!52946 () Bool)

(declare-fun e!69329 () Bool)

(assert (=> d!29263 (=> res!52946 e!69329)))

(assert (=> d!29263 (= res!52946 (and ((_ is Cons!1638) (toList!808 lt!54058)) (= (_1!1215 (h!2235 (toList!808 lt!54058))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29263 (= (containsKey!159 (toList!808 lt!54058) #b0000000000000000000000000000000000000000000000000000000000000000) e!69329)))

(declare-fun b!106551 () Bool)

(declare-fun e!69330 () Bool)

(assert (=> b!106551 (= e!69329 e!69330)))

(declare-fun res!52947 () Bool)

(assert (=> b!106551 (=> (not res!52947) (not e!69330))))

(assert (=> b!106551 (= res!52947 (and (or (not ((_ is Cons!1638) (toList!808 lt!54058))) (bvsle (_1!1215 (h!2235 (toList!808 lt!54058))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1638) (toList!808 lt!54058)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54058))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106552 () Bool)

(assert (=> b!106552 (= e!69330 (containsKey!159 (t!5737 (toList!808 lt!54058)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29263 (not res!52946)) b!106551))

(assert (= (and b!106551 res!52947) b!106552))

(declare-fun m!119277 () Bool)

(assert (=> b!106552 m!119277))

(assert (=> d!28923 d!29263))

(declare-fun d!29265 () Bool)

(assert (=> d!29265 (= (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!376 (getValueByKey!155 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4375 () Bool)

(assert (= bs!4375 d!29265))

(assert (=> bs!4375 m!118555))

(declare-fun m!119279 () Bool)

(assert (=> bs!4375 m!119279))

(assert (=> b!106142 d!29265))

(declare-fun b!106554 () Bool)

(declare-fun e!69331 () Option!161)

(declare-fun e!69332 () Option!161)

(assert (=> b!106554 (= e!69331 e!69332)))

(declare-fun c!18640 () Bool)

(assert (=> b!106554 (= c!18640 (and ((_ is Cons!1638) (toList!808 lt!54011)) (not (= (_1!1215 (h!2235 (toList!808 lt!54011))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun c!18639 () Bool)

(declare-fun d!29267 () Bool)

(assert (=> d!29267 (= c!18639 (and ((_ is Cons!1638) (toList!808 lt!54011)) (= (_1!1215 (h!2235 (toList!808 lt!54011))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29267 (= (getValueByKey!155 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69331)))

(declare-fun b!106555 () Bool)

(assert (=> b!106555 (= e!69332 (getValueByKey!155 (t!5737 (toList!808 lt!54011)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!106553 () Bool)

(assert (=> b!106553 (= e!69331 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54011)))))))

(declare-fun b!106556 () Bool)

(assert (=> b!106556 (= e!69332 None!159)))

(assert (= (and d!29267 c!18639) b!106553))

(assert (= (and d!29267 (not c!18639)) b!106554))

(assert (= (and b!106554 c!18640) b!106555))

(assert (= (and b!106554 (not c!18640)) b!106556))

(assert (=> b!106555 m!117687))

(declare-fun m!119281 () Bool)

(assert (=> b!106555 m!119281))

(assert (=> b!106142 d!29267))

(declare-fun d!29269 () Bool)

(assert (=> d!29269 (= ($colon$colon!80 e!69031 (ite c!18492 (h!2235 (toList!808 (+!146 lt!53824 lt!53817))) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818)))) (Cons!1638 (ite c!18492 (h!2235 (toList!808 (+!146 lt!53824 lt!53817))) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))) e!69031))))

(assert (=> bm!11216 d!29269))

(declare-fun d!29271 () Bool)

(declare-fun e!69334 () Bool)

(assert (=> d!29271 e!69334))

(declare-fun res!52948 () Bool)

(assert (=> d!29271 (=> res!52948 e!69334)))

(declare-fun lt!54592 () Bool)

(assert (=> d!29271 (= res!52948 (not lt!54592))))

(declare-fun lt!54595 () Bool)

(assert (=> d!29271 (= lt!54592 lt!54595)))

(declare-fun lt!54594 () Unit!3250)

(declare-fun e!69333 () Unit!3250)

(assert (=> d!29271 (= lt!54594 e!69333)))

(declare-fun c!18641 () Bool)

(assert (=> d!29271 (= c!18641 lt!54595)))

(assert (=> d!29271 (= lt!54595 (containsKey!159 (toList!808 lt!54262) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29271 (= (contains!829 lt!54262 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54592)))

(declare-fun b!106557 () Bool)

(declare-fun lt!54593 () Unit!3250)

(assert (=> b!106557 (= e!69333 lt!54593)))

(assert (=> b!106557 (= lt!54593 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54262) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106557 (isDefined!109 (getValueByKey!155 (toList!808 lt!54262) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106558 () Bool)

(declare-fun Unit!3297 () Unit!3250)

(assert (=> b!106558 (= e!69333 Unit!3297)))

(declare-fun b!106559 () Bool)

(assert (=> b!106559 (= e!69334 (isDefined!109 (getValueByKey!155 (toList!808 lt!54262) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29271 c!18641) b!106557))

(assert (= (and d!29271 (not c!18641)) b!106558))

(assert (= (and d!29271 (not res!52948)) b!106559))

(declare-fun m!119283 () Bool)

(assert (=> d!29271 m!119283))

(declare-fun m!119285 () Bool)

(assert (=> b!106557 m!119285))

(declare-fun m!119287 () Bool)

(assert (=> b!106557 m!119287))

(assert (=> b!106557 m!119287))

(declare-fun m!119289 () Bool)

(assert (=> b!106557 m!119289))

(assert (=> b!106559 m!119287))

(assert (=> b!106559 m!119287))

(assert (=> b!106559 m!119289))

(assert (=> bm!11212 d!29271))

(declare-fun d!29273 () Bool)

(declare-fun e!69336 () Bool)

(assert (=> d!29273 e!69336))

(declare-fun res!52949 () Bool)

(assert (=> d!29273 (=> res!52949 e!69336)))

(declare-fun lt!54596 () Bool)

(assert (=> d!29273 (= res!52949 (not lt!54596))))

(declare-fun lt!54599 () Bool)

(assert (=> d!29273 (= lt!54596 lt!54599)))

(declare-fun lt!54598 () Unit!3250)

(declare-fun e!69335 () Unit!3250)

(assert (=> d!29273 (= lt!54598 e!69335)))

(declare-fun c!18642 () Bool)

(assert (=> d!29273 (= c!18642 lt!54599)))

(assert (=> d!29273 (= lt!54599 (containsKey!159 (toList!808 lt!54097) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!29273 (= (contains!829 lt!54097 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!54596)))

(declare-fun b!106560 () Bool)

(declare-fun lt!54597 () Unit!3250)

(assert (=> b!106560 (= e!69335 lt!54597)))

(assert (=> b!106560 (= lt!54597 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54097) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!106560 (isDefined!109 (getValueByKey!155 (toList!808 lt!54097) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!106561 () Bool)

(declare-fun Unit!3298 () Unit!3250)

(assert (=> b!106561 (= e!69335 Unit!3298)))

(declare-fun b!106562 () Bool)

(assert (=> b!106562 (= e!69336 (isDefined!109 (getValueByKey!155 (toList!808 lt!54097) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!29273 c!18642) b!106560))

(assert (= (and d!29273 (not c!18642)) b!106561))

(assert (= (and d!29273 (not res!52949)) b!106562))

(assert (=> d!29273 m!117881))

(declare-fun m!119291 () Bool)

(assert (=> d!29273 m!119291))

(assert (=> b!106560 m!117881))

(declare-fun m!119293 () Bool)

(assert (=> b!106560 m!119293))

(assert (=> b!106560 m!117881))

(assert (=> b!106560 m!118781))

(assert (=> b!106560 m!118781))

(declare-fun m!119295 () Bool)

(assert (=> b!106560 m!119295))

(assert (=> b!106562 m!117881))

(assert (=> b!106562 m!118781))

(assert (=> b!106562 m!118781))

(assert (=> b!106562 m!119295))

(assert (=> b!105767 d!29273))

(declare-fun d!29275 () Bool)

(assert (=> d!29275 (= (+!146 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (getCurrentListMap!484 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(assert (=> d!29275 true))

(declare-fun _$5!110 () Unit!3250)

(assert (=> d!29275 (= (choose!669 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (index!3225 lt!53938) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 (defaultEntry!2582 newMap!16)) _$5!110)))

(declare-fun bs!4376 () Bool)

(assert (= bs!4376 d!29275))

(assert (=> bs!4376 m!117685))

(assert (=> bs!4376 m!117685))

(assert (=> bs!4376 m!118261))

(assert (=> bs!4376 m!117683))

(assert (=> bs!4376 m!117677))

(assert (=> d!28933 d!29275))

(assert (=> d!28933 d!29203))

(declare-fun d!29277 () Bool)

(assert (=> d!29277 (= (isDefined!109 (getValueByKey!155 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))) (not (isEmpty!376 (getValueByKey!155 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))))

(declare-fun bs!4377 () Bool)

(assert (= bs!4377 d!29277))

(assert (=> bs!4377 m!118267))

(declare-fun m!119297 () Bool)

(assert (=> bs!4377 m!119297))

(assert (=> b!105998 d!29277))

(declare-fun b!106564 () Bool)

(declare-fun e!69337 () Option!161)

(declare-fun e!69338 () Option!161)

(assert (=> b!106564 (= e!69337 e!69338)))

(declare-fun c!18644 () Bool)

(assert (=> b!106564 (= c!18644 (and ((_ is Cons!1638) (toList!808 call!11137)) (not (= (_1!1215 (h!2235 (toList!808 call!11137))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))))

(declare-fun d!29279 () Bool)

(declare-fun c!18643 () Bool)

(assert (=> d!29279 (= c!18643 (and ((_ is Cons!1638) (toList!808 call!11137)) (= (_1!1215 (h!2235 (toList!808 call!11137))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (=> d!29279 (= (getValueByKey!155 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) e!69337)))

(declare-fun b!106565 () Bool)

(assert (=> b!106565 (= e!69338 (getValueByKey!155 (t!5737 (toList!808 call!11137)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!106563 () Bool)

(assert (=> b!106563 (= e!69337 (Some!160 (_2!1215 (h!2235 (toList!808 call!11137)))))))

(declare-fun b!106566 () Bool)

(assert (=> b!106566 (= e!69338 None!159)))

(assert (= (and d!29279 c!18643) b!106563))

(assert (= (and d!29279 (not c!18643)) b!106564))

(assert (= (and b!106564 c!18644) b!106565))

(assert (= (and b!106564 (not c!18644)) b!106566))

(assert (=> b!106565 m!117519))

(declare-fun m!119299 () Bool)

(assert (=> b!106565 m!119299))

(assert (=> b!105998 d!29279))

(declare-fun d!29281 () Bool)

(assert (=> d!29281 (= (get!1342 (getValueByKey!155 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2896 (getValueByKey!155 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28857 d!29281))

(declare-fun b!106568 () Bool)

(declare-fun e!69339 () Option!161)

(declare-fun e!69340 () Option!161)

(assert (=> b!106568 (= e!69339 e!69340)))

(declare-fun c!18646 () Bool)

(assert (=> b!106568 (= c!18646 (and ((_ is Cons!1638) (toList!808 lt!54011)) (not (= (_1!1215 (h!2235 (toList!808 lt!54011))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!29283 () Bool)

(declare-fun c!18645 () Bool)

(assert (=> d!29283 (= c!18645 (and ((_ is Cons!1638) (toList!808 lt!54011)) (= (_1!1215 (h!2235 (toList!808 lt!54011))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29283 (= (getValueByKey!155 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000) e!69339)))

(declare-fun b!106569 () Bool)

(assert (=> b!106569 (= e!69340 (getValueByKey!155 (t!5737 (toList!808 lt!54011)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106567 () Bool)

(assert (=> b!106567 (= e!69339 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54011)))))))

(declare-fun b!106570 () Bool)

(assert (=> b!106570 (= e!69340 None!159)))

(assert (= (and d!29283 c!18645) b!106567))

(assert (= (and d!29283 (not c!18645)) b!106568))

(assert (= (and b!106568 c!18646) b!106569))

(assert (= (and b!106568 (not c!18646)) b!106570))

(declare-fun m!119301 () Bool)

(assert (=> b!106569 m!119301))

(assert (=> d!28857 d!29283))

(declare-fun b!106571 () Bool)

(declare-fun e!69346 () Bool)

(declare-fun e!69345 () Bool)

(assert (=> b!106571 (= e!69346 e!69345)))

(declare-fun c!18647 () Bool)

(assert (=> b!106571 (= c!18647 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106572 () Bool)

(declare-fun e!69341 () Bool)

(assert (=> b!106572 (= e!69346 e!69341)))

(assert (=> b!106572 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun res!52952 () Bool)

(declare-fun lt!54604 () ListLongMap!1585)

(assert (=> b!106572 (= res!52952 (contains!829 lt!54604 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106572 (=> (not res!52952) (not e!69341))))

(declare-fun d!29285 () Bool)

(declare-fun e!69344 () Bool)

(assert (=> d!29285 e!69344))

(declare-fun res!52953 () Bool)

(assert (=> d!29285 (=> (not res!52953) (not e!69344))))

(assert (=> d!29285 (= res!52953 (not (contains!829 lt!54604 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!69343 () ListLongMap!1585)

(assert (=> d!29285 (= lt!54604 e!69343)))

(declare-fun c!18649 () Bool)

(assert (=> d!29285 (= c!18649 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!29285 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29285 (= (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949) (mask!6728 newMap!16) (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54604)))

(declare-fun b!106573 () Bool)

(assert (=> b!106573 (= e!69344 e!69346)))

(declare-fun c!18648 () Bool)

(declare-fun e!69347 () Bool)

(assert (=> b!106573 (= c!18648 e!69347)))

(declare-fun res!52951 () Bool)

(assert (=> b!106573 (=> (not res!52951) (not e!69347))))

(assert (=> b!106573 (= res!52951 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106574 () Bool)

(assert (=> b!106574 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> b!106574 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949))))))

(assert (=> b!106574 (= e!69341 (= (apply!98 lt!54604 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106575 () Bool)

(declare-fun lt!54602 () Unit!3250)

(declare-fun lt!54600 () Unit!3250)

(assert (=> b!106575 (= lt!54602 lt!54600)))

(declare-fun lt!54601 () (_ BitVec 64))

(declare-fun lt!54606 () (_ BitVec 64))

(declare-fun lt!54605 () ListLongMap!1585)

(declare-fun lt!54603 () V!3219)

(assert (=> b!106575 (not (contains!829 (+!146 lt!54605 (tuple2!2411 lt!54601 lt!54603)) lt!54606))))

(assert (=> b!106575 (= lt!54600 (addStillNotContains!48 lt!54605 lt!54601 lt!54603 lt!54606))))

(assert (=> b!106575 (= lt!54606 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106575 (= lt!54603 (get!1339 (select (arr!2063 (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106575 (= lt!54601 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11271 () ListLongMap!1585)

(assert (=> b!106575 (= lt!54605 call!11271)))

(declare-fun e!69342 () ListLongMap!1585)

(assert (=> b!106575 (= e!69342 (+!146 call!11271 (tuple2!2411 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (get!1339 (select (arr!2063 (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106576 () Bool)

(assert (=> b!106576 (= e!69343 (ListLongMap!1586 Nil!1639))))

(declare-fun b!106577 () Bool)

(assert (=> b!106577 (= e!69342 call!11271)))

(declare-fun b!106578 () Bool)

(assert (=> b!106578 (= e!69343 e!69342)))

(declare-fun c!18650 () Bool)

(assert (=> b!106578 (= c!18650 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106579 () Bool)

(assert (=> b!106579 (= e!69345 (isEmpty!375 lt!54604))))

(declare-fun bm!11268 () Bool)

(assert (=> bm!11268 (= call!11271 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949) (mask!6728 newMap!16) (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16)))))

(declare-fun b!106580 () Bool)

(assert (=> b!106580 (= e!69347 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106580 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!106581 () Bool)

(assert (=> b!106581 (= e!69345 (= lt!54604 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949) (mask!6728 newMap!16) (ite (and c!18361 c!18359) lt!53953 (extraKeys!2387 newMap!16)) (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) (minValue!2457 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16))))))

(declare-fun b!106582 () Bool)

(declare-fun res!52950 () Bool)

(assert (=> b!106582 (=> (not res!52950) (not e!69344))))

(assert (=> b!106582 (= res!52950 (not (contains!829 lt!54604 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29285 c!18649) b!106576))

(assert (= (and d!29285 (not c!18649)) b!106578))

(assert (= (and b!106578 c!18650) b!106575))

(assert (= (and b!106578 (not c!18650)) b!106577))

(assert (= (or b!106575 b!106577) bm!11268))

(assert (= (and d!29285 res!52953) b!106582))

(assert (= (and b!106582 res!52950) b!106573))

(assert (= (and b!106573 res!52951) b!106580))

(assert (= (and b!106573 c!18648) b!106572))

(assert (= (and b!106573 (not c!18648)) b!106571))

(assert (= (and b!106572 res!52952) b!106574))

(assert (= (and b!106571 c!18647) b!106581))

(assert (= (and b!106571 (not c!18647)) b!106579))

(declare-fun b_lambda!4783 () Bool)

(assert (=> (not b_lambda!4783) (not b!106574)))

(assert (=> b!106574 t!5744))

(declare-fun b_and!6581 () Bool)

(assert (= b_and!6577 (and (=> t!5744 result!3475) b_and!6581)))

(assert (=> b!106574 t!5746))

(declare-fun b_and!6583 () Bool)

(assert (= b_and!6579 (and (=> t!5746 result!3477) b_and!6583)))

(declare-fun b_lambda!4785 () Bool)

(assert (=> (not b_lambda!4785) (not b!106575)))

(assert (=> b!106575 t!5744))

(declare-fun b_and!6585 () Bool)

(assert (= b_and!6581 (and (=> t!5744 result!3475) b_and!6585)))

(assert (=> b!106575 t!5746))

(declare-fun b_and!6587 () Bool)

(assert (= b_and!6583 (and (=> t!5746 result!3477) b_and!6587)))

(assert (=> b!106578 m!117859))

(assert (=> b!106578 m!117859))

(assert (=> b!106578 m!117861))

(declare-fun m!119303 () Bool)

(assert (=> d!29285 m!119303))

(assert (=> d!29285 m!117867))

(assert (=> b!106574 m!118103))

(assert (=> b!106574 m!118283))

(assert (=> b!106574 m!117859))

(declare-fun m!119305 () Bool)

(assert (=> b!106574 m!119305))

(assert (=> b!106574 m!118283))

(assert (=> b!106574 m!118103))

(assert (=> b!106574 m!118285))

(assert (=> b!106574 m!117859))

(declare-fun m!119307 () Bool)

(assert (=> b!106579 m!119307))

(assert (=> b!106572 m!117859))

(assert (=> b!106572 m!117859))

(declare-fun m!119309 () Bool)

(assert (=> b!106572 m!119309))

(assert (=> b!106580 m!117859))

(assert (=> b!106580 m!117859))

(assert (=> b!106580 m!117861))

(declare-fun m!119311 () Bool)

(assert (=> b!106582 m!119311))

(declare-fun m!119313 () Bool)

(assert (=> b!106575 m!119313))

(assert (=> b!106575 m!119313))

(declare-fun m!119315 () Bool)

(assert (=> b!106575 m!119315))

(declare-fun m!119317 () Bool)

(assert (=> b!106575 m!119317))

(assert (=> b!106575 m!118103))

(assert (=> b!106575 m!118283))

(declare-fun m!119319 () Bool)

(assert (=> b!106575 m!119319))

(assert (=> b!106575 m!118283))

(assert (=> b!106575 m!118103))

(assert (=> b!106575 m!118285))

(assert (=> b!106575 m!117859))

(declare-fun m!119321 () Bool)

(assert (=> bm!11268 m!119321))

(assert (=> b!106581 m!119321))

(assert (=> bm!11208 d!29285))

(declare-fun d!29287 () Bool)

(declare-fun lt!54607 () Bool)

(assert (=> d!29287 (= lt!54607 (select (content!108 lt!54167) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun e!69348 () Bool)

(assert (=> d!29287 (= lt!54607 e!69348)))

(declare-fun res!52955 () Bool)

(assert (=> d!29287 (=> (not res!52955) (not e!69348))))

(assert (=> d!29287 (= res!52955 ((_ is Cons!1638) lt!54167))))

(assert (=> d!29287 (= (contains!830 lt!54167 (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))) lt!54607)))

(declare-fun b!106583 () Bool)

(declare-fun e!69349 () Bool)

(assert (=> b!106583 (= e!69348 e!69349)))

(declare-fun res!52954 () Bool)

(assert (=> b!106583 (=> res!52954 e!69349)))

(assert (=> b!106583 (= res!52954 (= (h!2235 lt!54167) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun b!106584 () Bool)

(assert (=> b!106584 (= e!69349 (contains!830 (t!5737 lt!54167) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(assert (= (and d!29287 res!52955) b!106583))

(assert (= (and b!106583 (not res!52954)) b!106584))

(declare-fun m!119323 () Bool)

(assert (=> d!29287 m!119323))

(declare-fun m!119325 () Bool)

(assert (=> d!29287 m!119325))

(declare-fun m!119327 () Bool)

(assert (=> b!106584 m!119327))

(assert (=> b!105907 d!29287))

(declare-fun d!29289 () Bool)

(declare-fun e!69350 () Bool)

(assert (=> d!29289 e!69350))

(declare-fun res!52957 () Bool)

(assert (=> d!29289 (=> (not res!52957) (not e!69350))))

(declare-fun lt!54610 () ListLongMap!1585)

(assert (=> d!29289 (= res!52957 (contains!829 lt!54610 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun lt!54609 () List!1642)

(assert (=> d!29289 (= lt!54610 (ListLongMap!1586 lt!54609))))

(declare-fun lt!54611 () Unit!3250)

(declare-fun lt!54608 () Unit!3250)

(assert (=> d!29289 (= lt!54611 lt!54608)))

(assert (=> d!29289 (= (getValueByKey!155 lt!54609 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!29289 (= lt!54608 (lemmaContainsTupThenGetReturnValue!73 lt!54609 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!29289 (= lt!54609 (insertStrictlySorted!75 (toList!808 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!29289 (= (+!146 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) lt!54610)))

(declare-fun b!106585 () Bool)

(declare-fun res!52956 () Bool)

(assert (=> b!106585 (=> (not res!52956) (not e!69350))))

(assert (=> b!106585 (= res!52956 (= (getValueByKey!155 (toList!808 lt!54610) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun b!106586 () Bool)

(assert (=> b!106586 (= e!69350 (contains!830 (toList!808 lt!54610) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(assert (= (and d!29289 res!52957) b!106585))

(assert (= (and b!106585 res!52956) b!106586))

(declare-fun m!119329 () Bool)

(assert (=> d!29289 m!119329))

(declare-fun m!119331 () Bool)

(assert (=> d!29289 m!119331))

(declare-fun m!119333 () Bool)

(assert (=> d!29289 m!119333))

(declare-fun m!119335 () Bool)

(assert (=> d!29289 m!119335))

(declare-fun m!119337 () Bool)

(assert (=> b!106585 m!119337))

(declare-fun m!119339 () Bool)

(assert (=> b!106586 m!119339))

(assert (=> b!105995 d!29289))

(assert (=> b!105995 d!28911))

(assert (=> b!105995 d!28931))

(declare-fun d!29291 () Bool)

(declare-fun lt!54612 () Bool)

(assert (=> d!29291 (= lt!54612 (select (content!108 (toList!808 lt!54281)) (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun e!69351 () Bool)

(assert (=> d!29291 (= lt!54612 e!69351)))

(declare-fun res!52959 () Bool)

(assert (=> d!29291 (=> (not res!52959) (not e!69351))))

(assert (=> d!29291 (= res!52959 ((_ is Cons!1638) (toList!808 lt!54281)))))

(assert (=> d!29291 (= (contains!830 (toList!808 lt!54281) (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54612)))

(declare-fun b!106587 () Bool)

(declare-fun e!69352 () Bool)

(assert (=> b!106587 (= e!69351 e!69352)))

(declare-fun res!52958 () Bool)

(assert (=> b!106587 (=> res!52958 e!69352)))

(assert (=> b!106587 (= res!52958 (= (h!2235 (toList!808 lt!54281)) (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!106588 () Bool)

(assert (=> b!106588 (= e!69352 (contains!830 (t!5737 (toList!808 lt!54281)) (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!29291 res!52959) b!106587))

(assert (= (and b!106587 (not res!52958)) b!106588))

(declare-fun m!119341 () Bool)

(assert (=> d!29291 m!119341))

(declare-fun m!119343 () Bool)

(assert (=> d!29291 m!119343))

(declare-fun m!119345 () Bool)

(assert (=> b!106588 m!119345))

(assert (=> b!106030 d!29291))

(assert (=> d!28951 d!28953))

(assert (=> d!28951 d!28955))

(declare-fun d!29293 () Bool)

(declare-fun e!69354 () Bool)

(assert (=> d!29293 e!69354))

(declare-fun res!52960 () Bool)

(assert (=> d!29293 (=> res!52960 e!69354)))

(declare-fun lt!54613 () Bool)

(assert (=> d!29293 (= res!52960 (not lt!54613))))

(declare-fun lt!54616 () Bool)

(assert (=> d!29293 (= lt!54613 lt!54616)))

(declare-fun lt!54615 () Unit!3250)

(declare-fun e!69353 () Unit!3250)

(assert (=> d!29293 (= lt!54615 e!69353)))

(declare-fun c!18651 () Bool)

(assert (=> d!29293 (= c!18651 lt!54616)))

(assert (=> d!29293 (= lt!54616 (containsKey!159 (toList!808 lt!54009) lt!54007))))

(assert (=> d!29293 (= (contains!829 lt!54009 lt!54007) lt!54613)))

(declare-fun b!106589 () Bool)

(declare-fun lt!54614 () Unit!3250)

(assert (=> b!106589 (= e!69353 lt!54614)))

(assert (=> b!106589 (= lt!54614 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54009) lt!54007))))

(assert (=> b!106589 (isDefined!109 (getValueByKey!155 (toList!808 lt!54009) lt!54007))))

(declare-fun b!106590 () Bool)

(declare-fun Unit!3299 () Unit!3250)

(assert (=> b!106590 (= e!69353 Unit!3299)))

(declare-fun b!106591 () Bool)

(assert (=> b!106591 (= e!69354 (isDefined!109 (getValueByKey!155 (toList!808 lt!54009) lt!54007)))))

(assert (= (and d!29293 c!18651) b!106589))

(assert (= (and d!29293 (not c!18651)) b!106590))

(assert (= (and d!29293 (not res!52960)) b!106591))

(declare-fun m!119347 () Bool)

(assert (=> d!29293 m!119347))

(declare-fun m!119349 () Bool)

(assert (=> b!106589 m!119349))

(assert (=> b!106589 m!118375))

(assert (=> b!106589 m!118375))

(declare-fun m!119351 () Bool)

(assert (=> b!106589 m!119351))

(assert (=> b!106591 m!118375))

(assert (=> b!106591 m!118375))

(assert (=> b!106591 m!119351))

(assert (=> d!28951 d!29293))

(assert (=> d!28951 d!28949))

(declare-fun d!29295 () Bool)

(assert (=> d!29295 (= (apply!98 (+!146 lt!54009 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54007) (apply!98 lt!54009 lt!54007))))

(assert (=> d!29295 true))

(declare-fun _$34!888 () Unit!3250)

(assert (=> d!29295 (= (choose!670 lt!54009 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54007) _$34!888)))

(declare-fun bs!4378 () Bool)

(assert (= bs!4378 d!29295))

(assert (=> bs!4378 m!117715))

(assert (=> bs!4378 m!117715))

(assert (=> bs!4378 m!117717))

(assert (=> bs!4378 m!117711))

(assert (=> d!28951 d!29295))

(declare-fun d!29297 () Bool)

(assert (=> d!29297 (= (map!1283 (_2!1216 lt!54427)) (getCurrentListMap!484 (_keys!4288 (_2!1216 lt!54427)) (_values!2565 (_2!1216 lt!54427)) (mask!6728 (_2!1216 lt!54427)) (extraKeys!2387 (_2!1216 lt!54427)) (zeroValue!2457 (_2!1216 lt!54427)) (minValue!2457 (_2!1216 lt!54427)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1216 lt!54427))))))

(declare-fun bs!4379 () Bool)

(assert (= bs!4379 d!29297))

(declare-fun m!119353 () Bool)

(assert (=> bs!4379 m!119353))

(assert (=> b!106204 d!29297))

(declare-fun d!29299 () Bool)

(declare-fun e!69355 () Bool)

(assert (=> d!29299 e!69355))

(declare-fun res!52962 () Bool)

(assert (=> d!29299 (=> (not res!52962) (not e!69355))))

(declare-fun lt!54619 () ListLongMap!1585)

(assert (=> d!29299 (= res!52962 (contains!829 lt!54619 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun lt!54618 () List!1642)

(assert (=> d!29299 (= lt!54619 (ListLongMap!1586 lt!54618))))

(declare-fun lt!54620 () Unit!3250)

(declare-fun lt!54617 () Unit!3250)

(assert (=> d!29299 (= lt!54620 lt!54617)))

(assert (=> d!29299 (= (getValueByKey!155 lt!54618 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!29299 (= lt!54617 (lemmaContainsTupThenGetReturnValue!73 lt!54618 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!29299 (= lt!54618 (insertStrictlySorted!75 (toList!808 (map!1283 newMap!16)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!29299 (= (+!146 (map!1283 newMap!16) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) lt!54619)))

(declare-fun b!106592 () Bool)

(declare-fun res!52961 () Bool)

(assert (=> b!106592 (=> (not res!52961) (not e!69355))))

(assert (=> b!106592 (= res!52961 (= (getValueByKey!155 (toList!808 lt!54619) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun b!106593 () Bool)

(assert (=> b!106593 (= e!69355 (contains!830 (toList!808 lt!54619) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(assert (= (and d!29299 res!52962) b!106592))

(assert (= (and b!106592 res!52961) b!106593))

(declare-fun m!119355 () Bool)

(assert (=> d!29299 m!119355))

(declare-fun m!119357 () Bool)

(assert (=> d!29299 m!119357))

(declare-fun m!119359 () Bool)

(assert (=> d!29299 m!119359))

(declare-fun m!119361 () Bool)

(assert (=> d!29299 m!119361))

(declare-fun m!119363 () Bool)

(assert (=> b!106592 m!119363))

(declare-fun m!119365 () Bool)

(assert (=> b!106593 m!119365))

(assert (=> b!106204 d!29299))

(assert (=> b!106204 d!28785))

(declare-fun b!106594 () Bool)

(declare-fun e!69359 () Bool)

(declare-fun call!11272 () Bool)

(assert (=> b!106594 (= e!69359 call!11272)))

(declare-fun b!106595 () Bool)

(declare-fun e!69357 () Bool)

(assert (=> b!106595 (= e!69357 e!69359)))

(declare-fun c!18652 () Bool)

(assert (=> b!106595 (= c!18652 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!106596 () Bool)

(declare-fun e!69356 () Bool)

(assert (=> b!106596 (= e!69356 e!69357)))

(declare-fun res!52965 () Bool)

(assert (=> b!106596 (=> (not res!52965) (not e!69357))))

(declare-fun e!69358 () Bool)

(assert (=> b!106596 (= res!52965 (not e!69358))))

(declare-fun res!52964 () Bool)

(assert (=> b!106596 (=> (not res!52964) (not e!69358))))

(assert (=> b!106596 (= res!52964 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!106597 () Bool)

(assert (=> b!106597 (= e!69358 (contains!831 (ite c!18503 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!29301 () Bool)

(declare-fun res!52963 () Bool)

(assert (=> d!29301 (=> res!52963 e!69356)))

(assert (=> d!29301 (= res!52963 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> d!29301 (= (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18503 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640))) e!69356)))

(declare-fun b!106598 () Bool)

(assert (=> b!106598 (= e!69359 call!11272)))

(declare-fun bm!11269 () Bool)

(assert (=> bm!11269 (= call!11272 (arrayNoDuplicates!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18652 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!18503 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640))) (ite c!18503 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)))))))

(assert (= (and d!29301 (not res!52963)) b!106596))

(assert (= (and b!106596 res!52964) b!106597))

(assert (= (and b!106596 res!52965) b!106595))

(assert (= (and b!106595 c!18652) b!106594))

(assert (= (and b!106595 (not c!18652)) b!106598))

(assert (= (or b!106594 b!106598) bm!11269))

(declare-fun m!119367 () Bool)

(assert (=> b!106595 m!119367))

(assert (=> b!106595 m!119367))

(declare-fun m!119369 () Bool)

(assert (=> b!106595 m!119369))

(assert (=> b!106596 m!119367))

(assert (=> b!106596 m!119367))

(assert (=> b!106596 m!119369))

(assert (=> b!106597 m!119367))

(assert (=> b!106597 m!119367))

(declare-fun m!119371 () Bool)

(assert (=> b!106597 m!119371))

(assert (=> bm!11269 m!119367))

(declare-fun m!119373 () Bool)

(assert (=> bm!11269 m!119373))

(assert (=> bm!11225 d!29301))

(declare-fun d!29303 () Bool)

(declare-fun e!69361 () Bool)

(assert (=> d!29303 e!69361))

(declare-fun res!52966 () Bool)

(assert (=> d!29303 (=> res!52966 e!69361)))

(declare-fun lt!54621 () Bool)

(assert (=> d!29303 (= res!52966 (not lt!54621))))

(declare-fun lt!54624 () Bool)

(assert (=> d!29303 (= lt!54621 lt!54624)))

(declare-fun lt!54623 () Unit!3250)

(declare-fun e!69360 () Unit!3250)

(assert (=> d!29303 (= lt!54623 e!69360)))

(declare-fun c!18653 () Bool)

(assert (=> d!29303 (= c!18653 lt!54624)))

(assert (=> d!29303 (= lt!54624 (containsKey!159 (toList!808 (+!146 lt!54324 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16)))) lt!54323))))

(assert (=> d!29303 (= (contains!829 (+!146 lt!54324 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16))) lt!54323) lt!54621)))

(declare-fun b!106599 () Bool)

(declare-fun lt!54622 () Unit!3250)

(assert (=> b!106599 (= e!69360 lt!54622)))

(assert (=> b!106599 (= lt!54622 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (+!146 lt!54324 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16)))) lt!54323))))

(assert (=> b!106599 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54324 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16)))) lt!54323))))

(declare-fun b!106600 () Bool)

(declare-fun Unit!3300 () Unit!3250)

(assert (=> b!106600 (= e!69360 Unit!3300)))

(declare-fun b!106601 () Bool)

(assert (=> b!106601 (= e!69361 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54324 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16)))) lt!54323)))))

(assert (= (and d!29303 c!18653) b!106599))

(assert (= (and d!29303 (not c!18653)) b!106600))

(assert (= (and d!29303 (not res!52966)) b!106601))

(declare-fun m!119375 () Bool)

(assert (=> d!29303 m!119375))

(declare-fun m!119377 () Bool)

(assert (=> b!106599 m!119377))

(declare-fun m!119379 () Bool)

(assert (=> b!106599 m!119379))

(assert (=> b!106599 m!119379))

(declare-fun m!119381 () Bool)

(assert (=> b!106599 m!119381))

(assert (=> b!106601 m!119379))

(assert (=> b!106601 m!119379))

(assert (=> b!106601 m!119381))

(assert (=> b!106062 d!29303))

(declare-fun d!29305 () Bool)

(assert (=> d!29305 (= (apply!98 (+!146 lt!54315 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) lt!54310) (apply!98 lt!54315 lt!54310))))

(declare-fun lt!54625 () Unit!3250)

(assert (=> d!29305 (= lt!54625 (choose!670 lt!54315 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) lt!54310))))

(declare-fun e!69362 () Bool)

(assert (=> d!29305 e!69362))

(declare-fun res!52967 () Bool)

(assert (=> d!29305 (=> (not res!52967) (not e!69362))))

(assert (=> d!29305 (= res!52967 (contains!829 lt!54315 lt!54310))))

(assert (=> d!29305 (= (addApplyDifferent!74 lt!54315 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) lt!54310) lt!54625)))

(declare-fun b!106602 () Bool)

(assert (=> b!106602 (= e!69362 (not (= lt!54310 lt!54325)))))

(assert (= (and d!29305 res!52967) b!106602))

(declare-fun m!119383 () Bool)

(assert (=> d!29305 m!119383))

(assert (=> d!29305 m!118487))

(assert (=> d!29305 m!118489))

(assert (=> d!29305 m!118487))

(assert (=> d!29305 m!118499))

(declare-fun m!119385 () Bool)

(assert (=> d!29305 m!119385))

(assert (=> b!106062 d!29305))

(declare-fun b!106603 () Bool)

(declare-fun e!69368 () Bool)

(declare-fun e!69367 () Bool)

(assert (=> b!106603 (= e!69368 e!69367)))

(declare-fun c!18654 () Bool)

(assert (=> b!106603 (= c!18654 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106604 () Bool)

(declare-fun e!69363 () Bool)

(assert (=> b!106604 (= e!69368 e!69363)))

(assert (=> b!106604 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun res!52970 () Bool)

(declare-fun lt!54630 () ListLongMap!1585)

(assert (=> b!106604 (= res!52970 (contains!829 lt!54630 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106604 (=> (not res!52970) (not e!69363))))

(declare-fun d!29307 () Bool)

(declare-fun e!69366 () Bool)

(assert (=> d!29307 e!69366))

(declare-fun res!52971 () Bool)

(assert (=> d!29307 (=> (not res!52971) (not e!69366))))

(assert (=> d!29307 (= res!52971 (not (contains!829 lt!54630 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!69365 () ListLongMap!1585)

(assert (=> d!29307 (= lt!54630 e!69365)))

(declare-fun c!18656 () Bool)

(assert (=> d!29307 (= c!18656 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!29307 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29307 (= (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54630)))

(declare-fun b!106605 () Bool)

(assert (=> b!106605 (= e!69366 e!69368)))

(declare-fun c!18655 () Bool)

(declare-fun e!69369 () Bool)

(assert (=> b!106605 (= c!18655 e!69369)))

(declare-fun res!52969 () Bool)

(assert (=> b!106605 (=> (not res!52969) (not e!69369))))

(assert (=> b!106605 (= res!52969 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106606 () Bool)

(assert (=> b!106606 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> b!106606 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_values!2565 newMap!16))))))

(assert (=> b!106606 (= e!69363 (= (apply!98 lt!54630 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106607 () Bool)

(declare-fun lt!54628 () Unit!3250)

(declare-fun lt!54626 () Unit!3250)

(assert (=> b!106607 (= lt!54628 lt!54626)))

(declare-fun lt!54632 () (_ BitVec 64))

(declare-fun lt!54629 () V!3219)

(declare-fun lt!54627 () (_ BitVec 64))

(declare-fun lt!54631 () ListLongMap!1585)

(assert (=> b!106607 (not (contains!829 (+!146 lt!54631 (tuple2!2411 lt!54627 lt!54629)) lt!54632))))

(assert (=> b!106607 (= lt!54626 (addStillNotContains!48 lt!54631 lt!54627 lt!54629 lt!54632))))

(assert (=> b!106607 (= lt!54632 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106607 (= lt!54629 (get!1339 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106607 (= lt!54627 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11273 () ListLongMap!1585)

(assert (=> b!106607 (= lt!54631 call!11273)))

(declare-fun e!69364 () ListLongMap!1585)

(assert (=> b!106607 (= e!69364 (+!146 call!11273 (tuple2!2411 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (get!1339 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106608 () Bool)

(assert (=> b!106608 (= e!69365 (ListLongMap!1586 Nil!1639))))

(declare-fun b!106609 () Bool)

(assert (=> b!106609 (= e!69364 call!11273)))

(declare-fun b!106610 () Bool)

(assert (=> b!106610 (= e!69365 e!69364)))

(declare-fun c!18657 () Bool)

(assert (=> b!106610 (= c!18657 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106611 () Bool)

(assert (=> b!106611 (= e!69367 (isEmpty!375 lt!54630))))

(declare-fun bm!11270 () Bool)

(assert (=> bm!11270 (= call!11273 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16)))))

(declare-fun b!106612 () Bool)

(assert (=> b!106612 (= e!69369 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106612 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!106613 () Bool)

(assert (=> b!106613 (= e!69367 (= lt!54630 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (ite c!18361 (ite c!18359 (extraKeys!2387 newMap!16) lt!53952) (extraKeys!2387 newMap!16)) (zeroValue!2457 newMap!16) (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16))))))

(declare-fun b!106614 () Bool)

(declare-fun res!52968 () Bool)

(assert (=> b!106614 (=> (not res!52968) (not e!69366))))

(assert (=> b!106614 (= res!52968 (not (contains!829 lt!54630 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29307 c!18656) b!106608))

(assert (= (and d!29307 (not c!18656)) b!106610))

(assert (= (and b!106610 c!18657) b!106607))

(assert (= (and b!106610 (not c!18657)) b!106609))

(assert (= (or b!106607 b!106609) bm!11270))

(assert (= (and d!29307 res!52971) b!106614))

(assert (= (and b!106614 res!52968) b!106605))

(assert (= (and b!106605 res!52969) b!106612))

(assert (= (and b!106605 c!18655) b!106604))

(assert (= (and b!106605 (not c!18655)) b!106603))

(assert (= (and b!106604 res!52970) b!106606))

(assert (= (and b!106603 c!18654) b!106613))

(assert (= (and b!106603 (not c!18654)) b!106611))

(declare-fun b_lambda!4787 () Bool)

(assert (=> (not b_lambda!4787) (not b!106606)))

(assert (=> b!106606 t!5744))

(declare-fun b_and!6589 () Bool)

(assert (= b_and!6585 (and (=> t!5744 result!3475) b_and!6589)))

(assert (=> b!106606 t!5746))

(declare-fun b_and!6591 () Bool)

(assert (= b_and!6587 (and (=> t!5746 result!3477) b_and!6591)))

(declare-fun b_lambda!4789 () Bool)

(assert (=> (not b_lambda!4789) (not b!106607)))

(assert (=> b!106607 t!5744))

(declare-fun b_and!6593 () Bool)

(assert (= b_and!6589 (and (=> t!5744 result!3475) b_and!6593)))

(assert (=> b!106607 t!5746))

(declare-fun b_and!6595 () Bool)

(assert (= b_and!6591 (and (=> t!5746 result!3477) b_and!6595)))

(assert (=> b!106610 m!117859))

(assert (=> b!106610 m!117859))

(assert (=> b!106610 m!117861))

(declare-fun m!119387 () Bool)

(assert (=> d!29307 m!119387))

(assert (=> d!29307 m!117867))

(assert (=> b!106606 m!118103))

(assert (=> b!106606 m!118101))

(assert (=> b!106606 m!117859))

(declare-fun m!119389 () Bool)

(assert (=> b!106606 m!119389))

(assert (=> b!106606 m!118101))

(assert (=> b!106606 m!118103))

(assert (=> b!106606 m!118105))

(assert (=> b!106606 m!117859))

(declare-fun m!119391 () Bool)

(assert (=> b!106611 m!119391))

(assert (=> b!106604 m!117859))

(assert (=> b!106604 m!117859))

(declare-fun m!119393 () Bool)

(assert (=> b!106604 m!119393))

(assert (=> b!106612 m!117859))

(assert (=> b!106612 m!117859))

(assert (=> b!106612 m!117861))

(declare-fun m!119395 () Bool)

(assert (=> b!106614 m!119395))

(declare-fun m!119397 () Bool)

(assert (=> b!106607 m!119397))

(assert (=> b!106607 m!119397))

(declare-fun m!119399 () Bool)

(assert (=> b!106607 m!119399))

(declare-fun m!119401 () Bool)

(assert (=> b!106607 m!119401))

(assert (=> b!106607 m!118103))

(assert (=> b!106607 m!118101))

(declare-fun m!119403 () Bool)

(assert (=> b!106607 m!119403))

(assert (=> b!106607 m!118101))

(assert (=> b!106607 m!118103))

(assert (=> b!106607 m!118105))

(assert (=> b!106607 m!117859))

(declare-fun m!119405 () Bool)

(assert (=> bm!11270 m!119405))

(assert (=> b!106613 m!119405))

(assert (=> b!106062 d!29307))

(declare-fun d!29309 () Bool)

(assert (=> d!29309 (= (apply!98 (+!146 lt!54316 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) lt!54314) (apply!98 lt!54316 lt!54314))))

(declare-fun lt!54633 () Unit!3250)

(assert (=> d!29309 (= lt!54633 (choose!670 lt!54316 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) lt!54314))))

(declare-fun e!69370 () Bool)

(assert (=> d!29309 e!69370))

(declare-fun res!52972 () Bool)

(assert (=> d!29309 (=> (not res!52972) (not e!69370))))

(assert (=> d!29309 (= res!52972 (contains!829 lt!54316 lt!54314))))

(assert (=> d!29309 (= (addApplyDifferent!74 lt!54316 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)) lt!54314) lt!54633)))

(declare-fun b!106615 () Bool)

(assert (=> b!106615 (= e!69370 (not (= lt!54314 lt!54308)))))

(assert (= (and d!29309 res!52972) b!106615))

(declare-fun m!119407 () Bool)

(assert (=> d!29309 m!119407))

(assert (=> d!29309 m!118481))

(assert (=> d!29309 m!118483))

(assert (=> d!29309 m!118481))

(assert (=> d!29309 m!118477))

(declare-fun m!119409 () Bool)

(assert (=> d!29309 m!119409))

(assert (=> b!106062 d!29309))

(declare-fun d!29311 () Bool)

(assert (=> d!29311 (= (apply!98 (+!146 lt!54316 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) lt!54314) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54316 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))) lt!54314)))))

(declare-fun bs!4380 () Bool)

(assert (= bs!4380 d!29311))

(declare-fun m!119411 () Bool)

(assert (=> bs!4380 m!119411))

(assert (=> bs!4380 m!119411))

(declare-fun m!119413 () Bool)

(assert (=> bs!4380 m!119413))

(assert (=> b!106062 d!29311))

(declare-fun d!29313 () Bool)

(assert (=> d!29313 (= (apply!98 (+!146 lt!54319 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16))) lt!54326) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54319 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16)))) lt!54326)))))

(declare-fun bs!4381 () Bool)

(assert (= bs!4381 d!29313))

(declare-fun m!119415 () Bool)

(assert (=> bs!4381 m!119415))

(assert (=> bs!4381 m!119415))

(declare-fun m!119417 () Bool)

(assert (=> bs!4381 m!119417))

(assert (=> b!106062 d!29313))

(declare-fun d!29315 () Bool)

(assert (=> d!29315 (= (apply!98 lt!54319 lt!54326) (get!1342 (getValueByKey!155 (toList!808 lt!54319) lt!54326)))))

(declare-fun bs!4382 () Bool)

(assert (= bs!4382 d!29315))

(declare-fun m!119419 () Bool)

(assert (=> bs!4382 m!119419))

(assert (=> bs!4382 m!119419))

(declare-fun m!119421 () Bool)

(assert (=> bs!4382 m!119421))

(assert (=> b!106062 d!29315))

(declare-fun d!29317 () Bool)

(assert (=> d!29317 (= (apply!98 lt!54316 lt!54314) (get!1342 (getValueByKey!155 (toList!808 lt!54316) lt!54314)))))

(declare-fun bs!4383 () Bool)

(assert (= bs!4383 d!29317))

(declare-fun m!119423 () Bool)

(assert (=> bs!4383 m!119423))

(assert (=> bs!4383 m!119423))

(declare-fun m!119425 () Bool)

(assert (=> bs!4383 m!119425))

(assert (=> b!106062 d!29317))

(declare-fun d!29319 () Bool)

(declare-fun e!69371 () Bool)

(assert (=> d!29319 e!69371))

(declare-fun res!52974 () Bool)

(assert (=> d!29319 (=> (not res!52974) (not e!69371))))

(declare-fun lt!54636 () ListLongMap!1585)

(assert (=> d!29319 (= res!52974 (contains!829 lt!54636 (_1!1215 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(declare-fun lt!54635 () List!1642)

(assert (=> d!29319 (= lt!54636 (ListLongMap!1586 lt!54635))))

(declare-fun lt!54637 () Unit!3250)

(declare-fun lt!54634 () Unit!3250)

(assert (=> d!29319 (= lt!54637 lt!54634)))

(assert (=> d!29319 (= (getValueByKey!155 lt!54635 (_1!1215 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(assert (=> d!29319 (= lt!54634 (lemmaContainsTupThenGetReturnValue!73 lt!54635 (_1!1215 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) (_2!1215 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(assert (=> d!29319 (= lt!54635 (insertStrictlySorted!75 (toList!808 lt!54315) (_1!1215 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) (_2!1215 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(assert (=> d!29319 (= (+!146 lt!54315 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) lt!54636)))

(declare-fun b!106616 () Bool)

(declare-fun res!52973 () Bool)

(assert (=> b!106616 (=> (not res!52973) (not e!69371))))

(assert (=> b!106616 (= res!52973 (= (getValueByKey!155 (toList!808 lt!54636) (_1!1215 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))))))

(declare-fun b!106617 () Bool)

(assert (=> b!106617 (= e!69371 (contains!830 (toList!808 lt!54636) (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))))

(assert (= (and d!29319 res!52974) b!106616))

(assert (= (and b!106616 res!52973) b!106617))

(declare-fun m!119427 () Bool)

(assert (=> d!29319 m!119427))

(declare-fun m!119429 () Bool)

(assert (=> d!29319 m!119429))

(declare-fun m!119431 () Bool)

(assert (=> d!29319 m!119431))

(declare-fun m!119433 () Bool)

(assert (=> d!29319 m!119433))

(declare-fun m!119435 () Bool)

(assert (=> b!106616 m!119435))

(declare-fun m!119437 () Bool)

(assert (=> b!106617 m!119437))

(assert (=> b!106062 d!29319))

(declare-fun d!29321 () Bool)

(declare-fun e!69372 () Bool)

(assert (=> d!29321 e!69372))

(declare-fun res!52976 () Bool)

(assert (=> d!29321 (=> (not res!52976) (not e!69372))))

(declare-fun lt!54640 () ListLongMap!1585)

(assert (=> d!29321 (= res!52976 (contains!829 lt!54640 (_1!1215 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16)))))))

(declare-fun lt!54639 () List!1642)

(assert (=> d!29321 (= lt!54640 (ListLongMap!1586 lt!54639))))

(declare-fun lt!54641 () Unit!3250)

(declare-fun lt!54638 () Unit!3250)

(assert (=> d!29321 (= lt!54641 lt!54638)))

(assert (=> d!29321 (= (getValueByKey!155 lt!54639 (_1!1215 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29321 (= lt!54638 (lemmaContainsTupThenGetReturnValue!73 lt!54639 (_1!1215 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29321 (= lt!54639 (insertStrictlySorted!75 (toList!808 lt!54319) (_1!1215 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29321 (= (+!146 lt!54319 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16))) lt!54640)))

(declare-fun b!106618 () Bool)

(declare-fun res!52975 () Bool)

(assert (=> b!106618 (=> (not res!52975) (not e!69372))))

(assert (=> b!106618 (= res!52975 (= (getValueByKey!155 (toList!808 lt!54640) (_1!1215 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16))))))))

(declare-fun b!106619 () Bool)

(assert (=> b!106619 (= e!69372 (contains!830 (toList!808 lt!54640) (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16))))))

(assert (= (and d!29321 res!52976) b!106618))

(assert (= (and b!106618 res!52975) b!106619))

(declare-fun m!119439 () Bool)

(assert (=> d!29321 m!119439))

(declare-fun m!119441 () Bool)

(assert (=> d!29321 m!119441))

(declare-fun m!119443 () Bool)

(assert (=> d!29321 m!119443))

(declare-fun m!119445 () Bool)

(assert (=> d!29321 m!119445))

(declare-fun m!119447 () Bool)

(assert (=> b!106618 m!119447))

(declare-fun m!119449 () Bool)

(assert (=> b!106619 m!119449))

(assert (=> b!106062 d!29321))

(declare-fun d!29323 () Bool)

(declare-fun e!69373 () Bool)

(assert (=> d!29323 e!69373))

(declare-fun res!52978 () Bool)

(assert (=> d!29323 (=> (not res!52978) (not e!69373))))

(declare-fun lt!54644 () ListLongMap!1585)

(assert (=> d!29323 (= res!52978 (contains!829 lt!54644 (_1!1215 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16)))))))

(declare-fun lt!54643 () List!1642)

(assert (=> d!29323 (= lt!54644 (ListLongMap!1586 lt!54643))))

(declare-fun lt!54645 () Unit!3250)

(declare-fun lt!54642 () Unit!3250)

(assert (=> d!29323 (= lt!54645 lt!54642)))

(assert (=> d!29323 (= (getValueByKey!155 lt!54643 (_1!1215 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29323 (= lt!54642 (lemmaContainsTupThenGetReturnValue!73 lt!54643 (_1!1215 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29323 (= lt!54643 (insertStrictlySorted!75 (toList!808 lt!54324) (_1!1215 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29323 (= (+!146 lt!54324 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16))) lt!54644)))

(declare-fun b!106620 () Bool)

(declare-fun res!52977 () Bool)

(assert (=> b!106620 (=> (not res!52977) (not e!69373))))

(assert (=> b!106620 (= res!52977 (= (getValueByKey!155 (toList!808 lt!54644) (_1!1215 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16))))))))

(declare-fun b!106621 () Bool)

(assert (=> b!106621 (= e!69373 (contains!830 (toList!808 lt!54644) (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16))))))

(assert (= (and d!29323 res!52978) b!106620))

(assert (= (and b!106620 res!52977) b!106621))

(declare-fun m!119451 () Bool)

(assert (=> d!29323 m!119451))

(declare-fun m!119453 () Bool)

(assert (=> d!29323 m!119453))

(declare-fun m!119455 () Bool)

(assert (=> d!29323 m!119455))

(declare-fun m!119457 () Bool)

(assert (=> d!29323 m!119457))

(declare-fun m!119459 () Bool)

(assert (=> b!106620 m!119459))

(declare-fun m!119461 () Bool)

(assert (=> b!106621 m!119461))

(assert (=> b!106062 d!29323))

(declare-fun d!29325 () Bool)

(declare-fun e!69374 () Bool)

(assert (=> d!29325 e!69374))

(declare-fun res!52980 () Bool)

(assert (=> d!29325 (=> (not res!52980) (not e!69374))))

(declare-fun lt!54648 () ListLongMap!1585)

(assert (=> d!29325 (= res!52980 (contains!829 lt!54648 (_1!1215 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(declare-fun lt!54647 () List!1642)

(assert (=> d!29325 (= lt!54648 (ListLongMap!1586 lt!54647))))

(declare-fun lt!54649 () Unit!3250)

(declare-fun lt!54646 () Unit!3250)

(assert (=> d!29325 (= lt!54649 lt!54646)))

(assert (=> d!29325 (= (getValueByKey!155 lt!54647 (_1!1215 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(assert (=> d!29325 (= lt!54646 (lemmaContainsTupThenGetReturnValue!73 lt!54647 (_1!1215 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) (_2!1215 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(assert (=> d!29325 (= lt!54647 (insertStrictlySorted!75 (toList!808 lt!54316) (_1!1215 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) (_2!1215 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(assert (=> d!29325 (= (+!146 lt!54316 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) lt!54648)))

(declare-fun b!106622 () Bool)

(declare-fun res!52979 () Bool)

(assert (=> b!106622 (=> (not res!52979) (not e!69374))))

(assert (=> b!106622 (= res!52979 (= (getValueByKey!155 (toList!808 lt!54648) (_1!1215 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))))))

(declare-fun b!106623 () Bool)

(assert (=> b!106623 (= e!69374 (contains!830 (toList!808 lt!54648) (tuple2!2411 lt!54308 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))))

(assert (= (and d!29325 res!52980) b!106622))

(assert (= (and b!106622 res!52979) b!106623))

(declare-fun m!119463 () Bool)

(assert (=> d!29325 m!119463))

(declare-fun m!119465 () Bool)

(assert (=> d!29325 m!119465))

(declare-fun m!119467 () Bool)

(assert (=> d!29325 m!119467))

(declare-fun m!119469 () Bool)

(assert (=> d!29325 m!119469))

(declare-fun m!119471 () Bool)

(assert (=> b!106622 m!119471))

(declare-fun m!119473 () Bool)

(assert (=> b!106623 m!119473))

(assert (=> b!106062 d!29325))

(declare-fun d!29327 () Bool)

(assert (=> d!29327 (= (apply!98 (+!146 lt!54319 (tuple2!2411 lt!54317 (zeroValue!2457 newMap!16))) lt!54326) (apply!98 lt!54319 lt!54326))))

(declare-fun lt!54650 () Unit!3250)

(assert (=> d!29327 (= lt!54650 (choose!670 lt!54319 lt!54317 (zeroValue!2457 newMap!16) lt!54326))))

(declare-fun e!69375 () Bool)

(assert (=> d!29327 e!69375))

(declare-fun res!52981 () Bool)

(assert (=> d!29327 (=> (not res!52981) (not e!69375))))

(assert (=> d!29327 (= res!52981 (contains!829 lt!54319 lt!54326))))

(assert (=> d!29327 (= (addApplyDifferent!74 lt!54319 lt!54317 (zeroValue!2457 newMap!16) lt!54326) lt!54650)))

(declare-fun b!106624 () Bool)

(assert (=> b!106624 (= e!69375 (not (= lt!54326 lt!54317)))))

(assert (= (and d!29327 res!52981) b!106624))

(declare-fun m!119475 () Bool)

(assert (=> d!29327 m!119475))

(assert (=> d!29327 m!118491))

(assert (=> d!29327 m!118503))

(assert (=> d!29327 m!118491))

(assert (=> d!29327 m!118493))

(declare-fun m!119477 () Bool)

(assert (=> d!29327 m!119477))

(assert (=> b!106062 d!29327))

(declare-fun d!29329 () Bool)

(assert (=> d!29329 (= (apply!98 lt!54315 lt!54310) (get!1342 (getValueByKey!155 (toList!808 lt!54315) lt!54310)))))

(declare-fun bs!4384 () Bool)

(assert (= bs!4384 d!29329))

(declare-fun m!119479 () Bool)

(assert (=> bs!4384 m!119479))

(assert (=> bs!4384 m!119479))

(declare-fun m!119481 () Bool)

(assert (=> bs!4384 m!119481))

(assert (=> b!106062 d!29329))

(declare-fun d!29331 () Bool)

(assert (=> d!29331 (= (apply!98 (+!146 lt!54315 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) lt!54310) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54315 (tuple2!2411 lt!54325 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))) lt!54310)))))

(declare-fun bs!4385 () Bool)

(assert (= bs!4385 d!29331))

(declare-fun m!119483 () Bool)

(assert (=> bs!4385 m!119483))

(assert (=> bs!4385 m!119483))

(declare-fun m!119485 () Bool)

(assert (=> bs!4385 m!119485))

(assert (=> b!106062 d!29331))

(declare-fun d!29333 () Bool)

(assert (=> d!29333 (contains!829 (+!146 lt!54324 (tuple2!2411 lt!54320 (zeroValue!2457 newMap!16))) lt!54323)))

(declare-fun lt!54651 () Unit!3250)

(assert (=> d!29333 (= lt!54651 (choose!671 lt!54324 lt!54320 (zeroValue!2457 newMap!16) lt!54323))))

(assert (=> d!29333 (contains!829 lt!54324 lt!54323)))

(assert (=> d!29333 (= (addStillContains!74 lt!54324 lt!54320 (zeroValue!2457 newMap!16) lt!54323) lt!54651)))

(declare-fun bs!4386 () Bool)

(assert (= bs!4386 d!29333))

(assert (=> bs!4386 m!118495))

(assert (=> bs!4386 m!118495))

(assert (=> bs!4386 m!118497))

(declare-fun m!119487 () Bool)

(assert (=> bs!4386 m!119487))

(declare-fun m!119489 () Bool)

(assert (=> bs!4386 m!119489))

(assert (=> b!106062 d!29333))

(declare-fun b!106626 () Bool)

(declare-fun e!69376 () Option!161)

(declare-fun e!69377 () Option!161)

(assert (=> b!106626 (= e!69376 e!69377)))

(declare-fun c!18659 () Bool)

(assert (=> b!106626 (= c!18659 (and ((_ is Cons!1638) (toList!808 lt!54114)) (not (= (_1!1215 (h!2235 (toList!808 lt!54114))) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))))

(declare-fun c!18658 () Bool)

(declare-fun d!29335 () Bool)

(assert (=> d!29335 (= c!18658 (and ((_ is Cons!1638) (toList!808 lt!54114)) (= (_1!1215 (h!2235 (toList!808 lt!54114))) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(assert (=> d!29335 (= (getValueByKey!155 (toList!808 lt!54114) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))) e!69376)))

(declare-fun b!106627 () Bool)

(assert (=> b!106627 (= e!69377 (getValueByKey!155 (t!5737 (toList!808 lt!54114)) (_1!1215 (ite (or c!18381 c!18377) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun b!106625 () Bool)

(assert (=> b!106625 (= e!69376 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54114)))))))

(declare-fun b!106628 () Bool)

(assert (=> b!106628 (= e!69377 None!159)))

(assert (= (and d!29335 c!18658) b!106625))

(assert (= (and d!29335 (not c!18658)) b!106626))

(assert (= (and b!106626 c!18659) b!106627))

(assert (= (and b!106626 (not c!18659)) b!106628))

(declare-fun m!119491 () Bool)

(assert (=> b!106627 m!119491))

(assert (=> b!105797 d!29335))

(assert (=> d!28961 d!28941))

(assert (=> d!28961 d!28965))

(declare-fun d!29337 () Bool)

(assert (=> d!29337 (= (apply!98 (+!146 lt!54008 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54003) (apply!98 lt!54008 lt!54003))))

(assert (=> d!29337 true))

(declare-fun _$34!889 () Unit!3250)

(assert (=> d!29337 (= (choose!670 lt!54008 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))) lt!54003) _$34!889)))

(declare-fun bs!4387 () Bool)

(assert (= bs!4387 d!29337))

(assert (=> bs!4387 m!117721))

(assert (=> bs!4387 m!117721))

(assert (=> bs!4387 m!117723))

(assert (=> bs!4387 m!117733))

(assert (=> d!28961 d!29337))

(declare-fun d!29339 () Bool)

(declare-fun e!69379 () Bool)

(assert (=> d!29339 e!69379))

(declare-fun res!52982 () Bool)

(assert (=> d!29339 (=> res!52982 e!69379)))

(declare-fun lt!54652 () Bool)

(assert (=> d!29339 (= res!52982 (not lt!54652))))

(declare-fun lt!54655 () Bool)

(assert (=> d!29339 (= lt!54652 lt!54655)))

(declare-fun lt!54654 () Unit!3250)

(declare-fun e!69378 () Unit!3250)

(assert (=> d!29339 (= lt!54654 e!69378)))

(declare-fun c!18660 () Bool)

(assert (=> d!29339 (= c!18660 lt!54655)))

(assert (=> d!29339 (= lt!54655 (containsKey!159 (toList!808 lt!54008) lt!54003))))

(assert (=> d!29339 (= (contains!829 lt!54008 lt!54003) lt!54652)))

(declare-fun b!106629 () Bool)

(declare-fun lt!54653 () Unit!3250)

(assert (=> b!106629 (= e!69378 lt!54653)))

(assert (=> b!106629 (= lt!54653 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54008) lt!54003))))

(assert (=> b!106629 (isDefined!109 (getValueByKey!155 (toList!808 lt!54008) lt!54003))))

(declare-fun b!106630 () Bool)

(declare-fun Unit!3301 () Unit!3250)

(assert (=> b!106630 (= e!69378 Unit!3301)))

(declare-fun b!106631 () Bool)

(assert (=> b!106631 (= e!69379 (isDefined!109 (getValueByKey!155 (toList!808 lt!54008) lt!54003)))))

(assert (= (and d!29339 c!18660) b!106629))

(assert (= (and d!29339 (not c!18660)) b!106630))

(assert (= (and d!29339 (not res!52982)) b!106631))

(declare-fun m!119493 () Bool)

(assert (=> d!29339 m!119493))

(declare-fun m!119495 () Bool)

(assert (=> b!106629 m!119495))

(assert (=> b!106629 m!118379))

(assert (=> b!106629 m!118379))

(declare-fun m!119497 () Bool)

(assert (=> b!106629 m!119497))

(assert (=> b!106631 m!118379))

(assert (=> b!106631 m!118379))

(assert (=> b!106631 m!119497))

(assert (=> d!28961 d!29339))

(assert (=> d!28961 d!28957))

(declare-fun d!29341 () Bool)

(declare-fun e!69380 () Bool)

(assert (=> d!29341 e!69380))

(declare-fun res!52984 () Bool)

(assert (=> d!29341 (=> (not res!52984) (not e!69380))))

(declare-fun lt!54658 () ListLongMap!1585)

(assert (=> d!29341 (= res!52984 (contains!829 lt!54658 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun lt!54657 () List!1642)

(assert (=> d!29341 (= lt!54658 (ListLongMap!1586 lt!54657))))

(declare-fun lt!54659 () Unit!3250)

(declare-fun lt!54656 () Unit!3250)

(assert (=> d!29341 (= lt!54659 lt!54656)))

(assert (=> d!29341 (= (getValueByKey!155 lt!54657 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29341 (= lt!54656 (lemmaContainsTupThenGetReturnValue!73 lt!54657 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29341 (= lt!54657 (insertStrictlySorted!75 (toList!808 call!11216) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29341 (= (+!146 call!11216 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) lt!54658)))

(declare-fun b!106632 () Bool)

(declare-fun res!52983 () Bool)

(assert (=> b!106632 (=> (not res!52983) (not e!69380))))

(assert (=> b!106632 (= res!52983 (= (getValueByKey!155 (toList!808 lt!54658) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(declare-fun b!106633 () Bool)

(assert (=> b!106633 (= e!69380 (contains!830 (toList!808 lt!54658) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!29341 res!52984) b!106632))

(assert (= (and b!106632 res!52983) b!106633))

(declare-fun m!119499 () Bool)

(assert (=> d!29341 m!119499))

(declare-fun m!119501 () Bool)

(assert (=> d!29341 m!119501))

(declare-fun m!119503 () Bool)

(assert (=> d!29341 m!119503))

(declare-fun m!119505 () Bool)

(assert (=> d!29341 m!119505))

(declare-fun m!119507 () Bool)

(assert (=> b!106632 m!119507))

(declare-fun m!119509 () Bool)

(assert (=> b!106633 m!119509))

(assert (=> b!106021 d!29341))

(declare-fun d!29343 () Bool)

(declare-fun c!18661 () Bool)

(assert (=> d!29343 (= c!18661 ((_ is Nil!1639) (toList!808 lt!54031)))))

(declare-fun e!69381 () (InoxSet tuple2!2410))

(assert (=> d!29343 (= (content!108 (toList!808 lt!54031)) e!69381)))

(declare-fun b!106634 () Bool)

(assert (=> b!106634 (= e!69381 ((as const (Array tuple2!2410 Bool)) false))))

(declare-fun b!106635 () Bool)

(assert (=> b!106635 (= e!69381 ((_ map or) (store ((as const (Array tuple2!2410 Bool)) false) (h!2235 (toList!808 lt!54031)) true) (content!108 (t!5737 (toList!808 lt!54031)))))))

(assert (= (and d!29343 c!18661) b!106634))

(assert (= (and d!29343 (not c!18661)) b!106635))

(declare-fun m!119511 () Bool)

(assert (=> b!106635 m!119511))

(declare-fun m!119513 () Bool)

(assert (=> b!106635 m!119513))

(assert (=> d!29011 d!29343))

(declare-fun d!29345 () Bool)

(assert (=> d!29345 (= (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105775 d!29345))

(declare-fun d!29347 () Bool)

(declare-fun res!52985 () Bool)

(declare-fun e!69382 () Bool)

(assert (=> d!29347 (=> res!52985 e!69382)))

(assert (=> d!29347 (= res!52985 (or ((_ is Nil!1639) lt!54351) ((_ is Nil!1639) (t!5737 lt!54351))))))

(assert (=> d!29347 (= (isStrictlySorted!304 lt!54351) e!69382)))

(declare-fun b!106636 () Bool)

(declare-fun e!69383 () Bool)

(assert (=> b!106636 (= e!69382 e!69383)))

(declare-fun res!52986 () Bool)

(assert (=> b!106636 (=> (not res!52986) (not e!69383))))

(assert (=> b!106636 (= res!52986 (bvslt (_1!1215 (h!2235 lt!54351)) (_1!1215 (h!2235 (t!5737 lt!54351)))))))

(declare-fun b!106637 () Bool)

(assert (=> b!106637 (= e!69383 (isStrictlySorted!304 (t!5737 lt!54351)))))

(assert (= (and d!29347 (not res!52985)) b!106636))

(assert (= (and b!106636 res!52986) b!106637))

(declare-fun m!119515 () Bool)

(assert (=> b!106637 m!119515))

(assert (=> d!29009 d!29347))

(declare-fun d!29349 () Bool)

(declare-fun res!52987 () Bool)

(declare-fun e!69384 () Bool)

(assert (=> d!29349 (=> res!52987 e!69384)))

(assert (=> d!29349 (= res!52987 (or ((_ is Nil!1639) (toList!808 lt!53824)) ((_ is Nil!1639) (t!5737 (toList!808 lt!53824)))))))

(assert (=> d!29349 (= (isStrictlySorted!304 (toList!808 lt!53824)) e!69384)))

(declare-fun b!106638 () Bool)

(declare-fun e!69385 () Bool)

(assert (=> b!106638 (= e!69384 e!69385)))

(declare-fun res!52988 () Bool)

(assert (=> b!106638 (=> (not res!52988) (not e!69385))))

(assert (=> b!106638 (= res!52988 (bvslt (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 (h!2235 (t!5737 (toList!808 lt!53824))))))))

(declare-fun b!106639 () Bool)

(assert (=> b!106639 (= e!69385 (isStrictlySorted!304 (t!5737 (toList!808 lt!53824))))))

(assert (= (and d!29349 (not res!52987)) b!106638))

(assert (= (and b!106638 res!52988) b!106639))

(declare-fun m!119517 () Bool)

(assert (=> b!106639 m!119517))

(assert (=> d!29009 d!29349))

(declare-fun d!29351 () Bool)

(declare-fun e!69387 () Bool)

(assert (=> d!29351 e!69387))

(declare-fun res!52989 () Bool)

(assert (=> d!29351 (=> res!52989 e!69387)))

(declare-fun lt!54660 () Bool)

(assert (=> d!29351 (= res!52989 (not lt!54660))))

(declare-fun lt!54663 () Bool)

(assert (=> d!29351 (= lt!54660 lt!54663)))

(declare-fun lt!54662 () Unit!3250)

(declare-fun e!69386 () Unit!3250)

(assert (=> d!29351 (= lt!54662 e!69386)))

(declare-fun c!18662 () Bool)

(assert (=> d!29351 (= c!18662 lt!54663)))

(assert (=> d!29351 (= lt!54663 (containsKey!159 (toList!808 lt!54097) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29351 (= (contains!829 lt!54097 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54660)))

(declare-fun b!106640 () Bool)

(declare-fun lt!54661 () Unit!3250)

(assert (=> b!106640 (= e!69386 lt!54661)))

(assert (=> b!106640 (= lt!54661 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54097) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106640 (isDefined!109 (getValueByKey!155 (toList!808 lt!54097) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106641 () Bool)

(declare-fun Unit!3302 () Unit!3250)

(assert (=> b!106641 (= e!69386 Unit!3302)))

(declare-fun b!106642 () Bool)

(assert (=> b!106642 (= e!69387 (isDefined!109 (getValueByKey!155 (toList!808 lt!54097) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29351 c!18662) b!106640))

(assert (= (and d!29351 (not c!18662)) b!106641))

(assert (= (and d!29351 (not res!52989)) b!106642))

(declare-fun m!119519 () Bool)

(assert (=> d!29351 m!119519))

(declare-fun m!119521 () Bool)

(assert (=> b!106640 m!119521))

(declare-fun m!119523 () Bool)

(assert (=> b!106640 m!119523))

(assert (=> b!106640 m!119523))

(declare-fun m!119525 () Bool)

(assert (=> b!106640 m!119525))

(assert (=> b!106642 m!119523))

(assert (=> b!106642 m!119523))

(assert (=> b!106642 m!119525))

(assert (=> d!28839 d!29351))

(assert (=> d!28839 d!28797))

(declare-fun d!29353 () Bool)

(declare-fun e!69388 () Bool)

(assert (=> d!29353 e!69388))

(declare-fun res!52991 () Bool)

(assert (=> d!29353 (=> (not res!52991) (not e!69388))))

(declare-fun lt!54666 () ListLongMap!1585)

(assert (=> d!29353 (= res!52991 (contains!829 lt!54666 (_1!1215 (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(declare-fun lt!54665 () List!1642)

(assert (=> d!29353 (= lt!54666 (ListLongMap!1586 lt!54665))))

(declare-fun lt!54667 () Unit!3250)

(declare-fun lt!54664 () Unit!3250)

(assert (=> d!29353 (= lt!54667 lt!54664)))

(assert (=> d!29353 (= (getValueByKey!155 lt!54665 (_1!1215 (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29353 (= lt!54664 (lemmaContainsTupThenGetReturnValue!73 lt!54665 (_1!1215 (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (_2!1215 (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29353 (= lt!54665 (insertStrictlySorted!75 (toList!808 (ite c!18479 call!11204 (ite c!18475 call!11208 call!11205))) (_1!1215 (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (_2!1215 (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29353 (= (+!146 (ite c!18479 call!11204 (ite c!18475 call!11208 call!11205)) (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) lt!54666)))

(declare-fun b!106643 () Bool)

(declare-fun res!52990 () Bool)

(assert (=> b!106643 (=> (not res!52990) (not e!69388))))

(assert (=> b!106643 (= res!52990 (= (getValueByKey!155 (toList!808 lt!54666) (_1!1215 (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))))

(declare-fun b!106644 () Bool)

(assert (=> b!106644 (= e!69388 (contains!830 (toList!808 lt!54666) (ite (or c!18479 c!18475) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (= (and d!29353 res!52991) b!106643))

(assert (= (and b!106643 res!52990) b!106644))

(declare-fun m!119527 () Bool)

(assert (=> d!29353 m!119527))

(declare-fun m!119529 () Bool)

(assert (=> d!29353 m!119529))

(declare-fun m!119531 () Bool)

(assert (=> d!29353 m!119531))

(declare-fun m!119533 () Bool)

(assert (=> d!29353 m!119533))

(declare-fun m!119535 () Bool)

(assert (=> b!106643 m!119535))

(declare-fun m!119537 () Bool)

(assert (=> b!106644 m!119537))

(assert (=> bm!11206 d!29353))

(declare-fun b!106645 () Bool)

(declare-fun e!69389 () (_ BitVec 32))

(declare-fun call!11274 () (_ BitVec 32))

(assert (=> b!106645 (= e!69389 (bvadd #b00000000000000000000000000000001 call!11274))))

(declare-fun b!106646 () Bool)

(assert (=> b!106646 (= e!69389 call!11274)))

(declare-fun b!106647 () Bool)

(declare-fun e!69390 () (_ BitVec 32))

(assert (=> b!106647 (= e!69390 #b00000000000000000000000000000000)))

(declare-fun d!29355 () Bool)

(declare-fun lt!54668 () (_ BitVec 32))

(assert (=> d!29355 (and (bvsge lt!54668 #b00000000000000000000000000000000) (bvsle lt!54668 (bvsub (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!29355 (= lt!54668 e!69390)))

(declare-fun c!18663 () Bool)

(assert (=> d!29355 (= c!18663 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> d!29355 (and (bvsle #b00000000000000000000000000000000 (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (=> d!29355 (= (arrayCountValidKeys!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000000 (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))) lt!54668)))

(declare-fun b!106648 () Bool)

(assert (=> b!106648 (= e!69390 e!69389)))

(declare-fun c!18664 () Bool)

(assert (=> b!106648 (= c!18664 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11271 () Bool)

(assert (=> bm!11271 (= call!11274 (arrayCountValidKeys!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!29355 c!18663) b!106647))

(assert (= (and d!29355 (not c!18663)) b!106648))

(assert (= (and b!106648 c!18664) b!106645))

(assert (= (and b!106648 (not c!18664)) b!106646))

(assert (= (or b!106645 b!106646) bm!11271))

(assert (=> b!106648 m!118857))

(assert (=> b!106648 m!118857))

(assert (=> b!106648 m!118859))

(declare-fun m!119539 () Bool)

(assert (=> bm!11271 m!119539))

(assert (=> b!106116 d!29355))

(declare-fun d!29357 () Bool)

(declare-fun lt!54669 () Bool)

(assert (=> d!29357 (= lt!54669 (select (content!108 lt!54351) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun e!69391 () Bool)

(assert (=> d!29357 (= lt!54669 e!69391)))

(declare-fun res!52993 () Bool)

(assert (=> d!29357 (=> (not res!52993) (not e!69391))))

(assert (=> d!29357 (= res!52993 ((_ is Cons!1638) lt!54351))))

(assert (=> d!29357 (= (contains!830 lt!54351 (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))) lt!54669)))

(declare-fun b!106649 () Bool)

(declare-fun e!69392 () Bool)

(assert (=> b!106649 (= e!69391 e!69392)))

(declare-fun res!52992 () Bool)

(assert (=> b!106649 (=> res!52992 e!69392)))

(assert (=> b!106649 (= res!52992 (= (h!2235 lt!54351) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun b!106650 () Bool)

(assert (=> b!106650 (= e!69392 (contains!830 (t!5737 lt!54351) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(assert (= (and d!29357 res!52993) b!106649))

(assert (= (and b!106649 (not res!52992)) b!106650))

(declare-fun m!119541 () Bool)

(assert (=> d!29357 m!119541))

(declare-fun m!119543 () Bool)

(assert (=> d!29357 m!119543))

(declare-fun m!119545 () Bool)

(assert (=> b!106650 m!119545))

(assert (=> b!106135 d!29357))

(declare-fun d!29359 () Bool)

(assert (=> d!29359 (= (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54019)) (v!2896 (getValueByKey!155 (toList!808 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54019)))))

(assert (=> d!28943 d!29359))

(declare-fun b!106652 () Bool)

(declare-fun e!69393 () Option!161)

(declare-fun e!69394 () Option!161)

(assert (=> b!106652 (= e!69393 e!69394)))

(declare-fun c!18666 () Bool)

(assert (=> b!106652 (= c!18666 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (not (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) lt!54019))))))

(declare-fun c!18665 () Bool)

(declare-fun d!29361 () Bool)

(assert (=> d!29361 (= c!18665 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) lt!54019)))))

(assert (=> d!29361 (= (getValueByKey!155 (toList!808 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54019) e!69393)))

(declare-fun b!106653 () Bool)

(assert (=> b!106653 (= e!69394 (getValueByKey!155 (t!5737 (toList!808 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) lt!54019))))

(declare-fun b!106651 () Bool)

(assert (=> b!106651 (= e!69393 (Some!160 (_2!1215 (h!2235 (toList!808 (+!146 lt!54012 (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))))

(declare-fun b!106654 () Bool)

(assert (=> b!106654 (= e!69394 None!159)))

(assert (= (and d!29361 c!18665) b!106651))

(assert (= (and d!29361 (not c!18665)) b!106652))

(assert (= (and b!106652 c!18666) b!106653))

(assert (= (and b!106652 (not c!18666)) b!106654))

(declare-fun m!119547 () Bool)

(assert (=> b!106653 m!119547))

(assert (=> d!28943 d!29361))

(declare-fun b!106656 () Bool)

(declare-fun e!69395 () Option!161)

(declare-fun e!69396 () Option!161)

(assert (=> b!106656 (= e!69395 e!69396)))

(declare-fun c!18668 () Bool)

(assert (=> b!106656 (= c!18668 (and ((_ is Cons!1638) (toList!808 lt!54298)) (not (= (_1!1215 (h!2235 (toList!808 lt!54298))) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun c!18667 () Bool)

(declare-fun d!29363 () Bool)

(assert (=> d!29363 (= c!18667 (and ((_ is Cons!1638) (toList!808 lt!54298)) (= (_1!1215 (h!2235 (toList!808 lt!54298))) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29363 (= (getValueByKey!155 (toList!808 lt!54298) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69395)))

(declare-fun b!106657 () Bool)

(assert (=> b!106657 (= e!69396 (getValueByKey!155 (t!5737 (toList!808 lt!54298)) (_1!1215 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106655 () Bool)

(assert (=> b!106655 (= e!69395 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54298)))))))

(declare-fun b!106658 () Bool)

(assert (=> b!106658 (= e!69396 None!159)))

(assert (= (and d!29363 c!18667) b!106655))

(assert (= (and d!29363 (not c!18667)) b!106656))

(assert (= (and b!106656 c!18668) b!106657))

(assert (= (and b!106656 (not c!18668)) b!106658))

(declare-fun m!119549 () Bool)

(assert (=> b!106657 m!119549))

(assert (=> b!106038 d!29363))

(declare-fun b!106660 () Bool)

(declare-fun e!69397 () Option!161)

(declare-fun e!69398 () Option!161)

(assert (=> b!106660 (= e!69397 e!69398)))

(declare-fun c!18670 () Bool)

(assert (=> b!106660 (= c!18670 (and ((_ is Cons!1638) (toList!808 lt!54149)) (not (= (_1!1215 (h!2235 (toList!808 lt!54149))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun c!18669 () Bool)

(declare-fun d!29365 () Bool)

(assert (=> d!29365 (= c!18669 (and ((_ is Cons!1638) (toList!808 lt!54149)) (= (_1!1215 (h!2235 (toList!808 lt!54149))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!29365 (= (getValueByKey!155 (toList!808 lt!54149) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) e!69397)))

(declare-fun b!106661 () Bool)

(assert (=> b!106661 (= e!69398 (getValueByKey!155 (t!5737 (toList!808 lt!54149)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106659 () Bool)

(assert (=> b!106659 (= e!69397 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54149)))))))

(declare-fun b!106662 () Bool)

(assert (=> b!106662 (= e!69398 None!159)))

(assert (= (and d!29365 c!18669) b!106659))

(assert (= (and d!29365 (not c!18669)) b!106660))

(assert (= (and b!106660 c!18670) b!106661))

(assert (= (and b!106660 (not c!18670)) b!106662))

(declare-fun m!119551 () Bool)

(assert (=> b!106661 m!119551))

(assert (=> b!105858 d!29365))

(declare-fun d!29367 () Bool)

(declare-fun res!52994 () Bool)

(declare-fun e!69399 () Bool)

(assert (=> d!29367 (=> res!52994 e!69399)))

(assert (=> d!29367 (= res!52994 (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!29367 (= (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!69399)))

(declare-fun b!106663 () Bool)

(declare-fun e!69400 () Bool)

(assert (=> b!106663 (= e!69399 e!69400)))

(declare-fun res!52995 () Bool)

(assert (=> b!106663 (=> (not res!52995) (not e!69400))))

(assert (=> b!106663 (= res!52995 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!106664 () Bool)

(assert (=> b!106664 (= e!69400 (arrayContainsKey!0 (_keys!4288 (v!2892 (underlying!362 thiss!992))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29367 (not res!52994)) b!106663))

(assert (= (and b!106663 res!52995) b!106664))

(assert (=> d!29367 m!119167))

(assert (=> b!106664 m!117519))

(declare-fun m!119553 () Bool)

(assert (=> b!106664 m!119553))

(assert (=> b!106219 d!29367))

(declare-fun b!106666 () Bool)

(declare-fun e!69401 () Option!161)

(declare-fun e!69402 () Option!161)

(assert (=> b!106666 (= e!69401 e!69402)))

(declare-fun c!18672 () Bool)

(assert (=> b!106666 (= c!18672 (and ((_ is Cons!1638) (toList!808 lt!54281)) (not (= (_1!1215 (h!2235 (toList!808 lt!54281))) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun d!29369 () Bool)

(declare-fun c!18671 () Bool)

(assert (=> d!29369 (= c!18671 (and ((_ is Cons!1638) (toList!808 lt!54281)) (= (_1!1215 (h!2235 (toList!808 lt!54281))) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29369 (= (getValueByKey!155 (toList!808 lt!54281) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69401)))

(declare-fun b!106667 () Bool)

(assert (=> b!106667 (= e!69402 (getValueByKey!155 (t!5737 (toList!808 lt!54281)) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106665 () Bool)

(assert (=> b!106665 (= e!69401 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54281)))))))

(declare-fun b!106668 () Bool)

(assert (=> b!106668 (= e!69402 None!159)))

(assert (= (and d!29369 c!18671) b!106665))

(assert (= (and d!29369 (not c!18671)) b!106666))

(assert (= (and b!106666 c!18672) b!106667))

(assert (= (and b!106666 (not c!18672)) b!106668))

(declare-fun m!119555 () Bool)

(assert (=> b!106667 m!119555))

(assert (=> b!106029 d!29369))

(assert (=> b!105928 d!29061))

(declare-fun d!29371 () Bool)

(declare-fun res!52996 () Bool)

(declare-fun e!69403 () Bool)

(assert (=> d!29371 (=> res!52996 e!69403)))

(assert (=> d!29371 (= res!52996 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!53820))) (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!53820)))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (=> d!29371 (= (containsKey!159 (t!5737 (toList!808 lt!53820)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) e!69403)))

(declare-fun b!106669 () Bool)

(declare-fun e!69404 () Bool)

(assert (=> b!106669 (= e!69403 e!69404)))

(declare-fun res!52997 () Bool)

(assert (=> b!106669 (=> (not res!52997) (not e!69404))))

(assert (=> b!106669 (= res!52997 (and (or (not ((_ is Cons!1638) (t!5737 (toList!808 lt!53820)))) (bvsle (_1!1215 (h!2235 (t!5737 (toList!808 lt!53820)))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))) ((_ is Cons!1638) (t!5737 (toList!808 lt!53820))) (bvslt (_1!1215 (h!2235 (t!5737 (toList!808 lt!53820)))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(declare-fun b!106670 () Bool)

(assert (=> b!106670 (= e!69404 (containsKey!159 (t!5737 (t!5737 (toList!808 lt!53820))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (= (and d!29371 (not res!52996)) b!106669))

(assert (= (and b!106669 res!52997) b!106670))

(assert (=> b!106670 m!117519))

(declare-fun m!119557 () Bool)

(assert (=> b!106670 m!119557))

(assert (=> b!106103 d!29371))

(declare-fun d!29373 () Bool)

(declare-fun lt!54670 () Bool)

(assert (=> d!29373 (= lt!54670 (select (content!108 lt!54037) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun e!69405 () Bool)

(assert (=> d!29373 (= lt!54670 e!69405)))

(declare-fun res!52999 () Bool)

(assert (=> d!29373 (=> (not res!52999) (not e!69405))))

(assert (=> d!29373 (= res!52999 ((_ is Cons!1638) lt!54037))))

(assert (=> d!29373 (= (contains!830 lt!54037 (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))) lt!54670)))

(declare-fun b!106671 () Bool)

(declare-fun e!69406 () Bool)

(assert (=> b!106671 (= e!69405 e!69406)))

(declare-fun res!52998 () Bool)

(assert (=> b!106671 (=> res!52998 e!69406)))

(assert (=> b!106671 (= res!52998 (= (h!2235 lt!54037) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun b!106672 () Bool)

(assert (=> b!106672 (= e!69406 (contains!830 (t!5737 lt!54037) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(assert (= (and d!29373 res!52999) b!106671))

(assert (= (and b!106671 (not res!52998)) b!106672))

(declare-fun m!119559 () Bool)

(assert (=> d!29373 m!119559))

(declare-fun m!119561 () Bool)

(assert (=> d!29373 m!119561))

(declare-fun m!119563 () Bool)

(assert (=> b!106672 m!119563))

(assert (=> b!106127 d!29373))

(declare-fun d!29375 () Bool)

(declare-fun e!69408 () Bool)

(assert (=> d!29375 e!69408))

(declare-fun res!53000 () Bool)

(assert (=> d!29375 (=> res!53000 e!69408)))

(declare-fun lt!54671 () Bool)

(assert (=> d!29375 (= res!53000 (not lt!54671))))

(declare-fun lt!54674 () Bool)

(assert (=> d!29375 (= lt!54671 lt!54674)))

(declare-fun lt!54673 () Unit!3250)

(declare-fun e!69407 () Unit!3250)

(assert (=> d!29375 (= lt!54673 e!69407)))

(declare-fun c!18673 () Bool)

(assert (=> d!29375 (= c!18673 lt!54674)))

(assert (=> d!29375 (= lt!54674 (containsKey!159 (toList!808 lt!54137) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!29375 (= (contains!829 lt!54137 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) lt!54671)))

(declare-fun b!106673 () Bool)

(declare-fun lt!54672 () Unit!3250)

(assert (=> b!106673 (= e!69407 lt!54672)))

(assert (=> b!106673 (= lt!54672 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54137) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> b!106673 (isDefined!109 (getValueByKey!155 (toList!808 lt!54137) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106674 () Bool)

(declare-fun Unit!3303 () Unit!3250)

(assert (=> b!106674 (= e!69407 Unit!3303)))

(declare-fun b!106675 () Bool)

(assert (=> b!106675 (= e!69408 (isDefined!109 (getValueByKey!155 (toList!808 lt!54137) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (= (and d!29375 c!18673) b!106673))

(assert (= (and d!29375 (not c!18673)) b!106674))

(assert (= (and d!29375 (not res!53000)) b!106675))

(declare-fun m!119565 () Bool)

(assert (=> d!29375 m!119565))

(declare-fun m!119567 () Bool)

(assert (=> b!106673 m!119567))

(assert (=> b!106673 m!118011))

(assert (=> b!106673 m!118011))

(declare-fun m!119569 () Bool)

(assert (=> b!106673 m!119569))

(assert (=> b!106675 m!118011))

(assert (=> b!106675 m!118011))

(assert (=> b!106675 m!119569))

(assert (=> d!28883 d!29375))

(declare-fun b!106677 () Bool)

(declare-fun e!69409 () Option!161)

(declare-fun e!69410 () Option!161)

(assert (=> b!106677 (= e!69409 e!69410)))

(declare-fun c!18675 () Bool)

(assert (=> b!106677 (= c!18675 (and ((_ is Cons!1638) lt!54136) (not (= (_1!1215 (h!2235 lt!54136)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun c!18674 () Bool)

(declare-fun d!29377 () Bool)

(assert (=> d!29377 (= c!18674 (and ((_ is Cons!1638) lt!54136) (= (_1!1215 (h!2235 lt!54136)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!29377 (= (getValueByKey!155 lt!54136 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) e!69409)))

(declare-fun b!106678 () Bool)

(assert (=> b!106678 (= e!69410 (getValueByKey!155 (t!5737 lt!54136) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106676 () Bool)

(assert (=> b!106676 (= e!69409 (Some!160 (_2!1215 (h!2235 lt!54136))))))

(declare-fun b!106679 () Bool)

(assert (=> b!106679 (= e!69410 None!159)))

(assert (= (and d!29377 c!18674) b!106676))

(assert (= (and d!29377 (not c!18674)) b!106677))

(assert (= (and b!106677 c!18675) b!106678))

(assert (= (and b!106677 (not c!18675)) b!106679))

(declare-fun m!119571 () Bool)

(assert (=> b!106678 m!119571))

(assert (=> d!28883 d!29377))

(declare-fun d!29379 () Bool)

(assert (=> d!29379 (= (getValueByKey!155 lt!54136 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun lt!54675 () Unit!3250)

(assert (=> d!29379 (= lt!54675 (choose!666 lt!54136 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun e!69411 () Bool)

(assert (=> d!29379 e!69411))

(declare-fun res!53001 () Bool)

(assert (=> d!29379 (=> (not res!53001) (not e!69411))))

(assert (=> d!29379 (= res!53001 (isStrictlySorted!304 lt!54136))))

(assert (=> d!29379 (= (lemmaContainsTupThenGetReturnValue!73 lt!54136 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) lt!54675)))

(declare-fun b!106680 () Bool)

(declare-fun res!53002 () Bool)

(assert (=> b!106680 (=> (not res!53002) (not e!69411))))

(assert (=> b!106680 (= res!53002 (containsKey!159 lt!54136 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106681 () Bool)

(assert (=> b!106681 (= e!69411 (contains!830 lt!54136 (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (= (and d!29379 res!53001) b!106680))

(assert (= (and b!106680 res!53002) b!106681))

(assert (=> d!29379 m!118005))

(declare-fun m!119573 () Bool)

(assert (=> d!29379 m!119573))

(declare-fun m!119575 () Bool)

(assert (=> d!29379 m!119575))

(declare-fun m!119577 () Bool)

(assert (=> b!106680 m!119577))

(declare-fun m!119579 () Bool)

(assert (=> b!106681 m!119579))

(assert (=> d!28883 d!29379))

(declare-fun d!29381 () Bool)

(declare-fun e!69413 () Bool)

(assert (=> d!29381 e!69413))

(declare-fun res!53003 () Bool)

(assert (=> d!29381 (=> (not res!53003) (not e!69413))))

(declare-fun lt!54676 () List!1642)

(assert (=> d!29381 (= res!53003 (isStrictlySorted!304 lt!54676))))

(declare-fun e!69412 () List!1642)

(assert (=> d!29381 (= lt!54676 e!69412)))

(declare-fun c!18676 () Bool)

(assert (=> d!29381 (= c!18676 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (bvslt (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!29381 (isStrictlySorted!304 (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!29381 (= (insertStrictlySorted!75 (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) lt!54676)))

(declare-fun b!106682 () Bool)

(declare-fun e!69415 () List!1642)

(declare-fun call!11277 () List!1642)

(assert (=> b!106682 (= e!69415 call!11277)))

(declare-fun c!18677 () Bool)

(declare-fun b!106683 () Bool)

(assert (=> b!106683 (= c!18677 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (bvsgt (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun e!69414 () List!1642)

(assert (=> b!106683 (= e!69414 e!69415)))

(declare-fun b!106684 () Bool)

(declare-fun call!11275 () List!1642)

(assert (=> b!106684 (= e!69414 call!11275)))

(declare-fun b!106685 () Bool)

(declare-fun call!11276 () List!1642)

(assert (=> b!106685 (= e!69412 call!11276)))

(declare-fun b!106686 () Bool)

(declare-fun res!53004 () Bool)

(assert (=> b!106686 (=> (not res!53004) (not e!69413))))

(assert (=> b!106686 (= res!53004 (containsKey!159 lt!54676 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun bm!11272 () Bool)

(assert (=> bm!11272 (= call!11275 call!11276)))

(declare-fun e!69416 () List!1642)

(declare-fun b!106687 () Bool)

(declare-fun c!18678 () Bool)

(assert (=> b!106687 (= e!69416 (ite c!18678 (t!5737 (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (ite c!18677 (Cons!1638 (h!2235 (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (t!5737 (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) Nil!1639)))))

(declare-fun bm!11273 () Bool)

(assert (=> bm!11273 (= call!11276 ($colon$colon!80 e!69416 (ite c!18676 (h!2235 (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun c!18679 () Bool)

(assert (=> bm!11273 (= c!18679 c!18676)))

(declare-fun b!106688 () Bool)

(assert (=> b!106688 (= e!69416 (insertStrictlySorted!75 (t!5737 (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106689 () Bool)

(assert (=> b!106689 (= e!69413 (contains!830 lt!54676 (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun bm!11274 () Bool)

(assert (=> bm!11274 (= call!11277 call!11275)))

(declare-fun b!106690 () Bool)

(assert (=> b!106690 (= e!69415 call!11277)))

(declare-fun b!106691 () Bool)

(assert (=> b!106691 (= e!69412 e!69414)))

(assert (=> b!106691 (= c!18678 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (= (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (= (and d!29381 c!18676) b!106685))

(assert (= (and d!29381 (not c!18676)) b!106691))

(assert (= (and b!106691 c!18678) b!106684))

(assert (= (and b!106691 (not c!18678)) b!106683))

(assert (= (and b!106683 c!18677) b!106690))

(assert (= (and b!106683 (not c!18677)) b!106682))

(assert (= (or b!106690 b!106682) bm!11274))

(assert (= (or b!106684 bm!11274) bm!11272))

(assert (= (or b!106685 bm!11272) bm!11273))

(assert (= (and bm!11273 c!18679) b!106688))

(assert (= (and bm!11273 (not c!18679)) b!106687))

(assert (= (and d!29381 res!53003) b!106686))

(assert (= (and b!106686 res!53004) b!106689))

(declare-fun m!119581 () Bool)

(assert (=> b!106689 m!119581))

(declare-fun m!119583 () Bool)

(assert (=> bm!11273 m!119583))

(declare-fun m!119585 () Bool)

(assert (=> b!106686 m!119585))

(declare-fun m!119587 () Bool)

(assert (=> b!106688 m!119587))

(declare-fun m!119589 () Bool)

(assert (=> d!29381 m!119589))

(declare-fun m!119591 () Bool)

(assert (=> d!29381 m!119591))

(assert (=> d!28883 d!29381))

(declare-fun d!29383 () Bool)

(assert (=> d!29383 (= (size!2321 newMap!16) (bvadd (_size!499 newMap!16) (bvsdiv (bvadd (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!105924 d!29383))

(declare-fun d!29385 () Bool)

(declare-fun res!53005 () Bool)

(declare-fun e!69417 () Bool)

(assert (=> d!29385 (=> res!53005 e!69417)))

(assert (=> d!29385 (= res!53005 (and ((_ is Cons!1638) (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (= (_1!1215 (h!2235 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) lt!54016)))))

(assert (=> d!29385 (= (containsKey!159 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016) e!69417)))

(declare-fun b!106692 () Bool)

(declare-fun e!69418 () Bool)

(assert (=> b!106692 (= e!69417 e!69418)))

(declare-fun res!53006 () Bool)

(assert (=> b!106692 (=> (not res!53006) (not e!69418))))

(assert (=> b!106692 (= res!53006 (and (or (not ((_ is Cons!1638) (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) (bvsle (_1!1215 (h!2235 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) lt!54016)) ((_ is Cons!1638) (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) (bvslt (_1!1215 (h!2235 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))) lt!54016)))))

(declare-fun b!106693 () Bool)

(assert (=> b!106693 (= e!69418 (containsKey!159 (t!5737 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))) lt!54016))))

(assert (= (and d!29385 (not res!53005)) b!106692))

(assert (= (and b!106692 res!53006) b!106693))

(declare-fun m!119593 () Bool)

(assert (=> b!106693 m!119593))

(assert (=> d!28945 d!29385))

(declare-fun d!29387 () Bool)

(assert (=> d!29387 (isDefined!109 (getValueByKey!155 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))

(declare-fun lt!54677 () Unit!3250)

(assert (=> d!29387 (= lt!54677 (choose!667 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))

(declare-fun e!69419 () Bool)

(assert (=> d!29387 e!69419))

(declare-fun res!53007 () Bool)

(assert (=> d!29387 (=> (not res!53007) (not e!69419))))

(assert (=> d!29387 (= res!53007 (isStrictlySorted!304 (toList!808 call!11138)))))

(assert (=> d!29387 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))) lt!54677)))

(declare-fun b!106694 () Bool)

(assert (=> b!106694 (= e!69419 (containsKey!159 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))

(assert (= (and d!29387 res!53007) b!106694))

(assert (=> d!29387 m!117917))

(assert (=> d!29387 m!117917))

(assert (=> d!29387 m!117919))

(declare-fun m!119595 () Bool)

(assert (=> d!29387 m!119595))

(declare-fun m!119597 () Bool)

(assert (=> d!29387 m!119597))

(assert (=> b!106694 m!117913))

(assert (=> b!105783 d!29387))

(assert (=> b!105783 d!29115))

(assert (=> b!105783 d!29117))

(declare-fun d!29389 () Bool)

(declare-fun e!69421 () Bool)

(assert (=> d!29389 e!69421))

(declare-fun res!53008 () Bool)

(assert (=> d!29389 (=> res!53008 e!69421)))

(declare-fun lt!54678 () Bool)

(assert (=> d!29389 (= res!53008 (not lt!54678))))

(declare-fun lt!54681 () Bool)

(assert (=> d!29389 (= lt!54678 lt!54681)))

(declare-fun lt!54680 () Unit!3250)

(declare-fun e!69420 () Unit!3250)

(assert (=> d!29389 (= lt!54680 e!69420)))

(declare-fun c!18680 () Bool)

(assert (=> d!29389 (= c!18680 lt!54681)))

(assert (=> d!29389 (= lt!54681 (containsKey!159 (toList!808 (map!1283 (_2!1216 lt!54427))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!29389 (= (contains!829 (map!1283 (_2!1216 lt!54427)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) lt!54678)))

(declare-fun b!106695 () Bool)

(declare-fun lt!54679 () Unit!3250)

(assert (=> b!106695 (= e!69420 lt!54679)))

(assert (=> b!106695 (= lt!54679 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (map!1283 (_2!1216 lt!54427))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> b!106695 (isDefined!109 (getValueByKey!155 (toList!808 (map!1283 (_2!1216 lt!54427))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!106696 () Bool)

(declare-fun Unit!3304 () Unit!3250)

(assert (=> b!106696 (= e!69420 Unit!3304)))

(declare-fun b!106697 () Bool)

(assert (=> b!106697 (= e!69421 (isDefined!109 (getValueByKey!155 (toList!808 (map!1283 (_2!1216 lt!54427))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (= (and d!29389 c!18680) b!106695))

(assert (= (and d!29389 (not c!18680)) b!106696))

(assert (= (and d!29389 (not res!53008)) b!106697))

(assert (=> d!29389 m!117519))

(declare-fun m!119599 () Bool)

(assert (=> d!29389 m!119599))

(assert (=> b!106695 m!117519))

(declare-fun m!119601 () Bool)

(assert (=> b!106695 m!119601))

(assert (=> b!106695 m!117519))

(declare-fun m!119603 () Bool)

(assert (=> b!106695 m!119603))

(assert (=> b!106695 m!119603))

(declare-fun m!119605 () Bool)

(assert (=> b!106695 m!119605))

(assert (=> b!106697 m!117519))

(assert (=> b!106697 m!119603))

(assert (=> b!106697 m!119603))

(assert (=> b!106697 m!119605))

(assert (=> b!106210 d!29389))

(assert (=> b!106210 d!29297))

(declare-fun d!29391 () Bool)

(declare-fun e!69423 () Bool)

(assert (=> d!29391 e!69423))

(declare-fun res!53009 () Bool)

(assert (=> d!29391 (=> res!53009 e!69423)))

(declare-fun lt!54682 () Bool)

(assert (=> d!29391 (= res!53009 (not lt!54682))))

(declare-fun lt!54685 () Bool)

(assert (=> d!29391 (= lt!54682 lt!54685)))

(declare-fun lt!54684 () Unit!3250)

(declare-fun e!69422 () Unit!3250)

(assert (=> d!29391 (= lt!54684 e!69422)))

(declare-fun c!18681 () Bool)

(assert (=> d!29391 (= c!18681 lt!54685)))

(assert (=> d!29391 (= lt!54685 (containsKey!159 (toList!808 lt!54318) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29391 (= (contains!829 lt!54318 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) lt!54682)))

(declare-fun b!106698 () Bool)

(declare-fun lt!54683 () Unit!3250)

(assert (=> b!106698 (= e!69422 lt!54683)))

(assert (=> b!106698 (= lt!54683 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54318) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106698 (isDefined!109 (getValueByKey!155 (toList!808 lt!54318) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106699 () Bool)

(declare-fun Unit!3305 () Unit!3250)

(assert (=> b!106699 (= e!69422 Unit!3305)))

(declare-fun b!106700 () Bool)

(assert (=> b!106700 (= e!69423 (isDefined!109 (getValueByKey!155 (toList!808 lt!54318) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29391 c!18681) b!106698))

(assert (= (and d!29391 (not c!18681)) b!106699))

(assert (= (and d!29391 (not res!53009)) b!106700))

(assert (=> d!29391 m!117859))

(declare-fun m!119607 () Bool)

(assert (=> d!29391 m!119607))

(assert (=> b!106698 m!117859))

(declare-fun m!119609 () Bool)

(assert (=> b!106698 m!119609))

(assert (=> b!106698 m!117859))

(declare-fun m!119611 () Bool)

(assert (=> b!106698 m!119611))

(assert (=> b!106698 m!119611))

(declare-fun m!119613 () Bool)

(assert (=> b!106698 m!119613))

(assert (=> b!106700 m!117859))

(assert (=> b!106700 m!119611))

(assert (=> b!106700 m!119611))

(assert (=> b!106700 m!119613))

(assert (=> b!106069 d!29391))

(declare-fun d!29393 () Bool)

(assert (=> d!29393 (= (apply!98 lt!54180 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1342 (getValueByKey!155 (toList!808 lt!54180) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4388 () Bool)

(assert (= bs!4388 d!29393))

(assert (=> bs!4388 m!117859))

(declare-fun m!119615 () Bool)

(assert (=> bs!4388 m!119615))

(assert (=> bs!4388 m!119615))

(declare-fun m!119617 () Bool)

(assert (=> bs!4388 m!119617))

(assert (=> b!105941 d!29393))

(declare-fun d!29395 () Bool)

(declare-fun c!18682 () Bool)

(assert (=> d!29395 (= c!18682 ((_ is ValueCellFull!996) (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!69424 () V!3219)

(assert (=> d!29395 (= (get!1339 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69424)))

(declare-fun b!106701 () Bool)

(assert (=> b!106701 (= e!69424 (get!1340 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106702 () Bool)

(assert (=> b!106702 (= e!69424 (get!1341 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29395 c!18682) b!106701))

(assert (= (and d!29395 (not c!18682)) b!106702))

(assert (=> b!106701 m!118101))

(assert (=> b!106701 m!118103))

(declare-fun m!119619 () Bool)

(assert (=> b!106701 m!119619))

(assert (=> b!106702 m!118101))

(assert (=> b!106702 m!118103))

(declare-fun m!119621 () Bool)

(assert (=> b!106702 m!119621))

(assert (=> b!105941 d!29395))

(declare-fun d!29397 () Bool)

(assert (=> d!29397 (= (isEmpty!375 lt!54097) (isEmpty!377 (toList!808 lt!54097)))))

(declare-fun bs!4389 () Bool)

(assert (= bs!4389 d!29397))

(declare-fun m!119623 () Bool)

(assert (=> bs!4389 m!119623))

(assert (=> b!105774 d!29397))

(declare-fun b!106704 () Bool)

(declare-fun e!69425 () Option!161)

(declare-fun e!69426 () Option!161)

(assert (=> b!106704 (= e!69425 e!69426)))

(declare-fun c!18684 () Bool)

(assert (=> b!106704 (= c!18684 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!54038))) (not (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!54038)))) (_1!1215 lt!53817)))))))

(declare-fun d!29399 () Bool)

(declare-fun c!18683 () Bool)

(assert (=> d!29399 (= c!18683 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!54038))) (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!54038)))) (_1!1215 lt!53817))))))

(assert (=> d!29399 (= (getValueByKey!155 (t!5737 (toList!808 lt!54038)) (_1!1215 lt!53817)) e!69425)))

(declare-fun b!106705 () Bool)

(assert (=> b!106705 (= e!69426 (getValueByKey!155 (t!5737 (t!5737 (toList!808 lt!54038))) (_1!1215 lt!53817)))))

(declare-fun b!106703 () Bool)

(assert (=> b!106703 (= e!69425 (Some!160 (_2!1215 (h!2235 (t!5737 (toList!808 lt!54038))))))))

(declare-fun b!106706 () Bool)

(assert (=> b!106706 (= e!69426 None!159)))

(assert (= (and d!29399 c!18683) b!106703))

(assert (= (and d!29399 (not c!18683)) b!106704))

(assert (= (and b!106704 c!18684) b!106705))

(assert (= (and b!106704 (not c!18684)) b!106706))

(declare-fun m!119625 () Bool)

(assert (=> b!106705 m!119625))

(assert (=> b!105912 d!29399))

(declare-fun d!29401 () Bool)

(assert (=> d!29401 (= (apply!98 lt!54318 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1342 (getValueByKey!155 (toList!808 lt!54318) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4390 () Bool)

(assert (= bs!4390 d!29401))

(assert (=> bs!4390 m!117859))

(assert (=> bs!4390 m!119611))

(assert (=> bs!4390 m!119611))

(declare-fun m!119627 () Bool)

(assert (=> bs!4390 m!119627))

(assert (=> b!106074 d!29401))

(assert (=> b!106074 d!29395))

(assert (=> d!28865 d!28911))

(assert (=> d!28865 d!29203))

(declare-fun b!106707 () Bool)

(declare-fun e!69435 () Bool)

(declare-fun e!69438 () Bool)

(assert (=> b!106707 (= e!69435 e!69438)))

(declare-fun res!53016 () Bool)

(declare-fun call!11284 () Bool)

(assert (=> b!106707 (= res!53016 call!11284)))

(assert (=> b!106707 (=> (not res!53016) (not e!69438))))

(declare-fun call!11278 () ListLongMap!1585)

(declare-fun bm!11275 () Bool)

(assert (=> bm!11275 (= call!11278 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53952 (zeroValue!2457 newMap!16) lt!53815 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bm!11276 () Bool)

(declare-fun call!11282 () ListLongMap!1585)

(assert (=> bm!11276 (= call!11282 call!11278)))

(declare-fun b!106709 () Bool)

(declare-fun e!69430 () Bool)

(assert (=> b!106709 (= e!69430 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11277 () Bool)

(declare-fun call!11281 () ListLongMap!1585)

(declare-fun call!11283 () ListLongMap!1585)

(assert (=> bm!11277 (= call!11281 call!11283)))

(declare-fun b!106710 () Bool)

(declare-fun e!69433 () Unit!3250)

(declare-fun lt!54691 () Unit!3250)

(assert (=> b!106710 (= e!69433 lt!54691)))

(declare-fun lt!54704 () ListLongMap!1585)

(assert (=> b!106710 (= lt!54704 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53952 (zeroValue!2457 newMap!16) lt!53815 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54700 () (_ BitVec 64))

(assert (=> b!106710 (= lt!54700 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54703 () (_ BitVec 64))

(assert (=> b!106710 (= lt!54703 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54687 () Unit!3250)

(assert (=> b!106710 (= lt!54687 (addStillContains!74 lt!54704 lt!54700 (zeroValue!2457 newMap!16) lt!54703))))

(assert (=> b!106710 (contains!829 (+!146 lt!54704 (tuple2!2411 lt!54700 (zeroValue!2457 newMap!16))) lt!54703)))

(declare-fun lt!54686 () Unit!3250)

(assert (=> b!106710 (= lt!54686 lt!54687)))

(declare-fun lt!54696 () ListLongMap!1585)

(assert (=> b!106710 (= lt!54696 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53952 (zeroValue!2457 newMap!16) lt!53815 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54688 () (_ BitVec 64))

(assert (=> b!106710 (= lt!54688 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54694 () (_ BitVec 64))

(assert (=> b!106710 (= lt!54694 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54692 () Unit!3250)

(assert (=> b!106710 (= lt!54692 (addApplyDifferent!74 lt!54696 lt!54688 lt!53815 lt!54694))))

(assert (=> b!106710 (= (apply!98 (+!146 lt!54696 (tuple2!2411 lt!54688 lt!53815)) lt!54694) (apply!98 lt!54696 lt!54694))))

(declare-fun lt!54702 () Unit!3250)

(assert (=> b!106710 (= lt!54702 lt!54692)))

(declare-fun lt!54699 () ListLongMap!1585)

(assert (=> b!106710 (= lt!54699 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53952 (zeroValue!2457 newMap!16) lt!53815 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54697 () (_ BitVec 64))

(assert (=> b!106710 (= lt!54697 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54706 () (_ BitVec 64))

(assert (=> b!106710 (= lt!54706 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54707 () Unit!3250)

(assert (=> b!106710 (= lt!54707 (addApplyDifferent!74 lt!54699 lt!54697 (zeroValue!2457 newMap!16) lt!54706))))

(assert (=> b!106710 (= (apply!98 (+!146 lt!54699 (tuple2!2411 lt!54697 (zeroValue!2457 newMap!16))) lt!54706) (apply!98 lt!54699 lt!54706))))

(declare-fun lt!54693 () Unit!3250)

(assert (=> b!106710 (= lt!54693 lt!54707)))

(declare-fun lt!54695 () ListLongMap!1585)

(assert (=> b!106710 (= lt!54695 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53952 (zeroValue!2457 newMap!16) lt!53815 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54705 () (_ BitVec 64))

(assert (=> b!106710 (= lt!54705 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54690 () (_ BitVec 64))

(assert (=> b!106710 (= lt!54690 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106710 (= lt!54691 (addApplyDifferent!74 lt!54695 lt!54705 lt!53815 lt!54690))))

(assert (=> b!106710 (= (apply!98 (+!146 lt!54695 (tuple2!2411 lt!54705 lt!53815)) lt!54690) (apply!98 lt!54695 lt!54690))))

(declare-fun b!106711 () Bool)

(declare-fun e!69434 () Bool)

(assert (=> b!106711 (= e!69434 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106712 () Bool)

(declare-fun lt!54698 () ListLongMap!1585)

(assert (=> b!106712 (= e!69438 (= (apply!98 lt!54698 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53815))))

(declare-fun b!106713 () Bool)

(declare-fun e!69437 () Bool)

(declare-fun e!69431 () Bool)

(assert (=> b!106713 (= e!69437 e!69431)))

(declare-fun res!53014 () Bool)

(declare-fun call!11280 () Bool)

(assert (=> b!106713 (= res!53014 call!11280)))

(assert (=> b!106713 (=> (not res!53014) (not e!69431))))

(declare-fun b!106714 () Bool)

(declare-fun res!53015 () Bool)

(declare-fun e!69439 () Bool)

(assert (=> b!106714 (=> (not res!53015) (not e!69439))))

(assert (=> b!106714 (= res!53015 e!69437)))

(declare-fun c!18690 () Bool)

(assert (=> b!106714 (= c!18690 (not (= (bvand lt!53952 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106715 () Bool)

(declare-fun c!18686 () Bool)

(assert (=> b!106715 (= c!18686 (and (not (= (bvand lt!53952 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!53952 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69428 () ListLongMap!1585)

(declare-fun e!69436 () ListLongMap!1585)

(assert (=> b!106715 (= e!69428 e!69436)))

(declare-fun b!106716 () Bool)

(declare-fun res!53012 () Bool)

(assert (=> b!106716 (=> (not res!53012) (not e!69439))))

(declare-fun e!69429 () Bool)

(assert (=> b!106716 (= res!53012 e!69429)))

(declare-fun res!53018 () Bool)

(assert (=> b!106716 (=> res!53018 e!69429)))

(assert (=> b!106716 (= res!53018 (not e!69434))))

(declare-fun res!53013 () Bool)

(assert (=> b!106716 (=> (not res!53013) (not e!69434))))

(assert (=> b!106716 (= res!53013 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106717 () Bool)

(declare-fun e!69432 () Bool)

(assert (=> b!106717 (= e!69429 e!69432)))

(declare-fun res!53011 () Bool)

(assert (=> b!106717 (=> (not res!53011) (not e!69432))))

(assert (=> b!106717 (= res!53011 (contains!829 lt!54698 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106717 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106718 () Bool)

(assert (=> b!106718 (= e!69436 call!11281)))

(declare-fun bm!11278 () Bool)

(assert (=> bm!11278 (= call!11280 (contains!829 lt!54698 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!29403 () Bool)

(assert (=> d!29403 e!69439))

(declare-fun res!53017 () Bool)

(assert (=> d!29403 (=> (not res!53017) (not e!69439))))

(assert (=> d!29403 (= res!53017 (or (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))))

(declare-fun lt!54689 () ListLongMap!1585)

(assert (=> d!29403 (= lt!54698 lt!54689)))

(declare-fun lt!54701 () Unit!3250)

(assert (=> d!29403 (= lt!54701 e!69433)))

(declare-fun c!18688 () Bool)

(assert (=> d!29403 (= c!18688 e!69430)))

(declare-fun res!53010 () Bool)

(assert (=> d!29403 (=> (not res!53010) (not e!69430))))

(assert (=> d!29403 (= res!53010 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun e!69427 () ListLongMap!1585)

(assert (=> d!29403 (= lt!54689 e!69427)))

(declare-fun c!18689 () Bool)

(assert (=> d!29403 (= c!18689 (and (not (= (bvand lt!53952 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!53952 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29403 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29403 (= (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53952 (zeroValue!2457 newMap!16) lt!53815 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54698)))

(declare-fun b!106708 () Bool)

(declare-fun Unit!3306 () Unit!3250)

(assert (=> b!106708 (= e!69433 Unit!3306)))

(declare-fun b!106719 () Bool)

(assert (=> b!106719 (= e!69427 e!69428)))

(declare-fun c!18685 () Bool)

(assert (=> b!106719 (= c!18685 (and (not (= (bvand lt!53952 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!53952 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106720 () Bool)

(assert (=> b!106720 (= e!69439 e!69435)))

(declare-fun c!18687 () Bool)

(assert (=> b!106720 (= c!18687 (not (= (bvand lt!53952 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11279 () Bool)

(assert (=> bm!11279 (= call!11284 (contains!829 lt!54698 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106721 () Bool)

(assert (=> b!106721 (= e!69428 call!11281)))

(declare-fun call!11279 () ListLongMap!1585)

(declare-fun bm!11280 () Bool)

(assert (=> bm!11280 (= call!11283 (+!146 (ite c!18689 call!11278 (ite c!18685 call!11282 call!11279)) (ite (or c!18689 c!18685) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815))))))

(declare-fun b!106722 () Bool)

(assert (=> b!106722 (= e!69432 (= (apply!98 lt!54698 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106722 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_values!2565 newMap!16))))))

(assert (=> b!106722 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106723 () Bool)

(assert (=> b!106723 (= e!69437 (not call!11280))))

(declare-fun b!106724 () Bool)

(assert (=> b!106724 (= e!69435 (not call!11284))))

(declare-fun b!106725 () Bool)

(assert (=> b!106725 (= e!69436 call!11279)))

(declare-fun bm!11281 () Bool)

(assert (=> bm!11281 (= call!11279 call!11282)))

(declare-fun b!106726 () Bool)

(assert (=> b!106726 (= e!69431 (= (apply!98 lt!54698 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun b!106727 () Bool)

(assert (=> b!106727 (= e!69427 (+!146 call!11283 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)))))

(assert (= (and d!29403 c!18689) b!106727))

(assert (= (and d!29403 (not c!18689)) b!106719))

(assert (= (and b!106719 c!18685) b!106721))

(assert (= (and b!106719 (not c!18685)) b!106715))

(assert (= (and b!106715 c!18686) b!106718))

(assert (= (and b!106715 (not c!18686)) b!106725))

(assert (= (or b!106718 b!106725) bm!11281))

(assert (= (or b!106721 bm!11281) bm!11276))

(assert (= (or b!106721 b!106718) bm!11277))

(assert (= (or b!106727 bm!11276) bm!11275))

(assert (= (or b!106727 bm!11277) bm!11280))

(assert (= (and d!29403 res!53010) b!106709))

(assert (= (and d!29403 c!18688) b!106710))

(assert (= (and d!29403 (not c!18688)) b!106708))

(assert (= (and d!29403 res!53017) b!106716))

(assert (= (and b!106716 res!53013) b!106711))

(assert (= (and b!106716 (not res!53018)) b!106717))

(assert (= (and b!106717 res!53011) b!106722))

(assert (= (and b!106716 res!53012) b!106714))

(assert (= (and b!106714 c!18690) b!106713))

(assert (= (and b!106714 (not c!18690)) b!106723))

(assert (= (and b!106713 res!53014) b!106726))

(assert (= (or b!106713 b!106723) bm!11278))

(assert (= (and b!106714 res!53015) b!106720))

(assert (= (and b!106720 c!18687) b!106707))

(assert (= (and b!106720 (not c!18687)) b!106724))

(assert (= (and b!106707 res!53016) b!106712))

(assert (= (or b!106707 b!106724) bm!11279))

(declare-fun b_lambda!4791 () Bool)

(assert (=> (not b_lambda!4791) (not b!106722)))

(assert (=> b!106722 t!5744))

(declare-fun b_and!6597 () Bool)

(assert (= b_and!6593 (and (=> t!5744 result!3475) b_and!6597)))

(assert (=> b!106722 t!5746))

(declare-fun b_and!6599 () Bool)

(assert (= b_and!6595 (and (=> t!5746 result!3477) b_and!6599)))

(assert (=> b!106722 m!117859))

(assert (=> b!106722 m!118101))

(assert (=> b!106722 m!118103))

(assert (=> b!106722 m!118105))

(assert (=> b!106722 m!117859))

(declare-fun m!119629 () Bool)

(assert (=> b!106722 m!119629))

(assert (=> b!106722 m!118101))

(assert (=> b!106722 m!118103))

(declare-fun m!119631 () Bool)

(assert (=> bm!11279 m!119631))

(declare-fun m!119633 () Bool)

(assert (=> bm!11280 m!119633))

(declare-fun m!119635 () Bool)

(assert (=> b!106727 m!119635))

(assert (=> d!29403 m!117867))

(assert (=> b!106709 m!117859))

(assert (=> b!106709 m!117859))

(assert (=> b!106709 m!117861))

(declare-fun m!119637 () Bool)

(assert (=> b!106712 m!119637))

(assert (=> b!106711 m!117859))

(assert (=> b!106711 m!117859))

(assert (=> b!106711 m!117861))

(declare-fun m!119639 () Bool)

(assert (=> b!106726 m!119639))

(declare-fun m!119641 () Bool)

(assert (=> bm!11278 m!119641))

(declare-fun m!119643 () Bool)

(assert (=> bm!11275 m!119643))

(assert (=> b!106717 m!117859))

(assert (=> b!106717 m!117859))

(declare-fun m!119645 () Bool)

(assert (=> b!106717 m!119645))

(declare-fun m!119647 () Bool)

(assert (=> b!106710 m!119647))

(declare-fun m!119649 () Bool)

(assert (=> b!106710 m!119649))

(assert (=> b!106710 m!119643))

(assert (=> b!106710 m!117859))

(declare-fun m!119651 () Bool)

(assert (=> b!106710 m!119651))

(declare-fun m!119653 () Bool)

(assert (=> b!106710 m!119653))

(declare-fun m!119655 () Bool)

(assert (=> b!106710 m!119655))

(declare-fun m!119657 () Bool)

(assert (=> b!106710 m!119657))

(declare-fun m!119659 () Bool)

(assert (=> b!106710 m!119659))

(declare-fun m!119661 () Bool)

(assert (=> b!106710 m!119661))

(declare-fun m!119663 () Bool)

(assert (=> b!106710 m!119663))

(assert (=> b!106710 m!119657))

(declare-fun m!119665 () Bool)

(assert (=> b!106710 m!119665))

(declare-fun m!119667 () Bool)

(assert (=> b!106710 m!119667))

(declare-fun m!119669 () Bool)

(assert (=> b!106710 m!119669))

(assert (=> b!106710 m!119665))

(declare-fun m!119671 () Bool)

(assert (=> b!106710 m!119671))

(assert (=> b!106710 m!119661))

(declare-fun m!119673 () Bool)

(assert (=> b!106710 m!119673))

(assert (=> b!106710 m!119651))

(declare-fun m!119675 () Bool)

(assert (=> b!106710 m!119675))

(assert (=> d!28865 d!29403))

(declare-fun d!29405 () Bool)

(assert (=> d!29405 (= (+!146 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53952 (zeroValue!2457 newMap!16) lt!53815 #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(assert (=> d!29405 true))

(declare-fun _$8!94 () Unit!3250)

(assert (=> d!29405 (= (choose!662 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!53952 (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) lt!53815 (defaultEntry!2582 newMap!16)) _$8!94)))

(declare-fun bs!4391 () Bool)

(assert (= bs!4391 d!29405))

(assert (=> bs!4391 m!117685))

(assert (=> bs!4391 m!117685))

(assert (=> bs!4391 m!117969))

(assert (=> bs!4391 m!117967))

(assert (=> d!28865 d!29405))

(declare-fun d!29407 () Bool)

(declare-fun e!69440 () Bool)

(assert (=> d!29407 e!69440))

(declare-fun res!53020 () Bool)

(assert (=> d!29407 (=> (not res!53020) (not e!69440))))

(declare-fun lt!54710 () ListLongMap!1585)

(assert (=> d!29407 (= res!53020 (contains!829 lt!54710 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815))))))

(declare-fun lt!54709 () List!1642)

(assert (=> d!29407 (= lt!54710 (ListLongMap!1586 lt!54709))))

(declare-fun lt!54711 () Unit!3250)

(declare-fun lt!54708 () Unit!3250)

(assert (=> d!29407 (= lt!54711 lt!54708)))

(assert (=> d!29407 (= (getValueByKey!155 lt!54709 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815))))))

(assert (=> d!29407 (= lt!54708 (lemmaContainsTupThenGetReturnValue!73 lt!54709 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815))))))

(assert (=> d!29407 (= lt!54709 (insertStrictlySorted!75 (toList!808 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815))))))

(assert (=> d!29407 (= (+!146 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) lt!54710)))

(declare-fun b!106728 () Bool)

(declare-fun res!53019 () Bool)

(assert (=> b!106728 (=> (not res!53019) (not e!69440))))

(assert (=> b!106728 (= res!53019 (= (getValueByKey!155 (toList!808 lt!54710) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)))))))

(declare-fun b!106729 () Bool)

(assert (=> b!106729 (= e!69440 (contains!830 (toList!808 lt!54710) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)))))

(assert (= (and d!29407 res!53020) b!106728))

(assert (= (and b!106728 res!53019) b!106729))

(declare-fun m!119677 () Bool)

(assert (=> d!29407 m!119677))

(declare-fun m!119679 () Bool)

(assert (=> d!29407 m!119679))

(declare-fun m!119681 () Bool)

(assert (=> d!29407 m!119681))

(declare-fun m!119683 () Bool)

(assert (=> d!29407 m!119683))

(declare-fun m!119685 () Bool)

(assert (=> b!106728 m!119685))

(declare-fun m!119687 () Bool)

(assert (=> b!106729 m!119687))

(assert (=> d!28865 d!29407))

(assert (=> b!105955 d!29061))

(declare-fun d!29409 () Bool)

(declare-fun res!53021 () Bool)

(declare-fun e!69441 () Bool)

(assert (=> d!29409 (=> res!53021 e!69441)))

(assert (=> d!29409 (= res!53021 (and ((_ is Cons!1638) (toList!808 lt!54011)) (= (_1!1215 (h!2235 (toList!808 lt!54011))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29409 (= (containsKey!159 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69441)))

(declare-fun b!106730 () Bool)

(declare-fun e!69442 () Bool)

(assert (=> b!106730 (= e!69441 e!69442)))

(declare-fun res!53022 () Bool)

(assert (=> b!106730 (=> (not res!53022) (not e!69442))))

(assert (=> b!106730 (= res!53022 (and (or (not ((_ is Cons!1638) (toList!808 lt!54011))) (bvsle (_1!1215 (h!2235 (toList!808 lt!54011))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1638) (toList!808 lt!54011)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54011))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!106731 () Bool)

(assert (=> b!106731 (= e!69442 (containsKey!159 (t!5737 (toList!808 lt!54011)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29409 (not res!53021)) b!106730))

(assert (= (and b!106730 res!53022) b!106731))

(assert (=> b!106731 m!117687))

(declare-fun m!119689 () Bool)

(assert (=> b!106731 m!119689))

(assert (=> d!29013 d!29409))

(declare-fun d!29411 () Bool)

(declare-fun e!69443 () Bool)

(assert (=> d!29411 e!69443))

(declare-fun res!53024 () Bool)

(assert (=> d!29411 (=> (not res!53024) (not e!69443))))

(declare-fun lt!54714 () ListLongMap!1585)

(assert (=> d!29411 (= res!53024 (contains!829 lt!54714 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun lt!54713 () List!1642)

(assert (=> d!29411 (= lt!54714 (ListLongMap!1586 lt!54713))))

(declare-fun lt!54715 () Unit!3250)

(declare-fun lt!54712 () Unit!3250)

(assert (=> d!29411 (= lt!54715 lt!54712)))

(assert (=> d!29411 (= (getValueByKey!155 lt!54713 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29411 (= lt!54712 (lemmaContainsTupThenGetReturnValue!73 lt!54713 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29411 (= lt!54713 (insertStrictlySorted!75 (toList!808 call!11209) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29411 (= (+!146 call!11209 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) lt!54714)))

(declare-fun b!106732 () Bool)

(declare-fun res!53023 () Bool)

(assert (=> b!106732 (=> (not res!53023) (not e!69443))))

(assert (=> b!106732 (= res!53023 (= (getValueByKey!155 (toList!808 lt!54714) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(declare-fun b!106733 () Bool)

(assert (=> b!106733 (= e!69443 (contains!830 (toList!808 lt!54714) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!29411 res!53024) b!106732))

(assert (= (and b!106732 res!53023) b!106733))

(declare-fun m!119691 () Bool)

(assert (=> d!29411 m!119691))

(declare-fun m!119693 () Bool)

(assert (=> d!29411 m!119693))

(declare-fun m!119695 () Bool)

(assert (=> d!29411 m!119695))

(declare-fun m!119697 () Bool)

(assert (=> d!29411 m!119697))

(declare-fun m!119699 () Bool)

(assert (=> b!106732 m!119699))

(declare-fun m!119701 () Bool)

(assert (=> b!106733 m!119701))

(assert (=> b!105992 d!29411))

(declare-fun d!29413 () Bool)

(declare-fun e!69445 () Bool)

(assert (=> d!29413 e!69445))

(declare-fun res!53025 () Bool)

(assert (=> d!29413 (=> (not res!53025) (not e!69445))))

(declare-fun lt!54716 () List!1642)

(assert (=> d!29413 (= res!53025 (isStrictlySorted!304 lt!54716))))

(declare-fun e!69444 () List!1642)

(assert (=> d!29413 (= lt!54716 e!69444)))

(declare-fun c!18691 () Bool)

(assert (=> d!29413 (= c!18691 (and ((_ is Cons!1638) (t!5737 (toList!808 (+!146 lt!53824 lt!53818)))) (bvslt (_1!1215 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53818))))) (_1!1215 lt!53817))))))

(assert (=> d!29413 (isStrictlySorted!304 (t!5737 (toList!808 (+!146 lt!53824 lt!53818))))))

(assert (=> d!29413 (= (insertStrictlySorted!75 (t!5737 (toList!808 (+!146 lt!53824 lt!53818))) (_1!1215 lt!53817) (_2!1215 lt!53817)) lt!54716)))

(declare-fun b!106734 () Bool)

(declare-fun e!69447 () List!1642)

(declare-fun call!11287 () List!1642)

(assert (=> b!106734 (= e!69447 call!11287)))

(declare-fun c!18692 () Bool)

(declare-fun b!106735 () Bool)

(assert (=> b!106735 (= c!18692 (and ((_ is Cons!1638) (t!5737 (toList!808 (+!146 lt!53824 lt!53818)))) (bvsgt (_1!1215 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53818))))) (_1!1215 lt!53817))))))

(declare-fun e!69446 () List!1642)

(assert (=> b!106735 (= e!69446 e!69447)))

(declare-fun b!106736 () Bool)

(declare-fun call!11285 () List!1642)

(assert (=> b!106736 (= e!69446 call!11285)))

(declare-fun b!106737 () Bool)

(declare-fun call!11286 () List!1642)

(assert (=> b!106737 (= e!69444 call!11286)))

(declare-fun b!106738 () Bool)

(declare-fun res!53026 () Bool)

(assert (=> b!106738 (=> (not res!53026) (not e!69445))))

(assert (=> b!106738 (= res!53026 (containsKey!159 lt!54716 (_1!1215 lt!53817)))))

(declare-fun bm!11282 () Bool)

(assert (=> bm!11282 (= call!11285 call!11286)))

(declare-fun b!106739 () Bool)

(declare-fun c!18693 () Bool)

(declare-fun e!69448 () List!1642)

(assert (=> b!106739 (= e!69448 (ite c!18693 (t!5737 (t!5737 (toList!808 (+!146 lt!53824 lt!53818)))) (ite c!18692 (Cons!1638 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53818)))) (t!5737 (t!5737 (toList!808 (+!146 lt!53824 lt!53818))))) Nil!1639)))))

(declare-fun bm!11283 () Bool)

(assert (=> bm!11283 (= call!11286 ($colon$colon!80 e!69448 (ite c!18691 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53818)))) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817)))))))

(declare-fun c!18694 () Bool)

(assert (=> bm!11283 (= c!18694 c!18691)))

(declare-fun b!106740 () Bool)

(assert (=> b!106740 (= e!69448 (insertStrictlySorted!75 (t!5737 (t!5737 (toList!808 (+!146 lt!53824 lt!53818)))) (_1!1215 lt!53817) (_2!1215 lt!53817)))))

(declare-fun b!106741 () Bool)

(assert (=> b!106741 (= e!69445 (contains!830 lt!54716 (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun bm!11284 () Bool)

(assert (=> bm!11284 (= call!11287 call!11285)))

(declare-fun b!106742 () Bool)

(assert (=> b!106742 (= e!69447 call!11287)))

(declare-fun b!106743 () Bool)

(assert (=> b!106743 (= e!69444 e!69446)))

(assert (=> b!106743 (= c!18693 (and ((_ is Cons!1638) (t!5737 (toList!808 (+!146 lt!53824 lt!53818)))) (= (_1!1215 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53818))))) (_1!1215 lt!53817))))))

(assert (= (and d!29413 c!18691) b!106737))

(assert (= (and d!29413 (not c!18691)) b!106743))

(assert (= (and b!106743 c!18693) b!106736))

(assert (= (and b!106743 (not c!18693)) b!106735))

(assert (= (and b!106735 c!18692) b!106742))

(assert (= (and b!106735 (not c!18692)) b!106734))

(assert (= (or b!106742 b!106734) bm!11284))

(assert (= (or b!106736 bm!11284) bm!11282))

(assert (= (or b!106737 bm!11282) bm!11283))

(assert (= (and bm!11283 c!18694) b!106740))

(assert (= (and bm!11283 (not c!18694)) b!106739))

(assert (= (and d!29413 res!53025) b!106738))

(assert (= (and b!106738 res!53026) b!106741))

(declare-fun m!119703 () Bool)

(assert (=> b!106741 m!119703))

(declare-fun m!119705 () Bool)

(assert (=> bm!11283 m!119705))

(declare-fun m!119707 () Bool)

(assert (=> b!106738 m!119707))

(declare-fun m!119709 () Bool)

(assert (=> b!106740 m!119709))

(declare-fun m!119711 () Bool)

(assert (=> d!29413 m!119711))

(declare-fun m!119713 () Bool)

(assert (=> d!29413 m!119713))

(assert (=> b!105906 d!29413))

(declare-fun d!29415 () Bool)

(declare-fun lt!54717 () Bool)

(assert (=> d!29415 (= lt!54717 (select (content!109 Nil!1640) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!69450 () Bool)

(assert (=> d!29415 (= lt!54717 e!69450)))

(declare-fun res!53028 () Bool)

(assert (=> d!29415 (=> (not res!53028) (not e!69450))))

(assert (=> d!29415 (= res!53028 ((_ is Cons!1639) Nil!1640))))

(assert (=> d!29415 (= (contains!831 Nil!1640 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) lt!54717)))

(declare-fun b!106744 () Bool)

(declare-fun e!69449 () Bool)

(assert (=> b!106744 (= e!69450 e!69449)))

(declare-fun res!53027 () Bool)

(assert (=> b!106744 (=> res!53027 e!69449)))

(assert (=> b!106744 (= res!53027 (= (h!2236 Nil!1640) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106745 () Bool)

(assert (=> b!106745 (= e!69449 (contains!831 (t!5738 Nil!1640) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!29415 res!53028) b!106744))

(assert (= (and b!106744 (not res!53027)) b!106745))

(assert (=> d!29415 m!118559))

(assert (=> d!29415 m!117859))

(declare-fun m!119715 () Bool)

(assert (=> d!29415 m!119715))

(assert (=> b!106745 m!117859))

(declare-fun m!119717 () Bool)

(assert (=> b!106745 m!119717))

(assert (=> b!105781 d!29415))

(declare-fun d!29417 () Bool)

(assert (=> d!29417 (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!54718 () Unit!3250)

(assert (=> d!29417 (= lt!54718 (choose!667 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!69451 () Bool)

(assert (=> d!29417 e!69451))

(declare-fun res!53029 () Bool)

(assert (=> d!29417 (=> (not res!53029) (not e!69451))))

(assert (=> d!29417 (= res!53029 (isStrictlySorted!304 (toList!808 lt!54011)))))

(assert (=> d!29417 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54718)))

(declare-fun b!106746 () Bool)

(assert (=> b!106746 (= e!69451 (containsKey!159 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29417 res!53029) b!106746))

(assert (=> d!29417 m!117687))

(assert (=> d!29417 m!118555))

(assert (=> d!29417 m!118555))

(assert (=> d!29417 m!118611))

(assert (=> d!29417 m!117687))

(declare-fun m!119719 () Bool)

(assert (=> d!29417 m!119719))

(declare-fun m!119721 () Bool)

(assert (=> d!29417 m!119721))

(assert (=> b!106746 m!117687))

(assert (=> b!106746 m!118607))

(assert (=> b!106140 d!29417))

(assert (=> b!106140 d!29265))

(assert (=> b!106140 d!29267))

(declare-fun d!29419 () Bool)

(declare-fun e!69453 () Bool)

(assert (=> d!29419 e!69453))

(declare-fun res!53030 () Bool)

(assert (=> d!29419 (=> (not res!53030) (not e!69453))))

(declare-fun lt!54719 () List!1642)

(assert (=> d!29419 (= res!53030 (isStrictlySorted!304 lt!54719))))

(declare-fun e!69452 () List!1642)

(assert (=> d!29419 (= lt!54719 e!69452)))

(declare-fun c!18695 () Bool)

(assert (=> d!29419 (= c!18695 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!53824))) (bvslt (_1!1215 (h!2235 (t!5737 (toList!808 lt!53824)))) (_1!1215 lt!53817))))))

(assert (=> d!29419 (isStrictlySorted!304 (t!5737 (toList!808 lt!53824)))))

(assert (=> d!29419 (= (insertStrictlySorted!75 (t!5737 (toList!808 lt!53824)) (_1!1215 lt!53817) (_2!1215 lt!53817)) lt!54719)))

(declare-fun b!106747 () Bool)

(declare-fun e!69455 () List!1642)

(declare-fun call!11290 () List!1642)

(assert (=> b!106747 (= e!69455 call!11290)))

(declare-fun b!106748 () Bool)

(declare-fun c!18696 () Bool)

(assert (=> b!106748 (= c!18696 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!53824))) (bvsgt (_1!1215 (h!2235 (t!5737 (toList!808 lt!53824)))) (_1!1215 lt!53817))))))

(declare-fun e!69454 () List!1642)

(assert (=> b!106748 (= e!69454 e!69455)))

(declare-fun b!106749 () Bool)

(declare-fun call!11288 () List!1642)

(assert (=> b!106749 (= e!69454 call!11288)))

(declare-fun b!106750 () Bool)

(declare-fun call!11289 () List!1642)

(assert (=> b!106750 (= e!69452 call!11289)))

(declare-fun b!106751 () Bool)

(declare-fun res!53031 () Bool)

(assert (=> b!106751 (=> (not res!53031) (not e!69453))))

(assert (=> b!106751 (= res!53031 (containsKey!159 lt!54719 (_1!1215 lt!53817)))))

(declare-fun bm!11285 () Bool)

(assert (=> bm!11285 (= call!11288 call!11289)))

(declare-fun c!18697 () Bool)

(declare-fun e!69456 () List!1642)

(declare-fun b!106752 () Bool)

(assert (=> b!106752 (= e!69456 (ite c!18697 (t!5737 (t!5737 (toList!808 lt!53824))) (ite c!18696 (Cons!1638 (h!2235 (t!5737 (toList!808 lt!53824))) (t!5737 (t!5737 (toList!808 lt!53824)))) Nil!1639)))))

(declare-fun bm!11286 () Bool)

(assert (=> bm!11286 (= call!11289 ($colon$colon!80 e!69456 (ite c!18695 (h!2235 (t!5737 (toList!808 lt!53824))) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817)))))))

(declare-fun c!18698 () Bool)

(assert (=> bm!11286 (= c!18698 c!18695)))

(declare-fun b!106753 () Bool)

(assert (=> b!106753 (= e!69456 (insertStrictlySorted!75 (t!5737 (t!5737 (toList!808 lt!53824))) (_1!1215 lt!53817) (_2!1215 lt!53817)))))

(declare-fun b!106754 () Bool)

(assert (=> b!106754 (= e!69453 (contains!830 lt!54719 (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun bm!11287 () Bool)

(assert (=> bm!11287 (= call!11290 call!11288)))

(declare-fun b!106755 () Bool)

(assert (=> b!106755 (= e!69455 call!11290)))

(declare-fun b!106756 () Bool)

(assert (=> b!106756 (= e!69452 e!69454)))

(assert (=> b!106756 (= c!18697 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!53824))) (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!53824)))) (_1!1215 lt!53817))))))

(assert (= (and d!29419 c!18695) b!106750))

(assert (= (and d!29419 (not c!18695)) b!106756))

(assert (= (and b!106756 c!18697) b!106749))

(assert (= (and b!106756 (not c!18697)) b!106748))

(assert (= (and b!106748 c!18696) b!106755))

(assert (= (and b!106748 (not c!18696)) b!106747))

(assert (= (or b!106755 b!106747) bm!11287))

(assert (= (or b!106749 bm!11287) bm!11285))

(assert (= (or b!106750 bm!11285) bm!11286))

(assert (= (and bm!11286 c!18698) b!106753))

(assert (= (and bm!11286 (not c!18698)) b!106752))

(assert (= (and d!29419 res!53030) b!106751))

(assert (= (and b!106751 res!53031) b!106754))

(declare-fun m!119723 () Bool)

(assert (=> b!106754 m!119723))

(declare-fun m!119725 () Bool)

(assert (=> bm!11286 m!119725))

(declare-fun m!119727 () Bool)

(assert (=> b!106751 m!119727))

(declare-fun m!119729 () Bool)

(assert (=> b!106753 m!119729))

(declare-fun m!119731 () Bool)

(assert (=> d!29419 m!119731))

(assert (=> d!29419 m!119517))

(assert (=> b!106134 d!29419))

(declare-fun b!106758 () Bool)

(declare-fun e!69457 () Option!161)

(declare-fun e!69458 () Option!161)

(assert (=> b!106758 (= e!69457 e!69458)))

(declare-fun c!18700 () Bool)

(assert (=> b!106758 (= c!18700 (and ((_ is Cons!1638) (t!5737 lt!54062)) (not (= (_1!1215 (h!2235 (t!5737 lt!54062))) (_1!1215 lt!53818)))))))

(declare-fun d!29421 () Bool)

(declare-fun c!18699 () Bool)

(assert (=> d!29421 (= c!18699 (and ((_ is Cons!1638) (t!5737 lt!54062)) (= (_1!1215 (h!2235 (t!5737 lt!54062))) (_1!1215 lt!53818))))))

(assert (=> d!29421 (= (getValueByKey!155 (t!5737 lt!54062) (_1!1215 lt!53818)) e!69457)))

(declare-fun b!106759 () Bool)

(assert (=> b!106759 (= e!69458 (getValueByKey!155 (t!5737 (t!5737 lt!54062)) (_1!1215 lt!53818)))))

(declare-fun b!106757 () Bool)

(assert (=> b!106757 (= e!69457 (Some!160 (_2!1215 (h!2235 (t!5737 lt!54062)))))))

(declare-fun b!106760 () Bool)

(assert (=> b!106760 (= e!69458 None!159)))

(assert (= (and d!29421 c!18699) b!106757))

(assert (= (and d!29421 (not c!18699)) b!106758))

(assert (= (and b!106758 c!18700) b!106759))

(assert (= (and b!106758 (not c!18700)) b!106760))

(declare-fun m!119733 () Bool)

(assert (=> b!106759 m!119733))

(assert (=> b!106045 d!29421))

(assert (=> d!28939 d!29203))

(declare-fun d!29423 () Bool)

(declare-fun e!69460 () Bool)

(assert (=> d!29423 e!69460))

(declare-fun res!53032 () Bool)

(assert (=> d!29423 (=> res!53032 e!69460)))

(declare-fun lt!54720 () Bool)

(assert (=> d!29423 (= res!53032 (not lt!54720))))

(declare-fun lt!54723 () Bool)

(assert (=> d!29423 (= lt!54720 lt!54723)))

(declare-fun lt!54722 () Unit!3250)

(declare-fun e!69459 () Unit!3250)

(assert (=> d!29423 (= lt!54722 e!69459)))

(declare-fun c!18701 () Bool)

(assert (=> d!29423 (= c!18701 lt!54723)))

(assert (=> d!29423 (= lt!54723 (containsKey!159 (toList!808 lt!54180) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29423 (= (contains!829 lt!54180 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) lt!54720)))

(declare-fun b!106761 () Bool)

(declare-fun lt!54721 () Unit!3250)

(assert (=> b!106761 (= e!69459 lt!54721)))

(assert (=> b!106761 (= lt!54721 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54180) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106761 (isDefined!109 (getValueByKey!155 (toList!808 lt!54180) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106762 () Bool)

(declare-fun Unit!3307 () Unit!3250)

(assert (=> b!106762 (= e!69459 Unit!3307)))

(declare-fun b!106763 () Bool)

(assert (=> b!106763 (= e!69460 (isDefined!109 (getValueByKey!155 (toList!808 lt!54180) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29423 c!18701) b!106761))

(assert (= (and d!29423 (not c!18701)) b!106762))

(assert (= (and d!29423 (not res!53032)) b!106763))

(assert (=> d!29423 m!117859))

(declare-fun m!119735 () Bool)

(assert (=> d!29423 m!119735))

(assert (=> b!106761 m!117859))

(declare-fun m!119737 () Bool)

(assert (=> b!106761 m!119737))

(assert (=> b!106761 m!117859))

(assert (=> b!106761 m!119615))

(assert (=> b!106761 m!119615))

(declare-fun m!119739 () Bool)

(assert (=> b!106761 m!119739))

(assert (=> b!106763 m!117859))

(assert (=> b!106763 m!119615))

(assert (=> b!106763 m!119615))

(assert (=> b!106763 m!119739))

(assert (=> b!105936 d!29423))

(declare-fun d!29425 () Bool)

(assert (=> d!29425 (= (apply!98 lt!54262 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1342 (getValueByKey!155 (toList!808 lt!54262) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4392 () Bool)

(assert (= bs!4392 d!29425))

(declare-fun m!119741 () Bool)

(assert (=> bs!4392 m!119741))

(assert (=> bs!4392 m!119741))

(declare-fun m!119743 () Bool)

(assert (=> bs!4392 m!119743))

(assert (=> b!106020 d!29425))

(declare-fun d!29427 () Bool)

(declare-fun lt!54724 () Bool)

(assert (=> d!29427 (= lt!54724 (select (content!108 (toList!808 lt!54137)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(declare-fun e!69461 () Bool)

(assert (=> d!29427 (= lt!54724 e!69461)))

(declare-fun res!53034 () Bool)

(assert (=> d!29427 (=> (not res!53034) (not e!69461))))

(assert (=> d!29427 (= res!53034 ((_ is Cons!1638) (toList!808 lt!54137)))))

(assert (=> d!29427 (= (contains!830 (toList!808 lt!54137) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) lt!54724)))

(declare-fun b!106764 () Bool)

(declare-fun e!69462 () Bool)

(assert (=> b!106764 (= e!69461 e!69462)))

(declare-fun res!53033 () Bool)

(assert (=> b!106764 (=> res!53033 e!69462)))

(assert (=> b!106764 (= res!53033 (= (h!2235 (toList!808 lt!54137)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(declare-fun b!106765 () Bool)

(assert (=> b!106765 (= e!69462 (contains!830 (t!5737 (toList!808 lt!54137)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(assert (= (and d!29427 res!53034) b!106764))

(assert (= (and b!106764 (not res!53033)) b!106765))

(declare-fun m!119745 () Bool)

(assert (=> d!29427 m!119745))

(declare-fun m!119747 () Bool)

(assert (=> d!29427 m!119747))

(declare-fun m!119749 () Bool)

(assert (=> b!106765 m!119749))

(assert (=> b!105853 d!29427))

(assert (=> bm!11174 d!29217))

(declare-fun d!29429 () Bool)

(assert (=> d!29429 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016))))

(declare-fun lt!54725 () Unit!3250)

(assert (=> d!29429 (= lt!54725 (choose!667 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016))))

(declare-fun e!69463 () Bool)

(assert (=> d!29429 e!69463))

(declare-fun res!53035 () Bool)

(assert (=> d!29429 (=> (not res!53035) (not e!69463))))

(assert (=> d!29429 (= res!53035 (isStrictlySorted!304 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29429 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016) lt!54725)))

(declare-fun b!106766 () Bool)

(assert (=> b!106766 (= e!69463 (containsKey!159 (toList!808 (+!146 lt!54017 (tuple2!2411 lt!54013 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54016))))

(assert (= (and d!29429 res!53035) b!106766))

(assert (=> d!29429 m!118347))

(assert (=> d!29429 m!118347))

(assert (=> d!29429 m!118349))

(declare-fun m!119751 () Bool)

(assert (=> d!29429 m!119751))

(declare-fun m!119753 () Bool)

(assert (=> d!29429 m!119753))

(assert (=> b!106766 m!118343))

(assert (=> b!106022 d!29429))

(assert (=> b!106022 d!29221))

(assert (=> b!106022 d!29223))

(declare-fun d!29431 () Bool)

(assert (=> d!29431 (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54726 () Unit!3250)

(assert (=> d!29431 (= lt!54726 (choose!667 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69464 () Bool)

(assert (=> d!29431 e!69464))

(declare-fun res!53036 () Bool)

(assert (=> d!29431 (=> (not res!53036) (not e!69464))))

(assert (=> d!29431 (= res!53036 (isStrictlySorted!304 (toList!808 lt!54058)))))

(assert (=> d!29431 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000) lt!54726)))

(declare-fun b!106767 () Bool)

(assert (=> b!106767 (= e!69464 (containsKey!159 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29431 res!53036) b!106767))

(assert (=> d!29431 m!117999))

(assert (=> d!29431 m!117999))

(assert (=> d!29431 m!118001))

(declare-fun m!119755 () Bool)

(assert (=> d!29431 m!119755))

(assert (=> d!29431 m!118721))

(assert (=> b!106767 m!117995))

(assert (=> b!105849 d!29431))

(assert (=> b!105849 d!29123))

(assert (=> b!105849 d!29125))

(declare-fun d!29433 () Bool)

(declare-fun lt!54727 () Bool)

(assert (=> d!29433 (= lt!54727 (select (content!108 (t!5737 (toList!808 lt!54031))) lt!53818))))

(declare-fun e!69465 () Bool)

(assert (=> d!29433 (= lt!54727 e!69465)))

(declare-fun res!53038 () Bool)

(assert (=> d!29433 (=> (not res!53038) (not e!69465))))

(assert (=> d!29433 (= res!53038 ((_ is Cons!1638) (t!5737 (toList!808 lt!54031))))))

(assert (=> d!29433 (= (contains!830 (t!5737 (toList!808 lt!54031)) lt!53818) lt!54727)))

(declare-fun b!106768 () Bool)

(declare-fun e!69466 () Bool)

(assert (=> b!106768 (= e!69465 e!69466)))

(declare-fun res!53037 () Bool)

(assert (=> b!106768 (=> res!53037 e!69466)))

(assert (=> b!106768 (= res!53037 (= (h!2235 (t!5737 (toList!808 lt!54031))) lt!53818))))

(declare-fun b!106769 () Bool)

(assert (=> b!106769 (= e!69466 (contains!830 (t!5737 (t!5737 (toList!808 lt!54031))) lt!53818))))

(assert (= (and d!29433 res!53038) b!106768))

(assert (= (and b!106768 (not res!53037)) b!106769))

(assert (=> d!29433 m!119513))

(declare-fun m!119757 () Bool)

(assert (=> d!29433 m!119757))

(declare-fun m!119759 () Bool)

(assert (=> b!106769 m!119759))

(assert (=> b!106139 d!29433))

(declare-fun d!29435 () Bool)

(assert (=> d!29435 (isDefined!109 (getValueByKey!155 (toList!808 lt!54063) (_1!1215 lt!53818)))))

(declare-fun lt!54728 () Unit!3250)

(assert (=> d!29435 (= lt!54728 (choose!667 (toList!808 lt!54063) (_1!1215 lt!53818)))))

(declare-fun e!69467 () Bool)

(assert (=> d!29435 e!69467))

(declare-fun res!53039 () Bool)

(assert (=> d!29435 (=> (not res!53039) (not e!69467))))

(assert (=> d!29435 (= res!53039 (isStrictlySorted!304 (toList!808 lt!54063)))))

(assert (=> d!29435 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54063) (_1!1215 lt!53818)) lt!54728)))

(declare-fun b!106770 () Bool)

(assert (=> b!106770 (= e!69467 (containsKey!159 (toList!808 lt!54063) (_1!1215 lt!53818)))))

(assert (= (and d!29435 res!53039) b!106770))

(assert (=> d!29435 m!117803))

(assert (=> d!29435 m!117803))

(assert (=> d!29435 m!118435))

(declare-fun m!119761 () Bool)

(assert (=> d!29435 m!119761))

(declare-fun m!119763 () Bool)

(assert (=> d!29435 m!119763))

(assert (=> b!106770 m!118431))

(assert (=> b!106040 d!29435))

(assert (=> b!106040 d!29129))

(assert (=> b!106040 d!28875))

(declare-fun d!29437 () Bool)

(declare-fun e!69469 () Bool)

(assert (=> d!29437 e!69469))

(declare-fun res!53040 () Bool)

(assert (=> d!29437 (=> res!53040 e!69469)))

(declare-fun lt!54729 () Bool)

(assert (=> d!29437 (= res!53040 (not lt!54729))))

(declare-fun lt!54732 () Bool)

(assert (=> d!29437 (= lt!54729 lt!54732)))

(declare-fun lt!54731 () Unit!3250)

(declare-fun e!69468 () Unit!3250)

(assert (=> d!29437 (= lt!54731 e!69468)))

(declare-fun c!18702 () Bool)

(assert (=> d!29437 (= c!18702 lt!54732)))

(assert (=> d!29437 (= lt!54732 (containsKey!159 (toList!808 lt!54281) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!29437 (= (contains!829 lt!54281 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54729)))

(declare-fun b!106771 () Bool)

(declare-fun lt!54730 () Unit!3250)

(assert (=> b!106771 (= e!69468 lt!54730)))

(assert (=> b!106771 (= lt!54730 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54281) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> b!106771 (isDefined!109 (getValueByKey!155 (toList!808 lt!54281) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106772 () Bool)

(declare-fun Unit!3308 () Unit!3250)

(assert (=> b!106772 (= e!69468 Unit!3308)))

(declare-fun b!106773 () Bool)

(assert (=> b!106773 (= e!69469 (isDefined!109 (getValueByKey!155 (toList!808 lt!54281) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29437 c!18702) b!106771))

(assert (= (and d!29437 (not c!18702)) b!106772))

(assert (= (and d!29437 (not res!53040)) b!106773))

(declare-fun m!119765 () Bool)

(assert (=> d!29437 m!119765))

(declare-fun m!119767 () Bool)

(assert (=> b!106771 m!119767))

(assert (=> b!106771 m!118371))

(assert (=> b!106771 m!118371))

(declare-fun m!119769 () Bool)

(assert (=> b!106771 m!119769))

(assert (=> b!106773 m!118371))

(assert (=> b!106773 m!118371))

(assert (=> b!106773 m!119769))

(assert (=> d!28953 d!29437))

(declare-fun b!106775 () Bool)

(declare-fun e!69470 () Option!161)

(declare-fun e!69471 () Option!161)

(assert (=> b!106775 (= e!69470 e!69471)))

(declare-fun c!18704 () Bool)

(assert (=> b!106775 (= c!18704 (and ((_ is Cons!1638) lt!54280) (not (= (_1!1215 (h!2235 lt!54280)) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun c!18703 () Bool)

(declare-fun d!29439 () Bool)

(assert (=> d!29439 (= c!18703 (and ((_ is Cons!1638) lt!54280) (= (_1!1215 (h!2235 lt!54280)) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29439 (= (getValueByKey!155 lt!54280 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69470)))

(declare-fun b!106776 () Bool)

(assert (=> b!106776 (= e!69471 (getValueByKey!155 (t!5737 lt!54280) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106774 () Bool)

(assert (=> b!106774 (= e!69470 (Some!160 (_2!1215 (h!2235 lt!54280))))))

(declare-fun b!106777 () Bool)

(assert (=> b!106777 (= e!69471 None!159)))

(assert (= (and d!29439 c!18703) b!106774))

(assert (= (and d!29439 (not c!18703)) b!106775))

(assert (= (and b!106775 c!18704) b!106776))

(assert (= (and b!106775 (not c!18704)) b!106777))

(declare-fun m!119771 () Bool)

(assert (=> b!106776 m!119771))

(assert (=> d!28953 d!29439))

(declare-fun d!29441 () Bool)

(assert (=> d!29441 (= (getValueByKey!155 lt!54280 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54733 () Unit!3250)

(assert (=> d!29441 (= lt!54733 (choose!666 lt!54280 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun e!69472 () Bool)

(assert (=> d!29441 e!69472))

(declare-fun res!53041 () Bool)

(assert (=> d!29441 (=> (not res!53041) (not e!69472))))

(assert (=> d!29441 (= res!53041 (isStrictlySorted!304 lt!54280))))

(assert (=> d!29441 (= (lemmaContainsTupThenGetReturnValue!73 lt!54280 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54733)))

(declare-fun b!106778 () Bool)

(declare-fun res!53042 () Bool)

(assert (=> b!106778 (=> (not res!53042) (not e!69472))))

(assert (=> b!106778 (= res!53042 (containsKey!159 lt!54280 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106779 () Bool)

(assert (=> b!106779 (= e!69472 (contains!830 lt!54280 (tuple2!2411 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29441 res!53041) b!106778))

(assert (= (and b!106778 res!53042) b!106779))

(assert (=> d!29441 m!118365))

(declare-fun m!119773 () Bool)

(assert (=> d!29441 m!119773))

(declare-fun m!119775 () Bool)

(assert (=> d!29441 m!119775))

(declare-fun m!119777 () Bool)

(assert (=> b!106778 m!119777))

(declare-fun m!119779 () Bool)

(assert (=> b!106779 m!119779))

(assert (=> d!28953 d!29441))

(declare-fun d!29443 () Bool)

(declare-fun e!69474 () Bool)

(assert (=> d!29443 e!69474))

(declare-fun res!53043 () Bool)

(assert (=> d!29443 (=> (not res!53043) (not e!69474))))

(declare-fun lt!54734 () List!1642)

(assert (=> d!29443 (= res!53043 (isStrictlySorted!304 lt!54734))))

(declare-fun e!69473 () List!1642)

(assert (=> d!29443 (= lt!54734 e!69473)))

(declare-fun c!18705 () Bool)

(assert (=> d!29443 (= c!18705 (and ((_ is Cons!1638) (toList!808 lt!54009)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54009))) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29443 (isStrictlySorted!304 (toList!808 lt!54009))))

(assert (=> d!29443 (= (insertStrictlySorted!75 (toList!808 lt!54009) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54734)))

(declare-fun b!106780 () Bool)

(declare-fun e!69476 () List!1642)

(declare-fun call!11293 () List!1642)

(assert (=> b!106780 (= e!69476 call!11293)))

(declare-fun c!18706 () Bool)

(declare-fun b!106781 () Bool)

(assert (=> b!106781 (= c!18706 (and ((_ is Cons!1638) (toList!808 lt!54009)) (bvsgt (_1!1215 (h!2235 (toList!808 lt!54009))) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun e!69475 () List!1642)

(assert (=> b!106781 (= e!69475 e!69476)))

(declare-fun b!106782 () Bool)

(declare-fun call!11291 () List!1642)

(assert (=> b!106782 (= e!69475 call!11291)))

(declare-fun b!106783 () Bool)

(declare-fun call!11292 () List!1642)

(assert (=> b!106783 (= e!69473 call!11292)))

(declare-fun b!106784 () Bool)

(declare-fun res!53044 () Bool)

(assert (=> b!106784 (=> (not res!53044) (not e!69474))))

(assert (=> b!106784 (= res!53044 (containsKey!159 lt!54734 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun bm!11288 () Bool)

(assert (=> bm!11288 (= call!11291 call!11292)))

(declare-fun b!106785 () Bool)

(declare-fun e!69477 () List!1642)

(declare-fun c!18707 () Bool)

(assert (=> b!106785 (= e!69477 (ite c!18707 (t!5737 (toList!808 lt!54009)) (ite c!18706 (Cons!1638 (h!2235 (toList!808 lt!54009)) (t!5737 (toList!808 lt!54009))) Nil!1639)))))

(declare-fun bm!11289 () Bool)

(assert (=> bm!11289 (= call!11292 ($colon$colon!80 e!69477 (ite c!18705 (h!2235 (toList!808 lt!54009)) (tuple2!2411 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun c!18708 () Bool)

(assert (=> bm!11289 (= c!18708 c!18705)))

(declare-fun b!106786 () Bool)

(assert (=> b!106786 (= e!69477 (insertStrictlySorted!75 (t!5737 (toList!808 lt!54009)) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106787 () Bool)

(assert (=> b!106787 (= e!69474 (contains!830 lt!54734 (tuple2!2411 (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun bm!11290 () Bool)

(assert (=> bm!11290 (= call!11293 call!11291)))

(declare-fun b!106788 () Bool)

(assert (=> b!106788 (= e!69476 call!11293)))

(declare-fun b!106789 () Bool)

(assert (=> b!106789 (= e!69473 e!69475)))

(assert (=> b!106789 (= c!18707 (and ((_ is Cons!1638) (toList!808 lt!54009)) (= (_1!1215 (h!2235 (toList!808 lt!54009))) (_1!1215 (tuple2!2411 lt!54001 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29443 c!18705) b!106783))

(assert (= (and d!29443 (not c!18705)) b!106789))

(assert (= (and b!106789 c!18707) b!106782))

(assert (= (and b!106789 (not c!18707)) b!106781))

(assert (= (and b!106781 c!18706) b!106788))

(assert (= (and b!106781 (not c!18706)) b!106780))

(assert (= (or b!106788 b!106780) bm!11290))

(assert (= (or b!106782 bm!11290) bm!11288))

(assert (= (or b!106783 bm!11288) bm!11289))

(assert (= (and bm!11289 c!18708) b!106786))

(assert (= (and bm!11289 (not c!18708)) b!106785))

(assert (= (and d!29443 res!53043) b!106784))

(assert (= (and b!106784 res!53044) b!106787))

(declare-fun m!119781 () Bool)

(assert (=> b!106787 m!119781))

(declare-fun m!119783 () Bool)

(assert (=> bm!11289 m!119783))

(declare-fun m!119785 () Bool)

(assert (=> b!106784 m!119785))

(declare-fun m!119787 () Bool)

(assert (=> b!106786 m!119787))

(declare-fun m!119789 () Bool)

(assert (=> d!29443 m!119789))

(declare-fun m!119791 () Bool)

(assert (=> d!29443 m!119791))

(assert (=> d!28953 d!29443))

(assert (=> b!105780 d!29061))

(declare-fun d!29445 () Bool)

(declare-fun lt!54735 () Bool)

(assert (=> d!29445 (= lt!54735 (select (content!108 (toList!808 lt!54208)) (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun e!69478 () Bool)

(assert (=> d!29445 (= lt!54735 e!69478)))

(declare-fun res!53046 () Bool)

(assert (=> d!29445 (=> (not res!53046) (not e!69478))))

(assert (=> d!29445 (= res!53046 ((_ is Cons!1638) (toList!808 lt!54208)))))

(assert (=> d!29445 (= (contains!830 (toList!808 lt!54208) (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) lt!54735)))

(declare-fun b!106790 () Bool)

(declare-fun e!69479 () Bool)

(assert (=> b!106790 (= e!69478 e!69479)))

(declare-fun res!53045 () Bool)

(assert (=> b!106790 (=> res!53045 e!69479)))

(assert (=> b!106790 (= res!53045 (= (h!2235 (toList!808 lt!54208)) (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106791 () Bool)

(assert (=> b!106791 (= e!69479 (contains!830 (t!5737 (toList!808 lt!54208)) (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (= (and d!29445 res!53046) b!106790))

(assert (= (and b!106790 (not res!53045)) b!106791))

(declare-fun m!119793 () Bool)

(assert (=> d!29445 m!119793))

(declare-fun m!119795 () Bool)

(assert (=> d!29445 m!119795))

(declare-fun m!119797 () Bool)

(assert (=> b!106791 m!119797))

(assert (=> b!105966 d!29445))

(declare-fun d!29447 () Bool)

(assert (=> d!29447 (= (inRange!0 (index!3225 lt!54129) (mask!6728 newMap!16)) (and (bvsge (index!3225 lt!54129) #b00000000000000000000000000000000) (bvslt (index!3225 lt!54129) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!105847 d!29447))

(declare-fun d!29449 () Bool)

(declare-fun res!53047 () Bool)

(declare-fun e!69480 () Bool)

(assert (=> d!29449 (=> res!53047 e!69480)))

(assert (=> d!29449 (= res!53047 (and ((_ is Cons!1638) lt!54037) (= (_1!1215 (h!2235 lt!54037)) (_1!1215 lt!53817))))))

(assert (=> d!29449 (= (containsKey!159 lt!54037 (_1!1215 lt!53817)) e!69480)))

(declare-fun b!106792 () Bool)

(declare-fun e!69481 () Bool)

(assert (=> b!106792 (= e!69480 e!69481)))

(declare-fun res!53048 () Bool)

(assert (=> b!106792 (=> (not res!53048) (not e!69481))))

(assert (=> b!106792 (= res!53048 (and (or (not ((_ is Cons!1638) lt!54037)) (bvsle (_1!1215 (h!2235 lt!54037)) (_1!1215 lt!53817))) ((_ is Cons!1638) lt!54037) (bvslt (_1!1215 (h!2235 lt!54037)) (_1!1215 lt!53817))))))

(declare-fun b!106793 () Bool)

(assert (=> b!106793 (= e!69481 (containsKey!159 (t!5737 lt!54037) (_1!1215 lt!53817)))))

(assert (= (and d!29449 (not res!53047)) b!106792))

(assert (= (and b!106792 res!53048) b!106793))

(declare-fun m!119799 () Bool)

(assert (=> b!106793 m!119799))

(assert (=> b!106126 d!29449))

(declare-fun b!106794 () Bool)

(declare-fun e!69487 () Bool)

(declare-fun e!69486 () Bool)

(assert (=> b!106794 (= e!69487 e!69486)))

(declare-fun c!18709 () Bool)

(assert (=> b!106794 (= c!18709 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106795 () Bool)

(declare-fun e!69482 () Bool)

(assert (=> b!106795 (= e!69487 e!69482)))

(assert (=> b!106795 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun res!53051 () Bool)

(declare-fun lt!54740 () ListLongMap!1585)

(assert (=> b!106795 (= res!53051 (contains!829 lt!54740 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106795 (=> (not res!53051) (not e!69482))))

(declare-fun d!29451 () Bool)

(declare-fun e!69485 () Bool)

(assert (=> d!29451 e!69485))

(declare-fun res!53052 () Bool)

(assert (=> d!29451 (=> (not res!53052) (not e!69485))))

(assert (=> d!29451 (= res!53052 (not (contains!829 lt!54740 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!69484 () ListLongMap!1585)

(assert (=> d!29451 (= lt!54740 e!69484)))

(declare-fun c!18711 () Bool)

(assert (=> d!29451 (= c!18711 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!29451 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29451 (= (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54740)))

(declare-fun b!106796 () Bool)

(assert (=> b!106796 (= e!69485 e!69487)))

(declare-fun c!18710 () Bool)

(declare-fun e!69488 () Bool)

(assert (=> b!106796 (= c!18710 e!69488)))

(declare-fun res!53050 () Bool)

(assert (=> b!106796 (=> (not res!53050) (not e!69488))))

(assert (=> b!106796 (= res!53050 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106797 () Bool)

(assert (=> b!106797 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> b!106797 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))))))))

(assert (=> b!106797 (= e!69482 (= (apply!98 lt!54740 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!106798 () Bool)

(declare-fun lt!54738 () Unit!3250)

(declare-fun lt!54736 () Unit!3250)

(assert (=> b!106798 (= lt!54738 lt!54736)))

(declare-fun lt!54737 () (_ BitVec 64))

(declare-fun lt!54741 () ListLongMap!1585)

(declare-fun lt!54742 () (_ BitVec 64))

(declare-fun lt!54739 () V!3219)

(assert (=> b!106798 (not (contains!829 (+!146 lt!54741 (tuple2!2411 lt!54737 lt!54739)) lt!54742))))

(assert (=> b!106798 (= lt!54736 (addStillNotContains!48 lt!54741 lt!54737 lt!54739 lt!54742))))

(assert (=> b!106798 (= lt!54742 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!106798 (= lt!54739 (get!1339 (select (arr!2063 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!106798 (= lt!54737 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11294 () ListLongMap!1585)

(assert (=> b!106798 (= lt!54741 call!11294)))

(declare-fun e!69483 () ListLongMap!1585)

(assert (=> b!106798 (= e!69483 (+!146 call!11294 (tuple2!2411 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (get!1339 (select (arr!2063 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!106799 () Bool)

(assert (=> b!106799 (= e!69484 (ListLongMap!1586 Nil!1639))))

(declare-fun b!106800 () Bool)

(assert (=> b!106800 (= e!69483 call!11294)))

(declare-fun b!106801 () Bool)

(assert (=> b!106801 (= e!69484 e!69483)))

(declare-fun c!18712 () Bool)

(assert (=> b!106801 (= c!18712 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106802 () Bool)

(assert (=> b!106802 (= e!69486 (isEmpty!375 lt!54740))))

(declare-fun bm!11291 () Bool)

(assert (=> bm!11291 (= call!11294 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16)))))

(declare-fun b!106803 () Bool)

(assert (=> b!106803 (= e!69488 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106803 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!106804 () Bool)

(assert (=> b!106804 (= e!69486 (= lt!54740 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (index!3225 lt!53938) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2582 newMap!16))))))

(declare-fun b!106805 () Bool)

(declare-fun res!53049 () Bool)

(assert (=> b!106805 (=> (not res!53049) (not e!69485))))

(assert (=> b!106805 (= res!53049 (not (contains!829 lt!54740 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29451 c!18711) b!106799))

(assert (= (and d!29451 (not c!18711)) b!106801))

(assert (= (and b!106801 c!18712) b!106798))

(assert (= (and b!106801 (not c!18712)) b!106800))

(assert (= (or b!106798 b!106800) bm!11291))

(assert (= (and d!29451 res!53052) b!106805))

(assert (= (and b!106805 res!53049) b!106796))

(assert (= (and b!106796 res!53050) b!106803))

(assert (= (and b!106796 c!18710) b!106795))

(assert (= (and b!106796 (not c!18710)) b!106794))

(assert (= (and b!106795 res!53051) b!106797))

(assert (= (and b!106794 c!18709) b!106804))

(assert (= (and b!106794 (not c!18709)) b!106802))

(declare-fun b_lambda!4793 () Bool)

(assert (=> (not b_lambda!4793) (not b!106797)))

(assert (=> b!106797 t!5744))

(declare-fun b_and!6601 () Bool)

(assert (= b_and!6597 (and (=> t!5744 result!3475) b_and!6601)))

(assert (=> b!106797 t!5746))

(declare-fun b_and!6603 () Bool)

(assert (= b_and!6599 (and (=> t!5746 result!3477) b_and!6603)))

(declare-fun b_lambda!4795 () Bool)

(assert (=> (not b_lambda!4795) (not b!106798)))

(assert (=> b!106798 t!5744))

(declare-fun b_and!6605 () Bool)

(assert (= b_and!6601 (and (=> t!5744 result!3475) b_and!6605)))

(assert (=> b!106798 t!5746))

(declare-fun b_and!6607 () Bool)

(assert (= b_and!6603 (and (=> t!5746 result!3477) b_and!6607)))

(assert (=> b!106801 m!117859))

(assert (=> b!106801 m!117859))

(assert (=> b!106801 m!117861))

(declare-fun m!119801 () Bool)

(assert (=> d!29451 m!119801))

(assert (=> d!29451 m!117867))

(assert (=> b!106797 m!118103))

(assert (=> b!106797 m!118207))

(assert (=> b!106797 m!117859))

(declare-fun m!119803 () Bool)

(assert (=> b!106797 m!119803))

(assert (=> b!106797 m!118207))

(assert (=> b!106797 m!118103))

(assert (=> b!106797 m!118209))

(assert (=> b!106797 m!117859))

(declare-fun m!119805 () Bool)

(assert (=> b!106802 m!119805))

(assert (=> b!106795 m!117859))

(assert (=> b!106795 m!117859))

(declare-fun m!119807 () Bool)

(assert (=> b!106795 m!119807))

(assert (=> b!106803 m!117859))

(assert (=> b!106803 m!117859))

(assert (=> b!106803 m!117861))

(declare-fun m!119809 () Bool)

(assert (=> b!106805 m!119809))

(declare-fun m!119811 () Bool)

(assert (=> b!106798 m!119811))

(assert (=> b!106798 m!119811))

(declare-fun m!119813 () Bool)

(assert (=> b!106798 m!119813))

(declare-fun m!119815 () Bool)

(assert (=> b!106798 m!119815))

(assert (=> b!106798 m!118103))

(assert (=> b!106798 m!118207))

(declare-fun m!119817 () Bool)

(assert (=> b!106798 m!119817))

(assert (=> b!106798 m!118207))

(assert (=> b!106798 m!118103))

(assert (=> b!106798 m!118209))

(assert (=> b!106798 m!117859))

(declare-fun m!119819 () Bool)

(assert (=> bm!11291 m!119819))

(assert (=> b!106804 m!119819))

(assert (=> bm!11201 d!29451))

(declare-fun b!106806 () Bool)

(declare-fun e!69497 () Bool)

(declare-fun e!69500 () Bool)

(assert (=> b!106806 (= e!69497 e!69500)))

(declare-fun res!53059 () Bool)

(declare-fun call!11301 () Bool)

(assert (=> b!106806 (= res!53059 call!11301)))

(assert (=> b!106806 (=> (not res!53059) (not e!69500))))

(declare-fun bm!11292 () Bool)

(declare-fun call!11295 () ListLongMap!1585)

(assert (=> bm!11292 (= call!11295 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53953 lt!53815 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bm!11293 () Bool)

(declare-fun call!11299 () ListLongMap!1585)

(assert (=> bm!11293 (= call!11299 call!11295)))

(declare-fun b!106808 () Bool)

(declare-fun e!69492 () Bool)

(assert (=> b!106808 (= e!69492 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11294 () Bool)

(declare-fun call!11298 () ListLongMap!1585)

(declare-fun call!11300 () ListLongMap!1585)

(assert (=> bm!11294 (= call!11298 call!11300)))

(declare-fun b!106809 () Bool)

(declare-fun e!69495 () Unit!3250)

(declare-fun lt!54748 () Unit!3250)

(assert (=> b!106809 (= e!69495 lt!54748)))

(declare-fun lt!54761 () ListLongMap!1585)

(assert (=> b!106809 (= lt!54761 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53953 lt!53815 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54757 () (_ BitVec 64))

(assert (=> b!106809 (= lt!54757 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54760 () (_ BitVec 64))

(assert (=> b!106809 (= lt!54760 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54744 () Unit!3250)

(assert (=> b!106809 (= lt!54744 (addStillContains!74 lt!54761 lt!54757 lt!53815 lt!54760))))

(assert (=> b!106809 (contains!829 (+!146 lt!54761 (tuple2!2411 lt!54757 lt!53815)) lt!54760)))

(declare-fun lt!54743 () Unit!3250)

(assert (=> b!106809 (= lt!54743 lt!54744)))

(declare-fun lt!54753 () ListLongMap!1585)

(assert (=> b!106809 (= lt!54753 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53953 lt!53815 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54745 () (_ BitVec 64))

(assert (=> b!106809 (= lt!54745 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54751 () (_ BitVec 64))

(assert (=> b!106809 (= lt!54751 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54749 () Unit!3250)

(assert (=> b!106809 (= lt!54749 (addApplyDifferent!74 lt!54753 lt!54745 (minValue!2457 newMap!16) lt!54751))))

(assert (=> b!106809 (= (apply!98 (+!146 lt!54753 (tuple2!2411 lt!54745 (minValue!2457 newMap!16))) lt!54751) (apply!98 lt!54753 lt!54751))))

(declare-fun lt!54759 () Unit!3250)

(assert (=> b!106809 (= lt!54759 lt!54749)))

(declare-fun lt!54756 () ListLongMap!1585)

(assert (=> b!106809 (= lt!54756 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53953 lt!53815 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54754 () (_ BitVec 64))

(assert (=> b!106809 (= lt!54754 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54763 () (_ BitVec 64))

(assert (=> b!106809 (= lt!54763 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54764 () Unit!3250)

(assert (=> b!106809 (= lt!54764 (addApplyDifferent!74 lt!54756 lt!54754 lt!53815 lt!54763))))

(assert (=> b!106809 (= (apply!98 (+!146 lt!54756 (tuple2!2411 lt!54754 lt!53815)) lt!54763) (apply!98 lt!54756 lt!54763))))

(declare-fun lt!54750 () Unit!3250)

(assert (=> b!106809 (= lt!54750 lt!54764)))

(declare-fun lt!54752 () ListLongMap!1585)

(assert (=> b!106809 (= lt!54752 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53953 lt!53815 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54762 () (_ BitVec 64))

(assert (=> b!106809 (= lt!54762 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54747 () (_ BitVec 64))

(assert (=> b!106809 (= lt!54747 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106809 (= lt!54748 (addApplyDifferent!74 lt!54752 lt!54762 (minValue!2457 newMap!16) lt!54747))))

(assert (=> b!106809 (= (apply!98 (+!146 lt!54752 (tuple2!2411 lt!54762 (minValue!2457 newMap!16))) lt!54747) (apply!98 lt!54752 lt!54747))))

(declare-fun b!106810 () Bool)

(declare-fun e!69496 () Bool)

(assert (=> b!106810 (= e!69496 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106811 () Bool)

(declare-fun lt!54755 () ListLongMap!1585)

(assert (=> b!106811 (= e!69500 (= (apply!98 lt!54755 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!106812 () Bool)

(declare-fun e!69499 () Bool)

(declare-fun e!69493 () Bool)

(assert (=> b!106812 (= e!69499 e!69493)))

(declare-fun res!53057 () Bool)

(declare-fun call!11297 () Bool)

(assert (=> b!106812 (= res!53057 call!11297)))

(assert (=> b!106812 (=> (not res!53057) (not e!69493))))

(declare-fun b!106813 () Bool)

(declare-fun res!53058 () Bool)

(declare-fun e!69501 () Bool)

(assert (=> b!106813 (=> (not res!53058) (not e!69501))))

(assert (=> b!106813 (= res!53058 e!69499)))

(declare-fun c!18718 () Bool)

(assert (=> b!106813 (= c!18718 (not (= (bvand lt!53953 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106814 () Bool)

(declare-fun c!18714 () Bool)

(assert (=> b!106814 (= c!18714 (and (not (= (bvand lt!53953 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!53953 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69490 () ListLongMap!1585)

(declare-fun e!69498 () ListLongMap!1585)

(assert (=> b!106814 (= e!69490 e!69498)))

(declare-fun b!106815 () Bool)

(declare-fun res!53055 () Bool)

(assert (=> b!106815 (=> (not res!53055) (not e!69501))))

(declare-fun e!69491 () Bool)

(assert (=> b!106815 (= res!53055 e!69491)))

(declare-fun res!53061 () Bool)

(assert (=> b!106815 (=> res!53061 e!69491)))

(assert (=> b!106815 (= res!53061 (not e!69496))))

(declare-fun res!53056 () Bool)

(assert (=> b!106815 (=> (not res!53056) (not e!69496))))

(assert (=> b!106815 (= res!53056 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106816 () Bool)

(declare-fun e!69494 () Bool)

(assert (=> b!106816 (= e!69491 e!69494)))

(declare-fun res!53054 () Bool)

(assert (=> b!106816 (=> (not res!53054) (not e!69494))))

(assert (=> b!106816 (= res!53054 (contains!829 lt!54755 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106816 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106817 () Bool)

(assert (=> b!106817 (= e!69498 call!11298)))

(declare-fun bm!11295 () Bool)

(assert (=> bm!11295 (= call!11297 (contains!829 lt!54755 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!29453 () Bool)

(assert (=> d!29453 e!69501))

(declare-fun res!53060 () Bool)

(assert (=> d!29453 (=> (not res!53060) (not e!69501))))

(assert (=> d!29453 (= res!53060 (or (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))))

(declare-fun lt!54746 () ListLongMap!1585)

(assert (=> d!29453 (= lt!54755 lt!54746)))

(declare-fun lt!54758 () Unit!3250)

(assert (=> d!29453 (= lt!54758 e!69495)))

(declare-fun c!18716 () Bool)

(assert (=> d!29453 (= c!18716 e!69492)))

(declare-fun res!53053 () Bool)

(assert (=> d!29453 (=> (not res!53053) (not e!69492))))

(assert (=> d!29453 (= res!53053 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun e!69489 () ListLongMap!1585)

(assert (=> d!29453 (= lt!54746 e!69489)))

(declare-fun c!18717 () Bool)

(assert (=> d!29453 (= c!18717 (and (not (= (bvand lt!53953 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!53953 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29453 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29453 (= (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53953 lt!53815 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54755)))

(declare-fun b!106807 () Bool)

(declare-fun Unit!3309 () Unit!3250)

(assert (=> b!106807 (= e!69495 Unit!3309)))

(declare-fun b!106818 () Bool)

(assert (=> b!106818 (= e!69489 e!69490)))

(declare-fun c!18713 () Bool)

(assert (=> b!106818 (= c!18713 (and (not (= (bvand lt!53953 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!53953 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106819 () Bool)

(assert (=> b!106819 (= e!69501 e!69497)))

(declare-fun c!18715 () Bool)

(assert (=> b!106819 (= c!18715 (not (= (bvand lt!53953 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11296 () Bool)

(assert (=> bm!11296 (= call!11301 (contains!829 lt!54755 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106820 () Bool)

(assert (=> b!106820 (= e!69490 call!11298)))

(declare-fun bm!11297 () Bool)

(declare-fun call!11296 () ListLongMap!1585)

(assert (=> bm!11297 (= call!11300 (+!146 (ite c!18717 call!11295 (ite c!18713 call!11299 call!11296)) (ite (or c!18717 c!18713) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!106821 () Bool)

(assert (=> b!106821 (= e!69494 (= (apply!98 lt!54755 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (_values!2565 newMap!16)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106821 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_values!2565 newMap!16))))))

(assert (=> b!106821 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106822 () Bool)

(assert (=> b!106822 (= e!69499 (not call!11297))))

(declare-fun b!106823 () Bool)

(assert (=> b!106823 (= e!69497 (not call!11301))))

(declare-fun b!106824 () Bool)

(assert (=> b!106824 (= e!69498 call!11296)))

(declare-fun bm!11298 () Bool)

(assert (=> bm!11298 (= call!11296 call!11299)))

(declare-fun b!106825 () Bool)

(assert (=> b!106825 (= e!69493 (= (apply!98 lt!54755 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53815))))

(declare-fun b!106826 () Bool)

(assert (=> b!106826 (= e!69489 (+!146 call!11300 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!29453 c!18717) b!106826))

(assert (= (and d!29453 (not c!18717)) b!106818))

(assert (= (and b!106818 c!18713) b!106820))

(assert (= (and b!106818 (not c!18713)) b!106814))

(assert (= (and b!106814 c!18714) b!106817))

(assert (= (and b!106814 (not c!18714)) b!106824))

(assert (= (or b!106817 b!106824) bm!11298))

(assert (= (or b!106820 bm!11298) bm!11293))

(assert (= (or b!106820 b!106817) bm!11294))

(assert (= (or b!106826 bm!11293) bm!11292))

(assert (= (or b!106826 bm!11294) bm!11297))

(assert (= (and d!29453 res!53053) b!106808))

(assert (= (and d!29453 c!18716) b!106809))

(assert (= (and d!29453 (not c!18716)) b!106807))

(assert (= (and d!29453 res!53060) b!106815))

(assert (= (and b!106815 res!53056) b!106810))

(assert (= (and b!106815 (not res!53061)) b!106816))

(assert (= (and b!106816 res!53054) b!106821))

(assert (= (and b!106815 res!53055) b!106813))

(assert (= (and b!106813 c!18718) b!106812))

(assert (= (and b!106813 (not c!18718)) b!106822))

(assert (= (and b!106812 res!53057) b!106825))

(assert (= (or b!106812 b!106822) bm!11295))

(assert (= (and b!106813 res!53058) b!106819))

(assert (= (and b!106819 c!18715) b!106806))

(assert (= (and b!106819 (not c!18715)) b!106823))

(assert (= (and b!106806 res!53059) b!106811))

(assert (= (or b!106806 b!106823) bm!11296))

(declare-fun b_lambda!4797 () Bool)

(assert (=> (not b_lambda!4797) (not b!106821)))

(assert (=> b!106821 t!5744))

(declare-fun b_and!6609 () Bool)

(assert (= b_and!6605 (and (=> t!5744 result!3475) b_and!6609)))

(assert (=> b!106821 t!5746))

(declare-fun b_and!6611 () Bool)

(assert (= b_and!6607 (and (=> t!5746 result!3477) b_and!6611)))

(assert (=> b!106821 m!117859))

(assert (=> b!106821 m!118101))

(assert (=> b!106821 m!118103))

(assert (=> b!106821 m!118105))

(assert (=> b!106821 m!117859))

(declare-fun m!119821 () Bool)

(assert (=> b!106821 m!119821))

(assert (=> b!106821 m!118101))

(assert (=> b!106821 m!118103))

(declare-fun m!119823 () Bool)

(assert (=> bm!11296 m!119823))

(declare-fun m!119825 () Bool)

(assert (=> bm!11297 m!119825))

(declare-fun m!119827 () Bool)

(assert (=> b!106826 m!119827))

(assert (=> d!29453 m!117867))

(assert (=> b!106808 m!117859))

(assert (=> b!106808 m!117859))

(assert (=> b!106808 m!117861))

(declare-fun m!119829 () Bool)

(assert (=> b!106811 m!119829))

(assert (=> b!106810 m!117859))

(assert (=> b!106810 m!117859))

(assert (=> b!106810 m!117861))

(declare-fun m!119831 () Bool)

(assert (=> b!106825 m!119831))

(declare-fun m!119833 () Bool)

(assert (=> bm!11295 m!119833))

(declare-fun m!119835 () Bool)

(assert (=> bm!11292 m!119835))

(assert (=> b!106816 m!117859))

(assert (=> b!106816 m!117859))

(declare-fun m!119837 () Bool)

(assert (=> b!106816 m!119837))

(declare-fun m!119839 () Bool)

(assert (=> b!106809 m!119839))

(declare-fun m!119841 () Bool)

(assert (=> b!106809 m!119841))

(assert (=> b!106809 m!119835))

(assert (=> b!106809 m!117859))

(declare-fun m!119843 () Bool)

(assert (=> b!106809 m!119843))

(declare-fun m!119845 () Bool)

(assert (=> b!106809 m!119845))

(declare-fun m!119847 () Bool)

(assert (=> b!106809 m!119847))

(declare-fun m!119849 () Bool)

(assert (=> b!106809 m!119849))

(declare-fun m!119851 () Bool)

(assert (=> b!106809 m!119851))

(declare-fun m!119853 () Bool)

(assert (=> b!106809 m!119853))

(declare-fun m!119855 () Bool)

(assert (=> b!106809 m!119855))

(assert (=> b!106809 m!119849))

(declare-fun m!119857 () Bool)

(assert (=> b!106809 m!119857))

(declare-fun m!119859 () Bool)

(assert (=> b!106809 m!119859))

(declare-fun m!119861 () Bool)

(assert (=> b!106809 m!119861))

(assert (=> b!106809 m!119857))

(declare-fun m!119863 () Bool)

(assert (=> b!106809 m!119863))

(assert (=> b!106809 m!119853))

(declare-fun m!119865 () Bool)

(assert (=> b!106809 m!119865))

(assert (=> b!106809 m!119843))

(declare-fun m!119867 () Bool)

(assert (=> b!106809 m!119867))

(assert (=> d!28895 d!29453))

(assert (=> d!28895 d!28911))

(declare-fun d!29455 () Bool)

(assert (=> d!29455 (= (+!146 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) lt!53953 lt!53815 (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(assert (=> d!29455 true))

(declare-fun _$7!92 () Unit!3250)

(assert (=> d!29455 (= (choose!665 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) lt!53953 (zeroValue!2457 newMap!16) lt!53815 (minValue!2457 newMap!16) (defaultEntry!2582 newMap!16)) _$7!92)))

(declare-fun bs!4393 () Bool)

(assert (= bs!4393 d!29455))

(assert (=> bs!4393 m!117685))

(assert (=> bs!4393 m!117685))

(assert (=> bs!4393 m!118061))

(assert (=> bs!4393 m!118065))

(assert (=> d!28895 d!29455))

(assert (=> d!28895 d!29203))

(declare-fun d!29457 () Bool)

(declare-fun e!69502 () Bool)

(assert (=> d!29457 e!69502))

(declare-fun res!53063 () Bool)

(assert (=> d!29457 (=> (not res!53063) (not e!69502))))

(declare-fun lt!54767 () ListLongMap!1585)

(assert (=> d!29457 (= res!53063 (contains!829 lt!54767 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815))))))

(declare-fun lt!54766 () List!1642)

(assert (=> d!29457 (= lt!54767 (ListLongMap!1586 lt!54766))))

(declare-fun lt!54768 () Unit!3250)

(declare-fun lt!54765 () Unit!3250)

(assert (=> d!29457 (= lt!54768 lt!54765)))

(assert (=> d!29457 (= (getValueByKey!155 lt!54766 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815))) (Some!160 (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815))))))

(assert (=> d!29457 (= lt!54765 (lemmaContainsTupThenGetReturnValue!73 lt!54766 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815))))))

(assert (=> d!29457 (= lt!54766 (insertStrictlySorted!75 (toList!808 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815))))))

(assert (=> d!29457 (= (+!146 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815)) lt!54767)))

(declare-fun b!106827 () Bool)

(declare-fun res!53062 () Bool)

(assert (=> b!106827 (=> (not res!53062) (not e!69502))))

(assert (=> b!106827 (= res!53062 (= (getValueByKey!155 (toList!808 lt!54767) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815))) (Some!160 (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815)))))))

(declare-fun b!106828 () Bool)

(assert (=> b!106828 (= e!69502 (contains!830 (toList!808 lt!54767) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815)))))

(assert (= (and d!29457 res!53063) b!106827))

(assert (= (and b!106827 res!53062) b!106828))

(declare-fun m!119869 () Bool)

(assert (=> d!29457 m!119869))

(declare-fun m!119871 () Bool)

(assert (=> d!29457 m!119871))

(declare-fun m!119873 () Bool)

(assert (=> d!29457 m!119873))

(declare-fun m!119875 () Bool)

(assert (=> d!29457 m!119875))

(declare-fun m!119877 () Bool)

(assert (=> b!106827 m!119877))

(declare-fun m!119879 () Bool)

(assert (=> b!106828 m!119879))

(assert (=> d!28895 d!29457))

(assert (=> b!105923 d!29383))

(assert (=> b!105773 d!29345))

(declare-fun d!29459 () Bool)

(declare-fun e!69503 () Bool)

(assert (=> d!29459 e!69503))

(declare-fun res!53065 () Bool)

(assert (=> d!29459 (=> (not res!53065) (not e!69503))))

(declare-fun lt!54771 () ListLongMap!1585)

(assert (=> d!29459 (= res!53065 (contains!829 lt!54771 (_1!1215 (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))))))

(declare-fun lt!54770 () List!1642)

(assert (=> d!29459 (= lt!54771 (ListLongMap!1586 lt!54770))))

(declare-fun lt!54772 () Unit!3250)

(declare-fun lt!54769 () Unit!3250)

(assert (=> d!29459 (= lt!54772 lt!54769)))

(assert (=> d!29459 (= (getValueByKey!155 lt!54770 (_1!1215 (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))) (Some!160 (_2!1215 (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))))))

(assert (=> d!29459 (= lt!54769 (lemmaContainsTupThenGetReturnValue!73 lt!54770 (_1!1215 (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))) (_2!1215 (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))))))

(assert (=> d!29459 (= lt!54770 (insertStrictlySorted!75 (toList!808 (ite c!18500 call!11221 (ite c!18496 call!11225 call!11222))) (_1!1215 (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))) (_2!1215 (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))))))

(assert (=> d!29459 (= (+!146 (ite c!18500 call!11221 (ite c!18496 call!11225 call!11222)) (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))) lt!54771)))

(declare-fun b!106829 () Bool)

(declare-fun res!53064 () Bool)

(assert (=> b!106829 (=> (not res!53064) (not e!69503))))

(assert (=> b!106829 (= res!53064 (= (getValueByKey!155 (toList!808 lt!54771) (_1!1215 (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))) (Some!160 (_2!1215 (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))))

(declare-fun b!106830 () Bool)

(assert (=> b!106830 (= e!69503 (contains!830 (toList!808 lt!54771) (ite (or c!18500 c!18496) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(assert (= (and d!29459 res!53065) b!106829))

(assert (= (and b!106829 res!53064) b!106830))

(declare-fun m!119881 () Bool)

(assert (=> d!29459 m!119881))

(declare-fun m!119883 () Bool)

(assert (=> d!29459 m!119883))

(declare-fun m!119885 () Bool)

(assert (=> d!29459 m!119885))

(declare-fun m!119887 () Bool)

(assert (=> d!29459 m!119887))

(declare-fun m!119889 () Bool)

(assert (=> b!106829 m!119889))

(declare-fun m!119891 () Bool)

(assert (=> b!106830 m!119891))

(assert (=> bm!11223 d!29459))

(assert (=> d!28931 d!29203))

(declare-fun d!29461 () Bool)

(declare-fun res!53066 () Bool)

(declare-fun e!69504 () Bool)

(assert (=> d!29461 (=> res!53066 e!69504)))

(assert (=> d!29461 (= res!53066 (or ((_ is Nil!1639) lt!54167) ((_ is Nil!1639) (t!5737 lt!54167))))))

(assert (=> d!29461 (= (isStrictlySorted!304 lt!54167) e!69504)))

(declare-fun b!106831 () Bool)

(declare-fun e!69505 () Bool)

(assert (=> b!106831 (= e!69504 e!69505)))

(declare-fun res!53067 () Bool)

(assert (=> b!106831 (=> (not res!53067) (not e!69505))))

(assert (=> b!106831 (= res!53067 (bvslt (_1!1215 (h!2235 lt!54167)) (_1!1215 (h!2235 (t!5737 lt!54167)))))))

(declare-fun b!106832 () Bool)

(assert (=> b!106832 (= e!69505 (isStrictlySorted!304 (t!5737 lt!54167)))))

(assert (= (and d!29461 (not res!53066)) b!106831))

(assert (= (and b!106831 res!53067) b!106832))

(declare-fun m!119893 () Bool)

(assert (=> b!106832 m!119893))

(assert (=> d!28905 d!29461))

(declare-fun d!29463 () Bool)

(declare-fun res!53068 () Bool)

(declare-fun e!69506 () Bool)

(assert (=> d!29463 (=> res!53068 e!69506)))

(assert (=> d!29463 (= res!53068 (or ((_ is Nil!1639) (toList!808 (+!146 lt!53824 lt!53818))) ((_ is Nil!1639) (t!5737 (toList!808 (+!146 lt!53824 lt!53818))))))))

(assert (=> d!29463 (= (isStrictlySorted!304 (toList!808 (+!146 lt!53824 lt!53818))) e!69506)))

(declare-fun b!106833 () Bool)

(declare-fun e!69507 () Bool)

(assert (=> b!106833 (= e!69506 e!69507)))

(declare-fun res!53069 () Bool)

(assert (=> b!106833 (=> (not res!53069) (not e!69507))))

(assert (=> b!106833 (= res!53069 (bvslt (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 lt!53818)))) (_1!1215 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53818)))))))))

(declare-fun b!106834 () Bool)

(assert (=> b!106834 (= e!69507 (isStrictlySorted!304 (t!5737 (toList!808 (+!146 lt!53824 lt!53818)))))))

(assert (= (and d!29463 (not res!53068)) b!106833))

(assert (= (and b!106833 res!53069) b!106834))

(assert (=> b!106834 m!119713))

(assert (=> d!28905 d!29463))

(declare-fun d!29465 () Bool)

(declare-fun res!53070 () Bool)

(declare-fun e!69508 () Bool)

(assert (=> d!29465 (=> res!53070 e!69508)))

(assert (=> d!29465 (= res!53070 (or ((_ is Nil!1639) lt!54362) ((_ is Nil!1639) (t!5737 lt!54362))))))

(assert (=> d!29465 (= (isStrictlySorted!304 lt!54362) e!69508)))

(declare-fun b!106835 () Bool)

(declare-fun e!69509 () Bool)

(assert (=> b!106835 (= e!69508 e!69509)))

(declare-fun res!53071 () Bool)

(assert (=> b!106835 (=> (not res!53071) (not e!69509))))

(assert (=> b!106835 (= res!53071 (bvslt (_1!1215 (h!2235 lt!54362)) (_1!1215 (h!2235 (t!5737 lt!54362)))))))

(declare-fun b!106836 () Bool)

(assert (=> b!106836 (= e!69509 (isStrictlySorted!304 (t!5737 lt!54362)))))

(assert (= (and d!29465 (not res!53070)) b!106835))

(assert (= (and b!106835 res!53071) b!106836))

(declare-fun m!119895 () Bool)

(assert (=> b!106836 m!119895))

(assert (=> d!29021 d!29465))

(assert (=> d!29021 d!29349))

(declare-fun d!29467 () Bool)

(assert (=> d!29467 (= (apply!98 lt!54229 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1342 (getValueByKey!155 (toList!808 lt!54229) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4394 () Bool)

(assert (= bs!4394 d!29467))

(declare-fun m!119897 () Bool)

(assert (=> bs!4394 m!119897))

(assert (=> bs!4394 m!119897))

(declare-fun m!119899 () Bool)

(assert (=> bs!4394 m!119899))

(assert (=> b!105991 d!29467))

(declare-fun d!29469 () Bool)

(assert (=> d!29469 (= ($colon$colon!80 e!68941 (ite c!18459 (h!2235 (toList!808 (+!146 lt!53824 lt!53818))) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817)))) (Cons!1638 (ite c!18459 (h!2235 (toList!808 (+!146 lt!53824 lt!53818))) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))) e!68941))))

(assert (=> bm!11189 d!29469))

(declare-fun d!29471 () Bool)

(assert (=> d!29471 (= (apply!98 lt!54262 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1342 (getValueByKey!155 (toList!808 lt!54262) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4395 () Bool)

(assert (= bs!4395 d!29471))

(assert (=> bs!4395 m!119287))

(assert (=> bs!4395 m!119287))

(declare-fun m!119901 () Bool)

(assert (=> bs!4395 m!119901))

(assert (=> b!106006 d!29471))

(declare-fun b!106838 () Bool)

(declare-fun e!69510 () Option!161)

(declare-fun e!69511 () Option!161)

(assert (=> b!106838 (= e!69510 e!69511)))

(declare-fun c!18720 () Bool)

(assert (=> b!106838 (= c!18720 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!54031))) (not (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!54031)))) (_1!1215 lt!53818)))))))

(declare-fun d!29473 () Bool)

(declare-fun c!18719 () Bool)

(assert (=> d!29473 (= c!18719 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!54031))) (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!54031)))) (_1!1215 lt!53818))))))

(assert (=> d!29473 (= (getValueByKey!155 (t!5737 (toList!808 lt!54031)) (_1!1215 lt!53818)) e!69510)))

(declare-fun b!106839 () Bool)

(assert (=> b!106839 (= e!69511 (getValueByKey!155 (t!5737 (t!5737 (toList!808 lt!54031))) (_1!1215 lt!53818)))))

(declare-fun b!106837 () Bool)

(assert (=> b!106837 (= e!69510 (Some!160 (_2!1215 (h!2235 (t!5737 (toList!808 lt!54031))))))))

(declare-fun b!106840 () Bool)

(assert (=> b!106840 (= e!69511 None!159)))

(assert (= (and d!29473 c!18719) b!106837))

(assert (= (and d!29473 (not c!18719)) b!106838))

(assert (= (and b!106838 c!18720) b!106839))

(assert (= (and b!106838 (not c!18720)) b!106840))

(declare-fun m!119903 () Bool)

(assert (=> b!106839 m!119903))

(assert (=> b!105809 d!29473))

(declare-fun d!29475 () Bool)

(declare-fun res!53072 () Bool)

(declare-fun e!69512 () Bool)

(assert (=> d!29475 (=> res!53072 e!69512)))

(assert (=> d!29475 (= res!53072 (and ((_ is Cons!1638) lt!54305) (= (_1!1215 (h!2235 lt!54305)) (_1!1215 lt!53818))))))

(assert (=> d!29475 (= (containsKey!159 lt!54305 (_1!1215 lt!53818)) e!69512)))

(declare-fun b!106841 () Bool)

(declare-fun e!69513 () Bool)

(assert (=> b!106841 (= e!69512 e!69513)))

(declare-fun res!53073 () Bool)

(assert (=> b!106841 (=> (not res!53073) (not e!69513))))

(assert (=> b!106841 (= res!53073 (and (or (not ((_ is Cons!1638) lt!54305)) (bvsle (_1!1215 (h!2235 lt!54305)) (_1!1215 lt!53818))) ((_ is Cons!1638) lt!54305) (bvslt (_1!1215 (h!2235 lt!54305)) (_1!1215 lt!53818))))))

(declare-fun b!106842 () Bool)

(assert (=> b!106842 (= e!69513 (containsKey!159 (t!5737 lt!54305) (_1!1215 lt!53818)))))

(assert (= (and d!29475 (not res!53072)) b!106841))

(assert (= (and b!106841 res!53073) b!106842))

(declare-fun m!119905 () Bool)

(assert (=> b!106842 m!119905))

(assert (=> b!106053 d!29475))

(declare-fun lt!54773 () Bool)

(declare-fun d!29477 () Bool)

(assert (=> d!29477 (= lt!54773 (select (content!109 (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!69515 () Bool)

(assert (=> d!29477 (= lt!54773 e!69515)))

(declare-fun res!53075 () Bool)

(assert (=> d!29477 (=> (not res!53075) (not e!69515))))

(assert (=> d!29477 (= res!53075 ((_ is Cons!1639) (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)))))

(assert (=> d!29477 (= (contains!831 (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!54773)))

(declare-fun b!106843 () Bool)

(declare-fun e!69514 () Bool)

(assert (=> b!106843 (= e!69515 e!69514)))

(declare-fun res!53074 () Bool)

(assert (=> b!106843 (=> res!53074 e!69514)))

(assert (=> b!106843 (= res!53074 (= (h!2236 (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!106844 () Bool)

(assert (=> b!106844 (= e!69514 (contains!831 (t!5738 (ite c!18403 (Cons!1639 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) Nil!1640) Nil!1640)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!29477 res!53075) b!106843))

(assert (= (and b!106843 (not res!53074)) b!106844))

(declare-fun m!119907 () Bool)

(assert (=> d!29477 m!119907))

(assert (=> d!29477 m!118545))

(declare-fun m!119909 () Bool)

(assert (=> d!29477 m!119909))

(assert (=> b!106844 m!118545))

(declare-fun m!119911 () Bool)

(assert (=> b!106844 m!119911))

(assert (=> b!106096 d!29477))

(declare-fun d!29479 () Bool)

(assert (=> d!29479 (= ($colon$colon!80 e!69083 (ite c!18510 (h!2235 (toList!808 lt!53824)) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817)))) (Cons!1638 (ite c!18510 (h!2235 (toList!808 lt!53824)) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))) e!69083))))

(assert (=> bm!11227 d!29479))

(declare-fun d!29481 () Bool)

(declare-fun res!53076 () Bool)

(declare-fun e!69516 () Bool)

(assert (=> d!29481 (=> res!53076 e!69516)))

(assert (=> d!29481 (= res!53076 (and ((_ is Cons!1638) (toList!808 call!11138)) (= (_1!1215 (h!2235 (toList!808 call!11138))) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938))))))))

(assert (=> d!29481 (= (containsKey!159 (toList!808 call!11138) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))) e!69516)))

(declare-fun b!106845 () Bool)

(declare-fun e!69517 () Bool)

(assert (=> b!106845 (= e!69516 e!69517)))

(declare-fun res!53077 () Bool)

(assert (=> b!106845 (=> (not res!53077) (not e!69517))))

(assert (=> b!106845 (= res!53077 (and (or (not ((_ is Cons!1638) (toList!808 call!11138))) (bvsle (_1!1215 (h!2235 (toList!808 call!11138))) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938))))) ((_ is Cons!1638) (toList!808 call!11138)) (bvslt (_1!1215 (h!2235 (toList!808 call!11138))) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938))))))))

(declare-fun b!106846 () Bool)

(assert (=> b!106846 (= e!69517 (containsKey!159 (t!5737 (toList!808 call!11138)) (ite c!18357 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))

(assert (= (and d!29481 (not res!53076)) b!106845))

(assert (= (and b!106845 res!53077) b!106846))

(declare-fun m!119913 () Bool)

(assert (=> b!106846 m!119913))

(assert (=> d!28843 d!29481))

(assert (=> b!106061 d!29061))

(declare-fun b!106850 () Bool)

(declare-fun e!69518 () Bool)

(assert (=> b!106850 (= e!69518 (and (bvsge (extraKeys!2387 (_2!1216 lt!53943)) #b00000000000000000000000000000000) (bvsle (extraKeys!2387 (_2!1216 lt!53943)) #b00000000000000000000000000000011) (bvsge (_vacant!499 (_2!1216 lt!53943)) #b00000000000000000000000000000000)))))

(declare-fun d!29483 () Bool)

(declare-fun res!53078 () Bool)

(assert (=> d!29483 (=> (not res!53078) (not e!69518))))

(assert (=> d!29483 (= res!53078 (validMask!0 (mask!6728 (_2!1216 lt!53943))))))

(assert (=> d!29483 (= (simpleValid!73 (_2!1216 lt!53943)) e!69518)))

(declare-fun b!106847 () Bool)

(declare-fun res!53079 () Bool)

(assert (=> b!106847 (=> (not res!53079) (not e!69518))))

(assert (=> b!106847 (= res!53079 (and (= (size!2318 (_values!2565 (_2!1216 lt!53943))) (bvadd (mask!6728 (_2!1216 lt!53943)) #b00000000000000000000000000000001)) (= (size!2317 (_keys!4288 (_2!1216 lt!53943))) (size!2318 (_values!2565 (_2!1216 lt!53943)))) (bvsge (_size!499 (_2!1216 lt!53943)) #b00000000000000000000000000000000) (bvsle (_size!499 (_2!1216 lt!53943)) (bvadd (mask!6728 (_2!1216 lt!53943)) #b00000000000000000000000000000001))))))

(declare-fun b!106849 () Bool)

(declare-fun res!53081 () Bool)

(assert (=> b!106849 (=> (not res!53081) (not e!69518))))

(assert (=> b!106849 (= res!53081 (= (size!2321 (_2!1216 lt!53943)) (bvadd (_size!499 (_2!1216 lt!53943)) (bvsdiv (bvadd (extraKeys!2387 (_2!1216 lt!53943)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!106848 () Bool)

(declare-fun res!53080 () Bool)

(assert (=> b!106848 (=> (not res!53080) (not e!69518))))

(assert (=> b!106848 (= res!53080 (bvsge (size!2321 (_2!1216 lt!53943)) (_size!499 (_2!1216 lt!53943))))))

(assert (= (and d!29483 res!53078) b!106847))

(assert (= (and b!106847 res!53079) b!106848))

(assert (= (and b!106848 res!53080) b!106849))

(assert (= (and b!106849 res!53081) b!106850))

(declare-fun m!119915 () Bool)

(assert (=> d!29483 m!119915))

(declare-fun m!119917 () Bool)

(assert (=> b!106849 m!119917))

(assert (=> b!106848 m!119917))

(assert (=> d!28847 d!29483))

(assert (=> d!29019 d!29017))

(declare-fun d!29485 () Bool)

(assert (=> d!29485 (= (getValueByKey!155 lt!54030 (_1!1215 lt!53818)) (Some!160 (_2!1215 lt!53818)))))

(assert (=> d!29485 true))

(declare-fun _$22!434 () Unit!3250)

(assert (=> d!29485 (= (choose!666 lt!54030 (_1!1215 lt!53818) (_2!1215 lt!53818)) _$22!434)))

(declare-fun bs!4396 () Bool)

(assert (= bs!4396 d!29485))

(assert (=> bs!4396 m!117743))

(assert (=> d!29019 d!29485))

(declare-fun d!29487 () Bool)

(declare-fun res!53082 () Bool)

(declare-fun e!69519 () Bool)

(assert (=> d!29487 (=> res!53082 e!69519)))

(assert (=> d!29487 (= res!53082 (or ((_ is Nil!1639) lt!54030) ((_ is Nil!1639) (t!5737 lt!54030))))))

(assert (=> d!29487 (= (isStrictlySorted!304 lt!54030) e!69519)))

(declare-fun b!106851 () Bool)

(declare-fun e!69520 () Bool)

(assert (=> b!106851 (= e!69519 e!69520)))

(declare-fun res!53083 () Bool)

(assert (=> b!106851 (=> (not res!53083) (not e!69520))))

(assert (=> b!106851 (= res!53083 (bvslt (_1!1215 (h!2235 lt!54030)) (_1!1215 (h!2235 (t!5737 lt!54030)))))))

(declare-fun b!106852 () Bool)

(assert (=> b!106852 (= e!69520 (isStrictlySorted!304 (t!5737 lt!54030)))))

(assert (= (and d!29487 (not res!53082)) b!106851))

(assert (= (and b!106851 res!53083) b!106852))

(declare-fun m!119919 () Bool)

(assert (=> b!106852 m!119919))

(assert (=> d!29019 d!29487))

(declare-fun d!29489 () Bool)

(assert (=> d!29489 (= (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!376 (getValueByKey!155 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4397 () Bool)

(assert (= bs!4397 d!29489))

(assert (=> bs!4397 m!117941))

(declare-fun m!119921 () Bool)

(assert (=> bs!4397 m!119921))

(assert (=> b!105794 d!29489))

(assert (=> b!105794 d!29093))

(declare-fun d!29491 () Bool)

(declare-fun res!53084 () Bool)

(declare-fun e!69521 () Bool)

(assert (=> d!29491 (=> res!53084 e!69521)))

(assert (=> d!29491 (= res!53084 (and ((_ is Cons!1638) (toList!808 lt!54058)) (= (_1!1215 (h!2235 (toList!808 lt!54058))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29491 (= (containsKey!159 (toList!808 lt!54058) #b1000000000000000000000000000000000000000000000000000000000000000) e!69521)))

(declare-fun b!106853 () Bool)

(declare-fun e!69522 () Bool)

(assert (=> b!106853 (= e!69521 e!69522)))

(declare-fun res!53085 () Bool)

(assert (=> b!106853 (=> (not res!53085) (not e!69522))))

(assert (=> b!106853 (= res!53085 (and (or (not ((_ is Cons!1638) (toList!808 lt!54058))) (bvsle (_1!1215 (h!2235 (toList!808 lt!54058))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1638) (toList!808 lt!54058)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54058))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!106854 () Bool)

(assert (=> b!106854 (= e!69522 (containsKey!159 (t!5737 (toList!808 lt!54058)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29491 (not res!53084)) b!106853))

(assert (= (and b!106853 res!53085) b!106854))

(declare-fun m!119923 () Bool)

(assert (=> b!106854 m!119923))

(assert (=> d!28879 d!29491))

(declare-fun d!29493 () Bool)

(declare-fun res!53086 () Bool)

(declare-fun e!69523 () Bool)

(assert (=> d!29493 (=> res!53086 e!69523)))

(assert (=> d!29493 (= res!53086 (and ((_ is Cons!1638) (toList!808 lt!54063)) (= (_1!1215 (h!2235 (toList!808 lt!54063))) (_1!1215 lt!53818))))))

(assert (=> d!29493 (= (containsKey!159 (toList!808 lt!54063) (_1!1215 lt!53818)) e!69523)))

(declare-fun b!106855 () Bool)

(declare-fun e!69524 () Bool)

(assert (=> b!106855 (= e!69523 e!69524)))

(declare-fun res!53087 () Bool)

(assert (=> b!106855 (=> (not res!53087) (not e!69524))))

(assert (=> b!106855 (= res!53087 (and (or (not ((_ is Cons!1638) (toList!808 lt!54063))) (bvsle (_1!1215 (h!2235 (toList!808 lt!54063))) (_1!1215 lt!53818))) ((_ is Cons!1638) (toList!808 lt!54063)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54063))) (_1!1215 lt!53818))))))

(declare-fun b!106856 () Bool)

(assert (=> b!106856 (= e!69524 (containsKey!159 (t!5737 (toList!808 lt!54063)) (_1!1215 lt!53818)))))

(assert (= (and d!29493 (not res!53086)) b!106855))

(assert (= (and b!106855 res!53087) b!106856))

(declare-fun m!119925 () Bool)

(assert (=> b!106856 m!119925))

(assert (=> d!28971 d!29493))

(declare-fun b!106858 () Bool)

(declare-fun e!69525 () Option!161)

(declare-fun e!69526 () Option!161)

(assert (=> b!106858 (= e!69525 e!69526)))

(declare-fun c!18722 () Bool)

(assert (=> b!106858 (= c!18722 (and ((_ is Cons!1638) (toList!808 lt!54137)) (not (= (_1!1215 (h!2235 (toList!808 lt!54137))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun d!29495 () Bool)

(declare-fun c!18721 () Bool)

(assert (=> d!29495 (= c!18721 (and ((_ is Cons!1638) (toList!808 lt!54137)) (= (_1!1215 (h!2235 (toList!808 lt!54137))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!29495 (= (getValueByKey!155 (toList!808 lt!54137) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) e!69525)))

(declare-fun b!106859 () Bool)

(assert (=> b!106859 (= e!69526 (getValueByKey!155 (t!5737 (toList!808 lt!54137)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!106857 () Bool)

(assert (=> b!106857 (= e!69525 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54137)))))))

(declare-fun b!106860 () Bool)

(assert (=> b!106860 (= e!69526 None!159)))

(assert (= (and d!29495 c!18721) b!106857))

(assert (= (and d!29495 (not c!18721)) b!106858))

(assert (= (and b!106858 c!18722) b!106859))

(assert (= (and b!106858 (not c!18722)) b!106860))

(declare-fun m!119927 () Bool)

(assert (=> b!106859 m!119927))

(assert (=> b!105852 d!29495))

(declare-fun d!29497 () Bool)

(assert (=> d!29497 (isDefined!109 (getValueByKey!155 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun lt!54774 () Unit!3250)

(assert (=> d!29497 (= lt!54774 (choose!667 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun e!69527 () Bool)

(assert (=> d!29497 e!69527))

(declare-fun res!53088 () Bool)

(assert (=> d!29497 (=> (not res!53088) (not e!69527))))

(assert (=> d!29497 (= res!53088 (isStrictlySorted!304 (toList!808 call!11137)))))

(assert (=> d!29497 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) lt!54774)))

(declare-fun b!106861 () Bool)

(assert (=> b!106861 (= e!69527 (containsKey!159 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (= (and d!29497 res!53088) b!106861))

(assert (=> d!29497 m!117519))

(assert (=> d!29497 m!118267))

(assert (=> d!29497 m!118267))

(assert (=> d!29497 m!118269))

(assert (=> d!29497 m!117519))

(declare-fun m!119929 () Bool)

(assert (=> d!29497 m!119929))

(declare-fun m!119931 () Bool)

(assert (=> d!29497 m!119931))

(assert (=> b!106861 m!117519))

(assert (=> b!106861 m!118263))

(assert (=> b!105996 d!29497))

(assert (=> b!105996 d!29277))

(assert (=> b!105996 d!29279))

(declare-fun d!29499 () Bool)

(declare-fun e!69529 () Bool)

(assert (=> d!29499 e!69529))

(declare-fun res!53089 () Bool)

(assert (=> d!29499 (=> res!53089 e!69529)))

(declare-fun lt!54775 () Bool)

(assert (=> d!29499 (= res!53089 (not lt!54775))))

(declare-fun lt!54778 () Bool)

(assert (=> d!29499 (= lt!54775 lt!54778)))

(declare-fun lt!54777 () Unit!3250)

(declare-fun e!69528 () Unit!3250)

(assert (=> d!29499 (= lt!54777 e!69528)))

(declare-fun c!18723 () Bool)

(assert (=> d!29499 (= c!18723 lt!54778)))

(assert (=> d!29499 (= lt!54778 (containsKey!159 (toList!808 (getCurrentListMap!484 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938))))))

(assert (=> d!29499 (= (contains!829 (getCurrentListMap!484 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938))) lt!54775)))

(declare-fun b!106862 () Bool)

(declare-fun lt!54776 () Unit!3250)

(assert (=> b!106862 (= e!69528 lt!54776)))

(assert (=> b!106862 (= lt!54776 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (getCurrentListMap!484 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938))))))

(assert (=> b!106862 (isDefined!109 (getValueByKey!155 (toList!808 (getCurrentListMap!484 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938))))))

(declare-fun b!106863 () Bool)

(declare-fun Unit!3310 () Unit!3250)

(assert (=> b!106863 (= e!69528 Unit!3310)))

(declare-fun b!106864 () Bool)

(assert (=> b!106864 (= e!69529 (isDefined!109 (getValueByKey!155 (toList!808 (getCurrentListMap!484 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!53938)))))))

(assert (= (and d!29499 c!18723) b!106862))

(assert (= (and d!29499 (not c!18723)) b!106863))

(assert (= (and d!29499 (not res!53089)) b!106864))

(assert (=> d!29499 m!117659))

(declare-fun m!119933 () Bool)

(assert (=> d!29499 m!119933))

(assert (=> b!106862 m!117659))

(declare-fun m!119935 () Bool)

(assert (=> b!106862 m!119935))

(assert (=> b!106862 m!117659))

(declare-fun m!119937 () Bool)

(assert (=> b!106862 m!119937))

(assert (=> b!106862 m!119937))

(declare-fun m!119939 () Bool)

(assert (=> b!106862 m!119939))

(assert (=> b!106864 m!117659))

(assert (=> b!106864 m!119937))

(assert (=> b!106864 m!119937))

(assert (=> b!106864 m!119939))

(assert (=> b!105971 d!29499))

(declare-fun b!106865 () Bool)

(declare-fun e!69538 () Bool)

(declare-fun e!69541 () Bool)

(assert (=> b!106865 (= e!69538 e!69541)))

(declare-fun res!53096 () Bool)

(declare-fun call!11308 () Bool)

(assert (=> b!106865 (= res!53096 call!11308)))

(assert (=> b!106865 (=> (not res!53096) (not e!69541))))

(declare-fun bm!11299 () Bool)

(declare-fun call!11302 () ListLongMap!1585)

(assert (=> bm!11299 (= call!11302 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bm!11300 () Bool)

(declare-fun call!11306 () ListLongMap!1585)

(assert (=> bm!11300 (= call!11306 call!11302)))

(declare-fun b!106867 () Bool)

(declare-fun e!69533 () Bool)

(assert (=> b!106867 (= e!69533 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11301 () Bool)

(declare-fun call!11305 () ListLongMap!1585)

(declare-fun call!11307 () ListLongMap!1585)

(assert (=> bm!11301 (= call!11305 call!11307)))

(declare-fun b!106868 () Bool)

(declare-fun e!69536 () Unit!3250)

(declare-fun lt!54784 () Unit!3250)

(assert (=> b!106868 (= e!69536 lt!54784)))

(declare-fun lt!54797 () ListLongMap!1585)

(assert (=> b!106868 (= lt!54797 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54793 () (_ BitVec 64))

(assert (=> b!106868 (= lt!54793 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54796 () (_ BitVec 64))

(assert (=> b!106868 (= lt!54796 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54780 () Unit!3250)

(assert (=> b!106868 (= lt!54780 (addStillContains!74 lt!54797 lt!54793 (zeroValue!2457 newMap!16) lt!54796))))

(assert (=> b!106868 (contains!829 (+!146 lt!54797 (tuple2!2411 lt!54793 (zeroValue!2457 newMap!16))) lt!54796)))

(declare-fun lt!54779 () Unit!3250)

(assert (=> b!106868 (= lt!54779 lt!54780)))

(declare-fun lt!54789 () ListLongMap!1585)

(assert (=> b!106868 (= lt!54789 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54781 () (_ BitVec 64))

(assert (=> b!106868 (= lt!54781 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54787 () (_ BitVec 64))

(assert (=> b!106868 (= lt!54787 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54785 () Unit!3250)

(assert (=> b!106868 (= lt!54785 (addApplyDifferent!74 lt!54789 lt!54781 (minValue!2457 newMap!16) lt!54787))))

(assert (=> b!106868 (= (apply!98 (+!146 lt!54789 (tuple2!2411 lt!54781 (minValue!2457 newMap!16))) lt!54787) (apply!98 lt!54789 lt!54787))))

(declare-fun lt!54795 () Unit!3250)

(assert (=> b!106868 (= lt!54795 lt!54785)))

(declare-fun lt!54792 () ListLongMap!1585)

(assert (=> b!106868 (= lt!54792 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54790 () (_ BitVec 64))

(assert (=> b!106868 (= lt!54790 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54799 () (_ BitVec 64))

(assert (=> b!106868 (= lt!54799 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!54800 () Unit!3250)

(assert (=> b!106868 (= lt!54800 (addApplyDifferent!74 lt!54792 lt!54790 (zeroValue!2457 newMap!16) lt!54799))))

(assert (=> b!106868 (= (apply!98 (+!146 lt!54792 (tuple2!2411 lt!54790 (zeroValue!2457 newMap!16))) lt!54799) (apply!98 lt!54792 lt!54799))))

(declare-fun lt!54786 () Unit!3250)

(assert (=> b!106868 (= lt!54786 lt!54800)))

(declare-fun lt!54788 () ListLongMap!1585)

(assert (=> b!106868 (= lt!54788 (getCurrentListMapNoExtraKeys!113 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54798 () (_ BitVec 64))

(assert (=> b!106868 (= lt!54798 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54783 () (_ BitVec 64))

(assert (=> b!106868 (= lt!54783 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!106868 (= lt!54784 (addApplyDifferent!74 lt!54788 lt!54798 (minValue!2457 newMap!16) lt!54783))))

(assert (=> b!106868 (= (apply!98 (+!146 lt!54788 (tuple2!2411 lt!54798 (minValue!2457 newMap!16))) lt!54783) (apply!98 lt!54788 lt!54783))))

(declare-fun b!106869 () Bool)

(declare-fun e!69537 () Bool)

(assert (=> b!106869 (= e!69537 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!106870 () Bool)

(declare-fun lt!54791 () ListLongMap!1585)

(assert (=> b!106870 (= e!69541 (= (apply!98 lt!54791 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!106871 () Bool)

(declare-fun e!69540 () Bool)

(declare-fun e!69534 () Bool)

(assert (=> b!106871 (= e!69540 e!69534)))

(declare-fun res!53094 () Bool)

(declare-fun call!11304 () Bool)

(assert (=> b!106871 (= res!53094 call!11304)))

(assert (=> b!106871 (=> (not res!53094) (not e!69534))))

(declare-fun b!106872 () Bool)

(declare-fun res!53095 () Bool)

(declare-fun e!69542 () Bool)

(assert (=> b!106872 (=> (not res!53095) (not e!69542))))

(assert (=> b!106872 (= res!53095 e!69540)))

(declare-fun c!18729 () Bool)

(assert (=> b!106872 (= c!18729 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!106873 () Bool)

(declare-fun c!18725 () Bool)

(assert (=> b!106873 (= c!18725 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69531 () ListLongMap!1585)

(declare-fun e!69539 () ListLongMap!1585)

(assert (=> b!106873 (= e!69531 e!69539)))

(declare-fun b!106874 () Bool)

(declare-fun res!53092 () Bool)

(assert (=> b!106874 (=> (not res!53092) (not e!69542))))

(declare-fun e!69532 () Bool)

(assert (=> b!106874 (= res!53092 e!69532)))

(declare-fun res!53098 () Bool)

(assert (=> b!106874 (=> res!53098 e!69532)))

(assert (=> b!106874 (= res!53098 (not e!69537))))

(declare-fun res!53093 () Bool)

(assert (=> b!106874 (=> (not res!53093) (not e!69537))))

(assert (=> b!106874 (= res!53093 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106875 () Bool)

(declare-fun e!69535 () Bool)

(assert (=> b!106875 (= e!69532 e!69535)))

(declare-fun res!53091 () Bool)

(assert (=> b!106875 (=> (not res!53091) (not e!69535))))

(assert (=> b!106875 (= res!53091 (contains!829 lt!54791 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!106875 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106876 () Bool)

(assert (=> b!106876 (= e!69539 call!11305)))

(declare-fun bm!11302 () Bool)

(assert (=> bm!11302 (= call!11304 (contains!829 lt!54791 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!29501 () Bool)

(assert (=> d!29501 e!69542))

(declare-fun res!53097 () Bool)

(assert (=> d!29501 (=> (not res!53097) (not e!69542))))

(assert (=> d!29501 (= res!53097 (or (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))))

(declare-fun lt!54782 () ListLongMap!1585)

(assert (=> d!29501 (= lt!54791 lt!54782)))

(declare-fun lt!54794 () Unit!3250)

(assert (=> d!29501 (= lt!54794 e!69536)))

(declare-fun c!18727 () Bool)

(assert (=> d!29501 (= c!18727 e!69533)))

(declare-fun res!53090 () Bool)

(assert (=> d!29501 (=> (not res!53090) (not e!69533))))

(assert (=> d!29501 (= res!53090 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun e!69530 () ListLongMap!1585)

(assert (=> d!29501 (= lt!54782 e!69530)))

(declare-fun c!18728 () Bool)

(assert (=> d!29501 (= c!18728 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29501 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29501 (= (getCurrentListMap!484 (_keys!4288 newMap!16) lt!53949 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54791)))

(declare-fun b!106866 () Bool)

(declare-fun Unit!3311 () Unit!3250)

(assert (=> b!106866 (= e!69536 Unit!3311)))

(declare-fun b!106877 () Bool)

(assert (=> b!106877 (= e!69530 e!69531)))

(declare-fun c!18724 () Bool)

(assert (=> b!106877 (= c!18724 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!106878 () Bool)

(assert (=> b!106878 (= e!69542 e!69538)))

(declare-fun c!18726 () Bool)

(assert (=> b!106878 (= c!18726 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11303 () Bool)

(assert (=> bm!11303 (= call!11308 (contains!829 lt!54791 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106879 () Bool)

(assert (=> b!106879 (= e!69531 call!11305)))

(declare-fun call!11303 () ListLongMap!1585)

(declare-fun bm!11304 () Bool)

(assert (=> bm!11304 (= call!11307 (+!146 (ite c!18728 call!11302 (ite c!18724 call!11306 call!11303)) (ite (or c!18728 c!18724) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!106880 () Bool)

(assert (=> b!106880 (= e!69535 (= (apply!98 lt!54791 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 lt!53949) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106880 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 lt!53949)))))

(assert (=> b!106880 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106881 () Bool)

(assert (=> b!106881 (= e!69540 (not call!11304))))

(declare-fun b!106882 () Bool)

(assert (=> b!106882 (= e!69538 (not call!11308))))

(declare-fun b!106883 () Bool)

(assert (=> b!106883 (= e!69539 call!11303)))

(declare-fun bm!11305 () Bool)

(assert (=> bm!11305 (= call!11303 call!11306)))

(declare-fun b!106884 () Bool)

(assert (=> b!106884 (= e!69534 (= (apply!98 lt!54791 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun b!106885 () Bool)

(assert (=> b!106885 (= e!69530 (+!146 call!11307 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!29501 c!18728) b!106885))

(assert (= (and d!29501 (not c!18728)) b!106877))

(assert (= (and b!106877 c!18724) b!106879))

(assert (= (and b!106877 (not c!18724)) b!106873))

(assert (= (and b!106873 c!18725) b!106876))

(assert (= (and b!106873 (not c!18725)) b!106883))

(assert (= (or b!106876 b!106883) bm!11305))

(assert (= (or b!106879 bm!11305) bm!11300))

(assert (= (or b!106879 b!106876) bm!11301))

(assert (= (or b!106885 bm!11300) bm!11299))

(assert (= (or b!106885 bm!11301) bm!11304))

(assert (= (and d!29501 res!53090) b!106867))

(assert (= (and d!29501 c!18727) b!106868))

(assert (= (and d!29501 (not c!18727)) b!106866))

(assert (= (and d!29501 res!53097) b!106874))

(assert (= (and b!106874 res!53093) b!106869))

(assert (= (and b!106874 (not res!53098)) b!106875))

(assert (= (and b!106875 res!53091) b!106880))

(assert (= (and b!106874 res!53092) b!106872))

(assert (= (and b!106872 c!18729) b!106871))

(assert (= (and b!106872 (not c!18729)) b!106881))

(assert (= (and b!106871 res!53094) b!106884))

(assert (= (or b!106871 b!106881) bm!11302))

(assert (= (and b!106872 res!53095) b!106878))

(assert (= (and b!106878 c!18726) b!106865))

(assert (= (and b!106878 (not c!18726)) b!106882))

(assert (= (and b!106865 res!53096) b!106870))

(assert (= (or b!106865 b!106882) bm!11303))

(declare-fun b_lambda!4799 () Bool)

(assert (=> (not b_lambda!4799) (not b!106880)))

(assert (=> b!106880 t!5744))

(declare-fun b_and!6613 () Bool)

(assert (= b_and!6609 (and (=> t!5744 result!3475) b_and!6613)))

(assert (=> b!106880 t!5746))

(declare-fun b_and!6615 () Bool)

(assert (= b_and!6611 (and (=> t!5746 result!3477) b_and!6615)))

(assert (=> b!106880 m!117859))

(declare-fun m!119941 () Bool)

(assert (=> b!106880 m!119941))

(assert (=> b!106880 m!118103))

(declare-fun m!119943 () Bool)

(assert (=> b!106880 m!119943))

(assert (=> b!106880 m!117859))

(declare-fun m!119945 () Bool)

(assert (=> b!106880 m!119945))

(assert (=> b!106880 m!119941))

(assert (=> b!106880 m!118103))

(declare-fun m!119947 () Bool)

(assert (=> bm!11303 m!119947))

(declare-fun m!119949 () Bool)

(assert (=> bm!11304 m!119949))

(declare-fun m!119951 () Bool)

(assert (=> b!106885 m!119951))

(assert (=> d!29501 m!117867))

(assert (=> b!106867 m!117859))

(assert (=> b!106867 m!117859))

(assert (=> b!106867 m!117861))

(declare-fun m!119953 () Bool)

(assert (=> b!106870 m!119953))

(assert (=> b!106869 m!117859))

(assert (=> b!106869 m!117859))

(assert (=> b!106869 m!117861))

(declare-fun m!119955 () Bool)

(assert (=> b!106884 m!119955))

(declare-fun m!119957 () Bool)

(assert (=> bm!11302 m!119957))

(declare-fun m!119959 () Bool)

(assert (=> bm!11299 m!119959))

(assert (=> b!106875 m!117859))

(assert (=> b!106875 m!117859))

(declare-fun m!119961 () Bool)

(assert (=> b!106875 m!119961))

(declare-fun m!119963 () Bool)

(assert (=> b!106868 m!119963))

(declare-fun m!119965 () Bool)

(assert (=> b!106868 m!119965))

(assert (=> b!106868 m!119959))

(assert (=> b!106868 m!117859))

(declare-fun m!119967 () Bool)

(assert (=> b!106868 m!119967))

(declare-fun m!119969 () Bool)

(assert (=> b!106868 m!119969))

(declare-fun m!119971 () Bool)

(assert (=> b!106868 m!119971))

(declare-fun m!119973 () Bool)

(assert (=> b!106868 m!119973))

(declare-fun m!119975 () Bool)

(assert (=> b!106868 m!119975))

(declare-fun m!119977 () Bool)

(assert (=> b!106868 m!119977))

(declare-fun m!119979 () Bool)

(assert (=> b!106868 m!119979))

(assert (=> b!106868 m!119973))

(declare-fun m!119981 () Bool)

(assert (=> b!106868 m!119981))

(declare-fun m!119983 () Bool)

(assert (=> b!106868 m!119983))

(declare-fun m!119985 () Bool)

(assert (=> b!106868 m!119985))

(assert (=> b!106868 m!119981))

(declare-fun m!119987 () Bool)

(assert (=> b!106868 m!119987))

(assert (=> b!106868 m!119977))

(declare-fun m!119989 () Bool)

(assert (=> b!106868 m!119989))

(assert (=> b!106868 m!119967))

(declare-fun m!119991 () Bool)

(assert (=> b!106868 m!119991))

(assert (=> b!105971 d!29501))

(declare-fun d!29503 () Bool)

(declare-fun e!69543 () Bool)

(assert (=> d!29503 e!69543))

(declare-fun res!53100 () Bool)

(assert (=> d!29503 (=> (not res!53100) (not e!69543))))

(declare-fun lt!54803 () ListLongMap!1585)

(assert (=> d!29503 (= res!53100 (contains!829 lt!54803 (_1!1215 (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(declare-fun lt!54802 () List!1642)

(assert (=> d!29503 (= lt!54803 (ListLongMap!1586 lt!54802))))

(declare-fun lt!54804 () Unit!3250)

(declare-fun lt!54801 () Unit!3250)

(assert (=> d!29503 (= lt!54804 lt!54801)))

(assert (=> d!29503 (= (getValueByKey!155 lt!54802 (_1!1215 (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29503 (= lt!54801 (lemmaContainsTupThenGetReturnValue!73 lt!54802 (_1!1215 (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (_2!1215 (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29503 (= lt!54802 (insertStrictlySorted!75 (toList!808 (ite c!18469 call!11194 (ite c!18465 call!11198 call!11195))) (_1!1215 (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (_2!1215 (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(assert (=> d!29503 (= (+!146 (ite c!18469 call!11194 (ite c!18465 call!11198 call!11195)) (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) lt!54803)))

(declare-fun b!106886 () Bool)

(declare-fun res!53099 () Bool)

(assert (=> b!106886 (=> (not res!53099) (not e!69543))))

(assert (=> b!106886 (= res!53099 (= (getValueByKey!155 (toList!808 lt!54803) (_1!1215 (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))))

(declare-fun b!106887 () Bool)

(assert (=> b!106887 (= e!69543 (contains!830 (toList!808 lt!54803) (ite (or c!18469 c!18465) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (= (and d!29503 res!53100) b!106886))

(assert (= (and b!106886 res!53099) b!106887))

(declare-fun m!119993 () Bool)

(assert (=> d!29503 m!119993))

(declare-fun m!119995 () Bool)

(assert (=> d!29503 m!119995))

(declare-fun m!119997 () Bool)

(assert (=> d!29503 m!119997))

(declare-fun m!119999 () Bool)

(assert (=> d!29503 m!119999))

(declare-fun m!120001 () Bool)

(assert (=> b!106886 m!120001))

(declare-fun m!120003 () Bool)

(assert (=> b!106887 m!120003))

(assert (=> bm!11196 d!29503))

(declare-fun d!29505 () Bool)

(declare-fun e!69545 () Bool)

(assert (=> d!29505 e!69545))

(declare-fun res!53101 () Bool)

(assert (=> d!29505 (=> res!53101 e!69545)))

(declare-fun lt!54805 () Bool)

(assert (=> d!29505 (= res!53101 (not lt!54805))))

(declare-fun lt!54808 () Bool)

(assert (=> d!29505 (= lt!54805 lt!54808)))

(declare-fun lt!54807 () Unit!3250)

(declare-fun e!69544 () Unit!3250)

(assert (=> d!29505 (= lt!54807 e!69544)))

(declare-fun c!18730 () Bool)

(assert (=> d!29505 (= c!18730 lt!54808)))

(assert (=> d!29505 (= lt!54808 (containsKey!159 (toList!808 lt!54229) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29505 (= (contains!829 lt!54229 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54805)))

(declare-fun b!106888 () Bool)

(declare-fun lt!54806 () Unit!3250)

(assert (=> b!106888 (= e!69544 lt!54806)))

(assert (=> b!106888 (= lt!54806 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54229) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106888 (isDefined!109 (getValueByKey!155 (toList!808 lt!54229) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106889 () Bool)

(declare-fun Unit!3312 () Unit!3250)

(assert (=> b!106889 (= e!69544 Unit!3312)))

(declare-fun b!106890 () Bool)

(assert (=> b!106890 (= e!69545 (isDefined!109 (getValueByKey!155 (toList!808 lt!54229) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29505 c!18730) b!106888))

(assert (= (and d!29505 (not c!18730)) b!106889))

(assert (= (and d!29505 (not res!53101)) b!106890))

(declare-fun m!120005 () Bool)

(assert (=> d!29505 m!120005))

(declare-fun m!120007 () Bool)

(assert (=> b!106888 m!120007))

(declare-fun m!120009 () Bool)

(assert (=> b!106888 m!120009))

(assert (=> b!106888 m!120009))

(declare-fun m!120011 () Bool)

(assert (=> b!106888 m!120011))

(assert (=> b!106890 m!120009))

(assert (=> b!106890 m!120009))

(assert (=> b!106890 m!120011))

(assert (=> bm!11205 d!29505))

(declare-fun d!29507 () Bool)

(assert (=> d!29507 (= (isDefined!109 (getValueByKey!155 (toList!808 lt!54038) (_1!1215 lt!53817))) (not (isEmpty!376 (getValueByKey!155 (toList!808 lt!54038) (_1!1215 lt!53817)))))))

(declare-fun bs!4398 () Bool)

(assert (= bs!4398 d!29507))

(assert (=> bs!4398 m!117771))

(declare-fun m!120013 () Bool)

(assert (=> bs!4398 m!120013))

(assert (=> b!106121 d!29507))

(assert (=> b!106121 d!28907))

(declare-fun d!29509 () Bool)

(declare-fun res!53102 () Bool)

(declare-fun e!69546 () Bool)

(assert (=> d!29509 (=> res!53102 e!69546)))

(assert (=> d!29509 (= res!53102 (= (select (arr!2062 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!29509 (= (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!69546)))

(declare-fun b!106891 () Bool)

(declare-fun e!69547 () Bool)

(assert (=> b!106891 (= e!69546 e!69547)))

(declare-fun res!53103 () Bool)

(assert (=> b!106891 (=> (not res!53103) (not e!69547))))

(assert (=> b!106891 (= res!53103 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!106892 () Bool)

(assert (=> b!106892 (= e!69547 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!29509 (not res!53102)) b!106891))

(assert (= (and b!106891 res!53103) b!106892))

(assert (=> d!29509 m!118743))

(assert (=> b!106892 m!117519))

(declare-fun m!120015 () Bool)

(assert (=> b!106892 m!120015))

(assert (=> b!106092 d!29509))

(assert (=> d!28903 d!28901))

(declare-fun d!29511 () Bool)

(assert (=> d!29511 (= (getValueByKey!155 lt!54066 (_1!1215 lt!53817)) (Some!160 (_2!1215 lt!53817)))))

(assert (=> d!29511 true))

(declare-fun _$22!435 () Unit!3250)

(assert (=> d!29511 (= (choose!666 lt!54066 (_1!1215 lt!53817) (_2!1215 lt!53817)) _$22!435)))

(declare-fun bs!4399 () Bool)

(assert (= bs!4399 d!29511))

(assert (=> bs!4399 m!117809))

(assert (=> d!28903 d!29511))

(declare-fun d!29513 () Bool)

(declare-fun res!53104 () Bool)

(declare-fun e!69548 () Bool)

(assert (=> d!29513 (=> res!53104 e!69548)))

(assert (=> d!29513 (= res!53104 (or ((_ is Nil!1639) lt!54066) ((_ is Nil!1639) (t!5737 lt!54066))))))

(assert (=> d!29513 (= (isStrictlySorted!304 lt!54066) e!69548)))

(declare-fun b!106893 () Bool)

(declare-fun e!69549 () Bool)

(assert (=> b!106893 (= e!69548 e!69549)))

(declare-fun res!53105 () Bool)

(assert (=> b!106893 (=> (not res!53105) (not e!69549))))

(assert (=> b!106893 (= res!53105 (bvslt (_1!1215 (h!2235 lt!54066)) (_1!1215 (h!2235 (t!5737 lt!54066)))))))

(declare-fun b!106894 () Bool)

(assert (=> b!106894 (= e!69549 (isStrictlySorted!304 (t!5737 lt!54066)))))

(assert (= (and d!29513 (not res!53104)) b!106893))

(assert (= (and b!106893 res!53105) b!106894))

(declare-fun m!120017 () Bool)

(assert (=> b!106894 m!120017))

(assert (=> d!28903 d!29513))

(declare-fun d!29515 () Bool)

(declare-fun e!69551 () Bool)

(assert (=> d!29515 e!69551))

(declare-fun res!53106 () Bool)

(assert (=> d!29515 (=> res!53106 e!69551)))

(declare-fun lt!54809 () Bool)

(assert (=> d!29515 (= res!53106 (not lt!54809))))

(declare-fun lt!54812 () Bool)

(assert (=> d!29515 (= lt!54809 lt!54812)))

(declare-fun lt!54811 () Unit!3250)

(declare-fun e!69550 () Unit!3250)

(assert (=> d!29515 (= lt!54811 e!69550)))

(declare-fun c!18731 () Bool)

(assert (=> d!29515 (= c!18731 lt!54812)))

(assert (=> d!29515 (= lt!54812 (containsKey!159 (toList!808 lt!54141) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!29515 (= (contains!829 lt!54141 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54809)))

(declare-fun b!106895 () Bool)

(declare-fun lt!54810 () Unit!3250)

(assert (=> b!106895 (= e!69550 lt!54810)))

(assert (=> b!106895 (= lt!54810 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54141) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> b!106895 (isDefined!109 (getValueByKey!155 (toList!808 lt!54141) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106896 () Bool)

(declare-fun Unit!3313 () Unit!3250)

(assert (=> b!106896 (= e!69550 Unit!3313)))

(declare-fun b!106897 () Bool)

(assert (=> b!106897 (= e!69551 (isDefined!109 (getValueByKey!155 (toList!808 lt!54141) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29515 c!18731) b!106895))

(assert (= (and d!29515 (not c!18731)) b!106896))

(assert (= (and d!29515 (not res!53106)) b!106897))

(declare-fun m!120019 () Bool)

(assert (=> d!29515 m!120019))

(declare-fun m!120021 () Bool)

(assert (=> b!106895 m!120021))

(assert (=> b!106895 m!118023))

(assert (=> b!106895 m!118023))

(declare-fun m!120023 () Bool)

(assert (=> b!106895 m!120023))

(assert (=> b!106897 m!118023))

(assert (=> b!106897 m!118023))

(assert (=> b!106897 m!120023))

(assert (=> d!28885 d!29515))

(declare-fun b!106899 () Bool)

(declare-fun e!69552 () Option!161)

(declare-fun e!69553 () Option!161)

(assert (=> b!106899 (= e!69552 e!69553)))

(declare-fun c!18733 () Bool)

(assert (=> b!106899 (= c!18733 (and ((_ is Cons!1638) lt!54140) (not (= (_1!1215 (h!2235 lt!54140)) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun d!29517 () Bool)

(declare-fun c!18732 () Bool)

(assert (=> d!29517 (= c!18732 (and ((_ is Cons!1638) lt!54140) (= (_1!1215 (h!2235 lt!54140)) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29517 (= (getValueByKey!155 lt!54140 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69552)))

(declare-fun b!106900 () Bool)

(assert (=> b!106900 (= e!69553 (getValueByKey!155 (t!5737 lt!54140) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106898 () Bool)

(assert (=> b!106898 (= e!69552 (Some!160 (_2!1215 (h!2235 lt!54140))))))

(declare-fun b!106901 () Bool)

(assert (=> b!106901 (= e!69553 None!159)))

(assert (= (and d!29517 c!18732) b!106898))

(assert (= (and d!29517 (not c!18732)) b!106899))

(assert (= (and b!106899 c!18733) b!106900))

(assert (= (and b!106899 (not c!18733)) b!106901))

(declare-fun m!120025 () Bool)

(assert (=> b!106900 m!120025))

(assert (=> d!28885 d!29517))

(declare-fun d!29519 () Bool)

(assert (=> d!29519 (= (getValueByKey!155 lt!54140 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!54813 () Unit!3250)

(assert (=> d!29519 (= lt!54813 (choose!666 lt!54140 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun e!69554 () Bool)

(assert (=> d!29519 e!69554))

(declare-fun res!53107 () Bool)

(assert (=> d!29519 (=> (not res!53107) (not e!69554))))

(assert (=> d!29519 (= res!53107 (isStrictlySorted!304 lt!54140))))

(assert (=> d!29519 (= (lemmaContainsTupThenGetReturnValue!73 lt!54140 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54813)))

(declare-fun b!106902 () Bool)

(declare-fun res!53108 () Bool)

(assert (=> b!106902 (=> (not res!53108) (not e!69554))))

(assert (=> b!106902 (= res!53108 (containsKey!159 lt!54140 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106903 () Bool)

(assert (=> b!106903 (= e!69554 (contains!830 lt!54140 (tuple2!2411 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29519 res!53107) b!106902))

(assert (= (and b!106902 res!53108) b!106903))

(assert (=> d!29519 m!118017))

(declare-fun m!120027 () Bool)

(assert (=> d!29519 m!120027))

(declare-fun m!120029 () Bool)

(assert (=> d!29519 m!120029))

(declare-fun m!120031 () Bool)

(assert (=> b!106902 m!120031))

(declare-fun m!120033 () Bool)

(assert (=> b!106903 m!120033))

(assert (=> d!28885 d!29519))

(declare-fun d!29521 () Bool)

(declare-fun e!69556 () Bool)

(assert (=> d!29521 e!69556))

(declare-fun res!53109 () Bool)

(assert (=> d!29521 (=> (not res!53109) (not e!69556))))

(declare-fun lt!54814 () List!1642)

(assert (=> d!29521 (= res!53109 (isStrictlySorted!304 lt!54814))))

(declare-fun e!69555 () List!1642)

(assert (=> d!29521 (= lt!54814 e!69555)))

(declare-fun c!18734 () Bool)

(assert (=> d!29521 (= c!18734 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) (bvslt (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29521 (isStrictlySorted!304 (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!29521 (= (insertStrictlySorted!75 (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!54814)))

(declare-fun b!106904 () Bool)

(declare-fun e!69558 () List!1642)

(declare-fun call!11311 () List!1642)

(assert (=> b!106904 (= e!69558 call!11311)))

(declare-fun c!18735 () Bool)

(declare-fun b!106905 () Bool)

(assert (=> b!106905 (= c!18735 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) (bvsgt (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun e!69557 () List!1642)

(assert (=> b!106905 (= e!69557 e!69558)))

(declare-fun b!106906 () Bool)

(declare-fun call!11309 () List!1642)

(assert (=> b!106906 (= e!69557 call!11309)))

(declare-fun b!106907 () Bool)

(declare-fun call!11310 () List!1642)

(assert (=> b!106907 (= e!69555 call!11310)))

(declare-fun b!106908 () Bool)

(declare-fun res!53110 () Bool)

(assert (=> b!106908 (=> (not res!53110) (not e!69556))))

(assert (=> b!106908 (= res!53110 (containsKey!159 lt!54814 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun bm!11306 () Bool)

(assert (=> bm!11306 (= call!11309 call!11310)))

(declare-fun c!18736 () Bool)

(declare-fun e!69559 () List!1642)

(declare-fun b!106909 () Bool)

(assert (=> b!106909 (= e!69559 (ite c!18736 (t!5737 (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) (ite c!18735 (Cons!1638 (h!2235 (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) (t!5737 (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))) Nil!1639)))))

(declare-fun bm!11307 () Bool)

(assert (=> bm!11307 (= call!11310 ($colon$colon!80 e!69559 (ite c!18734 (h!2235 (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) (tuple2!2411 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun c!18737 () Bool)

(assert (=> bm!11307 (= c!18737 c!18734)))

(declare-fun b!106910 () Bool)

(assert (=> b!106910 (= e!69559 (insertStrictlySorted!75 (t!5737 (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!106911 () Bool)

(assert (=> b!106911 (= e!69556 (contains!830 lt!54814 (tuple2!2411 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun bm!11308 () Bool)

(assert (=> bm!11308 (= call!11311 call!11309)))

(declare-fun b!106912 () Bool)

(assert (=> b!106912 (= e!69558 call!11311)))

(declare-fun b!106913 () Bool)

(assert (=> b!106913 (= e!69555 e!69557)))

(assert (=> b!106913 (= c!18736 (and ((_ is Cons!1638) (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) (= (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29521 c!18734) b!106907))

(assert (= (and d!29521 (not c!18734)) b!106913))

(assert (= (and b!106913 c!18736) b!106906))

(assert (= (and b!106913 (not c!18736)) b!106905))

(assert (= (and b!106905 c!18735) b!106912))

(assert (= (and b!106905 (not c!18735)) b!106904))

(assert (= (or b!106912 b!106904) bm!11308))

(assert (= (or b!106906 bm!11308) bm!11306))

(assert (= (or b!106907 bm!11306) bm!11307))

(assert (= (and bm!11307 c!18737) b!106910))

(assert (= (and bm!11307 (not c!18737)) b!106909))

(assert (= (and d!29521 res!53109) b!106908))

(assert (= (and b!106908 res!53110) b!106911))

(declare-fun m!120035 () Bool)

(assert (=> b!106911 m!120035))

(declare-fun m!120037 () Bool)

(assert (=> bm!11307 m!120037))

(declare-fun m!120039 () Bool)

(assert (=> b!106908 m!120039))

(declare-fun m!120041 () Bool)

(assert (=> b!106910 m!120041))

(declare-fun m!120043 () Bool)

(assert (=> d!29521 m!120043))

(declare-fun m!120045 () Bool)

(assert (=> d!29521 m!120045))

(assert (=> d!28885 d!29521))

(assert (=> b!105779 d!29061))

(declare-fun b!106915 () Bool)

(declare-fun e!69560 () Option!161)

(declare-fun e!69561 () Option!161)

(assert (=> b!106915 (= e!69560 e!69561)))

(declare-fun c!18739 () Bool)

(assert (=> b!106915 (= c!18739 (and ((_ is Cons!1638) (toList!808 lt!54208)) (not (= (_1!1215 (h!2235 (toList!808 lt!54208))) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))))

(declare-fun d!29523 () Bool)

(declare-fun c!18738 () Bool)

(assert (=> d!29523 (= c!18738 (and ((_ is Cons!1638) (toList!808 lt!54208)) (= (_1!1215 (h!2235 (toList!808 lt!54208))) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(assert (=> d!29523 (= (getValueByKey!155 (toList!808 lt!54208) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) e!69560)))

(declare-fun b!106916 () Bool)

(assert (=> b!106916 (= e!69561 (getValueByKey!155 (t!5737 (toList!808 lt!54208)) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun b!106914 () Bool)

(assert (=> b!106914 (= e!69560 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54208)))))))

(declare-fun b!106917 () Bool)

(assert (=> b!106917 (= e!69561 None!159)))

(assert (= (and d!29523 c!18738) b!106914))

(assert (= (and d!29523 (not c!18738)) b!106915))

(assert (= (and b!106915 c!18739) b!106916))

(assert (= (and b!106915 (not c!18739)) b!106917))

(declare-fun m!120047 () Bool)

(assert (=> b!106916 m!120047))

(assert (=> b!105965 d!29523))

(declare-fun d!29525 () Bool)

(assert (=> d!29525 (= (isDefined!109 (getValueByKey!155 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))) (not (isEmpty!376 (getValueByKey!155 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))))

(declare-fun bs!4400 () Bool)

(assert (= bs!4400 d!29525))

(assert (=> bs!4400 m!117925))

(declare-fun m!120049 () Bool)

(assert (=> bs!4400 m!120049))

(assert (=> b!105788 d!29525))

(declare-fun b!106919 () Bool)

(declare-fun e!69562 () Option!161)

(declare-fun e!69563 () Option!161)

(assert (=> b!106919 (= e!69562 e!69563)))

(declare-fun c!18741 () Bool)

(assert (=> b!106919 (= c!18741 (and ((_ is Cons!1638) (toList!808 call!11131)) (not (= (_1!1215 (h!2235 (toList!808 call!11131))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))))

(declare-fun c!18740 () Bool)

(declare-fun d!29527 () Bool)

(assert (=> d!29527 (= c!18740 (and ((_ is Cons!1638) (toList!808 call!11131)) (= (_1!1215 (h!2235 (toList!808 call!11131))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (=> d!29527 (= (getValueByKey!155 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) e!69562)))

(declare-fun b!106920 () Bool)

(assert (=> b!106920 (= e!69563 (getValueByKey!155 (t!5737 (toList!808 call!11131)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!106918 () Bool)

(assert (=> b!106918 (= e!69562 (Some!160 (_2!1215 (h!2235 (toList!808 call!11131)))))))

(declare-fun b!106921 () Bool)

(assert (=> b!106921 (= e!69563 None!159)))

(assert (= (and d!29527 c!18740) b!106918))

(assert (= (and d!29527 (not c!18740)) b!106919))

(assert (= (and b!106919 c!18741) b!106920))

(assert (= (and b!106919 (not c!18741)) b!106921))

(assert (=> b!106920 m!117519))

(declare-fun m!120051 () Bool)

(assert (=> b!106920 m!120051))

(assert (=> b!105788 d!29527))

(declare-fun d!29529 () Bool)

(declare-fun e!69565 () Bool)

(assert (=> d!29529 e!69565))

(declare-fun res!53111 () Bool)

(assert (=> d!29529 (=> res!53111 e!69565)))

(declare-fun lt!54815 () Bool)

(assert (=> d!29529 (= res!53111 (not lt!54815))))

(declare-fun lt!54818 () Bool)

(assert (=> d!29529 (= lt!54815 lt!54818)))

(declare-fun lt!54817 () Unit!3250)

(declare-fun e!69564 () Unit!3250)

(assert (=> d!29529 (= lt!54817 e!69564)))

(declare-fun c!18742 () Bool)

(assert (=> d!29529 (= c!18742 lt!54818)))

(assert (=> d!29529 (= lt!54818 (containsKey!159 (toList!808 lt!54262) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29529 (= (contains!829 lt!54262 #b0000000000000000000000000000000000000000000000000000000000000000) lt!54815)))

(declare-fun b!106922 () Bool)

(declare-fun lt!54816 () Unit!3250)

(assert (=> b!106922 (= e!69564 lt!54816)))

(assert (=> b!106922 (= lt!54816 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54262) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!106922 (isDefined!109 (getValueByKey!155 (toList!808 lt!54262) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!106923 () Bool)

(declare-fun Unit!3314 () Unit!3250)

(assert (=> b!106923 (= e!69564 Unit!3314)))

(declare-fun b!106924 () Bool)

(assert (=> b!106924 (= e!69565 (isDefined!109 (getValueByKey!155 (toList!808 lt!54262) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29529 c!18742) b!106922))

(assert (= (and d!29529 (not c!18742)) b!106923))

(assert (= (and d!29529 (not res!53111)) b!106924))

(declare-fun m!120053 () Bool)

(assert (=> d!29529 m!120053))

(declare-fun m!120055 () Bool)

(assert (=> b!106922 m!120055))

(assert (=> b!106922 m!119741))

(assert (=> b!106922 m!119741))

(declare-fun m!120057 () Bool)

(assert (=> b!106922 m!120057))

(assert (=> b!106924 m!119741))

(assert (=> b!106924 m!119741))

(assert (=> b!106924 m!120057))

(assert (=> bm!11211 d!29529))

(declare-fun b!106926 () Bool)

(declare-fun e!69566 () Option!161)

(declare-fun e!69567 () Option!161)

(assert (=> b!106926 (= e!69566 e!69567)))

(declare-fun c!18744 () Bool)

(assert (=> b!106926 (= c!18744 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!54063))) (not (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!54063)))) (_1!1215 lt!53818)))))))

(declare-fun d!29531 () Bool)

(declare-fun c!18743 () Bool)

(assert (=> d!29531 (= c!18743 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!54063))) (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!54063)))) (_1!1215 lt!53818))))))

(assert (=> d!29531 (= (getValueByKey!155 (t!5737 (toList!808 lt!54063)) (_1!1215 lt!53818)) e!69566)))

(declare-fun b!106927 () Bool)

(assert (=> b!106927 (= e!69567 (getValueByKey!155 (t!5737 (t!5737 (toList!808 lt!54063))) (_1!1215 lt!53818)))))

(declare-fun b!106925 () Bool)

(assert (=> b!106925 (= e!69566 (Some!160 (_2!1215 (h!2235 (t!5737 (toList!808 lt!54063))))))))

(declare-fun b!106928 () Bool)

(assert (=> b!106928 (= e!69567 None!159)))

(assert (= (and d!29531 c!18743) b!106925))

(assert (= (and d!29531 (not c!18743)) b!106926))

(assert (= (and b!106926 c!18744) b!106927))

(assert (= (and b!106926 (not c!18744)) b!106928))

(declare-fun m!120059 () Bool)

(assert (=> b!106927 m!120059))

(assert (=> b!105841 d!29531))

(declare-fun d!29533 () Bool)

(assert (=> d!29533 (isDefined!109 (getValueByKey!155 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!54819 () Unit!3250)

(assert (=> d!29533 (= lt!54819 (choose!667 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!69568 () Bool)

(assert (=> d!29533 e!69568))

(declare-fun res!53112 () Bool)

(assert (=> d!29533 (=> (not res!53112) (not e!69568))))

(assert (=> d!29533 (= res!53112 (isStrictlySorted!304 (toList!808 lt!54058)))))

(assert (=> d!29533 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!54819)))

(declare-fun b!106929 () Bool)

(assert (=> b!106929 (= e!69568 (containsKey!159 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29533 res!53112) b!106929))

(assert (=> d!29533 m!117687))

(assert (=> d!29533 m!117941))

(assert (=> d!29533 m!117941))

(assert (=> d!29533 m!117943))

(assert (=> d!29533 m!117687))

(declare-fun m!120061 () Bool)

(assert (=> d!29533 m!120061))

(assert (=> d!29533 m!118721))

(assert (=> b!106929 m!117687))

(assert (=> b!106929 m!117937))

(assert (=> b!105792 d!29533))

(assert (=> b!105792 d!29489))

(assert (=> b!105792 d!29093))

(declare-fun d!29535 () Bool)

(assert (=> d!29535 (= (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!376 (getValueByKey!155 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4401 () Bool)

(assert (= bs!4401 d!29535))

(assert (=> bs!4401 m!117945))

(declare-fun m!120063 () Bool)

(assert (=> bs!4401 m!120063))

(assert (=> b!106215 d!29535))

(assert (=> b!106215 d!29283))

(declare-fun d!29537 () Bool)

(declare-fun e!69570 () Bool)

(assert (=> d!29537 e!69570))

(declare-fun res!53113 () Bool)

(assert (=> d!29537 (=> (not res!53113) (not e!69570))))

(declare-fun lt!54820 () List!1642)

(assert (=> d!29537 (= res!53113 (isStrictlySorted!304 lt!54820))))

(declare-fun e!69569 () List!1642)

(assert (=> d!29537 (= lt!54820 e!69569)))

(declare-fun c!18745 () Bool)

(assert (=> d!29537 (= c!18745 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!53824))) (bvslt (_1!1215 (h!2235 (t!5737 (toList!808 lt!53824)))) (_1!1215 lt!53818))))))

(assert (=> d!29537 (isStrictlySorted!304 (t!5737 (toList!808 lt!53824)))))

(assert (=> d!29537 (= (insertStrictlySorted!75 (t!5737 (toList!808 lt!53824)) (_1!1215 lt!53818) (_2!1215 lt!53818)) lt!54820)))

(declare-fun b!106930 () Bool)

(declare-fun e!69572 () List!1642)

(declare-fun call!11314 () List!1642)

(assert (=> b!106930 (= e!69572 call!11314)))

(declare-fun b!106931 () Bool)

(declare-fun c!18746 () Bool)

(assert (=> b!106931 (= c!18746 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!53824))) (bvsgt (_1!1215 (h!2235 (t!5737 (toList!808 lt!53824)))) (_1!1215 lt!53818))))))

(declare-fun e!69571 () List!1642)

(assert (=> b!106931 (= e!69571 e!69572)))

(declare-fun b!106932 () Bool)

(declare-fun call!11312 () List!1642)

(assert (=> b!106932 (= e!69571 call!11312)))

(declare-fun b!106933 () Bool)

(declare-fun call!11313 () List!1642)

(assert (=> b!106933 (= e!69569 call!11313)))

(declare-fun b!106934 () Bool)

(declare-fun res!53114 () Bool)

(assert (=> b!106934 (=> (not res!53114) (not e!69570))))

(assert (=> b!106934 (= res!53114 (containsKey!159 lt!54820 (_1!1215 lt!53818)))))

(declare-fun bm!11309 () Bool)

(assert (=> bm!11309 (= call!11312 call!11313)))

(declare-fun e!69573 () List!1642)

(declare-fun c!18747 () Bool)

(declare-fun b!106935 () Bool)

(assert (=> b!106935 (= e!69573 (ite c!18747 (t!5737 (t!5737 (toList!808 lt!53824))) (ite c!18746 (Cons!1638 (h!2235 (t!5737 (toList!808 lt!53824))) (t!5737 (t!5737 (toList!808 lt!53824)))) Nil!1639)))))

(declare-fun bm!11310 () Bool)

(assert (=> bm!11310 (= call!11313 ($colon$colon!80 e!69573 (ite c!18745 (h!2235 (t!5737 (toList!808 lt!53824))) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818)))))))

(declare-fun c!18748 () Bool)

(assert (=> bm!11310 (= c!18748 c!18745)))

(declare-fun b!106936 () Bool)

(assert (=> b!106936 (= e!69573 (insertStrictlySorted!75 (t!5737 (t!5737 (toList!808 lt!53824))) (_1!1215 lt!53818) (_2!1215 lt!53818)))))

(declare-fun b!106937 () Bool)

(assert (=> b!106937 (= e!69570 (contains!830 lt!54820 (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun bm!11311 () Bool)

(assert (=> bm!11311 (= call!11314 call!11312)))

(declare-fun b!106938 () Bool)

(assert (=> b!106938 (= e!69572 call!11314)))

(declare-fun b!106939 () Bool)

(assert (=> b!106939 (= e!69569 e!69571)))

(assert (=> b!106939 (= c!18747 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!53824))) (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!53824)))) (_1!1215 lt!53818))))))

(assert (= (and d!29537 c!18745) b!106933))

(assert (= (and d!29537 (not c!18745)) b!106939))

(assert (= (and b!106939 c!18747) b!106932))

(assert (= (and b!106939 (not c!18747)) b!106931))

(assert (= (and b!106931 c!18746) b!106938))

(assert (= (and b!106931 (not c!18746)) b!106930))

(assert (= (or b!106938 b!106930) bm!11311))

(assert (= (or b!106932 bm!11311) bm!11309))

(assert (= (or b!106933 bm!11309) bm!11310))

(assert (= (and bm!11310 c!18748) b!106936))

(assert (= (and bm!11310 (not c!18748)) b!106935))

(assert (= (and d!29537 res!53113) b!106934))

(assert (= (and b!106934 res!53114) b!106937))

(declare-fun m!120065 () Bool)

(assert (=> b!106937 m!120065))

(declare-fun m!120067 () Bool)

(assert (=> bm!11310 m!120067))

(declare-fun m!120069 () Bool)

(assert (=> b!106934 m!120069))

(declare-fun m!120071 () Bool)

(assert (=> b!106936 m!120071))

(declare-fun m!120073 () Bool)

(assert (=> d!29537 m!120073))

(assert (=> d!29537 m!119517))

(assert (=> b!106158 d!29537))

(declare-fun d!29539 () Bool)

(assert (=> d!29539 (= (apply!98 lt!54229 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1342 (getValueByKey!155 (toList!808 lt!54229) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4402 () Bool)

(assert (= bs!4402 d!29539))

(assert (=> bs!4402 m!120009))

(assert (=> bs!4402 m!120009))

(declare-fun m!120075 () Bool)

(assert (=> bs!4402 m!120075))

(assert (=> b!105977 d!29539))

(declare-fun d!29541 () Bool)

(declare-fun e!69575 () Bool)

(assert (=> d!29541 e!69575))

(declare-fun res!53115 () Bool)

(assert (=> d!29541 (=> res!53115 e!69575)))

(declare-fun lt!54821 () Bool)

(assert (=> d!29541 (= res!53115 (not lt!54821))))

(declare-fun lt!54824 () Bool)

(assert (=> d!29541 (= lt!54821 lt!54824)))

(declare-fun lt!54823 () Unit!3250)

(declare-fun e!69574 () Unit!3250)

(assert (=> d!29541 (= lt!54823 e!69574)))

(declare-fun c!18749 () Bool)

(assert (=> d!29541 (= c!18749 lt!54824)))

(assert (=> d!29541 (= lt!54824 (containsKey!159 (toList!808 lt!54337) (_1!1215 (tuple2!2411 lt!54055 lt!54057))))))

(assert (=> d!29541 (= (contains!829 lt!54337 (_1!1215 (tuple2!2411 lt!54055 lt!54057))) lt!54821)))

(declare-fun b!106940 () Bool)

(declare-fun lt!54822 () Unit!3250)

(assert (=> b!106940 (= e!69574 lt!54822)))

(assert (=> b!106940 (= lt!54822 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54337) (_1!1215 (tuple2!2411 lt!54055 lt!54057))))))

(assert (=> b!106940 (isDefined!109 (getValueByKey!155 (toList!808 lt!54337) (_1!1215 (tuple2!2411 lt!54055 lt!54057))))))

(declare-fun b!106941 () Bool)

(declare-fun Unit!3315 () Unit!3250)

(assert (=> b!106941 (= e!69574 Unit!3315)))

(declare-fun b!106942 () Bool)

(assert (=> b!106942 (= e!69575 (isDefined!109 (getValueByKey!155 (toList!808 lt!54337) (_1!1215 (tuple2!2411 lt!54055 lt!54057)))))))

(assert (= (and d!29541 c!18749) b!106940))

(assert (= (and d!29541 (not c!18749)) b!106941))

(assert (= (and d!29541 (not res!53115)) b!106942))

(declare-fun m!120077 () Bool)

(assert (=> d!29541 m!120077))

(declare-fun m!120079 () Bool)

(assert (=> b!106940 m!120079))

(assert (=> b!106940 m!118527))

(assert (=> b!106940 m!118527))

(declare-fun m!120081 () Bool)

(assert (=> b!106940 m!120081))

(assert (=> b!106942 m!118527))

(assert (=> b!106942 m!118527))

(assert (=> b!106942 m!120081))

(assert (=> d!28985 d!29541))

(declare-fun b!106944 () Bool)

(declare-fun e!69576 () Option!161)

(declare-fun e!69577 () Option!161)

(assert (=> b!106944 (= e!69576 e!69577)))

(declare-fun c!18751 () Bool)

(assert (=> b!106944 (= c!18751 (and ((_ is Cons!1638) lt!54336) (not (= (_1!1215 (h!2235 lt!54336)) (_1!1215 (tuple2!2411 lt!54055 lt!54057))))))))

(declare-fun d!29543 () Bool)

(declare-fun c!18750 () Bool)

(assert (=> d!29543 (= c!18750 (and ((_ is Cons!1638) lt!54336) (= (_1!1215 (h!2235 lt!54336)) (_1!1215 (tuple2!2411 lt!54055 lt!54057)))))))

(assert (=> d!29543 (= (getValueByKey!155 lt!54336 (_1!1215 (tuple2!2411 lt!54055 lt!54057))) e!69576)))

(declare-fun b!106945 () Bool)

(assert (=> b!106945 (= e!69577 (getValueByKey!155 (t!5737 lt!54336) (_1!1215 (tuple2!2411 lt!54055 lt!54057))))))

(declare-fun b!106943 () Bool)

(assert (=> b!106943 (= e!69576 (Some!160 (_2!1215 (h!2235 lt!54336))))))

(declare-fun b!106946 () Bool)

(assert (=> b!106946 (= e!69577 None!159)))

(assert (= (and d!29543 c!18750) b!106943))

(assert (= (and d!29543 (not c!18750)) b!106944))

(assert (= (and b!106944 c!18751) b!106945))

(assert (= (and b!106944 (not c!18751)) b!106946))

(declare-fun m!120083 () Bool)

(assert (=> b!106945 m!120083))

(assert (=> d!28985 d!29543))

(declare-fun d!29545 () Bool)

(assert (=> d!29545 (= (getValueByKey!155 lt!54336 (_1!1215 (tuple2!2411 lt!54055 lt!54057))) (Some!160 (_2!1215 (tuple2!2411 lt!54055 lt!54057))))))

(declare-fun lt!54825 () Unit!3250)

(assert (=> d!29545 (= lt!54825 (choose!666 lt!54336 (_1!1215 (tuple2!2411 lt!54055 lt!54057)) (_2!1215 (tuple2!2411 lt!54055 lt!54057))))))

(declare-fun e!69578 () Bool)

(assert (=> d!29545 e!69578))

(declare-fun res!53116 () Bool)

(assert (=> d!29545 (=> (not res!53116) (not e!69578))))

(assert (=> d!29545 (= res!53116 (isStrictlySorted!304 lt!54336))))

(assert (=> d!29545 (= (lemmaContainsTupThenGetReturnValue!73 lt!54336 (_1!1215 (tuple2!2411 lt!54055 lt!54057)) (_2!1215 (tuple2!2411 lt!54055 lt!54057))) lt!54825)))

(declare-fun b!106947 () Bool)

(declare-fun res!53117 () Bool)

(assert (=> b!106947 (=> (not res!53117) (not e!69578))))

(assert (=> b!106947 (= res!53117 (containsKey!159 lt!54336 (_1!1215 (tuple2!2411 lt!54055 lt!54057))))))

(declare-fun b!106948 () Bool)

(assert (=> b!106948 (= e!69578 (contains!830 lt!54336 (tuple2!2411 (_1!1215 (tuple2!2411 lt!54055 lt!54057)) (_2!1215 (tuple2!2411 lt!54055 lt!54057)))))))

(assert (= (and d!29545 res!53116) b!106947))

(assert (= (and b!106947 res!53117) b!106948))

(assert (=> d!29545 m!118521))

(declare-fun m!120085 () Bool)

(assert (=> d!29545 m!120085))

(declare-fun m!120087 () Bool)

(assert (=> d!29545 m!120087))

(declare-fun m!120089 () Bool)

(assert (=> b!106947 m!120089))

(declare-fun m!120091 () Bool)

(assert (=> b!106948 m!120091))

(assert (=> d!28985 d!29545))

(declare-fun d!29547 () Bool)

(declare-fun e!69580 () Bool)

(assert (=> d!29547 e!69580))

(declare-fun res!53118 () Bool)

(assert (=> d!29547 (=> (not res!53118) (not e!69580))))

(declare-fun lt!54826 () List!1642)

(assert (=> d!29547 (= res!53118 (isStrictlySorted!304 lt!54826))))

(declare-fun e!69579 () List!1642)

(assert (=> d!29547 (= lt!54826 e!69579)))

(declare-fun c!18752 () Bool)

(assert (=> d!29547 (= c!18752 (and ((_ is Cons!1638) (toList!808 lt!54059)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54059))) (_1!1215 (tuple2!2411 lt!54055 lt!54057)))))))

(assert (=> d!29547 (isStrictlySorted!304 (toList!808 lt!54059))))

(assert (=> d!29547 (= (insertStrictlySorted!75 (toList!808 lt!54059) (_1!1215 (tuple2!2411 lt!54055 lt!54057)) (_2!1215 (tuple2!2411 lt!54055 lt!54057))) lt!54826)))

(declare-fun b!106949 () Bool)

(declare-fun e!69582 () List!1642)

(declare-fun call!11317 () List!1642)

(assert (=> b!106949 (= e!69582 call!11317)))

(declare-fun b!106950 () Bool)

(declare-fun c!18753 () Bool)

(assert (=> b!106950 (= c!18753 (and ((_ is Cons!1638) (toList!808 lt!54059)) (bvsgt (_1!1215 (h!2235 (toList!808 lt!54059))) (_1!1215 (tuple2!2411 lt!54055 lt!54057)))))))

(declare-fun e!69581 () List!1642)

(assert (=> b!106950 (= e!69581 e!69582)))

(declare-fun b!106951 () Bool)

(declare-fun call!11315 () List!1642)

(assert (=> b!106951 (= e!69581 call!11315)))

(declare-fun b!106952 () Bool)

(declare-fun call!11316 () List!1642)

(assert (=> b!106952 (= e!69579 call!11316)))

(declare-fun b!106953 () Bool)

(declare-fun res!53119 () Bool)

(assert (=> b!106953 (=> (not res!53119) (not e!69580))))

(assert (=> b!106953 (= res!53119 (containsKey!159 lt!54826 (_1!1215 (tuple2!2411 lt!54055 lt!54057))))))

(declare-fun bm!11312 () Bool)

(assert (=> bm!11312 (= call!11315 call!11316)))

(declare-fun c!18754 () Bool)

(declare-fun b!106954 () Bool)

(declare-fun e!69583 () List!1642)

(assert (=> b!106954 (= e!69583 (ite c!18754 (t!5737 (toList!808 lt!54059)) (ite c!18753 (Cons!1638 (h!2235 (toList!808 lt!54059)) (t!5737 (toList!808 lt!54059))) Nil!1639)))))

(declare-fun bm!11313 () Bool)

(assert (=> bm!11313 (= call!11316 ($colon$colon!80 e!69583 (ite c!18752 (h!2235 (toList!808 lt!54059)) (tuple2!2411 (_1!1215 (tuple2!2411 lt!54055 lt!54057)) (_2!1215 (tuple2!2411 lt!54055 lt!54057))))))))

(declare-fun c!18755 () Bool)

(assert (=> bm!11313 (= c!18755 c!18752)))

(declare-fun b!106955 () Bool)

(assert (=> b!106955 (= e!69583 (insertStrictlySorted!75 (t!5737 (toList!808 lt!54059)) (_1!1215 (tuple2!2411 lt!54055 lt!54057)) (_2!1215 (tuple2!2411 lt!54055 lt!54057))))))

(declare-fun b!106956 () Bool)

(assert (=> b!106956 (= e!69580 (contains!830 lt!54826 (tuple2!2411 (_1!1215 (tuple2!2411 lt!54055 lt!54057)) (_2!1215 (tuple2!2411 lt!54055 lt!54057)))))))

(declare-fun bm!11314 () Bool)

(assert (=> bm!11314 (= call!11317 call!11315)))

(declare-fun b!106957 () Bool)

(assert (=> b!106957 (= e!69582 call!11317)))

(declare-fun b!106958 () Bool)

(assert (=> b!106958 (= e!69579 e!69581)))

(assert (=> b!106958 (= c!18754 (and ((_ is Cons!1638) (toList!808 lt!54059)) (= (_1!1215 (h!2235 (toList!808 lt!54059))) (_1!1215 (tuple2!2411 lt!54055 lt!54057)))))))

(assert (= (and d!29547 c!18752) b!106952))

(assert (= (and d!29547 (not c!18752)) b!106958))

(assert (= (and b!106958 c!18754) b!106951))

(assert (= (and b!106958 (not c!18754)) b!106950))

(assert (= (and b!106950 c!18753) b!106957))

(assert (= (and b!106950 (not c!18753)) b!106949))

(assert (= (or b!106957 b!106949) bm!11314))

(assert (= (or b!106951 bm!11314) bm!11312))

(assert (= (or b!106952 bm!11312) bm!11313))

(assert (= (and bm!11313 c!18755) b!106955))

(assert (= (and bm!11313 (not c!18755)) b!106954))

(assert (= (and d!29547 res!53118) b!106953))

(assert (= (and b!106953 res!53119) b!106956))

(declare-fun m!120093 () Bool)

(assert (=> b!106956 m!120093))

(declare-fun m!120095 () Bool)

(assert (=> bm!11313 m!120095))

(declare-fun m!120097 () Bool)

(assert (=> b!106953 m!120097))

(declare-fun m!120099 () Bool)

(assert (=> b!106955 m!120099))

(declare-fun m!120101 () Bool)

(assert (=> d!29547 m!120101))

(declare-fun m!120103 () Bool)

(assert (=> d!29547 m!120103))

(assert (=> d!28985 d!29547))

(declare-fun d!29549 () Bool)

(declare-fun e!69584 () Bool)

(assert (=> d!29549 e!69584))

(declare-fun res!53121 () Bool)

(assert (=> d!29549 (=> (not res!53121) (not e!69584))))

(declare-fun lt!54829 () ListLongMap!1585)

(assert (=> d!29549 (= res!53121 (contains!829 lt!54829 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun lt!54828 () List!1642)

(assert (=> d!29549 (= lt!54829 (ListLongMap!1586 lt!54828))))

(declare-fun lt!54830 () Unit!3250)

(declare-fun lt!54827 () Unit!3250)

(assert (=> d!29549 (= lt!54830 lt!54827)))

(assert (=> d!29549 (= (getValueByKey!155 lt!54828 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29549 (= lt!54827 (lemmaContainsTupThenGetReturnValue!73 lt!54828 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29549 (= lt!54828 (insertStrictlySorted!75 (toList!808 call!11199) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(assert (=> d!29549 (= (+!146 call!11199 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))) lt!54829)))

(declare-fun b!106959 () Bool)

(declare-fun res!53120 () Bool)

(assert (=> b!106959 (=> (not res!53120) (not e!69584))))

(assert (=> b!106959 (= res!53120 (= (getValueByKey!155 (toList!808 lt!54829) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))))

(declare-fun b!106960 () Bool)

(assert (=> b!106960 (= e!69584 (contains!830 (toList!808 lt!54829) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!29549 res!53121) b!106959))

(assert (= (and b!106959 res!53120) b!106960))

(declare-fun m!120105 () Bool)

(assert (=> d!29549 m!120105))

(declare-fun m!120107 () Bool)

(assert (=> d!29549 m!120107))

(declare-fun m!120109 () Bool)

(assert (=> d!29549 m!120109))

(declare-fun m!120111 () Bool)

(assert (=> d!29549 m!120111))

(declare-fun m!120113 () Bool)

(assert (=> b!106959 m!120113))

(declare-fun m!120115 () Bool)

(assert (=> b!106960 m!120115))

(assert (=> b!105946 d!29549))

(declare-fun b!106961 () Bool)

(declare-fun e!69585 () (_ BitVec 32))

(declare-fun call!11318 () (_ BitVec 32))

(assert (=> b!106961 (= e!69585 (bvadd #b00000000000000000000000000000001 call!11318))))

(declare-fun b!106962 () Bool)

(assert (=> b!106962 (= e!69585 call!11318)))

(declare-fun b!106963 () Bool)

(declare-fun e!69586 () (_ BitVec 32))

(assert (=> b!106963 (= e!69586 #b00000000000000000000000000000000)))

(declare-fun d!29551 () Bool)

(declare-fun lt!54831 () (_ BitVec 32))

(assert (=> d!29551 (and (bvsge lt!54831 #b00000000000000000000000000000000) (bvsle lt!54831 (bvsub (size!2317 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!29551 (= lt!54831 e!69586)))

(declare-fun c!18756 () Bool)

(assert (=> d!29551 (= c!18756 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!29551 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 (_keys!4288 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2317 (_keys!4288 newMap!16)) (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!29551 (= (arrayCountValidKeys!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 (_keys!4288 newMap!16))) lt!54831)))

(declare-fun b!106964 () Bool)

(assert (=> b!106964 (= e!69586 e!69585)))

(declare-fun c!18757 () Bool)

(assert (=> b!106964 (= c!18757 (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!11315 () Bool)

(assert (=> bm!11315 (= call!11318 (arrayCountValidKeys!0 (_keys!4288 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2317 (_keys!4288 newMap!16))))))

(assert (= (and d!29551 c!18756) b!106963))

(assert (= (and d!29551 (not c!18756)) b!106964))

(assert (= (and b!106964 c!18757) b!106961))

(assert (= (and b!106964 (not c!18757)) b!106962))

(assert (= (or b!106961 b!106962) bm!11315))

(assert (=> b!106964 m!118743))

(assert (=> b!106964 m!118743))

(assert (=> b!106964 m!118745))

(declare-fun m!120117 () Bool)

(assert (=> bm!11315 m!120117))

(assert (=> bm!11173 d!29551))

(assert (=> b!106005 d!29061))

(declare-fun d!29553 () Bool)

(declare-fun lt!54832 () Bool)

(assert (=> d!29553 (= lt!54832 (select (content!108 (toList!808 lt!54141)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun e!69587 () Bool)

(assert (=> d!29553 (= lt!54832 e!69587)))

(declare-fun res!53123 () Bool)

(assert (=> d!29553 (=> (not res!53123) (not e!69587))))

(assert (=> d!29553 (= res!53123 ((_ is Cons!1638) (toList!808 lt!54141)))))

(assert (=> d!29553 (= (contains!830 (toList!808 lt!54141) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54832)))

(declare-fun b!106965 () Bool)

(declare-fun e!69588 () Bool)

(assert (=> b!106965 (= e!69587 e!69588)))

(declare-fun res!53122 () Bool)

(assert (=> b!106965 (=> res!53122 e!69588)))

(assert (=> b!106965 (= res!53122 (= (h!2235 (toList!808 lt!54141)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!106966 () Bool)

(assert (=> b!106966 (= e!69588 (contains!830 (t!5737 (toList!808 lt!54141)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!29553 res!53123) b!106965))

(assert (= (and b!106965 (not res!53122)) b!106966))

(declare-fun m!120119 () Bool)

(assert (=> d!29553 m!120119))

(declare-fun m!120121 () Bool)

(assert (=> d!29553 m!120121))

(declare-fun m!120123 () Bool)

(assert (=> b!106966 m!120123))

(assert (=> b!105855 d!29553))

(declare-fun d!29555 () Bool)

(assert (=> d!29555 (= (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!106095 d!29555))

(declare-fun d!29557 () Bool)

(declare-fun res!53124 () Bool)

(declare-fun e!69589 () Bool)

(assert (=> d!29557 (=> res!53124 e!69589)))

(assert (=> d!29557 (= res!53124 (and ((_ is Cons!1638) (toList!808 call!11137)) (= (_1!1215 (h!2235 (toList!808 call!11137))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(assert (=> d!29557 (= (containsKey!159 (toList!808 call!11137) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) e!69589)))

(declare-fun b!106967 () Bool)

(declare-fun e!69590 () Bool)

(assert (=> b!106967 (= e!69589 e!69590)))

(declare-fun res!53125 () Bool)

(assert (=> b!106967 (=> (not res!53125) (not e!69590))))

(assert (=> b!106967 (= res!53125 (and (or (not ((_ is Cons!1638) (toList!808 call!11137))) (bvsle (_1!1215 (h!2235 (toList!808 call!11137))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))) ((_ is Cons!1638) (toList!808 call!11137)) (bvslt (_1!1215 (h!2235 (toList!808 call!11137))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))))))

(declare-fun b!106968 () Bool)

(assert (=> b!106968 (= e!69590 (containsKey!159 (t!5737 (toList!808 call!11137)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (= (and d!29557 (not res!53124)) b!106967))

(assert (= (and b!106967 res!53125) b!106968))

(assert (=> b!106968 m!117519))

(declare-fun m!120125 () Bool)

(assert (=> b!106968 m!120125))

(assert (=> d!28935 d!29557))

(declare-fun d!29559 () Bool)

(declare-fun lt!54833 () Bool)

(assert (=> d!29559 (= lt!54833 (select (content!108 lt!54362) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun e!69591 () Bool)

(assert (=> d!29559 (= lt!54833 e!69591)))

(declare-fun res!53127 () Bool)

(assert (=> d!29559 (=> (not res!53127) (not e!69591))))

(assert (=> d!29559 (= res!53127 ((_ is Cons!1638) lt!54362))))

(assert (=> d!29559 (= (contains!830 lt!54362 (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))) lt!54833)))

(declare-fun b!106969 () Bool)

(declare-fun e!69592 () Bool)

(assert (=> b!106969 (= e!69591 e!69592)))

(declare-fun res!53126 () Bool)

(assert (=> b!106969 (=> res!53126 e!69592)))

(assert (=> b!106969 (= res!53126 (= (h!2235 lt!54362) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun b!106970 () Bool)

(assert (=> b!106970 (= e!69592 (contains!830 (t!5737 lt!54362) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(assert (= (and d!29559 res!53127) b!106969))

(assert (= (and b!106969 (not res!53126)) b!106970))

(declare-fun m!120127 () Bool)

(assert (=> d!29559 m!120127))

(declare-fun m!120129 () Bool)

(assert (=> d!29559 m!120129))

(declare-fun m!120131 () Bool)

(assert (=> b!106970 m!120131))

(assert (=> b!106159 d!29559))

(declare-fun b!106971 () Bool)

(declare-fun e!69596 () Bool)

(declare-fun call!11319 () Bool)

(assert (=> b!106971 (= e!69596 call!11319)))

(declare-fun b!106972 () Bool)

(declare-fun e!69594 () Bool)

(assert (=> b!106972 (= e!69594 e!69596)))

(declare-fun c!18758 () Bool)

(assert (=> b!106972 (= c!18758 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000)))))

(declare-fun b!106973 () Bool)

(declare-fun e!69593 () Bool)

(assert (=> b!106973 (= e!69593 e!69594)))

(declare-fun res!53130 () Bool)

(assert (=> b!106973 (=> (not res!53130) (not e!69594))))

(declare-fun e!69595 () Bool)

(assert (=> b!106973 (= res!53130 (not e!69595))))

(declare-fun res!53129 () Bool)

(assert (=> b!106973 (=> (not res!53129) (not e!69595))))

(assert (=> b!106973 (= res!53129 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000)))))

(declare-fun b!106974 () Bool)

(assert (=> b!106974 (= e!69595 (contains!831 Nil!1640 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000)))))

(declare-fun d!29561 () Bool)

(declare-fun res!53128 () Bool)

(assert (=> d!29561 (=> res!53128 e!69593)))

(assert (=> d!29561 (= res!53128 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))))))

(assert (=> d!29561 (= (arrayNoDuplicates!0 (_keys!4288 (_2!1216 lt!53943)) #b00000000000000000000000000000000 Nil!1640) e!69593)))

(declare-fun b!106975 () Bool)

(assert (=> b!106975 (= e!69596 call!11319)))

(declare-fun bm!11316 () Bool)

(assert (=> bm!11316 (= call!11319 (arrayNoDuplicates!0 (_keys!4288 (_2!1216 lt!53943)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18758 (Cons!1639 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000) Nil!1640) Nil!1640)))))

(assert (= (and d!29561 (not res!53128)) b!106973))

(assert (= (and b!106973 res!53129) b!106974))

(assert (= (and b!106973 res!53130) b!106972))

(assert (= (and b!106972 c!18758) b!106971))

(assert (= (and b!106972 (not c!18758)) b!106975))

(assert (= (or b!106971 b!106975) bm!11316))

(declare-fun m!120133 () Bool)

(assert (=> b!106972 m!120133))

(assert (=> b!106972 m!120133))

(declare-fun m!120135 () Bool)

(assert (=> b!106972 m!120135))

(assert (=> b!106973 m!120133))

(assert (=> b!106973 m!120133))

(assert (=> b!106973 m!120135))

(assert (=> b!106974 m!120133))

(assert (=> b!106974 m!120133))

(declare-fun m!120137 () Bool)

(assert (=> b!106974 m!120137))

(assert (=> bm!11316 m!120133))

(declare-fun m!120139 () Bool)

(assert (=> bm!11316 m!120139))

(assert (=> b!105791 d!29561))

(declare-fun d!29563 () Bool)

(assert (=> d!29563 (= (get!1342 (getValueByKey!155 (toList!808 lt!54009) lt!54007)) (v!2896 (getValueByKey!155 (toList!808 lt!54009) lt!54007)))))

(assert (=> d!28955 d!29563))

(declare-fun b!106977 () Bool)

(declare-fun e!69597 () Option!161)

(declare-fun e!69598 () Option!161)

(assert (=> b!106977 (= e!69597 e!69598)))

(declare-fun c!18760 () Bool)

(assert (=> b!106977 (= c!18760 (and ((_ is Cons!1638) (toList!808 lt!54009)) (not (= (_1!1215 (h!2235 (toList!808 lt!54009))) lt!54007))))))

(declare-fun d!29565 () Bool)

(declare-fun c!18759 () Bool)

(assert (=> d!29565 (= c!18759 (and ((_ is Cons!1638) (toList!808 lt!54009)) (= (_1!1215 (h!2235 (toList!808 lt!54009))) lt!54007)))))

(assert (=> d!29565 (= (getValueByKey!155 (toList!808 lt!54009) lt!54007) e!69597)))

(declare-fun b!106978 () Bool)

(assert (=> b!106978 (= e!69598 (getValueByKey!155 (t!5737 (toList!808 lt!54009)) lt!54007))))

(declare-fun b!106976 () Bool)

(assert (=> b!106976 (= e!69597 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54009)))))))

(declare-fun b!106979 () Bool)

(assert (=> b!106979 (= e!69598 None!159)))

(assert (= (and d!29565 c!18759) b!106976))

(assert (= (and d!29565 (not c!18759)) b!106977))

(assert (= (and b!106977 c!18760) b!106978))

(assert (= (and b!106977 (not c!18760)) b!106979))

(declare-fun m!120141 () Bool)

(assert (=> b!106978 m!120141))

(assert (=> d!28955 d!29565))

(declare-fun lt!54834 () Bool)

(declare-fun d!29567 () Bool)

(assert (=> d!29567 (= lt!54834 (select (content!108 (toList!808 lt!54337)) (tuple2!2411 lt!54055 lt!54057)))))

(declare-fun e!69599 () Bool)

(assert (=> d!29567 (= lt!54834 e!69599)))

(declare-fun res!53132 () Bool)

(assert (=> d!29567 (=> (not res!53132) (not e!69599))))

(assert (=> d!29567 (= res!53132 ((_ is Cons!1638) (toList!808 lt!54337)))))

(assert (=> d!29567 (= (contains!830 (toList!808 lt!54337) (tuple2!2411 lt!54055 lt!54057)) lt!54834)))

(declare-fun b!106980 () Bool)

(declare-fun e!69600 () Bool)

(assert (=> b!106980 (= e!69599 e!69600)))

(declare-fun res!53131 () Bool)

(assert (=> b!106980 (=> res!53131 e!69600)))

(assert (=> b!106980 (= res!53131 (= (h!2235 (toList!808 lt!54337)) (tuple2!2411 lt!54055 lt!54057)))))

(declare-fun b!106981 () Bool)

(assert (=> b!106981 (= e!69600 (contains!830 (t!5737 (toList!808 lt!54337)) (tuple2!2411 lt!54055 lt!54057)))))

(assert (= (and d!29567 res!53132) b!106980))

(assert (= (and b!106980 (not res!53131)) b!106981))

(declare-fun m!120143 () Bool)

(assert (=> d!29567 m!120143))

(declare-fun m!120145 () Bool)

(assert (=> d!29567 m!120145))

(declare-fun m!120147 () Bool)

(assert (=> b!106981 m!120147))

(assert (=> b!106088 d!29567))

(declare-fun b!106983 () Bool)

(declare-fun e!69601 () Option!161)

(declare-fun e!69602 () Option!161)

(assert (=> b!106983 (= e!69601 e!69602)))

(declare-fun c!18762 () Bool)

(assert (=> b!106983 (= c!18762 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!54067))) (not (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!54067)))) (_1!1215 lt!53817)))))))

(declare-fun d!29569 () Bool)

(declare-fun c!18761 () Bool)

(assert (=> d!29569 (= c!18761 (and ((_ is Cons!1638) (t!5737 (toList!808 lt!54067))) (= (_1!1215 (h!2235 (t!5737 (toList!808 lt!54067)))) (_1!1215 lt!53817))))))

(assert (=> d!29569 (= (getValueByKey!155 (t!5737 (toList!808 lt!54067)) (_1!1215 lt!53817)) e!69601)))

(declare-fun b!106984 () Bool)

(assert (=> b!106984 (= e!69602 (getValueByKey!155 (t!5737 (t!5737 (toList!808 lt!54067))) (_1!1215 lt!53817)))))

(declare-fun b!106982 () Bool)

(assert (=> b!106982 (= e!69601 (Some!160 (_2!1215 (h!2235 (t!5737 (toList!808 lt!54067))))))))

(declare-fun b!106985 () Bool)

(assert (=> b!106985 (= e!69602 None!159)))

(assert (= (and d!29569 c!18761) b!106982))

(assert (= (and d!29569 (not c!18761)) b!106983))

(assert (= (and b!106983 c!18762) b!106984))

(assert (= (and b!106983 (not c!18762)) b!106985))

(declare-fun m!120149 () Bool)

(assert (=> b!106984 m!120149))

(assert (=> b!105862 d!29569))

(declare-fun d!29571 () Bool)

(declare-fun e!69604 () Bool)

(assert (=> d!29571 e!69604))

(declare-fun res!53133 () Bool)

(assert (=> d!29571 (=> res!53133 e!69604)))

(declare-fun lt!54835 () Bool)

(assert (=> d!29571 (= res!53133 (not lt!54835))))

(declare-fun lt!54838 () Bool)

(assert (=> d!29571 (= lt!54835 lt!54838)))

(declare-fun lt!54837 () Unit!3250)

(declare-fun e!69603 () Unit!3250)

(assert (=> d!29571 (= lt!54837 e!69603)))

(declare-fun c!18763 () Bool)

(assert (=> d!29571 (= c!18763 lt!54838)))

(assert (=> d!29571 (= lt!54838 (containsKey!159 (toList!808 lt!54208) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!29571 (= (contains!829 lt!54208 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) lt!54835)))

(declare-fun b!106986 () Bool)

(declare-fun lt!54836 () Unit!3250)

(assert (=> b!106986 (= e!69603 lt!54836)))

(assert (=> b!106986 (= lt!54836 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54208) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> b!106986 (isDefined!109 (getValueByKey!155 (toList!808 lt!54208) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun b!106987 () Bool)

(declare-fun Unit!3316 () Unit!3250)

(assert (=> b!106987 (= e!69603 Unit!3316)))

(declare-fun b!106988 () Bool)

(assert (=> b!106988 (= e!69604 (isDefined!109 (getValueByKey!155 (toList!808 lt!54208) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(assert (= (and d!29571 c!18763) b!106986))

(assert (= (and d!29571 (not c!18763)) b!106987))

(assert (= (and d!29571 (not res!53133)) b!106988))

(declare-fun m!120151 () Bool)

(assert (=> d!29571 m!120151))

(declare-fun m!120153 () Bool)

(assert (=> b!106986 m!120153))

(assert (=> b!106986 m!118185))

(assert (=> b!106986 m!118185))

(declare-fun m!120155 () Bool)

(assert (=> b!106986 m!120155))

(assert (=> b!106988 m!118185))

(assert (=> b!106988 m!118185))

(assert (=> b!106988 m!120155))

(assert (=> d!28925 d!29571))

(declare-fun b!106990 () Bool)

(declare-fun e!69605 () Option!161)

(declare-fun e!69606 () Option!161)

(assert (=> b!106990 (= e!69605 e!69606)))

(declare-fun c!18765 () Bool)

(assert (=> b!106990 (= c!18765 (and ((_ is Cons!1638) lt!54207) (not (= (_1!1215 (h!2235 lt!54207)) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))))

(declare-fun c!18764 () Bool)

(declare-fun d!29573 () Bool)

(assert (=> d!29573 (= c!18764 (and ((_ is Cons!1638) lt!54207) (= (_1!1215 (h!2235 lt!54207)) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(assert (=> d!29573 (= (getValueByKey!155 lt!54207 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) e!69605)))

(declare-fun b!106991 () Bool)

(assert (=> b!106991 (= e!69606 (getValueByKey!155 (t!5737 lt!54207) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun b!106989 () Bool)

(assert (=> b!106989 (= e!69605 (Some!160 (_2!1215 (h!2235 lt!54207))))))

(declare-fun b!106992 () Bool)

(assert (=> b!106992 (= e!69606 None!159)))

(assert (= (and d!29573 c!18764) b!106989))

(assert (= (and d!29573 (not c!18764)) b!106990))

(assert (= (and b!106990 c!18765) b!106991))

(assert (= (and b!106990 (not c!18765)) b!106992))

(declare-fun m!120157 () Bool)

(assert (=> b!106991 m!120157))

(assert (=> d!28925 d!29573))

(declare-fun d!29575 () Bool)

(assert (=> d!29575 (= (getValueByKey!155 lt!54207 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) (Some!160 (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun lt!54839 () Unit!3250)

(assert (=> d!29575 (= lt!54839 (choose!666 lt!54207 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun e!69607 () Bool)

(assert (=> d!29575 e!69607))

(declare-fun res!53134 () Bool)

(assert (=> d!29575 (=> (not res!53134) (not e!69607))))

(assert (=> d!29575 (= res!53134 (isStrictlySorted!304 lt!54207))))

(assert (=> d!29575 (= (lemmaContainsTupThenGetReturnValue!73 lt!54207 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) lt!54839)))

(declare-fun b!106993 () Bool)

(declare-fun res!53135 () Bool)

(assert (=> b!106993 (=> (not res!53135) (not e!69607))))

(assert (=> b!106993 (= res!53135 (containsKey!159 lt!54207 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun b!106994 () Bool)

(assert (=> b!106994 (= e!69607 (contains!830 lt!54207 (tuple2!2411 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(assert (= (and d!29575 res!53134) b!106993))

(assert (= (and b!106993 res!53135) b!106994))

(assert (=> d!29575 m!118179))

(declare-fun m!120159 () Bool)

(assert (=> d!29575 m!120159))

(declare-fun m!120161 () Bool)

(assert (=> d!29575 m!120161))

(declare-fun m!120163 () Bool)

(assert (=> b!106993 m!120163))

(declare-fun m!120165 () Bool)

(assert (=> b!106994 m!120165))

(assert (=> d!28925 d!29575))

(declare-fun d!29577 () Bool)

(declare-fun e!69609 () Bool)

(assert (=> d!29577 e!69609))

(declare-fun res!53136 () Bool)

(assert (=> d!29577 (=> (not res!53136) (not e!69609))))

(declare-fun lt!54840 () List!1642)

(assert (=> d!29577 (= res!53136 (isStrictlySorted!304 lt!54840))))

(declare-fun e!69608 () List!1642)

(assert (=> d!29577 (= lt!54840 e!69608)))

(declare-fun c!18766 () Bool)

(assert (=> d!29577 (= c!18766 (and ((_ is Cons!1638) (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137))) (bvslt (_1!1215 (h!2235 (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137)))) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(assert (=> d!29577 (isStrictlySorted!304 (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137)))))

(assert (=> d!29577 (= (insertStrictlySorted!75 (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137)) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))) lt!54840)))

(declare-fun b!106995 () Bool)

(declare-fun e!69611 () List!1642)

(declare-fun call!11322 () List!1642)

(assert (=> b!106995 (= e!69611 call!11322)))

(declare-fun b!106996 () Bool)

(declare-fun c!18767 () Bool)

(assert (=> b!106996 (= c!18767 (and ((_ is Cons!1638) (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137))) (bvsgt (_1!1215 (h!2235 (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137)))) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun e!69610 () List!1642)

(assert (=> b!106996 (= e!69610 e!69611)))

(declare-fun b!106997 () Bool)

(declare-fun call!11320 () List!1642)

(assert (=> b!106997 (= e!69610 call!11320)))

(declare-fun b!106998 () Bool)

(declare-fun call!11321 () List!1642)

(assert (=> b!106998 (= e!69608 call!11321)))

(declare-fun b!106999 () Bool)

(declare-fun res!53137 () Bool)

(assert (=> b!106999 (=> (not res!53137) (not e!69609))))

(assert (=> b!106999 (= res!53137 (containsKey!159 lt!54840 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun bm!11317 () Bool)

(assert (=> bm!11317 (= call!11320 call!11321)))

(declare-fun e!69612 () List!1642)

(declare-fun c!18768 () Bool)

(declare-fun b!107000 () Bool)

(assert (=> b!107000 (= e!69612 (ite c!18768 (t!5737 (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137))) (ite c!18767 (Cons!1638 (h!2235 (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137))) (t!5737 (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137)))) Nil!1639)))))

(declare-fun bm!11318 () Bool)

(assert (=> bm!11318 (= call!11321 ($colon$colon!80 e!69612 (ite c!18766 (h!2235 (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137))) (tuple2!2411 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))))

(declare-fun c!18769 () Bool)

(assert (=> bm!11318 (= c!18769 c!18766)))

(declare-fun b!107001 () Bool)

(assert (=> b!107001 (= e!69612 (insertStrictlySorted!75 (t!5737 (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137))) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun b!107002 () Bool)

(assert (=> b!107002 (= e!69609 (contains!830 lt!54840 (tuple2!2411 (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (_2!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun bm!11319 () Bool)

(assert (=> bm!11319 (= call!11322 call!11320)))

(declare-fun b!107003 () Bool)

(assert (=> b!107003 (= e!69611 call!11322)))

(declare-fun b!107004 () Bool)

(assert (=> b!107004 (= e!69608 e!69610)))

(assert (=> b!107004 (= c!18768 (and ((_ is Cons!1638) (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137))) (= (_1!1215 (h!2235 (toList!808 (ite c!18361 (ite c!18359 call!11130 call!11128) call!11137)))) (_1!1215 (ite c!18361 (ite c!18359 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 lt!53815) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 lt!53815)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(assert (= (and d!29577 c!18766) b!106998))

(assert (= (and d!29577 (not c!18766)) b!107004))

(assert (= (and b!107004 c!18768) b!106997))

(assert (= (and b!107004 (not c!18768)) b!106996))

(assert (= (and b!106996 c!18767) b!107003))

(assert (= (and b!106996 (not c!18767)) b!106995))

(assert (= (or b!107003 b!106995) bm!11319))

(assert (= (or b!106997 bm!11319) bm!11317))

(assert (= (or b!106998 bm!11317) bm!11318))

(assert (= (and bm!11318 c!18769) b!107001))

(assert (= (and bm!11318 (not c!18769)) b!107000))

(assert (= (and d!29577 res!53136) b!106999))

(assert (= (and b!106999 res!53137) b!107002))

(declare-fun m!120167 () Bool)

(assert (=> b!107002 m!120167))

(declare-fun m!120169 () Bool)

(assert (=> bm!11318 m!120169))

(declare-fun m!120171 () Bool)

(assert (=> b!106999 m!120171))

(declare-fun m!120173 () Bool)

(assert (=> b!107001 m!120173))

(declare-fun m!120175 () Bool)

(assert (=> d!29577 m!120175))

(declare-fun m!120177 () Bool)

(assert (=> d!29577 m!120177))

(assert (=> d!28925 d!29577))

(assert (=> b!105747 d!29061))

(declare-fun d!29579 () Bool)

(assert (=> d!29579 (= (apply!98 lt!54180 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1342 (getValueByKey!155 (toList!808 lt!54180) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4403 () Bool)

(assert (= bs!4403 d!29579))

(assert (=> bs!4403 m!119131))

(assert (=> bs!4403 m!119131))

(declare-fun m!120179 () Bool)

(assert (=> bs!4403 m!120179))

(assert (=> b!105945 d!29579))

(declare-fun b!107005 () Bool)

(declare-fun e!69621 () Bool)

(declare-fun e!69624 () Bool)

(assert (=> b!107005 (= e!69621 e!69624)))

(declare-fun res!53144 () Bool)

(declare-fun call!11329 () Bool)

(assert (=> b!107005 (= res!53144 call!11329)))

(assert (=> b!107005 (=> (not res!53144) (not e!69624))))

(declare-fun call!11323 () ListLongMap!1585)

(declare-fun bm!11320 () Bool)

(assert (=> bm!11320 (= call!11323 (getCurrentListMapNoExtraKeys!113 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bm!11321 () Bool)

(declare-fun call!11327 () ListLongMap!1585)

(assert (=> bm!11321 (= call!11327 call!11323)))

(declare-fun b!107007 () Bool)

(declare-fun e!69616 () Bool)

(assert (=> b!107007 (= e!69616 (validKeyInArray!0 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11322 () Bool)

(declare-fun call!11326 () ListLongMap!1585)

(declare-fun call!11328 () ListLongMap!1585)

(assert (=> bm!11322 (= call!11326 call!11328)))

(declare-fun b!107008 () Bool)

(declare-fun e!69619 () Unit!3250)

(declare-fun lt!54846 () Unit!3250)

(assert (=> b!107008 (= e!69619 lt!54846)))

(declare-fun lt!54859 () ListLongMap!1585)

(assert (=> b!107008 (= lt!54859 (getCurrentListMapNoExtraKeys!113 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54855 () (_ BitVec 64))

(assert (=> b!107008 (= lt!54855 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54858 () (_ BitVec 64))

(assert (=> b!107008 (= lt!54858 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54842 () Unit!3250)

(assert (=> b!107008 (= lt!54842 (addStillContains!74 lt!54859 lt!54855 (zeroValue!2457 newMap!16) lt!54858))))

(assert (=> b!107008 (contains!829 (+!146 lt!54859 (tuple2!2411 lt!54855 (zeroValue!2457 newMap!16))) lt!54858)))

(declare-fun lt!54841 () Unit!3250)

(assert (=> b!107008 (= lt!54841 lt!54842)))

(declare-fun lt!54851 () ListLongMap!1585)

(assert (=> b!107008 (= lt!54851 (getCurrentListMapNoExtraKeys!113 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54843 () (_ BitVec 64))

(assert (=> b!107008 (= lt!54843 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54849 () (_ BitVec 64))

(assert (=> b!107008 (= lt!54849 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54847 () Unit!3250)

(assert (=> b!107008 (= lt!54847 (addApplyDifferent!74 lt!54851 lt!54843 (minValue!2457 newMap!16) lt!54849))))

(assert (=> b!107008 (= (apply!98 (+!146 lt!54851 (tuple2!2411 lt!54843 (minValue!2457 newMap!16))) lt!54849) (apply!98 lt!54851 lt!54849))))

(declare-fun lt!54857 () Unit!3250)

(assert (=> b!107008 (= lt!54857 lt!54847)))

(declare-fun lt!54854 () ListLongMap!1585)

(assert (=> b!107008 (= lt!54854 (getCurrentListMapNoExtraKeys!113 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54852 () (_ BitVec 64))

(assert (=> b!107008 (= lt!54852 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54861 () (_ BitVec 64))

(assert (=> b!107008 (= lt!54861 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54862 () Unit!3250)

(assert (=> b!107008 (= lt!54862 (addApplyDifferent!74 lt!54854 lt!54852 (zeroValue!2457 newMap!16) lt!54861))))

(assert (=> b!107008 (= (apply!98 (+!146 lt!54854 (tuple2!2411 lt!54852 (zeroValue!2457 newMap!16))) lt!54861) (apply!98 lt!54854 lt!54861))))

(declare-fun lt!54848 () Unit!3250)

(assert (=> b!107008 (= lt!54848 lt!54862)))

(declare-fun lt!54850 () ListLongMap!1585)

(assert (=> b!107008 (= lt!54850 (getCurrentListMapNoExtraKeys!113 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54860 () (_ BitVec 64))

(assert (=> b!107008 (= lt!54860 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54845 () (_ BitVec 64))

(assert (=> b!107008 (= lt!54845 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!107008 (= lt!54846 (addApplyDifferent!74 lt!54850 lt!54860 (minValue!2457 newMap!16) lt!54845))))

(assert (=> b!107008 (= (apply!98 (+!146 lt!54850 (tuple2!2411 lt!54860 (minValue!2457 newMap!16))) lt!54845) (apply!98 lt!54850 lt!54845))))

(declare-fun e!69620 () Bool)

(declare-fun b!107009 () Bool)

(assert (=> b!107009 (= e!69620 (validKeyInArray!0 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!107010 () Bool)

(declare-fun lt!54853 () ListLongMap!1585)

(assert (=> b!107010 (= e!69624 (= (apply!98 lt!54853 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!107011 () Bool)

(declare-fun e!69623 () Bool)

(declare-fun e!69617 () Bool)

(assert (=> b!107011 (= e!69623 e!69617)))

(declare-fun res!53142 () Bool)

(declare-fun call!11325 () Bool)

(assert (=> b!107011 (= res!53142 call!11325)))

(assert (=> b!107011 (=> (not res!53142) (not e!69617))))

(declare-fun b!107012 () Bool)

(declare-fun res!53143 () Bool)

(declare-fun e!69625 () Bool)

(assert (=> b!107012 (=> (not res!53143) (not e!69625))))

(assert (=> b!107012 (= res!53143 e!69623)))

(declare-fun c!18775 () Bool)

(assert (=> b!107012 (= c!18775 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!107013 () Bool)

(declare-fun c!18771 () Bool)

(assert (=> b!107013 (= c!18771 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69614 () ListLongMap!1585)

(declare-fun e!69622 () ListLongMap!1585)

(assert (=> b!107013 (= e!69614 e!69622)))

(declare-fun b!107014 () Bool)

(declare-fun res!53140 () Bool)

(assert (=> b!107014 (=> (not res!53140) (not e!69625))))

(declare-fun e!69615 () Bool)

(assert (=> b!107014 (= res!53140 e!69615)))

(declare-fun res!53146 () Bool)

(assert (=> b!107014 (=> res!53146 e!69615)))

(assert (=> b!107014 (= res!53146 (not e!69620))))

(declare-fun res!53141 () Bool)

(assert (=> b!107014 (=> (not res!53141) (not e!69620))))

(assert (=> b!107014 (= res!53141 (bvslt #b00000000000000000000000000000000 (size!2317 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))))))

(declare-fun b!107015 () Bool)

(declare-fun e!69618 () Bool)

(assert (=> b!107015 (= e!69615 e!69618)))

(declare-fun res!53139 () Bool)

(assert (=> b!107015 (=> (not res!53139) (not e!69618))))

(assert (=> b!107015 (= res!53139 (contains!829 lt!54853 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!107015 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))))))

(declare-fun b!107016 () Bool)

(assert (=> b!107016 (= e!69622 call!11326)))

(declare-fun bm!11323 () Bool)

(assert (=> bm!11323 (= call!11325 (contains!829 lt!54853 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!29581 () Bool)

(assert (=> d!29581 e!69625))

(declare-fun res!53145 () Bool)

(assert (=> d!29581 (=> (not res!53145) (not e!69625))))

(assert (=> d!29581 (= res!53145 (or (bvsge #b00000000000000000000000000000000 (size!2317 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))))))))

(declare-fun lt!54844 () ListLongMap!1585)

(assert (=> d!29581 (= lt!54853 lt!54844)))

(declare-fun lt!54856 () Unit!3250)

(assert (=> d!29581 (= lt!54856 e!69619)))

(declare-fun c!18773 () Bool)

(assert (=> d!29581 (= c!18773 e!69616)))

(declare-fun res!53138 () Bool)

(assert (=> d!29581 (=> (not res!53138) (not e!69616))))

(assert (=> d!29581 (= res!53138 (bvslt #b00000000000000000000000000000000 (size!2317 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))))))

(declare-fun e!69613 () ListLongMap!1585)

(assert (=> d!29581 (= lt!54844 e!69613)))

(declare-fun c!18774 () Bool)

(assert (=> d!29581 (= c!18774 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29581 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29581 (= (getCurrentListMap!484 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54853)))

(declare-fun b!107006 () Bool)

(declare-fun Unit!3317 () Unit!3250)

(assert (=> b!107006 (= e!69619 Unit!3317)))

(declare-fun b!107017 () Bool)

(assert (=> b!107017 (= e!69613 e!69614)))

(declare-fun c!18770 () Bool)

(assert (=> b!107017 (= c!18770 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!107018 () Bool)

(assert (=> b!107018 (= e!69625 e!69621)))

(declare-fun c!18772 () Bool)

(assert (=> b!107018 (= c!18772 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11324 () Bool)

(assert (=> bm!11324 (= call!11329 (contains!829 lt!54853 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107019 () Bool)

(assert (=> b!107019 (= e!69614 call!11326)))

(declare-fun bm!11325 () Bool)

(declare-fun call!11324 () ListLongMap!1585)

(assert (=> bm!11325 (= call!11328 (+!146 (ite c!18774 call!11323 (ite c!18770 call!11327 call!11324)) (ite (or c!18774 c!18770) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!107020 () Bool)

(assert (=> b!107020 (= e!69618 (= (apply!98 lt!54853 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107020 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))))))))

(assert (=> b!107020 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))))))

(declare-fun b!107021 () Bool)

(assert (=> b!107021 (= e!69623 (not call!11325))))

(declare-fun b!107022 () Bool)

(assert (=> b!107022 (= e!69621 (not call!11329))))

(declare-fun b!107023 () Bool)

(assert (=> b!107023 (= e!69622 call!11324)))

(declare-fun bm!11326 () Bool)

(assert (=> bm!11326 (= call!11324 call!11327)))

(declare-fun b!107024 () Bool)

(assert (=> b!107024 (= e!69617 (= (apply!98 lt!54853 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun b!107025 () Bool)

(assert (=> b!107025 (= e!69613 (+!146 call!11328 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!29581 c!18774) b!107025))

(assert (= (and d!29581 (not c!18774)) b!107017))

(assert (= (and b!107017 c!18770) b!107019))

(assert (= (and b!107017 (not c!18770)) b!107013))

(assert (= (and b!107013 c!18771) b!107016))

(assert (= (and b!107013 (not c!18771)) b!107023))

(assert (= (or b!107016 b!107023) bm!11326))

(assert (= (or b!107019 bm!11326) bm!11321))

(assert (= (or b!107019 b!107016) bm!11322))

(assert (= (or b!107025 bm!11321) bm!11320))

(assert (= (or b!107025 bm!11322) bm!11325))

(assert (= (and d!29581 res!53138) b!107007))

(assert (= (and d!29581 c!18773) b!107008))

(assert (= (and d!29581 (not c!18773)) b!107006))

(assert (= (and d!29581 res!53145) b!107014))

(assert (= (and b!107014 res!53141) b!107009))

(assert (= (and b!107014 (not res!53146)) b!107015))

(assert (= (and b!107015 res!53139) b!107020))

(assert (= (and b!107014 res!53140) b!107012))

(assert (= (and b!107012 c!18775) b!107011))

(assert (= (and b!107012 (not c!18775)) b!107021))

(assert (= (and b!107011 res!53142) b!107024))

(assert (= (or b!107011 b!107021) bm!11323))

(assert (= (and b!107012 res!53143) b!107018))

(assert (= (and b!107018 c!18772) b!107005))

(assert (= (and b!107018 (not c!18772)) b!107022))

(assert (= (and b!107005 res!53144) b!107010))

(assert (= (or b!107005 b!107022) bm!11324))

(declare-fun b_lambda!4801 () Bool)

(assert (=> (not b_lambda!4801) (not b!107020)))

(assert (=> b!107020 t!5744))

(declare-fun b_and!6617 () Bool)

(assert (= b_and!6613 (and (=> t!5744 result!3475) b_and!6617)))

(assert (=> b!107020 t!5746))

(declare-fun b_and!6619 () Bool)

(assert (= b_and!6615 (and (=> t!5746 result!3477) b_and!6619)))

(declare-fun m!120181 () Bool)

(assert (=> b!107020 m!120181))

(declare-fun m!120183 () Bool)

(assert (=> b!107020 m!120183))

(assert (=> b!107020 m!118103))

(declare-fun m!120185 () Bool)

(assert (=> b!107020 m!120185))

(assert (=> b!107020 m!120181))

(declare-fun m!120187 () Bool)

(assert (=> b!107020 m!120187))

(assert (=> b!107020 m!120183))

(assert (=> b!107020 m!118103))

(declare-fun m!120189 () Bool)

(assert (=> bm!11324 m!120189))

(declare-fun m!120191 () Bool)

(assert (=> bm!11325 m!120191))

(declare-fun m!120193 () Bool)

(assert (=> b!107025 m!120193))

(assert (=> d!29581 m!117867))

(assert (=> b!107007 m!120181))

(assert (=> b!107007 m!120181))

(declare-fun m!120195 () Bool)

(assert (=> b!107007 m!120195))

(declare-fun m!120197 () Bool)

(assert (=> b!107010 m!120197))

(assert (=> b!107009 m!120181))

(assert (=> b!107009 m!120181))

(assert (=> b!107009 m!120195))

(declare-fun m!120199 () Bool)

(assert (=> b!107024 m!120199))

(declare-fun m!120201 () Bool)

(assert (=> bm!11323 m!120201))

(declare-fun m!120203 () Bool)

(assert (=> bm!11320 m!120203))

(assert (=> b!107015 m!120181))

(assert (=> b!107015 m!120181))

(declare-fun m!120205 () Bool)

(assert (=> b!107015 m!120205))

(declare-fun m!120207 () Bool)

(assert (=> b!107008 m!120207))

(declare-fun m!120209 () Bool)

(assert (=> b!107008 m!120209))

(assert (=> b!107008 m!120203))

(assert (=> b!107008 m!120181))

(declare-fun m!120211 () Bool)

(assert (=> b!107008 m!120211))

(declare-fun m!120213 () Bool)

(assert (=> b!107008 m!120213))

(declare-fun m!120215 () Bool)

(assert (=> b!107008 m!120215))

(declare-fun m!120217 () Bool)

(assert (=> b!107008 m!120217))

(declare-fun m!120219 () Bool)

(assert (=> b!107008 m!120219))

(declare-fun m!120221 () Bool)

(assert (=> b!107008 m!120221))

(declare-fun m!120223 () Bool)

(assert (=> b!107008 m!120223))

(assert (=> b!107008 m!120217))

(declare-fun m!120225 () Bool)

(assert (=> b!107008 m!120225))

(declare-fun m!120227 () Bool)

(assert (=> b!107008 m!120227))

(declare-fun m!120229 () Bool)

(assert (=> b!107008 m!120229))

(assert (=> b!107008 m!120225))

(declare-fun m!120231 () Bool)

(assert (=> b!107008 m!120231))

(assert (=> b!107008 m!120221))

(declare-fun m!120233 () Bool)

(assert (=> b!107008 m!120233))

(assert (=> b!107008 m!120211))

(declare-fun m!120235 () Bool)

(assert (=> b!107008 m!120235))

(assert (=> d!29023 d!29581))

(declare-fun b!107035 () Bool)

(declare-fun res!53155 () Bool)

(declare-fun e!69630 () Bool)

(assert (=> b!107035 (=> (not res!53155) (not e!69630))))

(assert (=> b!107035 (= res!53155 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun b!107034 () Bool)

(declare-fun res!53156 () Bool)

(assert (=> b!107034 (=> (not res!53156) (not e!69630))))

(assert (=> b!107034 (= res!53156 (not (validKeyInArray!0 (select (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938))))))))

(declare-fun e!69631 () Bool)

(declare-fun b!107037 () Bool)

(assert (=> b!107037 (= e!69631 (= (arrayCountValidKeys!0 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4288 newMap!16) #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!29583 () Bool)

(assert (=> d!29583 e!69631))

(declare-fun res!53157 () Bool)

(assert (=> d!29583 (=> (not res!53157) (not e!69631))))

(assert (=> d!29583 (= res!53157 (and (bvsge (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000000) (bvslt (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (size!2317 (_keys!4288 newMap!16)))))))

(declare-fun lt!54865 () Unit!3250)

(declare-fun choose!1 (array!4348 (_ BitVec 32) (_ BitVec 64)) Unit!3250)

(assert (=> d!29583 (= lt!54865 (choose!1 (_keys!4288 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!29583 e!69630))

(declare-fun res!53158 () Bool)

(assert (=> d!29583 (=> (not res!53158) (not e!69630))))

(assert (=> d!29583 (= res!53158 (and (bvsge (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000000) (bvslt (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (size!2317 (_keys!4288 newMap!16)))))))

(assert (=> d!29583 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4288 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) lt!54865)))

(declare-fun b!107036 () Bool)

(assert (=> b!107036 (= e!69630 (bvslt (size!2317 (_keys!4288 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!29583 res!53158) b!107034))

(assert (= (and b!107034 res!53156) b!107035))

(assert (= (and b!107035 res!53155) b!107036))

(assert (= (and d!29583 res!53157) b!107037))

(assert (=> b!107035 m!117519))

(assert (=> b!107035 m!117841))

(declare-fun m!120237 () Bool)

(assert (=> b!107034 m!120237))

(assert (=> b!107034 m!120237))

(declare-fun m!120239 () Bool)

(assert (=> b!107034 m!120239))

(assert (=> b!107037 m!118647))

(assert (=> b!107037 m!118649))

(assert (=> b!107037 m!117821))

(assert (=> d!29583 m!117519))

(declare-fun m!120241 () Bool)

(assert (=> d!29583 m!120241))

(assert (=> d!29023 d!29583))

(declare-fun b!107038 () Bool)

(declare-fun e!69632 () (_ BitVec 32))

(declare-fun call!11330 () (_ BitVec 32))

(assert (=> b!107038 (= e!69632 (bvadd #b00000000000000000000000000000001 call!11330))))

(declare-fun b!107039 () Bool)

(assert (=> b!107039 (= e!69632 call!11330)))

(declare-fun b!107040 () Bool)

(declare-fun e!69633 () (_ BitVec 32))

(assert (=> b!107040 (= e!69633 #b00000000000000000000000000000000)))

(declare-fun d!29585 () Bool)

(declare-fun lt!54866 () (_ BitVec 32))

(assert (=> d!29585 (and (bvsge lt!54866 #b00000000000000000000000000000000) (bvsle lt!54866 (bvsub (size!2317 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!29585 (= lt!54866 e!69633)))

(declare-fun c!18776 () Bool)

(assert (=> d!29585 (= c!18776 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))))))

(assert (=> d!29585 (and (bvsle #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2317 (_keys!4288 newMap!16)) (size!2317 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))))))

(assert (=> d!29585 (= (arrayCountValidKeys!0 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) #b00000000000000000000000000000000 (size!2317 (_keys!4288 newMap!16))) lt!54866)))

(declare-fun b!107041 () Bool)

(assert (=> b!107041 (= e!69633 e!69632)))

(declare-fun c!18777 () Bool)

(assert (=> b!107041 (= c!18777 (validKeyInArray!0 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11327 () Bool)

(assert (=> bm!11327 (= call!11330 (arrayCountValidKeys!0 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 (_keys!4288 newMap!16))))))

(assert (= (and d!29585 c!18776) b!107040))

(assert (= (and d!29585 (not c!18776)) b!107041))

(assert (= (and b!107041 c!18777) b!107038))

(assert (= (and b!107041 (not c!18777)) b!107039))

(assert (= (or b!107038 b!107039) bm!11327))

(assert (=> b!107041 m!120181))

(assert (=> b!107041 m!120181))

(assert (=> b!107041 m!120195))

(declare-fun m!120243 () Bool)

(assert (=> bm!11327 m!120243))

(assert (=> d!29023 d!29585))

(assert (=> d!29023 d!29065))

(assert (=> d!29023 d!28911))

(assert (=> d!29023 d!28807))

(declare-fun d!29587 () Bool)

(assert (=> d!29587 (= (arrayCountValidKeys!0 lt!54447 (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (bvadd (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!54869 () Unit!3250)

(declare-fun choose!2 (array!4348 (_ BitVec 32)) Unit!3250)

(assert (=> d!29587 (= lt!54869 (choose!2 lt!54447 (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938))))))

(declare-fun e!69636 () Bool)

(assert (=> d!29587 e!69636))

(declare-fun res!53163 () Bool)

(assert (=> d!29587 (=> (not res!53163) (not e!69636))))

(assert (=> d!29587 (= res!53163 (and (bvsge (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000000) (bvslt (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (size!2317 lt!54447))))))

(assert (=> d!29587 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!54447 (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938))) lt!54869)))

(declare-fun b!107046 () Bool)

(declare-fun res!53164 () Bool)

(assert (=> b!107046 (=> (not res!53164) (not e!69636))))

(assert (=> b!107046 (= res!53164 (validKeyInArray!0 (select (arr!2062 lt!54447) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)))))))

(declare-fun b!107047 () Bool)

(assert (=> b!107047 (= e!69636 (bvslt (size!2317 lt!54447) #b01111111111111111111111111111111))))

(assert (= (and d!29587 res!53163) b!107046))

(assert (= (and b!107046 res!53164) b!107047))

(assert (=> d!29587 m!118661))

(declare-fun m!120245 () Bool)

(assert (=> d!29587 m!120245))

(declare-fun m!120247 () Bool)

(assert (=> b!107046 m!120247))

(assert (=> b!107046 m!120247))

(declare-fun m!120249 () Bool)

(assert (=> b!107046 m!120249))

(assert (=> d!29023 d!29587))

(assert (=> d!29023 d!29289))

(declare-fun d!29589 () Bool)

(declare-fun res!53166 () Bool)

(declare-fun e!69639 () Bool)

(assert (=> d!29589 (=> res!53166 e!69639)))

(assert (=> d!29589 (= res!53166 (bvsge #b00000000000000000000000000000000 (size!2317 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))))))

(assert (=> d!29589 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (mask!6728 newMap!16)) e!69639)))

(declare-fun b!107048 () Bool)

(declare-fun e!69637 () Bool)

(assert (=> b!107048 (= e!69639 e!69637)))

(declare-fun c!18778 () Bool)

(assert (=> b!107048 (= c!18778 (validKeyInArray!0 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!107049 () Bool)

(declare-fun call!11331 () Bool)

(assert (=> b!107049 (= e!69637 call!11331)))

(declare-fun b!107050 () Bool)

(declare-fun e!69638 () Bool)

(assert (=> b!107050 (= e!69638 call!11331)))

(declare-fun bm!11328 () Bool)

(assert (=> bm!11328 (= call!11331 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (mask!6728 newMap!16)))))

(declare-fun b!107051 () Bool)

(assert (=> b!107051 (= e!69637 e!69638)))

(declare-fun lt!54870 () (_ BitVec 64))

(assert (=> b!107051 (= lt!54870 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!54872 () Unit!3250)

(assert (=> b!107051 (= lt!54872 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) lt!54870 #b00000000000000000000000000000000))))

(assert (=> b!107051 (arrayContainsKey!0 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) lt!54870 #b00000000000000000000000000000000)))

(declare-fun lt!54871 () Unit!3250)

(assert (=> b!107051 (= lt!54871 lt!54872)))

(declare-fun res!53165 () Bool)

(assert (=> b!107051 (= res!53165 (= (seekEntryOrOpen!0 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) #b00000000000000000000000000000000) (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (mask!6728 newMap!16)) (Found!269 #b00000000000000000000000000000000)))))

(assert (=> b!107051 (=> (not res!53165) (not e!69638))))

(assert (= (and d!29589 (not res!53166)) b!107048))

(assert (= (and b!107048 c!18778) b!107051))

(assert (= (and b!107048 (not c!18778)) b!107049))

(assert (= (and b!107051 res!53165) b!107050))

(assert (= (or b!107050 b!107049) bm!11328))

(assert (=> b!107048 m!120181))

(assert (=> b!107048 m!120181))

(assert (=> b!107048 m!120195))

(declare-fun m!120251 () Bool)

(assert (=> bm!11328 m!120251))

(assert (=> b!107051 m!120181))

(declare-fun m!120253 () Bool)

(assert (=> b!107051 m!120253))

(declare-fun m!120255 () Bool)

(assert (=> b!107051 m!120255))

(assert (=> b!107051 m!120181))

(declare-fun m!120257 () Bool)

(assert (=> b!107051 m!120257))

(assert (=> d!29023 d!29589))

(declare-fun d!29591 () Bool)

(declare-fun e!69641 () Bool)

(assert (=> d!29591 e!69641))

(declare-fun res!53167 () Bool)

(assert (=> d!29591 (=> res!53167 e!69641)))

(declare-fun lt!54873 () Bool)

(assert (=> d!29591 (= res!53167 (not lt!54873))))

(declare-fun lt!54876 () Bool)

(assert (=> d!29591 (= lt!54873 lt!54876)))

(declare-fun lt!54875 () Unit!3250)

(declare-fun e!69640 () Unit!3250)

(assert (=> d!29591 (= lt!54875 e!69640)))

(declare-fun c!18779 () Bool)

(assert (=> d!29591 (= c!18779 lt!54876)))

(assert (=> d!29591 (= lt!54876 (containsKey!159 (toList!808 (getCurrentListMap!484 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)))))))

(assert (=> d!29591 (= (contains!829 (getCurrentListMap!484 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)))) lt!54873)))

(declare-fun b!107052 () Bool)

(declare-fun lt!54874 () Unit!3250)

(assert (=> b!107052 (= e!69640 lt!54874)))

(assert (=> b!107052 (= lt!54874 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (getCurrentListMap!484 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)))))))

(assert (=> b!107052 (isDefined!109 (getValueByKey!155 (toList!808 (getCurrentListMap!484 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)))))))

(declare-fun b!107053 () Bool)

(declare-fun Unit!3318 () Unit!3250)

(assert (=> b!107053 (= e!69640 Unit!3318)))

(declare-fun b!107054 () Bool)

(assert (=> b!107054 (= e!69641 (isDefined!109 (getValueByKey!155 (toList!808 (getCurrentListMap!484 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))) (select (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938))))))))

(assert (= (and d!29591 c!18779) b!107052))

(assert (= (and d!29591 (not c!18779)) b!107053))

(assert (= (and d!29591 (not res!53167)) b!107054))

(assert (=> d!29591 m!118643))

(declare-fun m!120259 () Bool)

(assert (=> d!29591 m!120259))

(assert (=> b!107052 m!118643))

(declare-fun m!120261 () Bool)

(assert (=> b!107052 m!120261))

(assert (=> b!107052 m!118643))

(declare-fun m!120263 () Bool)

(assert (=> b!107052 m!120263))

(assert (=> b!107052 m!120263))

(declare-fun m!120265 () Bool)

(assert (=> b!107052 m!120265))

(assert (=> b!107054 m!118643))

(assert (=> b!107054 m!120263))

(assert (=> b!107054 m!120263))

(assert (=> b!107054 m!120265))

(assert (=> d!29023 d!29591))

(assert (=> d!29023 d!28989))

(declare-fun b!107055 () Bool)

(declare-fun e!69650 () Bool)

(declare-fun e!69653 () Bool)

(assert (=> b!107055 (= e!69650 e!69653)))

(declare-fun res!53174 () Bool)

(declare-fun call!11338 () Bool)

(assert (=> b!107055 (= res!53174 call!11338)))

(assert (=> b!107055 (=> (not res!53174) (not e!69653))))

(declare-fun bm!11329 () Bool)

(declare-fun call!11332 () ListLongMap!1585)

(assert (=> bm!11329 (= call!11332 (getCurrentListMapNoExtraKeys!113 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun bm!11330 () Bool)

(declare-fun call!11336 () ListLongMap!1585)

(assert (=> bm!11330 (= call!11336 call!11332)))

(declare-fun b!107057 () Bool)

(declare-fun e!69645 () Bool)

(assert (=> b!107057 (= e!69645 (validKeyInArray!0 (select (arr!2062 lt!54442) #b00000000000000000000000000000000)))))

(declare-fun bm!11331 () Bool)

(declare-fun call!11335 () ListLongMap!1585)

(declare-fun call!11337 () ListLongMap!1585)

(assert (=> bm!11331 (= call!11335 call!11337)))

(declare-fun b!107058 () Bool)

(declare-fun e!69648 () Unit!3250)

(declare-fun lt!54882 () Unit!3250)

(assert (=> b!107058 (= e!69648 lt!54882)))

(declare-fun lt!54895 () ListLongMap!1585)

(assert (=> b!107058 (= lt!54895 (getCurrentListMapNoExtraKeys!113 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54891 () (_ BitVec 64))

(assert (=> b!107058 (= lt!54891 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54894 () (_ BitVec 64))

(assert (=> b!107058 (= lt!54894 (select (arr!2062 lt!54442) #b00000000000000000000000000000000))))

(declare-fun lt!54878 () Unit!3250)

(assert (=> b!107058 (= lt!54878 (addStillContains!74 lt!54895 lt!54891 (zeroValue!2457 newMap!16) lt!54894))))

(assert (=> b!107058 (contains!829 (+!146 lt!54895 (tuple2!2411 lt!54891 (zeroValue!2457 newMap!16))) lt!54894)))

(declare-fun lt!54877 () Unit!3250)

(assert (=> b!107058 (= lt!54877 lt!54878)))

(declare-fun lt!54887 () ListLongMap!1585)

(assert (=> b!107058 (= lt!54887 (getCurrentListMapNoExtraKeys!113 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54879 () (_ BitVec 64))

(assert (=> b!107058 (= lt!54879 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54885 () (_ BitVec 64))

(assert (=> b!107058 (= lt!54885 (select (arr!2062 lt!54442) #b00000000000000000000000000000000))))

(declare-fun lt!54883 () Unit!3250)

(assert (=> b!107058 (= lt!54883 (addApplyDifferent!74 lt!54887 lt!54879 (minValue!2457 newMap!16) lt!54885))))

(assert (=> b!107058 (= (apply!98 (+!146 lt!54887 (tuple2!2411 lt!54879 (minValue!2457 newMap!16))) lt!54885) (apply!98 lt!54887 lt!54885))))

(declare-fun lt!54893 () Unit!3250)

(assert (=> b!107058 (= lt!54893 lt!54883)))

(declare-fun lt!54890 () ListLongMap!1585)

(assert (=> b!107058 (= lt!54890 (getCurrentListMapNoExtraKeys!113 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54888 () (_ BitVec 64))

(assert (=> b!107058 (= lt!54888 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54897 () (_ BitVec 64))

(assert (=> b!107058 (= lt!54897 (select (arr!2062 lt!54442) #b00000000000000000000000000000000))))

(declare-fun lt!54898 () Unit!3250)

(assert (=> b!107058 (= lt!54898 (addApplyDifferent!74 lt!54890 lt!54888 (zeroValue!2457 newMap!16) lt!54897))))

(assert (=> b!107058 (= (apply!98 (+!146 lt!54890 (tuple2!2411 lt!54888 (zeroValue!2457 newMap!16))) lt!54897) (apply!98 lt!54890 lt!54897))))

(declare-fun lt!54884 () Unit!3250)

(assert (=> b!107058 (= lt!54884 lt!54898)))

(declare-fun lt!54886 () ListLongMap!1585)

(assert (=> b!107058 (= lt!54886 (getCurrentListMapNoExtraKeys!113 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)))))

(declare-fun lt!54896 () (_ BitVec 64))

(assert (=> b!107058 (= lt!54896 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54881 () (_ BitVec 64))

(assert (=> b!107058 (= lt!54881 (select (arr!2062 lt!54442) #b00000000000000000000000000000000))))

(assert (=> b!107058 (= lt!54882 (addApplyDifferent!74 lt!54886 lt!54896 (minValue!2457 newMap!16) lt!54881))))

(assert (=> b!107058 (= (apply!98 (+!146 lt!54886 (tuple2!2411 lt!54896 (minValue!2457 newMap!16))) lt!54881) (apply!98 lt!54886 lt!54881))))

(declare-fun b!107059 () Bool)

(declare-fun e!69649 () Bool)

(assert (=> b!107059 (= e!69649 (validKeyInArray!0 (select (arr!2062 lt!54442) #b00000000000000000000000000000000)))))

(declare-fun b!107060 () Bool)

(declare-fun lt!54889 () ListLongMap!1585)

(assert (=> b!107060 (= e!69653 (= (apply!98 lt!54889 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 newMap!16)))))

(declare-fun b!107061 () Bool)

(declare-fun e!69652 () Bool)

(declare-fun e!69646 () Bool)

(assert (=> b!107061 (= e!69652 e!69646)))

(declare-fun res!53172 () Bool)

(declare-fun call!11334 () Bool)

(assert (=> b!107061 (= res!53172 call!11334)))

(assert (=> b!107061 (=> (not res!53172) (not e!69646))))

(declare-fun b!107062 () Bool)

(declare-fun res!53173 () Bool)

(declare-fun e!69654 () Bool)

(assert (=> b!107062 (=> (not res!53173) (not e!69654))))

(assert (=> b!107062 (= res!53173 e!69652)))

(declare-fun c!18785 () Bool)

(assert (=> b!107062 (= c!18785 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!107063 () Bool)

(declare-fun c!18781 () Bool)

(assert (=> b!107063 (= c!18781 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69643 () ListLongMap!1585)

(declare-fun e!69651 () ListLongMap!1585)

(assert (=> b!107063 (= e!69643 e!69651)))

(declare-fun b!107064 () Bool)

(declare-fun res!53170 () Bool)

(assert (=> b!107064 (=> (not res!53170) (not e!69654))))

(declare-fun e!69644 () Bool)

(assert (=> b!107064 (= res!53170 e!69644)))

(declare-fun res!53176 () Bool)

(assert (=> b!107064 (=> res!53176 e!69644)))

(assert (=> b!107064 (= res!53176 (not e!69649))))

(declare-fun res!53171 () Bool)

(assert (=> b!107064 (=> (not res!53171) (not e!69649))))

(assert (=> b!107064 (= res!53171 (bvslt #b00000000000000000000000000000000 (size!2317 lt!54442)))))

(declare-fun b!107065 () Bool)

(declare-fun e!69647 () Bool)

(assert (=> b!107065 (= e!69644 e!69647)))

(declare-fun res!53169 () Bool)

(assert (=> b!107065 (=> (not res!53169) (not e!69647))))

(assert (=> b!107065 (= res!53169 (contains!829 lt!54889 (select (arr!2062 lt!54442) #b00000000000000000000000000000000)))))

(assert (=> b!107065 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 lt!54442)))))

(declare-fun b!107066 () Bool)

(assert (=> b!107066 (= e!69651 call!11335)))

(declare-fun bm!11332 () Bool)

(assert (=> bm!11332 (= call!11334 (contains!829 lt!54889 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!29593 () Bool)

(assert (=> d!29593 e!69654))

(declare-fun res!53175 () Bool)

(assert (=> d!29593 (=> (not res!53175) (not e!69654))))

(assert (=> d!29593 (= res!53175 (or (bvsge #b00000000000000000000000000000000 (size!2317 lt!54442)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 lt!54442)))))))

(declare-fun lt!54880 () ListLongMap!1585)

(assert (=> d!29593 (= lt!54889 lt!54880)))

(declare-fun lt!54892 () Unit!3250)

(assert (=> d!29593 (= lt!54892 e!69648)))

(declare-fun c!18783 () Bool)

(assert (=> d!29593 (= c!18783 e!69645)))

(declare-fun res!53168 () Bool)

(assert (=> d!29593 (=> (not res!53168) (not e!69645))))

(assert (=> d!29593 (= res!53168 (bvslt #b00000000000000000000000000000000 (size!2317 lt!54442)))))

(declare-fun e!69642 () ListLongMap!1585)

(assert (=> d!29593 (= lt!54880 e!69642)))

(declare-fun c!18784 () Bool)

(assert (=> d!29593 (= c!18784 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29593 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29593 (= (getCurrentListMap!484 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) lt!54889)))

(declare-fun b!107056 () Bool)

(declare-fun Unit!3319 () Unit!3250)

(assert (=> b!107056 (= e!69648 Unit!3319)))

(declare-fun b!107067 () Bool)

(assert (=> b!107067 (= e!69642 e!69643)))

(declare-fun c!18780 () Bool)

(assert (=> b!107067 (= c!18780 (and (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!107068 () Bool)

(assert (=> b!107068 (= e!69654 e!69650)))

(declare-fun c!18782 () Bool)

(assert (=> b!107068 (= c!18782 (not (= (bvand (extraKeys!2387 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11333 () Bool)

(assert (=> bm!11333 (= call!11338 (contains!829 lt!54889 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107069 () Bool)

(assert (=> b!107069 (= e!69643 call!11335)))

(declare-fun call!11333 () ListLongMap!1585)

(declare-fun bm!11334 () Bool)

(assert (=> bm!11334 (= call!11337 (+!146 (ite c!18784 call!11332 (ite c!18780 call!11336 call!11333)) (ite (or c!18784 c!18780) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 newMap!16)) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16)))))))

(declare-fun b!107070 () Bool)

(assert (=> b!107070 (= e!69647 (= (apply!98 lt!54889 (select (arr!2062 lt!54442) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 lt!54450) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107070 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 lt!54450)))))

(assert (=> b!107070 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 lt!54442)))))

(declare-fun b!107071 () Bool)

(assert (=> b!107071 (= e!69652 (not call!11334))))

(declare-fun b!107072 () Bool)

(assert (=> b!107072 (= e!69650 (not call!11338))))

(declare-fun b!107073 () Bool)

(assert (=> b!107073 (= e!69651 call!11333)))

(declare-fun bm!11335 () Bool)

(assert (=> bm!11335 (= call!11333 call!11336)))

(declare-fun b!107074 () Bool)

(assert (=> b!107074 (= e!69646 (= (apply!98 lt!54889 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 newMap!16)))))

(declare-fun b!107075 () Bool)

(assert (=> b!107075 (= e!69642 (+!146 call!11337 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 newMap!16))))))

(assert (= (and d!29593 c!18784) b!107075))

(assert (= (and d!29593 (not c!18784)) b!107067))

(assert (= (and b!107067 c!18780) b!107069))

(assert (= (and b!107067 (not c!18780)) b!107063))

(assert (= (and b!107063 c!18781) b!107066))

(assert (= (and b!107063 (not c!18781)) b!107073))

(assert (= (or b!107066 b!107073) bm!11335))

(assert (= (or b!107069 bm!11335) bm!11330))

(assert (= (or b!107069 b!107066) bm!11331))

(assert (= (or b!107075 bm!11330) bm!11329))

(assert (= (or b!107075 bm!11331) bm!11334))

(assert (= (and d!29593 res!53168) b!107057))

(assert (= (and d!29593 c!18783) b!107058))

(assert (= (and d!29593 (not c!18783)) b!107056))

(assert (= (and d!29593 res!53175) b!107064))

(assert (= (and b!107064 res!53171) b!107059))

(assert (= (and b!107064 (not res!53176)) b!107065))

(assert (= (and b!107065 res!53169) b!107070))

(assert (= (and b!107064 res!53170) b!107062))

(assert (= (and b!107062 c!18785) b!107061))

(assert (= (and b!107062 (not c!18785)) b!107071))

(assert (= (and b!107061 res!53172) b!107074))

(assert (= (or b!107061 b!107071) bm!11332))

(assert (= (and b!107062 res!53173) b!107068))

(assert (= (and b!107068 c!18782) b!107055))

(assert (= (and b!107068 (not c!18782)) b!107072))

(assert (= (and b!107055 res!53174) b!107060))

(assert (= (or b!107055 b!107072) bm!11333))

(declare-fun b_lambda!4803 () Bool)

(assert (=> (not b_lambda!4803) (not b!107070)))

(assert (=> b!107070 t!5744))

(declare-fun b_and!6621 () Bool)

(assert (= b_and!6617 (and (=> t!5744 result!3475) b_and!6621)))

(assert (=> b!107070 t!5746))

(declare-fun b_and!6623 () Bool)

(assert (= b_and!6619 (and (=> t!5746 result!3477) b_and!6623)))

(declare-fun m!120267 () Bool)

(assert (=> b!107070 m!120267))

(declare-fun m!120269 () Bool)

(assert (=> b!107070 m!120269))

(assert (=> b!107070 m!118103))

(declare-fun m!120271 () Bool)

(assert (=> b!107070 m!120271))

(assert (=> b!107070 m!120267))

(declare-fun m!120273 () Bool)

(assert (=> b!107070 m!120273))

(assert (=> b!107070 m!120269))

(assert (=> b!107070 m!118103))

(declare-fun m!120275 () Bool)

(assert (=> bm!11333 m!120275))

(declare-fun m!120277 () Bool)

(assert (=> bm!11334 m!120277))

(declare-fun m!120279 () Bool)

(assert (=> b!107075 m!120279))

(assert (=> d!29593 m!117867))

(assert (=> b!107057 m!120267))

(assert (=> b!107057 m!120267))

(declare-fun m!120281 () Bool)

(assert (=> b!107057 m!120281))

(declare-fun m!120283 () Bool)

(assert (=> b!107060 m!120283))

(assert (=> b!107059 m!120267))

(assert (=> b!107059 m!120267))

(assert (=> b!107059 m!120281))

(declare-fun m!120285 () Bool)

(assert (=> b!107074 m!120285))

(declare-fun m!120287 () Bool)

(assert (=> bm!11332 m!120287))

(declare-fun m!120289 () Bool)

(assert (=> bm!11329 m!120289))

(assert (=> b!107065 m!120267))

(assert (=> b!107065 m!120267))

(declare-fun m!120291 () Bool)

(assert (=> b!107065 m!120291))

(declare-fun m!120293 () Bool)

(assert (=> b!107058 m!120293))

(declare-fun m!120295 () Bool)

(assert (=> b!107058 m!120295))

(assert (=> b!107058 m!120289))

(assert (=> b!107058 m!120267))

(declare-fun m!120297 () Bool)

(assert (=> b!107058 m!120297))

(declare-fun m!120299 () Bool)

(assert (=> b!107058 m!120299))

(declare-fun m!120301 () Bool)

(assert (=> b!107058 m!120301))

(declare-fun m!120303 () Bool)

(assert (=> b!107058 m!120303))

(declare-fun m!120305 () Bool)

(assert (=> b!107058 m!120305))

(declare-fun m!120307 () Bool)

(assert (=> b!107058 m!120307))

(declare-fun m!120309 () Bool)

(assert (=> b!107058 m!120309))

(assert (=> b!107058 m!120303))

(declare-fun m!120311 () Bool)

(assert (=> b!107058 m!120311))

(declare-fun m!120313 () Bool)

(assert (=> b!107058 m!120313))

(declare-fun m!120315 () Bool)

(assert (=> b!107058 m!120315))

(assert (=> b!107058 m!120311))

(declare-fun m!120317 () Bool)

(assert (=> b!107058 m!120317))

(assert (=> b!107058 m!120307))

(declare-fun m!120319 () Bool)

(assert (=> b!107058 m!120319))

(assert (=> b!107058 m!120297))

(declare-fun m!120321 () Bool)

(assert (=> b!107058 m!120321))

(assert (=> d!29023 d!29593))

(declare-fun d!29595 () Bool)

(declare-fun e!69657 () Bool)

(assert (=> d!29595 e!69657))

(declare-fun res!53179 () Bool)

(assert (=> d!29595 (=> (not res!53179) (not e!69657))))

(assert (=> d!29595 (= res!53179 (and (bvsge (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000000) (bvslt (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (size!2317 (_keys!4288 newMap!16))) (bvslt (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (size!2318 (_values!2565 newMap!16)))))))

(declare-fun lt!54901 () Unit!3250)

(declare-fun choose!674 (array!4348 array!4350 (_ BitVec 32) (_ BitVec 32) V!3219 V!3219 (_ BitVec 32) (_ BitVec 64) V!3219 Int) Unit!3250)

(assert (=> d!29595 (= lt!54901 (choose!674 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 (defaultEntry!2582 newMap!16)))))

(assert (=> d!29595 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29595 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!30 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815 (defaultEntry!2582 newMap!16)) lt!54901)))

(declare-fun b!107078 () Bool)

(assert (=> b!107078 (= e!69657 (= (+!146 (getCurrentListMap!484 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (getCurrentListMap!484 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (array!4351 (store (arr!2063 (_values!2565 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (ValueCellFull!996 lt!53815)) (size!2318 (_values!2565 newMap!16))) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16))))))

(assert (= (and d!29595 res!53179) b!107078))

(assert (=> d!29595 m!117519))

(declare-fun m!120323 () Bool)

(assert (=> d!29595 m!120323))

(assert (=> d!29595 m!117867))

(assert (=> b!107078 m!118659))

(assert (=> b!107078 m!118647))

(assert (=> b!107078 m!118663))

(assert (=> b!107078 m!117685))

(assert (=> b!107078 m!117685))

(assert (=> b!107078 m!118261))

(assert (=> d!29023 d!29595))

(assert (=> d!29023 d!28835))

(declare-fun d!29597 () Bool)

(declare-fun e!69660 () Bool)

(assert (=> d!29597 e!69660))

(declare-fun res!53182 () Bool)

(assert (=> d!29597 (=> (not res!53182) (not e!69660))))

(assert (=> d!29597 (= res!53182 (and (bvsge (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000000) (bvslt (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (size!2317 (_keys!4288 newMap!16)))))))

(declare-fun lt!54904 () Unit!3250)

(declare-fun choose!102 ((_ BitVec 64) array!4348 (_ BitVec 32) (_ BitVec 32)) Unit!3250)

(assert (=> d!29597 (= lt!54904 (choose!102 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (mask!6728 newMap!16)))))

(assert (=> d!29597 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29597 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (mask!6728 newMap!16)) lt!54904)))

(declare-fun b!107081 () Bool)

(assert (=> b!107081 (= e!69660 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (mask!6728 newMap!16)))))

(assert (= (and d!29597 res!53182) b!107081))

(assert (=> d!29597 m!117519))

(declare-fun m!120325 () Bool)

(assert (=> d!29597 m!120325))

(assert (=> d!29597 m!117867))

(assert (=> b!107081 m!118647))

(assert (=> b!107081 m!118667))

(assert (=> d!29023 d!29597))

(declare-fun d!29599 () Bool)

(declare-fun e!69661 () Bool)

(assert (=> d!29599 e!69661))

(declare-fun res!53183 () Bool)

(assert (=> d!29599 (=> (not res!53183) (not e!69661))))

(assert (=> d!29599 (= res!53183 (and (bvsge (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000000) (bvslt (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (size!2317 lt!54442))))))

(declare-fun lt!54905 () Unit!3250)

(assert (=> d!29599 (= lt!54905 (choose!668 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (defaultEntry!2582 newMap!16)))))

(assert (=> d!29599 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29599 (= (lemmaValidKeyInArrayIsInListMap!105 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (defaultEntry!2582 newMap!16)) lt!54905)))

(declare-fun b!107082 () Bool)

(assert (=> b!107082 (= e!69661 (contains!829 (getCurrentListMap!484 lt!54442 lt!54450 (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2582 newMap!16)) (select (arr!2062 lt!54442) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)))))))

(assert (= (and d!29599 res!53183) b!107082))

(declare-fun m!120327 () Bool)

(assert (=> d!29599 m!120327))

(assert (=> d!29599 m!117867))

(assert (=> b!107082 m!118651))

(declare-fun m!120329 () Bool)

(assert (=> b!107082 m!120329))

(assert (=> b!107082 m!118651))

(assert (=> b!107082 m!120329))

(declare-fun m!120331 () Bool)

(assert (=> b!107082 m!120331))

(assert (=> d!29023 d!29599))

(declare-fun d!29601 () Bool)

(declare-fun e!69664 () Bool)

(assert (=> d!29601 e!69664))

(declare-fun res!53186 () Bool)

(assert (=> d!29601 (=> (not res!53186) (not e!69664))))

(assert (=> d!29601 (= res!53186 (and (bvsge (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000000) (bvslt (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (size!2317 (_keys!4288 newMap!16)))))))

(declare-fun lt!54908 () Unit!3250)

(declare-fun choose!41 (array!4348 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1643) Unit!3250)

(assert (=> d!29601 (= lt!54908 (choose!41 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) lt!54432 lt!54430))))

(assert (=> d!29601 (bvslt (size!2317 (_keys!4288 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!29601 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) lt!54432 lt!54430) lt!54908)))

(declare-fun b!107085 () Bool)

(assert (=> b!107085 (= e!69664 (arrayNoDuplicates!0 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) lt!54432 lt!54430))))

(assert (= (and d!29601 res!53186) b!107085))

(assert (=> d!29601 m!117519))

(declare-fun m!120333 () Bool)

(assert (=> d!29601 m!120333))

(assert (=> b!107085 m!118647))

(assert (=> b!107085 m!118645))

(assert (=> d!29023 d!29601))

(declare-fun b!107086 () Bool)

(declare-fun e!69668 () Bool)

(declare-fun call!11339 () Bool)

(assert (=> b!107086 (= e!69668 call!11339)))

(declare-fun b!107087 () Bool)

(declare-fun e!69666 () Bool)

(assert (=> b!107087 (= e!69666 e!69668)))

(declare-fun c!18786 () Bool)

(assert (=> b!107087 (= c!18786 (validKeyInArray!0 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) lt!54432)))))

(declare-fun b!107088 () Bool)

(declare-fun e!69665 () Bool)

(assert (=> b!107088 (= e!69665 e!69666)))

(declare-fun res!53189 () Bool)

(assert (=> b!107088 (=> (not res!53189) (not e!69666))))

(declare-fun e!69667 () Bool)

(assert (=> b!107088 (= res!53189 (not e!69667))))

(declare-fun res!53188 () Bool)

(assert (=> b!107088 (=> (not res!53188) (not e!69667))))

(assert (=> b!107088 (= res!53188 (validKeyInArray!0 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) lt!54432)))))

(declare-fun b!107089 () Bool)

(assert (=> b!107089 (= e!69667 (contains!831 lt!54430 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) lt!54432)))))

(declare-fun d!29603 () Bool)

(declare-fun res!53187 () Bool)

(assert (=> d!29603 (=> res!53187 e!69665)))

(assert (=> d!29603 (= res!53187 (bvsge lt!54432 (size!2317 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))))))))

(assert (=> d!29603 (= (arrayNoDuplicates!0 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) lt!54432 lt!54430) e!69665)))

(declare-fun b!107090 () Bool)

(assert (=> b!107090 (= e!69668 call!11339)))

(declare-fun bm!11336 () Bool)

(assert (=> bm!11336 (= call!11339 (arrayNoDuplicates!0 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16))) (bvadd lt!54432 #b00000000000000000000000000000001) (ite c!18786 (Cons!1639 (select (arr!2062 (array!4349 (store (arr!2062 (_keys!4288 newMap!16)) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (size!2317 (_keys!4288 newMap!16)))) lt!54432) lt!54430) lt!54430)))))

(assert (= (and d!29603 (not res!53187)) b!107088))

(assert (= (and b!107088 res!53188) b!107089))

(assert (= (and b!107088 res!53189) b!107087))

(assert (= (and b!107087 c!18786) b!107086))

(assert (= (and b!107087 (not c!18786)) b!107090))

(assert (= (or b!107086 b!107090) bm!11336))

(declare-fun m!120335 () Bool)

(assert (=> b!107087 m!120335))

(assert (=> b!107087 m!120335))

(declare-fun m!120337 () Bool)

(assert (=> b!107087 m!120337))

(assert (=> b!107088 m!120335))

(assert (=> b!107088 m!120335))

(assert (=> b!107088 m!120337))

(assert (=> b!107089 m!120335))

(assert (=> b!107089 m!120335))

(declare-fun m!120339 () Bool)

(assert (=> b!107089 m!120339))

(assert (=> bm!11336 m!120335))

(declare-fun m!120341 () Bool)

(assert (=> bm!11336 m!120341))

(assert (=> d!29023 d!29603))

(declare-fun d!29605 () Bool)

(declare-fun res!53190 () Bool)

(declare-fun e!69669 () Bool)

(assert (=> d!29605 (=> res!53190 e!69669)))

(assert (=> d!29605 (= res!53190 (= (select (arr!2062 lt!54435) #b00000000000000000000000000000000) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!29605 (= (arrayContainsKey!0 lt!54435 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000) e!69669)))

(declare-fun b!107091 () Bool)

(declare-fun e!69670 () Bool)

(assert (=> b!107091 (= e!69669 e!69670)))

(declare-fun res!53191 () Bool)

(assert (=> b!107091 (=> (not res!53191) (not e!69670))))

(assert (=> b!107091 (= res!53191 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 lt!54435)))))

(declare-fun b!107092 () Bool)

(assert (=> b!107092 (= e!69670 (arrayContainsKey!0 lt!54435 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!29605 (not res!53190)) b!107091))

(assert (= (and b!107091 res!53191) b!107092))

(declare-fun m!120343 () Bool)

(assert (=> d!29605 m!120343))

(assert (=> b!107092 m!117519))

(declare-fun m!120345 () Bool)

(assert (=> b!107092 m!120345))

(assert (=> d!29023 d!29605))

(declare-fun b!107093 () Bool)

(declare-fun e!69671 () (_ BitVec 32))

(declare-fun call!11340 () (_ BitVec 32))

(assert (=> b!107093 (= e!69671 (bvadd #b00000000000000000000000000000001 call!11340))))

(declare-fun b!107094 () Bool)

(assert (=> b!107094 (= e!69671 call!11340)))

(declare-fun b!107095 () Bool)

(declare-fun e!69672 () (_ BitVec 32))

(assert (=> b!107095 (= e!69672 #b00000000000000000000000000000000)))

(declare-fun d!29607 () Bool)

(declare-fun lt!54909 () (_ BitVec 32))

(assert (=> d!29607 (and (bvsge lt!54909 #b00000000000000000000000000000000) (bvsle lt!54909 (bvsub (size!2317 lt!54447) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)))))))

(assert (=> d!29607 (= lt!54909 e!69672)))

(declare-fun c!18787 () Bool)

(assert (=> d!29607 (= c!18787 (bvsge (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (bvadd (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000001)))))

(assert (=> d!29607 (and (bvsle (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (bvadd (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000001)) (bvsge (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000001) (size!2317 lt!54447)))))

(assert (=> d!29607 (= (arrayCountValidKeys!0 lt!54447 (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) (bvadd (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000001)) lt!54909)))

(declare-fun b!107096 () Bool)

(assert (=> b!107096 (= e!69672 e!69671)))

(declare-fun c!18788 () Bool)

(assert (=> b!107096 (= c!18788 (validKeyInArray!0 (select (arr!2062 lt!54447) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)))))))

(declare-fun bm!11337 () Bool)

(assert (=> bm!11337 (= call!11340 (arrayCountValidKeys!0 lt!54447 (bvadd (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000001) (bvadd (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000001)))))

(assert (= (and d!29607 c!18787) b!107095))

(assert (= (and d!29607 (not c!18787)) b!107096))

(assert (= (and b!107096 c!18788) b!107093))

(assert (= (and b!107096 (not c!18788)) b!107094))

(assert (= (or b!107093 b!107094) bm!11337))

(assert (=> b!107096 m!120247))

(assert (=> b!107096 m!120247))

(assert (=> b!107096 m!120249))

(declare-fun m!120347 () Bool)

(assert (=> bm!11337 m!120347))

(assert (=> d!29023 d!29607))

(declare-fun d!29609 () Bool)

(assert (=> d!29609 (arrayContainsKey!0 lt!54435 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!54912 () Unit!3250)

(declare-fun choose!13 (array!4348 (_ BitVec 64) (_ BitVec 32)) Unit!3250)

(assert (=> d!29609 (= lt!54912 (choose!13 lt!54435 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938))))))

(assert (=> d!29609 (bvsge (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938)) #b00000000000000000000000000000000)))

(assert (=> d!29609 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!54435 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (ite c!18358 (index!3227 lt!53938) (index!3224 lt!53938))) lt!54912)))

(declare-fun bs!4404 () Bool)

(assert (= bs!4404 d!29609))

(assert (=> bs!4404 m!117519))

(assert (=> bs!4404 m!118679))

(assert (=> bs!4404 m!117519))

(declare-fun m!120349 () Bool)

(assert (=> bs!4404 m!120349))

(assert (=> d!29023 d!29609))

(declare-fun d!29611 () Bool)

(declare-fun e!69674 () Bool)

(assert (=> d!29611 e!69674))

(declare-fun res!53192 () Bool)

(assert (=> d!29611 (=> res!53192 e!69674)))

(declare-fun lt!54913 () Bool)

(assert (=> d!29611 (= res!53192 (not lt!54913))))

(declare-fun lt!54916 () Bool)

(assert (=> d!29611 (= lt!54913 lt!54916)))

(declare-fun lt!54915 () Unit!3250)

(declare-fun e!69673 () Unit!3250)

(assert (=> d!29611 (= lt!54915 e!69673)))

(declare-fun c!18789 () Bool)

(assert (=> d!29611 (= c!18789 lt!54916)))

(assert (=> d!29611 (= lt!54916 (containsKey!159 (toList!808 lt!54318) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29611 (= (contains!829 lt!54318 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54913)))

(declare-fun b!107097 () Bool)

(declare-fun lt!54914 () Unit!3250)

(assert (=> b!107097 (= e!69673 lt!54914)))

(assert (=> b!107097 (= lt!54914 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54318) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107097 (isDefined!109 (getValueByKey!155 (toList!808 lt!54318) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107098 () Bool)

(declare-fun Unit!3320 () Unit!3250)

(assert (=> b!107098 (= e!69673 Unit!3320)))

(declare-fun b!107099 () Bool)

(assert (=> b!107099 (= e!69674 (isDefined!109 (getValueByKey!155 (toList!808 lt!54318) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29611 c!18789) b!107097))

(assert (= (and d!29611 (not c!18789)) b!107098))

(assert (= (and d!29611 (not res!53192)) b!107099))

(declare-fun m!120351 () Bool)

(assert (=> d!29611 m!120351))

(declare-fun m!120353 () Bool)

(assert (=> b!107097 m!120353))

(assert (=> b!107097 m!118879))

(assert (=> b!107097 m!118879))

(declare-fun m!120355 () Bool)

(assert (=> b!107097 m!120355))

(assert (=> b!107099 m!118879))

(assert (=> b!107099 m!118879))

(assert (=> b!107099 m!120355))

(assert (=> bm!11222 d!29611))

(declare-fun d!29613 () Bool)

(assert (not d!29613))

(assert (=> b!106115 d!29613))

(assert (=> bm!11191 d!29187))

(declare-fun d!29615 () Bool)

(assert (=> d!29615 (= (get!1342 (getValueByKey!155 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2896 (getValueByKey!155 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28897 d!29615))

(declare-fun b!107101 () Bool)

(declare-fun e!69675 () Option!161)

(declare-fun e!69676 () Option!161)

(assert (=> b!107101 (= e!69675 e!69676)))

(declare-fun c!18791 () Bool)

(assert (=> b!107101 (= c!18791 (and ((_ is Cons!1638) (toList!808 lt!54011)) (not (= (_1!1215 (h!2235 (toList!808 lt!54011))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!29617 () Bool)

(declare-fun c!18790 () Bool)

(assert (=> d!29617 (= c!18790 (and ((_ is Cons!1638) (toList!808 lt!54011)) (= (_1!1215 (h!2235 (toList!808 lt!54011))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29617 (= (getValueByKey!155 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000) e!69675)))

(declare-fun b!107102 () Bool)

(assert (=> b!107102 (= e!69676 (getValueByKey!155 (t!5737 (toList!808 lt!54011)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107100 () Bool)

(assert (=> b!107100 (= e!69675 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54011)))))))

(declare-fun b!107103 () Bool)

(assert (=> b!107103 (= e!69676 None!159)))

(assert (= (and d!29617 c!18790) b!107100))

(assert (= (and d!29617 (not c!18790)) b!107101))

(assert (= (and b!107101 c!18791) b!107102))

(assert (= (and b!107101 (not c!18791)) b!107103))

(declare-fun m!120357 () Bool)

(assert (=> b!107102 m!120357))

(assert (=> d!28897 d!29617))

(declare-fun d!29619 () Bool)

(declare-fun res!53193 () Bool)

(declare-fun e!69677 () Bool)

(assert (=> d!29619 (=> res!53193 e!69677)))

(assert (=> d!29619 (= res!53193 (and ((_ is Cons!1638) (toList!808 lt!54058)) (= (_1!1215 (h!2235 (toList!808 lt!54058))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29619 (= (containsKey!159 (toList!808 lt!54058) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!69677)))

(declare-fun b!107104 () Bool)

(declare-fun e!69678 () Bool)

(assert (=> b!107104 (= e!69677 e!69678)))

(declare-fun res!53194 () Bool)

(assert (=> b!107104 (=> (not res!53194) (not e!69678))))

(assert (=> b!107104 (= res!53194 (and (or (not ((_ is Cons!1638) (toList!808 lt!54058))) (bvsle (_1!1215 (h!2235 (toList!808 lt!54058))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1638) (toList!808 lt!54058)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54058))) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!107105 () Bool)

(assert (=> b!107105 (= e!69678 (containsKey!159 (t!5737 (toList!808 lt!54058)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!29619 (not res!53193)) b!107104))

(assert (= (and b!107104 res!53194) b!107105))

(assert (=> b!107105 m!117687))

(declare-fun m!120359 () Bool)

(assert (=> b!107105 m!120359))

(assert (=> d!28855 d!29619))

(declare-fun d!29621 () Bool)

(declare-fun lt!54917 () Bool)

(assert (=> d!29621 (= lt!54917 (select (content!108 (toList!808 lt!54291)) (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun e!69679 () Bool)

(assert (=> d!29621 (= lt!54917 e!69679)))

(declare-fun res!53196 () Bool)

(assert (=> d!29621 (=> (not res!53196) (not e!69679))))

(assert (=> d!29621 (= res!53196 ((_ is Cons!1638) (toList!808 lt!54291)))))

(assert (=> d!29621 (= (contains!830 (toList!808 lt!54291) (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54917)))

(declare-fun b!107106 () Bool)

(declare-fun e!69680 () Bool)

(assert (=> b!107106 (= e!69679 e!69680)))

(declare-fun res!53195 () Bool)

(assert (=> b!107106 (=> res!53195 e!69680)))

(assert (=> b!107106 (= res!53195 (= (h!2235 (toList!808 lt!54291)) (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!107107 () Bool)

(assert (=> b!107107 (= e!69680 (contains!830 (t!5737 (toList!808 lt!54291)) (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!29621 res!53196) b!107106))

(assert (= (and b!107106 (not res!53195)) b!107107))

(declare-fun m!120361 () Bool)

(assert (=> d!29621 m!120361))

(declare-fun m!120363 () Bool)

(assert (=> d!29621 m!120363))

(declare-fun m!120365 () Bool)

(assert (=> b!107107 m!120365))

(assert (=> b!106036 d!29621))

(declare-fun d!29623 () Bool)

(assert (=> d!29623 (= (content!109 Nil!1640) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!28999 d!29623))

(assert (=> b!106199 d!28877))

(declare-fun d!29625 () Bool)

(assert (=> d!29625 (= (inRange!0 (ite c!18438 (index!3224 lt!54123) (index!3227 lt!54123)) (mask!6728 newMap!16)) (and (bvsge (ite c!18438 (index!3224 lt!54123) (index!3227 lt!54123)) #b00000000000000000000000000000000) (bvslt (ite c!18438 (index!3224 lt!54123) (index!3227 lt!54123)) (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11181 d!29625))

(declare-fun d!29627 () Bool)

(assert (=> d!29627 (= ($colon$colon!80 e!69097 (ite c!18518 (h!2235 (toList!808 lt!53824)) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818)))) (Cons!1638 (ite c!18518 (h!2235 (toList!808 lt!53824)) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))) e!69097))))

(assert (=> bm!11230 d!29627))

(assert (=> bm!11218 d!29307))

(declare-fun d!29629 () Bool)

(declare-fun res!53197 () Bool)

(declare-fun e!69681 () Bool)

(assert (=> d!29629 (=> res!53197 e!69681)))

(assert (=> d!29629 (= res!53197 (and ((_ is Cons!1638) (toList!808 lt!54038)) (= (_1!1215 (h!2235 (toList!808 lt!54038))) (_1!1215 lt!53817))))))

(assert (=> d!29629 (= (containsKey!159 (toList!808 lt!54038) (_1!1215 lt!53817)) e!69681)))

(declare-fun b!107108 () Bool)

(declare-fun e!69682 () Bool)

(assert (=> b!107108 (= e!69681 e!69682)))

(declare-fun res!53198 () Bool)

(assert (=> b!107108 (=> (not res!53198) (not e!69682))))

(assert (=> b!107108 (= res!53198 (and (or (not ((_ is Cons!1638) (toList!808 lt!54038))) (bvsle (_1!1215 (h!2235 (toList!808 lt!54038))) (_1!1215 lt!53817))) ((_ is Cons!1638) (toList!808 lt!54038)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54038))) (_1!1215 lt!53817))))))

(declare-fun b!107109 () Bool)

(assert (=> b!107109 (= e!69682 (containsKey!159 (t!5737 (toList!808 lt!54038)) (_1!1215 lt!53817)))))

(assert (= (and d!29629 (not res!53197)) b!107108))

(assert (= (and b!107108 res!53198) b!107109))

(declare-fun m!120367 () Bool)

(assert (=> b!107109 m!120367))

(assert (=> d!29003 d!29629))

(assert (=> b!105976 d!29061))

(assert (=> b!105964 d!29035))

(assert (=> b!105964 d!29037))

(assert (=> d!28911 d!29203))

(declare-fun d!29631 () Bool)

(assert (=> d!29631 (= (get!1342 (getValueByKey!155 (toList!808 lt!54008) lt!54003)) (v!2896 (getValueByKey!155 (toList!808 lt!54008) lt!54003)))))

(assert (=> d!28957 d!29631))

(declare-fun b!107111 () Bool)

(declare-fun e!69683 () Option!161)

(declare-fun e!69684 () Option!161)

(assert (=> b!107111 (= e!69683 e!69684)))

(declare-fun c!18793 () Bool)

(assert (=> b!107111 (= c!18793 (and ((_ is Cons!1638) (toList!808 lt!54008)) (not (= (_1!1215 (h!2235 (toList!808 lt!54008))) lt!54003))))))

(declare-fun d!29633 () Bool)

(declare-fun c!18792 () Bool)

(assert (=> d!29633 (= c!18792 (and ((_ is Cons!1638) (toList!808 lt!54008)) (= (_1!1215 (h!2235 (toList!808 lt!54008))) lt!54003)))))

(assert (=> d!29633 (= (getValueByKey!155 (toList!808 lt!54008) lt!54003) e!69683)))

(declare-fun b!107112 () Bool)

(assert (=> b!107112 (= e!69684 (getValueByKey!155 (t!5737 (toList!808 lt!54008)) lt!54003))))

(declare-fun b!107110 () Bool)

(assert (=> b!107110 (= e!69683 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54008)))))))

(declare-fun b!107113 () Bool)

(assert (=> b!107113 (= e!69684 None!159)))

(assert (= (and d!29633 c!18792) b!107110))

(assert (= (and d!29633 (not c!18792)) b!107111))

(assert (= (and b!107111 c!18793) b!107112))

(assert (= (and b!107111 (not c!18793)) b!107113))

(declare-fun m!120369 () Bool)

(assert (=> b!107112 m!120369))

(assert (=> d!28957 d!29633))

(declare-fun d!29635 () Bool)

(declare-fun lt!54918 () Bool)

(assert (=> d!29635 (= lt!54918 (select (content!108 (toList!808 lt!54212)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(declare-fun e!69685 () Bool)

(assert (=> d!29635 (= lt!54918 e!69685)))

(declare-fun res!53200 () Bool)

(assert (=> d!29635 (=> (not res!53200) (not e!69685))))

(assert (=> d!29635 (= res!53200 ((_ is Cons!1638) (toList!808 lt!54212)))))

(assert (=> d!29635 (= (contains!830 (toList!808 lt!54212) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) lt!54918)))

(declare-fun b!107114 () Bool)

(declare-fun e!69686 () Bool)

(assert (=> b!107114 (= e!69685 e!69686)))

(declare-fun res!53199 () Bool)

(assert (=> b!107114 (=> res!53199 e!69686)))

(assert (=> b!107114 (= res!53199 (= (h!2235 (toList!808 lt!54212)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(declare-fun b!107115 () Bool)

(assert (=> b!107115 (= e!69686 (contains!830 (t!5737 (toList!808 lt!54212)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))

(assert (= (and d!29635 res!53200) b!107114))

(assert (= (and b!107114 (not res!53199)) b!107115))

(declare-fun m!120371 () Bool)

(assert (=> d!29635 m!120371))

(declare-fun m!120373 () Bool)

(assert (=> d!29635 m!120373))

(declare-fun m!120375 () Bool)

(assert (=> b!107115 m!120375))

(assert (=> b!105968 d!29635))

(declare-fun b!107134 () Bool)

(declare-fun lt!54924 () SeekEntryResult!269)

(assert (=> b!107134 (and (bvsge (index!3226 lt!54924) #b00000000000000000000000000000000) (bvslt (index!3226 lt!54924) (size!2317 (_keys!4288 newMap!16))))))

(declare-fun e!69699 () Bool)

(assert (=> b!107134 (= e!69699 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3226 lt!54924)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107136 () Bool)

(declare-fun e!69701 () SeekEntryResult!269)

(declare-fun e!69700 () SeekEntryResult!269)

(assert (=> b!107136 (= e!69701 e!69700)))

(declare-fun lt!54923 () (_ BitVec 64))

(declare-fun c!18802 () Bool)

(assert (=> b!107136 (= c!18802 (or (= lt!54923 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) (= (bvadd lt!54923 lt!54923) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107137 () Bool)

(assert (=> b!107137 (and (bvsge (index!3226 lt!54924) #b00000000000000000000000000000000) (bvslt (index!3226 lt!54924) (size!2317 (_keys!4288 newMap!16))))))

(declare-fun res!53208 () Bool)

(assert (=> b!107137 (= res!53208 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3226 lt!54924)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107137 (=> res!53208 e!69699)))

(declare-fun b!107138 () Bool)

(assert (=> b!107138 (and (bvsge (index!3226 lt!54924) #b00000000000000000000000000000000) (bvslt (index!3226 lt!54924) (size!2317 (_keys!4288 newMap!16))))))

(declare-fun res!53207 () Bool)

(assert (=> b!107138 (= res!53207 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3226 lt!54924)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> b!107138 (=> res!53207 e!69699)))

(declare-fun e!69698 () Bool)

(assert (=> b!107138 (= e!69698 e!69699)))

(declare-fun b!107139 () Bool)

(declare-fun e!69697 () Bool)

(assert (=> b!107139 (= e!69697 (bvsge (x!13655 lt!54924) #b01111111111111111111111111111110))))

(declare-fun b!107140 () Bool)

(assert (=> b!107140 (= e!69700 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (mask!6728 newMap!16)) #b00000000000000000000000000000000 (mask!6728 newMap!16)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun b!107141 () Bool)

(assert (=> b!107141 (= e!69700 (Intermediate!269 false (toIndex!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (mask!6728 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!107142 () Bool)

(assert (=> b!107142 (= e!69697 e!69698)))

(declare-fun res!53209 () Bool)

(assert (=> b!107142 (= res!53209 (and ((_ is Intermediate!269) lt!54924) (not (undefined!1081 lt!54924)) (bvslt (x!13655 lt!54924) #b01111111111111111111111111111110) (bvsge (x!13655 lt!54924) #b00000000000000000000000000000000) (bvsge (x!13655 lt!54924) #b00000000000000000000000000000000)))))

(assert (=> b!107142 (=> (not res!53209) (not e!69698))))

(declare-fun d!29637 () Bool)

(assert (=> d!29637 e!69697))

(declare-fun c!18801 () Bool)

(assert (=> d!29637 (= c!18801 (and ((_ is Intermediate!269) lt!54924) (undefined!1081 lt!54924)))))

(assert (=> d!29637 (= lt!54924 e!69701)))

(declare-fun c!18800 () Bool)

(assert (=> d!29637 (= c!18800 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!29637 (= lt!54923 (select (arr!2062 (_keys!4288 newMap!16)) (toIndex!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (mask!6728 newMap!16))))))

(assert (=> d!29637 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29637 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (mask!6728 newMap!16)) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)) lt!54924)))

(declare-fun b!107135 () Bool)

(assert (=> b!107135 (= e!69701 (Intermediate!269 true (toIndex!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (mask!6728 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!29637 c!18800) b!107135))

(assert (= (and d!29637 (not c!18800)) b!107136))

(assert (= (and b!107136 c!18802) b!107141))

(assert (= (and b!107136 (not c!18802)) b!107140))

(assert (= (and d!29637 c!18801) b!107139))

(assert (= (and d!29637 (not c!18801)) b!107142))

(assert (= (and b!107142 res!53209) b!107138))

(assert (= (and b!107138 (not res!53207)) b!107137))

(assert (= (and b!107137 (not res!53208)) b!107134))

(declare-fun m!120377 () Bool)

(assert (=> b!107134 m!120377))

(assert (=> b!107140 m!117871))

(declare-fun m!120379 () Bool)

(assert (=> b!107140 m!120379))

(assert (=> b!107140 m!120379))

(assert (=> b!107140 m!117519))

(declare-fun m!120381 () Bool)

(assert (=> b!107140 m!120381))

(assert (=> b!107138 m!120377))

(assert (=> b!107137 m!120377))

(assert (=> d!29637 m!117871))

(declare-fun m!120383 () Bool)

(assert (=> d!29637 m!120383))

(assert (=> d!29637 m!117867))

(assert (=> d!28837 d!29637))

(declare-fun d!29639 () Bool)

(declare-fun lt!54930 () (_ BitVec 32))

(declare-fun lt!54929 () (_ BitVec 32))

(assert (=> d!29639 (= lt!54930 (bvmul (bvxor lt!54929 (bvlshr lt!54929 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!29639 (= lt!54929 ((_ extract 31 0) (bvand (bvxor (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvlshr (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!29639 (and (bvsge (mask!6728 newMap!16) #b00000000000000000000000000000000) (let ((res!53210 (let ((h!2237 ((_ extract 31 0) (bvand (bvxor (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (bvlshr (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13758 (bvmul (bvxor h!2237 (bvlshr h!2237 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13758 (bvlshr x!13758 #b00000000000000000000000000001101)) (mask!6728 newMap!16)))))) (and (bvslt res!53210 (bvadd (mask!6728 newMap!16) #b00000000000000000000000000000001)) (bvsge res!53210 #b00000000000000000000000000000000))))))

(assert (=> d!29639 (= (toIndex!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (mask!6728 newMap!16)) (bvand (bvxor lt!54930 (bvlshr lt!54930 #b00000000000000000000000000001101)) (mask!6728 newMap!16)))))

(assert (=> d!28837 d!29639))

(assert (=> d!28837 d!29203))

(declare-fun d!29641 () Bool)

(assert (=> d!29641 (= (apply!98 (+!146 lt!54259 (tuple2!2411 lt!54269 (minValue!2457 newMap!16))) lt!54254) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54259 (tuple2!2411 lt!54269 (minValue!2457 newMap!16)))) lt!54254)))))

(declare-fun bs!4405 () Bool)

(assert (= bs!4405 d!29641))

(declare-fun m!120385 () Bool)

(assert (=> bs!4405 m!120385))

(assert (=> bs!4405 m!120385))

(declare-fun m!120387 () Bool)

(assert (=> bs!4405 m!120387))

(assert (=> b!106004 d!29641))

(declare-fun d!29643 () Bool)

(assert (=> d!29643 (= (apply!98 lt!54260 lt!54258) (get!1342 (getValueByKey!155 (toList!808 lt!54260) lt!54258)))))

(declare-fun bs!4406 () Bool)

(assert (= bs!4406 d!29643))

(declare-fun m!120389 () Bool)

(assert (=> bs!4406 m!120389))

(assert (=> bs!4406 m!120389))

(declare-fun m!120391 () Bool)

(assert (=> bs!4406 m!120391))

(assert (=> b!106004 d!29643))

(declare-fun d!29645 () Bool)

(declare-fun e!69702 () Bool)

(assert (=> d!29645 e!69702))

(declare-fun res!53212 () Bool)

(assert (=> d!29645 (=> (not res!53212) (not e!69702))))

(declare-fun lt!54933 () ListLongMap!1585)

(assert (=> d!29645 (= res!53212 (contains!829 lt!54933 (_1!1215 (tuple2!2411 lt!54252 (minValue!2457 newMap!16)))))))

(declare-fun lt!54932 () List!1642)

(assert (=> d!29645 (= lt!54933 (ListLongMap!1586 lt!54932))))

(declare-fun lt!54934 () Unit!3250)

(declare-fun lt!54931 () Unit!3250)

(assert (=> d!29645 (= lt!54934 lt!54931)))

(assert (=> d!29645 (= (getValueByKey!155 lt!54932 (_1!1215 (tuple2!2411 lt!54252 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54252 (minValue!2457 newMap!16)))))))

(assert (=> d!29645 (= lt!54931 (lemmaContainsTupThenGetReturnValue!73 lt!54932 (_1!1215 (tuple2!2411 lt!54252 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54252 (minValue!2457 newMap!16)))))))

(assert (=> d!29645 (= lt!54932 (insertStrictlySorted!75 (toList!808 lt!54260) (_1!1215 (tuple2!2411 lt!54252 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54252 (minValue!2457 newMap!16)))))))

(assert (=> d!29645 (= (+!146 lt!54260 (tuple2!2411 lt!54252 (minValue!2457 newMap!16))) lt!54933)))

(declare-fun b!107143 () Bool)

(declare-fun res!53211 () Bool)

(assert (=> b!107143 (=> (not res!53211) (not e!69702))))

(assert (=> b!107143 (= res!53211 (= (getValueByKey!155 (toList!808 lt!54933) (_1!1215 (tuple2!2411 lt!54252 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54252 (minValue!2457 newMap!16))))))))

(declare-fun b!107144 () Bool)

(assert (=> b!107144 (= e!69702 (contains!830 (toList!808 lt!54933) (tuple2!2411 lt!54252 (minValue!2457 newMap!16))))))

(assert (= (and d!29645 res!53212) b!107143))

(assert (= (and b!107143 res!53211) b!107144))

(declare-fun m!120393 () Bool)

(assert (=> d!29645 m!120393))

(declare-fun m!120395 () Bool)

(assert (=> d!29645 m!120395))

(declare-fun m!120397 () Bool)

(assert (=> d!29645 m!120397))

(declare-fun m!120399 () Bool)

(assert (=> d!29645 m!120399))

(declare-fun m!120401 () Bool)

(assert (=> b!107143 m!120401))

(declare-fun m!120403 () Bool)

(assert (=> b!107144 m!120403))

(assert (=> b!106004 d!29645))

(declare-fun d!29647 () Bool)

(assert (=> d!29647 (contains!829 (+!146 lt!54268 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) lt!54267)))

(declare-fun lt!54935 () Unit!3250)

(assert (=> d!29647 (= lt!54935 (choose!671 lt!54268 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) lt!54267))))

(assert (=> d!29647 (contains!829 lt!54268 lt!54267)))

(assert (=> d!29647 (= (addStillContains!74 lt!54268 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) lt!54267) lt!54935)))

(declare-fun bs!4407 () Bool)

(assert (= bs!4407 d!29647))

(assert (=> bs!4407 m!118323))

(assert (=> bs!4407 m!118323))

(assert (=> bs!4407 m!118325))

(declare-fun m!120405 () Bool)

(assert (=> bs!4407 m!120405))

(declare-fun m!120407 () Bool)

(assert (=> bs!4407 m!120407))

(assert (=> b!106004 d!29647))

(declare-fun d!29649 () Bool)

(assert (=> d!29649 (= (apply!98 (+!146 lt!54259 (tuple2!2411 lt!54269 (minValue!2457 newMap!16))) lt!54254) (apply!98 lt!54259 lt!54254))))

(declare-fun lt!54936 () Unit!3250)

(assert (=> d!29649 (= lt!54936 (choose!670 lt!54259 lt!54269 (minValue!2457 newMap!16) lt!54254))))

(declare-fun e!69703 () Bool)

(assert (=> d!29649 e!69703))

(declare-fun res!53213 () Bool)

(assert (=> d!29649 (=> (not res!53213) (not e!69703))))

(assert (=> d!29649 (= res!53213 (contains!829 lt!54259 lt!54254))))

(assert (=> d!29649 (= (addApplyDifferent!74 lt!54259 lt!54269 (minValue!2457 newMap!16) lt!54254) lt!54936)))

(declare-fun b!107145 () Bool)

(assert (=> b!107145 (= e!69703 (not (= lt!54254 lt!54269)))))

(assert (= (and d!29649 res!53213) b!107145))

(declare-fun m!120409 () Bool)

(assert (=> d!29649 m!120409))

(assert (=> d!29649 m!118315))

(assert (=> d!29649 m!118317))

(assert (=> d!29649 m!118315))

(assert (=> d!29649 m!118327))

(declare-fun m!120411 () Bool)

(assert (=> d!29649 m!120411))

(assert (=> b!106004 d!29649))

(assert (=> b!106004 d!29285))

(declare-fun d!29651 () Bool)

(assert (=> d!29651 (= (apply!98 (+!146 lt!54260 (tuple2!2411 lt!54252 (minValue!2457 newMap!16))) lt!54258) (apply!98 lt!54260 lt!54258))))

(declare-fun lt!54937 () Unit!3250)

(assert (=> d!29651 (= lt!54937 (choose!670 lt!54260 lt!54252 (minValue!2457 newMap!16) lt!54258))))

(declare-fun e!69704 () Bool)

(assert (=> d!29651 e!69704))

(declare-fun res!53214 () Bool)

(assert (=> d!29651 (=> (not res!53214) (not e!69704))))

(assert (=> d!29651 (= res!53214 (contains!829 lt!54260 lt!54258))))

(assert (=> d!29651 (= (addApplyDifferent!74 lt!54260 lt!54252 (minValue!2457 newMap!16) lt!54258) lt!54937)))

(declare-fun b!107146 () Bool)

(assert (=> b!107146 (= e!69704 (not (= lt!54258 lt!54252)))))

(assert (= (and d!29651 res!53214) b!107146))

(declare-fun m!120413 () Bool)

(assert (=> d!29651 m!120413))

(assert (=> d!29651 m!118309))

(assert (=> d!29651 m!118311))

(assert (=> d!29651 m!118309))

(assert (=> d!29651 m!118305))

(declare-fun m!120415 () Bool)

(assert (=> d!29651 m!120415))

(assert (=> b!106004 d!29651))

(declare-fun d!29653 () Bool)

(assert (=> d!29653 (= (apply!98 (+!146 lt!54263 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) lt!54270) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54263 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))) lt!54270)))))

(declare-fun bs!4408 () Bool)

(assert (= bs!4408 d!29653))

(declare-fun m!120417 () Bool)

(assert (=> bs!4408 m!120417))

(assert (=> bs!4408 m!120417))

(declare-fun m!120419 () Bool)

(assert (=> bs!4408 m!120419))

(assert (=> b!106004 d!29653))

(declare-fun d!29655 () Bool)

(declare-fun e!69705 () Bool)

(assert (=> d!29655 e!69705))

(declare-fun res!53216 () Bool)

(assert (=> d!29655 (=> (not res!53216) (not e!69705))))

(declare-fun lt!54940 () ListLongMap!1585)

(assert (=> d!29655 (= res!53216 (contains!829 lt!54940 (_1!1215 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))))))

(declare-fun lt!54939 () List!1642)

(assert (=> d!29655 (= lt!54940 (ListLongMap!1586 lt!54939))))

(declare-fun lt!54941 () Unit!3250)

(declare-fun lt!54938 () Unit!3250)

(assert (=> d!29655 (= lt!54941 lt!54938)))

(assert (=> d!29655 (= (getValueByKey!155 lt!54939 (_1!1215 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))) (Some!160 (_2!1215 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29655 (= lt!54938 (lemmaContainsTupThenGetReturnValue!73 lt!54939 (_1!1215 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) (_2!1215 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29655 (= lt!54939 (insertStrictlySorted!75 (toList!808 lt!54268) (_1!1215 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) (_2!1215 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29655 (= (+!146 lt!54268 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) lt!54940)))

(declare-fun b!107147 () Bool)

(declare-fun res!53215 () Bool)

(assert (=> b!107147 (=> (not res!53215) (not e!69705))))

(assert (=> b!107147 (= res!53215 (= (getValueByKey!155 (toList!808 lt!54940) (_1!1215 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))) (Some!160 (_2!1215 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))))))))

(declare-fun b!107148 () Bool)

(assert (=> b!107148 (= e!69705 (contains!830 (toList!808 lt!54940) (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))))))

(assert (= (and d!29655 res!53216) b!107147))

(assert (= (and b!107147 res!53215) b!107148))

(declare-fun m!120421 () Bool)

(assert (=> d!29655 m!120421))

(declare-fun m!120423 () Bool)

(assert (=> d!29655 m!120423))

(declare-fun m!120425 () Bool)

(assert (=> d!29655 m!120425))

(declare-fun m!120427 () Bool)

(assert (=> d!29655 m!120427))

(declare-fun m!120429 () Bool)

(assert (=> b!107147 m!120429))

(declare-fun m!120431 () Bool)

(assert (=> b!107148 m!120431))

(assert (=> b!106004 d!29655))

(declare-fun d!29657 () Bool)

(declare-fun e!69707 () Bool)

(assert (=> d!29657 e!69707))

(declare-fun res!53217 () Bool)

(assert (=> d!29657 (=> res!53217 e!69707)))

(declare-fun lt!54942 () Bool)

(assert (=> d!29657 (= res!53217 (not lt!54942))))

(declare-fun lt!54945 () Bool)

(assert (=> d!29657 (= lt!54942 lt!54945)))

(declare-fun lt!54944 () Unit!3250)

(declare-fun e!69706 () Unit!3250)

(assert (=> d!29657 (= lt!54944 e!69706)))

(declare-fun c!18803 () Bool)

(assert (=> d!29657 (= c!18803 lt!54945)))

(assert (=> d!29657 (= lt!54945 (containsKey!159 (toList!808 (+!146 lt!54268 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))) lt!54267))))

(assert (=> d!29657 (= (contains!829 (+!146 lt!54268 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) lt!54267) lt!54942)))

(declare-fun b!107149 () Bool)

(declare-fun lt!54943 () Unit!3250)

(assert (=> b!107149 (= e!69706 lt!54943)))

(assert (=> b!107149 (= lt!54943 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (+!146 lt!54268 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))) lt!54267))))

(assert (=> b!107149 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54268 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))) lt!54267))))

(declare-fun b!107150 () Bool)

(declare-fun Unit!3321 () Unit!3250)

(assert (=> b!107150 (= e!69706 Unit!3321)))

(declare-fun b!107151 () Bool)

(assert (=> b!107151 (= e!69707 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54268 (tuple2!2411 lt!54264 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))) lt!54267)))))

(assert (= (and d!29657 c!18803) b!107149))

(assert (= (and d!29657 (not c!18803)) b!107150))

(assert (= (and d!29657 (not res!53217)) b!107151))

(declare-fun m!120433 () Bool)

(assert (=> d!29657 m!120433))

(declare-fun m!120435 () Bool)

(assert (=> b!107149 m!120435))

(declare-fun m!120437 () Bool)

(assert (=> b!107149 m!120437))

(assert (=> b!107149 m!120437))

(declare-fun m!120439 () Bool)

(assert (=> b!107149 m!120439))

(assert (=> b!107151 m!120437))

(assert (=> b!107151 m!120437))

(assert (=> b!107151 m!120439))

(assert (=> b!106004 d!29657))

(declare-fun d!29659 () Bool)

(assert (=> d!29659 (= (apply!98 (+!146 lt!54263 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) lt!54270) (apply!98 lt!54263 lt!54270))))

(declare-fun lt!54946 () Unit!3250)

(assert (=> d!29659 (= lt!54946 (choose!670 lt!54263 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) lt!54270))))

(declare-fun e!69708 () Bool)

(assert (=> d!29659 e!69708))

(declare-fun res!53218 () Bool)

(assert (=> d!29659 (=> (not res!53218) (not e!69708))))

(assert (=> d!29659 (= res!53218 (contains!829 lt!54263 lt!54270))))

(assert (=> d!29659 (= (addApplyDifferent!74 lt!54263 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)) lt!54270) lt!54946)))

(declare-fun b!107152 () Bool)

(assert (=> b!107152 (= e!69708 (not (= lt!54270 lt!54261)))))

(assert (= (and d!29659 res!53218) b!107152))

(declare-fun m!120441 () Bool)

(assert (=> d!29659 m!120441))

(assert (=> d!29659 m!118319))

(assert (=> d!29659 m!118331))

(assert (=> d!29659 m!118319))

(assert (=> d!29659 m!118321))

(declare-fun m!120443 () Bool)

(assert (=> d!29659 m!120443))

(assert (=> b!106004 d!29659))

(declare-fun d!29661 () Bool)

(declare-fun e!69709 () Bool)

(assert (=> d!29661 e!69709))

(declare-fun res!53220 () Bool)

(assert (=> d!29661 (=> (not res!53220) (not e!69709))))

(declare-fun lt!54949 () ListLongMap!1585)

(assert (=> d!29661 (= res!53220 (contains!829 lt!54949 (_1!1215 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))))))

(declare-fun lt!54948 () List!1642)

(assert (=> d!29661 (= lt!54949 (ListLongMap!1586 lt!54948))))

(declare-fun lt!54950 () Unit!3250)

(declare-fun lt!54947 () Unit!3250)

(assert (=> d!29661 (= lt!54950 lt!54947)))

(assert (=> d!29661 (= (getValueByKey!155 lt!54948 (_1!1215 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))) (Some!160 (_2!1215 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29661 (= lt!54947 (lemmaContainsTupThenGetReturnValue!73 lt!54948 (_1!1215 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) (_2!1215 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29661 (= lt!54948 (insertStrictlySorted!75 (toList!808 lt!54263) (_1!1215 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) (_2!1215 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))))))

(assert (=> d!29661 (= (+!146 lt!54263 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))) lt!54949)))

(declare-fun b!107153 () Bool)

(declare-fun res!53219 () Bool)

(assert (=> b!107153 (=> (not res!53219) (not e!69709))))

(assert (=> b!107153 (= res!53219 (= (getValueByKey!155 (toList!808 lt!54949) (_1!1215 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16))))) (Some!160 (_2!1215 (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))))))))

(declare-fun b!107154 () Bool)

(assert (=> b!107154 (= e!69709 (contains!830 (toList!808 lt!54949) (tuple2!2411 lt!54261 (ite (and c!18361 c!18359) lt!53815 (zeroValue!2457 newMap!16)))))))

(assert (= (and d!29661 res!53220) b!107153))

(assert (= (and b!107153 res!53219) b!107154))

(declare-fun m!120445 () Bool)

(assert (=> d!29661 m!120445))

(declare-fun m!120447 () Bool)

(assert (=> d!29661 m!120447))

(declare-fun m!120449 () Bool)

(assert (=> d!29661 m!120449))

(declare-fun m!120451 () Bool)

(assert (=> d!29661 m!120451))

(declare-fun m!120453 () Bool)

(assert (=> b!107153 m!120453))

(declare-fun m!120455 () Bool)

(assert (=> b!107154 m!120455))

(assert (=> b!106004 d!29661))

(declare-fun d!29663 () Bool)

(declare-fun e!69710 () Bool)

(assert (=> d!29663 e!69710))

(declare-fun res!53222 () Bool)

(assert (=> d!29663 (=> (not res!53222) (not e!69710))))

(declare-fun lt!54953 () ListLongMap!1585)

(assert (=> d!29663 (= res!53222 (contains!829 lt!54953 (_1!1215 (tuple2!2411 lt!54269 (minValue!2457 newMap!16)))))))

(declare-fun lt!54952 () List!1642)

(assert (=> d!29663 (= lt!54953 (ListLongMap!1586 lt!54952))))

(declare-fun lt!54954 () Unit!3250)

(declare-fun lt!54951 () Unit!3250)

(assert (=> d!29663 (= lt!54954 lt!54951)))

(assert (=> d!29663 (= (getValueByKey!155 lt!54952 (_1!1215 (tuple2!2411 lt!54269 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54269 (minValue!2457 newMap!16)))))))

(assert (=> d!29663 (= lt!54951 (lemmaContainsTupThenGetReturnValue!73 lt!54952 (_1!1215 (tuple2!2411 lt!54269 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54269 (minValue!2457 newMap!16)))))))

(assert (=> d!29663 (= lt!54952 (insertStrictlySorted!75 (toList!808 lt!54259) (_1!1215 (tuple2!2411 lt!54269 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54269 (minValue!2457 newMap!16)))))))

(assert (=> d!29663 (= (+!146 lt!54259 (tuple2!2411 lt!54269 (minValue!2457 newMap!16))) lt!54953)))

(declare-fun b!107155 () Bool)

(declare-fun res!53221 () Bool)

(assert (=> b!107155 (=> (not res!53221) (not e!69710))))

(assert (=> b!107155 (= res!53221 (= (getValueByKey!155 (toList!808 lt!54953) (_1!1215 (tuple2!2411 lt!54269 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54269 (minValue!2457 newMap!16))))))))

(declare-fun b!107156 () Bool)

(assert (=> b!107156 (= e!69710 (contains!830 (toList!808 lt!54953) (tuple2!2411 lt!54269 (minValue!2457 newMap!16))))))

(assert (= (and d!29663 res!53222) b!107155))

(assert (= (and b!107155 res!53221) b!107156))

(declare-fun m!120457 () Bool)

(assert (=> d!29663 m!120457))

(declare-fun m!120459 () Bool)

(assert (=> d!29663 m!120459))

(declare-fun m!120461 () Bool)

(assert (=> d!29663 m!120461))

(declare-fun m!120463 () Bool)

(assert (=> d!29663 m!120463))

(declare-fun m!120465 () Bool)

(assert (=> b!107155 m!120465))

(declare-fun m!120467 () Bool)

(assert (=> b!107156 m!120467))

(assert (=> b!106004 d!29663))

(declare-fun d!29665 () Bool)

(assert (=> d!29665 (= (apply!98 (+!146 lt!54260 (tuple2!2411 lt!54252 (minValue!2457 newMap!16))) lt!54258) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54260 (tuple2!2411 lt!54252 (minValue!2457 newMap!16)))) lt!54258)))))

(declare-fun bs!4409 () Bool)

(assert (= bs!4409 d!29665))

(declare-fun m!120469 () Bool)

(assert (=> bs!4409 m!120469))

(assert (=> bs!4409 m!120469))

(declare-fun m!120471 () Bool)

(assert (=> bs!4409 m!120471))

(assert (=> b!106004 d!29665))

(declare-fun d!29667 () Bool)

(assert (=> d!29667 (= (apply!98 lt!54263 lt!54270) (get!1342 (getValueByKey!155 (toList!808 lt!54263) lt!54270)))))

(declare-fun bs!4410 () Bool)

(assert (= bs!4410 d!29667))

(declare-fun m!120473 () Bool)

(assert (=> bs!4410 m!120473))

(assert (=> bs!4410 m!120473))

(declare-fun m!120475 () Bool)

(assert (=> bs!4410 m!120475))

(assert (=> b!106004 d!29667))

(declare-fun d!29669 () Bool)

(assert (=> d!29669 (= (apply!98 lt!54259 lt!54254) (get!1342 (getValueByKey!155 (toList!808 lt!54259) lt!54254)))))

(declare-fun bs!4411 () Bool)

(assert (= bs!4411 d!29669))

(declare-fun m!120477 () Bool)

(assert (=> bs!4411 m!120477))

(assert (=> bs!4411 m!120477))

(declare-fun m!120479 () Bool)

(assert (=> bs!4411 m!120479))

(assert (=> b!106004 d!29669))

(declare-fun d!29671 () Bool)

(declare-fun e!69711 () Bool)

(assert (=> d!29671 e!69711))

(declare-fun res!53224 () Bool)

(assert (=> d!29671 (=> (not res!53224) (not e!69711))))

(declare-fun lt!54957 () ListLongMap!1585)

(assert (=> d!29671 (= res!53224 (contains!829 lt!54957 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(declare-fun lt!54956 () List!1642)

(assert (=> d!29671 (= lt!54957 (ListLongMap!1586 lt!54956))))

(declare-fun lt!54958 () Unit!3250)

(declare-fun lt!54955 () Unit!3250)

(assert (=> d!29671 (= lt!54958 lt!54955)))

(assert (=> d!29671 (= (getValueByKey!155 lt!54956 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(assert (=> d!29671 (= lt!54955 (lemmaContainsTupThenGetReturnValue!73 lt!54956 (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(assert (=> d!29671 (= lt!54956 (insertStrictlySorted!75 (toList!808 call!11226) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))))))

(assert (=> d!29671 (= (+!146 call!11226 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))) lt!54957)))

(declare-fun b!107157 () Bool)

(declare-fun res!53223 () Bool)

(assert (=> b!107157 (=> (not res!53223) (not e!69711))))

(assert (=> b!107157 (= res!53223 (= (getValueByKey!155 (toList!808 lt!54957) (_1!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16))))) (Some!160 (_2!1215 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))))))

(declare-fun b!107158 () Bool)

(assert (=> b!107158 (= e!69711 (contains!830 (toList!808 lt!54957) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18361 (ite c!18359 (minValue!2457 newMap!16) lt!53815) (minValue!2457 newMap!16)))))))

(assert (= (and d!29671 res!53224) b!107157))

(assert (= (and b!107157 res!53223) b!107158))

(declare-fun m!120481 () Bool)

(assert (=> d!29671 m!120481))

(declare-fun m!120483 () Bool)

(assert (=> d!29671 m!120483))

(declare-fun m!120485 () Bool)

(assert (=> d!29671 m!120485))

(declare-fun m!120487 () Bool)

(assert (=> d!29671 m!120487))

(declare-fun m!120489 () Bool)

(assert (=> b!107157 m!120489))

(declare-fun m!120491 () Bool)

(assert (=> b!107158 m!120491))

(assert (=> b!106079 d!29671))

(declare-fun b!107160 () Bool)

(declare-fun e!69712 () Option!161)

(declare-fun e!69713 () Option!161)

(assert (=> b!107160 (= e!69712 e!69713)))

(declare-fun c!18805 () Bool)

(assert (=> b!107160 (= c!18805 (and ((_ is Cons!1638) (toList!808 lt!54141)) (not (= (_1!1215 (h!2235 (toList!808 lt!54141))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun d!29673 () Bool)

(declare-fun c!18804 () Bool)

(assert (=> d!29673 (= c!18804 (and ((_ is Cons!1638) (toList!808 lt!54141)) (= (_1!1215 (h!2235 (toList!808 lt!54141))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29673 (= (getValueByKey!155 (toList!808 lt!54141) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69712)))

(declare-fun b!107161 () Bool)

(assert (=> b!107161 (= e!69713 (getValueByKey!155 (t!5737 (toList!808 lt!54141)) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!107159 () Bool)

(assert (=> b!107159 (= e!69712 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54141)))))))

(declare-fun b!107162 () Bool)

(assert (=> b!107162 (= e!69713 None!159)))

(assert (= (and d!29673 c!18804) b!107159))

(assert (= (and d!29673 (not c!18804)) b!107160))

(assert (= (and b!107160 c!18805) b!107161))

(assert (= (and b!107160 (not c!18805)) b!107162))

(declare-fun m!120493 () Bool)

(assert (=> b!107161 m!120493))

(assert (=> b!105854 d!29673))

(declare-fun b!107164 () Bool)

(declare-fun e!69714 () Option!161)

(declare-fun e!69715 () Option!161)

(assert (=> b!107164 (= e!69714 e!69715)))

(declare-fun c!18807 () Bool)

(assert (=> b!107164 (= c!18807 (and ((_ is Cons!1638) (t!5737 lt!54037)) (not (= (_1!1215 (h!2235 (t!5737 lt!54037))) (_1!1215 lt!53817)))))))

(declare-fun d!29675 () Bool)

(declare-fun c!18806 () Bool)

(assert (=> d!29675 (= c!18806 (and ((_ is Cons!1638) (t!5737 lt!54037)) (= (_1!1215 (h!2235 (t!5737 lt!54037))) (_1!1215 lt!53817))))))

(assert (=> d!29675 (= (getValueByKey!155 (t!5737 lt!54037) (_1!1215 lt!53817)) e!69714)))

(declare-fun b!107165 () Bool)

(assert (=> b!107165 (= e!69715 (getValueByKey!155 (t!5737 (t!5737 lt!54037)) (_1!1215 lt!53817)))))

(declare-fun b!107163 () Bool)

(assert (=> b!107163 (= e!69714 (Some!160 (_2!1215 (h!2235 (t!5737 lt!54037)))))))

(declare-fun b!107166 () Bool)

(assert (=> b!107166 (= e!69715 None!159)))

(assert (= (and d!29675 c!18806) b!107163))

(assert (= (and d!29675 (not c!18806)) b!107164))

(assert (= (and b!107164 c!18807) b!107165))

(assert (= (and b!107164 (not c!18807)) b!107166))

(declare-fun m!120495 () Bool)

(assert (=> b!107165 m!120495))

(assert (=> b!106124 d!29675))

(declare-fun d!29677 () Bool)

(assert (=> d!29677 (= (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!376 (getValueByKey!155 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4412 () Bool)

(assert (= bs!4412 d!29677))

(assert (=> bs!4412 m!118057))

(declare-fun m!120497 () Bool)

(assert (=> bs!4412 m!120497))

(assert (=> b!105866 d!29677))

(assert (=> b!105866 d!29617))

(assert (=> b!106200 d!28869))

(assert (=> b!106094 d!29555))

(assert (=> d!28975 d!28973))

(declare-fun d!29679 () Bool)

(assert (=> d!29679 (= (getValueByKey!155 lt!54062 (_1!1215 lt!53818)) (Some!160 (_2!1215 lt!53818)))))

(assert (=> d!29679 true))

(declare-fun _$22!436 () Unit!3250)

(assert (=> d!29679 (= (choose!666 lt!54062 (_1!1215 lt!53818) (_2!1215 lt!53818)) _$22!436)))

(declare-fun bs!4413 () Bool)

(assert (= bs!4413 d!29679))

(assert (=> bs!4413 m!117797))

(assert (=> d!28975 d!29679))

(declare-fun d!29681 () Bool)

(declare-fun res!53225 () Bool)

(declare-fun e!69716 () Bool)

(assert (=> d!29681 (=> res!53225 e!69716)))

(assert (=> d!29681 (= res!53225 (or ((_ is Nil!1639) lt!54062) ((_ is Nil!1639) (t!5737 lt!54062))))))

(assert (=> d!29681 (= (isStrictlySorted!304 lt!54062) e!69716)))

(declare-fun b!107167 () Bool)

(declare-fun e!69717 () Bool)

(assert (=> b!107167 (= e!69716 e!69717)))

(declare-fun res!53226 () Bool)

(assert (=> b!107167 (=> (not res!53226) (not e!69717))))

(assert (=> b!107167 (= res!53226 (bvslt (_1!1215 (h!2235 lt!54062)) (_1!1215 (h!2235 (t!5737 lt!54062)))))))

(declare-fun b!107168 () Bool)

(assert (=> b!107168 (= e!69717 (isStrictlySorted!304 (t!5737 lt!54062)))))

(assert (= (and d!29681 (not res!53225)) b!107167))

(assert (= (and b!107167 res!53226) b!107168))

(declare-fun m!120499 () Bool)

(assert (=> b!107168 m!120499))

(assert (=> d!28975 d!29681))

(assert (=> d!28917 d!28871))

(assert (=> d!28917 d!28873))

(declare-fun d!29683 () Bool)

(assert (=> d!29683 (isDefined!109 (getValueByKey!155 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (=> d!29683 true))

(declare-fun _$12!353 () Unit!3250)

(assert (=> d!29683 (= (choose!667 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) _$12!353)))

(declare-fun bs!4414 () Bool)

(assert (= bs!4414 d!29683))

(assert (=> bs!4414 m!117519))

(assert (=> bs!4414 m!117625))

(assert (=> bs!4414 m!117625))

(assert (=> bs!4414 m!117627))

(assert (=> d!28917 d!29683))

(declare-fun d!29685 () Bool)

(declare-fun res!53227 () Bool)

(declare-fun e!69718 () Bool)

(assert (=> d!29685 (=> res!53227 e!69718)))

(assert (=> d!29685 (= res!53227 (or ((_ is Nil!1639) (toList!808 lt!53820)) ((_ is Nil!1639) (t!5737 (toList!808 lt!53820)))))))

(assert (=> d!29685 (= (isStrictlySorted!304 (toList!808 lt!53820)) e!69718)))

(declare-fun b!107169 () Bool)

(declare-fun e!69719 () Bool)

(assert (=> b!107169 (= e!69718 e!69719)))

(declare-fun res!53228 () Bool)

(assert (=> b!107169 (=> (not res!53228) (not e!69719))))

(assert (=> b!107169 (= res!53228 (bvslt (_1!1215 (h!2235 (toList!808 lt!53820))) (_1!1215 (h!2235 (t!5737 (toList!808 lt!53820))))))))

(declare-fun b!107170 () Bool)

(assert (=> b!107170 (= e!69719 (isStrictlySorted!304 (t!5737 (toList!808 lt!53820))))))

(assert (= (and d!29685 (not res!53227)) b!107169))

(assert (= (and b!107169 res!53228) b!107170))

(declare-fun m!120501 () Bool)

(assert (=> b!107170 m!120501))

(assert (=> d!28917 d!29685))

(declare-fun d!29687 () Bool)

(declare-fun c!18808 () Bool)

(assert (=> d!29687 (= c!18808 ((_ is Nil!1639) (toList!808 lt!54067)))))

(declare-fun e!69720 () (InoxSet tuple2!2410))

(assert (=> d!29687 (= (content!108 (toList!808 lt!54067)) e!69720)))

(declare-fun b!107171 () Bool)

(assert (=> b!107171 (= e!69720 ((as const (Array tuple2!2410 Bool)) false))))

(declare-fun b!107172 () Bool)

(assert (=> b!107172 (= e!69720 ((_ map or) (store ((as const (Array tuple2!2410 Bool)) false) (h!2235 (toList!808 lt!54067)) true) (content!108 (t!5737 (toList!808 lt!54067)))))))

(assert (= (and d!29687 c!18808) b!107171))

(assert (= (and d!29687 (not c!18808)) b!107172))

(declare-fun m!120503 () Bool)

(assert (=> b!107172 m!120503))

(declare-fun m!120505 () Bool)

(assert (=> b!107172 m!120505))

(assert (=> d!29031 d!29687))

(declare-fun b!107173 () Bool)

(declare-fun e!69729 () Bool)

(declare-fun e!69732 () Bool)

(assert (=> b!107173 (= e!69729 e!69732)))

(declare-fun res!53235 () Bool)

(declare-fun call!11347 () Bool)

(assert (=> b!107173 (= res!53235 call!11347)))

(assert (=> b!107173 (=> (not res!53235) (not e!69732))))

(declare-fun bm!11338 () Bool)

(declare-fun call!11341 () ListLongMap!1585)

(assert (=> bm!11338 (= call!11341 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (_2!1216 lt!53943)) (_values!2565 (_2!1216 lt!53943)) (mask!6728 (_2!1216 lt!53943)) (extraKeys!2387 (_2!1216 lt!53943)) (zeroValue!2457 (_2!1216 lt!53943)) (minValue!2457 (_2!1216 lt!53943)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1216 lt!53943))))))

(declare-fun bm!11339 () Bool)

(declare-fun call!11345 () ListLongMap!1585)

(assert (=> bm!11339 (= call!11345 call!11341)))

(declare-fun b!107175 () Bool)

(declare-fun e!69724 () Bool)

(assert (=> b!107175 (= e!69724 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000)))))

(declare-fun bm!11340 () Bool)

(declare-fun call!11344 () ListLongMap!1585)

(declare-fun call!11346 () ListLongMap!1585)

(assert (=> bm!11340 (= call!11344 call!11346)))

(declare-fun b!107176 () Bool)

(declare-fun e!69727 () Unit!3250)

(declare-fun lt!54964 () Unit!3250)

(assert (=> b!107176 (= e!69727 lt!54964)))

(declare-fun lt!54977 () ListLongMap!1585)

(assert (=> b!107176 (= lt!54977 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (_2!1216 lt!53943)) (_values!2565 (_2!1216 lt!53943)) (mask!6728 (_2!1216 lt!53943)) (extraKeys!2387 (_2!1216 lt!53943)) (zeroValue!2457 (_2!1216 lt!53943)) (minValue!2457 (_2!1216 lt!53943)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1216 lt!53943))))))

(declare-fun lt!54973 () (_ BitVec 64))

(assert (=> b!107176 (= lt!54973 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54976 () (_ BitVec 64))

(assert (=> b!107176 (= lt!54976 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000))))

(declare-fun lt!54960 () Unit!3250)

(assert (=> b!107176 (= lt!54960 (addStillContains!74 lt!54977 lt!54973 (zeroValue!2457 (_2!1216 lt!53943)) lt!54976))))

(assert (=> b!107176 (contains!829 (+!146 lt!54977 (tuple2!2411 lt!54973 (zeroValue!2457 (_2!1216 lt!53943)))) lt!54976)))

(declare-fun lt!54959 () Unit!3250)

(assert (=> b!107176 (= lt!54959 lt!54960)))

(declare-fun lt!54969 () ListLongMap!1585)

(assert (=> b!107176 (= lt!54969 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (_2!1216 lt!53943)) (_values!2565 (_2!1216 lt!53943)) (mask!6728 (_2!1216 lt!53943)) (extraKeys!2387 (_2!1216 lt!53943)) (zeroValue!2457 (_2!1216 lt!53943)) (minValue!2457 (_2!1216 lt!53943)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1216 lt!53943))))))

(declare-fun lt!54961 () (_ BitVec 64))

(assert (=> b!107176 (= lt!54961 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54967 () (_ BitVec 64))

(assert (=> b!107176 (= lt!54967 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000))))

(declare-fun lt!54965 () Unit!3250)

(assert (=> b!107176 (= lt!54965 (addApplyDifferent!74 lt!54969 lt!54961 (minValue!2457 (_2!1216 lt!53943)) lt!54967))))

(assert (=> b!107176 (= (apply!98 (+!146 lt!54969 (tuple2!2411 lt!54961 (minValue!2457 (_2!1216 lt!53943)))) lt!54967) (apply!98 lt!54969 lt!54967))))

(declare-fun lt!54975 () Unit!3250)

(assert (=> b!107176 (= lt!54975 lt!54965)))

(declare-fun lt!54972 () ListLongMap!1585)

(assert (=> b!107176 (= lt!54972 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (_2!1216 lt!53943)) (_values!2565 (_2!1216 lt!53943)) (mask!6728 (_2!1216 lt!53943)) (extraKeys!2387 (_2!1216 lt!53943)) (zeroValue!2457 (_2!1216 lt!53943)) (minValue!2457 (_2!1216 lt!53943)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1216 lt!53943))))))

(declare-fun lt!54970 () (_ BitVec 64))

(assert (=> b!107176 (= lt!54970 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54979 () (_ BitVec 64))

(assert (=> b!107176 (= lt!54979 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000))))

(declare-fun lt!54980 () Unit!3250)

(assert (=> b!107176 (= lt!54980 (addApplyDifferent!74 lt!54972 lt!54970 (zeroValue!2457 (_2!1216 lt!53943)) lt!54979))))

(assert (=> b!107176 (= (apply!98 (+!146 lt!54972 (tuple2!2411 lt!54970 (zeroValue!2457 (_2!1216 lt!53943)))) lt!54979) (apply!98 lt!54972 lt!54979))))

(declare-fun lt!54966 () Unit!3250)

(assert (=> b!107176 (= lt!54966 lt!54980)))

(declare-fun lt!54968 () ListLongMap!1585)

(assert (=> b!107176 (= lt!54968 (getCurrentListMapNoExtraKeys!113 (_keys!4288 (_2!1216 lt!53943)) (_values!2565 (_2!1216 lt!53943)) (mask!6728 (_2!1216 lt!53943)) (extraKeys!2387 (_2!1216 lt!53943)) (zeroValue!2457 (_2!1216 lt!53943)) (minValue!2457 (_2!1216 lt!53943)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1216 lt!53943))))))

(declare-fun lt!54978 () (_ BitVec 64))

(assert (=> b!107176 (= lt!54978 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!54963 () (_ BitVec 64))

(assert (=> b!107176 (= lt!54963 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000))))

(assert (=> b!107176 (= lt!54964 (addApplyDifferent!74 lt!54968 lt!54978 (minValue!2457 (_2!1216 lt!53943)) lt!54963))))

(assert (=> b!107176 (= (apply!98 (+!146 lt!54968 (tuple2!2411 lt!54978 (minValue!2457 (_2!1216 lt!53943)))) lt!54963) (apply!98 lt!54968 lt!54963))))

(declare-fun b!107177 () Bool)

(declare-fun e!69728 () Bool)

(assert (=> b!107177 (= e!69728 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000)))))

(declare-fun b!107178 () Bool)

(declare-fun lt!54971 () ListLongMap!1585)

(assert (=> b!107178 (= e!69732 (= (apply!98 lt!54971 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2457 (_2!1216 lt!53943))))))

(declare-fun b!107179 () Bool)

(declare-fun e!69731 () Bool)

(declare-fun e!69725 () Bool)

(assert (=> b!107179 (= e!69731 e!69725)))

(declare-fun res!53233 () Bool)

(declare-fun call!11343 () Bool)

(assert (=> b!107179 (= res!53233 call!11343)))

(assert (=> b!107179 (=> (not res!53233) (not e!69725))))

(declare-fun b!107180 () Bool)

(declare-fun res!53234 () Bool)

(declare-fun e!69733 () Bool)

(assert (=> b!107180 (=> (not res!53234) (not e!69733))))

(assert (=> b!107180 (= res!53234 e!69731)))

(declare-fun c!18814 () Bool)

(assert (=> b!107180 (= c!18814 (not (= (bvand (extraKeys!2387 (_2!1216 lt!53943)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!107181 () Bool)

(declare-fun c!18810 () Bool)

(assert (=> b!107181 (= c!18810 (and (not (= (bvand (extraKeys!2387 (_2!1216 lt!53943)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 (_2!1216 lt!53943)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!69722 () ListLongMap!1585)

(declare-fun e!69730 () ListLongMap!1585)

(assert (=> b!107181 (= e!69722 e!69730)))

(declare-fun b!107182 () Bool)

(declare-fun res!53231 () Bool)

(assert (=> b!107182 (=> (not res!53231) (not e!69733))))

(declare-fun e!69723 () Bool)

(assert (=> b!107182 (= res!53231 e!69723)))

(declare-fun res!53237 () Bool)

(assert (=> b!107182 (=> res!53237 e!69723)))

(assert (=> b!107182 (= res!53237 (not e!69728))))

(declare-fun res!53232 () Bool)

(assert (=> b!107182 (=> (not res!53232) (not e!69728))))

(assert (=> b!107182 (= res!53232 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))))))

(declare-fun b!107183 () Bool)

(declare-fun e!69726 () Bool)

(assert (=> b!107183 (= e!69723 e!69726)))

(declare-fun res!53230 () Bool)

(assert (=> b!107183 (=> (not res!53230) (not e!69726))))

(assert (=> b!107183 (= res!53230 (contains!829 lt!54971 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000)))))

(assert (=> b!107183 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))))))

(declare-fun b!107184 () Bool)

(assert (=> b!107184 (= e!69730 call!11344)))

(declare-fun bm!11341 () Bool)

(assert (=> bm!11341 (= call!11343 (contains!829 lt!54971 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!29689 () Bool)

(assert (=> d!29689 e!69733))

(declare-fun res!53236 () Bool)

(assert (=> d!29689 (=> (not res!53236) (not e!69733))))

(assert (=> d!29689 (= res!53236 (or (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))))))))

(declare-fun lt!54962 () ListLongMap!1585)

(assert (=> d!29689 (= lt!54971 lt!54962)))

(declare-fun lt!54974 () Unit!3250)

(assert (=> d!29689 (= lt!54974 e!69727)))

(declare-fun c!18812 () Bool)

(assert (=> d!29689 (= c!18812 e!69724)))

(declare-fun res!53229 () Bool)

(assert (=> d!29689 (=> (not res!53229) (not e!69724))))

(assert (=> d!29689 (= res!53229 (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))))))

(declare-fun e!69721 () ListLongMap!1585)

(assert (=> d!29689 (= lt!54962 e!69721)))

(declare-fun c!18813 () Bool)

(assert (=> d!29689 (= c!18813 (and (not (= (bvand (extraKeys!2387 (_2!1216 lt!53943)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2387 (_2!1216 lt!53943)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29689 (validMask!0 (mask!6728 (_2!1216 lt!53943)))))

(assert (=> d!29689 (= (getCurrentListMap!484 (_keys!4288 (_2!1216 lt!53943)) (_values!2565 (_2!1216 lt!53943)) (mask!6728 (_2!1216 lt!53943)) (extraKeys!2387 (_2!1216 lt!53943)) (zeroValue!2457 (_2!1216 lt!53943)) (minValue!2457 (_2!1216 lt!53943)) #b00000000000000000000000000000000 (defaultEntry!2582 (_2!1216 lt!53943))) lt!54971)))

(declare-fun b!107174 () Bool)

(declare-fun Unit!3322 () Unit!3250)

(assert (=> b!107174 (= e!69727 Unit!3322)))

(declare-fun b!107185 () Bool)

(assert (=> b!107185 (= e!69721 e!69722)))

(declare-fun c!18809 () Bool)

(assert (=> b!107185 (= c!18809 (and (not (= (bvand (extraKeys!2387 (_2!1216 lt!53943)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2387 (_2!1216 lt!53943)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!107186 () Bool)

(assert (=> b!107186 (= e!69733 e!69729)))

(declare-fun c!18811 () Bool)

(assert (=> b!107186 (= c!18811 (not (= (bvand (extraKeys!2387 (_2!1216 lt!53943)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11342 () Bool)

(assert (=> bm!11342 (= call!11347 (contains!829 lt!54971 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107187 () Bool)

(assert (=> b!107187 (= e!69722 call!11344)))

(declare-fun call!11342 () ListLongMap!1585)

(declare-fun bm!11343 () Bool)

(assert (=> bm!11343 (= call!11346 (+!146 (ite c!18813 call!11341 (ite c!18809 call!11345 call!11342)) (ite (or c!18813 c!18809) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (_2!1216 lt!53943))) (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (_2!1216 lt!53943))))))))

(declare-fun b!107188 () Bool)

(assert (=> b!107188 (= e!69726 (= (apply!98 lt!54971 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000)) (get!1339 (select (arr!2063 (_values!2565 (_2!1216 lt!53943))) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 (_2!1216 lt!53943)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107188 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2318 (_values!2565 (_2!1216 lt!53943)))))))

(assert (=> b!107188 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))))))

(declare-fun b!107189 () Bool)

(assert (=> b!107189 (= e!69731 (not call!11343))))

(declare-fun b!107190 () Bool)

(assert (=> b!107190 (= e!69729 (not call!11347))))

(declare-fun b!107191 () Bool)

(assert (=> b!107191 (= e!69730 call!11342)))

(declare-fun bm!11344 () Bool)

(assert (=> bm!11344 (= call!11342 call!11345)))

(declare-fun b!107192 () Bool)

(assert (=> b!107192 (= e!69725 (= (apply!98 lt!54971 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2457 (_2!1216 lt!53943))))))

(declare-fun b!107193 () Bool)

(assert (=> b!107193 (= e!69721 (+!146 call!11346 (tuple2!2411 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2457 (_2!1216 lt!53943)))))))

(assert (= (and d!29689 c!18813) b!107193))

(assert (= (and d!29689 (not c!18813)) b!107185))

(assert (= (and b!107185 c!18809) b!107187))

(assert (= (and b!107185 (not c!18809)) b!107181))

(assert (= (and b!107181 c!18810) b!107184))

(assert (= (and b!107181 (not c!18810)) b!107191))

(assert (= (or b!107184 b!107191) bm!11344))

(assert (= (or b!107187 bm!11344) bm!11339))

(assert (= (or b!107187 b!107184) bm!11340))

(assert (= (or b!107193 bm!11339) bm!11338))

(assert (= (or b!107193 bm!11340) bm!11343))

(assert (= (and d!29689 res!53229) b!107175))

(assert (= (and d!29689 c!18812) b!107176))

(assert (= (and d!29689 (not c!18812)) b!107174))

(assert (= (and d!29689 res!53236) b!107182))

(assert (= (and b!107182 res!53232) b!107177))

(assert (= (and b!107182 (not res!53237)) b!107183))

(assert (= (and b!107183 res!53230) b!107188))

(assert (= (and b!107182 res!53231) b!107180))

(assert (= (and b!107180 c!18814) b!107179))

(assert (= (and b!107180 (not c!18814)) b!107189))

(assert (= (and b!107179 res!53233) b!107192))

(assert (= (or b!107179 b!107189) bm!11341))

(assert (= (and b!107180 res!53234) b!107186))

(assert (= (and b!107186 c!18811) b!107173))

(assert (= (and b!107186 (not c!18811)) b!107190))

(assert (= (and b!107173 res!53235) b!107178))

(assert (= (or b!107173 b!107190) bm!11342))

(declare-fun b_lambda!4805 () Bool)

(assert (=> (not b_lambda!4805) (not b!107188)))

(declare-fun t!5749 () Bool)

(declare-fun tb!2073 () Bool)

(assert (=> (and b!105370 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 (_2!1216 lt!53943))) t!5749) tb!2073))

(declare-fun result!3479 () Bool)

(assert (=> tb!2073 (= result!3479 tp_is_empty!2679)))

(assert (=> b!107188 t!5749))

(declare-fun b_and!6625 () Bool)

(assert (= b_and!6621 (and (=> t!5749 result!3479) b_and!6625)))

(declare-fun tb!2075 () Bool)

(declare-fun t!5751 () Bool)

(assert (=> (and b!105373 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (_2!1216 lt!53943))) t!5751) tb!2075))

(declare-fun result!3481 () Bool)

(assert (= result!3481 result!3479))

(assert (=> b!107188 t!5751))

(declare-fun b_and!6627 () Bool)

(assert (= b_and!6623 (and (=> t!5751 result!3481) b_and!6627)))

(assert (=> b!107188 m!120133))

(declare-fun m!120507 () Bool)

(assert (=> b!107188 m!120507))

(declare-fun m!120509 () Bool)

(assert (=> b!107188 m!120509))

(declare-fun m!120511 () Bool)

(assert (=> b!107188 m!120511))

(assert (=> b!107188 m!120133))

(declare-fun m!120513 () Bool)

(assert (=> b!107188 m!120513))

(assert (=> b!107188 m!120507))

(assert (=> b!107188 m!120509))

(declare-fun m!120515 () Bool)

(assert (=> bm!11342 m!120515))

(declare-fun m!120517 () Bool)

(assert (=> bm!11343 m!120517))

(declare-fun m!120519 () Bool)

(assert (=> b!107193 m!120519))

(assert (=> d!29689 m!119915))

(assert (=> b!107175 m!120133))

(assert (=> b!107175 m!120133))

(assert (=> b!107175 m!120135))

(declare-fun m!120521 () Bool)

(assert (=> b!107178 m!120521))

(assert (=> b!107177 m!120133))

(assert (=> b!107177 m!120133))

(assert (=> b!107177 m!120135))

(declare-fun m!120523 () Bool)

(assert (=> b!107192 m!120523))

(declare-fun m!120525 () Bool)

(assert (=> bm!11341 m!120525))

(declare-fun m!120527 () Bool)

(assert (=> bm!11338 m!120527))

(assert (=> b!107183 m!120133))

(assert (=> b!107183 m!120133))

(declare-fun m!120529 () Bool)

(assert (=> b!107183 m!120529))

(declare-fun m!120531 () Bool)

(assert (=> b!107176 m!120531))

(declare-fun m!120533 () Bool)

(assert (=> b!107176 m!120533))

(assert (=> b!107176 m!120527))

(assert (=> b!107176 m!120133))

(declare-fun m!120535 () Bool)

(assert (=> b!107176 m!120535))

(declare-fun m!120537 () Bool)

(assert (=> b!107176 m!120537))

(declare-fun m!120539 () Bool)

(assert (=> b!107176 m!120539))

(declare-fun m!120541 () Bool)

(assert (=> b!107176 m!120541))

(declare-fun m!120543 () Bool)

(assert (=> b!107176 m!120543))

(declare-fun m!120545 () Bool)

(assert (=> b!107176 m!120545))

(declare-fun m!120547 () Bool)

(assert (=> b!107176 m!120547))

(assert (=> b!107176 m!120541))

(declare-fun m!120549 () Bool)

(assert (=> b!107176 m!120549))

(declare-fun m!120551 () Bool)

(assert (=> b!107176 m!120551))

(declare-fun m!120553 () Bool)

(assert (=> b!107176 m!120553))

(assert (=> b!107176 m!120549))

(declare-fun m!120555 () Bool)

(assert (=> b!107176 m!120555))

(assert (=> b!107176 m!120545))

(declare-fun m!120557 () Bool)

(assert (=> b!107176 m!120557))

(assert (=> b!107176 m!120535))

(declare-fun m!120559 () Bool)

(assert (=> b!107176 m!120559))

(assert (=> d!28827 d!29689))

(declare-fun d!29691 () Bool)

(declare-fun lt!54981 () Bool)

(assert (=> d!29691 (= lt!54981 (select (content!108 lt!54030) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun e!69734 () Bool)

(assert (=> d!29691 (= lt!54981 e!69734)))

(declare-fun res!53239 () Bool)

(assert (=> d!29691 (=> (not res!53239) (not e!69734))))

(assert (=> d!29691 (= res!53239 ((_ is Cons!1638) lt!54030))))

(assert (=> d!29691 (= (contains!830 lt!54030 (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))) lt!54981)))

(declare-fun b!107194 () Bool)

(declare-fun e!69735 () Bool)

(assert (=> b!107194 (= e!69734 e!69735)))

(declare-fun res!53238 () Bool)

(assert (=> b!107194 (=> res!53238 e!69735)))

(assert (=> b!107194 (= res!53238 (= (h!2235 lt!54030) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun b!107195 () Bool)

(assert (=> b!107195 (= e!69735 (contains!830 (t!5737 lt!54030) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(assert (= (and d!29691 res!53239) b!107194))

(assert (= (and b!107194 (not res!53238)) b!107195))

(declare-fun m!120561 () Bool)

(assert (=> d!29691 m!120561))

(declare-fun m!120563 () Bool)

(assert (=> d!29691 m!120563))

(declare-fun m!120565 () Bool)

(assert (=> b!107195 m!120565))

(assert (=> b!106151 d!29691))

(declare-fun d!29693 () Bool)

(declare-fun res!53241 () Bool)

(declare-fun e!69738 () Bool)

(assert (=> d!29693 (=> res!53241 e!69738)))

(assert (=> d!29693 (= res!53241 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))))))

(assert (=> d!29693 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4288 (_2!1216 lt!53943)) (mask!6728 (_2!1216 lt!53943))) e!69738)))

(declare-fun b!107196 () Bool)

(declare-fun e!69736 () Bool)

(assert (=> b!107196 (= e!69738 e!69736)))

(declare-fun c!18815 () Bool)

(assert (=> b!107196 (= c!18815 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000)))))

(declare-fun b!107197 () Bool)

(declare-fun call!11348 () Bool)

(assert (=> b!107197 (= e!69736 call!11348)))

(declare-fun b!107198 () Bool)

(declare-fun e!69737 () Bool)

(assert (=> b!107198 (= e!69737 call!11348)))

(declare-fun bm!11345 () Bool)

(assert (=> bm!11345 (= call!11348 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4288 (_2!1216 lt!53943)) (mask!6728 (_2!1216 lt!53943))))))

(declare-fun b!107199 () Bool)

(assert (=> b!107199 (= e!69736 e!69737)))

(declare-fun lt!54982 () (_ BitVec 64))

(assert (=> b!107199 (= lt!54982 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000))))

(declare-fun lt!54984 () Unit!3250)

(assert (=> b!107199 (= lt!54984 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4288 (_2!1216 lt!53943)) lt!54982 #b00000000000000000000000000000000))))

(assert (=> b!107199 (arrayContainsKey!0 (_keys!4288 (_2!1216 lt!53943)) lt!54982 #b00000000000000000000000000000000)))

(declare-fun lt!54983 () Unit!3250)

(assert (=> b!107199 (= lt!54983 lt!54984)))

(declare-fun res!53240 () Bool)

(assert (=> b!107199 (= res!53240 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000) (_keys!4288 (_2!1216 lt!53943)) (mask!6728 (_2!1216 lt!53943))) (Found!269 #b00000000000000000000000000000000)))))

(assert (=> b!107199 (=> (not res!53240) (not e!69737))))

(assert (= (and d!29693 (not res!53241)) b!107196))

(assert (= (and b!107196 c!18815) b!107199))

(assert (= (and b!107196 (not c!18815)) b!107197))

(assert (= (and b!107199 res!53240) b!107198))

(assert (= (or b!107198 b!107197) bm!11345))

(assert (=> b!107196 m!120133))

(assert (=> b!107196 m!120133))

(assert (=> b!107196 m!120135))

(declare-fun m!120567 () Bool)

(assert (=> bm!11345 m!120567))

(assert (=> b!107199 m!120133))

(declare-fun m!120569 () Bool)

(assert (=> b!107199 m!120569))

(declare-fun m!120571 () Bool)

(assert (=> b!107199 m!120571))

(assert (=> b!107199 m!120133))

(declare-fun m!120573 () Bool)

(assert (=> b!107199 m!120573))

(assert (=> b!105790 d!29693))

(declare-fun d!29695 () Bool)

(declare-fun lt!54985 () Bool)

(assert (=> d!29695 (= lt!54985 (select (content!108 lt!54066) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun e!69739 () Bool)

(assert (=> d!29695 (= lt!54985 e!69739)))

(declare-fun res!53243 () Bool)

(assert (=> d!29695 (=> (not res!53243) (not e!69739))))

(assert (=> d!29695 (= res!53243 ((_ is Cons!1638) lt!54066))))

(assert (=> d!29695 (= (contains!830 lt!54066 (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))) lt!54985)))

(declare-fun b!107200 () Bool)

(declare-fun e!69740 () Bool)

(assert (=> b!107200 (= e!69739 e!69740)))

(declare-fun res!53242 () Bool)

(assert (=> b!107200 (=> res!53242 e!69740)))

(assert (=> b!107200 (= res!53242 (= (h!2235 lt!54066) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(declare-fun b!107201 () Bool)

(assert (=> b!107201 (= e!69740 (contains!830 (t!5737 lt!54066) (tuple2!2411 (_1!1215 lt!53817) (_2!1215 lt!53817))))))

(assert (= (and d!29695 res!53243) b!107200))

(assert (= (and b!107200 (not res!53242)) b!107201))

(declare-fun m!120575 () Bool)

(assert (=> d!29695 m!120575))

(declare-fun m!120577 () Bool)

(assert (=> d!29695 m!120577))

(declare-fun m!120579 () Bool)

(assert (=> b!107201 m!120579))

(assert (=> b!105879 d!29695))

(declare-fun d!29697 () Bool)

(declare-fun c!18816 () Bool)

(assert (=> d!29697 (= c!18816 ((_ is Nil!1639) (toList!808 lt!54063)))))

(declare-fun e!69741 () (InoxSet tuple2!2410))

(assert (=> d!29697 (= (content!108 (toList!808 lt!54063)) e!69741)))

(declare-fun b!107202 () Bool)

(assert (=> b!107202 (= e!69741 ((as const (Array tuple2!2410 Bool)) false))))

(declare-fun b!107203 () Bool)

(assert (=> b!107203 (= e!69741 ((_ map or) (store ((as const (Array tuple2!2410 Bool)) false) (h!2235 (toList!808 lt!54063)) true) (content!108 (t!5737 (toList!808 lt!54063)))))))

(assert (= (and d!29697 c!18816) b!107202))

(assert (= (and d!29697 (not c!18816)) b!107203))

(declare-fun m!120581 () Bool)

(assert (=> b!107203 m!120581))

(declare-fun m!120583 () Bool)

(assert (=> b!107203 m!120583))

(assert (=> d!29027 d!29697))

(declare-fun d!29699 () Bool)

(declare-fun e!69743 () Bool)

(assert (=> d!29699 e!69743))

(declare-fun res!53244 () Bool)

(assert (=> d!29699 (=> res!53244 e!69743)))

(declare-fun lt!54986 () Bool)

(assert (=> d!29699 (= res!53244 (not lt!54986))))

(declare-fun lt!54989 () Bool)

(assert (=> d!29699 (= lt!54986 lt!54989)))

(declare-fun lt!54988 () Unit!3250)

(declare-fun e!69742 () Unit!3250)

(assert (=> d!29699 (= lt!54988 e!69742)))

(declare-fun c!18817 () Bool)

(assert (=> d!29699 (= c!18817 lt!54989)))

(assert (=> d!29699 (= lt!54989 (containsKey!159 (toList!808 lt!54180) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29699 (= (contains!829 lt!54180 #b1000000000000000000000000000000000000000000000000000000000000000) lt!54986)))

(declare-fun b!107204 () Bool)

(declare-fun lt!54987 () Unit!3250)

(assert (=> b!107204 (= e!69742 lt!54987)))

(assert (=> b!107204 (= lt!54987 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54180) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107204 (isDefined!109 (getValueByKey!155 (toList!808 lt!54180) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107205 () Bool)

(declare-fun Unit!3323 () Unit!3250)

(assert (=> b!107205 (= e!69742 Unit!3323)))

(declare-fun b!107206 () Bool)

(assert (=> b!107206 (= e!69743 (isDefined!109 (getValueByKey!155 (toList!808 lt!54180) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29699 c!18817) b!107204))

(assert (= (and d!29699 (not c!18817)) b!107205))

(assert (= (and d!29699 (not res!53244)) b!107206))

(declare-fun m!120585 () Bool)

(assert (=> d!29699 m!120585))

(declare-fun m!120587 () Bool)

(assert (=> b!107204 m!120587))

(declare-fun m!120589 () Bool)

(assert (=> b!107204 m!120589))

(assert (=> b!107204 m!120589))

(declare-fun m!120591 () Bool)

(assert (=> b!107204 m!120591))

(assert (=> b!107206 m!120589))

(assert (=> b!107206 m!120589))

(assert (=> b!107206 m!120591))

(assert (=> bm!11195 d!29699))

(declare-fun d!29701 () Bool)

(assert (=> d!29701 (isDefined!109 (getValueByKey!155 (toList!808 lt!54038) (_1!1215 lt!53817)))))

(declare-fun lt!54990 () Unit!3250)

(assert (=> d!29701 (= lt!54990 (choose!667 (toList!808 lt!54038) (_1!1215 lt!53817)))))

(declare-fun e!69744 () Bool)

(assert (=> d!29701 e!69744))

(declare-fun res!53245 () Bool)

(assert (=> d!29701 (=> (not res!53245) (not e!69744))))

(assert (=> d!29701 (= res!53245 (isStrictlySorted!304 (toList!808 lt!54038)))))

(assert (=> d!29701 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54038) (_1!1215 lt!53817)) lt!54990)))

(declare-fun b!107207 () Bool)

(assert (=> b!107207 (= e!69744 (containsKey!159 (toList!808 lt!54038) (_1!1215 lt!53817)))))

(assert (= (and d!29701 res!53245) b!107207))

(assert (=> d!29701 m!117771))

(assert (=> d!29701 m!117771))

(assert (=> d!29701 m!118577))

(declare-fun m!120593 () Bool)

(assert (=> d!29701 m!120593))

(declare-fun m!120595 () Bool)

(assert (=> d!29701 m!120595))

(assert (=> b!107207 m!118573))

(assert (=> b!106119 d!29701))

(assert (=> b!106119 d!29507))

(assert (=> b!106119 d!28907))

(declare-fun b!107209 () Bool)

(declare-fun e!69745 () Option!161)

(declare-fun e!69746 () Option!161)

(assert (=> b!107209 (= e!69745 e!69746)))

(declare-fun c!18819 () Bool)

(assert (=> b!107209 (= c!18819 (and ((_ is Cons!1638) (toList!808 lt!54337)) (not (= (_1!1215 (h!2235 (toList!808 lt!54337))) (_1!1215 (tuple2!2411 lt!54055 lt!54057))))))))

(declare-fun d!29703 () Bool)

(declare-fun c!18818 () Bool)

(assert (=> d!29703 (= c!18818 (and ((_ is Cons!1638) (toList!808 lt!54337)) (= (_1!1215 (h!2235 (toList!808 lt!54337))) (_1!1215 (tuple2!2411 lt!54055 lt!54057)))))))

(assert (=> d!29703 (= (getValueByKey!155 (toList!808 lt!54337) (_1!1215 (tuple2!2411 lt!54055 lt!54057))) e!69745)))

(declare-fun b!107210 () Bool)

(assert (=> b!107210 (= e!69746 (getValueByKey!155 (t!5737 (toList!808 lt!54337)) (_1!1215 (tuple2!2411 lt!54055 lt!54057))))))

(declare-fun b!107208 () Bool)

(assert (=> b!107208 (= e!69745 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54337)))))))

(declare-fun b!107211 () Bool)

(assert (=> b!107211 (= e!69746 None!159)))

(assert (= (and d!29703 c!18818) b!107208))

(assert (= (and d!29703 (not c!18818)) b!107209))

(assert (= (and b!107209 c!18819) b!107210))

(assert (= (and b!107209 (not c!18819)) b!107211))

(declare-fun m!120597 () Bool)

(assert (=> b!107210 m!120597))

(assert (=> b!106087 d!29703))

(declare-fun d!29705 () Bool)

(assert (=> d!29705 (= (isEmpty!376 (getValueByKey!155 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355))) (not ((_ is Some!160) (getValueByKey!155 (toList!808 lt!53820) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))))

(assert (=> d!28871 d!29705))

(declare-fun b!107213 () Bool)

(declare-fun e!69747 () Option!161)

(declare-fun e!69748 () Option!161)

(assert (=> b!107213 (= e!69747 e!69748)))

(declare-fun c!18821 () Bool)

(assert (=> b!107213 (= c!18821 (and ((_ is Cons!1638) (toList!808 lt!54212)) (not (= (_1!1215 (h!2235 (toList!808 lt!54212))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun d!29707 () Bool)

(declare-fun c!18820 () Bool)

(assert (=> d!29707 (= c!18820 (and ((_ is Cons!1638) (toList!808 lt!54212)) (= (_1!1215 (h!2235 (toList!808 lt!54212))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!29707 (= (getValueByKey!155 (toList!808 lt!54212) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) e!69747)))

(declare-fun b!107214 () Bool)

(assert (=> b!107214 (= e!69748 (getValueByKey!155 (t!5737 (toList!808 lt!54212)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!107212 () Bool)

(assert (=> b!107212 (= e!69747 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54212)))))))

(declare-fun b!107215 () Bool)

(assert (=> b!107215 (= e!69748 None!159)))

(assert (= (and d!29707 c!18820) b!107212))

(assert (= (and d!29707 (not c!18820)) b!107213))

(assert (= (and b!107213 c!18821) b!107214))

(assert (= (and b!107213 (not c!18821)) b!107215))

(declare-fun m!120599 () Bool)

(assert (=> b!107214 m!120599))

(assert (=> b!105967 d!29707))

(declare-fun d!29709 () Bool)

(declare-fun lt!54991 () Bool)

(assert (=> d!29709 (= lt!54991 (select (content!108 (t!5737 (toList!808 lt!54063))) lt!53818))))

(declare-fun e!69749 () Bool)

(assert (=> d!29709 (= lt!54991 e!69749)))

(declare-fun res!53247 () Bool)

(assert (=> d!29709 (=> (not res!53247) (not e!69749))))

(assert (=> d!29709 (= res!53247 ((_ is Cons!1638) (t!5737 (toList!808 lt!54063))))))

(assert (=> d!29709 (= (contains!830 (t!5737 (toList!808 lt!54063)) lt!53818) lt!54991)))

(declare-fun b!107216 () Bool)

(declare-fun e!69750 () Bool)

(assert (=> b!107216 (= e!69749 e!69750)))

(declare-fun res!53246 () Bool)

(assert (=> b!107216 (=> res!53246 e!69750)))

(assert (=> b!107216 (= res!53246 (= (h!2235 (t!5737 (toList!808 lt!54063))) lt!53818))))

(declare-fun b!107217 () Bool)

(assert (=> b!107217 (= e!69750 (contains!830 (t!5737 (t!5737 (toList!808 lt!54063))) lt!53818))))

(assert (= (and d!29709 res!53247) b!107216))

(assert (= (and b!107216 (not res!53246)) b!107217))

(assert (=> d!29709 m!120583))

(declare-fun m!120601 () Bool)

(assert (=> d!29709 m!120601))

(declare-fun m!120603 () Bool)

(assert (=> b!107217 m!120603))

(assert (=> b!106217 d!29709))

(declare-fun d!29711 () Bool)

(declare-fun res!53248 () Bool)

(declare-fun e!69751 () Bool)

(assert (=> d!29711 (=> res!53248 e!69751)))

(assert (=> d!29711 (= res!53248 (and ((_ is Cons!1638) lt!54167) (= (_1!1215 (h!2235 lt!54167)) (_1!1215 lt!53817))))))

(assert (=> d!29711 (= (containsKey!159 lt!54167 (_1!1215 lt!53817)) e!69751)))

(declare-fun b!107218 () Bool)

(declare-fun e!69752 () Bool)

(assert (=> b!107218 (= e!69751 e!69752)))

(declare-fun res!53249 () Bool)

(assert (=> b!107218 (=> (not res!53249) (not e!69752))))

(assert (=> b!107218 (= res!53249 (and (or (not ((_ is Cons!1638) lt!54167)) (bvsle (_1!1215 (h!2235 lt!54167)) (_1!1215 lt!53817))) ((_ is Cons!1638) lt!54167) (bvslt (_1!1215 (h!2235 lt!54167)) (_1!1215 lt!53817))))))

(declare-fun b!107219 () Bool)

(assert (=> b!107219 (= e!69752 (containsKey!159 (t!5737 lt!54167) (_1!1215 lt!53817)))))

(assert (= (and d!29711 (not res!53248)) b!107218))

(assert (= (and b!107218 res!53249) b!107219))

(declare-fun m!120605 () Bool)

(assert (=> b!107219 m!120605))

(assert (=> b!105904 d!29711))

(declare-fun d!29713 () Bool)

(assert (=> d!29713 (= (get!1342 (getValueByKey!155 (toList!808 lt!54012) lt!54019)) (v!2896 (getValueByKey!155 (toList!808 lt!54012) lt!54019)))))

(assert (=> d!28947 d!29713))

(declare-fun b!107221 () Bool)

(declare-fun e!69753 () Option!161)

(declare-fun e!69754 () Option!161)

(assert (=> b!107221 (= e!69753 e!69754)))

(declare-fun c!18823 () Bool)

(assert (=> b!107221 (= c!18823 (and ((_ is Cons!1638) (toList!808 lt!54012)) (not (= (_1!1215 (h!2235 (toList!808 lt!54012))) lt!54019))))))

(declare-fun d!29715 () Bool)

(declare-fun c!18822 () Bool)

(assert (=> d!29715 (= c!18822 (and ((_ is Cons!1638) (toList!808 lt!54012)) (= (_1!1215 (h!2235 (toList!808 lt!54012))) lt!54019)))))

(assert (=> d!29715 (= (getValueByKey!155 (toList!808 lt!54012) lt!54019) e!69753)))

(declare-fun b!107222 () Bool)

(assert (=> b!107222 (= e!69754 (getValueByKey!155 (t!5737 (toList!808 lt!54012)) lt!54019))))

(declare-fun b!107220 () Bool)

(assert (=> b!107220 (= e!69753 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54012)))))))

(declare-fun b!107223 () Bool)

(assert (=> b!107223 (= e!69754 None!159)))

(assert (= (and d!29715 c!18822) b!107220))

(assert (= (and d!29715 (not c!18822)) b!107221))

(assert (= (and b!107221 c!18823) b!107222))

(assert (= (and b!107221 (not c!18823)) b!107223))

(declare-fun m!120607 () Bool)

(assert (=> b!107222 m!120607))

(assert (=> d!28947 d!29715))

(declare-fun d!29717 () Bool)

(assert (=> d!29717 (isDefined!109 (getValueByKey!155 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun lt!54992 () Unit!3250)

(assert (=> d!29717 (= lt!54992 (choose!667 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(declare-fun e!69755 () Bool)

(assert (=> d!29717 e!69755))

(declare-fun res!53250 () Bool)

(assert (=> d!29717 (=> (not res!53250) (not e!69755))))

(assert (=> d!29717 (= res!53250 (isStrictlySorted!304 (toList!808 call!11131)))))

(assert (=> d!29717 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)) lt!54992)))

(declare-fun b!107224 () Bool)

(assert (=> b!107224 (= e!69755 (containsKey!159 (toList!808 call!11131) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355)))))

(assert (= (and d!29717 res!53250) b!107224))

(assert (=> d!29717 m!117519))

(assert (=> d!29717 m!117925))

(assert (=> d!29717 m!117925))

(assert (=> d!29717 m!117927))

(assert (=> d!29717 m!117519))

(declare-fun m!120609 () Bool)

(assert (=> d!29717 m!120609))

(declare-fun m!120611 () Bool)

(assert (=> d!29717 m!120611))

(assert (=> b!107224 m!117519))

(assert (=> b!107224 m!117921))

(assert (=> b!105786 d!29717))

(assert (=> b!105786 d!29525))

(assert (=> b!105786 d!29527))

(declare-fun lt!54993 () Bool)

(declare-fun d!29719 () Bool)

(assert (=> d!29719 (= lt!54993 (select (content!108 (toList!808 lt!54285)) (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun e!69756 () Bool)

(assert (=> d!29719 (= lt!54993 e!69756)))

(declare-fun res!53252 () Bool)

(assert (=> d!29719 (=> (not res!53252) (not e!69756))))

(assert (=> d!29719 (= res!53252 ((_ is Cons!1638) (toList!808 lt!54285)))))

(assert (=> d!29719 (= (contains!830 (toList!808 lt!54285) (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!54993)))

(declare-fun b!107225 () Bool)

(declare-fun e!69757 () Bool)

(assert (=> b!107225 (= e!69756 e!69757)))

(declare-fun res!53251 () Bool)

(assert (=> b!107225 (=> res!53251 e!69757)))

(assert (=> b!107225 (= res!53251 (= (h!2235 (toList!808 lt!54285)) (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!107226 () Bool)

(assert (=> b!107226 (= e!69757 (contains!830 (t!5737 (toList!808 lt!54285)) (tuple2!2411 lt!54010 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!29719 res!53252) b!107225))

(assert (= (and b!107225 (not res!53251)) b!107226))

(declare-fun m!120613 () Bool)

(assert (=> d!29719 m!120613))

(declare-fun m!120615 () Bool)

(assert (=> d!29719 m!120615))

(declare-fun m!120617 () Bool)

(assert (=> b!107226 m!120617))

(assert (=> b!106032 d!29719))

(declare-fun d!29721 () Bool)

(assert (=> d!29721 (arrayContainsKey!0 (_keys!4288 newMap!16) lt!54196 #b00000000000000000000000000000000)))

(declare-fun lt!54994 () Unit!3250)

(assert (=> d!29721 (= lt!54994 (choose!13 (_keys!4288 newMap!16) lt!54196 #b00000000000000000000000000000000))))

(assert (=> d!29721 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!29721 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4288 newMap!16) lt!54196 #b00000000000000000000000000000000) lt!54994)))

(declare-fun bs!4415 () Bool)

(assert (= bs!4415 d!29721))

(assert (=> bs!4415 m!118161))

(declare-fun m!120619 () Bool)

(assert (=> bs!4415 m!120619))

(assert (=> b!105958 d!29721))

(declare-fun d!29723 () Bool)

(declare-fun res!53253 () Bool)

(declare-fun e!69758 () Bool)

(assert (=> d!29723 (=> res!53253 e!69758)))

(assert (=> d!29723 (= res!53253 (= (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) lt!54196))))

(assert (=> d!29723 (= (arrayContainsKey!0 (_keys!4288 newMap!16) lt!54196 #b00000000000000000000000000000000) e!69758)))

(declare-fun b!107227 () Bool)

(declare-fun e!69759 () Bool)

(assert (=> b!107227 (= e!69758 e!69759)))

(declare-fun res!53254 () Bool)

(assert (=> b!107227 (=> (not res!53254) (not e!69759))))

(assert (=> b!107227 (= res!53254 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 (_keys!4288 newMap!16))))))

(declare-fun b!107228 () Bool)

(assert (=> b!107228 (= e!69759 (arrayContainsKey!0 (_keys!4288 newMap!16) lt!54196 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!29723 (not res!53253)) b!107227))

(assert (= (and b!107227 res!53254) b!107228))

(assert (=> d!29723 m!117859))

(declare-fun m!120621 () Bool)

(assert (=> b!107228 m!120621))

(assert (=> b!105958 d!29723))

(declare-fun b!107229 () Bool)

(declare-fun e!69761 () SeekEntryResult!269)

(declare-fun lt!54995 () SeekEntryResult!269)

(assert (=> b!107229 (= e!69761 (seekKeyOrZeroReturnVacant!0 (x!13655 lt!54995) (index!3226 lt!54995) (index!3226 lt!54995) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(declare-fun b!107230 () Bool)

(declare-fun c!18825 () Bool)

(declare-fun lt!54996 () (_ BitVec 64))

(assert (=> b!107230 (= c!18825 (= lt!54996 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69762 () SeekEntryResult!269)

(assert (=> b!107230 (= e!69762 e!69761)))

(declare-fun b!107231 () Bool)

(declare-fun e!69760 () SeekEntryResult!269)

(assert (=> b!107231 (= e!69760 Undefined!269)))

(declare-fun b!107232 () Bool)

(assert (=> b!107232 (= e!69761 (MissingZero!269 (index!3226 lt!54995)))))

(declare-fun d!29725 () Bool)

(declare-fun lt!54997 () SeekEntryResult!269)

(assert (=> d!29725 (and (or ((_ is Undefined!269) lt!54997) (not ((_ is Found!269) lt!54997)) (and (bvsge (index!3225 lt!54997) #b00000000000000000000000000000000) (bvslt (index!3225 lt!54997) (size!2317 (_keys!4288 newMap!16))))) (or ((_ is Undefined!269) lt!54997) ((_ is Found!269) lt!54997) (not ((_ is MissingZero!269) lt!54997)) (and (bvsge (index!3224 lt!54997) #b00000000000000000000000000000000) (bvslt (index!3224 lt!54997) (size!2317 (_keys!4288 newMap!16))))) (or ((_ is Undefined!269) lt!54997) ((_ is Found!269) lt!54997) ((_ is MissingZero!269) lt!54997) (not ((_ is MissingVacant!269) lt!54997)) (and (bvsge (index!3227 lt!54997) #b00000000000000000000000000000000) (bvslt (index!3227 lt!54997) (size!2317 (_keys!4288 newMap!16))))) (or ((_ is Undefined!269) lt!54997) (ite ((_ is Found!269) lt!54997) (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3225 lt!54997)) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!269) lt!54997) (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3224 lt!54997)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!269) lt!54997) (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3227 lt!54997)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29725 (= lt!54997 e!69760)))

(declare-fun c!18824 () Bool)

(assert (=> d!29725 (= c!18824 (and ((_ is Intermediate!269) lt!54995) (undefined!1081 lt!54995)))))

(assert (=> d!29725 (= lt!54995 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (mask!6728 newMap!16)) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(assert (=> d!29725 (validMask!0 (mask!6728 newMap!16))))

(assert (=> d!29725 (= (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000) (_keys!4288 newMap!16) (mask!6728 newMap!16)) lt!54997)))

(declare-fun b!107233 () Bool)

(assert (=> b!107233 (= e!69760 e!69762)))

(assert (=> b!107233 (= lt!54996 (select (arr!2062 (_keys!4288 newMap!16)) (index!3226 lt!54995)))))

(declare-fun c!18826 () Bool)

(assert (=> b!107233 (= c!18826 (= lt!54996 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107234 () Bool)

(assert (=> b!107234 (= e!69762 (Found!269 (index!3226 lt!54995)))))

(assert (= (and d!29725 c!18824) b!107231))

(assert (= (and d!29725 (not c!18824)) b!107233))

(assert (= (and b!107233 c!18826) b!107234))

(assert (= (and b!107233 (not c!18826)) b!107230))

(assert (= (and b!107230 c!18825) b!107232))

(assert (= (and b!107230 (not c!18825)) b!107229))

(assert (=> b!107229 m!117859))

(declare-fun m!120623 () Bool)

(assert (=> b!107229 m!120623))

(assert (=> d!29725 m!117867))

(declare-fun m!120625 () Bool)

(assert (=> d!29725 m!120625))

(assert (=> d!29725 m!117859))

(declare-fun m!120627 () Bool)

(assert (=> d!29725 m!120627))

(assert (=> d!29725 m!120627))

(assert (=> d!29725 m!117859))

(declare-fun m!120629 () Bool)

(assert (=> d!29725 m!120629))

(declare-fun m!120631 () Bool)

(assert (=> d!29725 m!120631))

(declare-fun m!120633 () Bool)

(assert (=> d!29725 m!120633))

(declare-fun m!120635 () Bool)

(assert (=> b!107233 m!120635))

(assert (=> b!105958 d!29725))

(declare-fun d!29727 () Bool)

(assert (=> d!29727 (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!54998 () Unit!3250)

(assert (=> d!29727 (= lt!54998 (choose!667 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69763 () Bool)

(assert (=> d!29727 e!69763))

(declare-fun res!53255 () Bool)

(assert (=> d!29727 (=> (not res!53255) (not e!69763))))

(assert (=> d!29727 (= res!53255 (isStrictlySorted!304 (toList!808 lt!54011)))))

(assert (=> d!29727 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000) lt!54998)))

(declare-fun b!107235 () Bool)

(assert (=> b!107235 (= e!69763 (containsKey!159 (toList!808 lt!54011) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29727 res!53255) b!107235))

(assert (=> d!29727 m!118057))

(assert (=> d!29727 m!118057))

(assert (=> d!29727 m!118059))

(declare-fun m!120637 () Bool)

(assert (=> d!29727 m!120637))

(assert (=> d!29727 m!119721))

(assert (=> b!107235 m!118053))

(assert (=> b!105864 d!29727))

(assert (=> b!105864 d!29677))

(assert (=> b!105864 d!29617))

(declare-fun d!29729 () Bool)

(declare-fun e!69765 () Bool)

(assert (=> d!29729 e!69765))

(declare-fun res!53256 () Bool)

(assert (=> d!29729 (=> res!53256 e!69765)))

(declare-fun lt!54999 () Bool)

(assert (=> d!29729 (= res!53256 (not lt!54999))))

(declare-fun lt!55002 () Bool)

(assert (=> d!29729 (= lt!54999 lt!55002)))

(declare-fun lt!55001 () Unit!3250)

(declare-fun e!69764 () Unit!3250)

(assert (=> d!29729 (= lt!55001 e!69764)))

(declare-fun c!18827 () Bool)

(assert (=> d!29729 (= c!18827 lt!55002)))

(assert (=> d!29729 (= lt!55002 (containsKey!159 (toList!808 lt!54341) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29729 (= (contains!829 lt!54341 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!54999)))

(declare-fun b!107236 () Bool)

(declare-fun lt!55000 () Unit!3250)

(assert (=> b!107236 (= e!69764 lt!55000)))

(assert (=> b!107236 (= lt!55000 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54341) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!107236 (isDefined!109 (getValueByKey!155 (toList!808 lt!54341) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!107237 () Bool)

(declare-fun Unit!3324 () Unit!3250)

(assert (=> b!107237 (= e!69764 Unit!3324)))

(declare-fun b!107238 () Bool)

(assert (=> b!107238 (= e!69765 (isDefined!109 (getValueByKey!155 (toList!808 lt!54341) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!29729 c!18827) b!107236))

(assert (= (and d!29729 (not c!18827)) b!107237))

(assert (= (and d!29729 (not res!53256)) b!107238))

(declare-fun m!120639 () Bool)

(assert (=> d!29729 m!120639))

(declare-fun m!120641 () Bool)

(assert (=> b!107236 m!120641))

(assert (=> b!107236 m!118539))

(assert (=> b!107236 m!118539))

(declare-fun m!120643 () Bool)

(assert (=> b!107236 m!120643))

(assert (=> b!107238 m!118539))

(assert (=> b!107238 m!118539))

(assert (=> b!107238 m!120643))

(assert (=> d!28987 d!29729))

(declare-fun b!107240 () Bool)

(declare-fun e!69766 () Option!161)

(declare-fun e!69767 () Option!161)

(assert (=> b!107240 (= e!69766 e!69767)))

(declare-fun c!18829 () Bool)

(assert (=> b!107240 (= c!18829 (and ((_ is Cons!1638) lt!54340) (not (= (_1!1215 (h!2235 lt!54340)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!29731 () Bool)

(declare-fun c!18828 () Bool)

(assert (=> d!29731 (= c!18828 (and ((_ is Cons!1638) lt!54340) (= (_1!1215 (h!2235 lt!54340)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29731 (= (getValueByKey!155 lt!54340 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!69766)))

(declare-fun b!107241 () Bool)

(assert (=> b!107241 (= e!69767 (getValueByKey!155 (t!5737 lt!54340) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!107239 () Bool)

(assert (=> b!107239 (= e!69766 (Some!160 (_2!1215 (h!2235 lt!54340))))))

(declare-fun b!107242 () Bool)

(assert (=> b!107242 (= e!69767 None!159)))

(assert (= (and d!29731 c!18828) b!107239))

(assert (= (and d!29731 (not c!18828)) b!107240))

(assert (= (and b!107240 c!18829) b!107241))

(assert (= (and b!107240 (not c!18829)) b!107242))

(declare-fun m!120645 () Bool)

(assert (=> b!107241 m!120645))

(assert (=> d!28987 d!29731))

(declare-fun d!29733 () Bool)

(assert (=> d!29733 (= (getValueByKey!155 lt!54340 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!55003 () Unit!3250)

(assert (=> d!29733 (= lt!55003 (choose!666 lt!54340 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!69768 () Bool)

(assert (=> d!29733 e!69768))

(declare-fun res!53257 () Bool)

(assert (=> d!29733 (=> (not res!53257) (not e!69768))))

(assert (=> d!29733 (= res!53257 (isStrictlySorted!304 lt!54340))))

(assert (=> d!29733 (= (lemmaContainsTupThenGetReturnValue!73 lt!54340 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!55003)))

(declare-fun b!107243 () Bool)

(declare-fun res!53258 () Bool)

(assert (=> b!107243 (=> (not res!53258) (not e!69768))))

(assert (=> b!107243 (= res!53258 (containsKey!159 lt!54340 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!107244 () Bool)

(assert (=> b!107244 (= e!69768 (contains!830 lt!54340 (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!29733 res!53257) b!107243))

(assert (= (and b!107243 res!53258) b!107244))

(assert (=> d!29733 m!118533))

(declare-fun m!120647 () Bool)

(assert (=> d!29733 m!120647))

(declare-fun m!120649 () Bool)

(assert (=> d!29733 m!120649))

(declare-fun m!120651 () Bool)

(assert (=> b!107243 m!120651))

(declare-fun m!120653 () Bool)

(assert (=> b!107244 m!120653))

(assert (=> d!28987 d!29733))

(declare-fun d!29735 () Bool)

(declare-fun e!69770 () Bool)

(assert (=> d!29735 e!69770))

(declare-fun res!53259 () Bool)

(assert (=> d!29735 (=> (not res!53259) (not e!69770))))

(declare-fun lt!55004 () List!1642)

(assert (=> d!29735 (= res!53259 (isStrictlySorted!304 lt!55004))))

(declare-fun e!69769 () List!1642)

(assert (=> d!29735 (= lt!55004 e!69769)))

(declare-fun c!18830 () Bool)

(assert (=> d!29735 (= c!18830 (and ((_ is Cons!1638) (toList!808 call!11170)) (bvslt (_1!1215 (h!2235 (toList!808 call!11170))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!29735 (isStrictlySorted!304 (toList!808 call!11170))))

(assert (=> d!29735 (= (insertStrictlySorted!75 (toList!808 call!11170) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!55004)))

(declare-fun b!107245 () Bool)

(declare-fun e!69772 () List!1642)

(declare-fun call!11351 () List!1642)

(assert (=> b!107245 (= e!69772 call!11351)))

(declare-fun b!107246 () Bool)

(declare-fun c!18831 () Bool)

(assert (=> b!107246 (= c!18831 (and ((_ is Cons!1638) (toList!808 call!11170)) (bvsgt (_1!1215 (h!2235 (toList!808 call!11170))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!69771 () List!1642)

(assert (=> b!107246 (= e!69771 e!69772)))

(declare-fun b!107247 () Bool)

(declare-fun call!11349 () List!1642)

(assert (=> b!107247 (= e!69771 call!11349)))

(declare-fun b!107248 () Bool)

(declare-fun call!11350 () List!1642)

(assert (=> b!107248 (= e!69769 call!11350)))

(declare-fun b!107249 () Bool)

(declare-fun res!53260 () Bool)

(assert (=> b!107249 (=> (not res!53260) (not e!69770))))

(assert (=> b!107249 (= res!53260 (containsKey!159 lt!55004 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!11346 () Bool)

(assert (=> bm!11346 (= call!11349 call!11350)))

(declare-fun e!69773 () List!1642)

(declare-fun b!107250 () Bool)

(declare-fun c!18832 () Bool)

(assert (=> b!107250 (= e!69773 (ite c!18832 (t!5737 (toList!808 call!11170)) (ite c!18831 (Cons!1638 (h!2235 (toList!808 call!11170)) (t!5737 (toList!808 call!11170))) Nil!1639)))))

(declare-fun bm!11347 () Bool)

(assert (=> bm!11347 (= call!11350 ($colon$colon!80 e!69773 (ite c!18830 (h!2235 (toList!808 call!11170)) (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!18833 () Bool)

(assert (=> bm!11347 (= c!18833 c!18830)))

(declare-fun b!107251 () Bool)

(assert (=> b!107251 (= e!69773 (insertStrictlySorted!75 (t!5737 (toList!808 call!11170)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!107252 () Bool)

(assert (=> b!107252 (= e!69770 (contains!830 lt!55004 (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!11348 () Bool)

(assert (=> bm!11348 (= call!11351 call!11349)))

(declare-fun b!107253 () Bool)

(assert (=> b!107253 (= e!69772 call!11351)))

(declare-fun b!107254 () Bool)

(assert (=> b!107254 (= e!69769 e!69771)))

(assert (=> b!107254 (= c!18832 (and ((_ is Cons!1638) (toList!808 call!11170)) (= (_1!1215 (h!2235 (toList!808 call!11170))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!29735 c!18830) b!107248))

(assert (= (and d!29735 (not c!18830)) b!107254))

(assert (= (and b!107254 c!18832) b!107247))

(assert (= (and b!107254 (not c!18832)) b!107246))

(assert (= (and b!107246 c!18831) b!107253))

(assert (= (and b!107246 (not c!18831)) b!107245))

(assert (= (or b!107253 b!107245) bm!11348))

(assert (= (or b!107247 bm!11348) bm!11346))

(assert (= (or b!107248 bm!11346) bm!11347))

(assert (= (and bm!11347 c!18833) b!107251))

(assert (= (and bm!11347 (not c!18833)) b!107250))

(assert (= (and d!29735 res!53259) b!107249))

(assert (= (and b!107249 res!53260) b!107252))

(declare-fun m!120655 () Bool)

(assert (=> b!107252 m!120655))

(declare-fun m!120657 () Bool)

(assert (=> bm!11347 m!120657))

(declare-fun m!120659 () Bool)

(assert (=> b!107249 m!120659))

(declare-fun m!120661 () Bool)

(assert (=> b!107251 m!120661))

(declare-fun m!120663 () Bool)

(assert (=> d!29735 m!120663))

(declare-fun m!120665 () Bool)

(assert (=> d!29735 m!120665))

(assert (=> d!28987 d!29735))

(assert (=> bm!11180 d!28989))

(declare-fun d!29737 () Bool)

(assert (=> d!29737 (= (apply!98 lt!54180 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1342 (getValueByKey!155 (toList!808 lt!54180) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4416 () Bool)

(assert (= bs!4416 d!29737))

(assert (=> bs!4416 m!120589))

(assert (=> bs!4416 m!120589))

(declare-fun m!120667 () Bool)

(assert (=> bs!4416 m!120667))

(assert (=> b!105931 d!29737))

(declare-fun d!29739 () Bool)

(assert (=> d!29739 (= (get!1342 (getValueByKey!155 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2896 (getValueByKey!155 (toList!808 lt!54011) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28995 d!29739))

(assert (=> d!28995 d!29267))

(declare-fun d!29741 () Bool)

(declare-fun lt!55005 () Bool)

(assert (=> d!29741 (= lt!55005 (select (content!108 (t!5737 (toList!808 lt!54067))) lt!53817))))

(declare-fun e!69774 () Bool)

(assert (=> d!29741 (= lt!55005 e!69774)))

(declare-fun res!53262 () Bool)

(assert (=> d!29741 (=> (not res!53262) (not e!69774))))

(assert (=> d!29741 (= res!53262 ((_ is Cons!1638) (t!5737 (toList!808 lt!54067))))))

(assert (=> d!29741 (= (contains!830 (t!5737 (toList!808 lt!54067)) lt!53817) lt!55005)))

(declare-fun b!107255 () Bool)

(declare-fun e!69775 () Bool)

(assert (=> b!107255 (= e!69774 e!69775)))

(declare-fun res!53261 () Bool)

(assert (=> b!107255 (=> res!53261 e!69775)))

(assert (=> b!107255 (= res!53261 (= (h!2235 (t!5737 (toList!808 lt!54067))) lt!53817))))

(declare-fun b!107256 () Bool)

(assert (=> b!107256 (= e!69775 (contains!830 (t!5737 (t!5737 (toList!808 lt!54067))) lt!53817))))

(assert (= (and d!29741 res!53262) b!107255))

(assert (= (and b!107255 (not res!53261)) b!107256))

(assert (=> d!29741 m!120505))

(declare-fun m!120669 () Bool)

(assert (=> d!29741 m!120669))

(declare-fun m!120671 () Bool)

(assert (=> b!107256 m!120671))

(assert (=> b!106221 d!29741))

(declare-fun d!29743 () Bool)

(assert (=> d!29743 (= (apply!98 lt!54227 lt!54225) (get!1342 (getValueByKey!155 (toList!808 lt!54227) lt!54225)))))

(declare-fun bs!4417 () Bool)

(assert (= bs!4417 d!29743))

(declare-fun m!120673 () Bool)

(assert (=> bs!4417 m!120673))

(assert (=> bs!4417 m!120673))

(declare-fun m!120675 () Bool)

(assert (=> bs!4417 m!120675))

(assert (=> b!105975 d!29743))

(declare-fun d!29745 () Bool)

(assert (=> d!29745 (= (apply!98 lt!54230 lt!54237) (get!1342 (getValueByKey!155 (toList!808 lt!54230) lt!54237)))))

(declare-fun bs!4418 () Bool)

(assert (= bs!4418 d!29745))

(declare-fun m!120677 () Bool)

(assert (=> bs!4418 m!120677))

(assert (=> bs!4418 m!120677))

(declare-fun m!120679 () Bool)

(assert (=> bs!4418 m!120679))

(assert (=> b!105975 d!29745))

(declare-fun d!29747 () Bool)

(declare-fun e!69776 () Bool)

(assert (=> d!29747 e!69776))

(declare-fun res!53264 () Bool)

(assert (=> d!29747 (=> (not res!53264) (not e!69776))))

(declare-fun lt!55008 () ListLongMap!1585)

(assert (=> d!29747 (= res!53264 (contains!829 lt!55008 (_1!1215 (tuple2!2411 lt!54236 (minValue!2457 newMap!16)))))))

(declare-fun lt!55007 () List!1642)

(assert (=> d!29747 (= lt!55008 (ListLongMap!1586 lt!55007))))

(declare-fun lt!55009 () Unit!3250)

(declare-fun lt!55006 () Unit!3250)

(assert (=> d!29747 (= lt!55009 lt!55006)))

(assert (=> d!29747 (= (getValueByKey!155 lt!55007 (_1!1215 (tuple2!2411 lt!54236 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54236 (minValue!2457 newMap!16)))))))

(assert (=> d!29747 (= lt!55006 (lemmaContainsTupThenGetReturnValue!73 lt!55007 (_1!1215 (tuple2!2411 lt!54236 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54236 (minValue!2457 newMap!16)))))))

(assert (=> d!29747 (= lt!55007 (insertStrictlySorted!75 (toList!808 lt!54226) (_1!1215 (tuple2!2411 lt!54236 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54236 (minValue!2457 newMap!16)))))))

(assert (=> d!29747 (= (+!146 lt!54226 (tuple2!2411 lt!54236 (minValue!2457 newMap!16))) lt!55008)))

(declare-fun b!107257 () Bool)

(declare-fun res!53263 () Bool)

(assert (=> b!107257 (=> (not res!53263) (not e!69776))))

(assert (=> b!107257 (= res!53263 (= (getValueByKey!155 (toList!808 lt!55008) (_1!1215 (tuple2!2411 lt!54236 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54236 (minValue!2457 newMap!16))))))))

(declare-fun b!107258 () Bool)

(assert (=> b!107258 (= e!69776 (contains!830 (toList!808 lt!55008) (tuple2!2411 lt!54236 (minValue!2457 newMap!16))))))

(assert (= (and d!29747 res!53264) b!107257))

(assert (= (and b!107257 res!53263) b!107258))

(declare-fun m!120681 () Bool)

(assert (=> d!29747 m!120681))

(declare-fun m!120683 () Bool)

(assert (=> d!29747 m!120683))

(declare-fun m!120685 () Bool)

(assert (=> d!29747 m!120685))

(declare-fun m!120687 () Bool)

(assert (=> d!29747 m!120687))

(declare-fun m!120689 () Bool)

(assert (=> b!107257 m!120689))

(declare-fun m!120691 () Bool)

(assert (=> b!107258 m!120691))

(assert (=> b!105975 d!29747))

(declare-fun d!29749 () Bool)

(assert (=> d!29749 (= (apply!98 (+!146 lt!54230 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16))) lt!54237) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54230 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16)))) lt!54237)))))

(declare-fun bs!4419 () Bool)

(assert (= bs!4419 d!29749))

(declare-fun m!120693 () Bool)

(assert (=> bs!4419 m!120693))

(assert (=> bs!4419 m!120693))

(declare-fun m!120695 () Bool)

(assert (=> bs!4419 m!120695))

(assert (=> b!105975 d!29749))

(declare-fun d!29751 () Bool)

(assert (=> d!29751 (= (apply!98 (+!146 lt!54227 (tuple2!2411 lt!54219 (minValue!2457 newMap!16))) lt!54225) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54227 (tuple2!2411 lt!54219 (minValue!2457 newMap!16)))) lt!54225)))))

(declare-fun bs!4420 () Bool)

(assert (= bs!4420 d!29751))

(declare-fun m!120697 () Bool)

(assert (=> bs!4420 m!120697))

(assert (=> bs!4420 m!120697))

(declare-fun m!120699 () Bool)

(assert (=> bs!4420 m!120699))

(assert (=> b!105975 d!29751))

(declare-fun d!29753 () Bool)

(declare-fun e!69777 () Bool)

(assert (=> d!29753 e!69777))

(declare-fun res!53266 () Bool)

(assert (=> d!29753 (=> (not res!53266) (not e!69777))))

(declare-fun lt!55012 () ListLongMap!1585)

(assert (=> d!29753 (= res!53266 (contains!829 lt!55012 (_1!1215 (tuple2!2411 lt!54219 (minValue!2457 newMap!16)))))))

(declare-fun lt!55011 () List!1642)

(assert (=> d!29753 (= lt!55012 (ListLongMap!1586 lt!55011))))

(declare-fun lt!55013 () Unit!3250)

(declare-fun lt!55010 () Unit!3250)

(assert (=> d!29753 (= lt!55013 lt!55010)))

(assert (=> d!29753 (= (getValueByKey!155 lt!55011 (_1!1215 (tuple2!2411 lt!54219 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54219 (minValue!2457 newMap!16)))))))

(assert (=> d!29753 (= lt!55010 (lemmaContainsTupThenGetReturnValue!73 lt!55011 (_1!1215 (tuple2!2411 lt!54219 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54219 (minValue!2457 newMap!16)))))))

(assert (=> d!29753 (= lt!55011 (insertStrictlySorted!75 (toList!808 lt!54227) (_1!1215 (tuple2!2411 lt!54219 (minValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54219 (minValue!2457 newMap!16)))))))

(assert (=> d!29753 (= (+!146 lt!54227 (tuple2!2411 lt!54219 (minValue!2457 newMap!16))) lt!55012)))

(declare-fun b!107259 () Bool)

(declare-fun res!53265 () Bool)

(assert (=> b!107259 (=> (not res!53265) (not e!69777))))

(assert (=> b!107259 (= res!53265 (= (getValueByKey!155 (toList!808 lt!55012) (_1!1215 (tuple2!2411 lt!54219 (minValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54219 (minValue!2457 newMap!16))))))))

(declare-fun b!107260 () Bool)

(assert (=> b!107260 (= e!69777 (contains!830 (toList!808 lt!55012) (tuple2!2411 lt!54219 (minValue!2457 newMap!16))))))

(assert (= (and d!29753 res!53266) b!107259))

(assert (= (and b!107259 res!53265) b!107260))

(declare-fun m!120701 () Bool)

(assert (=> d!29753 m!120701))

(declare-fun m!120703 () Bool)

(assert (=> d!29753 m!120703))

(declare-fun m!120705 () Bool)

(assert (=> d!29753 m!120705))

(declare-fun m!120707 () Bool)

(assert (=> d!29753 m!120707))

(declare-fun m!120709 () Bool)

(assert (=> b!107259 m!120709))

(declare-fun m!120711 () Bool)

(assert (=> b!107260 m!120711))

(assert (=> b!105975 d!29753))

(declare-fun d!29755 () Bool)

(declare-fun e!69778 () Bool)

(assert (=> d!29755 e!69778))

(declare-fun res!53268 () Bool)

(assert (=> d!29755 (=> (not res!53268) (not e!69778))))

(declare-fun lt!55016 () ListLongMap!1585)

(assert (=> d!29755 (= res!53268 (contains!829 lt!55016 (_1!1215 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16)))))))

(declare-fun lt!55015 () List!1642)

(assert (=> d!29755 (= lt!55016 (ListLongMap!1586 lt!55015))))

(declare-fun lt!55017 () Unit!3250)

(declare-fun lt!55014 () Unit!3250)

(assert (=> d!29755 (= lt!55017 lt!55014)))

(assert (=> d!29755 (= (getValueByKey!155 lt!55015 (_1!1215 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29755 (= lt!55014 (lemmaContainsTupThenGetReturnValue!73 lt!55015 (_1!1215 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29755 (= lt!55015 (insertStrictlySorted!75 (toList!808 lt!54230) (_1!1215 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29755 (= (+!146 lt!54230 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16))) lt!55016)))

(declare-fun b!107261 () Bool)

(declare-fun res!53267 () Bool)

(assert (=> b!107261 (=> (not res!53267) (not e!69778))))

(assert (=> b!107261 (= res!53267 (= (getValueByKey!155 (toList!808 lt!55016) (_1!1215 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16))))))))

(declare-fun b!107262 () Bool)

(assert (=> b!107262 (= e!69778 (contains!830 (toList!808 lt!55016) (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16))))))

(assert (= (and d!29755 res!53268) b!107261))

(assert (= (and b!107261 res!53267) b!107262))

(declare-fun m!120713 () Bool)

(assert (=> d!29755 m!120713))

(declare-fun m!120715 () Bool)

(assert (=> d!29755 m!120715))

(declare-fun m!120717 () Bool)

(assert (=> d!29755 m!120717))

(declare-fun m!120719 () Bool)

(assert (=> d!29755 m!120719))

(declare-fun m!120721 () Bool)

(assert (=> b!107261 m!120721))

(declare-fun m!120723 () Bool)

(assert (=> b!107262 m!120723))

(assert (=> b!105975 d!29755))

(assert (=> b!105975 d!29451))

(declare-fun d!29757 () Bool)

(assert (=> d!29757 (= (apply!98 (+!146 lt!54226 (tuple2!2411 lt!54236 (minValue!2457 newMap!16))) lt!54221) (get!1342 (getValueByKey!155 (toList!808 (+!146 lt!54226 (tuple2!2411 lt!54236 (minValue!2457 newMap!16)))) lt!54221)))))

(declare-fun bs!4421 () Bool)

(assert (= bs!4421 d!29757))

(declare-fun m!120725 () Bool)

(assert (=> bs!4421 m!120725))

(assert (=> bs!4421 m!120725))

(declare-fun m!120727 () Bool)

(assert (=> bs!4421 m!120727))

(assert (=> b!105975 d!29757))

(declare-fun d!29759 () Bool)

(assert (=> d!29759 (= (apply!98 (+!146 lt!54226 (tuple2!2411 lt!54236 (minValue!2457 newMap!16))) lt!54221) (apply!98 lt!54226 lt!54221))))

(declare-fun lt!55018 () Unit!3250)

(assert (=> d!29759 (= lt!55018 (choose!670 lt!54226 lt!54236 (minValue!2457 newMap!16) lt!54221))))

(declare-fun e!69779 () Bool)

(assert (=> d!29759 e!69779))

(declare-fun res!53269 () Bool)

(assert (=> d!29759 (=> (not res!53269) (not e!69779))))

(assert (=> d!29759 (= res!53269 (contains!829 lt!54226 lt!54221))))

(assert (=> d!29759 (= (addApplyDifferent!74 lt!54226 lt!54236 (minValue!2457 newMap!16) lt!54221) lt!55018)))

(declare-fun b!107263 () Bool)

(assert (=> b!107263 (= e!69779 (not (= lt!54221 lt!54236)))))

(assert (= (and d!29759 res!53269) b!107263))

(declare-fun m!120729 () Bool)

(assert (=> d!29759 m!120729))

(assert (=> d!29759 m!118239))

(assert (=> d!29759 m!118241))

(assert (=> d!29759 m!118239))

(assert (=> d!29759 m!118251))

(declare-fun m!120731 () Bool)

(assert (=> d!29759 m!120731))

(assert (=> b!105975 d!29759))

(declare-fun d!29761 () Bool)

(assert (=> d!29761 (= (apply!98 (+!146 lt!54227 (tuple2!2411 lt!54219 (minValue!2457 newMap!16))) lt!54225) (apply!98 lt!54227 lt!54225))))

(declare-fun lt!55019 () Unit!3250)

(assert (=> d!29761 (= lt!55019 (choose!670 lt!54227 lt!54219 (minValue!2457 newMap!16) lt!54225))))

(declare-fun e!69780 () Bool)

(assert (=> d!29761 e!69780))

(declare-fun res!53270 () Bool)

(assert (=> d!29761 (=> (not res!53270) (not e!69780))))

(assert (=> d!29761 (= res!53270 (contains!829 lt!54227 lt!54225))))

(assert (=> d!29761 (= (addApplyDifferent!74 lt!54227 lt!54219 (minValue!2457 newMap!16) lt!54225) lt!55019)))

(declare-fun b!107264 () Bool)

(assert (=> b!107264 (= e!69780 (not (= lt!54225 lt!54219)))))

(assert (= (and d!29761 res!53270) b!107264))

(declare-fun m!120733 () Bool)

(assert (=> d!29761 m!120733))

(assert (=> d!29761 m!118233))

(assert (=> d!29761 m!118235))

(assert (=> d!29761 m!118233))

(assert (=> d!29761 m!118229))

(declare-fun m!120735 () Bool)

(assert (=> d!29761 m!120735))

(assert (=> b!105975 d!29761))

(declare-fun d!29763 () Bool)

(assert (=> d!29763 (contains!829 (+!146 lt!54235 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16))) lt!54234)))

(declare-fun lt!55020 () Unit!3250)

(assert (=> d!29763 (= lt!55020 (choose!671 lt!54235 lt!54231 (zeroValue!2457 newMap!16) lt!54234))))

(assert (=> d!29763 (contains!829 lt!54235 lt!54234)))

(assert (=> d!29763 (= (addStillContains!74 lt!54235 lt!54231 (zeroValue!2457 newMap!16) lt!54234) lt!55020)))

(declare-fun bs!4422 () Bool)

(assert (= bs!4422 d!29763))

(assert (=> bs!4422 m!118247))

(assert (=> bs!4422 m!118247))

(assert (=> bs!4422 m!118249))

(declare-fun m!120737 () Bool)

(assert (=> bs!4422 m!120737))

(declare-fun m!120739 () Bool)

(assert (=> bs!4422 m!120739))

(assert (=> b!105975 d!29763))

(declare-fun d!29765 () Bool)

(assert (=> d!29765 (= (apply!98 lt!54226 lt!54221) (get!1342 (getValueByKey!155 (toList!808 lt!54226) lt!54221)))))

(declare-fun bs!4423 () Bool)

(assert (= bs!4423 d!29765))

(declare-fun m!120741 () Bool)

(assert (=> bs!4423 m!120741))

(assert (=> bs!4423 m!120741))

(declare-fun m!120743 () Bool)

(assert (=> bs!4423 m!120743))

(assert (=> b!105975 d!29765))

(declare-fun d!29767 () Bool)

(declare-fun e!69782 () Bool)

(assert (=> d!29767 e!69782))

(declare-fun res!53271 () Bool)

(assert (=> d!29767 (=> res!53271 e!69782)))

(declare-fun lt!55021 () Bool)

(assert (=> d!29767 (= res!53271 (not lt!55021))))

(declare-fun lt!55024 () Bool)

(assert (=> d!29767 (= lt!55021 lt!55024)))

(declare-fun lt!55023 () Unit!3250)

(declare-fun e!69781 () Unit!3250)

(assert (=> d!29767 (= lt!55023 e!69781)))

(declare-fun c!18834 () Bool)

(assert (=> d!29767 (= c!18834 lt!55024)))

(assert (=> d!29767 (= lt!55024 (containsKey!159 (toList!808 (+!146 lt!54235 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16)))) lt!54234))))

(assert (=> d!29767 (= (contains!829 (+!146 lt!54235 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16))) lt!54234) lt!55021)))

(declare-fun b!107265 () Bool)

(declare-fun lt!55022 () Unit!3250)

(assert (=> b!107265 (= e!69781 lt!55022)))

(assert (=> b!107265 (= lt!55022 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (+!146 lt!54235 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16)))) lt!54234))))

(assert (=> b!107265 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54235 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16)))) lt!54234))))

(declare-fun b!107266 () Bool)

(declare-fun Unit!3325 () Unit!3250)

(assert (=> b!107266 (= e!69781 Unit!3325)))

(declare-fun b!107267 () Bool)

(assert (=> b!107267 (= e!69782 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54235 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16)))) lt!54234)))))

(assert (= (and d!29767 c!18834) b!107265))

(assert (= (and d!29767 (not c!18834)) b!107266))

(assert (= (and d!29767 (not res!53271)) b!107267))

(declare-fun m!120745 () Bool)

(assert (=> d!29767 m!120745))

(declare-fun m!120747 () Bool)

(assert (=> b!107265 m!120747))

(declare-fun m!120749 () Bool)

(assert (=> b!107265 m!120749))

(assert (=> b!107265 m!120749))

(declare-fun m!120751 () Bool)

(assert (=> b!107265 m!120751))

(assert (=> b!107267 m!120749))

(assert (=> b!107267 m!120749))

(assert (=> b!107267 m!120751))

(assert (=> b!105975 d!29767))

(declare-fun d!29769 () Bool)

(assert (=> d!29769 (= (apply!98 (+!146 lt!54230 (tuple2!2411 lt!54228 (zeroValue!2457 newMap!16))) lt!54237) (apply!98 lt!54230 lt!54237))))

(declare-fun lt!55025 () Unit!3250)

(assert (=> d!29769 (= lt!55025 (choose!670 lt!54230 lt!54228 (zeroValue!2457 newMap!16) lt!54237))))

(declare-fun e!69783 () Bool)

(assert (=> d!29769 e!69783))

(declare-fun res!53272 () Bool)

(assert (=> d!29769 (=> (not res!53272) (not e!69783))))

(assert (=> d!29769 (= res!53272 (contains!829 lt!54230 lt!54237))))

(assert (=> d!29769 (= (addApplyDifferent!74 lt!54230 lt!54228 (zeroValue!2457 newMap!16) lt!54237) lt!55025)))

(declare-fun b!107268 () Bool)

(assert (=> b!107268 (= e!69783 (not (= lt!54237 lt!54228)))))

(assert (= (and d!29769 res!53272) b!107268))

(declare-fun m!120753 () Bool)

(assert (=> d!29769 m!120753))

(assert (=> d!29769 m!118243))

(assert (=> d!29769 m!118255))

(assert (=> d!29769 m!118243))

(assert (=> d!29769 m!118245))

(declare-fun m!120755 () Bool)

(assert (=> d!29769 m!120755))

(assert (=> b!105975 d!29769))

(declare-fun d!29771 () Bool)

(declare-fun e!69784 () Bool)

(assert (=> d!29771 e!69784))

(declare-fun res!53274 () Bool)

(assert (=> d!29771 (=> (not res!53274) (not e!69784))))

(declare-fun lt!55028 () ListLongMap!1585)

(assert (=> d!29771 (= res!53274 (contains!829 lt!55028 (_1!1215 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16)))))))

(declare-fun lt!55027 () List!1642)

(assert (=> d!29771 (= lt!55028 (ListLongMap!1586 lt!55027))))

(declare-fun lt!55029 () Unit!3250)

(declare-fun lt!55026 () Unit!3250)

(assert (=> d!29771 (= lt!55029 lt!55026)))

(assert (=> d!29771 (= (getValueByKey!155 lt!55027 (_1!1215 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29771 (= lt!55026 (lemmaContainsTupThenGetReturnValue!73 lt!55027 (_1!1215 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29771 (= lt!55027 (insertStrictlySorted!75 (toList!808 lt!54235) (_1!1215 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16))) (_2!1215 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16)))))))

(assert (=> d!29771 (= (+!146 lt!54235 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16))) lt!55028)))

(declare-fun b!107269 () Bool)

(declare-fun res!53273 () Bool)

(assert (=> b!107269 (=> (not res!53273) (not e!69784))))

(assert (=> b!107269 (= res!53273 (= (getValueByKey!155 (toList!808 lt!55028) (_1!1215 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16)))) (Some!160 (_2!1215 (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16))))))))

(declare-fun b!107270 () Bool)

(assert (=> b!107270 (= e!69784 (contains!830 (toList!808 lt!55028) (tuple2!2411 lt!54231 (zeroValue!2457 newMap!16))))))

(assert (= (and d!29771 res!53274) b!107269))

(assert (= (and b!107269 res!53273) b!107270))

(declare-fun m!120757 () Bool)

(assert (=> d!29771 m!120757))

(declare-fun m!120759 () Bool)

(assert (=> d!29771 m!120759))

(declare-fun m!120761 () Bool)

(assert (=> d!29771 m!120761))

(declare-fun m!120763 () Bool)

(assert (=> d!29771 m!120763))

(declare-fun m!120765 () Bool)

(assert (=> b!107269 m!120765))

(declare-fun m!120767 () Bool)

(assert (=> b!107270 m!120767))

(assert (=> b!105975 d!29771))

(declare-fun d!29773 () Bool)

(assert (=> d!29773 (= (apply!98 lt!54262 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) (get!1342 (getValueByKey!155 (toList!808 lt!54262) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4424 () Bool)

(assert (= bs!4424 d!29773))

(assert (=> bs!4424 m!117859))

(declare-fun m!120769 () Bool)

(assert (=> bs!4424 m!120769))

(assert (=> bs!4424 m!120769))

(declare-fun m!120771 () Bool)

(assert (=> bs!4424 m!120771))

(assert (=> b!106016 d!29773))

(declare-fun c!18835 () Bool)

(declare-fun d!29775 () Bool)

(assert (=> d!29775 (= c!18835 ((_ is ValueCellFull!996) (select (arr!2063 (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949)) #b00000000000000000000000000000000)))))

(declare-fun e!69785 () V!3219)

(assert (=> d!29775 (= (get!1339 (select (arr!2063 (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!69785)))

(declare-fun b!107271 () Bool)

(assert (=> b!107271 (= e!69785 (get!1340 (select (arr!2063 (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!107272 () Bool)

(assert (=> b!107272 (= e!69785 (get!1341 (select (arr!2063 (ite (or c!18361 c!18357) (_values!2565 newMap!16) lt!53949)) #b00000000000000000000000000000000) (dynLambda!388 (defaultEntry!2582 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29775 c!18835) b!107271))

(assert (= (and d!29775 (not c!18835)) b!107272))

(assert (=> b!107271 m!118283))

(assert (=> b!107271 m!118103))

(declare-fun m!120773 () Bool)

(assert (=> b!107271 m!120773))

(assert (=> b!107272 m!118283))

(assert (=> b!107272 m!118103))

(declare-fun m!120775 () Bool)

(assert (=> b!107272 m!120775))

(assert (=> b!106016 d!29775))

(declare-fun d!29777 () Bool)

(assert (=> d!29777 (isDefined!109 (getValueByKey!155 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!55030 () Unit!3250)

(assert (=> d!29777 (= lt!55030 (choose!667 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!69786 () Bool)

(assert (=> d!29777 e!69786))

(declare-fun res!53275 () Bool)

(assert (=> d!29777 (=> (not res!53275) (not e!69786))))

(assert (=> d!29777 (= res!53275 (isStrictlySorted!304 (toList!808 lt!54011)))))

(assert (=> d!29777 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000) lt!55030)))

(declare-fun b!107273 () Bool)

(assert (=> b!107273 (= e!69786 (containsKey!159 (toList!808 lt!54011) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!29777 res!53275) b!107273))

(assert (=> d!29777 m!117945))

(assert (=> d!29777 m!117945))

(assert (=> d!29777 m!118699))

(declare-fun m!120777 () Bool)

(assert (=> d!29777 m!120777))

(assert (=> d!29777 m!119721))

(assert (=> b!107273 m!118695))

(assert (=> b!106213 d!29777))

(assert (=> b!106213 d!29535))

(assert (=> b!106213 d!29283))

(declare-fun d!29779 () Bool)

(declare-fun e!69788 () Bool)

(assert (=> d!29779 e!69788))

(declare-fun res!53276 () Bool)

(assert (=> d!29779 (=> res!53276 e!69788)))

(declare-fun lt!55031 () Bool)

(assert (=> d!29779 (= res!53276 (not lt!55031))))

(declare-fun lt!55034 () Bool)

(assert (=> d!29779 (= lt!55031 lt!55034)))

(declare-fun lt!55033 () Unit!3250)

(declare-fun e!69787 () Unit!3250)

(assert (=> d!29779 (= lt!55033 e!69787)))

(declare-fun c!18836 () Bool)

(assert (=> d!29779 (= c!18836 lt!55034)))

(assert (=> d!29779 (= lt!55034 (containsKey!159 (toList!808 lt!54145) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!29779 (= (contains!829 lt!54145 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!55031)))

(declare-fun b!107274 () Bool)

(declare-fun lt!55032 () Unit!3250)

(assert (=> b!107274 (= e!69787 lt!55032)))

(assert (=> b!107274 (= lt!55032 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54145) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> b!107274 (isDefined!109 (getValueByKey!155 (toList!808 lt!54145) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!107275 () Bool)

(declare-fun Unit!3326 () Unit!3250)

(assert (=> b!107275 (= e!69787 Unit!3326)))

(declare-fun b!107276 () Bool)

(assert (=> b!107276 (= e!69788 (isDefined!109 (getValueByKey!155 (toList!808 lt!54145) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29779 c!18836) b!107274))

(assert (= (and d!29779 (not c!18836)) b!107275))

(assert (= (and d!29779 (not res!53276)) b!107276))

(declare-fun m!120779 () Bool)

(assert (=> d!29779 m!120779))

(declare-fun m!120781 () Bool)

(assert (=> b!107274 m!120781))

(assert (=> b!107274 m!118035))

(assert (=> b!107274 m!118035))

(declare-fun m!120783 () Bool)

(assert (=> b!107274 m!120783))

(assert (=> b!107276 m!118035))

(assert (=> b!107276 m!118035))

(assert (=> b!107276 m!120783))

(assert (=> d!28887 d!29779))

(declare-fun b!107278 () Bool)

(declare-fun e!69789 () Option!161)

(declare-fun e!69790 () Option!161)

(assert (=> b!107278 (= e!69789 e!69790)))

(declare-fun c!18838 () Bool)

(assert (=> b!107278 (= c!18838 (and ((_ is Cons!1638) lt!54144) (not (= (_1!1215 (h!2235 lt!54144)) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun d!29781 () Bool)

(declare-fun c!18837 () Bool)

(assert (=> d!29781 (= c!18837 (and ((_ is Cons!1638) lt!54144) (= (_1!1215 (h!2235 lt!54144)) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29781 (= (getValueByKey!155 lt!54144 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69789)))

(declare-fun b!107279 () Bool)

(assert (=> b!107279 (= e!69790 (getValueByKey!155 (t!5737 lt!54144) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!107277 () Bool)

(assert (=> b!107277 (= e!69789 (Some!160 (_2!1215 (h!2235 lt!54144))))))

(declare-fun b!107280 () Bool)

(assert (=> b!107280 (= e!69790 None!159)))

(assert (= (and d!29781 c!18837) b!107277))

(assert (= (and d!29781 (not c!18837)) b!107278))

(assert (= (and b!107278 c!18838) b!107279))

(assert (= (and b!107278 (not c!18838)) b!107280))

(declare-fun m!120785 () Bool)

(assert (=> b!107279 m!120785))

(assert (=> d!28887 d!29781))

(declare-fun d!29783 () Bool)

(assert (=> d!29783 (= (getValueByKey!155 lt!54144 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!55035 () Unit!3250)

(assert (=> d!29783 (= lt!55035 (choose!666 lt!54144 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun e!69791 () Bool)

(assert (=> d!29783 e!69791))

(declare-fun res!53277 () Bool)

(assert (=> d!29783 (=> (not res!53277) (not e!69791))))

(assert (=> d!29783 (= res!53277 (isStrictlySorted!304 lt!54144))))

(assert (=> d!29783 (= (lemmaContainsTupThenGetReturnValue!73 lt!54144 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!55035)))

(declare-fun b!107281 () Bool)

(declare-fun res!53278 () Bool)

(assert (=> b!107281 (=> (not res!53278) (not e!69791))))

(assert (=> b!107281 (= res!53278 (containsKey!159 lt!54144 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!107282 () Bool)

(assert (=> b!107282 (= e!69791 (contains!830 lt!54144 (tuple2!2411 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29783 res!53277) b!107281))

(assert (= (and b!107281 res!53278) b!107282))

(assert (=> d!29783 m!118029))

(declare-fun m!120787 () Bool)

(assert (=> d!29783 m!120787))

(declare-fun m!120789 () Bool)

(assert (=> d!29783 m!120789))

(declare-fun m!120791 () Bool)

(assert (=> b!107281 m!120791))

(declare-fun m!120793 () Bool)

(assert (=> b!107282 m!120793))

(assert (=> d!28887 d!29783))

(declare-fun d!29785 () Bool)

(declare-fun e!69793 () Bool)

(assert (=> d!29785 e!69793))

(declare-fun res!53279 () Bool)

(assert (=> d!29785 (=> (not res!53279) (not e!69793))))

(declare-fun lt!55036 () List!1642)

(assert (=> d!29785 (= res!53279 (isStrictlySorted!304 lt!55036))))

(declare-fun e!69792 () List!1642)

(assert (=> d!29785 (= lt!55036 e!69792)))

(declare-fun c!18839 () Bool)

(assert (=> d!29785 (= c!18839 (and ((_ is Cons!1638) (toList!808 lt!53824)) (bvslt (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29785 (isStrictlySorted!304 (toList!808 lt!53824))))

(assert (=> d!29785 (= (insertStrictlySorted!75 (toList!808 lt!53824) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!55036)))

(declare-fun b!107283 () Bool)

(declare-fun e!69795 () List!1642)

(declare-fun call!11354 () List!1642)

(assert (=> b!107283 (= e!69795 call!11354)))

(declare-fun b!107284 () Bool)

(declare-fun c!18840 () Bool)

(assert (=> b!107284 (= c!18840 (and ((_ is Cons!1638) (toList!808 lt!53824)) (bvsgt (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun e!69794 () List!1642)

(assert (=> b!107284 (= e!69794 e!69795)))

(declare-fun b!107285 () Bool)

(declare-fun call!11352 () List!1642)

(assert (=> b!107285 (= e!69794 call!11352)))

(declare-fun b!107286 () Bool)

(declare-fun call!11353 () List!1642)

(assert (=> b!107286 (= e!69792 call!11353)))

(declare-fun b!107287 () Bool)

(declare-fun res!53280 () Bool)

(assert (=> b!107287 (=> (not res!53280) (not e!69793))))

(assert (=> b!107287 (= res!53280 (containsKey!159 lt!55036 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun bm!11349 () Bool)

(assert (=> bm!11349 (= call!11352 call!11353)))

(declare-fun b!107288 () Bool)

(declare-fun c!18841 () Bool)

(declare-fun e!69796 () List!1642)

(assert (=> b!107288 (= e!69796 (ite c!18841 (t!5737 (toList!808 lt!53824)) (ite c!18840 (Cons!1638 (h!2235 (toList!808 lt!53824)) (t!5737 (toList!808 lt!53824))) Nil!1639)))))

(declare-fun bm!11350 () Bool)

(assert (=> bm!11350 (= call!11353 ($colon$colon!80 e!69796 (ite c!18839 (h!2235 (toList!808 lt!53824)) (tuple2!2411 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun c!18842 () Bool)

(assert (=> bm!11350 (= c!18842 c!18839)))

(declare-fun b!107289 () Bool)

(assert (=> b!107289 (= e!69796 (insertStrictlySorted!75 (t!5737 (toList!808 lt!53824)) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!107290 () Bool)

(assert (=> b!107290 (= e!69793 (contains!830 lt!55036 (tuple2!2411 (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun bm!11351 () Bool)

(assert (=> bm!11351 (= call!11354 call!11352)))

(declare-fun b!107291 () Bool)

(assert (=> b!107291 (= e!69795 call!11354)))

(declare-fun b!107292 () Bool)

(assert (=> b!107292 (= e!69792 e!69794)))

(assert (=> b!107292 (= c!18841 (and ((_ is Cons!1638) (toList!808 lt!53824)) (= (_1!1215 (h!2235 (toList!808 lt!53824))) (_1!1215 (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29785 c!18839) b!107286))

(assert (= (and d!29785 (not c!18839)) b!107292))

(assert (= (and b!107292 c!18841) b!107285))

(assert (= (and b!107292 (not c!18841)) b!107284))

(assert (= (and b!107284 c!18840) b!107291))

(assert (= (and b!107284 (not c!18840)) b!107283))

(assert (= (or b!107291 b!107283) bm!11351))

(assert (= (or b!107285 bm!11351) bm!11349))

(assert (= (or b!107286 bm!11349) bm!11350))

(assert (= (and bm!11350 c!18842) b!107289))

(assert (= (and bm!11350 (not c!18842)) b!107288))

(assert (= (and d!29785 res!53279) b!107287))

(assert (= (and b!107287 res!53280) b!107290))

(declare-fun m!120795 () Bool)

(assert (=> b!107290 m!120795))

(declare-fun m!120797 () Bool)

(assert (=> bm!11350 m!120797))

(declare-fun m!120799 () Bool)

(assert (=> b!107287 m!120799))

(declare-fun m!120801 () Bool)

(assert (=> b!107289 m!120801))

(declare-fun m!120803 () Bool)

(assert (=> d!29785 m!120803))

(assert (=> d!29785 m!118599))

(assert (=> d!28887 d!29785))

(declare-fun d!29787 () Bool)

(declare-fun e!69797 () Bool)

(assert (=> d!29787 e!69797))

(declare-fun res!53282 () Bool)

(assert (=> d!29787 (=> (not res!53282) (not e!69797))))

(declare-fun lt!55039 () ListLongMap!1585)

(assert (=> d!29787 (= res!53282 (contains!829 lt!55039 (_1!1215 (tuple2!2411 lt!54094 lt!54096))))))

(declare-fun lt!55038 () List!1642)

(assert (=> d!29787 (= lt!55039 (ListLongMap!1586 lt!55038))))

(declare-fun lt!55040 () Unit!3250)

(declare-fun lt!55037 () Unit!3250)

(assert (=> d!29787 (= lt!55040 lt!55037)))

(assert (=> d!29787 (= (getValueByKey!155 lt!55038 (_1!1215 (tuple2!2411 lt!54094 lt!54096))) (Some!160 (_2!1215 (tuple2!2411 lt!54094 lt!54096))))))

(assert (=> d!29787 (= lt!55037 (lemmaContainsTupThenGetReturnValue!73 lt!55038 (_1!1215 (tuple2!2411 lt!54094 lt!54096)) (_2!1215 (tuple2!2411 lt!54094 lt!54096))))))

(assert (=> d!29787 (= lt!55038 (insertStrictlySorted!75 (toList!808 lt!54098) (_1!1215 (tuple2!2411 lt!54094 lt!54096)) (_2!1215 (tuple2!2411 lt!54094 lt!54096))))))

(assert (=> d!29787 (= (+!146 lt!54098 (tuple2!2411 lt!54094 lt!54096)) lt!55039)))

(declare-fun b!107293 () Bool)

(declare-fun res!53281 () Bool)

(assert (=> b!107293 (=> (not res!53281) (not e!69797))))

(assert (=> b!107293 (= res!53281 (= (getValueByKey!155 (toList!808 lt!55039) (_1!1215 (tuple2!2411 lt!54094 lt!54096))) (Some!160 (_2!1215 (tuple2!2411 lt!54094 lt!54096)))))))

(declare-fun b!107294 () Bool)

(assert (=> b!107294 (= e!69797 (contains!830 (toList!808 lt!55039) (tuple2!2411 lt!54094 lt!54096)))))

(assert (= (and d!29787 res!53282) b!107293))

(assert (= (and b!107293 res!53281) b!107294))

(declare-fun m!120805 () Bool)

(assert (=> d!29787 m!120805))

(declare-fun m!120807 () Bool)

(assert (=> d!29787 m!120807))

(declare-fun m!120809 () Bool)

(assert (=> d!29787 m!120809))

(declare-fun m!120811 () Bool)

(assert (=> d!29787 m!120811))

(declare-fun m!120813 () Bool)

(assert (=> b!107293 m!120813))

(declare-fun m!120815 () Bool)

(assert (=> b!107294 m!120815))

(assert (=> b!105770 d!29787))

(assert (=> b!105770 d!29071))

(declare-fun d!29789 () Bool)

(declare-fun e!69798 () Bool)

(assert (=> d!29789 e!69798))

(declare-fun res!53284 () Bool)

(assert (=> d!29789 (=> (not res!53284) (not e!69798))))

(declare-fun lt!55043 () ListLongMap!1585)

(assert (=> d!29789 (= res!53284 (contains!829 lt!55043 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!55042 () List!1642)

(assert (=> d!29789 (= lt!55043 (ListLongMap!1586 lt!55042))))

(declare-fun lt!55044 () Unit!3250)

(declare-fun lt!55041 () Unit!3250)

(assert (=> d!29789 (= lt!55044 lt!55041)))

(assert (=> d!29789 (= (getValueByKey!155 lt!55042 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29789 (= lt!55041 (lemmaContainsTupThenGetReturnValue!73 lt!55042 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29789 (= lt!55042 (insertStrictlySorted!75 (toList!808 call!11177) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29789 (= (+!146 call!11177 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!55043)))

(declare-fun b!107295 () Bool)

(declare-fun res!53283 () Bool)

(assert (=> b!107295 (=> (not res!53283) (not e!69798))))

(assert (=> b!107295 (= res!53283 (= (getValueByKey!155 (toList!808 lt!55043) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!107296 () Bool)

(assert (=> b!107296 (= e!69798 (contains!830 (toList!808 lt!55043) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29789 res!53284) b!107295))

(assert (= (and b!107295 res!53283) b!107296))

(declare-fun m!120817 () Bool)

(assert (=> d!29789 m!120817))

(declare-fun m!120819 () Bool)

(assert (=> d!29789 m!120819))

(declare-fun m!120821 () Bool)

(assert (=> d!29789 m!120821))

(declare-fun m!120823 () Bool)

(assert (=> d!29789 m!120823))

(declare-fun m!120825 () Bool)

(assert (=> b!107295 m!120825))

(declare-fun m!120827 () Bool)

(assert (=> b!107296 m!120827))

(assert (=> b!105770 d!29789))

(declare-fun d!29791 () Bool)

(declare-fun e!69800 () Bool)

(assert (=> d!29791 e!69800))

(declare-fun res!53285 () Bool)

(assert (=> d!29791 (=> res!53285 e!69800)))

(declare-fun lt!55045 () Bool)

(assert (=> d!29791 (= res!53285 (not lt!55045))))

(declare-fun lt!55048 () Bool)

(assert (=> d!29791 (= lt!55045 lt!55048)))

(declare-fun lt!55047 () Unit!3250)

(declare-fun e!69799 () Unit!3250)

(assert (=> d!29791 (= lt!55047 e!69799)))

(declare-fun c!18843 () Bool)

(assert (=> d!29791 (= c!18843 lt!55048)))

(assert (=> d!29791 (= lt!55048 (containsKey!159 (toList!808 (+!146 lt!54098 (tuple2!2411 lt!54094 lt!54096))) lt!54099))))

(assert (=> d!29791 (= (contains!829 (+!146 lt!54098 (tuple2!2411 lt!54094 lt!54096)) lt!54099) lt!55045)))

(declare-fun b!107297 () Bool)

(declare-fun lt!55046 () Unit!3250)

(assert (=> b!107297 (= e!69799 lt!55046)))

(assert (=> b!107297 (= lt!55046 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 (+!146 lt!54098 (tuple2!2411 lt!54094 lt!54096))) lt!54099))))

(assert (=> b!107297 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54098 (tuple2!2411 lt!54094 lt!54096))) lt!54099))))

(declare-fun b!107298 () Bool)

(declare-fun Unit!3327 () Unit!3250)

(assert (=> b!107298 (= e!69799 Unit!3327)))

(declare-fun b!107299 () Bool)

(assert (=> b!107299 (= e!69800 (isDefined!109 (getValueByKey!155 (toList!808 (+!146 lt!54098 (tuple2!2411 lt!54094 lt!54096))) lt!54099)))))

(assert (= (and d!29791 c!18843) b!107297))

(assert (= (and d!29791 (not c!18843)) b!107298))

(assert (= (and d!29791 (not res!53285)) b!107299))

(declare-fun m!120829 () Bool)

(assert (=> d!29791 m!120829))

(declare-fun m!120831 () Bool)

(assert (=> b!107297 m!120831))

(declare-fun m!120833 () Bool)

(assert (=> b!107297 m!120833))

(assert (=> b!107297 m!120833))

(declare-fun m!120835 () Bool)

(assert (=> b!107297 m!120835))

(assert (=> b!107299 m!120833))

(assert (=> b!107299 m!120833))

(assert (=> b!107299 m!120835))

(assert (=> b!105770 d!29791))

(declare-fun d!29793 () Bool)

(assert (=> d!29793 (not (contains!829 (+!146 lt!54098 (tuple2!2411 lt!54094 lt!54096)) lt!54099))))

(declare-fun lt!55049 () Unit!3250)

(assert (=> d!29793 (= lt!55049 (choose!672 lt!54098 lt!54094 lt!54096 lt!54099))))

(declare-fun e!69801 () Bool)

(assert (=> d!29793 e!69801))

(declare-fun res!53286 () Bool)

(assert (=> d!29793 (=> (not res!53286) (not e!69801))))

(assert (=> d!29793 (= res!53286 (not (contains!829 lt!54098 lt!54099)))))

(assert (=> d!29793 (= (addStillNotContains!48 lt!54098 lt!54094 lt!54096 lt!54099) lt!55049)))

(declare-fun b!107300 () Bool)

(assert (=> b!107300 (= e!69801 (not (= lt!54094 lt!54099)))))

(assert (= (and d!29793 res!53286) b!107300))

(assert (=> d!29793 m!117899))

(assert (=> d!29793 m!117899))

(assert (=> d!29793 m!117901))

(declare-fun m!120837 () Bool)

(assert (=> d!29793 m!120837))

(declare-fun m!120839 () Bool)

(assert (=> d!29793 m!120839))

(assert (=> b!105770 d!29793))

(declare-fun d!29795 () Bool)

(declare-fun res!53287 () Bool)

(declare-fun e!69802 () Bool)

(assert (=> d!29795 (=> res!53287 e!69802)))

(assert (=> d!29795 (= res!53287 (or ((_ is Nil!1639) lt!54305) ((_ is Nil!1639) (t!5737 lt!54305))))))

(assert (=> d!29795 (= (isStrictlySorted!304 lt!54305) e!69802)))

(declare-fun b!107301 () Bool)

(declare-fun e!69803 () Bool)

(assert (=> b!107301 (= e!69802 e!69803)))

(declare-fun res!53288 () Bool)

(assert (=> b!107301 (=> (not res!53288) (not e!69803))))

(assert (=> b!107301 (= res!53288 (bvslt (_1!1215 (h!2235 lt!54305)) (_1!1215 (h!2235 (t!5737 lt!54305)))))))

(declare-fun b!107302 () Bool)

(assert (=> b!107302 (= e!69803 (isStrictlySorted!304 (t!5737 lt!54305)))))

(assert (= (and d!29795 (not res!53287)) b!107301))

(assert (= (and b!107301 res!53288) b!107302))

(declare-fun m!120841 () Bool)

(assert (=> b!107302 m!120841))

(assert (=> d!28977 d!29795))

(declare-fun d!29797 () Bool)

(declare-fun res!53289 () Bool)

(declare-fun e!69804 () Bool)

(assert (=> d!29797 (=> res!53289 e!69804)))

(assert (=> d!29797 (= res!53289 (or ((_ is Nil!1639) (toList!808 (+!146 lt!53824 lt!53817))) ((_ is Nil!1639) (t!5737 (toList!808 (+!146 lt!53824 lt!53817))))))))

(assert (=> d!29797 (= (isStrictlySorted!304 (toList!808 (+!146 lt!53824 lt!53817))) e!69804)))

(declare-fun b!107303 () Bool)

(declare-fun e!69805 () Bool)

(assert (=> b!107303 (= e!69804 e!69805)))

(declare-fun res!53290 () Bool)

(assert (=> b!107303 (=> (not res!53290) (not e!69805))))

(assert (=> b!107303 (= res!53290 (bvslt (_1!1215 (h!2235 (toList!808 (+!146 lt!53824 lt!53817)))) (_1!1215 (h!2235 (t!5737 (toList!808 (+!146 lt!53824 lt!53817)))))))))

(declare-fun b!107304 () Bool)

(assert (=> b!107304 (= e!69805 (isStrictlySorted!304 (t!5737 (toList!808 (+!146 lt!53824 lt!53817)))))))

(assert (= (and d!29797 (not res!53289)) b!107303))

(assert (= (and b!107303 res!53290) b!107304))

(assert (=> b!107304 m!118875))

(assert (=> d!28977 d!29797))

(declare-fun d!29799 () Bool)

(declare-fun lt!55050 () Bool)

(assert (=> d!29799 (= lt!55050 (select (content!108 (toList!808 lt!54145)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun e!69806 () Bool)

(assert (=> d!29799 (= lt!55050 e!69806)))

(declare-fun res!53292 () Bool)

(assert (=> d!29799 (=> (not res!53292) (not e!69806))))

(assert (=> d!29799 (= res!53292 ((_ is Cons!1638) (toList!808 lt!54145)))))

(assert (=> d!29799 (= (contains!830 (toList!808 lt!54145) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))) lt!55050)))

(declare-fun b!107305 () Bool)

(declare-fun e!69807 () Bool)

(assert (=> b!107305 (= e!69806 e!69807)))

(declare-fun res!53291 () Bool)

(assert (=> b!107305 (=> res!53291 e!69807)))

(assert (=> b!107305 (= res!53291 (= (h!2235 (toList!808 lt!54145)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(declare-fun b!107306 () Bool)

(assert (=> b!107306 (= e!69807 (contains!830 (t!5737 (toList!808 lt!54145)) (tuple2!2411 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2457 (v!2892 (underlying!362 thiss!992))))))))

(assert (= (and d!29799 res!53292) b!107305))

(assert (= (and b!107305 (not res!53291)) b!107306))

(declare-fun m!120843 () Bool)

(assert (=> d!29799 m!120843))

(declare-fun m!120845 () Bool)

(assert (=> d!29799 m!120845))

(declare-fun m!120847 () Bool)

(assert (=> b!107306 m!120847))

(assert (=> b!105857 d!29799))

(declare-fun d!29801 () Bool)

(declare-fun e!69809 () Bool)

(assert (=> d!29801 e!69809))

(declare-fun res!53293 () Bool)

(assert (=> d!29801 (=> res!53293 e!69809)))

(declare-fun lt!55051 () Bool)

(assert (=> d!29801 (= res!53293 (not lt!55051))))

(declare-fun lt!55054 () Bool)

(assert (=> d!29801 (= lt!55051 lt!55054)))

(declare-fun lt!55053 () Unit!3250)

(declare-fun e!69808 () Unit!3250)

(assert (=> d!29801 (= lt!55053 e!69808)))

(declare-fun c!18844 () Bool)

(assert (=> d!29801 (= c!18844 lt!55054)))

(assert (=> d!29801 (= lt!55054 (containsKey!159 (toList!808 lt!54229) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29801 (= (contains!829 lt!54229 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55051)))

(declare-fun b!107307 () Bool)

(declare-fun lt!55052 () Unit!3250)

(assert (=> b!107307 (= e!69808 lt!55052)))

(assert (=> b!107307 (= lt!55052 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54229) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107307 (isDefined!109 (getValueByKey!155 (toList!808 lt!54229) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107308 () Bool)

(declare-fun Unit!3328 () Unit!3250)

(assert (=> b!107308 (= e!69808 Unit!3328)))

(declare-fun b!107309 () Bool)

(assert (=> b!107309 (= e!69809 (isDefined!109 (getValueByKey!155 (toList!808 lt!54229) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29801 c!18844) b!107307))

(assert (= (and d!29801 (not c!18844)) b!107308))

(assert (= (and d!29801 (not res!53293)) b!107309))

(declare-fun m!120849 () Bool)

(assert (=> d!29801 m!120849))

(declare-fun m!120851 () Bool)

(assert (=> b!107307 m!120851))

(assert (=> b!107307 m!119897))

(assert (=> b!107307 m!119897))

(declare-fun m!120853 () Bool)

(assert (=> b!107307 m!120853))

(assert (=> b!107309 m!119897))

(assert (=> b!107309 m!119897))

(assert (=> b!107309 m!120853))

(assert (=> bm!11204 d!29801))

(assert (=> b!105961 d!28993))

(assert (=> d!28909 d!29203))

(assert (=> b!106145 d!29227))

(assert (=> b!106145 d!28867))

(assert (=> d!28979 d!29203))

(declare-fun d!29803 () Bool)

(assert (=> d!29803 (= (apply!98 lt!54318 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1342 (getValueByKey!155 (toList!808 lt!54318) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4425 () Bool)

(assert (= bs!4425 d!29803))

(assert (=> bs!4425 m!118905))

(assert (=> bs!4425 m!118905))

(declare-fun m!120855 () Bool)

(assert (=> bs!4425 m!120855))

(assert (=> b!106078 d!29803))

(declare-fun b!107313 () Bool)

(declare-fun e!69810 () Bool)

(assert (=> b!107313 (= e!69810 (and (bvsge (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!499 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!29805 () Bool)

(declare-fun res!53294 () Bool)

(assert (=> d!29805 (=> (not res!53294) (not e!69810))))

(assert (=> d!29805 (= res!53294 (validMask!0 (mask!6728 (v!2892 (underlying!362 thiss!992)))))))

(assert (=> d!29805 (= (simpleValid!73 (v!2892 (underlying!362 thiss!992))) e!69810)))

(declare-fun b!107310 () Bool)

(declare-fun res!53295 () Bool)

(assert (=> b!107310 (=> (not res!53295) (not e!69810))))

(assert (=> b!107310 (= res!53295 (and (= (size!2318 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000001)) (= (size!2317 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (size!2318 (_values!2565 (v!2892 (underlying!362 thiss!992))))) (bvsge (_size!499 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!499 (v!2892 (underlying!362 thiss!992))) (bvadd (mask!6728 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!107312 () Bool)

(declare-fun res!53297 () Bool)

(assert (=> b!107312 (=> (not res!53297) (not e!69810))))

(assert (=> b!107312 (= res!53297 (= (size!2321 (v!2892 (underlying!362 thiss!992))) (bvadd (_size!499 (v!2892 (underlying!362 thiss!992))) (bvsdiv (bvadd (extraKeys!2387 (v!2892 (underlying!362 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!107311 () Bool)

(declare-fun res!53296 () Bool)

(assert (=> b!107311 (=> (not res!53296) (not e!69810))))

(assert (=> b!107311 (= res!53296 (bvsge (size!2321 (v!2892 (underlying!362 thiss!992))) (_size!499 (v!2892 (underlying!362 thiss!992)))))))

(assert (= (and d!29805 res!53294) b!107310))

(assert (= (and b!107310 res!53295) b!107311))

(assert (= (and b!107311 res!53296) b!107312))

(assert (= (and b!107312 res!53297) b!107313))

(assert (=> d!29805 m!117531))

(declare-fun m!120857 () Bool)

(assert (=> b!107312 m!120857))

(assert (=> b!107311 m!120857))

(assert (=> d!29001 d!29805))

(declare-fun d!29807 () Bool)

(declare-fun e!69812 () Bool)

(assert (=> d!29807 e!69812))

(declare-fun res!53298 () Bool)

(assert (=> d!29807 (=> res!53298 e!69812)))

(declare-fun lt!55055 () Bool)

(assert (=> d!29807 (= res!53298 (not lt!55055))))

(declare-fun lt!55058 () Bool)

(assert (=> d!29807 (= lt!55055 lt!55058)))

(declare-fun lt!55057 () Unit!3250)

(declare-fun e!69811 () Unit!3250)

(assert (=> d!29807 (= lt!55057 e!69811)))

(declare-fun c!18845 () Bool)

(assert (=> d!29807 (= c!18845 lt!55058)))

(assert (=> d!29807 (= lt!55058 (containsKey!159 (toList!808 lt!54291) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> d!29807 (= (contains!829 lt!54291 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!55055)))

(declare-fun b!107314 () Bool)

(declare-fun lt!55056 () Unit!3250)

(assert (=> b!107314 (= e!69811 lt!55056)))

(assert (=> b!107314 (= lt!55056 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54291) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(assert (=> b!107314 (isDefined!109 (getValueByKey!155 (toList!808 lt!54291) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!107315 () Bool)

(declare-fun Unit!3329 () Unit!3250)

(assert (=> b!107315 (= e!69811 Unit!3329)))

(declare-fun b!107316 () Bool)

(assert (=> b!107316 (= e!69812 (isDefined!109 (getValueByKey!155 (toList!808 lt!54291) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29807 c!18845) b!107314))

(assert (= (and d!29807 (not c!18845)) b!107315))

(assert (= (and d!29807 (not res!53298)) b!107316))

(declare-fun m!120859 () Bool)

(assert (=> d!29807 m!120859))

(declare-fun m!120861 () Bool)

(assert (=> b!107314 m!120861))

(assert (=> b!107314 m!118411))

(assert (=> b!107314 m!118411))

(declare-fun m!120863 () Bool)

(assert (=> b!107314 m!120863))

(assert (=> b!107316 m!118411))

(assert (=> b!107316 m!118411))

(assert (=> b!107316 m!120863))

(assert (=> d!28965 d!29807))

(declare-fun b!107318 () Bool)

(declare-fun e!69813 () Option!161)

(declare-fun e!69814 () Option!161)

(assert (=> b!107318 (= e!69813 e!69814)))

(declare-fun c!18847 () Bool)

(assert (=> b!107318 (= c!18847 (and ((_ is Cons!1638) lt!54290) (not (= (_1!1215 (h!2235 lt!54290)) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun c!18846 () Bool)

(declare-fun d!29809 () Bool)

(assert (=> d!29809 (= c!18846 (and ((_ is Cons!1638) lt!54290) (= (_1!1215 (h!2235 lt!54290)) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29809 (= (getValueByKey!155 lt!54290 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69813)))

(declare-fun b!107319 () Bool)

(assert (=> b!107319 (= e!69814 (getValueByKey!155 (t!5737 lt!54290) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!107317 () Bool)

(assert (=> b!107317 (= e!69813 (Some!160 (_2!1215 (h!2235 lt!54290))))))

(declare-fun b!107320 () Bool)

(assert (=> b!107320 (= e!69814 None!159)))

(assert (= (and d!29809 c!18846) b!107317))

(assert (= (and d!29809 (not c!18846)) b!107318))

(assert (= (and b!107318 c!18847) b!107319))

(assert (= (and b!107318 (not c!18847)) b!107320))

(declare-fun m!120865 () Bool)

(assert (=> b!107319 m!120865))

(assert (=> d!28965 d!29809))

(declare-fun d!29811 () Bool)

(assert (=> d!29811 (= (getValueByKey!155 lt!54290 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) (Some!160 (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun lt!55059 () Unit!3250)

(assert (=> d!29811 (= lt!55059 (choose!666 lt!54290 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun e!69815 () Bool)

(assert (=> d!29811 e!69815))

(declare-fun res!53299 () Bool)

(assert (=> d!29811 (=> (not res!53299) (not e!69815))))

(assert (=> d!29811 (= res!53299 (isStrictlySorted!304 lt!54290))))

(assert (=> d!29811 (= (lemmaContainsTupThenGetReturnValue!73 lt!54290 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!55059)))

(declare-fun b!107321 () Bool)

(declare-fun res!53300 () Bool)

(assert (=> b!107321 (=> (not res!53300) (not e!69815))))

(assert (=> b!107321 (= res!53300 (containsKey!159 lt!54290 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!107322 () Bool)

(assert (=> b!107322 (= e!69815 (contains!830 lt!54290 (tuple2!2411 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29811 res!53299) b!107321))

(assert (= (and b!107321 res!53300) b!107322))

(assert (=> d!29811 m!118405))

(declare-fun m!120867 () Bool)

(assert (=> d!29811 m!120867))

(declare-fun m!120869 () Bool)

(assert (=> d!29811 m!120869))

(declare-fun m!120871 () Bool)

(assert (=> b!107321 m!120871))

(declare-fun m!120873 () Bool)

(assert (=> b!107322 m!120873))

(assert (=> d!28965 d!29811))

(declare-fun d!29813 () Bool)

(declare-fun e!69817 () Bool)

(assert (=> d!29813 e!69817))

(declare-fun res!53301 () Bool)

(assert (=> d!29813 (=> (not res!53301) (not e!69817))))

(declare-fun lt!55060 () List!1642)

(assert (=> d!29813 (= res!53301 (isStrictlySorted!304 lt!55060))))

(declare-fun e!69816 () List!1642)

(assert (=> d!29813 (= lt!55060 e!69816)))

(declare-fun c!18848 () Bool)

(assert (=> d!29813 (= c!18848 (and ((_ is Cons!1638) (toList!808 lt!54008)) (bvslt (_1!1215 (h!2235 (toList!808 lt!54008))) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29813 (isStrictlySorted!304 (toList!808 lt!54008))))

(assert (=> d!29813 (= (insertStrictlySorted!75 (toList!808 lt!54008) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) lt!55060)))

(declare-fun b!107323 () Bool)

(declare-fun e!69819 () List!1642)

(declare-fun call!11357 () List!1642)

(assert (=> b!107323 (= e!69819 call!11357)))

(declare-fun c!18849 () Bool)

(declare-fun b!107324 () Bool)

(assert (=> b!107324 (= c!18849 (and ((_ is Cons!1638) (toList!808 lt!54008)) (bvsgt (_1!1215 (h!2235 (toList!808 lt!54008))) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun e!69818 () List!1642)

(assert (=> b!107324 (= e!69818 e!69819)))

(declare-fun b!107325 () Bool)

(declare-fun call!11355 () List!1642)

(assert (=> b!107325 (= e!69818 call!11355)))

(declare-fun b!107326 () Bool)

(declare-fun call!11356 () List!1642)

(assert (=> b!107326 (= e!69816 call!11356)))

(declare-fun b!107327 () Bool)

(declare-fun res!53302 () Bool)

(assert (=> b!107327 (=> (not res!53302) (not e!69817))))

(assert (=> b!107327 (= res!53302 (containsKey!159 lt!55060 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun bm!11352 () Bool)

(assert (=> bm!11352 (= call!11355 call!11356)))

(declare-fun e!69820 () List!1642)

(declare-fun b!107328 () Bool)

(declare-fun c!18850 () Bool)

(assert (=> b!107328 (= e!69820 (ite c!18850 (t!5737 (toList!808 lt!54008)) (ite c!18849 (Cons!1638 (h!2235 (toList!808 lt!54008)) (t!5737 (toList!808 lt!54008))) Nil!1639)))))

(declare-fun bm!11353 () Bool)

(assert (=> bm!11353 (= call!11356 ($colon$colon!80 e!69820 (ite c!18848 (h!2235 (toList!808 lt!54008)) (tuple2!2411 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun c!18851 () Bool)

(assert (=> bm!11353 (= c!18851 c!18848)))

(declare-fun b!107329 () Bool)

(assert (=> b!107329 (= e!69820 (insertStrictlySorted!75 (t!5737 (toList!808 lt!54008)) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!107330 () Bool)

(assert (=> b!107330 (= e!69817 (contains!830 lt!55060 (tuple2!2411 (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))) (_2!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(declare-fun bm!11354 () Bool)

(assert (=> bm!11354 (= call!11357 call!11355)))

(declare-fun b!107331 () Bool)

(assert (=> b!107331 (= e!69819 call!11357)))

(declare-fun b!107332 () Bool)

(assert (=> b!107332 (= e!69816 e!69818)))

(assert (=> b!107332 (= c!18850 (and ((_ is Cons!1638) (toList!808 lt!54008)) (= (_1!1215 (h!2235 (toList!808 lt!54008))) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (= (and d!29813 c!18848) b!107326))

(assert (= (and d!29813 (not c!18848)) b!107332))

(assert (= (and b!107332 c!18850) b!107325))

(assert (= (and b!107332 (not c!18850)) b!107324))

(assert (= (and b!107324 c!18849) b!107331))

(assert (= (and b!107324 (not c!18849)) b!107323))

(assert (= (or b!107331 b!107323) bm!11354))

(assert (= (or b!107325 bm!11354) bm!11352))

(assert (= (or b!107326 bm!11352) bm!11353))

(assert (= (and bm!11353 c!18851) b!107329))

(assert (= (and bm!11353 (not c!18851)) b!107328))

(assert (= (and d!29813 res!53301) b!107327))

(assert (= (and b!107327 res!53302) b!107330))

(declare-fun m!120875 () Bool)

(assert (=> b!107330 m!120875))

(declare-fun m!120877 () Bool)

(assert (=> bm!11353 m!120877))

(declare-fun m!120879 () Bool)

(assert (=> b!107327 m!120879))

(declare-fun m!120881 () Bool)

(assert (=> b!107329 m!120881))

(declare-fun m!120883 () Bool)

(assert (=> d!29813 m!120883))

(declare-fun m!120885 () Bool)

(assert (=> d!29813 m!120885))

(assert (=> d!28965 d!29813))

(declare-fun d!29815 () Bool)

(declare-fun res!53303 () Bool)

(declare-fun e!69821 () Bool)

(assert (=> d!29815 (=> res!53303 e!69821)))

(assert (=> d!29815 (= res!53303 (and ((_ is Cons!1638) lt!54351) (= (_1!1215 (h!2235 lt!54351)) (_1!1215 lt!53817))))))

(assert (=> d!29815 (= (containsKey!159 lt!54351 (_1!1215 lt!53817)) e!69821)))

(declare-fun b!107333 () Bool)

(declare-fun e!69822 () Bool)

(assert (=> b!107333 (= e!69821 e!69822)))

(declare-fun res!53304 () Bool)

(assert (=> b!107333 (=> (not res!53304) (not e!69822))))

(assert (=> b!107333 (= res!53304 (and (or (not ((_ is Cons!1638) lt!54351)) (bvsle (_1!1215 (h!2235 lt!54351)) (_1!1215 lt!53817))) ((_ is Cons!1638) lt!54351) (bvslt (_1!1215 (h!2235 lt!54351)) (_1!1215 lt!53817))))))

(declare-fun b!107334 () Bool)

(assert (=> b!107334 (= e!69822 (containsKey!159 (t!5737 lt!54351) (_1!1215 lt!53817)))))

(assert (= (and d!29815 (not res!53303)) b!107333))

(assert (= (and b!107333 res!53304) b!107334))

(declare-fun m!120887 () Bool)

(assert (=> b!107334 m!120887))

(assert (=> b!106132 d!29815))

(declare-fun d!29817 () Bool)

(assert (=> d!29817 (= (get!1341 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105796 d!29817))

(declare-fun d!29819 () Bool)

(declare-fun e!69824 () Bool)

(assert (=> d!29819 e!69824))

(declare-fun res!53305 () Bool)

(assert (=> d!29819 (=> res!53305 e!69824)))

(declare-fun lt!55061 () Bool)

(assert (=> d!29819 (= res!53305 (not lt!55061))))

(declare-fun lt!55064 () Bool)

(assert (=> d!29819 (= lt!55061 lt!55064)))

(declare-fun lt!55063 () Unit!3250)

(declare-fun e!69823 () Unit!3250)

(assert (=> d!29819 (= lt!55063 e!69823)))

(declare-fun c!18852 () Bool)

(assert (=> d!29819 (= c!18852 lt!55064)))

(assert (=> d!29819 (= lt!55064 (containsKey!159 (toList!808 lt!54262) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!29819 (= (contains!829 lt!54262 (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)) lt!55061)))

(declare-fun b!107335 () Bool)

(declare-fun lt!55062 () Unit!3250)

(assert (=> b!107335 (= e!69823 lt!55062)))

(assert (=> b!107335 (= lt!55062 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54262) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!107335 (isDefined!109 (getValueByKey!155 (toList!808 lt!54262) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!107336 () Bool)

(declare-fun Unit!3330 () Unit!3250)

(assert (=> b!107336 (= e!69823 Unit!3330)))

(declare-fun b!107337 () Bool)

(assert (=> b!107337 (= e!69824 (isDefined!109 (getValueByKey!155 (toList!808 lt!54262) (select (arr!2062 (_keys!4288 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!29819 c!18852) b!107335))

(assert (= (and d!29819 (not c!18852)) b!107336))

(assert (= (and d!29819 (not res!53305)) b!107337))

(assert (=> d!29819 m!117859))

(declare-fun m!120889 () Bool)

(assert (=> d!29819 m!120889))

(assert (=> b!107335 m!117859))

(declare-fun m!120891 () Bool)

(assert (=> b!107335 m!120891))

(assert (=> b!107335 m!117859))

(assert (=> b!107335 m!120769))

(assert (=> b!107335 m!120769))

(declare-fun m!120893 () Bool)

(assert (=> b!107335 m!120893))

(assert (=> b!107337 m!117859))

(assert (=> b!107337 m!120769))

(assert (=> b!107337 m!120769))

(assert (=> b!107337 m!120893))

(assert (=> b!106011 d!29819))

(declare-fun b!107339 () Bool)

(declare-fun e!69825 () Option!161)

(declare-fun e!69826 () Option!161)

(assert (=> b!107339 (= e!69825 e!69826)))

(declare-fun c!18854 () Bool)

(assert (=> b!107339 (= c!18854 (and ((_ is Cons!1638) (toList!808 lt!54291)) (not (= (_1!1215 (h!2235 (toList!808 lt!54291))) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))))

(declare-fun d!29821 () Bool)

(declare-fun c!18853 () Bool)

(assert (=> d!29821 (= c!18853 (and ((_ is Cons!1638) (toList!808 lt!54291)) (= (_1!1215 (h!2235 (toList!808 lt!54291))) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992))))))))))

(assert (=> d!29821 (= (getValueByKey!155 (toList!808 lt!54291) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))) e!69825)))

(declare-fun b!107340 () Bool)

(assert (=> b!107340 (= e!69826 (getValueByKey!155 (t!5737 (toList!808 lt!54291)) (_1!1215 (tuple2!2411 lt!54018 (minValue!2457 (v!2892 (underlying!362 thiss!992)))))))))

(declare-fun b!107338 () Bool)

(assert (=> b!107338 (= e!69825 (Some!160 (_2!1215 (h!2235 (toList!808 lt!54291)))))))

(declare-fun b!107341 () Bool)

(assert (=> b!107341 (= e!69826 None!159)))

(assert (= (and d!29821 c!18853) b!107338))

(assert (= (and d!29821 (not c!18853)) b!107339))

(assert (= (and b!107339 c!18854) b!107340))

(assert (= (and b!107339 (not c!18854)) b!107341))

(declare-fun m!120895 () Bool)

(assert (=> b!107340 m!120895))

(assert (=> b!106035 d!29821))

(declare-fun d!29823 () Bool)

(declare-fun lt!55065 () Bool)

(assert (=> d!29823 (= lt!55065 (select (content!108 (toList!808 lt!54341)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!69827 () Bool)

(assert (=> d!29823 (= lt!55065 e!69827)))

(declare-fun res!53307 () Bool)

(assert (=> d!29823 (=> (not res!53307) (not e!69827))))

(assert (=> d!29823 (= res!53307 ((_ is Cons!1638) (toList!808 lt!54341)))))

(assert (=> d!29823 (= (contains!830 (toList!808 lt!54341) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!55065)))

(declare-fun b!107342 () Bool)

(declare-fun e!69828 () Bool)

(assert (=> b!107342 (= e!69827 e!69828)))

(declare-fun res!53306 () Bool)

(assert (=> b!107342 (=> res!53306 e!69828)))

(assert (=> b!107342 (= res!53306 (= (h!2235 (toList!808 lt!54341)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!107343 () Bool)

(assert (=> b!107343 (= e!69828 (contains!830 (t!5737 (toList!808 lt!54341)) (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1339 (select (arr!2063 (_values!2565 (v!2892 (underlying!362 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!388 (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!29823 res!53307) b!107342))

(assert (= (and b!107342 (not res!53306)) b!107343))

(declare-fun m!120897 () Bool)

(assert (=> d!29823 m!120897))

(declare-fun m!120899 () Bool)

(assert (=> d!29823 m!120899))

(declare-fun m!120901 () Bool)

(assert (=> b!107343 m!120901))

(assert (=> b!106090 d!29823))

(assert (=> d!28869 d!28837))

(declare-fun b!107360 () Bool)

(declare-fun e!69840 () Bool)

(declare-fun e!69837 () Bool)

(assert (=> b!107360 (= e!69840 e!69837)))

(declare-fun res!53318 () Bool)

(declare-fun call!11363 () Bool)

(assert (=> b!107360 (= res!53318 call!11363)))

(assert (=> b!107360 (=> (not res!53318) (not e!69837))))

(declare-fun b!107361 () Bool)

(declare-fun call!11362 () Bool)

(assert (=> b!107361 (= e!69837 (not call!11362))))

(declare-fun d!29825 () Bool)

(assert (=> d!29825 e!69840))

(declare-fun c!18860 () Bool)

(declare-fun lt!55068 () SeekEntryResult!269)

(assert (=> d!29825 (= c!18860 ((_ is MissingZero!269) lt!55068))))

(assert (=> d!29825 (= lt!55068 (seekEntryOrOpen!0 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (_keys!4288 newMap!16) (mask!6728 newMap!16)))))

(assert (=> d!29825 true))

(declare-fun _$34!892 () Unit!3250)

(assert (=> d!29825 (= (choose!663 (_keys!4288 newMap!16) (_values!2565 newMap!16) (mask!6728 newMap!16) (extraKeys!2387 newMap!16) (zeroValue!2457 newMap!16) (minValue!2457 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) (defaultEntry!2582 newMap!16)) _$34!892)))

(declare-fun bm!11359 () Bool)

(assert (=> bm!11359 (= call!11362 (arrayContainsKey!0 (_keys!4288 newMap!16) (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!107362 () Bool)

(declare-fun res!53316 () Bool)

(declare-fun e!69839 () Bool)

(assert (=> b!107362 (=> (not res!53316) (not e!69839))))

(assert (=> b!107362 (= res!53316 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3227 lt!55068)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107363 () Bool)

(declare-fun res!53317 () Bool)

(assert (=> b!107363 (= res!53317 (= (select (arr!2062 (_keys!4288 newMap!16)) (index!3224 lt!55068)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107363 (=> (not res!53317) (not e!69837))))

(declare-fun b!107364 () Bool)

(declare-fun res!53319 () Bool)

(assert (=> b!107364 (=> (not res!53319) (not e!69839))))

(assert (=> b!107364 (= res!53319 call!11363)))

(declare-fun e!69838 () Bool)

(assert (=> b!107364 (= e!69838 e!69839)))

(declare-fun b!107365 () Bool)

(assert (=> b!107365 (= e!69840 e!69838)))

(declare-fun c!18859 () Bool)

(assert (=> b!107365 (= c!18859 ((_ is MissingVacant!269) lt!55068))))

(declare-fun b!107366 () Bool)

(assert (=> b!107366 (= e!69839 (not call!11362))))

(declare-fun bm!11360 () Bool)

(assert (=> bm!11360 (= call!11363 (inRange!0 (ite c!18860 (index!3224 lt!55068) (index!3227 lt!55068)) (mask!6728 newMap!16)))))

(declare-fun b!107367 () Bool)

(assert (=> b!107367 (= e!69838 ((_ is Undefined!269) lt!55068))))

(assert (= (and d!29825 c!18860) b!107360))

(assert (= (and d!29825 (not c!18860)) b!107365))

(assert (= (and b!107360 res!53318) b!107363))

(assert (= (and b!107363 res!53317) b!107361))

(assert (= (and b!107365 c!18859) b!107364))

(assert (= (and b!107365 (not c!18859)) b!107367))

(assert (= (and b!107364 res!53319) b!107362))

(assert (= (and b!107362 res!53316) b!107366))

(assert (= (or b!107360 b!107364) bm!11360))

(assert (= (or b!107361 b!107366) bm!11359))

(declare-fun m!120903 () Bool)

(assert (=> b!107362 m!120903))

(declare-fun m!120905 () Bool)

(assert (=> bm!11360 m!120905))

(declare-fun m!120907 () Bool)

(assert (=> b!107363 m!120907))

(assert (=> bm!11359 m!117519))

(assert (=> bm!11359 m!117657))

(assert (=> d!29825 m!117519))

(assert (=> d!29825 m!117635))

(assert (=> d!28869 d!29825))

(assert (=> d!28869 d!29203))

(declare-fun d!29827 () Bool)

(declare-fun lt!55069 () Bool)

(assert (=> d!29827 (= lt!55069 (select (content!108 lt!54305) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun e!69841 () Bool)

(assert (=> d!29827 (= lt!55069 e!69841)))

(declare-fun res!53321 () Bool)

(assert (=> d!29827 (=> (not res!53321) (not e!69841))))

(assert (=> d!29827 (= res!53321 ((_ is Cons!1638) lt!54305))))

(assert (=> d!29827 (= (contains!830 lt!54305 (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))) lt!55069)))

(declare-fun b!107368 () Bool)

(declare-fun e!69842 () Bool)

(assert (=> b!107368 (= e!69841 e!69842)))

(declare-fun res!53320 () Bool)

(assert (=> b!107368 (=> res!53320 e!69842)))

(assert (=> b!107368 (= res!53320 (= (h!2235 lt!54305) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(declare-fun b!107369 () Bool)

(assert (=> b!107369 (= e!69842 (contains!830 (t!5737 lt!54305) (tuple2!2411 (_1!1215 lt!53818) (_2!1215 lt!53818))))))

(assert (= (and d!29827 res!53321) b!107368))

(assert (= (and b!107368 (not res!53320)) b!107369))

(declare-fun m!120909 () Bool)

(assert (=> d!29827 m!120909))

(declare-fun m!120911 () Bool)

(assert (=> d!29827 m!120911))

(declare-fun m!120913 () Bool)

(assert (=> b!107369 m!120913))

(assert (=> b!106056 d!29827))

(assert (=> b!106086 d!29251))

(assert (=> b!106086 d!29253))

(assert (=> bm!11241 d!28837))

(declare-fun b!107370 () Bool)

(declare-fun e!69843 () (_ BitVec 32))

(declare-fun call!11364 () (_ BitVec 32))

(assert (=> b!107370 (= e!69843 (bvadd #b00000000000000000000000000000001 call!11364))))

(declare-fun b!107371 () Bool)

(assert (=> b!107371 (= e!69843 call!11364)))

(declare-fun b!107372 () Bool)

(declare-fun e!69844 () (_ BitVec 32))

(assert (=> b!107372 (= e!69844 #b00000000000000000000000000000000)))

(declare-fun d!29829 () Bool)

(declare-fun lt!55070 () (_ BitVec 32))

(assert (=> d!29829 (and (bvsge lt!55070 #b00000000000000000000000000000000) (bvsle lt!55070 (bvsub (size!2317 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000)))))

(assert (=> d!29829 (= lt!55070 e!69844)))

(declare-fun c!18861 () Bool)

(assert (=> d!29829 (= c!18861 (bvsge #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))))))

(assert (=> d!29829 (and (bvsle #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2317 (_keys!4288 (_2!1216 lt!53943))) (size!2317 (_keys!4288 (_2!1216 lt!53943)))))))

(assert (=> d!29829 (= (arrayCountValidKeys!0 (_keys!4288 (_2!1216 lt!53943)) #b00000000000000000000000000000000 (size!2317 (_keys!4288 (_2!1216 lt!53943)))) lt!55070)))

(declare-fun b!107373 () Bool)

(assert (=> b!107373 (= e!69844 e!69843)))

(declare-fun c!18862 () Bool)

(assert (=> b!107373 (= c!18862 (validKeyInArray!0 (select (arr!2062 (_keys!4288 (_2!1216 lt!53943))) #b00000000000000000000000000000000)))))

(declare-fun bm!11361 () Bool)

(assert (=> bm!11361 (= call!11364 (arrayCountValidKeys!0 (_keys!4288 (_2!1216 lt!53943)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2317 (_keys!4288 (_2!1216 lt!53943)))))))

(assert (= (and d!29829 c!18861) b!107372))

(assert (= (and d!29829 (not c!18861)) b!107373))

(assert (= (and b!107373 c!18862) b!107370))

(assert (= (and b!107373 (not c!18862)) b!107371))

(assert (= (or b!107370 b!107371) bm!11361))

(assert (=> b!107373 m!120133))

(assert (=> b!107373 m!120133))

(assert (=> b!107373 m!120135))

(declare-fun m!120915 () Bool)

(assert (=> bm!11361 m!120915))

(assert (=> b!105789 d!29829))

(declare-fun d!29831 () Bool)

(declare-fun e!69846 () Bool)

(assert (=> d!29831 e!69846))

(declare-fun res!53322 () Bool)

(assert (=> d!29831 (=> res!53322 e!69846)))

(declare-fun lt!55071 () Bool)

(assert (=> d!29831 (= res!53322 (not lt!55071))))

(declare-fun lt!55074 () Bool)

(assert (=> d!29831 (= lt!55071 lt!55074)))

(declare-fun lt!55073 () Unit!3250)

(declare-fun e!69845 () Unit!3250)

(assert (=> d!29831 (= lt!55073 e!69845)))

(declare-fun c!18863 () Bool)

(assert (=> d!29831 (= c!18863 lt!55074)))

(assert (=> d!29831 (= lt!55074 (containsKey!159 (toList!808 lt!54212) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> d!29831 (= (contains!829 lt!54212 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) lt!55071)))

(declare-fun b!107374 () Bool)

(declare-fun lt!55072 () Unit!3250)

(assert (=> b!107374 (= e!69845 lt!55072)))

(assert (=> b!107374 (= lt!55072 (lemmaContainsKeyImpliesGetValueByKeyDefined!108 (toList!808 lt!54212) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(assert (=> b!107374 (isDefined!109 (getValueByKey!155 (toList!808 lt!54212) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!107375 () Bool)

(declare-fun Unit!3331 () Unit!3250)

(assert (=> b!107375 (= e!69845 Unit!3331)))

(declare-fun b!107376 () Bool)

(assert (=> b!107376 (= e!69846 (isDefined!109 (getValueByKey!155 (toList!808 lt!54212) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (= (and d!29831 c!18863) b!107374))

(assert (= (and d!29831 (not c!18863)) b!107375))

(assert (= (and d!29831 (not res!53322)) b!107376))

(declare-fun m!120917 () Bool)

(assert (=> d!29831 m!120917))

(declare-fun m!120919 () Bool)

(assert (=> b!107374 m!120919))

(assert (=> b!107374 m!118197))

(assert (=> b!107374 m!118197))

(declare-fun m!120921 () Bool)

(assert (=> b!107374 m!120921))

(assert (=> b!107376 m!118197))

(assert (=> b!107376 m!118197))

(assert (=> b!107376 m!120921))

(assert (=> d!28927 d!29831))

(declare-fun b!107378 () Bool)

(declare-fun e!69847 () Option!161)

(declare-fun e!69848 () Option!161)

(assert (=> b!107378 (= e!69847 e!69848)))

(declare-fun c!18865 () Bool)

(assert (=> b!107378 (= c!18865 (and ((_ is Cons!1638) lt!54211) (not (= (_1!1215 (h!2235 lt!54211)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun c!18864 () Bool)

(declare-fun d!29833 () Bool)

(assert (=> d!29833 (= c!18864 (and ((_ is Cons!1638) lt!54211) (= (_1!1215 (h!2235 lt!54211)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!29833 (= (getValueByKey!155 lt!54211 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) e!69847)))

(declare-fun b!107379 () Bool)

(assert (=> b!107379 (= e!69848 (getValueByKey!155 (t!5737 lt!54211) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!107377 () Bool)

(assert (=> b!107377 (= e!69847 (Some!160 (_2!1215 (h!2235 lt!54211))))))

(declare-fun b!107380 () Bool)

(assert (=> b!107380 (= e!69848 None!159)))

(assert (= (and d!29833 c!18864) b!107377))

(assert (= (and d!29833 (not c!18864)) b!107378))

(assert (= (and b!107378 c!18865) b!107379))

(assert (= (and b!107378 (not c!18865)) b!107380))

(declare-fun m!120923 () Bool)

(assert (=> b!107379 m!120923))

(assert (=> d!28927 d!29833))

(declare-fun d!29835 () Bool)

(assert (=> d!29835 (= (getValueByKey!155 lt!54211 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) (Some!160 (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun lt!55075 () Unit!3250)

(assert (=> d!29835 (= lt!55075 (choose!666 lt!54211 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun e!69849 () Bool)

(assert (=> d!29835 e!69849))

(declare-fun res!53323 () Bool)

(assert (=> d!29835 (=> (not res!53323) (not e!69849))))

(assert (=> d!29835 (= res!53323 (isStrictlySorted!304 lt!54211))))

(assert (=> d!29835 (= (lemmaContainsTupThenGetReturnValue!73 lt!54211 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) lt!55075)))

(declare-fun b!107381 () Bool)

(declare-fun res!53324 () Bool)

(assert (=> b!107381 (=> (not res!53324) (not e!69849))))

(assert (=> b!107381 (= res!53324 (containsKey!159 lt!54211 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!107382 () Bool)

(assert (=> b!107382 (= e!69849 (contains!830 lt!54211 (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (= (and d!29835 res!53323) b!107381))

(assert (= (and b!107381 res!53324) b!107382))

(assert (=> d!29835 m!118191))

(declare-fun m!120925 () Bool)

(assert (=> d!29835 m!120925))

(declare-fun m!120927 () Bool)

(assert (=> d!29835 m!120927))

(declare-fun m!120929 () Bool)

(assert (=> b!107381 m!120929))

(declare-fun m!120931 () Bool)

(assert (=> b!107382 m!120931))

(assert (=> d!28927 d!29835))

(declare-fun d!29837 () Bool)

(declare-fun e!69851 () Bool)

(assert (=> d!29837 e!69851))

(declare-fun res!53325 () Bool)

(assert (=> d!29837 (=> (not res!53325) (not e!69851))))

(declare-fun lt!55076 () List!1642)

(assert (=> d!29837 (= res!53325 (isStrictlySorted!304 lt!55076))))

(declare-fun e!69850 () List!1642)

(assert (=> d!29837 (= lt!55076 e!69850)))

(declare-fun c!18866 () Bool)

(assert (=> d!29837 (= c!18866 (and ((_ is Cons!1638) (toList!808 call!11143)) (bvslt (_1!1215 (h!2235 (toList!808 call!11143))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (=> d!29837 (isStrictlySorted!304 (toList!808 call!11143))))

(assert (=> d!29837 (= (insertStrictlySorted!75 (toList!808 call!11143) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))) lt!55076)))

(declare-fun b!107383 () Bool)

(declare-fun e!69853 () List!1642)

(declare-fun call!11367 () List!1642)

(assert (=> b!107383 (= e!69853 call!11367)))

(declare-fun b!107384 () Bool)

(declare-fun c!18867 () Bool)

(assert (=> b!107384 (= c!18867 (and ((_ is Cons!1638) (toList!808 call!11143)) (bvsgt (_1!1215 (h!2235 (toList!808 call!11143))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun e!69852 () List!1642)

(assert (=> b!107384 (= e!69852 e!69853)))

(declare-fun b!107385 () Bool)

(declare-fun call!11365 () List!1642)

(assert (=> b!107385 (= e!69852 call!11365)))

(declare-fun b!107386 () Bool)

(declare-fun call!11366 () List!1642)

(assert (=> b!107386 (= e!69850 call!11366)))

(declare-fun b!107387 () Bool)

(declare-fun res!53326 () Bool)

(assert (=> b!107387 (=> (not res!53326) (not e!69851))))

(assert (=> b!107387 (= res!53326 (containsKey!159 lt!55076 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun bm!11362 () Bool)

(assert (=> bm!11362 (= call!11365 call!11366)))

(declare-fun c!18868 () Bool)

(declare-fun b!107388 () Bool)

(declare-fun e!69854 () List!1642)

(assert (=> b!107388 (= e!69854 (ite c!18868 (t!5737 (toList!808 call!11143)) (ite c!18867 (Cons!1638 (h!2235 (toList!808 call!11143)) (t!5737 (toList!808 call!11143))) Nil!1639)))))

(declare-fun bm!11363 () Bool)

(assert (=> bm!11363 (= call!11366 ($colon$colon!80 e!69854 (ite c!18866 (h!2235 (toList!808 call!11143)) (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))))

(declare-fun c!18869 () Bool)

(assert (=> bm!11363 (= c!18869 c!18866)))

(declare-fun b!107389 () Bool)

(assert (=> b!107389 (= e!69854 (insertStrictlySorted!75 (t!5737 (toList!808 call!11143)) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815))))))

(declare-fun b!107390 () Bool)

(assert (=> b!107390 (= e!69851 (contains!830 lt!55076 (tuple2!2411 (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)) (_2!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(declare-fun bm!11364 () Bool)

(assert (=> bm!11364 (= call!11367 call!11365)))

(declare-fun b!107391 () Bool)

(assert (=> b!107391 (= e!69853 call!11367)))

(declare-fun b!107392 () Bool)

(assert (=> b!107392 (= e!69850 e!69852)))

(assert (=> b!107392 (= c!18868 (and ((_ is Cons!1638) (toList!808 call!11143)) (= (_1!1215 (h!2235 (toList!808 call!11143))) (_1!1215 (tuple2!2411 (select (arr!2062 (_keys!4288 (v!2892 (underlying!362 thiss!992)))) from!355) lt!53815)))))))

(assert (= (and d!29837 c!18866) b!107386))

(assert (= (and d!29837 (not c!18866)) b!107392))

(assert (= (and b!107392 c!18868) b!107385))

(assert (= (and b!107392 (not c!18868)) b!107384))

(assert (= (and b!107384 c!18867) b!107391))

(assert (= (and b!107384 (not c!18867)) b!107383))

(assert (= (or b!107391 b!107383) bm!11364))

(assert (= (or b!107385 bm!11364) bm!11362))

(assert (= (or b!107386 bm!11362) bm!11363))

(assert (= (and bm!11363 c!18869) b!107389))

(assert (= (and bm!11363 (not c!18869)) b!107388))

(assert (= (and d!29837 res!53325) b!107387))

(assert (= (and b!107387 res!53326) b!107390))

(declare-fun m!120933 () Bool)

(assert (=> b!107390 m!120933))

(declare-fun m!120935 () Bool)

(assert (=> bm!11363 m!120935))

(declare-fun m!120937 () Bool)

(assert (=> b!107387 m!120937))

(declare-fun m!120939 () Bool)

(assert (=> b!107389 m!120939))

(declare-fun m!120941 () Bool)

(assert (=> d!29837 m!120941))

(declare-fun m!120943 () Bool)

(assert (=> d!29837 m!120943))

(assert (=> d!28927 d!29837))

(assert (=> b!105869 d!29207))

(assert (=> b!105869 d!28891))

(declare-fun d!29839 () Bool)

(declare-fun res!53327 () Bool)

(declare-fun e!69855 () Bool)

(assert (=> d!29839 (=> res!53327 e!69855)))

(assert (=> d!29839 (= res!53327 (and ((_ is Cons!1638) lt!54030) (= (_1!1215 (h!2235 lt!54030)) (_1!1215 lt!53818))))))

(assert (=> d!29839 (= (containsKey!159 lt!54030 (_1!1215 lt!53818)) e!69855)))

(declare-fun b!107393 () Bool)

(declare-fun e!69856 () Bool)

(assert (=> b!107393 (= e!69855 e!69856)))

(declare-fun res!53328 () Bool)

(assert (=> b!107393 (=> (not res!53328) (not e!69856))))

(assert (=> b!107393 (= res!53328 (and (or (not ((_ is Cons!1638) lt!54030)) (bvsle (_1!1215 (h!2235 lt!54030)) (_1!1215 lt!53818))) ((_ is Cons!1638) lt!54030) (bvslt (_1!1215 (h!2235 lt!54030)) (_1!1215 lt!53818))))))

(declare-fun b!107394 () Bool)

(assert (=> b!107394 (= e!69856 (containsKey!159 (t!5737 lt!54030) (_1!1215 lt!53818)))))

(assert (= (and d!29839 (not res!53327)) b!107393))

(assert (= (and b!107393 res!53328) b!107394))

(declare-fun m!120945 () Bool)

(assert (=> b!107394 m!120945))

(assert (=> b!106150 d!29839))

(declare-fun d!29841 () Bool)

(declare-fun res!53329 () Bool)

(declare-fun e!69857 () Bool)

(assert (=> d!29841 (=> res!53329 e!69857)))

(assert (=> d!29841 (= res!53329 (and ((_ is Cons!1638) lt!54066) (= (_1!1215 (h!2235 lt!54066)) (_1!1215 lt!53817))))))

(assert (=> d!29841 (= (containsKey!159 lt!54066 (_1!1215 lt!53817)) e!69857)))

(declare-fun b!107395 () Bool)

(declare-fun e!69858 () Bool)

(assert (=> b!107395 (= e!69857 e!69858)))

(declare-fun res!53330 () Bool)

(assert (=> b!107395 (=> (not res!53330) (not e!69858))))

(assert (=> b!107395 (= res!53330 (and (or (not ((_ is Cons!1638) lt!54066)) (bvsle (_1!1215 (h!2235 lt!54066)) (_1!1215 lt!53817))) ((_ is Cons!1638) lt!54066) (bvslt (_1!1215 (h!2235 lt!54066)) (_1!1215 lt!53817))))))

(declare-fun b!107396 () Bool)

(assert (=> b!107396 (= e!69858 (containsKey!159 (t!5737 lt!54066) (_1!1215 lt!53817)))))

(assert (= (and d!29841 (not res!53329)) b!107395))

(assert (= (and b!107395 res!53330) b!107396))

(declare-fun m!120947 () Bool)

(assert (=> b!107396 m!120947))

(assert (=> b!105878 d!29841))

(declare-fun d!29843 () Bool)

(assert (=> d!29843 (= (isEmpty!377 (toList!808 lt!54058)) ((_ is Nil!1639) (toList!808 lt!54058)))))

(assert (=> d!28913 d!29843))

(declare-fun mapIsEmpty!3943 () Bool)

(declare-fun mapRes!3943 () Bool)

(assert (=> mapIsEmpty!3943 mapRes!3943))

(declare-fun b!107398 () Bool)

(declare-fun e!69860 () Bool)

(assert (=> b!107398 (= e!69860 tp_is_empty!2679)))

(declare-fun b!107397 () Bool)

(declare-fun e!69859 () Bool)

(assert (=> b!107397 (= e!69859 tp_is_empty!2679)))

(declare-fun mapNonEmpty!3943 () Bool)

(declare-fun tp!9919 () Bool)

(assert (=> mapNonEmpty!3943 (= mapRes!3943 (and tp!9919 e!69859))))

(declare-fun mapKey!3943 () (_ BitVec 32))

(declare-fun mapRest!3943 () (Array (_ BitVec 32) ValueCell!996))

(declare-fun mapValue!3943 () ValueCell!996)

(assert (=> mapNonEmpty!3943 (= mapRest!3942 (store mapRest!3943 mapKey!3943 mapValue!3943))))

(declare-fun condMapEmpty!3943 () Bool)

(declare-fun mapDefault!3943 () ValueCell!996)

(assert (=> mapNonEmpty!3942 (= condMapEmpty!3943 (= mapRest!3942 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3943)))))

(assert (=> mapNonEmpty!3942 (= tp!9918 (and e!69860 mapRes!3943))))

(assert (= (and mapNonEmpty!3942 condMapEmpty!3943) mapIsEmpty!3943))

(assert (= (and mapNonEmpty!3942 (not condMapEmpty!3943)) mapNonEmpty!3943))

(assert (= (and mapNonEmpty!3943 ((_ is ValueCellFull!996) mapValue!3943)) b!107397))

(assert (= (and mapNonEmpty!3942 ((_ is ValueCellFull!996) mapDefault!3943)) b!107398))

(declare-fun m!120949 () Bool)

(assert (=> mapNonEmpty!3943 m!120949))

(declare-fun mapIsEmpty!3944 () Bool)

(declare-fun mapRes!3944 () Bool)

(assert (=> mapIsEmpty!3944 mapRes!3944))

(declare-fun b!107400 () Bool)

(declare-fun e!69862 () Bool)

(assert (=> b!107400 (= e!69862 tp_is_empty!2679)))

(declare-fun b!107399 () Bool)

(declare-fun e!69861 () Bool)

(assert (=> b!107399 (= e!69861 tp_is_empty!2679)))

(declare-fun mapNonEmpty!3944 () Bool)

(declare-fun tp!9920 () Bool)

(assert (=> mapNonEmpty!3944 (= mapRes!3944 (and tp!9920 e!69861))))

(declare-fun mapRest!3944 () (Array (_ BitVec 32) ValueCell!996))

(declare-fun mapValue!3944 () ValueCell!996)

(declare-fun mapKey!3944 () (_ BitVec 32))

(assert (=> mapNonEmpty!3944 (= mapRest!3941 (store mapRest!3944 mapKey!3944 mapValue!3944))))

(declare-fun condMapEmpty!3944 () Bool)

(declare-fun mapDefault!3944 () ValueCell!996)

(assert (=> mapNonEmpty!3941 (= condMapEmpty!3944 (= mapRest!3941 ((as const (Array (_ BitVec 32) ValueCell!996)) mapDefault!3944)))))

(assert (=> mapNonEmpty!3941 (= tp!9917 (and e!69862 mapRes!3944))))

(assert (= (and mapNonEmpty!3941 condMapEmpty!3944) mapIsEmpty!3944))

(assert (= (and mapNonEmpty!3941 (not condMapEmpty!3944)) mapNonEmpty!3944))

(assert (= (and mapNonEmpty!3944 ((_ is ValueCellFull!996) mapValue!3944)) b!107399))

(assert (= (and mapNonEmpty!3941 ((_ is ValueCellFull!996) mapDefault!3944)) b!107400))

(declare-fun m!120951 () Bool)

(assert (=> mapNonEmpty!3944 m!120951))

(declare-fun b_lambda!4807 () Bool)

(assert (= b_lambda!4775 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4807)))

(declare-fun b_lambda!4809 () Bool)

(assert (= b_lambda!4803 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4809)))

(declare-fun b_lambda!4811 () Bool)

(assert (= b_lambda!4785 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4811)))

(declare-fun b_lambda!4813 () Bool)

(assert (= b_lambda!4781 (or (and b!105370 b_free!2525) (and b!105373 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))))) b_lambda!4813)))

(declare-fun b_lambda!4815 () Bool)

(assert (= b_lambda!4799 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4815)))

(declare-fun b_lambda!4817 () Bool)

(assert (= b_lambda!4783 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4817)))

(declare-fun b_lambda!4819 () Bool)

(assert (= b_lambda!4793 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4819)))

(declare-fun b_lambda!4821 () Bool)

(assert (= b_lambda!4789 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4821)))

(declare-fun b_lambda!4823 () Bool)

(assert (= b_lambda!4795 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4823)))

(declare-fun b_lambda!4825 () Bool)

(assert (= b_lambda!4797 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4825)))

(declare-fun b_lambda!4827 () Bool)

(assert (= b_lambda!4787 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4827)))

(declare-fun b_lambda!4829 () Bool)

(assert (= b_lambda!4779 (or (and b!105370 b_free!2525) (and b!105373 b_free!2527 (= (defaultEntry!2582 newMap!16) (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))))) b_lambda!4829)))

(declare-fun b_lambda!4831 () Bool)

(assert (= b_lambda!4777 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4831)))

(declare-fun b_lambda!4833 () Bool)

(assert (= b_lambda!4791 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4833)))

(declare-fun b_lambda!4835 () Bool)

(assert (= b_lambda!4801 (or (and b!105370 b_free!2525 (= (defaultEntry!2582 (v!2892 (underlying!362 thiss!992))) (defaultEntry!2582 newMap!16))) (and b!105373 b_free!2527) b_lambda!4835)))

(check-sat (not b!107060) (not b!106836) (not b!106993) (not d!29819) (not bm!11283) (not d!29725) (not d!29779) (not b!106911) (not bm!11347) (not b!107274) (not b!106597) (not bm!11310) (not b!106581) (not d!29637) (not b!106588) (not b!107329) (not b!106355) (not b!107256) (not d!29291) (not b!107046) (not b!106635) (not b!106640) (not bm!11289) (not b!107226) (not b!107379) (not b!107001) (not bm!11341) (not b!106359) (not b!107311) (not b!107196) (not d!29165) (not b!106767) (not b!106613) (not d!29635) (not b!107319) (not b!106875) (not d!29351) (not b!106234) (not b!107081) (not b!107389) (not bm!11304) (not d!29669) (not d!29341) (not d!29587) (not bm!11313) (not b!106357) (not b_lambda!4813) (not d!29215) (not d!29413) (not b!107219) (not b!106959) (not b!106826) (not bm!11246) (not b_next!2527) (not b!106616) (not b!106272) (not b!106903) (not d!29427) (not d!29601) (not d!29401) (not d!29227) (not b!107176) (not d!29403) (not d!29579) (not bm!11244) (not d!29575) (not b!106226) (not b!106994) (not d!29597) (not bm!11291) (not d!29095) (not b!107177) (not b!106673) (not b!106745) (not b!107369) (not d!29787) (not b!106793) (not bm!11337) (not b!106539) (not b!106778) (not d!29419) (not b!106296) (not b!106970) (not b!106972) (not b!107158) (not b!106422) (not b!106629) (not b!107024) (not b!107193) (not b!106639) (not b!106472) (not d!29591) (not b!106302) (not b!106884) (not bm!11250) (not b!107109) (not b!106507) (not b!106732) (not b!106694) (not d!29425) (not bm!11303) (not b!107271) (not b_lambda!4769) (not b!106711) (not b!106632) (not d!29503) (not d!29507) (not d!29261) (not bm!11295) (not b!106261) (not b!106712) (not b_lambda!4815) (not bm!11248) (not b!106299) (not d!29445) (not b!107052) (not b!106492) (not b!107188) (not b!106741) (not b!106902) (not b!106664) (not d!29157) (not d!29219) (not b!106968) (not d!29559) (not b!107374) (not b!107153) (not b!106535) (not b!107273) (not bm!11345) (not d!29835) (not d!29677) (not d!29101) (not d!29511) (not b!106258) (not b!107387) (not d!29785) (not b!106420) (not b!106238) (not b!106886) (not b!106436) (not b!106404) (not d!29259) (not b!107241) (not b!106620) (not b!106236) (not b!106738) (not b!107224) (not b!107034) (not b!106431) (not d!29169) (not d!29305) (not d!29393) (not d!29729) (not b!106849) (not d!29159) (not b!106362) (not b!107293) (not d!29147) (not d!29803) (not b!106864) (not b!107051) (not b!106434) (not b!107149) (not b!106653) (not d!29191) (not b!106485) (not b!106611) (not d!29211) (not d!29325) (not b!107037) (not b!106701) (not b!106999) (not d!29653) (not b!106770) (not b!107302) (not b!107075) (not d!29149) (not b!106688) (not b!106894) (not b!107296) (not d!29451) (not d!29755) (not b!107097) (not b!106383) (not b!106670) (not b!106948) (not b!106282) (not d!29217) (not b!106290) (not b!106288) (not b!107020) (not bm!11278) (not bm!11316) (not b!107170) (not d!29773) (not d!29651) (not b!106700) (not d!29207) (not b!107382) (not b!106867) (not b!106606) (not b_lambda!4835) (not b!106599) (not d!29837) (not d!29273) (not b!106243) (not d!29741) (not d!29765) (not bm!11318) (not b!106260) (not b!106530) (not b!106432) (not b!106468) (not b!106787) (not b!106808) (not b!107294) (not bm!11275) (not d!29771) (not b!106642) (not bm!11307) (not d!29759) (not b!106637) (not d!29299) (not d!29271) (not b!106825) (not b!107299) (not d!29825) (not b!106426) (not d!29079) (not b!106621) (not b!106555) (not b!106698) (not d!29251) (not d!29039) (not d!29357) (not b!106885) (not d!29407) (not bm!11338) (not d!29307) (not b!106761) (not b!106746) (not b!106852) (not d!29655) (not b!106582) (not b!106681) (not d!29679) (not b!106241) (not b!106810) (not b!106924) (not b!106601) (not b!106413) (not b!106769) (not b!106572) (not b!106378) (not b!106892) (not b!107148) (not b!106672) (not b!106617) (not b!106589) (not b!107112) (not b!106966) (not bm!11296) (not b!106401) (not b!107335) (not d!29751) (not d!29373) (not b!107297) (not d!29213) (not d!29173) (not b!106717) (not bm!11271) (not b!106619) (not b!107262) (not b!107035) (not bm!11328) (not d!29353) (not d!29205) (not d!29733) (not b!106890) (not b!106465) (not b!106562) (not b!106627) (not b!106417) (not d!29129) (not b!106515) (not b!106678) (not d!29515) (not d!29539) (not b!106727) (not b!107070) (not b!106854) (not b!107054) (not b!106265) (not b!106504) (not b!106614) (not b!107008) (not b!107175) (not b!107096) (not b!106552) (not b!106710) (not b!106474) (not b!106291) (not b!106347) (not d!29553) (not bm!11267) (not bm!11280) (not d!29337) b_and!6625 (not d!29043) (not b!106499) (not b!106900) (not bm!11258) (not d!29541) (not b!106991) (not b!106574) (not bm!11286) (not b_lambda!4745) (not d!29083) (not bm!11336) (not d!29777) (not b!106754) (not b!106418) (not b!106753) (not b_lambda!4825) (not d!29141) (not b!106575) (not d!29441) (not b!107327) (not d!29069) (not b!106940) (not d!29429) (not b!107252) (not d!29171) (not b!106929) (not d!29323) (not b!106973) (not b_lambda!4737) (not d!29089) (not bm!11279) (not b!106320) (not b!107260) (not d!29379) (not d!29375) (not b!107340) (not d!29391) (not b!106246) (not d!29459) (not b!107157) (not b!106344) (not b!106953) (not b!107322) (not b!106803) (not d!29689) (not bm!11259) (not b!106622) (not b!106856) (not b!106397) (not b!107251) (not b!107206) (not b!106557) (not mapNonEmpty!3944) (not d!29135) (not b!106232) (not b!106323) (not d!29387) (not b!106479) (not d!29405) (not b!106466) (not d!29041) (not b!106411) (not b!106827) (not b!106277) (not b!107269) (not d!29277) (not b!106456) (not d!29827) (not b_lambda!4765) (not d!29199) (not d!29333) (not b!107267) (not b!106424) (not b!107140) (not b!106437) (not b!107330) (not d!29505) (not b!106936) (not b!107309) (not d!29107) (not d!29225) (not b!106596) (not b!106352) (not d!29115) (not b!106274) (not b!107057) (not d!29483) (not d!29519) (not d!29467) (not b!107089) (not d!29289) (not d!29745) (not b!106795) (not b!106280) (not bm!11273) (not b!106586) (not b!106396) (not d!29757) (not d!29073) (not d!29315) (not b!106501) (not b!106908) (not b!106506) (not b!106644) (not bm!11299) (not b!106895) (not b!106802) (not b!106444) (not b!106759) (not d!29701) (not d!29319) (not b!106722) (not d!29293) (not b_lambda!4833) (not b!106974) (not b!106467) (not b!107151) (not d!29645) (not b!106584) (not b!106633) (not d!29735) (not b!106910) (not b!107025) (not d!29489) (not b!106375) (not d!29647) (not b_lambda!4811) (not b!106675) (not b!106559) (not b!107236) (not b!106532) (not b!106829) (not d!29567) (not b!107201) (not d!29163) (not b!106263) (not bm!11270) (not b!107183) (not d!29525) (not b!107306) (not b!106771) (not d!29231) (not b!106828) (not b!106283) (not b!106631) (not d!29657) (not b!106578) (not b!106592) (not d!29195) (not b!107015) (not d!29065) (not b!107161) (not b!106916) (not bm!11256) (not b!107041) (not b_lambda!4771) (not bm!11261) (not b!106809) (not b!106731) (not bm!11363) (not b!106657) (not d!29303) (not b!106268) (not b!106868) (not b!106484) (not b!106326) (not b!107396) (not b!106433) (not b!107287) (not d!29549) (not b!106585) (not d!29581) (not b!107289) (not d!29611) (not b!107009) (not b!106779) (not b!107165) (not b!106463) (not b!106270) (not b!106482) (not d!29123) (not b_lambda!4821) (not b!106821) (not d!29691) (not b!106569) (not b!106686) (not b!106846) (not b!106595) (not b!106483) (not b!106888) (not b!107312) (not d!29161) (not bm!11268) (not b!107078) (not b!106579) (not d!29209) (not b!107281) (not d!29535) (not b!106412) (not d!29417) (not d!29811) (not b!107229) (not d!29595) (not b!107087) (not b!107376) (not b!106618) (not b!107155) (not d!29181) (not d!29801) (not b!107102) (not b!106445) (not d!29033) (not d!29309) (not bm!11265) (not d!29695) (not b!106360) (not b!106786) (not b!106763) (not b!107074) (not bm!11292) (not b!106548) (not b!106370) (not b!106695) tp_is_empty!2679 (not b_lambda!4829) (not d!29537) (not d!29583) (not bm!11325) (not b!107178) (not b!106327) (not bm!11359) (not d!29313) (not b!106981) (not b!106798) (not b!106249) (not b!106945) (not b!106427) (not b!106604) (not bm!11332) (not d!29067) (not b!106766) (not b!107261) (not b!106394) (not bm!11253) (not b!106702) (not d!29683) (not b!107290) (not b!106386) (not b!107249) (not b!106988) (not d!29275) (not b!107334) (not b!106416) (not bm!11360) (not b!106336) (not d!29295) (not d!29381) (not d!29799) (not b!107058) (not d!29185) (not d!29287) (not b_lambda!4809) (not b!107156) (not d!29659) (not b!106791) (not d!29521) (not b!106514) (not d!29699) (not b!106765) (not b_lambda!4817) (not d!29547) (not b!106403) (not d!29501) (not d!29783) (not d!29497) (not b!107199) (not b!106257) (not d!29431) (not b!106947) (not d!29789) (not d!29717) (not b!107168) (not b!107394) (not d!29807) (not b!107243) (not b!106325) (not d!29471) (not d!29235) (not b!106275) (not b!106834) (not b!107207) (not b!107316) (not b!107265) (not d!29609) (not d!29397) (not b!107276) (not d!29131) (not b!106580) (not b!106705) (not b!106229) (not b!106740) (not b!106367) (not b!106870) (not b!106920) (not bm!11327) (not d!29221) (not b!106439) (not d!29641) (not b!107144) (not b!106693) (not d!29297) (not d!29177) (not d!29237) (not d!29599) (not b!107235) (not b!106560) (not b!106964) (not bm!11350) (not b!106842) (not d!29649) (not d!29249) (not d!29453) (not b!106497) (not b_lambda!4805) (not b!106388) (not b!106565) (not b_next!2525) (not b!107172) (not b!106956) (not d!29075) (not d!29139) (not d!29709) (not d!29179) (not d!29087) (not d!29667) (not b!106419) (not b!107115) (not b!107381) (not bm!11333) (not b!107203) (not b!107279) (not b!106478) (not b!106410) (not b!107143) (not b!106612) (not d!29175) (not b!106844) (not b!106341) (not b!106897) (not b!107259) (not d!29119) (not d!29389) (not b!106593) (not b!107065) (not d!29529) (not d!29265) (not b_lambda!4773) (not b!106489) (not b_lambda!4819) (not b!106880) (not bm!11343) (not d!29311) (not b!107059) (not b!106887) (not b!106733) (not bm!11353) (not b!106839) (not b!106680) (not d!29187) (not d!29533) (not b!106350) (not d!29183) (not b!107092) (not b!106832) (not b!107307) (not b!106550) (not d!29763) (not b!106335) (not d!29593) (not b!106610) (not b!106453) (not b!106523) (not b!107295) (not b!106486) (not b!106869) (not b!106776) (not b!106861) (not b!106470) (not d!29317) (not b!107010) (not bm!11269) (not d!29661) (not b!106816) (not b!106689) (not b!107304) (not d!29805) (not b!107105) (not d!29411) (not b!106960) (not d!29749) (not bm!11329) (not b!106458) (not b!107085) (not b!106942) (not b!106361) (not mapNonEmpty!3943) (not b!107337) (not b!107210) (not b!106801) (not b!106978) (not d!29499) (not d!29063) (not d!29577) (not d!29255) (not d!29721) (not b!106607) (not b!107228) (not bm!11297) (not b!107257) (not bm!11323) (not d!29791) (not b!107099) (not b!106526) (not b!106728) (not b!106661) (not b!106364) (not b!106430) (not b!106408) (not d!29167) (not b!106859) (not b!107373) (not d!29243) (not d!29737) (not d!29793) (not b!107222) (not b!106922) (not d!29339) (not d!29443) (not b!107048) (not b!106667) (not b!107321) (not d!29035) (not bm!11320) (not b!107007) (not b!106494) (not b!106389) (not b!107204) (not b_lambda!4767) (not b!106546) (not bm!11334) (not b!106986) (not b!106623) (not d!29331) (not b!107147) (not d!29665) (not b!106955) (not d!29111) (not d!29743) (not d!29201) (not bm!11315) (not b!106805) (not b!106804) (not b!106848) b_and!6627 (not b!107272) (not b!106405) (not b!107270) (not b!106369) (not b!106797) (not d!29423) (not d!29485) (not b!106697) (not b!107192) (not d!29813) (not d!29761) (not d!29769) (not b!106650) (not b!107002) (not b!106937) (not d!29831) (not d!29455) (not bm!11302) (not b!106377) (not b!106452) (not d!29433) (not b!106253) (not bm!11342) (not d!29321) (not d!29127) (not b!107088) (not d!29477) (not b!106333) (not b!106536) (not bm!11263) (not b!106927) (not b!107214) (not d!29727) (not b!106487) (not d!29753) (not b!107258) (not b!106773) (not d!29671) (not b!106729) (not b!106255) (not b!106381) (not d!29285) (not d!29437) (not b!107107) (not b!106862) (not d!29719) (not b!107343) (not b!106830) (not d!29143) (not b!107195) (not d!29327) (not bm!11324) (not b!107282) (not b!106512) (not b!106476) (not b_lambda!4827) (not b_lambda!4823) (not b!107082) (not b!106450) (not d!29435) (not b!106643) (not d!29329) (not b!106726) (not d!29571) (not b_lambda!4747) (not b!107154) (not b!106784) (not b!107390) (not b!106984) (not b!106751) (not d!29747) (not d!29457) (not d!29415) (not d!29823) (not b!107244) (not b!106442) (not d!29767) (not b!107314) (not d!29621) (not d!29545) (not b!106709) (not b_lambda!4807) (not b!106934) (not bm!11361) (not b!106259) (not b!106811) (not d!29663) (not b!106591) (not b!107238) (not b!106648) (not b_lambda!4763) (not d!29197) (not b!107217) (not d!29643) (not b_lambda!4749) (not b_lambda!4831))
(check-sat b_and!6625 b_and!6627 (not b_next!2525) (not b_next!2527))
