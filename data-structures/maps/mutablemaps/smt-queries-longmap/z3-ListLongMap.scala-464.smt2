; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!8582 () Bool)

(assert start!8582)

(declare-fun b!58833 () Bool)

(declare-fun b_free!1961 () Bool)

(declare-fun b_next!1961 () Bool)

(assert (=> b!58833 (= b_free!1961 (not b_next!1961))))

(declare-fun tp!7998 () Bool)

(declare-fun b_and!3561 () Bool)

(assert (=> b!58833 (= tp!7998 b_and!3561)))

(declare-fun b!58818 () Bool)

(declare-fun b_free!1963 () Bool)

(declare-fun b_next!1963 () Bool)

(assert (=> b!58818 (= b_free!1963 (not b_next!1963))))

(declare-fun tp!7995 () Bool)

(declare-fun b_and!3563 () Bool)

(assert (=> b!58818 (= tp!7995 b_and!3563)))

(declare-fun e!38720 () Bool)

(declare-datatypes ((V!2843 0))(
  ( (V!2844 (val!1243 Int)) )
))
(declare-datatypes ((array!3720 0))(
  ( (array!3721 (arr!1780 (Array (_ BitVec 32) (_ BitVec 64))) (size!2010 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!855 0))(
  ( (ValueCellFull!855 (v!2380 V!2843)) (EmptyCell!855) )
))
(declare-datatypes ((array!3722 0))(
  ( (array!3723 (arr!1781 (Array (_ BitVec 32) ValueCell!855)) (size!2011 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!618 0))(
  ( (LongMapFixedSize!619 (defaultEntry!2043 Int) (mask!5927 (_ BitVec 32)) (extraKeys!1930 (_ BitVec 32)) (zeroValue!1959 V!2843) (minValue!1959 V!2843) (_size!358 (_ BitVec 32)) (_keys!3667 array!3720) (_values!2026 array!3722) (_vacant!358 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!618)

(declare-fun e!38717 () Bool)

(declare-fun tp_is_empty!2397 () Bool)

(declare-fun array_inv!1051 (array!3720) Bool)

(declare-fun array_inv!1052 (array!3722) Bool)

(assert (=> b!58818 (= e!38720 (and tp!7995 tp_is_empty!2397 (array_inv!1051 (_keys!3667 newMap!16)) (array_inv!1052 (_values!2026 newMap!16)) e!38717))))

(declare-fun b!58819 () Bool)

(declare-fun e!38724 () Bool)

(declare-fun e!38714 () Bool)

(assert (=> b!58819 (= e!38724 e!38714)))

(declare-fun res!32730 () Bool)

(assert (=> b!58819 (=> (not res!32730) (not e!38714))))

(declare-datatypes ((tuple2!2046 0))(
  ( (tuple2!2047 (_1!1033 Bool) (_2!1033 LongMapFixedSize!618)) )
))
(declare-fun lt!23662 () tuple2!2046)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!58819 (= res!32730 (and (_1!1033 lt!23662) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!1553 0))(
  ( (Unit!1554) )
))
(declare-fun lt!23659 () Unit!1553)

(declare-fun e!38726 () Unit!1553)

(assert (=> b!58819 (= lt!23659 e!38726)))

(declare-datatypes ((Cell!428 0))(
  ( (Cell!429 (v!2381 LongMapFixedSize!618)) )
))
(declare-datatypes ((LongMap!428 0))(
  ( (LongMap!429 (underlying!225 Cell!428)) )
))
(declare-fun thiss!992 () LongMap!428)

(declare-datatypes ((tuple2!2048 0))(
  ( (tuple2!2049 (_1!1034 (_ BitVec 64)) (_2!1034 V!2843)) )
))
(declare-datatypes ((List!1453 0))(
  ( (Nil!1450) (Cons!1449 (h!2030 tuple2!2048) (t!4799 List!1453)) )
))
(declare-datatypes ((ListLongMap!1377 0))(
  ( (ListLongMap!1378 (toList!704 List!1453)) )
))
(declare-fun lt!23660 () ListLongMap!1377)

(declare-fun c!7461 () Bool)

(declare-fun contains!692 (ListLongMap!1377 (_ BitVec 64)) Bool)

(assert (=> b!58819 (= c!7461 (contains!692 lt!23660 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun update!84 (LongMapFixedSize!618 (_ BitVec 64) V!2843) tuple2!2046)

(declare-fun get!1080 (ValueCell!855 V!2843) V!2843)

(declare-fun dynLambda!312 (Int (_ BitVec 64)) V!2843)

(assert (=> b!58819 (= lt!23662 (update!84 newMap!16 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!58820 () Bool)

(declare-fun e!38718 () Bool)

(assert (=> b!58820 (= e!38718 tp_is_empty!2397)))

(declare-fun b!58821 () Bool)

(declare-fun res!32727 () Bool)

(declare-fun e!38716 () Bool)

(assert (=> b!58821 (=> (not res!32727) (not e!38716))))

(declare-fun valid!249 (LongMapFixedSize!618) Bool)

(assert (=> b!58821 (= res!32727 (valid!249 newMap!16))))

(declare-fun b!58822 () Bool)

(assert (=> b!58822 (= e!38714 (and (= (size!2011 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!5927 (v!2381 (underlying!225 thiss!992))))) (not (= (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (size!2011 (_values!2026 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!58823 () Bool)

(declare-fun e!38721 () Bool)

(declare-fun e!38722 () Bool)

(assert (=> b!58823 (= e!38721 e!38722)))

(declare-fun b!58824 () Bool)

(assert (=> b!58824 (= e!38716 e!38724)))

(declare-fun res!32725 () Bool)

(assert (=> b!58824 (=> (not res!32725) (not e!38724))))

(declare-fun lt!23663 () ListLongMap!1377)

(assert (=> b!58824 (= res!32725 (and (= lt!23663 lt!23660) (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1107 (LongMapFixedSize!618) ListLongMap!1377)

(assert (=> b!58824 (= lt!23660 (map!1107 newMap!16))))

(declare-fun getCurrentListMap!401 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 32) Int) ListLongMap!1377)

(assert (=> b!58824 (= lt!23663 (getCurrentListMap!401 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun mapIsEmpty!2873 () Bool)

(declare-fun mapRes!2873 () Bool)

(assert (=> mapIsEmpty!2873 mapRes!2873))

(declare-fun mapNonEmpty!2873 () Bool)

(declare-fun tp!7996 () Bool)

(declare-fun e!38727 () Bool)

(assert (=> mapNonEmpty!2873 (= mapRes!2873 (and tp!7996 e!38727))))

(declare-fun mapKey!2873 () (_ BitVec 32))

(declare-fun mapValue!2873 () ValueCell!855)

(declare-fun mapRest!2874 () (Array (_ BitVec 32) ValueCell!855))

(assert (=> mapNonEmpty!2873 (= (arr!1781 (_values!2026 newMap!16)) (store mapRest!2874 mapKey!2873 mapValue!2873))))

(declare-fun res!32729 () Bool)

(assert (=> start!8582 (=> (not res!32729) (not e!38716))))

(declare-fun valid!250 (LongMap!428) Bool)

(assert (=> start!8582 (= res!32729 (valid!250 thiss!992))))

(assert (=> start!8582 e!38716))

(assert (=> start!8582 e!38721))

(assert (=> start!8582 true))

(assert (=> start!8582 e!38720))

(declare-fun b!58825 () Bool)

(declare-fun e!38725 () Bool)

(assert (=> b!58825 (= e!38725 tp_is_empty!2397)))

(declare-fun b!58826 () Bool)

(assert (=> b!58826 (= e!38717 (and e!38718 mapRes!2873))))

(declare-fun condMapEmpty!2873 () Bool)

(declare-fun mapDefault!2874 () ValueCell!855)

(assert (=> b!58826 (= condMapEmpty!2873 (= (arr!1781 (_values!2026 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!855)) mapDefault!2874)))))

(declare-fun b!58827 () Bool)

(declare-fun Unit!1555 () Unit!1553)

(assert (=> b!58827 (= e!38726 Unit!1555)))

(declare-fun b!58828 () Bool)

(assert (=> b!58828 (= e!38727 tp_is_empty!2397)))

(declare-fun b!58829 () Bool)

(declare-fun res!32731 () Bool)

(assert (=> b!58829 (=> (not res!32731) (not e!38716))))

(assert (=> b!58829 (= res!32731 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!58830 () Bool)

(declare-fun res!32726 () Bool)

(assert (=> b!58830 (=> (not res!32726) (not e!38714))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!58830 (= res!32726 (validMask!0 (mask!5927 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun b!58831 () Bool)

(declare-fun e!38713 () Bool)

(assert (=> b!58831 (= e!38722 e!38713)))

(declare-fun b!58832 () Bool)

(declare-fun e!38715 () Bool)

(assert (=> b!58832 (= e!38715 tp_is_empty!2397)))

(declare-fun e!38728 () Bool)

(assert (=> b!58833 (= e!38713 (and tp!7998 tp_is_empty!2397 (array_inv!1051 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (array_inv!1052 (_values!2026 (v!2381 (underlying!225 thiss!992)))) e!38728))))

(declare-fun mapNonEmpty!2874 () Bool)

(declare-fun mapRes!2874 () Bool)

(declare-fun tp!7997 () Bool)

(assert (=> mapNonEmpty!2874 (= mapRes!2874 (and tp!7997 e!38715))))

(declare-fun mapValue!2874 () ValueCell!855)

(declare-fun mapRest!2873 () (Array (_ BitVec 32) ValueCell!855))

(declare-fun mapKey!2874 () (_ BitVec 32))

(assert (=> mapNonEmpty!2874 (= (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (store mapRest!2873 mapKey!2874 mapValue!2874))))

(declare-fun b!58834 () Bool)

(declare-fun Unit!1556 () Unit!1553)

(assert (=> b!58834 (= e!38726 Unit!1556)))

(declare-fun lt!23658 () Unit!1553)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!28 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 64) (_ BitVec 32) Int) Unit!1553)

(assert (=> b!58834 (= lt!23658 (lemmaListMapContainsThenArrayContainsFrom!28 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3720 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!58834 (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!23661 () Unit!1553)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3720 (_ BitVec 32) (_ BitVec 32)) Unit!1553)

(assert (=> b!58834 (= lt!23661 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1454 0))(
  ( (Nil!1451) (Cons!1450 (h!2031 (_ BitVec 64)) (t!4800 List!1454)) )
))
(declare-fun arrayNoDuplicates!0 (array!3720 (_ BitVec 32) List!1454) Bool)

(assert (=> b!58834 (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) from!355 Nil!1451)))

(declare-fun lt!23664 () Unit!1553)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3720 (_ BitVec 32) (_ BitVec 64) List!1454) Unit!1553)

(assert (=> b!58834 (= lt!23664 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451)))))

(assert (=> b!58834 false))

(declare-fun b!58835 () Bool)

(assert (=> b!58835 (= e!38728 (and e!38725 mapRes!2874))))

(declare-fun condMapEmpty!2874 () Bool)

(declare-fun mapDefault!2873 () ValueCell!855)

(assert (=> b!58835 (= condMapEmpty!2874 (= (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!855)) mapDefault!2873)))))

(declare-fun b!58836 () Bool)

(declare-fun res!32728 () Bool)

(assert (=> b!58836 (=> (not res!32728) (not e!38716))))

(assert (=> b!58836 (= res!32728 (bvsge (bvadd #b00000000000000000000000000000001 (mask!5927 newMap!16)) (_size!358 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun mapIsEmpty!2874 () Bool)

(assert (=> mapIsEmpty!2874 mapRes!2874))

(assert (= (and start!8582 res!32729) b!58829))

(assert (= (and b!58829 res!32731) b!58821))

(assert (= (and b!58821 res!32727) b!58836))

(assert (= (and b!58836 res!32728) b!58824))

(assert (= (and b!58824 res!32725) b!58819))

(assert (= (and b!58819 c!7461) b!58834))

(assert (= (and b!58819 (not c!7461)) b!58827))

(assert (= (and b!58819 res!32730) b!58830))

(assert (= (and b!58830 res!32726) b!58822))

(assert (= (and b!58835 condMapEmpty!2874) mapIsEmpty!2874))

(assert (= (and b!58835 (not condMapEmpty!2874)) mapNonEmpty!2874))

(get-info :version)

(assert (= (and mapNonEmpty!2874 ((_ is ValueCellFull!855) mapValue!2874)) b!58832))

(assert (= (and b!58835 ((_ is ValueCellFull!855) mapDefault!2873)) b!58825))

(assert (= b!58833 b!58835))

(assert (= b!58831 b!58833))

(assert (= b!58823 b!58831))

(assert (= start!8582 b!58823))

(assert (= (and b!58826 condMapEmpty!2873) mapIsEmpty!2873))

(assert (= (and b!58826 (not condMapEmpty!2873)) mapNonEmpty!2873))

(assert (= (and mapNonEmpty!2873 ((_ is ValueCellFull!855) mapValue!2873)) b!58828))

(assert (= (and b!58826 ((_ is ValueCellFull!855) mapDefault!2874)) b!58820))

(assert (= b!58818 b!58826))

(assert (= start!8582 b!58818))

(declare-fun b_lambda!2601 () Bool)

(assert (=> (not b_lambda!2601) (not b!58819)))

(declare-fun t!4796 () Bool)

(declare-fun tb!1321 () Bool)

(assert (=> (and b!58833 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))) t!4796) tb!1321))

(declare-fun result!2375 () Bool)

(assert (=> tb!1321 (= result!2375 tp_is_empty!2397)))

(assert (=> b!58819 t!4796))

(declare-fun b_and!3565 () Bool)

(assert (= b_and!3561 (and (=> t!4796 result!2375) b_and!3565)))

(declare-fun tb!1323 () Bool)

(declare-fun t!4798 () Bool)

(assert (=> (and b!58818 (= (defaultEntry!2043 newMap!16) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))) t!4798) tb!1323))

(declare-fun result!2379 () Bool)

(assert (= result!2379 result!2375))

(assert (=> b!58819 t!4798))

(declare-fun b_and!3567 () Bool)

(assert (= b_and!3563 (and (=> t!4798 result!2379) b_and!3567)))

(declare-fun m!50585 () Bool)

(assert (=> mapNonEmpty!2873 m!50585))

(declare-fun m!50587 () Bool)

(assert (=> b!58833 m!50587))

(declare-fun m!50589 () Bool)

(assert (=> b!58833 m!50589))

(declare-fun m!50591 () Bool)

(assert (=> b!58824 m!50591))

(declare-fun m!50593 () Bool)

(assert (=> b!58824 m!50593))

(declare-fun m!50595 () Bool)

(assert (=> b!58824 m!50595))

(declare-fun m!50597 () Bool)

(assert (=> b!58834 m!50597))

(declare-fun m!50599 () Bool)

(assert (=> b!58834 m!50599))

(assert (=> b!58834 m!50591))

(declare-fun m!50601 () Bool)

(assert (=> b!58834 m!50601))

(assert (=> b!58834 m!50591))

(assert (=> b!58834 m!50591))

(declare-fun m!50603 () Bool)

(assert (=> b!58834 m!50603))

(assert (=> b!58834 m!50591))

(declare-fun m!50605 () Bool)

(assert (=> b!58834 m!50605))

(declare-fun m!50607 () Bool)

(assert (=> mapNonEmpty!2874 m!50607))

(declare-fun m!50609 () Bool)

(assert (=> b!58830 m!50609))

(declare-fun m!50611 () Bool)

(assert (=> b!58818 m!50611))

(declare-fun m!50613 () Bool)

(assert (=> b!58818 m!50613))

(declare-fun m!50615 () Bool)

(assert (=> b!58819 m!50615))

(declare-fun m!50617 () Bool)

(assert (=> b!58819 m!50617))

(declare-fun m!50619 () Bool)

(assert (=> b!58819 m!50619))

(assert (=> b!58819 m!50591))

(declare-fun m!50621 () Bool)

(assert (=> b!58819 m!50621))

(assert (=> b!58819 m!50591))

(assert (=> b!58819 m!50617))

(assert (=> b!58819 m!50591))

(assert (=> b!58819 m!50619))

(declare-fun m!50623 () Bool)

(assert (=> b!58819 m!50623))

(assert (=> b!58819 m!50615))

(declare-fun m!50625 () Bool)

(assert (=> start!8582 m!50625))

(declare-fun m!50627 () Bool)

(assert (=> b!58821 m!50627))

(check-sat (not b_lambda!2601) b_and!3567 (not mapNonEmpty!2873) (not b!58824) (not b_next!1961) (not b!58830) (not b!58819) (not b!58834) (not b!58821) tp_is_empty!2397 b_and!3565 (not mapNonEmpty!2874) (not b!58818) (not start!8582) (not b!58833) (not b_next!1963))
(check-sat b_and!3565 b_and!3567 (not b_next!1961) (not b_next!1963))
(get-model)

(declare-fun b_lambda!2605 () Bool)

(assert (= b_lambda!2601 (or (and b!58833 b_free!1961) (and b!58818 b_free!1963 (= (defaultEntry!2043 newMap!16) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))))) b_lambda!2605)))

(check-sat b_and!3567 (not mapNonEmpty!2873) (not b!58824) (not b_next!1961) (not b!58830) (not b_lambda!2605) (not b!58819) (not b!58834) (not b!58821) tp_is_empty!2397 b_and!3565 (not mapNonEmpty!2874) (not b!58818) (not start!8582) (not b!58833) (not b_next!1963))
(check-sat b_and!3565 b_and!3567 (not b_next!1961) (not b_next!1963))
(get-model)

(declare-fun d!11245 () Bool)

(declare-fun res!32759 () Bool)

(declare-fun e!38779 () Bool)

(assert (=> d!11245 (=> (not res!32759) (not e!38779))))

(declare-fun simpleValid!41 (LongMapFixedSize!618) Bool)

(assert (=> d!11245 (= res!32759 (simpleValid!41 newMap!16))))

(assert (=> d!11245 (= (valid!249 newMap!16) e!38779)))

(declare-fun b!58904 () Bool)

(declare-fun res!32760 () Bool)

(assert (=> b!58904 (=> (not res!32760) (not e!38779))))

(declare-fun arrayCountValidKeys!0 (array!3720 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!58904 (= res!32760 (= (arrayCountValidKeys!0 (_keys!3667 newMap!16) #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (_size!358 newMap!16)))))

(declare-fun b!58905 () Bool)

(declare-fun res!32761 () Bool)

(assert (=> b!58905 (=> (not res!32761) (not e!38779))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3720 (_ BitVec 32)) Bool)

(assert (=> b!58905 (= res!32761 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(declare-fun b!58906 () Bool)

(assert (=> b!58906 (= e!38779 (arrayNoDuplicates!0 (_keys!3667 newMap!16) #b00000000000000000000000000000000 Nil!1451))))

(assert (= (and d!11245 res!32759) b!58904))

(assert (= (and b!58904 res!32760) b!58905))

(assert (= (and b!58905 res!32761) b!58906))

(declare-fun m!50673 () Bool)

(assert (=> d!11245 m!50673))

(declare-fun m!50675 () Bool)

(assert (=> b!58904 m!50675))

(declare-fun m!50677 () Bool)

(assert (=> b!58905 m!50677))

(declare-fun m!50679 () Bool)

(assert (=> b!58906 m!50679))

(assert (=> b!58821 d!11245))

(declare-fun d!11247 () Bool)

(assert (=> d!11247 (not (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!23688 () Unit!1553)

(declare-fun choose!68 (array!3720 (_ BitVec 32) (_ BitVec 64) List!1454) Unit!1553)

(assert (=> d!11247 (= lt!23688 (choose!68 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451)))))

(assert (=> d!11247 (bvslt (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!11247 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451)) lt!23688)))

(declare-fun bs!2552 () Bool)

(assert (= bs!2552 d!11247))

(assert (=> bs!2552 m!50591))

(assert (=> bs!2552 m!50603))

(assert (=> bs!2552 m!50591))

(declare-fun m!50681 () Bool)

(assert (=> bs!2552 m!50681))

(assert (=> b!58834 d!11247))

(declare-fun d!11249 () Bool)

(assert (=> d!11249 (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) from!355 Nil!1451)))

(declare-fun lt!23691 () Unit!1553)

(declare-fun choose!39 (array!3720 (_ BitVec 32) (_ BitVec 32)) Unit!1553)

(assert (=> d!11249 (= lt!23691 (choose!39 (_keys!3667 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!11249 (bvslt (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!11249 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000000 from!355) lt!23691)))

(declare-fun bs!2553 () Bool)

(assert (= bs!2553 d!11249))

(assert (=> bs!2553 m!50599))

(declare-fun m!50683 () Bool)

(assert (=> bs!2553 m!50683))

(assert (=> b!58834 d!11249))

(declare-fun d!11251 () Bool)

(declare-fun res!32766 () Bool)

(declare-fun e!38784 () Bool)

(assert (=> d!11251 (=> res!32766 e!38784)))

(assert (=> d!11251 (= res!32766 (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11251 (= (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!38784)))

(declare-fun b!58911 () Bool)

(declare-fun e!38785 () Bool)

(assert (=> b!58911 (= e!38784 e!38785)))

(declare-fun res!32767 () Bool)

(assert (=> b!58911 (=> (not res!32767) (not e!38785))))

(assert (=> b!58911 (= res!32767 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!58912 () Bool)

(assert (=> b!58912 (= e!38785 (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!11251 (not res!32766)) b!58911))

(assert (= (and b!58911 res!32767) b!58912))

(declare-fun m!50685 () Bool)

(assert (=> d!11251 m!50685))

(assert (=> b!58912 m!50591))

(declare-fun m!50687 () Bool)

(assert (=> b!58912 m!50687))

(assert (=> b!58834 d!11251))

(declare-fun d!11253 () Bool)

(declare-fun e!38788 () Bool)

(assert (=> d!11253 e!38788))

(declare-fun c!7467 () Bool)

(assert (=> d!11253 (= c!7467 (and (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!23694 () Unit!1553)

(declare-fun choose!309 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 64) (_ BitVec 32) Int) Unit!1553)

(assert (=> d!11253 (= lt!23694 (choose!309 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))))))

(assert (=> d!11253 (validMask!0 (mask!5927 (v!2381 (underlying!225 thiss!992))))))

(assert (=> d!11253 (= (lemmaListMapContainsThenArrayContainsFrom!28 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))) lt!23694)))

(declare-fun b!58917 () Bool)

(assert (=> b!58917 (= e!38788 (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!58918 () Bool)

(assert (=> b!58918 (= e!38788 (ite (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!11253 c!7467) b!58917))

(assert (= (and d!11253 (not c!7467)) b!58918))

(assert (=> d!11253 m!50591))

(declare-fun m!50689 () Bool)

(assert (=> d!11253 m!50689))

(assert (=> d!11253 m!50609))

(assert (=> b!58917 m!50591))

(assert (=> b!58917 m!50603))

(assert (=> b!58834 d!11253))

(declare-fun b!58929 () Bool)

(declare-fun e!38799 () Bool)

(declare-fun call!4320 () Bool)

(assert (=> b!58929 (= e!38799 call!4320)))

(declare-fun d!11255 () Bool)

(declare-fun res!32774 () Bool)

(declare-fun e!38797 () Bool)

(assert (=> d!11255 (=> res!32774 e!38797)))

(assert (=> d!11255 (= res!32774 (bvsge from!355 (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> d!11255 (= (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) from!355 Nil!1451) e!38797)))

(declare-fun b!58930 () Bool)

(declare-fun e!38798 () Bool)

(declare-fun contains!693 (List!1454 (_ BitVec 64)) Bool)

(assert (=> b!58930 (= e!38798 (contains!693 Nil!1451 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!58931 () Bool)

(declare-fun e!38800 () Bool)

(assert (=> b!58931 (= e!38797 e!38800)))

(declare-fun res!32776 () Bool)

(assert (=> b!58931 (=> (not res!32776) (not e!38800))))

(assert (=> b!58931 (= res!32776 (not e!38798))))

(declare-fun res!32775 () Bool)

(assert (=> b!58931 (=> (not res!32775) (not e!38798))))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!58931 (= res!32775 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!58932 () Bool)

(assert (=> b!58932 (= e!38799 call!4320)))

(declare-fun bm!4317 () Bool)

(declare-fun c!7470 () Bool)

(assert (=> bm!4317 (= call!4320 (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)))))

(declare-fun b!58933 () Bool)

(assert (=> b!58933 (= e!38800 e!38799)))

(assert (=> b!58933 (= c!7470 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (= (and d!11255 (not res!32774)) b!58931))

(assert (= (and b!58931 res!32775) b!58930))

(assert (= (and b!58931 res!32776) b!58933))

(assert (= (and b!58933 c!7470) b!58929))

(assert (= (and b!58933 (not c!7470)) b!58932))

(assert (= (or b!58929 b!58932) bm!4317))

(assert (=> b!58930 m!50591))

(assert (=> b!58930 m!50591))

(declare-fun m!50691 () Bool)

(assert (=> b!58930 m!50691))

(assert (=> b!58931 m!50591))

(assert (=> b!58931 m!50591))

(declare-fun m!50693 () Bool)

(assert (=> b!58931 m!50693))

(assert (=> bm!4317 m!50591))

(declare-fun m!50695 () Bool)

(assert (=> bm!4317 m!50695))

(assert (=> b!58933 m!50591))

(assert (=> b!58933 m!50591))

(assert (=> b!58933 m!50693))

(assert (=> b!58834 d!11255))

(declare-fun d!11257 () Bool)

(assert (=> d!11257 (= (validMask!0 (mask!5927 (v!2381 (underlying!225 thiss!992)))) (and (or (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000001111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000011111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000001111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000011111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000001111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000011111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000001111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000011111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000001111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000011111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000001111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000011111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000111111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000001111111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000011111111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000111111111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000001111111111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000011111111111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000111111111111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00001111111111111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00011111111111111111111111111111) (= (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!58830 d!11257))

(declare-fun d!11259 () Bool)

(assert (=> d!11259 (= (array_inv!1051 (_keys!3667 newMap!16)) (bvsge (size!2010 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!58818 d!11259))

(declare-fun d!11261 () Bool)

(assert (=> d!11261 (= (array_inv!1052 (_values!2026 newMap!16)) (bvsge (size!2011 (_values!2026 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!58818 d!11261))

(declare-fun d!11263 () Bool)

(assert (=> d!11263 (= (map!1107 newMap!16) (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun bs!2554 () Bool)

(assert (= bs!2554 d!11263))

(declare-fun m!50697 () Bool)

(assert (=> bs!2554 m!50697))

(assert (=> b!58824 d!11263))

(declare-fun bm!4332 () Bool)

(declare-fun call!4335 () ListLongMap!1377)

(declare-fun call!4337 () ListLongMap!1377)

(assert (=> bm!4332 (= call!4335 call!4337)))

(declare-fun d!11265 () Bool)

(declare-fun e!38828 () Bool)

(assert (=> d!11265 e!38828))

(declare-fun res!32802 () Bool)

(assert (=> d!11265 (=> (not res!32802) (not e!38828))))

(assert (=> d!11265 (= res!32802 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun lt!23743 () ListLongMap!1377)

(declare-fun lt!23759 () ListLongMap!1377)

(assert (=> d!11265 (= lt!23743 lt!23759)))

(declare-fun lt!23748 () Unit!1553)

(declare-fun e!38836 () Unit!1553)

(assert (=> d!11265 (= lt!23748 e!38836)))

(declare-fun c!7484 () Bool)

(declare-fun e!38835 () Bool)

(assert (=> d!11265 (= c!7484 e!38835)))

(declare-fun res!32799 () Bool)

(assert (=> d!11265 (=> (not res!32799) (not e!38835))))

(assert (=> d!11265 (= res!32799 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun e!38839 () ListLongMap!1377)

(assert (=> d!11265 (= lt!23759 e!38839)))

(declare-fun c!7487 () Bool)

(assert (=> d!11265 (= c!7487 (and (not (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11265 (validMask!0 (mask!5927 (v!2381 (underlying!225 thiss!992))))))

(assert (=> d!11265 (= (getCurrentListMap!401 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))) lt!23743)))

(declare-fun b!58976 () Bool)

(declare-fun e!38829 () Bool)

(declare-fun call!4336 () Bool)

(assert (=> b!58976 (= e!38829 (not call!4336))))

(declare-fun b!58977 () Bool)

(declare-fun +!81 (ListLongMap!1377 tuple2!2048) ListLongMap!1377)

(assert (=> b!58977 (= e!38839 (+!81 call!4337 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!58978 () Bool)

(declare-fun e!38830 () Bool)

(assert (=> b!58978 (= e!38829 e!38830)))

(declare-fun res!32796 () Bool)

(assert (=> b!58978 (= res!32796 call!4336)))

(assert (=> b!58978 (=> (not res!32796) (not e!38830))))

(declare-fun b!58979 () Bool)

(declare-fun e!38827 () Bool)

(assert (=> b!58979 (= e!38827 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!4333 () Bool)

(declare-fun call!4341 () ListLongMap!1377)

(declare-fun call!4339 () ListLongMap!1377)

(assert (=> bm!4333 (= call!4341 call!4339)))

(declare-fun b!58980 () Bool)

(declare-fun e!38831 () ListLongMap!1377)

(assert (=> b!58980 (= e!38831 call!4341)))

(declare-fun bm!4334 () Bool)

(assert (=> bm!4334 (= call!4336 (contains!692 lt!23743 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!58981 () Bool)

(declare-fun Unit!1560 () Unit!1553)

(assert (=> b!58981 (= e!38836 Unit!1560)))

(declare-fun bm!4335 () Bool)

(declare-fun call!4338 () Bool)

(assert (=> bm!4335 (= call!4338 (contains!692 lt!23743 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!58982 () Bool)

(declare-fun e!38833 () Bool)

(assert (=> b!58982 (= e!38833 (not call!4338))))

(declare-fun b!58983 () Bool)

(declare-fun e!38832 () Bool)

(declare-fun apply!66 (ListLongMap!1377 (_ BitVec 64)) V!2843)

(assert (=> b!58983 (= e!38832 (= (apply!66 lt!23743 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun bm!4336 () Bool)

(declare-fun call!4340 () ListLongMap!1377)

(assert (=> bm!4336 (= call!4339 call!4340)))

(declare-fun b!58984 () Bool)

(declare-fun res!32797 () Bool)

(assert (=> b!58984 (=> (not res!32797) (not e!38828))))

(assert (=> b!58984 (= res!32797 e!38833)))

(declare-fun c!7483 () Bool)

(assert (=> b!58984 (= c!7483 (not (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!58985 () Bool)

(declare-fun e!38837 () Bool)

(declare-fun e!38834 () Bool)

(assert (=> b!58985 (= e!38837 e!38834)))

(declare-fun res!32795 () Bool)

(assert (=> b!58985 (=> (not res!32795) (not e!38834))))

(assert (=> b!58985 (= res!32795 (contains!692 lt!23743 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!58985 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!58986 () Bool)

(assert (=> b!58986 (= e!38831 call!4335)))

(declare-fun b!58987 () Bool)

(assert (=> b!58987 (= e!38835 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!4337 () Bool)

(declare-fun getCurrentListMapNoExtraKeys!44 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 32) Int) ListLongMap!1377)

(assert (=> bm!4337 (= call!4340 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun b!58988 () Bool)

(declare-fun res!32798 () Bool)

(assert (=> b!58988 (=> (not res!32798) (not e!38828))))

(assert (=> b!58988 (= res!32798 e!38837)))

(declare-fun res!32800 () Bool)

(assert (=> b!58988 (=> res!32800 e!38837)))

(assert (=> b!58988 (= res!32800 (not e!38827))))

(declare-fun res!32801 () Bool)

(assert (=> b!58988 (=> (not res!32801) (not e!38827))))

(assert (=> b!58988 (= res!32801 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!58989 () Bool)

(assert (=> b!58989 (= e!38830 (= (apply!66 lt!23743 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun b!58990 () Bool)

(assert (=> b!58990 (= e!38828 e!38829)))

(declare-fun c!7486 () Bool)

(assert (=> b!58990 (= c!7486 (not (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!58991 () Bool)

(declare-fun c!7485 () Bool)

(assert (=> b!58991 (= c!7485 (and (not (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!38838 () ListLongMap!1377)

(assert (=> b!58991 (= e!38838 e!38831)))

(declare-fun b!58992 () Bool)

(assert (=> b!58992 (= e!38833 e!38832)))

(declare-fun res!32803 () Bool)

(assert (=> b!58992 (= res!32803 call!4338)))

(assert (=> b!58992 (=> (not res!32803) (not e!38832))))

(declare-fun bm!4338 () Bool)

(declare-fun c!7488 () Bool)

(assert (=> bm!4338 (= call!4337 (+!81 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341)) (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!58993 () Bool)

(declare-fun lt!23752 () Unit!1553)

(assert (=> b!58993 (= e!38836 lt!23752)))

(declare-fun lt!23757 () ListLongMap!1377)

(assert (=> b!58993 (= lt!23757 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun lt!23756 () (_ BitVec 64))

(assert (=> b!58993 (= lt!23756 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23739 () (_ BitVec 64))

(assert (=> b!58993 (= lt!23739 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!23753 () Unit!1553)

(declare-fun addStillContains!42 (ListLongMap!1377 (_ BitVec 64) V!2843 (_ BitVec 64)) Unit!1553)

(assert (=> b!58993 (= lt!23753 (addStillContains!42 lt!23757 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23739))))

(assert (=> b!58993 (contains!692 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23739)))

(declare-fun lt!23740 () Unit!1553)

(assert (=> b!58993 (= lt!23740 lt!23753)))

(declare-fun lt!23754 () ListLongMap!1377)

(assert (=> b!58993 (= lt!23754 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun lt!23741 () (_ BitVec 64))

(assert (=> b!58993 (= lt!23741 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23745 () (_ BitVec 64))

(assert (=> b!58993 (= lt!23745 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!23747 () Unit!1553)

(declare-fun addApplyDifferent!42 (ListLongMap!1377 (_ BitVec 64) V!2843 (_ BitVec 64)) Unit!1553)

(assert (=> b!58993 (= lt!23747 (addApplyDifferent!42 lt!23754 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23745))))

(assert (=> b!58993 (= (apply!66 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23745) (apply!66 lt!23754 lt!23745))))

(declare-fun lt!23760 () Unit!1553)

(assert (=> b!58993 (= lt!23760 lt!23747)))

(declare-fun lt!23744 () ListLongMap!1377)

(assert (=> b!58993 (= lt!23744 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun lt!23755 () (_ BitVec 64))

(assert (=> b!58993 (= lt!23755 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23750 () (_ BitVec 64))

(assert (=> b!58993 (= lt!23750 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!23758 () Unit!1553)

(assert (=> b!58993 (= lt!23758 (addApplyDifferent!42 lt!23744 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23750))))

(assert (=> b!58993 (= (apply!66 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23750) (apply!66 lt!23744 lt!23750))))

(declare-fun lt!23742 () Unit!1553)

(assert (=> b!58993 (= lt!23742 lt!23758)))

(declare-fun lt!23746 () ListLongMap!1377)

(assert (=> b!58993 (= lt!23746 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun lt!23751 () (_ BitVec 64))

(assert (=> b!58993 (= lt!23751 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23749 () (_ BitVec 64))

(assert (=> b!58993 (= lt!23749 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!58993 (= lt!23752 (addApplyDifferent!42 lt!23746 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23749))))

(assert (=> b!58993 (= (apply!66 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23749) (apply!66 lt!23746 lt!23749))))

(declare-fun b!58994 () Bool)

(assert (=> b!58994 (= e!38838 call!4335)))

(declare-fun b!58995 () Bool)

(assert (=> b!58995 (= e!38839 e!38838)))

(assert (=> b!58995 (= c!7488 (and (not (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!58996 () Bool)

(assert (=> b!58996 (= e!38834 (= (apply!66 lt!23743 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!58996 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2011 (_values!2026 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> b!58996 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (= (and d!11265 c!7487) b!58977))

(assert (= (and d!11265 (not c!7487)) b!58995))

(assert (= (and b!58995 c!7488) b!58994))

(assert (= (and b!58995 (not c!7488)) b!58991))

(assert (= (and b!58991 c!7485) b!58986))

(assert (= (and b!58991 (not c!7485)) b!58980))

(assert (= (or b!58986 b!58980) bm!4333))

(assert (= (or b!58994 bm!4333) bm!4336))

(assert (= (or b!58994 b!58986) bm!4332))

(assert (= (or b!58977 bm!4336) bm!4337))

(assert (= (or b!58977 bm!4332) bm!4338))

(assert (= (and d!11265 res!32799) b!58987))

(assert (= (and d!11265 c!7484) b!58993))

(assert (= (and d!11265 (not c!7484)) b!58981))

(assert (= (and d!11265 res!32802) b!58988))

(assert (= (and b!58988 res!32801) b!58979))

(assert (= (and b!58988 (not res!32800)) b!58985))

(assert (= (and b!58985 res!32795) b!58996))

(assert (= (and b!58988 res!32798) b!58984))

(assert (= (and b!58984 c!7483) b!58992))

(assert (= (and b!58984 (not c!7483)) b!58982))

(assert (= (and b!58992 res!32803) b!58983))

(assert (= (or b!58992 b!58982) bm!4335))

(assert (= (and b!58984 res!32797) b!58990))

(assert (= (and b!58990 c!7486) b!58978))

(assert (= (and b!58990 (not c!7486)) b!58976))

(assert (= (and b!58978 res!32796) b!58989))

(assert (= (or b!58978 b!58976) bm!4334))

(declare-fun b_lambda!2607 () Bool)

(assert (=> (not b_lambda!2607) (not b!58996)))

(assert (=> b!58996 t!4796))

(declare-fun b_and!3577 () Bool)

(assert (= b_and!3565 (and (=> t!4796 result!2375) b_and!3577)))

(assert (=> b!58996 t!4798))

(declare-fun b_and!3579 () Bool)

(assert (= b_and!3567 (and (=> t!4798 result!2379) b_and!3579)))

(declare-fun m!50699 () Bool)

(assert (=> b!58989 m!50699))

(assert (=> b!58996 m!50685))

(assert (=> b!58996 m!50685))

(declare-fun m!50701 () Bool)

(assert (=> b!58996 m!50701))

(declare-fun m!50703 () Bool)

(assert (=> b!58996 m!50703))

(assert (=> b!58996 m!50617))

(assert (=> b!58996 m!50703))

(assert (=> b!58996 m!50617))

(declare-fun m!50705 () Bool)

(assert (=> b!58996 m!50705))

(assert (=> b!58979 m!50685))

(assert (=> b!58979 m!50685))

(declare-fun m!50707 () Bool)

(assert (=> b!58979 m!50707))

(declare-fun m!50709 () Bool)

(assert (=> b!58983 m!50709))

(assert (=> b!58993 m!50685))

(declare-fun m!50711 () Bool)

(assert (=> b!58993 m!50711))

(declare-fun m!50713 () Bool)

(assert (=> b!58993 m!50713))

(declare-fun m!50715 () Bool)

(assert (=> b!58993 m!50715))

(declare-fun m!50717 () Bool)

(assert (=> b!58993 m!50717))

(declare-fun m!50719 () Bool)

(assert (=> b!58993 m!50719))

(declare-fun m!50721 () Bool)

(assert (=> b!58993 m!50721))

(assert (=> b!58993 m!50717))

(declare-fun m!50723 () Bool)

(assert (=> b!58993 m!50723))

(declare-fun m!50725 () Bool)

(assert (=> b!58993 m!50725))

(declare-fun m!50727 () Bool)

(assert (=> b!58993 m!50727))

(declare-fun m!50729 () Bool)

(assert (=> b!58993 m!50729))

(declare-fun m!50731 () Bool)

(assert (=> b!58993 m!50731))

(declare-fun m!50733 () Bool)

(assert (=> b!58993 m!50733))

(declare-fun m!50735 () Bool)

(assert (=> b!58993 m!50735))

(declare-fun m!50737 () Bool)

(assert (=> b!58993 m!50737))

(assert (=> b!58993 m!50737))

(declare-fun m!50739 () Bool)

(assert (=> b!58993 m!50739))

(assert (=> b!58993 m!50711))

(assert (=> b!58993 m!50731))

(declare-fun m!50741 () Bool)

(assert (=> b!58993 m!50741))

(declare-fun m!50743 () Bool)

(assert (=> bm!4338 m!50743))

(assert (=> b!58985 m!50685))

(assert (=> b!58985 m!50685))

(declare-fun m!50745 () Bool)

(assert (=> b!58985 m!50745))

(assert (=> d!11265 m!50609))

(declare-fun m!50747 () Bool)

(assert (=> b!58977 m!50747))

(declare-fun m!50749 () Bool)

(assert (=> bm!4335 m!50749))

(declare-fun m!50751 () Bool)

(assert (=> bm!4334 m!50751))

(assert (=> b!58987 m!50685))

(assert (=> b!58987 m!50685))

(assert (=> b!58987 m!50707))

(assert (=> bm!4337 m!50715))

(assert (=> b!58824 d!11265))

(declare-fun d!11267 () Bool)

(declare-fun e!38844 () Bool)

(assert (=> d!11267 e!38844))

(declare-fun res!32806 () Bool)

(assert (=> d!11267 (=> res!32806 e!38844)))

(declare-fun lt!23769 () Bool)

(assert (=> d!11267 (= res!32806 (not lt!23769))))

(declare-fun lt!23772 () Bool)

(assert (=> d!11267 (= lt!23769 lt!23772)))

(declare-fun lt!23771 () Unit!1553)

(declare-fun e!38845 () Unit!1553)

(assert (=> d!11267 (= lt!23771 e!38845)))

(declare-fun c!7491 () Bool)

(assert (=> d!11267 (= c!7491 lt!23772)))

(declare-fun containsKey!127 (List!1453 (_ BitVec 64)) Bool)

(assert (=> d!11267 (= lt!23772 (containsKey!127 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11267 (= (contains!692 lt!23660 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) lt!23769)))

(declare-fun b!59003 () Bool)

(declare-fun lt!23770 () Unit!1553)

(assert (=> b!59003 (= e!38845 lt!23770)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!76 (List!1453 (_ BitVec 64)) Unit!1553)

(assert (=> b!59003 (= lt!23770 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-datatypes ((Option!129 0))(
  ( (Some!128 (v!2385 V!2843)) (None!127) )
))
(declare-fun isDefined!77 (Option!129) Bool)

(declare-fun getValueByKey!123 (List!1453 (_ BitVec 64)) Option!129)

(assert (=> b!59003 (isDefined!77 (getValueByKey!123 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59004 () Bool)

(declare-fun Unit!1561 () Unit!1553)

(assert (=> b!59004 (= e!38845 Unit!1561)))

(declare-fun b!59005 () Bool)

(assert (=> b!59005 (= e!38844 (isDefined!77 (getValueByKey!123 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(assert (= (and d!11267 c!7491) b!59003))

(assert (= (and d!11267 (not c!7491)) b!59004))

(assert (= (and d!11267 (not res!32806)) b!59005))

(assert (=> d!11267 m!50591))

(declare-fun m!50753 () Bool)

(assert (=> d!11267 m!50753))

(assert (=> b!59003 m!50591))

(declare-fun m!50755 () Bool)

(assert (=> b!59003 m!50755))

(assert (=> b!59003 m!50591))

(declare-fun m!50757 () Bool)

(assert (=> b!59003 m!50757))

(assert (=> b!59003 m!50757))

(declare-fun m!50759 () Bool)

(assert (=> b!59003 m!50759))

(assert (=> b!59005 m!50591))

(assert (=> b!59005 m!50757))

(assert (=> b!59005 m!50757))

(assert (=> b!59005 m!50759))

(assert (=> b!58819 d!11267))

(declare-fun b!59086 () Bool)

(declare-fun e!38888 () ListLongMap!1377)

(assert (=> b!59086 (= e!38888 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun bm!4387 () Bool)

(declare-fun call!4411 () Bool)

(declare-fun call!4391 () Bool)

(assert (=> bm!4387 (= call!4411 call!4391)))

(declare-fun c!7526 () Bool)

(declare-datatypes ((SeekEntryResult!237 0))(
  ( (MissingZero!237 (index!3071 (_ BitVec 32))) (Found!237 (index!3072 (_ BitVec 32))) (Intermediate!237 (undefined!1049 Bool) (index!3073 (_ BitVec 32)) (x!10013 (_ BitVec 32))) (Undefined!237) (MissingVacant!237 (index!3074 (_ BitVec 32))) )
))
(declare-fun lt!23839 () SeekEntryResult!237)

(declare-fun bm!4388 () Bool)

(declare-fun call!4399 () tuple2!2046)

(declare-fun updateHelperNewKey!15 (LongMapFixedSize!618 (_ BitVec 64) V!2843 (_ BitVec 32)) tuple2!2046)

(assert (=> bm!4388 (= call!4399 (updateHelperNewKey!15 newMap!16 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839))))))

(declare-fun b!59087 () Bool)

(declare-fun res!32842 () Bool)

(declare-fun e!38900 () Bool)

(assert (=> b!59087 (=> (not res!32842) (not e!38900))))

(declare-fun lt!23846 () SeekEntryResult!237)

(assert (=> b!59087 (= res!32842 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3071 lt!23846)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4389 () Bool)

(declare-fun call!4412 () ListLongMap!1377)

(declare-fun call!4409 () ListLongMap!1377)

(assert (=> bm!4389 (= call!4412 call!4409)))

(declare-fun b!59088 () Bool)

(declare-fun res!32835 () Bool)

(declare-fun e!38892 () Bool)

(assert (=> b!59088 (=> (not res!32835) (not e!38892))))

(assert (=> b!59088 (= res!32835 call!4411)))

(declare-fun e!38903 () Bool)

(assert (=> b!59088 (= e!38903 e!38892)))

(declare-fun bm!4390 () Bool)

(declare-fun call!4405 () SeekEntryResult!237)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3720 (_ BitVec 32)) SeekEntryResult!237)

(assert (=> bm!4390 (= call!4405 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(declare-fun b!59089 () Bool)

(declare-fun e!38889 () Bool)

(assert (=> b!59089 (= e!38889 ((_ is Undefined!237) lt!23846))))

(declare-fun call!4394 () Bool)

(declare-fun bm!4391 () Bool)

(declare-fun c!7518 () Bool)

(declare-fun call!4401 () ListLongMap!1377)

(assert (=> bm!4391 (= call!4394 (contains!692 call!4401 (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))

(declare-fun b!59090 () Bool)

(declare-fun e!38896 () Unit!1553)

(declare-fun lt!23844 () Unit!1553)

(assert (=> b!59090 (= e!38896 lt!23844)))

(declare-fun call!4400 () Unit!1553)

(assert (=> b!59090 (= lt!23844 call!4400)))

(declare-fun call!4407 () SeekEntryResult!237)

(assert (=> b!59090 (= lt!23846 call!4407)))

(declare-fun c!7524 () Bool)

(assert (=> b!59090 (= c!7524 ((_ is MissingZero!237) lt!23846))))

(declare-fun e!38899 () Bool)

(assert (=> b!59090 e!38899))

(declare-fun bm!4392 () Bool)

(declare-fun call!4406 () ListLongMap!1377)

(declare-fun call!4408 () ListLongMap!1377)

(assert (=> bm!4392 (= call!4406 call!4408)))

(declare-fun b!59091 () Bool)

(declare-fun e!38891 () tuple2!2046)

(declare-fun lt!23827 () tuple2!2046)

(assert (=> b!59091 (= e!38891 (tuple2!2047 (_1!1033 lt!23827) (_2!1033 lt!23827)))))

(assert (=> b!59091 (= lt!23827 call!4399)))

(declare-fun b!59092 () Bool)

(declare-fun c!7530 () Bool)

(assert (=> b!59092 (= c!7530 ((_ is MissingVacant!237) lt!23846))))

(assert (=> b!59092 (= e!38899 e!38889)))

(declare-fun bm!4393 () Bool)

(assert (=> bm!4393 (= call!4407 call!4405)))

(declare-fun b!59093 () Bool)

(declare-fun e!38908 () Bool)

(assert (=> b!59093 (= e!38889 e!38908)))

(declare-fun res!32837 () Bool)

(declare-fun call!4398 () Bool)

(assert (=> b!59093 (= res!32837 call!4398)))

(assert (=> b!59093 (=> (not res!32837) (not e!38908))))

(declare-fun bm!4394 () Bool)

(declare-fun call!4413 () Bool)

(declare-fun call!4410 () Bool)

(assert (=> bm!4394 (= call!4413 call!4410)))

(declare-fun b!59094 () Bool)

(declare-fun e!38894 () Unit!1553)

(declare-fun Unit!1562 () Unit!1553)

(assert (=> b!59094 (= e!38894 Unit!1562)))

(declare-fun lt!23828 () Unit!1553)

(assert (=> b!59094 (= lt!23828 call!4400)))

(declare-fun lt!23842 () SeekEntryResult!237)

(declare-fun call!4392 () SeekEntryResult!237)

(assert (=> b!59094 (= lt!23842 call!4392)))

(declare-fun c!7519 () Bool)

(assert (=> b!59094 (= c!7519 ((_ is MissingZero!237) lt!23842))))

(assert (=> b!59094 e!38903))

(declare-fun lt!23845 () Unit!1553)

(assert (=> b!59094 (= lt!23845 lt!23828)))

(assert (=> b!59094 false))

(declare-fun bm!4395 () Bool)

(declare-fun call!4403 () ListLongMap!1377)

(assert (=> bm!4395 (= call!4403 (map!1107 newMap!16))))

(declare-fun b!59095 () Bool)

(declare-fun Unit!1563 () Unit!1553)

(assert (=> b!59095 (= e!38896 Unit!1563)))

(declare-fun lt!23849 () Unit!1553)

(declare-fun call!4393 () Unit!1553)

(assert (=> b!59095 (= lt!23849 call!4393)))

(declare-fun lt!23831 () SeekEntryResult!237)

(assert (=> b!59095 (= lt!23831 call!4407)))

(declare-fun res!32846 () Bool)

(assert (=> b!59095 (= res!32846 ((_ is Found!237) lt!23831))))

(declare-fun e!38902 () Bool)

(assert (=> b!59095 (=> (not res!32846) (not e!38902))))

(assert (=> b!59095 e!38902))

(declare-fun lt!23853 () Unit!1553)

(assert (=> b!59095 (= lt!23853 lt!23849)))

(assert (=> b!59095 false))

(declare-fun b!59096 () Bool)

(declare-fun e!38901 () Bool)

(assert (=> b!59096 (= e!38901 (not call!4413))))

(declare-fun b!59097 () Bool)

(declare-fun lt!23835 () Unit!1553)

(declare-fun lt!23830 () Unit!1553)

(assert (=> b!59097 (= lt!23835 lt!23830)))

(assert (=> b!59097 (= call!4412 call!4406)))

(declare-fun lt!23852 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!15 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 V!2843 Int) Unit!1553)

(assert (=> b!59097 (= lt!23830 (lemmaChangeZeroKeyThenAddPairToListMap!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) lt!23852 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) (defaultEntry!2043 newMap!16)))))

(assert (=> b!59097 (= lt!23852 (bvor (extraKeys!1930 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!38890 () tuple2!2046)

(assert (=> b!59097 (= e!38890 (tuple2!2047 true (LongMapFixedSize!619 (defaultEntry!2043 newMap!16) (mask!5927 newMap!16) (bvor (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) (_size!358 newMap!16) (_keys!3667 newMap!16) (_values!2026 newMap!16) (_vacant!358 newMap!16))))))

(declare-fun bm!4396 () Bool)

(declare-fun call!4390 () Bool)

(assert (=> bm!4396 (= call!4390 call!4410)))

(declare-fun bm!4397 () Bool)

(declare-fun call!4397 () Bool)

(declare-fun call!4396 () Bool)

(assert (=> bm!4397 (= call!4397 call!4396)))

(declare-fun b!59098 () Bool)

(assert (=> b!59098 (= e!38892 (not call!4413))))

(declare-fun bm!4398 () Bool)

(assert (=> bm!4398 (= call!4398 call!4397)))

(declare-fun bm!4399 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!15 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 64) Int) Unit!1553)

(assert (=> bm!4399 (= call!4393 (lemmaInListMapThenSeekEntryOrOpenFindsIt!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (defaultEntry!2043 newMap!16)))))

(declare-fun b!59099 () Bool)

(declare-fun lt!23850 () Unit!1553)

(assert (=> b!59099 (= e!38894 lt!23850)))

(assert (=> b!59099 (= lt!23850 call!4393)))

(declare-fun lt!23837 () SeekEntryResult!237)

(assert (=> b!59099 (= lt!23837 call!4392)))

(declare-fun res!32836 () Bool)

(assert (=> b!59099 (= res!32836 ((_ is Found!237) lt!23837))))

(declare-fun e!38895 () Bool)

(assert (=> b!59099 (=> (not res!32836) (not e!38895))))

(assert (=> b!59099 e!38895))

(declare-fun bm!4400 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!15 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 64) Int) Unit!1553)

(assert (=> bm!4400 (= call!4400 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (defaultEntry!2043 newMap!16)))))

(declare-fun b!59100 () Bool)

(declare-fun e!38907 () Bool)

(declare-fun e!38893 () Bool)

(assert (=> b!59100 (= e!38907 e!38893)))

(declare-fun call!4404 () ListLongMap!1377)

(declare-fun res!32838 () Bool)

(assert (=> b!59100 (= res!32838 (contains!692 call!4404 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> b!59100 (=> (not res!32838) (not e!38893))))

(declare-fun lt!23841 () (_ BitVec 32))

(declare-fun c!7529 () Bool)

(declare-fun lt!23834 () array!3722)

(declare-fun bm!4401 () Bool)

(declare-fun c!7521 () Bool)

(assert (=> bm!4401 (= call!4408 (getCurrentListMap!401 (_keys!3667 newMap!16) (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834) (mask!5927 newMap!16) (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun b!59101 () Bool)

(assert (=> b!59101 (= e!38893 (= call!4404 (+!81 call!4403 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!59102 () Bool)

(declare-fun c!7522 () Bool)

(assert (=> b!59102 (= c!7522 ((_ is MissingVacant!237) lt!23842))))

(declare-fun e!38905 () Bool)

(assert (=> b!59102 (= e!38903 e!38905)))

(declare-fun b!59103 () Bool)

(declare-fun e!38897 () Bool)

(assert (=> b!59103 (= e!38897 e!38907)))

(declare-fun c!7527 () Bool)

(declare-fun lt!23848 () tuple2!2046)

(assert (=> b!59103 (= c!7527 (_1!1033 lt!23848))))

(declare-fun b!59104 () Bool)

(assert (=> b!59104 (= e!38905 e!38901)))

(declare-fun res!32843 () Bool)

(assert (=> b!59104 (= res!32843 call!4411)))

(assert (=> b!59104 (=> (not res!32843) (not e!38901))))

(declare-fun b!59105 () Bool)

(declare-fun e!38904 () tuple2!2046)

(assert (=> b!59105 (= e!38891 e!38904)))

(declare-fun c!7520 () Bool)

(assert (=> b!59105 (= c!7520 ((_ is MissingZero!237) lt!23839))))

(declare-fun b!59106 () Bool)

(assert (=> b!59106 (= c!7526 ((_ is MissingVacant!237) lt!23839))))

(declare-fun e!38898 () tuple2!2046)

(assert (=> b!59106 (= e!38898 e!38891)))

(declare-fun bm!4402 () Bool)

(assert (=> bm!4402 (= call!4409 (+!81 e!38888 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!7523 () Bool)

(assert (=> bm!4402 (= c!7523 c!7529)))

(declare-fun bm!4403 () Bool)

(assert (=> bm!4403 (= call!4392 call!4405)))

(declare-fun bm!4404 () Bool)

(assert (=> bm!4404 (= call!4410 (arrayContainsKey!0 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!59107 () Bool)

(declare-fun res!32847 () Bool)

(assert (=> b!59107 (=> (not res!32847) (not e!38892))))

(assert (=> b!59107 (= res!32847 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3071 lt!23842)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59108 () Bool)

(declare-fun res!32844 () Bool)

(assert (=> b!59108 (= res!32844 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3074 lt!23842)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59108 (=> (not res!32844) (not e!38901))))

(declare-fun b!59109 () Bool)

(assert (=> b!59109 (= e!38900 (not call!4390))))

(declare-fun b!59110 () Bool)

(declare-fun lt!23836 () Unit!1553)

(declare-fun lt!23838 () Unit!1553)

(assert (=> b!59110 (= lt!23836 lt!23838)))

(assert (=> b!59110 call!4394))

(declare-fun lemmaValidKeyInArrayIsInListMap!73 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 32) Int) Unit!1553)

(assert (=> b!59110 (= lt!23838 (lemmaValidKeyInArrayIsInListMap!73 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (index!3072 lt!23839) (defaultEntry!2043 newMap!16)))))

(assert (=> b!59110 (= lt!23834 (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))))

(declare-fun lt!23843 () Unit!1553)

(declare-fun lt!23832 () Unit!1553)

(assert (=> b!59110 (= lt!23843 lt!23832)))

(declare-fun call!4402 () ListLongMap!1377)

(assert (=> b!59110 (= call!4409 call!4402)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!15 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 32) (_ BitVec 64) V!2843 Int) Unit!1553)

(assert (=> b!59110 (= lt!23832 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (index!3072 lt!23839) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2043 newMap!16)))))

(declare-fun lt!23851 () Unit!1553)

(assert (=> b!59110 (= lt!23851 e!38894)))

(declare-fun c!7528 () Bool)

(assert (=> b!59110 (= c!7528 (contains!692 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> b!59110 (= e!38904 (tuple2!2047 true (LongMapFixedSize!619 (defaultEntry!2043 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (_size!358 newMap!16) (_keys!3667 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (_vacant!358 newMap!16))))))

(declare-fun bm!4405 () Bool)

(declare-fun c!7525 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!4405 (= call!4396 (inRange!0 (ite c!7518 (ite c!7525 (index!3072 lt!23831) (ite c!7524 (index!3071 lt!23846) (index!3074 lt!23846))) (ite c!7528 (index!3072 lt!23837) (ite c!7519 (index!3071 lt!23842) (index!3074 lt!23842)))) (mask!5927 newMap!16)))))

(declare-fun bm!4406 () Bool)

(assert (=> bm!4406 (= call!4401 call!4408)))

(declare-fun b!59111 () Bool)

(assert (=> b!59111 (= e!38905 ((_ is Undefined!237) lt!23842))))

(declare-fun b!59112 () Bool)

(declare-fun res!32845 () Bool)

(assert (=> b!59112 (= res!32845 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3074 lt!23846)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59112 (=> (not res!32845) (not e!38908))))

(declare-fun bm!4407 () Bool)

(assert (=> bm!4407 (= call!4391 call!4396)))

(declare-fun b!59113 () Bool)

(declare-fun lt!23847 () Unit!1553)

(declare-fun lt!23840 () Unit!1553)

(assert (=> b!59113 (= lt!23847 lt!23840)))

(assert (=> b!59113 (= call!4412 call!4406)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!15 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 V!2843 Int) Unit!1553)

(assert (=> b!59113 (= lt!23840 (lemmaChangeLongMinValueKeyThenAddPairToListMap!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2043 newMap!16)))))

(assert (=> b!59113 (= lt!23841 (bvor (extraKeys!1930 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!59113 (= e!38890 (tuple2!2047 true (LongMapFixedSize!619 (defaultEntry!2043 newMap!16) (mask!5927 newMap!16) (bvor (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!358 newMap!16) (_keys!3667 newMap!16) (_values!2026 newMap!16) (_vacant!358 newMap!16))))))

(declare-fun bm!4408 () Bool)

(assert (=> bm!4408 (= call!4404 (map!1107 (_2!1033 lt!23848)))))

(declare-fun d!11269 () Bool)

(assert (=> d!11269 e!38897))

(declare-fun res!32841 () Bool)

(assert (=> d!11269 (=> (not res!32841) (not e!38897))))

(assert (=> d!11269 (= res!32841 (valid!249 (_2!1033 lt!23848)))))

(declare-fun e!38906 () tuple2!2046)

(assert (=> d!11269 (= lt!23848 e!38906)))

(assert (=> d!11269 (= c!7529 (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvneg (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(assert (=> d!11269 (valid!249 newMap!16)))

(assert (=> d!11269 (= (update!84 newMap!16 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!23848)))

(declare-fun b!59114 () Bool)

(declare-fun res!32848 () Bool)

(assert (=> b!59114 (= res!32848 call!4397)))

(assert (=> b!59114 (=> (not res!32848) (not e!38902))))

(declare-fun b!59115 () Bool)

(declare-fun res!32840 () Bool)

(assert (=> b!59115 (= res!32840 call!4391)))

(assert (=> b!59115 (=> (not res!32840) (not e!38895))))

(declare-fun b!59116 () Bool)

(declare-fun lt!23829 () Unit!1553)

(assert (=> b!59116 (= lt!23829 e!38896)))

(assert (=> b!59116 (= c!7525 call!4394)))

(assert (=> b!59116 (= e!38898 (tuple2!2047 false newMap!16))))

(declare-fun b!59117 () Bool)

(assert (=> b!59117 (= e!38908 (not call!4390))))

(declare-fun b!59118 () Bool)

(declare-fun lt!23833 () tuple2!2046)

(assert (=> b!59118 (= lt!23833 call!4399)))

(assert (=> b!59118 (= e!38904 (tuple2!2047 (_1!1033 lt!23833) (_2!1033 lt!23833)))))

(declare-fun b!59119 () Bool)

(declare-fun call!4395 () ListLongMap!1377)

(assert (=> b!59119 (= e!38888 call!4395)))

(declare-fun b!59120 () Bool)

(assert (=> b!59120 (= e!38906 e!38890)))

(assert (=> b!59120 (= c!7521 (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59121 () Bool)

(assert (=> b!59121 (= e!38906 e!38898)))

(assert (=> b!59121 (= lt!23839 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(assert (=> b!59121 (= c!7518 ((_ is Undefined!237) lt!23839))))

(declare-fun bm!4409 () Bool)

(assert (=> bm!4409 (= call!4395 call!4402)))

(declare-fun b!59122 () Bool)

(assert (=> b!59122 (= e!38907 (= call!4404 call!4403))))

(declare-fun b!59123 () Bool)

(declare-fun res!32839 () Bool)

(assert (=> b!59123 (=> (not res!32839) (not e!38900))))

(assert (=> b!59123 (= res!32839 call!4398)))

(assert (=> b!59123 (= e!38899 e!38900)))

(declare-fun bm!4410 () Bool)

(assert (=> bm!4410 (= call!4402 (getCurrentListMap!401 (_keys!3667 newMap!16) (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun b!59124 () Bool)

(assert (=> b!59124 (= e!38895 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23837)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59125 () Bool)

(assert (=> b!59125 (= e!38902 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23831)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (= (and d!11269 c!7529) b!59120))

(assert (= (and d!11269 (not c!7529)) b!59121))

(assert (= (and b!59120 c!7521) b!59097))

(assert (= (and b!59120 (not c!7521)) b!59113))

(assert (= (or b!59097 b!59113) bm!4392))

(assert (= (or b!59097 b!59113) bm!4409))

(assert (= (or b!59097 b!59113) bm!4389))

(assert (= (and b!59121 c!7518) b!59116))

(assert (= (and b!59121 (not c!7518)) b!59106))

(assert (= (and b!59116 c!7525) b!59095))

(assert (= (and b!59116 (not c!7525)) b!59090))

(assert (= (and b!59095 res!32846) b!59114))

(assert (= (and b!59114 res!32848) b!59125))

(assert (= (and b!59090 c!7524) b!59123))

(assert (= (and b!59090 (not c!7524)) b!59092))

(assert (= (and b!59123 res!32839) b!59087))

(assert (= (and b!59087 res!32842) b!59109))

(assert (= (and b!59092 c!7530) b!59093))

(assert (= (and b!59092 (not c!7530)) b!59089))

(assert (= (and b!59093 res!32837) b!59112))

(assert (= (and b!59112 res!32845) b!59117))

(assert (= (or b!59123 b!59093) bm!4398))

(assert (= (or b!59109 b!59117) bm!4396))

(assert (= (or b!59114 bm!4398) bm!4397))

(assert (= (or b!59095 b!59090) bm!4393))

(assert (= (and b!59106 c!7526) b!59091))

(assert (= (and b!59106 (not c!7526)) b!59105))

(assert (= (and b!59105 c!7520) b!59118))

(assert (= (and b!59105 (not c!7520)) b!59110))

(assert (= (and b!59110 c!7528) b!59099))

(assert (= (and b!59110 (not c!7528)) b!59094))

(assert (= (and b!59099 res!32836) b!59115))

(assert (= (and b!59115 res!32840) b!59124))

(assert (= (and b!59094 c!7519) b!59088))

(assert (= (and b!59094 (not c!7519)) b!59102))

(assert (= (and b!59088 res!32835) b!59107))

(assert (= (and b!59107 res!32847) b!59098))

(assert (= (and b!59102 c!7522) b!59104))

(assert (= (and b!59102 (not c!7522)) b!59111))

(assert (= (and b!59104 res!32843) b!59108))

(assert (= (and b!59108 res!32844) b!59096))

(assert (= (or b!59088 b!59104) bm!4387))

(assert (= (or b!59098 b!59096) bm!4394))

(assert (= (or b!59115 bm!4387) bm!4407))

(assert (= (or b!59099 b!59094) bm!4403))

(assert (= (or b!59091 b!59118) bm!4388))

(assert (= (or bm!4397 bm!4407) bm!4405))

(assert (= (or b!59116 b!59110) bm!4406))

(assert (= (or bm!4396 bm!4394) bm!4404))

(assert (= (or b!59090 b!59094) bm!4400))

(assert (= (or bm!4393 bm!4403) bm!4390))

(assert (= (or b!59095 b!59099) bm!4399))

(assert (= (or b!59116 b!59110) bm!4391))

(assert (= (or bm!4392 bm!4406) bm!4401))

(assert (= (or bm!4409 b!59110) bm!4410))

(assert (= (or bm!4389 b!59110) bm!4402))

(assert (= (and bm!4402 c!7523) b!59119))

(assert (= (and bm!4402 (not c!7523)) b!59086))

(assert (= (and d!11269 res!32841) b!59103))

(assert (= (and b!59103 c!7527) b!59100))

(assert (= (and b!59103 (not c!7527)) b!59122))

(assert (= (and b!59100 res!32838) b!59101))

(assert (= (or b!59101 b!59122) bm!4395))

(assert (= (or b!59100 b!59101 b!59122) bm!4408))

(declare-fun m!50761 () Bool)

(assert (=> b!59108 m!50761))

(assert (=> bm!4388 m!50591))

(assert (=> bm!4388 m!50619))

(declare-fun m!50763 () Bool)

(assert (=> bm!4388 m!50763))

(declare-fun m!50765 () Bool)

(assert (=> bm!4402 m!50765))

(declare-fun m!50767 () Bool)

(assert (=> bm!4405 m!50767))

(declare-fun m!50769 () Bool)

(assert (=> bm!4408 m!50769))

(declare-fun m!50771 () Bool)

(assert (=> b!59087 m!50771))

(assert (=> b!59100 m!50591))

(declare-fun m!50773 () Bool)

(assert (=> b!59100 m!50773))

(assert (=> b!59097 m!50619))

(declare-fun m!50775 () Bool)

(assert (=> b!59097 m!50775))

(declare-fun m!50777 () Bool)

(assert (=> bm!4391 m!50777))

(declare-fun m!50779 () Bool)

(assert (=> bm!4391 m!50779))

(assert (=> b!59113 m!50619))

(declare-fun m!50781 () Bool)

(assert (=> b!59113 m!50781))

(assert (=> b!59086 m!50697))

(assert (=> bm!4395 m!50593))

(declare-fun m!50783 () Bool)

(assert (=> bm!4401 m!50783))

(declare-fun m!50785 () Bool)

(assert (=> b!59112 m!50785))

(assert (=> b!59110 m!50697))

(declare-fun m!50787 () Bool)

(assert (=> b!59110 m!50787))

(declare-fun m!50789 () Bool)

(assert (=> b!59110 m!50789))

(assert (=> b!59110 m!50591))

(assert (=> b!59110 m!50619))

(declare-fun m!50791 () Bool)

(assert (=> b!59110 m!50791))

(assert (=> b!59110 m!50697))

(assert (=> b!59110 m!50591))

(declare-fun m!50793 () Bool)

(assert (=> b!59110 m!50793))

(assert (=> bm!4410 m!50787))

(declare-fun m!50795 () Bool)

(assert (=> bm!4410 m!50795))

(assert (=> bm!4404 m!50591))

(declare-fun m!50797 () Bool)

(assert (=> bm!4404 m!50797))

(assert (=> bm!4400 m!50591))

(declare-fun m!50799 () Bool)

(assert (=> bm!4400 m!50799))

(declare-fun m!50801 () Bool)

(assert (=> d!11269 m!50801))

(assert (=> d!11269 m!50627))

(assert (=> bm!4390 m!50591))

(declare-fun m!50803 () Bool)

(assert (=> bm!4390 m!50803))

(declare-fun m!50805 () Bool)

(assert (=> b!59107 m!50805))

(declare-fun m!50807 () Bool)

(assert (=> b!59101 m!50807))

(assert (=> bm!4399 m!50591))

(declare-fun m!50809 () Bool)

(assert (=> bm!4399 m!50809))

(declare-fun m!50811 () Bool)

(assert (=> b!59124 m!50811))

(assert (=> b!59121 m!50591))

(assert (=> b!59121 m!50803))

(declare-fun m!50813 () Bool)

(assert (=> b!59125 m!50813))

(assert (=> b!58819 d!11269))

(declare-fun d!11271 () Bool)

(declare-fun c!7533 () Bool)

(assert (=> d!11271 (= c!7533 ((_ is ValueCellFull!855) (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun e!38911 () V!2843)

(assert (=> d!11271 (= (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!38911)))

(declare-fun b!59130 () Bool)

(declare-fun get!1081 (ValueCell!855 V!2843) V!2843)

(assert (=> b!59130 (= e!38911 (get!1081 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!59131 () Bool)

(declare-fun get!1082 (ValueCell!855 V!2843) V!2843)

(assert (=> b!59131 (= e!38911 (get!1082 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11271 c!7533) b!59130))

(assert (= (and d!11271 (not c!7533)) b!59131))

(assert (=> b!59130 m!50615))

(assert (=> b!59130 m!50617))

(declare-fun m!50815 () Bool)

(assert (=> b!59130 m!50815))

(assert (=> b!59131 m!50615))

(assert (=> b!59131 m!50617))

(declare-fun m!50817 () Bool)

(assert (=> b!59131 m!50817))

(assert (=> b!58819 d!11271))

(declare-fun d!11273 () Bool)

(assert (=> d!11273 (= (array_inv!1051 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvsge (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!58833 d!11273))

(declare-fun d!11275 () Bool)

(assert (=> d!11275 (= (array_inv!1052 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvsge (size!2011 (_values!2026 (v!2381 (underlying!225 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!58833 d!11275))

(declare-fun d!11277 () Bool)

(assert (=> d!11277 (= (valid!250 thiss!992) (valid!249 (v!2381 (underlying!225 thiss!992))))))

(declare-fun bs!2555 () Bool)

(assert (= bs!2555 d!11277))

(declare-fun m!50819 () Bool)

(assert (=> bs!2555 m!50819))

(assert (=> start!8582 d!11277))

(declare-fun b!59139 () Bool)

(declare-fun e!38916 () Bool)

(assert (=> b!59139 (= e!38916 tp_is_empty!2397)))

(declare-fun mapIsEmpty!2883 () Bool)

(declare-fun mapRes!2883 () Bool)

(assert (=> mapIsEmpty!2883 mapRes!2883))

(declare-fun b!59138 () Bool)

(declare-fun e!38917 () Bool)

(assert (=> b!59138 (= e!38917 tp_is_empty!2397)))

(declare-fun condMapEmpty!2883 () Bool)

(declare-fun mapDefault!2883 () ValueCell!855)

(assert (=> mapNonEmpty!2874 (= condMapEmpty!2883 (= mapRest!2873 ((as const (Array (_ BitVec 32) ValueCell!855)) mapDefault!2883)))))

(assert (=> mapNonEmpty!2874 (= tp!7997 (and e!38916 mapRes!2883))))

(declare-fun mapNonEmpty!2883 () Bool)

(declare-fun tp!8013 () Bool)

(assert (=> mapNonEmpty!2883 (= mapRes!2883 (and tp!8013 e!38917))))

(declare-fun mapValue!2883 () ValueCell!855)

(declare-fun mapKey!2883 () (_ BitVec 32))

(declare-fun mapRest!2883 () (Array (_ BitVec 32) ValueCell!855))

(assert (=> mapNonEmpty!2883 (= mapRest!2873 (store mapRest!2883 mapKey!2883 mapValue!2883))))

(assert (= (and mapNonEmpty!2874 condMapEmpty!2883) mapIsEmpty!2883))

(assert (= (and mapNonEmpty!2874 (not condMapEmpty!2883)) mapNonEmpty!2883))

(assert (= (and mapNonEmpty!2883 ((_ is ValueCellFull!855) mapValue!2883)) b!59138))

(assert (= (and mapNonEmpty!2874 ((_ is ValueCellFull!855) mapDefault!2883)) b!59139))

(declare-fun m!50821 () Bool)

(assert (=> mapNonEmpty!2883 m!50821))

(declare-fun b!59141 () Bool)

(declare-fun e!38918 () Bool)

(assert (=> b!59141 (= e!38918 tp_is_empty!2397)))

(declare-fun mapIsEmpty!2884 () Bool)

(declare-fun mapRes!2884 () Bool)

(assert (=> mapIsEmpty!2884 mapRes!2884))

(declare-fun b!59140 () Bool)

(declare-fun e!38919 () Bool)

(assert (=> b!59140 (= e!38919 tp_is_empty!2397)))

(declare-fun condMapEmpty!2884 () Bool)

(declare-fun mapDefault!2884 () ValueCell!855)

(assert (=> mapNonEmpty!2873 (= condMapEmpty!2884 (= mapRest!2874 ((as const (Array (_ BitVec 32) ValueCell!855)) mapDefault!2884)))))

(assert (=> mapNonEmpty!2873 (= tp!7996 (and e!38918 mapRes!2884))))

(declare-fun mapNonEmpty!2884 () Bool)

(declare-fun tp!8014 () Bool)

(assert (=> mapNonEmpty!2884 (= mapRes!2884 (and tp!8014 e!38919))))

(declare-fun mapKey!2884 () (_ BitVec 32))

(declare-fun mapRest!2884 () (Array (_ BitVec 32) ValueCell!855))

(declare-fun mapValue!2884 () ValueCell!855)

(assert (=> mapNonEmpty!2884 (= mapRest!2874 (store mapRest!2884 mapKey!2884 mapValue!2884))))

(assert (= (and mapNonEmpty!2873 condMapEmpty!2884) mapIsEmpty!2884))

(assert (= (and mapNonEmpty!2873 (not condMapEmpty!2884)) mapNonEmpty!2884))

(assert (= (and mapNonEmpty!2884 ((_ is ValueCellFull!855) mapValue!2884)) b!59140))

(assert (= (and mapNonEmpty!2873 ((_ is ValueCellFull!855) mapDefault!2884)) b!59141))

(declare-fun m!50823 () Bool)

(assert (=> mapNonEmpty!2884 m!50823))

(declare-fun b_lambda!2609 () Bool)

(assert (= b_lambda!2607 (or (and b!58833 b_free!1961) (and b!58818 b_free!1963 (= (defaultEntry!2043 newMap!16) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))))) b_lambda!2609)))

(check-sat (not b!58985) (not b!58933) (not b!58905) (not b_next!1961) (not bm!4395) (not b!59113) (not bm!4408) (not b!58912) (not b!59100) (not b!58993) (not bm!4335) (not b!59130) (not b!58983) (not b!59005) (not b!59086) (not bm!4391) (not b!58977) (not bm!4399) (not b!58904) (not d!11249) (not b!58930) (not b!59101) (not b_lambda!2609) (not d!11245) (not bm!4337) b_and!3577 (not d!11267) (not bm!4317) (not bm!4338) (not d!11253) (not b!59003) (not b!59097) tp_is_empty!2397 (not b!58996) (not bm!4410) (not b!58931) (not b!59121) (not bm!4401) (not bm!4402) b_and!3579 (not d!11263) (not d!11269) (not d!11277) (not bm!4334) (not b!58979) (not bm!4390) (not b!58987) (not mapNonEmpty!2883) (not d!11265) (not bm!4388) (not bm!4405) (not b!59131) (not mapNonEmpty!2884) (not d!11247) (not b_lambda!2605) (not b!58989) (not bm!4404) (not b!59110) (not b!58906) (not b!58917) (not b_next!1963) (not bm!4400))
(check-sat b_and!3577 b_and!3579 (not b_next!1961) (not b_next!1963))
(get-model)

(assert (=> d!11265 d!11257))

(assert (=> b!58917 d!11251))

(declare-fun d!11279 () Bool)

(assert (=> d!11279 (= (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!58987 d!11279))

(declare-fun d!11281 () Bool)

(declare-fun e!38920 () Bool)

(assert (=> d!11281 e!38920))

(declare-fun res!32849 () Bool)

(assert (=> d!11281 (=> res!32849 e!38920)))

(declare-fun lt!23854 () Bool)

(assert (=> d!11281 (= res!32849 (not lt!23854))))

(declare-fun lt!23857 () Bool)

(assert (=> d!11281 (= lt!23854 lt!23857)))

(declare-fun lt!23856 () Unit!1553)

(declare-fun e!38921 () Unit!1553)

(assert (=> d!11281 (= lt!23856 e!38921)))

(declare-fun c!7534 () Bool)

(assert (=> d!11281 (= c!7534 lt!23857)))

(assert (=> d!11281 (= lt!23857 (containsKey!127 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!11281 (= (contains!692 lt!23743 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!23854)))

(declare-fun b!59142 () Bool)

(declare-fun lt!23855 () Unit!1553)

(assert (=> b!59142 (= e!38921 lt!23855)))

(assert (=> b!59142 (= lt!23855 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!59142 (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!59143 () Bool)

(declare-fun Unit!1564 () Unit!1553)

(assert (=> b!59143 (= e!38921 Unit!1564)))

(declare-fun b!59144 () Bool)

(assert (=> b!59144 (= e!38920 (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!11281 c!7534) b!59142))

(assert (= (and d!11281 (not c!7534)) b!59143))

(assert (= (and d!11281 (not res!32849)) b!59144))

(assert (=> d!11281 m!50685))

(declare-fun m!50825 () Bool)

(assert (=> d!11281 m!50825))

(assert (=> b!59142 m!50685))

(declare-fun m!50827 () Bool)

(assert (=> b!59142 m!50827))

(assert (=> b!59142 m!50685))

(declare-fun m!50829 () Bool)

(assert (=> b!59142 m!50829))

(assert (=> b!59142 m!50829))

(declare-fun m!50831 () Bool)

(assert (=> b!59142 m!50831))

(assert (=> b!59144 m!50685))

(assert (=> b!59144 m!50829))

(assert (=> b!59144 m!50829))

(assert (=> b!59144 m!50831))

(assert (=> b!58985 d!11281))

(declare-fun d!11283 () Bool)

(declare-fun e!38924 () Bool)

(assert (=> d!11283 e!38924))

(declare-fun c!7537 () Bool)

(assert (=> d!11283 (= c!7537 (and (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!11283 true))

(declare-fun _$29!66 () Unit!1553)

(assert (=> d!11283 (= (choose!309 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))) _$29!66)))

(declare-fun b!59149 () Bool)

(assert (=> b!59149 (= e!38924 (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!59150 () Bool)

(assert (=> b!59150 (= e!38924 (ite (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!11283 c!7537) b!59149))

(assert (= (and d!11283 (not c!7537)) b!59150))

(assert (=> b!59149 m!50591))

(assert (=> b!59149 m!50603))

(assert (=> d!11253 d!11283))

(assert (=> d!11253 d!11257))

(declare-fun d!11285 () Bool)

(assert (=> d!11285 (= (inRange!0 (ite c!7518 (ite c!7525 (index!3072 lt!23831) (ite c!7524 (index!3071 lt!23846) (index!3074 lt!23846))) (ite c!7528 (index!3072 lt!23837) (ite c!7519 (index!3071 lt!23842) (index!3074 lt!23842)))) (mask!5927 newMap!16)) (and (bvsge (ite c!7518 (ite c!7525 (index!3072 lt!23831) (ite c!7524 (index!3071 lt!23846) (index!3074 lt!23846))) (ite c!7528 (index!3072 lt!23837) (ite c!7519 (index!3071 lt!23842) (index!3074 lt!23842)))) #b00000000000000000000000000000000) (bvslt (ite c!7518 (ite c!7525 (index!3072 lt!23831) (ite c!7524 (index!3071 lt!23846) (index!3074 lt!23846))) (ite c!7528 (index!3072 lt!23837) (ite c!7519 (index!3071 lt!23842) (index!3074 lt!23842)))) (bvadd (mask!5927 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!4405 d!11285))

(declare-fun d!11287 () Bool)

(assert (=> d!11287 (= (+!81 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23852 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!23860 () Unit!1553)

(declare-fun choose!310 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 V!2843 Int) Unit!1553)

(assert (=> d!11287 (= lt!23860 (choose!310 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) lt!23852 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) (defaultEntry!2043 newMap!16)))))

(assert (=> d!11287 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11287 (= (lemmaChangeZeroKeyThenAddPairToListMap!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) lt!23852 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) (defaultEntry!2043 newMap!16)) lt!23860)))

(declare-fun bs!2556 () Bool)

(assert (= bs!2556 d!11287))

(declare-fun m!50833 () Bool)

(assert (=> bs!2556 m!50833))

(assert (=> bs!2556 m!50619))

(declare-fun m!50835 () Bool)

(assert (=> bs!2556 m!50835))

(assert (=> bs!2556 m!50697))

(declare-fun m!50837 () Bool)

(assert (=> bs!2556 m!50837))

(assert (=> bs!2556 m!50697))

(assert (=> bs!2556 m!50619))

(declare-fun m!50839 () Bool)

(assert (=> bs!2556 m!50839))

(assert (=> b!59097 d!11287))

(declare-fun bm!4411 () Bool)

(declare-fun call!4414 () ListLongMap!1377)

(declare-fun call!4416 () ListLongMap!1377)

(assert (=> bm!4411 (= call!4414 call!4416)))

(declare-fun d!11289 () Bool)

(declare-fun e!38926 () Bool)

(assert (=> d!11289 e!38926))

(declare-fun res!32857 () Bool)

(assert (=> d!11289 (=> (not res!32857) (not e!38926))))

(assert (=> d!11289 (= res!32857 (or (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))))

(declare-fun lt!23865 () ListLongMap!1377)

(declare-fun lt!23881 () ListLongMap!1377)

(assert (=> d!11289 (= lt!23865 lt!23881)))

(declare-fun lt!23870 () Unit!1553)

(declare-fun e!38934 () Unit!1553)

(assert (=> d!11289 (= lt!23870 e!38934)))

(declare-fun c!7539 () Bool)

(declare-fun e!38933 () Bool)

(assert (=> d!11289 (= c!7539 e!38933)))

(declare-fun res!32854 () Bool)

(assert (=> d!11289 (=> (not res!32854) (not e!38933))))

(assert (=> d!11289 (= res!32854 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun e!38937 () ListLongMap!1377)

(assert (=> d!11289 (= lt!23881 e!38937)))

(declare-fun c!7542 () Bool)

(assert (=> d!11289 (= c!7542 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11289 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11289 (= (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!23865)))

(declare-fun b!59151 () Bool)

(declare-fun e!38927 () Bool)

(declare-fun call!4415 () Bool)

(assert (=> b!59151 (= e!38927 (not call!4415))))

(declare-fun b!59152 () Bool)

(assert (=> b!59152 (= e!38937 (+!81 call!4416 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))

(declare-fun b!59153 () Bool)

(declare-fun e!38928 () Bool)

(assert (=> b!59153 (= e!38927 e!38928)))

(declare-fun res!32851 () Bool)

(assert (=> b!59153 (= res!32851 call!4415)))

(assert (=> b!59153 (=> (not res!32851) (not e!38928))))

(declare-fun b!59154 () Bool)

(declare-fun e!38925 () Bool)

(assert (=> b!59154 (= e!38925 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4412 () Bool)

(declare-fun call!4420 () ListLongMap!1377)

(declare-fun call!4418 () ListLongMap!1377)

(assert (=> bm!4412 (= call!4420 call!4418)))

(declare-fun b!59155 () Bool)

(declare-fun e!38929 () ListLongMap!1377)

(assert (=> b!59155 (= e!38929 call!4420)))

(declare-fun bm!4413 () Bool)

(assert (=> bm!4413 (= call!4415 (contains!692 lt!23865 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59156 () Bool)

(declare-fun Unit!1565 () Unit!1553)

(assert (=> b!59156 (= e!38934 Unit!1565)))

(declare-fun bm!4414 () Bool)

(declare-fun call!4417 () Bool)

(assert (=> bm!4414 (= call!4417 (contains!692 lt!23865 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59157 () Bool)

(declare-fun e!38931 () Bool)

(assert (=> b!59157 (= e!38931 (not call!4417))))

(declare-fun b!59158 () Bool)

(declare-fun e!38930 () Bool)

(assert (=> b!59158 (= e!38930 (= (apply!66 lt!23865 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1959 newMap!16)))))

(declare-fun bm!4415 () Bool)

(declare-fun call!4419 () ListLongMap!1377)

(assert (=> bm!4415 (= call!4418 call!4419)))

(declare-fun b!59159 () Bool)

(declare-fun res!32852 () Bool)

(assert (=> b!59159 (=> (not res!32852) (not e!38926))))

(assert (=> b!59159 (= res!32852 e!38931)))

(declare-fun c!7538 () Bool)

(assert (=> b!59159 (= c!7538 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!59160 () Bool)

(declare-fun e!38935 () Bool)

(declare-fun e!38932 () Bool)

(assert (=> b!59160 (= e!38935 e!38932)))

(declare-fun res!32850 () Bool)

(assert (=> b!59160 (=> (not res!32850) (not e!38932))))

(assert (=> b!59160 (= res!32850 (contains!692 lt!23865 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!59160 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59161 () Bool)

(assert (=> b!59161 (= e!38929 call!4414)))

(declare-fun b!59162 () Bool)

(assert (=> b!59162 (= e!38933 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4416 () Bool)

(assert (=> bm!4416 (= call!4419 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun b!59163 () Bool)

(declare-fun res!32853 () Bool)

(assert (=> b!59163 (=> (not res!32853) (not e!38926))))

(assert (=> b!59163 (= res!32853 e!38935)))

(declare-fun res!32855 () Bool)

(assert (=> b!59163 (=> res!32855 e!38935)))

(assert (=> b!59163 (= res!32855 (not e!38925))))

(declare-fun res!32856 () Bool)

(assert (=> b!59163 (=> (not res!32856) (not e!38925))))

(assert (=> b!59163 (= res!32856 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59164 () Bool)

(assert (=> b!59164 (= e!38928 (= (apply!66 lt!23865 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1959 newMap!16)))))

(declare-fun b!59165 () Bool)

(assert (=> b!59165 (= e!38926 e!38927)))

(declare-fun c!7541 () Bool)

(assert (=> b!59165 (= c!7541 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59166 () Bool)

(declare-fun c!7540 () Bool)

(assert (=> b!59166 (= c!7540 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!38936 () ListLongMap!1377)

(assert (=> b!59166 (= e!38936 e!38929)))

(declare-fun b!59167 () Bool)

(assert (=> b!59167 (= e!38931 e!38930)))

(declare-fun res!32858 () Bool)

(assert (=> b!59167 (= res!32858 call!4417)))

(assert (=> b!59167 (=> (not res!32858) (not e!38930))))

(declare-fun c!7543 () Bool)

(declare-fun bm!4417 () Bool)

(assert (=> bm!4417 (= call!4416 (+!81 (ite c!7542 call!4419 (ite c!7543 call!4418 call!4420)) (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(declare-fun b!59168 () Bool)

(declare-fun lt!23874 () Unit!1553)

(assert (=> b!59168 (= e!38934 lt!23874)))

(declare-fun lt!23879 () ListLongMap!1377)

(assert (=> b!59168 (= lt!23879 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!23878 () (_ BitVec 64))

(assert (=> b!59168 (= lt!23878 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23861 () (_ BitVec 64))

(assert (=> b!59168 (= lt!23861 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!23875 () Unit!1553)

(assert (=> b!59168 (= lt!23875 (addStillContains!42 lt!23879 lt!23878 (zeroValue!1959 newMap!16) lt!23861))))

(assert (=> b!59168 (contains!692 (+!81 lt!23879 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16))) lt!23861)))

(declare-fun lt!23862 () Unit!1553)

(assert (=> b!59168 (= lt!23862 lt!23875)))

(declare-fun lt!23876 () ListLongMap!1377)

(assert (=> b!59168 (= lt!23876 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!23863 () (_ BitVec 64))

(assert (=> b!59168 (= lt!23863 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23867 () (_ BitVec 64))

(assert (=> b!59168 (= lt!23867 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!23869 () Unit!1553)

(assert (=> b!59168 (= lt!23869 (addApplyDifferent!42 lt!23876 lt!23863 (minValue!1959 newMap!16) lt!23867))))

(assert (=> b!59168 (= (apply!66 (+!81 lt!23876 (tuple2!2049 lt!23863 (minValue!1959 newMap!16))) lt!23867) (apply!66 lt!23876 lt!23867))))

(declare-fun lt!23882 () Unit!1553)

(assert (=> b!59168 (= lt!23882 lt!23869)))

(declare-fun lt!23866 () ListLongMap!1377)

(assert (=> b!59168 (= lt!23866 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!23877 () (_ BitVec 64))

(assert (=> b!59168 (= lt!23877 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23872 () (_ BitVec 64))

(assert (=> b!59168 (= lt!23872 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!23880 () Unit!1553)

(assert (=> b!59168 (= lt!23880 (addApplyDifferent!42 lt!23866 lt!23877 (zeroValue!1959 newMap!16) lt!23872))))

(assert (=> b!59168 (= (apply!66 (+!81 lt!23866 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16))) lt!23872) (apply!66 lt!23866 lt!23872))))

(declare-fun lt!23864 () Unit!1553)

(assert (=> b!59168 (= lt!23864 lt!23880)))

(declare-fun lt!23868 () ListLongMap!1377)

(assert (=> b!59168 (= lt!23868 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!23873 () (_ BitVec 64))

(assert (=> b!59168 (= lt!23873 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23871 () (_ BitVec 64))

(assert (=> b!59168 (= lt!23871 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!59168 (= lt!23874 (addApplyDifferent!42 lt!23868 lt!23873 (minValue!1959 newMap!16) lt!23871))))

(assert (=> b!59168 (= (apply!66 (+!81 lt!23868 (tuple2!2049 lt!23873 (minValue!1959 newMap!16))) lt!23871) (apply!66 lt!23868 lt!23871))))

(declare-fun b!59169 () Bool)

(assert (=> b!59169 (= e!38936 call!4414)))

(declare-fun b!59170 () Bool)

(assert (=> b!59170 (= e!38937 e!38936)))

(assert (=> b!59170 (= c!7543 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59171 () Bool)

(assert (=> b!59171 (= e!38932 (= (apply!66 lt!23865 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 (_values!2026 newMap!16)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!59171 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 (_values!2026 newMap!16))))))

(assert (=> b!59171 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (= (and d!11289 c!7542) b!59152))

(assert (= (and d!11289 (not c!7542)) b!59170))

(assert (= (and b!59170 c!7543) b!59169))

(assert (= (and b!59170 (not c!7543)) b!59166))

(assert (= (and b!59166 c!7540) b!59161))

(assert (= (and b!59166 (not c!7540)) b!59155))

(assert (= (or b!59161 b!59155) bm!4412))

(assert (= (or b!59169 bm!4412) bm!4415))

(assert (= (or b!59169 b!59161) bm!4411))

(assert (= (or b!59152 bm!4415) bm!4416))

(assert (= (or b!59152 bm!4411) bm!4417))

(assert (= (and d!11289 res!32854) b!59162))

(assert (= (and d!11289 c!7539) b!59168))

(assert (= (and d!11289 (not c!7539)) b!59156))

(assert (= (and d!11289 res!32857) b!59163))

(assert (= (and b!59163 res!32856) b!59154))

(assert (= (and b!59163 (not res!32855)) b!59160))

(assert (= (and b!59160 res!32850) b!59171))

(assert (= (and b!59163 res!32853) b!59159))

(assert (= (and b!59159 c!7538) b!59167))

(assert (= (and b!59159 (not c!7538)) b!59157))

(assert (= (and b!59167 res!32858) b!59158))

(assert (= (or b!59167 b!59157) bm!4414))

(assert (= (and b!59159 res!32852) b!59165))

(assert (= (and b!59165 c!7541) b!59153))

(assert (= (and b!59165 (not c!7541)) b!59151))

(assert (= (and b!59153 res!32851) b!59164))

(assert (= (or b!59153 b!59151) bm!4413))

(declare-fun b_lambda!2611 () Bool)

(assert (=> (not b_lambda!2611) (not b!59171)))

(declare-fun t!4806 () Bool)

(declare-fun tb!1329 () Bool)

(assert (=> (and b!58833 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16)) t!4806) tb!1329))

(declare-fun result!2389 () Bool)

(assert (=> tb!1329 (= result!2389 tp_is_empty!2397)))

(assert (=> b!59171 t!4806))

(declare-fun b_and!3581 () Bool)

(assert (= b_and!3577 (and (=> t!4806 result!2389) b_and!3581)))

(declare-fun t!4808 () Bool)

(declare-fun tb!1331 () Bool)

(assert (=> (and b!58818 (= (defaultEntry!2043 newMap!16) (defaultEntry!2043 newMap!16)) t!4808) tb!1331))

(declare-fun result!2391 () Bool)

(assert (= result!2391 result!2389))

(assert (=> b!59171 t!4808))

(declare-fun b_and!3583 () Bool)

(assert (= b_and!3579 (and (=> t!4808 result!2391) b_and!3583)))

(declare-fun m!50841 () Bool)

(assert (=> b!59164 m!50841))

(declare-fun m!50843 () Bool)

(assert (=> b!59171 m!50843))

(assert (=> b!59171 m!50843))

(declare-fun m!50845 () Bool)

(assert (=> b!59171 m!50845))

(declare-fun m!50847 () Bool)

(assert (=> b!59171 m!50847))

(declare-fun m!50849 () Bool)

(assert (=> b!59171 m!50849))

(assert (=> b!59171 m!50847))

(assert (=> b!59171 m!50849))

(declare-fun m!50851 () Bool)

(assert (=> b!59171 m!50851))

(assert (=> b!59154 m!50843))

(assert (=> b!59154 m!50843))

(declare-fun m!50853 () Bool)

(assert (=> b!59154 m!50853))

(declare-fun m!50855 () Bool)

(assert (=> b!59158 m!50855))

(assert (=> b!59168 m!50843))

(declare-fun m!50857 () Bool)

(assert (=> b!59168 m!50857))

(declare-fun m!50859 () Bool)

(assert (=> b!59168 m!50859))

(declare-fun m!50861 () Bool)

(assert (=> b!59168 m!50861))

(declare-fun m!50863 () Bool)

(assert (=> b!59168 m!50863))

(declare-fun m!50865 () Bool)

(assert (=> b!59168 m!50865))

(declare-fun m!50867 () Bool)

(assert (=> b!59168 m!50867))

(assert (=> b!59168 m!50863))

(declare-fun m!50869 () Bool)

(assert (=> b!59168 m!50869))

(declare-fun m!50871 () Bool)

(assert (=> b!59168 m!50871))

(declare-fun m!50873 () Bool)

(assert (=> b!59168 m!50873))

(declare-fun m!50875 () Bool)

(assert (=> b!59168 m!50875))

(declare-fun m!50877 () Bool)

(assert (=> b!59168 m!50877))

(declare-fun m!50879 () Bool)

(assert (=> b!59168 m!50879))

(declare-fun m!50881 () Bool)

(assert (=> b!59168 m!50881))

(declare-fun m!50883 () Bool)

(assert (=> b!59168 m!50883))

(assert (=> b!59168 m!50883))

(declare-fun m!50885 () Bool)

(assert (=> b!59168 m!50885))

(assert (=> b!59168 m!50857))

(assert (=> b!59168 m!50877))

(declare-fun m!50887 () Bool)

(assert (=> b!59168 m!50887))

(declare-fun m!50889 () Bool)

(assert (=> bm!4417 m!50889))

(assert (=> b!59160 m!50843))

(assert (=> b!59160 m!50843))

(declare-fun m!50891 () Bool)

(assert (=> b!59160 m!50891))

(assert (=> d!11289 m!50833))

(declare-fun m!50893 () Bool)

(assert (=> b!59152 m!50893))

(declare-fun m!50895 () Bool)

(assert (=> bm!4414 m!50895))

(declare-fun m!50897 () Bool)

(assert (=> bm!4413 m!50897))

(assert (=> b!59162 m!50843))

(assert (=> b!59162 m!50843))

(assert (=> b!59162 m!50853))

(assert (=> bm!4416 m!50861))

(assert (=> d!11263 d!11289))

(declare-fun d!11291 () Bool)

(assert (=> d!11291 (= (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (and (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!58933 d!11291))

(declare-fun d!11293 () Bool)

(declare-fun res!32859 () Bool)

(declare-fun e!38938 () Bool)

(assert (=> d!11293 (=> (not res!32859) (not e!38938))))

(assert (=> d!11293 (= res!32859 (simpleValid!41 (_2!1033 lt!23848)))))

(assert (=> d!11293 (= (valid!249 (_2!1033 lt!23848)) e!38938)))

(declare-fun b!59172 () Bool)

(declare-fun res!32860 () Bool)

(assert (=> b!59172 (=> (not res!32860) (not e!38938))))

(assert (=> b!59172 (= res!32860 (= (arrayCountValidKeys!0 (_keys!3667 (_2!1033 lt!23848)) #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))) (_size!358 (_2!1033 lt!23848))))))

(declare-fun b!59173 () Bool)

(declare-fun res!32861 () Bool)

(assert (=> b!59173 (=> (not res!32861) (not e!38938))))

(assert (=> b!59173 (= res!32861 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3667 (_2!1033 lt!23848)) (mask!5927 (_2!1033 lt!23848))))))

(declare-fun b!59174 () Bool)

(assert (=> b!59174 (= e!38938 (arrayNoDuplicates!0 (_keys!3667 (_2!1033 lt!23848)) #b00000000000000000000000000000000 Nil!1451))))

(assert (= (and d!11293 res!32859) b!59172))

(assert (= (and b!59172 res!32860) b!59173))

(assert (= (and b!59173 res!32861) b!59174))

(declare-fun m!50899 () Bool)

(assert (=> d!11293 m!50899))

(declare-fun m!50901 () Bool)

(assert (=> b!59172 m!50901))

(declare-fun m!50903 () Bool)

(assert (=> b!59173 m!50903))

(declare-fun m!50905 () Bool)

(assert (=> b!59174 m!50905))

(assert (=> d!11269 d!11293))

(assert (=> d!11269 d!11245))

(declare-fun d!11295 () Bool)

(declare-fun res!32862 () Bool)

(declare-fun e!38939 () Bool)

(assert (=> d!11295 (=> res!32862 e!38939)))

(assert (=> d!11295 (= res!32862 (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11295 (= (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!38939)))

(declare-fun b!59175 () Bool)

(declare-fun e!38940 () Bool)

(assert (=> b!59175 (= e!38939 e!38940)))

(declare-fun res!32863 () Bool)

(assert (=> b!59175 (=> (not res!32863) (not e!38940))))

(assert (=> b!59175 (= res!32863 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!59176 () Bool)

(assert (=> b!59176 (= e!38940 (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!11295 (not res!32862)) b!59175))

(assert (= (and b!59175 res!32863) b!59176))

(declare-fun m!50907 () Bool)

(assert (=> d!11295 m!50907))

(assert (=> b!59176 m!50591))

(declare-fun m!50909 () Bool)

(assert (=> b!59176 m!50909))

(assert (=> b!58912 d!11295))

(declare-fun d!11297 () Bool)

(declare-fun get!1083 (Option!129) V!2843)

(assert (=> d!11297 (= (apply!66 lt!23743 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1083 (getValueByKey!123 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2557 () Bool)

(assert (= bs!2557 d!11297))

(assert (=> bs!2557 m!50685))

(assert (=> bs!2557 m!50829))

(assert (=> bs!2557 m!50829))

(declare-fun m!50911 () Bool)

(assert (=> bs!2557 m!50911))

(assert (=> b!58996 d!11297))

(declare-fun d!11299 () Bool)

(declare-fun c!7544 () Bool)

(assert (=> d!11299 (= c!7544 ((_ is ValueCellFull!855) (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!38941 () V!2843)

(assert (=> d!11299 (= (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!38941)))

(declare-fun b!59177 () Bool)

(assert (=> b!59177 (= e!38941 (get!1081 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!59178 () Bool)

(assert (=> b!59178 (= e!38941 (get!1082 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11299 c!7544) b!59177))

(assert (= (and d!11299 (not c!7544)) b!59178))

(assert (=> b!59177 m!50703))

(assert (=> b!59177 m!50617))

(declare-fun m!50913 () Bool)

(assert (=> b!59177 m!50913))

(assert (=> b!59178 m!50703))

(assert (=> b!59178 m!50617))

(declare-fun m!50915 () Bool)

(assert (=> b!59178 m!50915))

(assert (=> b!58996 d!11299))

(declare-fun bm!4420 () Bool)

(declare-fun call!4423 () (_ BitVec 32))

(assert (=> bm!4420 (= call!4423 (arrayCountValidKeys!0 (_keys!3667 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun d!11301 () Bool)

(declare-fun lt!23885 () (_ BitVec 32))

(assert (=> d!11301 (and (bvsge lt!23885 #b00000000000000000000000000000000) (bvsle lt!23885 (bvsub (size!2010 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!38947 () (_ BitVec 32))

(assert (=> d!11301 (= lt!23885 e!38947)))

(declare-fun c!7550 () Bool)

(assert (=> d!11301 (= c!7550 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11301 (and (bvsle #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2010 (_keys!3667 newMap!16)) (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11301 (= (arrayCountValidKeys!0 (_keys!3667 newMap!16) #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) lt!23885)))

(declare-fun b!59187 () Bool)

(declare-fun e!38946 () (_ BitVec 32))

(assert (=> b!59187 (= e!38947 e!38946)))

(declare-fun c!7549 () Bool)

(assert (=> b!59187 (= c!7549 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!59188 () Bool)

(assert (=> b!59188 (= e!38946 (bvadd #b00000000000000000000000000000001 call!4423))))

(declare-fun b!59189 () Bool)

(assert (=> b!59189 (= e!38947 #b00000000000000000000000000000000)))

(declare-fun b!59190 () Bool)

(assert (=> b!59190 (= e!38946 call!4423)))

(assert (= (and d!11301 c!7550) b!59189))

(assert (= (and d!11301 (not c!7550)) b!59187))

(assert (= (and b!59187 c!7549) b!59188))

(assert (= (and b!59187 (not c!7549)) b!59190))

(assert (= (or b!59188 b!59190) bm!4420))

(declare-fun m!50917 () Bool)

(assert (=> bm!4420 m!50917))

(assert (=> b!59187 m!50843))

(assert (=> b!59187 m!50843))

(assert (=> b!59187 m!50853))

(assert (=> b!58904 d!11301))

(declare-fun d!11303 () Bool)

(declare-fun lt!23888 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!62 (List!1454) (InoxSet (_ BitVec 64)))

(assert (=> d!11303 (= lt!23888 (select (content!62 Nil!1451) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun e!38953 () Bool)

(assert (=> d!11303 (= lt!23888 e!38953)))

(declare-fun res!32868 () Bool)

(assert (=> d!11303 (=> (not res!32868) (not e!38953))))

(assert (=> d!11303 (= res!32868 ((_ is Cons!1450) Nil!1451))))

(assert (=> d!11303 (= (contains!693 Nil!1451 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) lt!23888)))

(declare-fun b!59195 () Bool)

(declare-fun e!38952 () Bool)

(assert (=> b!59195 (= e!38953 e!38952)))

(declare-fun res!32869 () Bool)

(assert (=> b!59195 (=> res!32869 e!38952)))

(assert (=> b!59195 (= res!32869 (= (h!2031 Nil!1451) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59196 () Bool)

(assert (=> b!59196 (= e!38952 (contains!693 (t!4800 Nil!1451) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (= (and d!11303 res!32868) b!59195))

(assert (= (and b!59195 (not res!32869)) b!59196))

(declare-fun m!50919 () Bool)

(assert (=> d!11303 m!50919))

(assert (=> d!11303 m!50591))

(declare-fun m!50921 () Bool)

(assert (=> d!11303 m!50921))

(assert (=> b!59196 m!50591))

(declare-fun m!50923 () Bool)

(assert (=> b!59196 m!50923))

(assert (=> b!58930 d!11303))

(assert (=> b!58979 d!11279))

(declare-fun b!59197 () Bool)

(declare-fun e!38956 () Bool)

(declare-fun call!4424 () Bool)

(assert (=> b!59197 (= e!38956 call!4424)))

(declare-fun d!11305 () Bool)

(declare-fun res!32870 () Bool)

(declare-fun e!38954 () Bool)

(assert (=> d!11305 (=> res!32870 e!38954)))

(assert (=> d!11305 (= res!32870 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11305 (= (arrayNoDuplicates!0 (_keys!3667 newMap!16) #b00000000000000000000000000000000 Nil!1451) e!38954)))

(declare-fun b!59198 () Bool)

(declare-fun e!38955 () Bool)

(assert (=> b!59198 (= e!38955 (contains!693 Nil!1451 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!59199 () Bool)

(declare-fun e!38957 () Bool)

(assert (=> b!59199 (= e!38954 e!38957)))

(declare-fun res!32872 () Bool)

(assert (=> b!59199 (=> (not res!32872) (not e!38957))))

(assert (=> b!59199 (= res!32872 (not e!38955))))

(declare-fun res!32871 () Bool)

(assert (=> b!59199 (=> (not res!32871) (not e!38955))))

(assert (=> b!59199 (= res!32871 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!59200 () Bool)

(assert (=> b!59200 (= e!38956 call!4424)))

(declare-fun bm!4421 () Bool)

(declare-fun c!7551 () Bool)

(assert (=> bm!4421 (= call!4424 (arrayNoDuplicates!0 (_keys!3667 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!7551 (Cons!1450 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) Nil!1451) Nil!1451)))))

(declare-fun b!59201 () Bool)

(assert (=> b!59201 (= e!38957 e!38956)))

(assert (=> b!59201 (= c!7551 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!11305 (not res!32870)) b!59199))

(assert (= (and b!59199 res!32871) b!59198))

(assert (= (and b!59199 res!32872) b!59201))

(assert (= (and b!59201 c!7551) b!59197))

(assert (= (and b!59201 (not c!7551)) b!59200))

(assert (= (or b!59197 b!59200) bm!4421))

(assert (=> b!59198 m!50843))

(assert (=> b!59198 m!50843))

(declare-fun m!50925 () Bool)

(assert (=> b!59198 m!50925))

(assert (=> b!59199 m!50843))

(assert (=> b!59199 m!50843))

(assert (=> b!59199 m!50853))

(assert (=> bm!4421 m!50843))

(declare-fun m!50927 () Bool)

(assert (=> bm!4421 m!50927))

(assert (=> b!59201 m!50843))

(assert (=> b!59201 m!50843))

(assert (=> b!59201 m!50853))

(assert (=> b!58906 d!11305))

(declare-fun d!11307 () Bool)

(declare-fun e!38960 () Bool)

(assert (=> d!11307 e!38960))

(declare-fun res!32878 () Bool)

(assert (=> d!11307 (=> (not res!32878) (not e!38960))))

(declare-fun lt!23900 () ListLongMap!1377)

(assert (=> d!11307 (= res!32878 (contains!692 lt!23900 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun lt!23897 () List!1453)

(assert (=> d!11307 (= lt!23900 (ListLongMap!1378 lt!23897))))

(declare-fun lt!23899 () Unit!1553)

(declare-fun lt!23898 () Unit!1553)

(assert (=> d!11307 (= lt!23899 lt!23898)))

(assert (=> d!11307 (= (getValueByKey!123 lt!23897 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!42 (List!1453 (_ BitVec 64) V!2843) Unit!1553)

(assert (=> d!11307 (= lt!23898 (lemmaContainsTupThenGetReturnValue!42 lt!23897 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun insertStrictlySorted!44 (List!1453 (_ BitVec 64) V!2843) List!1453)

(assert (=> d!11307 (= lt!23897 (insertStrictlySorted!44 (toList!704 call!4337) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11307 (= (+!81 call!4337 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23900)))

(declare-fun b!59206 () Bool)

(declare-fun res!32877 () Bool)

(assert (=> b!59206 (=> (not res!32877) (not e!38960))))

(assert (=> b!59206 (= res!32877 (= (getValueByKey!123 (toList!704 lt!23900) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!59207 () Bool)

(declare-fun contains!694 (List!1453 tuple2!2048) Bool)

(assert (=> b!59207 (= e!38960 (contains!694 (toList!704 lt!23900) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(assert (= (and d!11307 res!32878) b!59206))

(assert (= (and b!59206 res!32877) b!59207))

(declare-fun m!50929 () Bool)

(assert (=> d!11307 m!50929))

(declare-fun m!50931 () Bool)

(assert (=> d!11307 m!50931))

(declare-fun m!50933 () Bool)

(assert (=> d!11307 m!50933))

(declare-fun m!50935 () Bool)

(assert (=> d!11307 m!50935))

(declare-fun m!50937 () Bool)

(assert (=> b!59206 m!50937))

(declare-fun m!50939 () Bool)

(assert (=> b!59207 m!50939))

(assert (=> b!58977 d!11307))

(declare-fun d!11309 () Bool)

(declare-fun e!38961 () Bool)

(assert (=> d!11309 e!38961))

(declare-fun res!32880 () Bool)

(assert (=> d!11309 (=> (not res!32880) (not e!38961))))

(declare-fun lt!23904 () ListLongMap!1377)

(assert (=> d!11309 (= res!32880 (contains!692 lt!23904 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun lt!23901 () List!1453)

(assert (=> d!11309 (= lt!23904 (ListLongMap!1378 lt!23901))))

(declare-fun lt!23903 () Unit!1553)

(declare-fun lt!23902 () Unit!1553)

(assert (=> d!11309 (= lt!23903 lt!23902)))

(assert (=> d!11309 (= (getValueByKey!123 lt!23901 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) (Some!128 (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> d!11309 (= lt!23902 (lemmaContainsTupThenGetReturnValue!42 lt!23901 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> d!11309 (= lt!23901 (insertStrictlySorted!44 (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341))) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> d!11309 (= (+!81 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341)) (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23904)))

(declare-fun b!59208 () Bool)

(declare-fun res!32879 () Bool)

(assert (=> b!59208 (=> (not res!32879) (not e!38961))))

(assert (=> b!59208 (= res!32879 (= (getValueByKey!123 (toList!704 lt!23904) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) (Some!128 (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(declare-fun b!59209 () Bool)

(assert (=> b!59209 (= e!38961 (contains!694 (toList!704 lt!23904) (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (= (and d!11309 res!32880) b!59208))

(assert (= (and b!59208 res!32879) b!59209))

(declare-fun m!50941 () Bool)

(assert (=> d!11309 m!50941))

(declare-fun m!50943 () Bool)

(assert (=> d!11309 m!50943))

(declare-fun m!50945 () Bool)

(assert (=> d!11309 m!50945))

(declare-fun m!50947 () Bool)

(assert (=> d!11309 m!50947))

(declare-fun m!50949 () Bool)

(assert (=> b!59208 m!50949))

(declare-fun m!50951 () Bool)

(assert (=> b!59209 m!50951))

(assert (=> bm!4338 d!11309))

(declare-fun d!11311 () Bool)

(declare-fun e!38962 () Bool)

(assert (=> d!11311 e!38962))

(declare-fun res!32881 () Bool)

(assert (=> d!11311 (=> res!32881 e!38962)))

(declare-fun lt!23905 () Bool)

(assert (=> d!11311 (= res!32881 (not lt!23905))))

(declare-fun lt!23908 () Bool)

(assert (=> d!11311 (= lt!23905 lt!23908)))

(declare-fun lt!23907 () Unit!1553)

(declare-fun e!38963 () Unit!1553)

(assert (=> d!11311 (= lt!23907 e!38963)))

(declare-fun c!7552 () Bool)

(assert (=> d!11311 (= c!7552 lt!23908)))

(assert (=> d!11311 (= lt!23908 (containsKey!127 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))

(assert (=> d!11311 (= (contains!692 call!4401 (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))) lt!23905)))

(declare-fun b!59210 () Bool)

(declare-fun lt!23906 () Unit!1553)

(assert (=> b!59210 (= e!38963 lt!23906)))

(assert (=> b!59210 (= lt!23906 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))

(assert (=> b!59210 (isDefined!77 (getValueByKey!123 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))

(declare-fun b!59211 () Bool)

(declare-fun Unit!1566 () Unit!1553)

(assert (=> b!59211 (= e!38963 Unit!1566)))

(declare-fun b!59212 () Bool)

(assert (=> b!59212 (= e!38962 (isDefined!77 (getValueByKey!123 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839))))))))

(assert (= (and d!11311 c!7552) b!59210))

(assert (= (and d!11311 (not c!7552)) b!59211))

(assert (= (and d!11311 (not res!32881)) b!59212))

(declare-fun m!50953 () Bool)

(assert (=> d!11311 m!50953))

(declare-fun m!50955 () Bool)

(assert (=> b!59210 m!50955))

(declare-fun m!50957 () Bool)

(assert (=> b!59210 m!50957))

(assert (=> b!59210 m!50957))

(declare-fun m!50959 () Bool)

(assert (=> b!59210 m!50959))

(assert (=> b!59212 m!50957))

(assert (=> b!59212 m!50957))

(assert (=> b!59212 m!50959))

(assert (=> bm!4391 d!11311))

(declare-fun bm!4422 () Bool)

(declare-fun call!4425 () ListLongMap!1377)

(declare-fun call!4427 () ListLongMap!1377)

(assert (=> bm!4422 (= call!4425 call!4427)))

(declare-fun d!11313 () Bool)

(declare-fun e!38965 () Bool)

(assert (=> d!11313 e!38965))

(declare-fun res!32889 () Bool)

(assert (=> d!11313 (=> (not res!32889) (not e!38965))))

(assert (=> d!11313 (= res!32889 (or (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))))

(declare-fun lt!23913 () ListLongMap!1377)

(declare-fun lt!23929 () ListLongMap!1377)

(assert (=> d!11313 (= lt!23913 lt!23929)))

(declare-fun lt!23918 () Unit!1553)

(declare-fun e!38973 () Unit!1553)

(assert (=> d!11313 (= lt!23918 e!38973)))

(declare-fun c!7554 () Bool)

(declare-fun e!38972 () Bool)

(assert (=> d!11313 (= c!7554 e!38972)))

(declare-fun res!32886 () Bool)

(assert (=> d!11313 (=> (not res!32886) (not e!38972))))

(assert (=> d!11313 (= res!32886 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun e!38976 () ListLongMap!1377)

(assert (=> d!11313 (= lt!23929 e!38976)))

(declare-fun c!7557 () Bool)

(assert (=> d!11313 (= c!7557 (and (not (= (bvand (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11313 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11313 (= (getCurrentListMap!401 (_keys!3667 newMap!16) (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834) (mask!5927 newMap!16) (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!23913)))

(declare-fun b!59213 () Bool)

(declare-fun e!38966 () Bool)

(declare-fun call!4426 () Bool)

(assert (=> b!59213 (= e!38966 (not call!4426))))

(declare-fun b!59214 () Bool)

(assert (=> b!59214 (= e!38976 (+!81 call!4427 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))))

(declare-fun b!59215 () Bool)

(declare-fun e!38967 () Bool)

(assert (=> b!59215 (= e!38966 e!38967)))

(declare-fun res!32883 () Bool)

(assert (=> b!59215 (= res!32883 call!4426)))

(assert (=> b!59215 (=> (not res!32883) (not e!38967))))

(declare-fun b!59216 () Bool)

(declare-fun e!38964 () Bool)

(assert (=> b!59216 (= e!38964 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4423 () Bool)

(declare-fun call!4431 () ListLongMap!1377)

(declare-fun call!4429 () ListLongMap!1377)

(assert (=> bm!4423 (= call!4431 call!4429)))

(declare-fun b!59217 () Bool)

(declare-fun e!38968 () ListLongMap!1377)

(assert (=> b!59217 (= e!38968 call!4431)))

(declare-fun bm!4424 () Bool)

(assert (=> bm!4424 (= call!4426 (contains!692 lt!23913 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59218 () Bool)

(declare-fun Unit!1567 () Unit!1553)

(assert (=> b!59218 (= e!38973 Unit!1567)))

(declare-fun bm!4425 () Bool)

(declare-fun call!4428 () Bool)

(assert (=> bm!4425 (= call!4428 (contains!692 lt!23913 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59219 () Bool)

(declare-fun e!38970 () Bool)

(assert (=> b!59219 (= e!38970 (not call!4428))))

(declare-fun b!59220 () Bool)

(declare-fun e!38969 () Bool)

(assert (=> b!59220 (= e!38969 (= (apply!66 lt!23913 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))))

(declare-fun bm!4426 () Bool)

(declare-fun call!4430 () ListLongMap!1377)

(assert (=> bm!4426 (= call!4429 call!4430)))

(declare-fun b!59221 () Bool)

(declare-fun res!32884 () Bool)

(assert (=> b!59221 (=> (not res!32884) (not e!38965))))

(assert (=> b!59221 (= res!32884 e!38970)))

(declare-fun c!7553 () Bool)

(assert (=> b!59221 (= c!7553 (not (= (bvand (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!59222 () Bool)

(declare-fun e!38974 () Bool)

(declare-fun e!38971 () Bool)

(assert (=> b!59222 (= e!38974 e!38971)))

(declare-fun res!32882 () Bool)

(assert (=> b!59222 (=> (not res!32882) (not e!38971))))

(assert (=> b!59222 (= res!32882 (contains!692 lt!23913 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!59222 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59223 () Bool)

(assert (=> b!59223 (= e!38968 call!4425)))

(declare-fun b!59224 () Bool)

(assert (=> b!59224 (= e!38972 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4427 () Bool)

(assert (=> bm!4427 (= call!4430 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834) (mask!5927 newMap!16) (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun b!59225 () Bool)

(declare-fun res!32885 () Bool)

(assert (=> b!59225 (=> (not res!32885) (not e!38965))))

(assert (=> b!59225 (= res!32885 e!38974)))

(declare-fun res!32887 () Bool)

(assert (=> b!59225 (=> res!32887 e!38974)))

(assert (=> b!59225 (= res!32887 (not e!38964))))

(declare-fun res!32888 () Bool)

(assert (=> b!59225 (=> (not res!32888) (not e!38964))))

(assert (=> b!59225 (= res!32888 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59226 () Bool)

(assert (=> b!59226 (= e!38967 (= (apply!66 lt!23913 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))

(declare-fun b!59227 () Bool)

(assert (=> b!59227 (= e!38965 e!38966)))

(declare-fun c!7556 () Bool)

(assert (=> b!59227 (= c!7556 (not (= (bvand (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!7555 () Bool)

(declare-fun b!59228 () Bool)

(assert (=> b!59228 (= c!7555 (and (not (= (bvand (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!38975 () ListLongMap!1377)

(assert (=> b!59228 (= e!38975 e!38968)))

(declare-fun b!59229 () Bool)

(assert (=> b!59229 (= e!38970 e!38969)))

(declare-fun res!32890 () Bool)

(assert (=> b!59229 (= res!32890 call!4428)))

(assert (=> b!59229 (=> (not res!32890) (not e!38969))))

(declare-fun c!7558 () Bool)

(declare-fun bm!4428 () Bool)

(assert (=> bm!4428 (= call!4427 (+!81 (ite c!7557 call!4430 (ite c!7558 call!4429 call!4431)) (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(declare-fun b!59230 () Bool)

(declare-fun lt!23922 () Unit!1553)

(assert (=> b!59230 (= e!38973 lt!23922)))

(declare-fun lt!23927 () ListLongMap!1377)

(assert (=> b!59230 (= lt!23927 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834) (mask!5927 newMap!16) (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!23926 () (_ BitVec 64))

(assert (=> b!59230 (= lt!23926 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23909 () (_ BitVec 64))

(assert (=> b!59230 (= lt!23909 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!23923 () Unit!1553)

(assert (=> b!59230 (= lt!23923 (addStillContains!42 lt!23927 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) lt!23909))))

(assert (=> b!59230 (contains!692 (+!81 lt!23927 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) lt!23909)))

(declare-fun lt!23910 () Unit!1553)

(assert (=> b!59230 (= lt!23910 lt!23923)))

(declare-fun lt!23924 () ListLongMap!1377)

(assert (=> b!59230 (= lt!23924 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834) (mask!5927 newMap!16) (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!23911 () (_ BitVec 64))

(assert (=> b!59230 (= lt!23911 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23915 () (_ BitVec 64))

(assert (=> b!59230 (= lt!23915 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!23917 () Unit!1553)

(assert (=> b!59230 (= lt!23917 (addApplyDifferent!42 lt!23924 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) lt!23915))))

(assert (=> b!59230 (= (apply!66 (+!81 lt!23924 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) lt!23915) (apply!66 lt!23924 lt!23915))))

(declare-fun lt!23930 () Unit!1553)

(assert (=> b!59230 (= lt!23930 lt!23917)))

(declare-fun lt!23914 () ListLongMap!1377)

(assert (=> b!59230 (= lt!23914 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834) (mask!5927 newMap!16) (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!23925 () (_ BitVec 64))

(assert (=> b!59230 (= lt!23925 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23920 () (_ BitVec 64))

(assert (=> b!59230 (= lt!23920 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!23928 () Unit!1553)

(assert (=> b!59230 (= lt!23928 (addApplyDifferent!42 lt!23914 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) lt!23920))))

(assert (=> b!59230 (= (apply!66 (+!81 lt!23914 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) lt!23920) (apply!66 lt!23914 lt!23920))))

(declare-fun lt!23912 () Unit!1553)

(assert (=> b!59230 (= lt!23912 lt!23928)))

(declare-fun lt!23916 () ListLongMap!1377)

(assert (=> b!59230 (= lt!23916 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834) (mask!5927 newMap!16) (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!23921 () (_ BitVec 64))

(assert (=> b!59230 (= lt!23921 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!23919 () (_ BitVec 64))

(assert (=> b!59230 (= lt!23919 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!59230 (= lt!23922 (addApplyDifferent!42 lt!23916 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) lt!23919))))

(assert (=> b!59230 (= (apply!66 (+!81 lt!23916 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) lt!23919) (apply!66 lt!23916 lt!23919))))

(declare-fun b!59231 () Bool)

(assert (=> b!59231 (= e!38975 call!4425)))

(declare-fun b!59232 () Bool)

(assert (=> b!59232 (= e!38976 e!38975)))

(assert (=> b!59232 (= c!7558 (and (not (= (bvand (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59233 () Bool)

(assert (=> b!59233 (= e!38971 (= (apply!66 lt!23913 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!59233 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834))))))

(assert (=> b!59233 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (= (and d!11313 c!7557) b!59214))

(assert (= (and d!11313 (not c!7557)) b!59232))

(assert (= (and b!59232 c!7558) b!59231))

(assert (= (and b!59232 (not c!7558)) b!59228))

(assert (= (and b!59228 c!7555) b!59223))

(assert (= (and b!59228 (not c!7555)) b!59217))

(assert (= (or b!59223 b!59217) bm!4423))

(assert (= (or b!59231 bm!4423) bm!4426))

(assert (= (or b!59231 b!59223) bm!4422))

(assert (= (or b!59214 bm!4426) bm!4427))

(assert (= (or b!59214 bm!4422) bm!4428))

(assert (= (and d!11313 res!32886) b!59224))

(assert (= (and d!11313 c!7554) b!59230))

(assert (= (and d!11313 (not c!7554)) b!59218))

(assert (= (and d!11313 res!32889) b!59225))

(assert (= (and b!59225 res!32888) b!59216))

(assert (= (and b!59225 (not res!32887)) b!59222))

(assert (= (and b!59222 res!32882) b!59233))

(assert (= (and b!59225 res!32885) b!59221))

(assert (= (and b!59221 c!7553) b!59229))

(assert (= (and b!59221 (not c!7553)) b!59219))

(assert (= (and b!59229 res!32890) b!59220))

(assert (= (or b!59229 b!59219) bm!4425))

(assert (= (and b!59221 res!32884) b!59227))

(assert (= (and b!59227 c!7556) b!59215))

(assert (= (and b!59227 (not c!7556)) b!59213))

(assert (= (and b!59215 res!32883) b!59226))

(assert (= (or b!59215 b!59213) bm!4424))

(declare-fun b_lambda!2613 () Bool)

(assert (=> (not b_lambda!2613) (not b!59233)))

(assert (=> b!59233 t!4806))

(declare-fun b_and!3585 () Bool)

(assert (= b_and!3581 (and (=> t!4806 result!2389) b_and!3585)))

(assert (=> b!59233 t!4808))

(declare-fun b_and!3587 () Bool)

(assert (= b_and!3583 (and (=> t!4808 result!2391) b_and!3587)))

(declare-fun m!50961 () Bool)

(assert (=> b!59226 m!50961))

(assert (=> b!59233 m!50843))

(assert (=> b!59233 m!50843))

(declare-fun m!50963 () Bool)

(assert (=> b!59233 m!50963))

(declare-fun m!50965 () Bool)

(assert (=> b!59233 m!50965))

(assert (=> b!59233 m!50849))

(assert (=> b!59233 m!50965))

(assert (=> b!59233 m!50849))

(declare-fun m!50967 () Bool)

(assert (=> b!59233 m!50967))

(assert (=> b!59216 m!50843))

(assert (=> b!59216 m!50843))

(assert (=> b!59216 m!50853))

(declare-fun m!50969 () Bool)

(assert (=> b!59220 m!50969))

(assert (=> b!59230 m!50843))

(declare-fun m!50971 () Bool)

(assert (=> b!59230 m!50971))

(declare-fun m!50973 () Bool)

(assert (=> b!59230 m!50973))

(declare-fun m!50975 () Bool)

(assert (=> b!59230 m!50975))

(declare-fun m!50977 () Bool)

(assert (=> b!59230 m!50977))

(declare-fun m!50979 () Bool)

(assert (=> b!59230 m!50979))

(declare-fun m!50981 () Bool)

(assert (=> b!59230 m!50981))

(assert (=> b!59230 m!50977))

(declare-fun m!50983 () Bool)

(assert (=> b!59230 m!50983))

(declare-fun m!50985 () Bool)

(assert (=> b!59230 m!50985))

(declare-fun m!50987 () Bool)

(assert (=> b!59230 m!50987))

(declare-fun m!50989 () Bool)

(assert (=> b!59230 m!50989))

(declare-fun m!50991 () Bool)

(assert (=> b!59230 m!50991))

(declare-fun m!50993 () Bool)

(assert (=> b!59230 m!50993))

(declare-fun m!50995 () Bool)

(assert (=> b!59230 m!50995))

(declare-fun m!50997 () Bool)

(assert (=> b!59230 m!50997))

(assert (=> b!59230 m!50997))

(declare-fun m!50999 () Bool)

(assert (=> b!59230 m!50999))

(assert (=> b!59230 m!50971))

(assert (=> b!59230 m!50991))

(declare-fun m!51001 () Bool)

(assert (=> b!59230 m!51001))

(declare-fun m!51003 () Bool)

(assert (=> bm!4428 m!51003))

(assert (=> b!59222 m!50843))

(assert (=> b!59222 m!50843))

(declare-fun m!51005 () Bool)

(assert (=> b!59222 m!51005))

(assert (=> d!11313 m!50833))

(declare-fun m!51007 () Bool)

(assert (=> b!59214 m!51007))

(declare-fun m!51009 () Bool)

(assert (=> bm!4425 m!51009))

(declare-fun m!51011 () Bool)

(assert (=> bm!4424 m!51011))

(assert (=> b!59224 m!50843))

(assert (=> b!59224 m!50843))

(assert (=> b!59224 m!50853))

(assert (=> bm!4427 m!50975))

(assert (=> bm!4401 d!11313))

(declare-fun d!11315 () Bool)

(declare-fun isEmpty!298 (Option!129) Bool)

(assert (=> d!11315 (= (isDefined!77 (getValueByKey!123 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))) (not (isEmpty!298 (getValueByKey!123 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))))

(declare-fun bs!2558 () Bool)

(assert (= bs!2558 d!11315))

(assert (=> bs!2558 m!50757))

(declare-fun m!51013 () Bool)

(assert (=> bs!2558 m!51013))

(assert (=> b!59005 d!11315))

(declare-fun b!59245 () Bool)

(declare-fun e!38982 () Option!129)

(assert (=> b!59245 (= e!38982 None!127)))

(declare-fun c!7563 () Bool)

(declare-fun d!11317 () Bool)

(assert (=> d!11317 (= c!7563 (and ((_ is Cons!1449) (toList!704 lt!23660)) (= (_1!1034 (h!2030 (toList!704 lt!23660))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(declare-fun e!38981 () Option!129)

(assert (=> d!11317 (= (getValueByKey!123 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) e!38981)))

(declare-fun b!59242 () Bool)

(assert (=> b!59242 (= e!38981 (Some!128 (_2!1034 (h!2030 (toList!704 lt!23660)))))))

(declare-fun b!59244 () Bool)

(assert (=> b!59244 (= e!38982 (getValueByKey!123 (t!4799 (toList!704 lt!23660)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59243 () Bool)

(assert (=> b!59243 (= e!38981 e!38982)))

(declare-fun c!7564 () Bool)

(assert (=> b!59243 (= c!7564 (and ((_ is Cons!1449) (toList!704 lt!23660)) (not (= (_1!1034 (h!2030 (toList!704 lt!23660))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))))

(assert (= (and d!11317 c!7563) b!59242))

(assert (= (and d!11317 (not c!7563)) b!59243))

(assert (= (and b!59243 c!7564) b!59244))

(assert (= (and b!59243 (not c!7564)) b!59245))

(assert (=> b!59244 m!50591))

(declare-fun m!51015 () Bool)

(assert (=> b!59244 m!51015))

(assert (=> b!59005 d!11317))

(declare-fun d!11319 () Bool)

(assert (=> d!11319 (= (apply!66 lt!23743 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1083 (getValueByKey!123 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2559 () Bool)

(assert (= bs!2559 d!11319))

(declare-fun m!51017 () Bool)

(assert (=> bs!2559 m!51017))

(assert (=> bs!2559 m!51017))

(declare-fun m!51019 () Bool)

(assert (=> bs!2559 m!51019))

(assert (=> b!58989 d!11319))

(declare-fun d!11321 () Bool)

(assert (=> d!11321 (= (get!1081 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2380 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> b!59130 d!11321))

(declare-fun b!59258 () Bool)

(declare-fun e!38989 () SeekEntryResult!237)

(assert (=> b!59258 (= e!38989 Undefined!237)))

(declare-fun b!59259 () Bool)

(declare-fun e!38991 () SeekEntryResult!237)

(declare-fun lt!23938 () SeekEntryResult!237)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3720 (_ BitVec 32)) SeekEntryResult!237)

(assert (=> b!59259 (= e!38991 (seekKeyOrZeroReturnVacant!0 (x!10013 lt!23938) (index!3073 lt!23938) (index!3073 lt!23938) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(declare-fun b!59260 () Bool)

(assert (=> b!59260 (= e!38991 (MissingZero!237 (index!3073 lt!23938)))))

(declare-fun d!11323 () Bool)

(declare-fun lt!23939 () SeekEntryResult!237)

(assert (=> d!11323 (and (or ((_ is Undefined!237) lt!23939) (not ((_ is Found!237) lt!23939)) (and (bvsge (index!3072 lt!23939) #b00000000000000000000000000000000) (bvslt (index!3072 lt!23939) (size!2010 (_keys!3667 newMap!16))))) (or ((_ is Undefined!237) lt!23939) ((_ is Found!237) lt!23939) (not ((_ is MissingZero!237) lt!23939)) (and (bvsge (index!3071 lt!23939) #b00000000000000000000000000000000) (bvslt (index!3071 lt!23939) (size!2010 (_keys!3667 newMap!16))))) (or ((_ is Undefined!237) lt!23939) ((_ is Found!237) lt!23939) ((_ is MissingZero!237) lt!23939) (not ((_ is MissingVacant!237) lt!23939)) (and (bvsge (index!3074 lt!23939) #b00000000000000000000000000000000) (bvslt (index!3074 lt!23939) (size!2010 (_keys!3667 newMap!16))))) (or ((_ is Undefined!237) lt!23939) (ite ((_ is Found!237) lt!23939) (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23939)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (ite ((_ is MissingZero!237) lt!23939) (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3071 lt!23939)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!237) lt!23939) (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3074 lt!23939)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11323 (= lt!23939 e!38989)))

(declare-fun c!7573 () Bool)

(assert (=> d!11323 (= c!7573 (and ((_ is Intermediate!237) lt!23938) (undefined!1049 lt!23938)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3720 (_ BitVec 32)) SeekEntryResult!237)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!11323 (= lt!23938 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (mask!5927 newMap!16)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(assert (=> d!11323 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11323 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)) lt!23939)))

(declare-fun b!59261 () Bool)

(declare-fun c!7572 () Bool)

(declare-fun lt!23937 () (_ BitVec 64))

(assert (=> b!59261 (= c!7572 (= lt!23937 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!38990 () SeekEntryResult!237)

(assert (=> b!59261 (= e!38990 e!38991)))

(declare-fun b!59262 () Bool)

(assert (=> b!59262 (= e!38989 e!38990)))

(assert (=> b!59262 (= lt!23937 (select (arr!1780 (_keys!3667 newMap!16)) (index!3073 lt!23938)))))

(declare-fun c!7571 () Bool)

(assert (=> b!59262 (= c!7571 (= lt!23937 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59263 () Bool)

(assert (=> b!59263 (= e!38990 (Found!237 (index!3073 lt!23938)))))

(assert (= (and d!11323 c!7573) b!59258))

(assert (= (and d!11323 (not c!7573)) b!59262))

(assert (= (and b!59262 c!7571) b!59263))

(assert (= (and b!59262 (not c!7571)) b!59261))

(assert (= (and b!59261 c!7572) b!59260))

(assert (= (and b!59261 (not c!7572)) b!59259))

(assert (=> b!59259 m!50591))

(declare-fun m!51021 () Bool)

(assert (=> b!59259 m!51021))

(declare-fun m!51023 () Bool)

(assert (=> d!11323 m!51023))

(declare-fun m!51025 () Bool)

(assert (=> d!11323 m!51025))

(assert (=> d!11323 m!50591))

(declare-fun m!51027 () Bool)

(assert (=> d!11323 m!51027))

(declare-fun m!51029 () Bool)

(assert (=> d!11323 m!51029))

(declare-fun m!51031 () Bool)

(assert (=> d!11323 m!51031))

(assert (=> d!11323 m!50833))

(assert (=> d!11323 m!50591))

(assert (=> d!11323 m!51025))

(declare-fun m!51033 () Bool)

(assert (=> b!59262 m!51033))

(assert (=> bm!4390 d!11323))

(declare-fun b!59280 () Bool)

(declare-fun e!39000 () Bool)

(declare-fun lt!23945 () SeekEntryResult!237)

(assert (=> b!59280 (= e!39000 ((_ is Undefined!237) lt!23945))))

(declare-fun b!59281 () Bool)

(declare-fun e!39002 () Bool)

(declare-fun call!4437 () Bool)

(assert (=> b!59281 (= e!39002 (not call!4437))))

(declare-fun bm!4433 () Bool)

(assert (=> bm!4433 (= call!4437 (arrayContainsKey!0 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!4434 () Bool)

(declare-fun call!4436 () Bool)

(declare-fun c!7579 () Bool)

(assert (=> bm!4434 (= call!4436 (inRange!0 (ite c!7579 (index!3071 lt!23945) (index!3074 lt!23945)) (mask!5927 newMap!16)))))

(declare-fun b!59282 () Bool)

(declare-fun e!39001 () Bool)

(assert (=> b!59282 (= e!39001 e!39000)))

(declare-fun c!7578 () Bool)

(assert (=> b!59282 (= c!7578 ((_ is MissingVacant!237) lt!23945))))

(declare-fun b!59283 () Bool)

(declare-fun res!32901 () Bool)

(declare-fun e!39003 () Bool)

(assert (=> b!59283 (=> (not res!32901) (not e!39003))))

(assert (=> b!59283 (= res!32901 call!4436)))

(assert (=> b!59283 (= e!39000 e!39003)))

(declare-fun b!59285 () Bool)

(declare-fun res!32900 () Bool)

(assert (=> b!59285 (=> (not res!32900) (not e!39003))))

(assert (=> b!59285 (= res!32900 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3074 lt!23945)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59285 (and (bvsge (index!3074 lt!23945) #b00000000000000000000000000000000) (bvslt (index!3074 lt!23945) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59286 () Bool)

(assert (=> b!59286 (and (bvsge (index!3071 lt!23945) #b00000000000000000000000000000000) (bvslt (index!3071 lt!23945) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun res!32902 () Bool)

(assert (=> b!59286 (= res!32902 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3071 lt!23945)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59286 (=> (not res!32902) (not e!39002))))

(declare-fun b!59287 () Bool)

(assert (=> b!59287 (= e!39001 e!39002)))

(declare-fun res!32899 () Bool)

(assert (=> b!59287 (= res!32899 call!4436)))

(assert (=> b!59287 (=> (not res!32899) (not e!39002))))

(declare-fun b!59284 () Bool)

(assert (=> b!59284 (= e!39003 (not call!4437))))

(declare-fun d!11325 () Bool)

(assert (=> d!11325 e!39001))

(assert (=> d!11325 (= c!7579 ((_ is MissingZero!237) lt!23945))))

(assert (=> d!11325 (= lt!23945 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(declare-fun lt!23944 () Unit!1553)

(declare-fun choose!311 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 64) Int) Unit!1553)

(assert (=> d!11325 (= lt!23944 (choose!311 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (defaultEntry!2043 newMap!16)))))

(assert (=> d!11325 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11325 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (defaultEntry!2043 newMap!16)) lt!23944)))

(assert (= (and d!11325 c!7579) b!59287))

(assert (= (and d!11325 (not c!7579)) b!59282))

(assert (= (and b!59287 res!32899) b!59286))

(assert (= (and b!59286 res!32902) b!59281))

(assert (= (and b!59282 c!7578) b!59283))

(assert (= (and b!59282 (not c!7578)) b!59280))

(assert (= (and b!59283 res!32901) b!59285))

(assert (= (and b!59285 res!32900) b!59284))

(assert (= (or b!59287 b!59283) bm!4434))

(assert (= (or b!59281 b!59284) bm!4433))

(assert (=> d!11325 m!50591))

(assert (=> d!11325 m!50803))

(assert (=> d!11325 m!50591))

(declare-fun m!51035 () Bool)

(assert (=> d!11325 m!51035))

(assert (=> d!11325 m!50833))

(declare-fun m!51037 () Bool)

(assert (=> bm!4434 m!51037))

(declare-fun m!51039 () Bool)

(assert (=> b!59285 m!51039))

(declare-fun m!51041 () Bool)

(assert (=> b!59286 m!51041))

(assert (=> bm!4433 m!50591))

(assert (=> bm!4433 m!50797))

(assert (=> bm!4400 d!11325))

(declare-fun d!11327 () Bool)

(assert (=> d!11327 (= (+!81 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!23948 () Unit!1553)

(declare-fun choose!312 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 V!2843 Int) Unit!1553)

(assert (=> d!11327 (= lt!23948 (choose!312 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2043 newMap!16)))))

(assert (=> d!11327 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11327 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2043 newMap!16)) lt!23948)))

(declare-fun bs!2560 () Bool)

(assert (= bs!2560 d!11327))

(assert (=> bs!2560 m!50619))

(declare-fun m!51043 () Bool)

(assert (=> bs!2560 m!51043))

(assert (=> bs!2560 m!50697))

(declare-fun m!51045 () Bool)

(assert (=> bs!2560 m!51045))

(assert (=> bs!2560 m!50697))

(assert (=> bs!2560 m!50833))

(assert (=> bs!2560 m!50619))

(declare-fun m!51047 () Bool)

(assert (=> bs!2560 m!51047))

(assert (=> b!59113 d!11327))

(declare-fun d!11329 () Bool)

(assert (=> d!11329 (isDefined!77 (getValueByKey!123 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun lt!23951 () Unit!1553)

(declare-fun choose!313 (List!1453 (_ BitVec 64)) Unit!1553)

(assert (=> d!11329 (= lt!23951 (choose!313 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun e!39006 () Bool)

(assert (=> d!11329 e!39006))

(declare-fun res!32905 () Bool)

(assert (=> d!11329 (=> (not res!32905) (not e!39006))))

(declare-fun isStrictlySorted!279 (List!1453) Bool)

(assert (=> d!11329 (= res!32905 (isStrictlySorted!279 (toList!704 lt!23660)))))

(assert (=> d!11329 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) lt!23951)))

(declare-fun b!59290 () Bool)

(assert (=> b!59290 (= e!39006 (containsKey!127 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (= (and d!11329 res!32905) b!59290))

(assert (=> d!11329 m!50591))

(assert (=> d!11329 m!50757))

(assert (=> d!11329 m!50757))

(assert (=> d!11329 m!50759))

(assert (=> d!11329 m!50591))

(declare-fun m!51049 () Bool)

(assert (=> d!11329 m!51049))

(declare-fun m!51051 () Bool)

(assert (=> d!11329 m!51051))

(assert (=> b!59290 m!50591))

(assert (=> b!59290 m!50753))

(assert (=> b!59003 d!11329))

(assert (=> b!59003 d!11315))

(assert (=> b!59003 d!11317))

(declare-fun b!59315 () Bool)

(declare-fun e!39026 () ListLongMap!1377)

(declare-fun e!39025 () ListLongMap!1377)

(assert (=> b!59315 (= e!39026 e!39025)))

(declare-fun c!7590 () Bool)

(assert (=> b!59315 (= c!7590 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!59316 () Bool)

(declare-fun e!39022 () Bool)

(declare-fun e!39027 () Bool)

(assert (=> b!59316 (= e!39022 e!39027)))

(declare-fun c!7589 () Bool)

(declare-fun e!39024 () Bool)

(assert (=> b!59316 (= c!7589 e!39024)))

(declare-fun res!32916 () Bool)

(assert (=> b!59316 (=> (not res!32916) (not e!39024))))

(assert (=> b!59316 (= res!32916 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun d!11331 () Bool)

(assert (=> d!11331 e!39022))

(declare-fun res!32915 () Bool)

(assert (=> d!11331 (=> (not res!32915) (not e!39022))))

(declare-fun lt!23968 () ListLongMap!1377)

(assert (=> d!11331 (= res!32915 (not (contains!692 lt!23968 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!11331 (= lt!23968 e!39026)))

(declare-fun c!7588 () Bool)

(assert (=> d!11331 (= c!7588 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> d!11331 (validMask!0 (mask!5927 (v!2381 (underlying!225 thiss!992))))))

(assert (=> d!11331 (= (getCurrentListMapNoExtraKeys!44 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))) lt!23968)))

(declare-fun b!59317 () Bool)

(declare-fun res!32914 () Bool)

(assert (=> b!59317 (=> (not res!32914) (not e!39022))))

(assert (=> b!59317 (= res!32914 (not (contains!692 lt!23968 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!59318 () Bool)

(declare-fun lt!23967 () Unit!1553)

(declare-fun lt!23969 () Unit!1553)

(assert (=> b!59318 (= lt!23967 lt!23969)))

(declare-fun lt!23970 () V!2843)

(declare-fun lt!23971 () (_ BitVec 64))

(declare-fun lt!23972 () (_ BitVec 64))

(declare-fun lt!23966 () ListLongMap!1377)

(assert (=> b!59318 (not (contains!692 (+!81 lt!23966 (tuple2!2049 lt!23971 lt!23970)) lt!23972))))

(declare-fun addStillNotContains!17 (ListLongMap!1377 (_ BitVec 64) V!2843 (_ BitVec 64)) Unit!1553)

(assert (=> b!59318 (= lt!23969 (addStillNotContains!17 lt!23966 lt!23971 lt!23970 lt!23972))))

(assert (=> b!59318 (= lt!23972 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!59318 (= lt!23970 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!59318 (= lt!23971 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!4440 () ListLongMap!1377)

(assert (=> b!59318 (= lt!23966 call!4440)))

(assert (=> b!59318 (= e!39025 (+!81 call!4440 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!59319 () Bool)

(assert (=> b!59319 (= e!39025 call!4440)))

(declare-fun b!59320 () Bool)

(declare-fun e!39021 () Bool)

(declare-fun isEmpty!299 (ListLongMap!1377) Bool)

(assert (=> b!59320 (= e!39021 (isEmpty!299 lt!23968))))

(declare-fun bm!4437 () Bool)

(assert (=> bm!4437 (= call!4440 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun b!59321 () Bool)

(assert (=> b!59321 (= e!39026 (ListLongMap!1378 Nil!1450))))

(declare-fun b!59322 () Bool)

(assert (=> b!59322 (= e!39021 (= lt!23968 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!59323 () Bool)

(assert (=> b!59323 (= e!39024 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!59323 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!59324 () Bool)

(assert (=> b!59324 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> b!59324 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2011 (_values!2026 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun e!39023 () Bool)

(assert (=> b!59324 (= e!39023 (= (apply!66 lt!23968 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!59325 () Bool)

(assert (=> b!59325 (= e!39027 e!39021)))

(declare-fun c!7591 () Bool)

(assert (=> b!59325 (= c!7591 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!59326 () Bool)

(assert (=> b!59326 (= e!39027 e!39023)))

(assert (=> b!59326 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun res!32917 () Bool)

(assert (=> b!59326 (= res!32917 (contains!692 lt!23968 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!59326 (=> (not res!32917) (not e!39023))))

(assert (= (and d!11331 c!7588) b!59321))

(assert (= (and d!11331 (not c!7588)) b!59315))

(assert (= (and b!59315 c!7590) b!59318))

(assert (= (and b!59315 (not c!7590)) b!59319))

(assert (= (or b!59318 b!59319) bm!4437))

(assert (= (and d!11331 res!32915) b!59317))

(assert (= (and b!59317 res!32914) b!59316))

(assert (= (and b!59316 res!32916) b!59323))

(assert (= (and b!59316 c!7589) b!59326))

(assert (= (and b!59316 (not c!7589)) b!59325))

(assert (= (and b!59326 res!32917) b!59324))

(assert (= (and b!59325 c!7591) b!59322))

(assert (= (and b!59325 (not c!7591)) b!59320))

(declare-fun b_lambda!2615 () Bool)

(assert (=> (not b_lambda!2615) (not b!59318)))

(assert (=> b!59318 t!4796))

(declare-fun b_and!3589 () Bool)

(assert (= b_and!3585 (and (=> t!4796 result!2375) b_and!3589)))

(assert (=> b!59318 t!4798))

(declare-fun b_and!3591 () Bool)

(assert (= b_and!3587 (and (=> t!4798 result!2379) b_and!3591)))

(declare-fun b_lambda!2617 () Bool)

(assert (=> (not b_lambda!2617) (not b!59324)))

(assert (=> b!59324 t!4796))

(declare-fun b_and!3593 () Bool)

(assert (= b_and!3589 (and (=> t!4796 result!2375) b_and!3593)))

(assert (=> b!59324 t!4798))

(declare-fun b_and!3595 () Bool)

(assert (= b_and!3591 (and (=> t!4798 result!2379) b_and!3595)))

(declare-fun m!51053 () Bool)

(assert (=> d!11331 m!51053))

(assert (=> d!11331 m!50609))

(assert (=> b!59323 m!50685))

(assert (=> b!59323 m!50685))

(assert (=> b!59323 m!50707))

(declare-fun m!51055 () Bool)

(assert (=> b!59320 m!51055))

(assert (=> b!59326 m!50685))

(assert (=> b!59326 m!50685))

(declare-fun m!51057 () Bool)

(assert (=> b!59326 m!51057))

(declare-fun m!51059 () Bool)

(assert (=> b!59322 m!51059))

(declare-fun m!51061 () Bool)

(assert (=> b!59317 m!51061))

(assert (=> b!59324 m!50703))

(assert (=> b!59324 m!50617))

(assert (=> b!59324 m!50705))

(assert (=> b!59324 m!50703))

(assert (=> b!59324 m!50617))

(assert (=> b!59324 m!50685))

(assert (=> b!59324 m!50685))

(declare-fun m!51063 () Bool)

(assert (=> b!59324 m!51063))

(assert (=> b!59318 m!50703))

(assert (=> b!59318 m!50617))

(assert (=> b!59318 m!50705))

(assert (=> b!59318 m!50703))

(assert (=> b!59318 m!50617))

(declare-fun m!51065 () Bool)

(assert (=> b!59318 m!51065))

(declare-fun m!51067 () Bool)

(assert (=> b!59318 m!51067))

(declare-fun m!51069 () Bool)

(assert (=> b!59318 m!51069))

(assert (=> b!59318 m!50685))

(declare-fun m!51071 () Bool)

(assert (=> b!59318 m!51071))

(assert (=> b!59318 m!51065))

(assert (=> bm!4437 m!51059))

(assert (=> b!59315 m!50685))

(assert (=> b!59315 m!50685))

(assert (=> b!59315 m!50707))

(assert (=> bm!4337 d!11331))

(declare-fun d!11333 () Bool)

(declare-fun e!39030 () Bool)

(assert (=> d!11333 e!39030))

(declare-fun res!32923 () Bool)

(assert (=> d!11333 (=> (not res!32923) (not e!39030))))

(declare-fun lt!23978 () SeekEntryResult!237)

(assert (=> d!11333 (= res!32923 ((_ is Found!237) lt!23978))))

(assert (=> d!11333 (= lt!23978 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(declare-fun lt!23977 () Unit!1553)

(declare-fun choose!314 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 64) Int) Unit!1553)

(assert (=> d!11333 (= lt!23977 (choose!314 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (defaultEntry!2043 newMap!16)))))

(assert (=> d!11333 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11333 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (defaultEntry!2043 newMap!16)) lt!23977)))

(declare-fun b!59331 () Bool)

(declare-fun res!32922 () Bool)

(assert (=> b!59331 (=> (not res!32922) (not e!39030))))

(assert (=> b!59331 (= res!32922 (inRange!0 (index!3072 lt!23978) (mask!5927 newMap!16)))))

(declare-fun b!59332 () Bool)

(assert (=> b!59332 (= e!39030 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23978)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> b!59332 (and (bvsge (index!3072 lt!23978) #b00000000000000000000000000000000) (bvslt (index!3072 lt!23978) (size!2010 (_keys!3667 newMap!16))))))

(assert (= (and d!11333 res!32923) b!59331))

(assert (= (and b!59331 res!32922) b!59332))

(assert (=> d!11333 m!50591))

(assert (=> d!11333 m!50803))

(assert (=> d!11333 m!50591))

(declare-fun m!51073 () Bool)

(assert (=> d!11333 m!51073))

(assert (=> d!11333 m!50833))

(declare-fun m!51075 () Bool)

(assert (=> b!59331 m!51075))

(declare-fun m!51077 () Bool)

(assert (=> b!59332 m!51077))

(assert (=> bm!4399 d!11333))

(assert (=> d!11247 d!11251))

(declare-fun d!11335 () Bool)

(assert (=> d!11335 (not (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!11335 true))

(declare-fun _$68!31 () Unit!1553)

(assert (=> d!11335 (= (choose!68 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451)) _$68!31)))

(declare-fun bs!2561 () Bool)

(assert (= bs!2561 d!11335))

(assert (=> bs!2561 m!50591))

(assert (=> bs!2561 m!50603))

(assert (=> d!11247 d!11335))

(declare-fun d!11337 () Bool)

(declare-fun e!39050 () Bool)

(assert (=> d!11337 e!39050))

(declare-fun res!32949 () Bool)

(assert (=> d!11337 (=> (not res!32949) (not e!39050))))

(declare-fun lt!24051 () tuple2!2046)

(assert (=> d!11337 (= res!32949 (_1!1033 lt!24051))))

(assert (=> d!11337 (= lt!24051 (tuple2!2047 true (LongMapFixedSize!619 (defaultEntry!2043 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (bvadd (_size!358 newMap!16) #b00000000000000000000000000000001) (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (_vacant!358 newMap!16))))))

(declare-fun lt!24063 () Unit!1553)

(declare-fun lt!24054 () Unit!1553)

(assert (=> d!11337 (= lt!24063 lt!24054)))

(declare-fun lt!24047 () array!3722)

(declare-fun lt!24048 () array!3720)

(assert (=> d!11337 (contains!692 (getCurrentListMap!401 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (select (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839))))))

(assert (=> d!11337 (= lt!24054 (lemmaValidKeyInArrayIsInListMap!73 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (defaultEntry!2043 newMap!16)))))

(assert (=> d!11337 (= lt!24047 (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))))

(assert (=> d!11337 (= lt!24048 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun lt!24040 () Unit!1553)

(declare-fun lt!24043 () Unit!1553)

(assert (=> d!11337 (= lt!24040 lt!24043)))

(declare-fun lt!24050 () array!3720)

(assert (=> d!11337 (= (arrayCountValidKeys!0 lt!24050 (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (bvadd (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3720 (_ BitVec 32)) Unit!1553)

(assert (=> d!11337 (= lt!24043 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!24050 (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839))))))

(assert (=> d!11337 (= lt!24050 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun lt!24053 () Unit!1553)

(declare-fun lt!24065 () Unit!1553)

(assert (=> d!11337 (= lt!24053 lt!24065)))

(declare-fun lt!24052 () array!3720)

(assert (=> d!11337 (arrayContainsKey!0 lt!24052 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3720 (_ BitVec 64) (_ BitVec 32)) Unit!1553)

(assert (=> d!11337 (= lt!24065 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!24052 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839))))))

(assert (=> d!11337 (= lt!24052 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun lt!24064 () Unit!1553)

(declare-fun lt!24042 () Unit!1553)

(assert (=> d!11337 (= lt!24064 lt!24042)))

(assert (=> d!11337 (= (+!81 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!401 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!5 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 32) (_ BitVec 64) V!2843 Int) Unit!1553)

(assert (=> d!11337 (= lt!24042 (lemmaAddValidKeyToArrayThenAddPairToListMap!5 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24062 () Unit!1553)

(declare-fun lt!24068 () Unit!1553)

(assert (=> d!11337 (= lt!24062 lt!24068)))

(assert (=> d!11337 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (mask!5927 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3720 (_ BitVec 32) (_ BitVec 32)) Unit!1553)

(assert (=> d!11337 (= lt!24068 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (mask!5927 newMap!16)))))

(declare-fun lt!24058 () Unit!1553)

(declare-fun lt!24044 () Unit!1553)

(assert (=> d!11337 (= lt!24058 lt!24044)))

(assert (=> d!11337 (= (arrayCountValidKeys!0 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3667 newMap!16) #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3720 (_ BitVec 32) (_ BitVec 64)) Unit!1553)

(assert (=> d!11337 (= lt!24044 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3667 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun lt!24060 () Unit!1553)

(declare-fun lt!24061 () Unit!1553)

(assert (=> d!11337 (= lt!24060 lt!24061)))

(declare-fun lt!24041 () (_ BitVec 32))

(declare-fun lt!24045 () List!1454)

(assert (=> d!11337 (arrayNoDuplicates!0 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) lt!24041 lt!24045)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3720 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1454) Unit!1553)

(assert (=> d!11337 (= lt!24061 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) lt!24041 lt!24045))))

(assert (=> d!11337 (= lt!24045 Nil!1451)))

(assert (=> d!11337 (= lt!24041 #b00000000000000000000000000000000)))

(declare-fun lt!24056 () Unit!1553)

(declare-fun e!39048 () Unit!1553)

(assert (=> d!11337 (= lt!24056 e!39048)))

(declare-fun c!7600 () Bool)

(assert (=> d!11337 (= c!7600 (arrayContainsKey!0 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!24046 () Unit!1553)

(declare-fun e!39047 () Unit!1553)

(assert (=> d!11337 (= lt!24046 e!39047)))

(declare-fun c!7601 () Bool)

(assert (=> d!11337 (= c!7601 (contains!692 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11337 (valid!249 newMap!16)))

(assert (=> d!11337 (= (updateHelperNewKey!15 newMap!16 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839))) lt!24051)))

(declare-fun b!59367 () Bool)

(declare-fun Unit!1568 () Unit!1553)

(assert (=> b!59367 (= e!39048 Unit!1568)))

(declare-fun lt!24055 () Unit!1553)

(declare-fun lemmaArrayContainsKeyThenInListMap!5 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 64) (_ BitVec 32) Int) Unit!1553)

(assert (=> b!59367 (= lt!24055 (lemmaArrayContainsKeyThenInListMap!5 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(assert (=> b!59367 (contains!692 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))

(declare-fun lt!24049 () Unit!1553)

(assert (=> b!59367 (= lt!24049 lt!24055)))

(assert (=> b!59367 false))

(declare-fun bm!4446 () Bool)

(declare-fun call!4452 () Bool)

(declare-fun call!4451 () Bool)

(assert (=> bm!4446 (= call!4452 call!4451)))

(declare-fun b!59368 () Bool)

(declare-fun res!32948 () Bool)

(assert (=> b!59368 (=> (not res!32948) (not e!39050))))

(assert (=> b!59368 (= res!32948 (contains!692 (map!1107 (_2!1033 lt!24051)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59369 () Bool)

(declare-fun res!32950 () Bool)

(declare-fun e!39051 () Bool)

(assert (=> b!59369 (=> (not res!32950) (not e!39051))))

(declare-fun lt!24039 () SeekEntryResult!237)

(assert (=> b!59369 (= res!32950 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3071 lt!24039)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!4449 () Bool)

(declare-fun bm!4447 () Bool)

(assert (=> bm!4447 (= call!4449 (arrayContainsKey!0 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!59370 () Bool)

(declare-fun Unit!1569 () Unit!1553)

(assert (=> b!59370 (= e!39047 Unit!1569)))

(declare-fun lt!24057 () Unit!1553)

(assert (=> b!59370 (= lt!24057 (lemmaInListMapThenSeekEntryOrOpenFindsIt!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24066 () SeekEntryResult!237)

(declare-fun call!4450 () SeekEntryResult!237)

(assert (=> b!59370 (= lt!24066 call!4450)))

(declare-fun res!32943 () Bool)

(assert (=> b!59370 (= res!32943 ((_ is Found!237) lt!24066))))

(declare-fun e!39052 () Bool)

(assert (=> b!59370 (=> (not res!32943) (not e!39052))))

(assert (=> b!59370 e!39052))

(declare-fun lt!24067 () Unit!1553)

(assert (=> b!59370 (= lt!24067 lt!24057)))

(assert (=> b!59370 false))

(declare-fun b!59371 () Bool)

(assert (=> b!59371 (= e!39052 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!24066)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59372 () Bool)

(declare-fun Unit!1570 () Unit!1553)

(assert (=> b!59372 (= e!39048 Unit!1570)))

(declare-fun b!59373 () Bool)

(declare-fun lt!24059 () Unit!1553)

(assert (=> b!59373 (= e!39047 lt!24059)))

(assert (=> b!59373 (= lt!24059 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (defaultEntry!2043 newMap!16)))))

(assert (=> b!59373 (= lt!24039 call!4450)))

(declare-fun c!7602 () Bool)

(assert (=> b!59373 (= c!7602 ((_ is MissingZero!237) lt!24039))))

(declare-fun e!39049 () Bool)

(assert (=> b!59373 e!39049))

(declare-fun b!59374 () Bool)

(assert (=> b!59374 (= e!39051 (not call!4449))))

(declare-fun b!59375 () Bool)

(declare-fun c!7603 () Bool)

(assert (=> b!59375 (= c!7603 ((_ is MissingVacant!237) lt!24039))))

(declare-fun e!39054 () Bool)

(assert (=> b!59375 (= e!39049 e!39054)))

(declare-fun b!59376 () Bool)

(assert (=> b!59376 (= e!39054 ((_ is Undefined!237) lt!24039))))

(declare-fun b!59377 () Bool)

(declare-fun res!32946 () Bool)

(assert (=> b!59377 (= res!32946 call!4451)))

(assert (=> b!59377 (=> (not res!32946) (not e!39052))))

(declare-fun b!59378 () Bool)

(declare-fun res!32944 () Bool)

(assert (=> b!59378 (=> (not res!32944) (not e!39050))))

(assert (=> b!59378 (= res!32944 (valid!249 (_2!1033 lt!24051)))))

(declare-fun b!59379 () Bool)

(declare-fun res!32947 () Bool)

(assert (=> b!59379 (=> (not res!32947) (not e!39051))))

(assert (=> b!59379 (= res!32947 call!4452)))

(assert (=> b!59379 (= e!39049 e!39051)))

(declare-fun bm!4448 () Bool)

(assert (=> bm!4448 (= call!4450 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(declare-fun b!59380 () Bool)

(declare-fun res!32942 () Bool)

(assert (=> b!59380 (= res!32942 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3074 lt!24039)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!39053 () Bool)

(assert (=> b!59380 (=> (not res!32942) (not e!39053))))

(declare-fun b!59381 () Bool)

(assert (=> b!59381 (= e!39053 (not call!4449))))

(declare-fun b!59382 () Bool)

(assert (=> b!59382 (= e!39054 e!39053)))

(declare-fun res!32945 () Bool)

(assert (=> b!59382 (= res!32945 call!4452)))

(assert (=> b!59382 (=> (not res!32945) (not e!39053))))

(declare-fun bm!4449 () Bool)

(assert (=> bm!4449 (= call!4451 (inRange!0 (ite c!7601 (index!3072 lt!24066) (ite c!7602 (index!3071 lt!24039) (index!3074 lt!24039))) (mask!5927 newMap!16)))))

(declare-fun b!59383 () Bool)

(assert (=> b!59383 (= e!39050 (= (map!1107 (_2!1033 lt!24051)) (+!81 (map!1107 newMap!16) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!11337 c!7601) b!59370))

(assert (= (and d!11337 (not c!7601)) b!59373))

(assert (= (and b!59370 res!32943) b!59377))

(assert (= (and b!59377 res!32946) b!59371))

(assert (= (and b!59373 c!7602) b!59379))

(assert (= (and b!59373 (not c!7602)) b!59375))

(assert (= (and b!59379 res!32947) b!59369))

(assert (= (and b!59369 res!32950) b!59374))

(assert (= (and b!59375 c!7603) b!59382))

(assert (= (and b!59375 (not c!7603)) b!59376))

(assert (= (and b!59382 res!32945) b!59380))

(assert (= (and b!59380 res!32942) b!59381))

(assert (= (or b!59379 b!59382) bm!4446))

(assert (= (or b!59374 b!59381) bm!4447))

(assert (= (or b!59377 bm!4446) bm!4449))

(assert (= (or b!59370 b!59373) bm!4448))

(assert (= (and d!11337 c!7600) b!59367))

(assert (= (and d!11337 (not c!7600)) b!59372))

(assert (= (and d!11337 res!32949) b!59378))

(assert (= (and b!59378 res!32944) b!59368))

(assert (= (and b!59368 res!32948) b!59383))

(declare-fun m!51079 () Bool)

(assert (=> b!59378 m!51079))

(assert (=> b!59373 m!50591))

(assert (=> b!59373 m!50799))

(declare-fun m!51081 () Bool)

(assert (=> b!59380 m!51081))

(declare-fun m!51083 () Bool)

(assert (=> b!59369 m!51083))

(assert (=> b!59370 m!50591))

(assert (=> b!59370 m!50809))

(declare-fun m!51085 () Bool)

(assert (=> bm!4449 m!51085))

(assert (=> bm!4448 m!50591))

(assert (=> bm!4448 m!50803))

(assert (=> bm!4447 m!50591))

(assert (=> bm!4447 m!50797))

(assert (=> d!11337 m!50697))

(declare-fun m!51087 () Bool)

(assert (=> d!11337 m!51087))

(declare-fun m!51089 () Bool)

(assert (=> d!11337 m!51089))

(assert (=> d!11337 m!50591))

(declare-fun m!51091 () Bool)

(assert (=> d!11337 m!51091))

(declare-fun m!51093 () Bool)

(assert (=> d!11337 m!51093))

(declare-fun m!51095 () Bool)

(assert (=> d!11337 m!51095))

(declare-fun m!51097 () Bool)

(assert (=> d!11337 m!51097))

(assert (=> d!11337 m!50627))

(assert (=> d!11337 m!50697))

(assert (=> d!11337 m!50591))

(assert (=> d!11337 m!50793))

(assert (=> d!11337 m!50591))

(assert (=> d!11337 m!50797))

(assert (=> d!11337 m!50591))

(declare-fun m!51099 () Bool)

(assert (=> d!11337 m!51099))

(declare-fun m!51101 () Bool)

(assert (=> d!11337 m!51101))

(assert (=> d!11337 m!50591))

(declare-fun m!51103 () Bool)

(assert (=> d!11337 m!51103))

(declare-fun m!51105 () Bool)

(assert (=> d!11337 m!51105))

(assert (=> d!11337 m!50591))

(assert (=> d!11337 m!50619))

(declare-fun m!51107 () Bool)

(assert (=> d!11337 m!51107))

(assert (=> d!11337 m!50591))

(declare-fun m!51109 () Bool)

(assert (=> d!11337 m!51109))

(assert (=> d!11337 m!50675))

(assert (=> d!11337 m!51093))

(assert (=> d!11337 m!51095))

(declare-fun m!51111 () Bool)

(assert (=> d!11337 m!51111))

(declare-fun m!51113 () Bool)

(assert (=> d!11337 m!51113))

(assert (=> d!11337 m!50591))

(declare-fun m!51115 () Bool)

(assert (=> d!11337 m!51115))

(declare-fun m!51117 () Bool)

(assert (=> d!11337 m!51117))

(declare-fun m!51119 () Bool)

(assert (=> d!11337 m!51119))

(declare-fun m!51121 () Bool)

(assert (=> d!11337 m!51121))

(assert (=> d!11337 m!50697))

(declare-fun m!51123 () Bool)

(assert (=> d!11337 m!51123))

(assert (=> b!59367 m!50591))

(declare-fun m!51125 () Bool)

(assert (=> b!59367 m!51125))

(assert (=> b!59367 m!50697))

(assert (=> b!59367 m!50697))

(assert (=> b!59367 m!50591))

(assert (=> b!59367 m!50793))

(declare-fun m!51127 () Bool)

(assert (=> b!59371 m!51127))

(declare-fun m!51129 () Bool)

(assert (=> b!59368 m!51129))

(assert (=> b!59368 m!51129))

(assert (=> b!59368 m!50591))

(declare-fun m!51131 () Bool)

(assert (=> b!59368 m!51131))

(assert (=> b!59383 m!51129))

(assert (=> b!59383 m!50593))

(assert (=> b!59383 m!50593))

(declare-fun m!51133 () Bool)

(assert (=> b!59383 m!51133))

(assert (=> bm!4388 d!11337))

(assert (=> b!59086 d!11289))

(declare-fun d!11339 () Bool)

(declare-fun e!39057 () Bool)

(assert (=> d!11339 e!39057))

(declare-fun res!32953 () Bool)

(assert (=> d!11339 (=> (not res!32953) (not e!39057))))

(assert (=> d!11339 (= res!32953 (and (bvsge (index!3072 lt!23839) #b00000000000000000000000000000000) (bvslt (index!3072 lt!23839) (size!2010 (_keys!3667 newMap!16)))))))

(declare-fun lt!24071 () Unit!1553)

(declare-fun choose!315 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 32) Int) Unit!1553)

(assert (=> d!11339 (= lt!24071 (choose!315 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (index!3072 lt!23839) (defaultEntry!2043 newMap!16)))))

(assert (=> d!11339 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11339 (= (lemmaValidKeyInArrayIsInListMap!73 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (index!3072 lt!23839) (defaultEntry!2043 newMap!16)) lt!24071)))

(declare-fun b!59386 () Bool)

(assert (=> b!59386 (= e!39057 (contains!692 (getCurrentListMap!401 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839))))))

(assert (= (and d!11339 res!32953) b!59386))

(declare-fun m!51135 () Bool)

(assert (=> d!11339 m!51135))

(assert (=> d!11339 m!50833))

(declare-fun m!51137 () Bool)

(assert (=> b!59386 m!51137))

(assert (=> b!59386 m!50777))

(assert (=> b!59386 m!51137))

(assert (=> b!59386 m!50777))

(declare-fun m!51139 () Bool)

(assert (=> b!59386 m!51139))

(assert (=> b!59110 d!11339))

(declare-fun d!11341 () Bool)

(declare-fun e!39060 () Bool)

(assert (=> d!11341 e!39060))

(declare-fun res!32956 () Bool)

(assert (=> d!11341 (=> (not res!32956) (not e!39060))))

(assert (=> d!11341 (= res!32956 (and (bvsge (index!3072 lt!23839) #b00000000000000000000000000000000) (bvslt (index!3072 lt!23839) (size!2011 (_values!2026 newMap!16)))))))

(declare-fun lt!24074 () Unit!1553)

(declare-fun choose!316 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 32) (_ BitVec 64) V!2843 Int) Unit!1553)

(assert (=> d!11341 (= lt!24074 (choose!316 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (index!3072 lt!23839) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2043 newMap!16)))))

(assert (=> d!11341 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11341 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!15 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (index!3072 lt!23839) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2043 newMap!16)) lt!24074)))

(declare-fun b!59389 () Bool)

(assert (=> b!59389 (= e!39060 (= (+!81 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!401 (_keys!3667 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))))))

(assert (= (and d!11341 res!32956) b!59389))

(assert (=> d!11341 m!50591))

(assert (=> d!11341 m!50619))

(declare-fun m!51141 () Bool)

(assert (=> d!11341 m!51141))

(assert (=> d!11341 m!50833))

(assert (=> b!59389 m!50697))

(assert (=> b!59389 m!50697))

(assert (=> b!59389 m!51087))

(assert (=> b!59389 m!50787))

(declare-fun m!51143 () Bool)

(assert (=> b!59389 m!51143))

(assert (=> b!59110 d!11341))

(declare-fun d!11343 () Bool)

(declare-fun e!39061 () Bool)

(assert (=> d!11343 e!39061))

(declare-fun res!32957 () Bool)

(assert (=> d!11343 (=> res!32957 e!39061)))

(declare-fun lt!24075 () Bool)

(assert (=> d!11343 (= res!32957 (not lt!24075))))

(declare-fun lt!24078 () Bool)

(assert (=> d!11343 (= lt!24075 lt!24078)))

(declare-fun lt!24077 () Unit!1553)

(declare-fun e!39062 () Unit!1553)

(assert (=> d!11343 (= lt!24077 e!39062)))

(declare-fun c!7604 () Bool)

(assert (=> d!11343 (= c!7604 lt!24078)))

(assert (=> d!11343 (= lt!24078 (containsKey!127 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11343 (= (contains!692 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) lt!24075)))

(declare-fun b!59390 () Bool)

(declare-fun lt!24076 () Unit!1553)

(assert (=> b!59390 (= e!39062 lt!24076)))

(assert (=> b!59390 (= lt!24076 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> b!59390 (isDefined!77 (getValueByKey!123 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59391 () Bool)

(declare-fun Unit!1571 () Unit!1553)

(assert (=> b!59391 (= e!39062 Unit!1571)))

(declare-fun b!59392 () Bool)

(assert (=> b!59392 (= e!39061 (isDefined!77 (getValueByKey!123 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(assert (= (and d!11343 c!7604) b!59390))

(assert (= (and d!11343 (not c!7604)) b!59391))

(assert (= (and d!11343 (not res!32957)) b!59392))

(assert (=> d!11343 m!50591))

(declare-fun m!51145 () Bool)

(assert (=> d!11343 m!51145))

(assert (=> b!59390 m!50591))

(declare-fun m!51147 () Bool)

(assert (=> b!59390 m!51147))

(assert (=> b!59390 m!50591))

(declare-fun m!51149 () Bool)

(assert (=> b!59390 m!51149))

(assert (=> b!59390 m!51149))

(declare-fun m!51151 () Bool)

(assert (=> b!59390 m!51151))

(assert (=> b!59392 m!50591))

(assert (=> b!59392 m!51149))

(assert (=> b!59392 m!51149))

(assert (=> b!59392 m!51151))

(assert (=> b!59110 d!11343))

(assert (=> b!59110 d!11289))

(declare-fun d!11345 () Bool)

(assert (=> d!11345 (= (apply!66 lt!23743 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1083 (getValueByKey!123 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2562 () Bool)

(assert (= bs!2562 d!11345))

(declare-fun m!51153 () Bool)

(assert (=> bs!2562 m!51153))

(assert (=> bs!2562 m!51153))

(declare-fun m!51155 () Bool)

(assert (=> bs!2562 m!51155))

(assert (=> b!58983 d!11345))

(declare-fun bm!4450 () Bool)

(declare-fun call!4453 () ListLongMap!1377)

(declare-fun call!4455 () ListLongMap!1377)

(assert (=> bm!4450 (= call!4453 call!4455)))

(declare-fun d!11347 () Bool)

(declare-fun e!39064 () Bool)

(assert (=> d!11347 e!39064))

(declare-fun res!32965 () Bool)

(assert (=> d!11347 (=> (not res!32965) (not e!39064))))

(assert (=> d!11347 (= res!32965 (or (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))))

(declare-fun lt!24083 () ListLongMap!1377)

(declare-fun lt!24099 () ListLongMap!1377)

(assert (=> d!11347 (= lt!24083 lt!24099)))

(declare-fun lt!24088 () Unit!1553)

(declare-fun e!39072 () Unit!1553)

(assert (=> d!11347 (= lt!24088 e!39072)))

(declare-fun c!7606 () Bool)

(declare-fun e!39071 () Bool)

(assert (=> d!11347 (= c!7606 e!39071)))

(declare-fun res!32962 () Bool)

(assert (=> d!11347 (=> (not res!32962) (not e!39071))))

(assert (=> d!11347 (= res!32962 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun e!39075 () ListLongMap!1377)

(assert (=> d!11347 (= lt!24099 e!39075)))

(declare-fun c!7609 () Bool)

(assert (=> d!11347 (= c!7609 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11347 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11347 (= (getCurrentListMap!401 (_keys!3667 newMap!16) (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!24083)))

(declare-fun b!59393 () Bool)

(declare-fun e!39065 () Bool)

(declare-fun call!4454 () Bool)

(assert (=> b!59393 (= e!39065 (not call!4454))))

(declare-fun b!59394 () Bool)

(assert (=> b!59394 (= e!39075 (+!81 call!4455 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))

(declare-fun b!59395 () Bool)

(declare-fun e!39066 () Bool)

(assert (=> b!59395 (= e!39065 e!39066)))

(declare-fun res!32959 () Bool)

(assert (=> b!59395 (= res!32959 call!4454)))

(assert (=> b!59395 (=> (not res!32959) (not e!39066))))

(declare-fun b!59396 () Bool)

(declare-fun e!39063 () Bool)

(assert (=> b!59396 (= e!39063 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4451 () Bool)

(declare-fun call!4459 () ListLongMap!1377)

(declare-fun call!4457 () ListLongMap!1377)

(assert (=> bm!4451 (= call!4459 call!4457)))

(declare-fun b!59397 () Bool)

(declare-fun e!39067 () ListLongMap!1377)

(assert (=> b!59397 (= e!39067 call!4459)))

(declare-fun bm!4452 () Bool)

(assert (=> bm!4452 (= call!4454 (contains!692 lt!24083 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59398 () Bool)

(declare-fun Unit!1572 () Unit!1553)

(assert (=> b!59398 (= e!39072 Unit!1572)))

(declare-fun bm!4453 () Bool)

(declare-fun call!4456 () Bool)

(assert (=> bm!4453 (= call!4456 (contains!692 lt!24083 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59399 () Bool)

(declare-fun e!39069 () Bool)

(assert (=> b!59399 (= e!39069 (not call!4456))))

(declare-fun b!59400 () Bool)

(declare-fun e!39068 () Bool)

(assert (=> b!59400 (= e!39068 (= (apply!66 lt!24083 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1959 newMap!16)))))

(declare-fun bm!4454 () Bool)

(declare-fun call!4458 () ListLongMap!1377)

(assert (=> bm!4454 (= call!4457 call!4458)))

(declare-fun b!59401 () Bool)

(declare-fun res!32960 () Bool)

(assert (=> b!59401 (=> (not res!32960) (not e!39064))))

(assert (=> b!59401 (= res!32960 e!39069)))

(declare-fun c!7605 () Bool)

(assert (=> b!59401 (= c!7605 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!59402 () Bool)

(declare-fun e!39073 () Bool)

(declare-fun e!39070 () Bool)

(assert (=> b!59402 (= e!39073 e!39070)))

(declare-fun res!32958 () Bool)

(assert (=> b!59402 (=> (not res!32958) (not e!39070))))

(assert (=> b!59402 (= res!32958 (contains!692 lt!24083 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!59402 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59403 () Bool)

(assert (=> b!59403 (= e!39067 call!4453)))

(declare-fun b!59404 () Bool)

(assert (=> b!59404 (= e!39071 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4455 () Bool)

(assert (=> bm!4455 (= call!4458 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun b!59405 () Bool)

(declare-fun res!32961 () Bool)

(assert (=> b!59405 (=> (not res!32961) (not e!39064))))

(assert (=> b!59405 (= res!32961 e!39073)))

(declare-fun res!32963 () Bool)

(assert (=> b!59405 (=> res!32963 e!39073)))

(assert (=> b!59405 (= res!32963 (not e!39063))))

(declare-fun res!32964 () Bool)

(assert (=> b!59405 (=> (not res!32964) (not e!39063))))

(assert (=> b!59405 (= res!32964 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59406 () Bool)

(assert (=> b!59406 (= e!39066 (= (apply!66 lt!24083 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1959 newMap!16)))))

(declare-fun b!59407 () Bool)

(assert (=> b!59407 (= e!39064 e!39065)))

(declare-fun c!7608 () Bool)

(assert (=> b!59407 (= c!7608 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59408 () Bool)

(declare-fun c!7607 () Bool)

(assert (=> b!59408 (= c!7607 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!39074 () ListLongMap!1377)

(assert (=> b!59408 (= e!39074 e!39067)))

(declare-fun b!59409 () Bool)

(assert (=> b!59409 (= e!39069 e!39068)))

(declare-fun res!32966 () Bool)

(assert (=> b!59409 (= res!32966 call!4456)))

(assert (=> b!59409 (=> (not res!32966) (not e!39068))))

(declare-fun bm!4456 () Bool)

(declare-fun c!7610 () Bool)

(assert (=> bm!4456 (= call!4455 (+!81 (ite c!7609 call!4458 (ite c!7610 call!4457 call!4459)) (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(declare-fun b!59410 () Bool)

(declare-fun lt!24092 () Unit!1553)

(assert (=> b!59410 (= e!39072 lt!24092)))

(declare-fun lt!24097 () ListLongMap!1377)

(assert (=> b!59410 (= lt!24097 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24096 () (_ BitVec 64))

(assert (=> b!59410 (= lt!24096 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24079 () (_ BitVec 64))

(assert (=> b!59410 (= lt!24079 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24093 () Unit!1553)

(assert (=> b!59410 (= lt!24093 (addStillContains!42 lt!24097 lt!24096 (zeroValue!1959 newMap!16) lt!24079))))

(assert (=> b!59410 (contains!692 (+!81 lt!24097 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16))) lt!24079)))

(declare-fun lt!24080 () Unit!1553)

(assert (=> b!59410 (= lt!24080 lt!24093)))

(declare-fun lt!24094 () ListLongMap!1377)

(assert (=> b!59410 (= lt!24094 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24081 () (_ BitVec 64))

(assert (=> b!59410 (= lt!24081 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24085 () (_ BitVec 64))

(assert (=> b!59410 (= lt!24085 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24087 () Unit!1553)

(assert (=> b!59410 (= lt!24087 (addApplyDifferent!42 lt!24094 lt!24081 (minValue!1959 newMap!16) lt!24085))))

(assert (=> b!59410 (= (apply!66 (+!81 lt!24094 (tuple2!2049 lt!24081 (minValue!1959 newMap!16))) lt!24085) (apply!66 lt!24094 lt!24085))))

(declare-fun lt!24100 () Unit!1553)

(assert (=> b!59410 (= lt!24100 lt!24087)))

(declare-fun lt!24084 () ListLongMap!1377)

(assert (=> b!59410 (= lt!24084 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24095 () (_ BitVec 64))

(assert (=> b!59410 (= lt!24095 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24090 () (_ BitVec 64))

(assert (=> b!59410 (= lt!24090 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24098 () Unit!1553)

(assert (=> b!59410 (= lt!24098 (addApplyDifferent!42 lt!24084 lt!24095 (zeroValue!1959 newMap!16) lt!24090))))

(assert (=> b!59410 (= (apply!66 (+!81 lt!24084 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16))) lt!24090) (apply!66 lt!24084 lt!24090))))

(declare-fun lt!24082 () Unit!1553)

(assert (=> b!59410 (= lt!24082 lt!24098)))

(declare-fun lt!24086 () ListLongMap!1377)

(assert (=> b!59410 (= lt!24086 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24091 () (_ BitVec 64))

(assert (=> b!59410 (= lt!24091 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24089 () (_ BitVec 64))

(assert (=> b!59410 (= lt!24089 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!59410 (= lt!24092 (addApplyDifferent!42 lt!24086 lt!24091 (minValue!1959 newMap!16) lt!24089))))

(assert (=> b!59410 (= (apply!66 (+!81 lt!24086 (tuple2!2049 lt!24091 (minValue!1959 newMap!16))) lt!24089) (apply!66 lt!24086 lt!24089))))

(declare-fun b!59411 () Bool)

(assert (=> b!59411 (= e!39074 call!4453)))

(declare-fun b!59412 () Bool)

(assert (=> b!59412 (= e!39075 e!39074)))

(assert (=> b!59412 (= c!7610 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59413 () Bool)

(assert (=> b!59413 (= e!39070 (= (apply!66 lt!24083 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!59413 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))))))))

(assert (=> b!59413 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (= (and d!11347 c!7609) b!59394))

(assert (= (and d!11347 (not c!7609)) b!59412))

(assert (= (and b!59412 c!7610) b!59411))

(assert (= (and b!59412 (not c!7610)) b!59408))

(assert (= (and b!59408 c!7607) b!59403))

(assert (= (and b!59408 (not c!7607)) b!59397))

(assert (= (or b!59403 b!59397) bm!4451))

(assert (= (or b!59411 bm!4451) bm!4454))

(assert (= (or b!59411 b!59403) bm!4450))

(assert (= (or b!59394 bm!4454) bm!4455))

(assert (= (or b!59394 bm!4450) bm!4456))

(assert (= (and d!11347 res!32962) b!59404))

(assert (= (and d!11347 c!7606) b!59410))

(assert (= (and d!11347 (not c!7606)) b!59398))

(assert (= (and d!11347 res!32965) b!59405))

(assert (= (and b!59405 res!32964) b!59396))

(assert (= (and b!59405 (not res!32963)) b!59402))

(assert (= (and b!59402 res!32958) b!59413))

(assert (= (and b!59405 res!32961) b!59401))

(assert (= (and b!59401 c!7605) b!59409))

(assert (= (and b!59401 (not c!7605)) b!59399))

(assert (= (and b!59409 res!32966) b!59400))

(assert (= (or b!59409 b!59399) bm!4453))

(assert (= (and b!59401 res!32960) b!59407))

(assert (= (and b!59407 c!7608) b!59395))

(assert (= (and b!59407 (not c!7608)) b!59393))

(assert (= (and b!59395 res!32959) b!59406))

(assert (= (or b!59395 b!59393) bm!4452))

(declare-fun b_lambda!2619 () Bool)

(assert (=> (not b_lambda!2619) (not b!59413)))

(assert (=> b!59413 t!4806))

(declare-fun b_and!3597 () Bool)

(assert (= b_and!3593 (and (=> t!4806 result!2389) b_and!3597)))

(assert (=> b!59413 t!4808))

(declare-fun b_and!3599 () Bool)

(assert (= b_and!3595 (and (=> t!4808 result!2391) b_and!3599)))

(declare-fun m!51157 () Bool)

(assert (=> b!59406 m!51157))

(assert (=> b!59413 m!50843))

(assert (=> b!59413 m!50843))

(declare-fun m!51159 () Bool)

(assert (=> b!59413 m!51159))

(declare-fun m!51161 () Bool)

(assert (=> b!59413 m!51161))

(assert (=> b!59413 m!50849))

(assert (=> b!59413 m!51161))

(assert (=> b!59413 m!50849))

(declare-fun m!51163 () Bool)

(assert (=> b!59413 m!51163))

(assert (=> b!59396 m!50843))

(assert (=> b!59396 m!50843))

(assert (=> b!59396 m!50853))

(declare-fun m!51165 () Bool)

(assert (=> b!59400 m!51165))

(assert (=> b!59410 m!50843))

(declare-fun m!51167 () Bool)

(assert (=> b!59410 m!51167))

(declare-fun m!51169 () Bool)

(assert (=> b!59410 m!51169))

(declare-fun m!51171 () Bool)

(assert (=> b!59410 m!51171))

(declare-fun m!51173 () Bool)

(assert (=> b!59410 m!51173))

(declare-fun m!51175 () Bool)

(assert (=> b!59410 m!51175))

(declare-fun m!51177 () Bool)

(assert (=> b!59410 m!51177))

(assert (=> b!59410 m!51173))

(declare-fun m!51179 () Bool)

(assert (=> b!59410 m!51179))

(declare-fun m!51181 () Bool)

(assert (=> b!59410 m!51181))

(declare-fun m!51183 () Bool)

(assert (=> b!59410 m!51183))

(declare-fun m!51185 () Bool)

(assert (=> b!59410 m!51185))

(declare-fun m!51187 () Bool)

(assert (=> b!59410 m!51187))

(declare-fun m!51189 () Bool)

(assert (=> b!59410 m!51189))

(declare-fun m!51191 () Bool)

(assert (=> b!59410 m!51191))

(declare-fun m!51193 () Bool)

(assert (=> b!59410 m!51193))

(assert (=> b!59410 m!51193))

(declare-fun m!51195 () Bool)

(assert (=> b!59410 m!51195))

(assert (=> b!59410 m!51167))

(assert (=> b!59410 m!51187))

(declare-fun m!51197 () Bool)

(assert (=> b!59410 m!51197))

(declare-fun m!51199 () Bool)

(assert (=> bm!4456 m!51199))

(assert (=> b!59402 m!50843))

(assert (=> b!59402 m!50843))

(declare-fun m!51201 () Bool)

(assert (=> b!59402 m!51201))

(assert (=> d!11347 m!50833))

(declare-fun m!51203 () Bool)

(assert (=> b!59394 m!51203))

(declare-fun m!51205 () Bool)

(assert (=> bm!4453 m!51205))

(declare-fun m!51207 () Bool)

(assert (=> bm!4452 m!51207))

(assert (=> b!59404 m!50843))

(assert (=> b!59404 m!50843))

(assert (=> b!59404 m!50853))

(assert (=> bm!4455 m!51171))

(assert (=> bm!4410 d!11347))

(declare-fun d!11349 () Bool)

(declare-fun e!39076 () Bool)

(assert (=> d!11349 e!39076))

(declare-fun res!32967 () Bool)

(assert (=> d!11349 (=> res!32967 e!39076)))

(declare-fun lt!24101 () Bool)

(assert (=> d!11349 (= res!32967 (not lt!24101))))

(declare-fun lt!24104 () Bool)

(assert (=> d!11349 (= lt!24101 lt!24104)))

(declare-fun lt!24103 () Unit!1553)

(declare-fun e!39077 () Unit!1553)

(assert (=> d!11349 (= lt!24103 e!39077)))

(declare-fun c!7611 () Bool)

(assert (=> d!11349 (= c!7611 lt!24104)))

(assert (=> d!11349 (= lt!24104 (containsKey!127 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!11349 (= (contains!692 lt!23743 #b0000000000000000000000000000000000000000000000000000000000000000) lt!24101)))

(declare-fun b!59414 () Bool)

(declare-fun lt!24102 () Unit!1553)

(assert (=> b!59414 (= e!39077 lt!24102)))

(assert (=> b!59414 (= lt!24102 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59414 (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59415 () Bool)

(declare-fun Unit!1573 () Unit!1553)

(assert (=> b!59415 (= e!39077 Unit!1573)))

(declare-fun b!59416 () Bool)

(assert (=> b!59416 (= e!39076 (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11349 c!7611) b!59414))

(assert (= (and d!11349 (not c!7611)) b!59415))

(assert (= (and d!11349 (not res!32967)) b!59416))

(declare-fun m!51209 () Bool)

(assert (=> d!11349 m!51209))

(declare-fun m!51211 () Bool)

(assert (=> b!59414 m!51211))

(assert (=> b!59414 m!51153))

(assert (=> b!59414 m!51153))

(declare-fun m!51213 () Bool)

(assert (=> b!59414 m!51213))

(assert (=> b!59416 m!51153))

(assert (=> b!59416 m!51153))

(assert (=> b!59416 m!51213))

(assert (=> bm!4335 d!11349))

(assert (=> bm!4395 d!11263))

(declare-fun d!11351 () Bool)

(declare-fun res!32968 () Bool)

(declare-fun e!39078 () Bool)

(assert (=> d!11351 (=> res!32968 e!39078)))

(assert (=> d!11351 (= res!32968 (= (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11351 (= (arrayContainsKey!0 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000) e!39078)))

(declare-fun b!59417 () Bool)

(declare-fun e!39079 () Bool)

(assert (=> b!59417 (= e!39078 e!39079)))

(declare-fun res!32969 () Bool)

(assert (=> b!59417 (=> (not res!32969) (not e!39079))))

(assert (=> b!59417 (= res!32969 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59418 () Bool)

(assert (=> b!59418 (= e!39079 (arrayContainsKey!0 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!11351 (not res!32968)) b!59417))

(assert (= (and b!59417 res!32969) b!59418))

(assert (=> d!11351 m!50843))

(assert (=> b!59418 m!50591))

(declare-fun m!51215 () Bool)

(assert (=> b!59418 m!51215))

(assert (=> bm!4404 d!11351))

(declare-fun d!11353 () Bool)

(declare-fun res!32970 () Bool)

(declare-fun e!39080 () Bool)

(assert (=> d!11353 (=> (not res!32970) (not e!39080))))

(assert (=> d!11353 (= res!32970 (simpleValid!41 (v!2381 (underlying!225 thiss!992))))))

(assert (=> d!11353 (= (valid!249 (v!2381 (underlying!225 thiss!992))) e!39080)))

(declare-fun b!59419 () Bool)

(declare-fun res!32971 () Bool)

(assert (=> b!59419 (=> (not res!32971) (not e!39080))))

(assert (=> b!59419 (= res!32971 (= (arrayCountValidKeys!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000000 (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))) (_size!358 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun b!59420 () Bool)

(declare-fun res!32972 () Bool)

(assert (=> b!59420 (=> (not res!32972) (not e!39080))))

(assert (=> b!59420 (= res!32972 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun b!59421 () Bool)

(assert (=> b!59421 (= e!39080 (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000000 Nil!1451))))

(assert (= (and d!11353 res!32970) b!59419))

(assert (= (and b!59419 res!32971) b!59420))

(assert (= (and b!59420 res!32972) b!59421))

(declare-fun m!51217 () Bool)

(assert (=> d!11353 m!51217))

(declare-fun m!51219 () Bool)

(assert (=> b!59419 m!51219))

(declare-fun m!51221 () Bool)

(assert (=> b!59420 m!51221))

(declare-fun m!51223 () Bool)

(assert (=> b!59421 m!51223))

(assert (=> d!11277 d!11353))

(declare-fun b!59422 () Bool)

(declare-fun e!39083 () Bool)

(declare-fun call!4460 () Bool)

(assert (=> b!59422 (= e!39083 call!4460)))

(declare-fun d!11355 () Bool)

(declare-fun res!32973 () Bool)

(declare-fun e!39081 () Bool)

(assert (=> d!11355 (=> res!32973 e!39081)))

(assert (=> d!11355 (= res!32973 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> d!11355 (= (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)) e!39081)))

(declare-fun e!39082 () Bool)

(declare-fun b!59423 () Bool)

(assert (=> b!59423 (= e!39082 (contains!693 (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!59424 () Bool)

(declare-fun e!39084 () Bool)

(assert (=> b!59424 (= e!39081 e!39084)))

(declare-fun res!32975 () Bool)

(assert (=> b!59424 (=> (not res!32975) (not e!39084))))

(assert (=> b!59424 (= res!32975 (not e!39082))))

(declare-fun res!32974 () Bool)

(assert (=> b!59424 (=> (not res!32974) (not e!39082))))

(assert (=> b!59424 (= res!32974 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!59425 () Bool)

(assert (=> b!59425 (= e!39083 call!4460)))

(declare-fun bm!4457 () Bool)

(declare-fun c!7612 () Bool)

(assert (=> bm!4457 (= call!4460 (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!7612 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451))))))

(declare-fun b!59426 () Bool)

(assert (=> b!59426 (= e!39084 e!39083)))

(assert (=> b!59426 (= c!7612 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!11355 (not res!32973)) b!59424))

(assert (= (and b!59424 res!32974) b!59423))

(assert (= (and b!59424 res!32975) b!59426))

(assert (= (and b!59426 c!7612) b!59422))

(assert (= (and b!59426 (not c!7612)) b!59425))

(assert (= (or b!59422 b!59425) bm!4457))

(declare-fun m!51225 () Bool)

(assert (=> b!59423 m!51225))

(assert (=> b!59423 m!51225))

(declare-fun m!51227 () Bool)

(assert (=> b!59423 m!51227))

(assert (=> b!59424 m!51225))

(assert (=> b!59424 m!51225))

(declare-fun m!51229 () Bool)

(assert (=> b!59424 m!51229))

(assert (=> bm!4457 m!51225))

(declare-fun m!51231 () Bool)

(assert (=> bm!4457 m!51231))

(assert (=> b!59426 m!51225))

(assert (=> b!59426 m!51225))

(assert (=> b!59426 m!51229))

(assert (=> bm!4317 d!11355))

(declare-fun d!11357 () Bool)

(declare-fun e!39085 () Bool)

(assert (=> d!11357 e!39085))

(declare-fun res!32976 () Bool)

(assert (=> d!11357 (=> res!32976 e!39085)))

(declare-fun lt!24105 () Bool)

(assert (=> d!11357 (= res!32976 (not lt!24105))))

(declare-fun lt!24108 () Bool)

(assert (=> d!11357 (= lt!24105 lt!24108)))

(declare-fun lt!24107 () Unit!1553)

(declare-fun e!39086 () Unit!1553)

(assert (=> d!11357 (= lt!24107 e!39086)))

(declare-fun c!7613 () Bool)

(assert (=> d!11357 (= c!7613 lt!24108)))

(assert (=> d!11357 (= lt!24108 (containsKey!127 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!11357 (= (contains!692 lt!23743 #b1000000000000000000000000000000000000000000000000000000000000000) lt!24105)))

(declare-fun b!59427 () Bool)

(declare-fun lt!24106 () Unit!1553)

(assert (=> b!59427 (= e!39086 lt!24106)))

(assert (=> b!59427 (= lt!24106 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59427 (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59428 () Bool)

(declare-fun Unit!1574 () Unit!1553)

(assert (=> b!59428 (= e!39086 Unit!1574)))

(declare-fun b!59429 () Bool)

(assert (=> b!59429 (= e!39085 (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11357 c!7613) b!59427))

(assert (= (and d!11357 (not c!7613)) b!59428))

(assert (= (and d!11357 (not res!32976)) b!59429))

(declare-fun m!51233 () Bool)

(assert (=> d!11357 m!51233))

(declare-fun m!51235 () Bool)

(assert (=> b!59427 m!51235))

(assert (=> b!59427 m!51017))

(assert (=> b!59427 m!51017))

(declare-fun m!51237 () Bool)

(assert (=> b!59427 m!51237))

(assert (=> b!59429 m!51017))

(assert (=> b!59429 m!51017))

(assert (=> b!59429 m!51237))

(assert (=> bm!4334 d!11357))

(declare-fun b!59438 () Bool)

(declare-fun res!32985 () Bool)

(declare-fun e!39089 () Bool)

(assert (=> b!59438 (=> (not res!32985) (not e!39089))))

(assert (=> b!59438 (= res!32985 (and (= (size!2011 (_values!2026 newMap!16)) (bvadd (mask!5927 newMap!16) #b00000000000000000000000000000001)) (= (size!2010 (_keys!3667 newMap!16)) (size!2011 (_values!2026 newMap!16))) (bvsge (_size!358 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!358 newMap!16) (bvadd (mask!5927 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!59440 () Bool)

(declare-fun res!32987 () Bool)

(assert (=> b!59440 (=> (not res!32987) (not e!39089))))

(declare-fun size!2014 (LongMapFixedSize!618) (_ BitVec 32))

(assert (=> b!59440 (= res!32987 (= (size!2014 newMap!16) (bvadd (_size!358 newMap!16) (bvsdiv (bvadd (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!11359 () Bool)

(declare-fun res!32986 () Bool)

(assert (=> d!11359 (=> (not res!32986) (not e!39089))))

(assert (=> d!11359 (= res!32986 (validMask!0 (mask!5927 newMap!16)))))

(assert (=> d!11359 (= (simpleValid!41 newMap!16) e!39089)))

(declare-fun b!59439 () Bool)

(declare-fun res!32988 () Bool)

(assert (=> b!59439 (=> (not res!32988) (not e!39089))))

(assert (=> b!59439 (= res!32988 (bvsge (size!2014 newMap!16) (_size!358 newMap!16)))))

(declare-fun b!59441 () Bool)

(assert (=> b!59441 (= e!39089 (and (bvsge (extraKeys!1930 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!1930 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!358 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!11359 res!32986) b!59438))

(assert (= (and b!59438 res!32985) b!59439))

(assert (= (and b!59439 res!32988) b!59440))

(assert (= (and b!59440 res!32987) b!59441))

(declare-fun m!51239 () Bool)

(assert (=> b!59440 m!51239))

(assert (=> d!11359 m!50833))

(assert (=> b!59439 m!51239))

(assert (=> d!11245 d!11359))

(declare-fun d!11361 () Bool)

(declare-fun e!39090 () Bool)

(assert (=> d!11361 e!39090))

(declare-fun res!32990 () Bool)

(assert (=> d!11361 (=> (not res!32990) (not e!39090))))

(declare-fun lt!24112 () ListLongMap!1377)

(assert (=> d!11361 (= res!32990 (contains!692 lt!24112 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!24109 () List!1453)

(assert (=> d!11361 (= lt!24112 (ListLongMap!1378 lt!24109))))

(declare-fun lt!24111 () Unit!1553)

(declare-fun lt!24110 () Unit!1553)

(assert (=> d!11361 (= lt!24111 lt!24110)))

(assert (=> d!11361 (= (getValueByKey!123 lt!24109 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!128 (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!11361 (= lt!24110 (lemmaContainsTupThenGetReturnValue!42 lt!24109 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!11361 (= lt!24109 (insertStrictlySorted!44 (toList!704 e!38888) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!11361 (= (+!81 e!38888 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!24112)))

(declare-fun b!59442 () Bool)

(declare-fun res!32989 () Bool)

(assert (=> b!59442 (=> (not res!32989) (not e!39090))))

(assert (=> b!59442 (= res!32989 (= (getValueByKey!123 (toList!704 lt!24112) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!128 (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!59443 () Bool)

(assert (=> b!59443 (= e!39090 (contains!694 (toList!704 lt!24112) (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!11361 res!32990) b!59442))

(assert (= (and b!59442 res!32989) b!59443))

(declare-fun m!51241 () Bool)

(assert (=> d!11361 m!51241))

(declare-fun m!51243 () Bool)

(assert (=> d!11361 m!51243))

(declare-fun m!51245 () Bool)

(assert (=> d!11361 m!51245))

(declare-fun m!51247 () Bool)

(assert (=> d!11361 m!51247))

(declare-fun m!51249 () Bool)

(assert (=> b!59442 m!51249))

(declare-fun m!51251 () Bool)

(assert (=> b!59443 m!51251))

(assert (=> bm!4402 d!11361))

(assert (=> b!59121 d!11323))

(assert (=> b!58931 d!11291))

(declare-fun bm!4460 () Bool)

(declare-fun call!4463 () Bool)

(assert (=> bm!4460 (= call!4463 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(declare-fun b!59452 () Bool)

(declare-fun e!39098 () Bool)

(assert (=> b!59452 (= e!39098 call!4463)))

(declare-fun b!59453 () Bool)

(declare-fun e!39097 () Bool)

(assert (=> b!59453 (= e!39097 call!4463)))

(declare-fun b!59454 () Bool)

(declare-fun e!39099 () Bool)

(assert (=> b!59454 (= e!39099 e!39098)))

(declare-fun c!7616 () Bool)

(assert (=> b!59454 (= c!7616 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!11363 () Bool)

(declare-fun res!32996 () Bool)

(assert (=> d!11363 (=> res!32996 e!39099)))

(assert (=> d!11363 (= res!32996 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11363 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3667 newMap!16) (mask!5927 newMap!16)) e!39099)))

(declare-fun b!59455 () Bool)

(assert (=> b!59455 (= e!39098 e!39097)))

(declare-fun lt!24121 () (_ BitVec 64))

(assert (=> b!59455 (= lt!24121 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24119 () Unit!1553)

(assert (=> b!59455 (= lt!24119 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3667 newMap!16) lt!24121 #b00000000000000000000000000000000))))

(assert (=> b!59455 (arrayContainsKey!0 (_keys!3667 newMap!16) lt!24121 #b00000000000000000000000000000000)))

(declare-fun lt!24120 () Unit!1553)

(assert (=> b!59455 (= lt!24120 lt!24119)))

(declare-fun res!32995 () Bool)

(assert (=> b!59455 (= res!32995 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) (_keys!3667 newMap!16) (mask!5927 newMap!16)) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!59455 (=> (not res!32995) (not e!39097))))

(assert (= (and d!11363 (not res!32996)) b!59454))

(assert (= (and b!59454 c!7616) b!59455))

(assert (= (and b!59454 (not c!7616)) b!59452))

(assert (= (and b!59455 res!32995) b!59453))

(assert (= (or b!59453 b!59452) bm!4460))

(declare-fun m!51253 () Bool)

(assert (=> bm!4460 m!51253))

(assert (=> b!59454 m!50843))

(assert (=> b!59454 m!50843))

(assert (=> b!59454 m!50853))

(assert (=> b!59455 m!50843))

(declare-fun m!51255 () Bool)

(assert (=> b!59455 m!51255))

(declare-fun m!51257 () Bool)

(assert (=> b!59455 m!51257))

(assert (=> b!59455 m!50843))

(declare-fun m!51259 () Bool)

(assert (=> b!59455 m!51259))

(assert (=> b!58905 d!11363))

(declare-fun d!11365 () Bool)

(declare-fun res!33001 () Bool)

(declare-fun e!39104 () Bool)

(assert (=> d!11365 (=> res!33001 e!39104)))

(assert (=> d!11365 (= res!33001 (and ((_ is Cons!1449) (toList!704 lt!23660)) (= (_1!1034 (h!2030 (toList!704 lt!23660))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(assert (=> d!11365 (= (containsKey!127 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) e!39104)))

(declare-fun b!59460 () Bool)

(declare-fun e!39105 () Bool)

(assert (=> b!59460 (= e!39104 e!39105)))

(declare-fun res!33002 () Bool)

(assert (=> b!59460 (=> (not res!33002) (not e!39105))))

(assert (=> b!59460 (= res!33002 (and (or (not ((_ is Cons!1449) (toList!704 lt!23660))) (bvsle (_1!1034 (h!2030 (toList!704 lt!23660))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))) ((_ is Cons!1449) (toList!704 lt!23660)) (bvslt (_1!1034 (h!2030 (toList!704 lt!23660))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(declare-fun b!59461 () Bool)

(assert (=> b!59461 (= e!39105 (containsKey!127 (t!4799 (toList!704 lt!23660)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (= (and d!11365 (not res!33001)) b!59460))

(assert (= (and b!59460 res!33002) b!59461))

(assert (=> b!59461 m!50591))

(declare-fun m!51261 () Bool)

(assert (=> b!59461 m!51261))

(assert (=> d!11267 d!11365))

(declare-fun d!11367 () Bool)

(assert (=> d!11367 (= (apply!66 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23750) (apply!66 lt!23744 lt!23750))))

(declare-fun lt!24124 () Unit!1553)

(declare-fun choose!317 (ListLongMap!1377 (_ BitVec 64) V!2843 (_ BitVec 64)) Unit!1553)

(assert (=> d!11367 (= lt!24124 (choose!317 lt!23744 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23750))))

(declare-fun e!39108 () Bool)

(assert (=> d!11367 e!39108))

(declare-fun res!33005 () Bool)

(assert (=> d!11367 (=> (not res!33005) (not e!39108))))

(assert (=> d!11367 (= res!33005 (contains!692 lt!23744 lt!23750))))

(assert (=> d!11367 (= (addApplyDifferent!42 lt!23744 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23750) lt!24124)))

(declare-fun b!59465 () Bool)

(assert (=> b!59465 (= e!39108 (not (= lt!23750 lt!23755)))))

(assert (= (and d!11367 res!33005) b!59465))

(declare-fun m!51263 () Bool)

(assert (=> d!11367 m!51263))

(assert (=> d!11367 m!50731))

(assert (=> d!11367 m!50731))

(assert (=> d!11367 m!50741))

(assert (=> d!11367 m!50725))

(declare-fun m!51265 () Bool)

(assert (=> d!11367 m!51265))

(assert (=> b!58993 d!11367))

(declare-fun d!11369 () Bool)

(assert (=> d!11369 (= (apply!66 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23749) (apply!66 lt!23746 lt!23749))))

(declare-fun lt!24125 () Unit!1553)

(assert (=> d!11369 (= lt!24125 (choose!317 lt!23746 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23749))))

(declare-fun e!39109 () Bool)

(assert (=> d!11369 e!39109))

(declare-fun res!33006 () Bool)

(assert (=> d!11369 (=> (not res!33006) (not e!39109))))

(assert (=> d!11369 (= res!33006 (contains!692 lt!23746 lt!23749))))

(assert (=> d!11369 (= (addApplyDifferent!42 lt!23746 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23749) lt!24125)))

(declare-fun b!59466 () Bool)

(assert (=> b!59466 (= e!39109 (not (= lt!23749 lt!23751)))))

(assert (= (and d!11369 res!33006) b!59466))

(declare-fun m!51267 () Bool)

(assert (=> d!11369 m!51267))

(assert (=> d!11369 m!50711))

(assert (=> d!11369 m!50711))

(assert (=> d!11369 m!50713))

(assert (=> d!11369 m!50733))

(declare-fun m!51269 () Bool)

(assert (=> d!11369 m!51269))

(assert (=> b!58993 d!11369))

(declare-fun d!11371 () Bool)

(assert (=> d!11371 (= (apply!66 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23745) (apply!66 lt!23754 lt!23745))))

(declare-fun lt!24126 () Unit!1553)

(assert (=> d!11371 (= lt!24126 (choose!317 lt!23754 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23745))))

(declare-fun e!39110 () Bool)

(assert (=> d!11371 e!39110))

(declare-fun res!33007 () Bool)

(assert (=> d!11371 (=> (not res!33007) (not e!39110))))

(assert (=> d!11371 (= res!33007 (contains!692 lt!23754 lt!23745))))

(assert (=> d!11371 (= (addApplyDifferent!42 lt!23754 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23745) lt!24126)))

(declare-fun b!59467 () Bool)

(assert (=> b!59467 (= e!39110 (not (= lt!23745 lt!23741)))))

(assert (= (and d!11371 res!33007) b!59467))

(declare-fun m!51271 () Bool)

(assert (=> d!11371 m!51271))

(assert (=> d!11371 m!50717))

(assert (=> d!11371 m!50717))

(assert (=> d!11371 m!50723))

(assert (=> d!11371 m!50727))

(declare-fun m!51273 () Bool)

(assert (=> d!11371 m!51273))

(assert (=> b!58993 d!11371))

(declare-fun d!11373 () Bool)

(declare-fun e!39111 () Bool)

(assert (=> d!11373 e!39111))

(declare-fun res!33009 () Bool)

(assert (=> d!11373 (=> (not res!33009) (not e!39111))))

(declare-fun lt!24130 () ListLongMap!1377)

(assert (=> d!11373 (= res!33009 (contains!692 lt!24130 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun lt!24127 () List!1453)

(assert (=> d!11373 (= lt!24130 (ListLongMap!1378 lt!24127))))

(declare-fun lt!24129 () Unit!1553)

(declare-fun lt!24128 () Unit!1553)

(assert (=> d!11373 (= lt!24129 lt!24128)))

(assert (=> d!11373 (= (getValueByKey!123 lt!24127 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11373 (= lt!24128 (lemmaContainsTupThenGetReturnValue!42 lt!24127 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11373 (= lt!24127 (insertStrictlySorted!44 (toList!704 lt!23754) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11373 (= (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!24130)))

(declare-fun b!59468 () Bool)

(declare-fun res!33008 () Bool)

(assert (=> b!59468 (=> (not res!33008) (not e!39111))))

(assert (=> b!59468 (= res!33008 (= (getValueByKey!123 (toList!704 lt!24130) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!59469 () Bool)

(assert (=> b!59469 (= e!39111 (contains!694 (toList!704 lt!24130) (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(assert (= (and d!11373 res!33009) b!59468))

(assert (= (and b!59468 res!33008) b!59469))

(declare-fun m!51275 () Bool)

(assert (=> d!11373 m!51275))

(declare-fun m!51277 () Bool)

(assert (=> d!11373 m!51277))

(declare-fun m!51279 () Bool)

(assert (=> d!11373 m!51279))

(declare-fun m!51281 () Bool)

(assert (=> d!11373 m!51281))

(declare-fun m!51283 () Bool)

(assert (=> b!59468 m!51283))

(declare-fun m!51285 () Bool)

(assert (=> b!59469 m!51285))

(assert (=> b!58993 d!11373))

(declare-fun d!11375 () Bool)

(assert (=> d!11375 (= (apply!66 lt!23744 lt!23750) (get!1083 (getValueByKey!123 (toList!704 lt!23744) lt!23750)))))

(declare-fun bs!2563 () Bool)

(assert (= bs!2563 d!11375))

(declare-fun m!51287 () Bool)

(assert (=> bs!2563 m!51287))

(assert (=> bs!2563 m!51287))

(declare-fun m!51289 () Bool)

(assert (=> bs!2563 m!51289))

(assert (=> b!58993 d!11375))

(declare-fun d!11377 () Bool)

(declare-fun e!39112 () Bool)

(assert (=> d!11377 e!39112))

(declare-fun res!33010 () Bool)

(assert (=> d!11377 (=> res!33010 e!39112)))

(declare-fun lt!24131 () Bool)

(assert (=> d!11377 (= res!33010 (not lt!24131))))

(declare-fun lt!24134 () Bool)

(assert (=> d!11377 (= lt!24131 lt!24134)))

(declare-fun lt!24133 () Unit!1553)

(declare-fun e!39113 () Unit!1553)

(assert (=> d!11377 (= lt!24133 e!39113)))

(declare-fun c!7617 () Bool)

(assert (=> d!11377 (= c!7617 lt!24134)))

(assert (=> d!11377 (= lt!24134 (containsKey!127 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739))))

(assert (=> d!11377 (= (contains!692 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23739) lt!24131)))

(declare-fun b!59470 () Bool)

(declare-fun lt!24132 () Unit!1553)

(assert (=> b!59470 (= e!39113 lt!24132)))

(assert (=> b!59470 (= lt!24132 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739))))

(assert (=> b!59470 (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739))))

(declare-fun b!59471 () Bool)

(declare-fun Unit!1575 () Unit!1553)

(assert (=> b!59471 (= e!39113 Unit!1575)))

(declare-fun b!59472 () Bool)

(assert (=> b!59472 (= e!39112 (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739)))))

(assert (= (and d!11377 c!7617) b!59470))

(assert (= (and d!11377 (not c!7617)) b!59471))

(assert (= (and d!11377 (not res!33010)) b!59472))

(declare-fun m!51291 () Bool)

(assert (=> d!11377 m!51291))

(declare-fun m!51293 () Bool)

(assert (=> b!59470 m!51293))

(declare-fun m!51295 () Bool)

(assert (=> b!59470 m!51295))

(assert (=> b!59470 m!51295))

(declare-fun m!51297 () Bool)

(assert (=> b!59470 m!51297))

(assert (=> b!59472 m!51295))

(assert (=> b!59472 m!51295))

(assert (=> b!59472 m!51297))

(assert (=> b!58993 d!11377))

(declare-fun d!11379 () Bool)

(assert (=> d!11379 (= (apply!66 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23745) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23745)))))

(declare-fun bs!2564 () Bool)

(assert (= bs!2564 d!11379))

(declare-fun m!51299 () Bool)

(assert (=> bs!2564 m!51299))

(assert (=> bs!2564 m!51299))

(declare-fun m!51301 () Bool)

(assert (=> bs!2564 m!51301))

(assert (=> b!58993 d!11379))

(declare-fun d!11381 () Bool)

(declare-fun e!39114 () Bool)

(assert (=> d!11381 e!39114))

(declare-fun res!33012 () Bool)

(assert (=> d!11381 (=> (not res!33012) (not e!39114))))

(declare-fun lt!24138 () ListLongMap!1377)

(assert (=> d!11381 (= res!33012 (contains!692 lt!24138 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun lt!24135 () List!1453)

(assert (=> d!11381 (= lt!24138 (ListLongMap!1378 lt!24135))))

(declare-fun lt!24137 () Unit!1553)

(declare-fun lt!24136 () Unit!1553)

(assert (=> d!11381 (= lt!24137 lt!24136)))

(assert (=> d!11381 (= (getValueByKey!123 lt!24135 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11381 (= lt!24136 (lemmaContainsTupThenGetReturnValue!42 lt!24135 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11381 (= lt!24135 (insertStrictlySorted!44 (toList!704 lt!23744) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11381 (= (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!24138)))

(declare-fun b!59473 () Bool)

(declare-fun res!33011 () Bool)

(assert (=> b!59473 (=> (not res!33011) (not e!39114))))

(assert (=> b!59473 (= res!33011 (= (getValueByKey!123 (toList!704 lt!24138) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!59474 () Bool)

(assert (=> b!59474 (= e!39114 (contains!694 (toList!704 lt!24138) (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(assert (= (and d!11381 res!33012) b!59473))

(assert (= (and b!59473 res!33011) b!59474))

(declare-fun m!51303 () Bool)

(assert (=> d!11381 m!51303))

(declare-fun m!51305 () Bool)

(assert (=> d!11381 m!51305))

(declare-fun m!51307 () Bool)

(assert (=> d!11381 m!51307))

(declare-fun m!51309 () Bool)

(assert (=> d!11381 m!51309))

(declare-fun m!51311 () Bool)

(assert (=> b!59473 m!51311))

(declare-fun m!51313 () Bool)

(assert (=> b!59474 m!51313))

(assert (=> b!58993 d!11381))

(declare-fun d!11383 () Bool)

(assert (=> d!11383 (= (apply!66 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23750) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23750)))))

(declare-fun bs!2565 () Bool)

(assert (= bs!2565 d!11383))

(declare-fun m!51315 () Bool)

(assert (=> bs!2565 m!51315))

(assert (=> bs!2565 m!51315))

(declare-fun m!51317 () Bool)

(assert (=> bs!2565 m!51317))

(assert (=> b!58993 d!11383))

(declare-fun d!11385 () Bool)

(declare-fun e!39115 () Bool)

(assert (=> d!11385 e!39115))

(declare-fun res!33014 () Bool)

(assert (=> d!11385 (=> (not res!33014) (not e!39115))))

(declare-fun lt!24142 () ListLongMap!1377)

(assert (=> d!11385 (= res!33014 (contains!692 lt!24142 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun lt!24139 () List!1453)

(assert (=> d!11385 (= lt!24142 (ListLongMap!1378 lt!24139))))

(declare-fun lt!24141 () Unit!1553)

(declare-fun lt!24140 () Unit!1553)

(assert (=> d!11385 (= lt!24141 lt!24140)))

(assert (=> d!11385 (= (getValueByKey!123 lt!24139 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11385 (= lt!24140 (lemmaContainsTupThenGetReturnValue!42 lt!24139 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11385 (= lt!24139 (insertStrictlySorted!44 (toList!704 lt!23746) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11385 (= (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!24142)))

(declare-fun b!59475 () Bool)

(declare-fun res!33013 () Bool)

(assert (=> b!59475 (=> (not res!33013) (not e!39115))))

(assert (=> b!59475 (= res!33013 (= (getValueByKey!123 (toList!704 lt!24142) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!59476 () Bool)

(assert (=> b!59476 (= e!39115 (contains!694 (toList!704 lt!24142) (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(assert (= (and d!11385 res!33014) b!59475))

(assert (= (and b!59475 res!33013) b!59476))

(declare-fun m!51319 () Bool)

(assert (=> d!11385 m!51319))

(declare-fun m!51321 () Bool)

(assert (=> d!11385 m!51321))

(declare-fun m!51323 () Bool)

(assert (=> d!11385 m!51323))

(declare-fun m!51325 () Bool)

(assert (=> d!11385 m!51325))

(declare-fun m!51327 () Bool)

(assert (=> b!59475 m!51327))

(declare-fun m!51329 () Bool)

(assert (=> b!59476 m!51329))

(assert (=> b!58993 d!11385))

(declare-fun d!11387 () Bool)

(assert (=> d!11387 (= (apply!66 lt!23746 lt!23749) (get!1083 (getValueByKey!123 (toList!704 lt!23746) lt!23749)))))

(declare-fun bs!2566 () Bool)

(assert (= bs!2566 d!11387))

(declare-fun m!51331 () Bool)

(assert (=> bs!2566 m!51331))

(assert (=> bs!2566 m!51331))

(declare-fun m!51333 () Bool)

(assert (=> bs!2566 m!51333))

(assert (=> b!58993 d!11387))

(declare-fun d!11389 () Bool)

(assert (=> d!11389 (= (apply!66 lt!23754 lt!23745) (get!1083 (getValueByKey!123 (toList!704 lt!23754) lt!23745)))))

(declare-fun bs!2567 () Bool)

(assert (= bs!2567 d!11389))

(declare-fun m!51335 () Bool)

(assert (=> bs!2567 m!51335))

(assert (=> bs!2567 m!51335))

(declare-fun m!51337 () Bool)

(assert (=> bs!2567 m!51337))

(assert (=> b!58993 d!11389))

(assert (=> b!58993 d!11331))

(declare-fun d!11391 () Bool)

(declare-fun e!39116 () Bool)

(assert (=> d!11391 e!39116))

(declare-fun res!33016 () Bool)

(assert (=> d!11391 (=> (not res!33016) (not e!39116))))

(declare-fun lt!24146 () ListLongMap!1377)

(assert (=> d!11391 (= res!33016 (contains!692 lt!24146 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun lt!24143 () List!1453)

(assert (=> d!11391 (= lt!24146 (ListLongMap!1378 lt!24143))))

(declare-fun lt!24145 () Unit!1553)

(declare-fun lt!24144 () Unit!1553)

(assert (=> d!11391 (= lt!24145 lt!24144)))

(assert (=> d!11391 (= (getValueByKey!123 lt!24143 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11391 (= lt!24144 (lemmaContainsTupThenGetReturnValue!42 lt!24143 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11391 (= lt!24143 (insertStrictlySorted!44 (toList!704 lt!23757) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11391 (= (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!24146)))

(declare-fun b!59477 () Bool)

(declare-fun res!33015 () Bool)

(assert (=> b!59477 (=> (not res!33015) (not e!39116))))

(assert (=> b!59477 (= res!33015 (= (getValueByKey!123 (toList!704 lt!24146) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!59478 () Bool)

(assert (=> b!59478 (= e!39116 (contains!694 (toList!704 lt!24146) (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(assert (= (and d!11391 res!33016) b!59477))

(assert (= (and b!59477 res!33015) b!59478))

(declare-fun m!51339 () Bool)

(assert (=> d!11391 m!51339))

(declare-fun m!51341 () Bool)

(assert (=> d!11391 m!51341))

(declare-fun m!51343 () Bool)

(assert (=> d!11391 m!51343))

(declare-fun m!51345 () Bool)

(assert (=> d!11391 m!51345))

(declare-fun m!51347 () Bool)

(assert (=> b!59477 m!51347))

(declare-fun m!51349 () Bool)

(assert (=> b!59478 m!51349))

(assert (=> b!58993 d!11391))

(declare-fun d!11393 () Bool)

(assert (=> d!11393 (= (apply!66 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23749) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23749)))))

(declare-fun bs!2568 () Bool)

(assert (= bs!2568 d!11393))

(declare-fun m!51351 () Bool)

(assert (=> bs!2568 m!51351))

(assert (=> bs!2568 m!51351))

(declare-fun m!51353 () Bool)

(assert (=> bs!2568 m!51353))

(assert (=> b!58993 d!11393))

(declare-fun d!11395 () Bool)

(assert (=> d!11395 (contains!692 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23739)))

(declare-fun lt!24149 () Unit!1553)

(declare-fun choose!318 (ListLongMap!1377 (_ BitVec 64) V!2843 (_ BitVec 64)) Unit!1553)

(assert (=> d!11395 (= lt!24149 (choose!318 lt!23757 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23739))))

(assert (=> d!11395 (contains!692 lt!23757 lt!23739)))

(assert (=> d!11395 (= (addStillContains!42 lt!23757 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23739) lt!24149)))

(declare-fun bs!2569 () Bool)

(assert (= bs!2569 d!11395))

(assert (=> bs!2569 m!50737))

(assert (=> bs!2569 m!50737))

(assert (=> bs!2569 m!50739))

(declare-fun m!51355 () Bool)

(assert (=> bs!2569 m!51355))

(declare-fun m!51357 () Bool)

(assert (=> bs!2569 m!51357))

(assert (=> b!58993 d!11395))

(assert (=> d!11249 d!11255))

(declare-fun d!11397 () Bool)

(assert (=> d!11397 (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) from!355 Nil!1451)))

(assert (=> d!11397 true))

(declare-fun _$71!72 () Unit!1553)

(assert (=> d!11397 (= (choose!39 (_keys!3667 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!72)))

(declare-fun bs!2570 () Bool)

(assert (= bs!2570 d!11397))

(assert (=> bs!2570 m!50599))

(assert (=> d!11249 d!11397))

(declare-fun d!11399 () Bool)

(declare-fun e!39117 () Bool)

(assert (=> d!11399 e!39117))

(declare-fun res!33018 () Bool)

(assert (=> d!11399 (=> (not res!33018) (not e!39117))))

(declare-fun lt!24153 () ListLongMap!1377)

(assert (=> d!11399 (= res!33018 (contains!692 lt!24153 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!24150 () List!1453)

(assert (=> d!11399 (= lt!24153 (ListLongMap!1378 lt!24150))))

(declare-fun lt!24152 () Unit!1553)

(declare-fun lt!24151 () Unit!1553)

(assert (=> d!11399 (= lt!24152 lt!24151)))

(assert (=> d!11399 (= (getValueByKey!123 lt!24150 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11399 (= lt!24151 (lemmaContainsTupThenGetReturnValue!42 lt!24150 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11399 (= lt!24150 (insertStrictlySorted!44 (toList!704 call!4403) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11399 (= (+!81 call!4403 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!24153)))

(declare-fun b!59480 () Bool)

(declare-fun res!33017 () Bool)

(assert (=> b!59480 (=> (not res!33017) (not e!39117))))

(assert (=> b!59480 (= res!33017 (= (getValueByKey!123 (toList!704 lt!24153) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!59481 () Bool)

(assert (=> b!59481 (= e!39117 (contains!694 (toList!704 lt!24153) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!11399 res!33018) b!59480))

(assert (= (and b!59480 res!33017) b!59481))

(declare-fun m!51359 () Bool)

(assert (=> d!11399 m!51359))

(declare-fun m!51361 () Bool)

(assert (=> d!11399 m!51361))

(declare-fun m!51363 () Bool)

(assert (=> d!11399 m!51363))

(declare-fun m!51365 () Bool)

(assert (=> d!11399 m!51365))

(declare-fun m!51367 () Bool)

(assert (=> b!59480 m!51367))

(declare-fun m!51369 () Bool)

(assert (=> b!59481 m!51369))

(assert (=> b!59101 d!11399))

(declare-fun d!11401 () Bool)

(declare-fun e!39118 () Bool)

(assert (=> d!11401 e!39118))

(declare-fun res!33019 () Bool)

(assert (=> d!11401 (=> res!33019 e!39118)))

(declare-fun lt!24154 () Bool)

(assert (=> d!11401 (= res!33019 (not lt!24154))))

(declare-fun lt!24157 () Bool)

(assert (=> d!11401 (= lt!24154 lt!24157)))

(declare-fun lt!24156 () Unit!1553)

(declare-fun e!39119 () Unit!1553)

(assert (=> d!11401 (= lt!24156 e!39119)))

(declare-fun c!7618 () Bool)

(assert (=> d!11401 (= c!7618 lt!24157)))

(assert (=> d!11401 (= lt!24157 (containsKey!127 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11401 (= (contains!692 call!4404 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) lt!24154)))

(declare-fun b!59482 () Bool)

(declare-fun lt!24155 () Unit!1553)

(assert (=> b!59482 (= e!39119 lt!24155)))

(assert (=> b!59482 (= lt!24155 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> b!59482 (isDefined!77 (getValueByKey!123 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59483 () Bool)

(declare-fun Unit!1576 () Unit!1553)

(assert (=> b!59483 (= e!39119 Unit!1576)))

(declare-fun b!59484 () Bool)

(assert (=> b!59484 (= e!39118 (isDefined!77 (getValueByKey!123 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(assert (= (and d!11401 c!7618) b!59482))

(assert (= (and d!11401 (not c!7618)) b!59483))

(assert (= (and d!11401 (not res!33019)) b!59484))

(assert (=> d!11401 m!50591))

(declare-fun m!51371 () Bool)

(assert (=> d!11401 m!51371))

(assert (=> b!59482 m!50591))

(declare-fun m!51373 () Bool)

(assert (=> b!59482 m!51373))

(assert (=> b!59482 m!50591))

(declare-fun m!51375 () Bool)

(assert (=> b!59482 m!51375))

(assert (=> b!59482 m!51375))

(declare-fun m!51377 () Bool)

(assert (=> b!59482 m!51377))

(assert (=> b!59484 m!50591))

(assert (=> b!59484 m!51375))

(assert (=> b!59484 m!51375))

(assert (=> b!59484 m!51377))

(assert (=> b!59100 d!11401))

(declare-fun d!11403 () Bool)

(assert (=> d!11403 (= (get!1082 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59131 d!11403))

(declare-fun d!11405 () Bool)

(assert (=> d!11405 (= (map!1107 (_2!1033 lt!23848)) (getCurrentListMap!401 (_keys!3667 (_2!1033 lt!23848)) (_values!2026 (_2!1033 lt!23848)) (mask!5927 (_2!1033 lt!23848)) (extraKeys!1930 (_2!1033 lt!23848)) (zeroValue!1959 (_2!1033 lt!23848)) (minValue!1959 (_2!1033 lt!23848)) #b00000000000000000000000000000000 (defaultEntry!2043 (_2!1033 lt!23848))))))

(declare-fun bs!2571 () Bool)

(assert (= bs!2571 d!11405))

(declare-fun m!51379 () Bool)

(assert (=> bs!2571 m!51379))

(assert (=> bm!4408 d!11405))

(declare-fun b!59486 () Bool)

(declare-fun e!39120 () Bool)

(assert (=> b!59486 (= e!39120 tp_is_empty!2397)))

(declare-fun mapIsEmpty!2885 () Bool)

(declare-fun mapRes!2885 () Bool)

(assert (=> mapIsEmpty!2885 mapRes!2885))

(declare-fun b!59485 () Bool)

(declare-fun e!39121 () Bool)

(assert (=> b!59485 (= e!39121 tp_is_empty!2397)))

(declare-fun condMapEmpty!2885 () Bool)

(declare-fun mapDefault!2885 () ValueCell!855)

(assert (=> mapNonEmpty!2883 (= condMapEmpty!2885 (= mapRest!2883 ((as const (Array (_ BitVec 32) ValueCell!855)) mapDefault!2885)))))

(assert (=> mapNonEmpty!2883 (= tp!8013 (and e!39120 mapRes!2885))))

(declare-fun mapNonEmpty!2885 () Bool)

(declare-fun tp!8015 () Bool)

(assert (=> mapNonEmpty!2885 (= mapRes!2885 (and tp!8015 e!39121))))

(declare-fun mapKey!2885 () (_ BitVec 32))

(declare-fun mapValue!2885 () ValueCell!855)

(declare-fun mapRest!2885 () (Array (_ BitVec 32) ValueCell!855))

(assert (=> mapNonEmpty!2885 (= mapRest!2883 (store mapRest!2885 mapKey!2885 mapValue!2885))))

(assert (= (and mapNonEmpty!2883 condMapEmpty!2885) mapIsEmpty!2885))

(assert (= (and mapNonEmpty!2883 (not condMapEmpty!2885)) mapNonEmpty!2885))

(assert (= (and mapNonEmpty!2885 ((_ is ValueCellFull!855) mapValue!2885)) b!59485))

(assert (= (and mapNonEmpty!2883 ((_ is ValueCellFull!855) mapDefault!2885)) b!59486))

(declare-fun m!51381 () Bool)

(assert (=> mapNonEmpty!2885 m!51381))

(declare-fun b!59488 () Bool)

(declare-fun e!39122 () Bool)

(assert (=> b!59488 (= e!39122 tp_is_empty!2397)))

(declare-fun mapIsEmpty!2886 () Bool)

(declare-fun mapRes!2886 () Bool)

(assert (=> mapIsEmpty!2886 mapRes!2886))

(declare-fun b!59487 () Bool)

(declare-fun e!39123 () Bool)

(assert (=> b!59487 (= e!39123 tp_is_empty!2397)))

(declare-fun condMapEmpty!2886 () Bool)

(declare-fun mapDefault!2886 () ValueCell!855)

(assert (=> mapNonEmpty!2884 (= condMapEmpty!2886 (= mapRest!2884 ((as const (Array (_ BitVec 32) ValueCell!855)) mapDefault!2886)))))

(assert (=> mapNonEmpty!2884 (= tp!8014 (and e!39122 mapRes!2886))))

(declare-fun mapNonEmpty!2886 () Bool)

(declare-fun tp!8016 () Bool)

(assert (=> mapNonEmpty!2886 (= mapRes!2886 (and tp!8016 e!39123))))

(declare-fun mapValue!2886 () ValueCell!855)

(declare-fun mapRest!2886 () (Array (_ BitVec 32) ValueCell!855))

(declare-fun mapKey!2886 () (_ BitVec 32))

(assert (=> mapNonEmpty!2886 (= mapRest!2884 (store mapRest!2886 mapKey!2886 mapValue!2886))))

(assert (= (and mapNonEmpty!2884 condMapEmpty!2886) mapIsEmpty!2886))

(assert (= (and mapNonEmpty!2884 (not condMapEmpty!2886)) mapNonEmpty!2886))

(assert (= (and mapNonEmpty!2886 ((_ is ValueCellFull!855) mapValue!2886)) b!59487))

(assert (= (and mapNonEmpty!2884 ((_ is ValueCellFull!855) mapDefault!2886)) b!59488))

(declare-fun m!51383 () Bool)

(assert (=> mapNonEmpty!2886 m!51383))

(declare-fun b_lambda!2621 () Bool)

(assert (= b_lambda!2611 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2621)))

(declare-fun b_lambda!2623 () Bool)

(assert (= b_lambda!2613 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2623)))

(declare-fun b_lambda!2625 () Bool)

(assert (= b_lambda!2617 (or (and b!58833 b_free!1961) (and b!58818 b_free!1963 (= (defaultEntry!2043 newMap!16) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))))) b_lambda!2625)))

(declare-fun b_lambda!2627 () Bool)

(assert (= b_lambda!2615 (or (and b!58833 b_free!1961) (and b!58818 b_free!1963 (= (defaultEntry!2043 newMap!16) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))))) b_lambda!2627)))

(declare-fun b_lambda!2629 () Bool)

(assert (= b_lambda!2619 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2629)))

(check-sat (not b!59196) (not b!59468) (not d!11371) (not bm!4421) (not bm!4460) b_and!3599 (not b!59477) (not d!11335) (not bm!4453) (not b!59481) (not b!59474) (not bm!4455) (not bm!4434) (not d!11361) (not d!11331) (not b!59210) (not b!59414) (not b!59396) (not d!11323) (not b_lambda!2621) (not bm!4428) (not mapNonEmpty!2886) (not b!59429) (not d!11359) (not b!59461) (not b_lambda!2627) (not b!59389) (not b!59320) (not d!11369) (not b!59214) (not b!59423) (not b!59484) (not d!11325) (not b!59326) (not b!59172) (not b!59469) (not bm!4414) (not d!11385) (not b!59323) (not b!59142) (not b!59421) (not b!59244) (not b!59177) (not b_lambda!2609) (not d!11319) (not b!59427) (not b!59442) (not d!11395) (not b!59318) (not b!59394) (not bm!4449) (not b!59226) (not d!11309) (not bm!4424) (not bm!4437) (not b!59473) (not b!59378) (not d!11375) (not b!59230) (not b!59322) (not d!11373) (not bm!4416) (not b!59400) (not b!59174) (not d!11347) (not b!59220) (not b!59173) (not d!11337) (not b!59224) (not d!11367) (not d!11297) (not d!11387) (not d!11393) (not b!59154) (not b!59386) (not b!59367) (not d!11353) (not b!59420) (not b!59416) (not bm!4413) (not d!11289) b_and!3597 tp_is_empty!2397 (not bm!4456) (not b!59206) (not d!11327) (not b_next!1961) (not d!11311) (not b!59187) (not b!59406) (not b!59475) (not d!11313) (not d!11357) (not bm!4448) (not bm!4427) (not b!59144) (not b!59424) (not b!59290) (not d!11377) (not d!11397) (not b!59207) (not b!59216) (not b!59315) (not d!11315) (not b!59373) (not b!59208) (not b!59162) (not d!11381) (not d!11281) (not b!59324) (not b!59199) (not d!11383) (not bm!4417) (not b!59176) (not b!59171) (not bm!4420) (not b_lambda!2629) (not d!11339) (not d!11329) (not b!59259) (not b!59222) (not bm!4457) (not b!59426) (not b!59160) (not d!11333) (not b!59443) (not bm!4452) (not d!11341) (not b_lambda!2623) (not b!59440) (not b!59178) (not b!59404) (not b!59439) (not b!59164) (not d!11405) (not d!11379) (not d!11389) (not b!59419) (not b!59455) (not b!59149) (not b!59476) (not b!59212) (not b!59383) (not d!11345) (not b!59472) (not b!59392) (not d!11287) (not b_lambda!2625) (not b!59454) (not b!59209) (not d!11343) (not d!11391) (not b!59418) (not b!59390) (not bm!4425) (not b_lambda!2605) (not d!11349) (not b!59168) (not mapNonEmpty!2885) (not bm!4433) (not b!59480) (not b!59317) (not b!59413) (not b!59478) (not d!11303) (not b!59402) (not b!59233) (not bm!4447) (not b!59158) (not d!11401) (not b!59370) (not d!11293) (not b!59482) (not b!59368) (not d!11307) (not b!59198) (not b!59152) (not b!59470) (not b!59331) (not b!59201) (not d!11399) (not b!59410) (not b_next!1963))
(check-sat b_and!3597 b_and!3599 (not b_next!1961) (not b_next!1963))
(get-model)

(declare-fun d!11407 () Bool)

(assert (=> d!11407 (= (apply!66 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23750) (apply!66 lt!23744 lt!23750))))

(assert (=> d!11407 true))

(declare-fun _$34!759 () Unit!1553)

(assert (=> d!11407 (= (choose!317 lt!23744 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23750) _$34!759)))

(declare-fun bs!2572 () Bool)

(assert (= bs!2572 d!11407))

(assert (=> bs!2572 m!50731))

(assert (=> bs!2572 m!50731))

(assert (=> bs!2572 m!50741))

(assert (=> bs!2572 m!50725))

(assert (=> d!11367 d!11407))

(assert (=> d!11367 d!11375))

(assert (=> d!11367 d!11381))

(assert (=> d!11367 d!11383))

(declare-fun d!11409 () Bool)

(declare-fun e!39124 () Bool)

(assert (=> d!11409 e!39124))

(declare-fun res!33020 () Bool)

(assert (=> d!11409 (=> res!33020 e!39124)))

(declare-fun lt!24158 () Bool)

(assert (=> d!11409 (= res!33020 (not lt!24158))))

(declare-fun lt!24161 () Bool)

(assert (=> d!11409 (= lt!24158 lt!24161)))

(declare-fun lt!24160 () Unit!1553)

(declare-fun e!39125 () Unit!1553)

(assert (=> d!11409 (= lt!24160 e!39125)))

(declare-fun c!7619 () Bool)

(assert (=> d!11409 (= c!7619 lt!24161)))

(assert (=> d!11409 (= lt!24161 (containsKey!127 (toList!704 lt!23744) lt!23750))))

(assert (=> d!11409 (= (contains!692 lt!23744 lt!23750) lt!24158)))

(declare-fun b!59490 () Bool)

(declare-fun lt!24159 () Unit!1553)

(assert (=> b!59490 (= e!39125 lt!24159)))

(assert (=> b!59490 (= lt!24159 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23744) lt!23750))))

(assert (=> b!59490 (isDefined!77 (getValueByKey!123 (toList!704 lt!23744) lt!23750))))

(declare-fun b!59491 () Bool)

(declare-fun Unit!1577 () Unit!1553)

(assert (=> b!59491 (= e!39125 Unit!1577)))

(declare-fun b!59492 () Bool)

(assert (=> b!59492 (= e!39124 (isDefined!77 (getValueByKey!123 (toList!704 lt!23744) lt!23750)))))

(assert (= (and d!11409 c!7619) b!59490))

(assert (= (and d!11409 (not c!7619)) b!59491))

(assert (= (and d!11409 (not res!33020)) b!59492))

(declare-fun m!51385 () Bool)

(assert (=> d!11409 m!51385))

(declare-fun m!51387 () Bool)

(assert (=> b!59490 m!51387))

(assert (=> b!59490 m!51287))

(assert (=> b!59490 m!51287))

(declare-fun m!51389 () Bool)

(assert (=> b!59490 m!51389))

(assert (=> b!59492 m!51287))

(assert (=> b!59492 m!51287))

(assert (=> b!59492 m!51389))

(assert (=> d!11367 d!11409))

(declare-fun d!11411 () Bool)

(assert (=> d!11411 (= (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!298 (getValueByKey!123 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2573 () Bool)

(assert (= bs!2573 d!11411))

(assert (=> bs!2573 m!50829))

(declare-fun m!51391 () Bool)

(assert (=> bs!2573 m!51391))

(assert (=> b!59144 d!11411))

(declare-fun b!59496 () Bool)

(declare-fun e!39127 () Option!129)

(assert (=> b!59496 (= e!39127 None!127)))

(declare-fun c!7620 () Bool)

(declare-fun d!11413 () Bool)

(assert (=> d!11413 (= c!7620 (and ((_ is Cons!1449) (toList!704 lt!23743)) (= (_1!1034 (h!2030 (toList!704 lt!23743))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!39126 () Option!129)

(assert (=> d!11413 (= (getValueByKey!123 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!39126)))

(declare-fun b!59493 () Bool)

(assert (=> b!59493 (= e!39126 (Some!128 (_2!1034 (h!2030 (toList!704 lt!23743)))))))

(declare-fun b!59495 () Bool)

(assert (=> b!59495 (= e!39127 (getValueByKey!123 (t!4799 (toList!704 lt!23743)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!59494 () Bool)

(assert (=> b!59494 (= e!39126 e!39127)))

(declare-fun c!7621 () Bool)

(assert (=> b!59494 (= c!7621 (and ((_ is Cons!1449) (toList!704 lt!23743)) (not (= (_1!1034 (h!2030 (toList!704 lt!23743))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!11413 c!7620) b!59493))

(assert (= (and d!11413 (not c!7620)) b!59494))

(assert (= (and b!59494 c!7621) b!59495))

(assert (= (and b!59494 (not c!7621)) b!59496))

(assert (=> b!59495 m!50685))

(declare-fun m!51393 () Bool)

(assert (=> b!59495 m!51393))

(assert (=> b!59144 d!11413))

(assert (=> d!11333 d!11323))

(declare-fun d!11415 () Bool)

(declare-fun e!39130 () Bool)

(assert (=> d!11415 e!39130))

(declare-fun res!33025 () Bool)

(assert (=> d!11415 (=> (not res!33025) (not e!39130))))

(declare-fun lt!24164 () SeekEntryResult!237)

(assert (=> d!11415 (= res!33025 ((_ is Found!237) lt!24164))))

(assert (=> d!11415 (= lt!24164 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(assert (=> d!11415 true))

(declare-fun _$33!42 () Unit!1553)

(assert (=> d!11415 (= (choose!314 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (defaultEntry!2043 newMap!16)) _$33!42)))

(declare-fun b!59501 () Bool)

(declare-fun res!33026 () Bool)

(assert (=> b!59501 (=> (not res!33026) (not e!39130))))

(assert (=> b!59501 (= res!33026 (inRange!0 (index!3072 lt!24164) (mask!5927 newMap!16)))))

(declare-fun b!59502 () Bool)

(assert (=> b!59502 (= e!39130 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!24164)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (= (and d!11415 res!33025) b!59501))

(assert (= (and b!59501 res!33026) b!59502))

(assert (=> d!11415 m!50591))

(assert (=> d!11415 m!50803))

(declare-fun m!51395 () Bool)

(assert (=> b!59501 m!51395))

(declare-fun m!51397 () Bool)

(assert (=> b!59502 m!51397))

(assert (=> d!11333 d!11415))

(declare-fun d!11417 () Bool)

(assert (=> d!11417 (= (validMask!0 (mask!5927 newMap!16)) (and (or (= (mask!5927 newMap!16) #b00000000000000000000000000000111) (= (mask!5927 newMap!16) #b00000000000000000000000000001111) (= (mask!5927 newMap!16) #b00000000000000000000000000011111) (= (mask!5927 newMap!16) #b00000000000000000000000000111111) (= (mask!5927 newMap!16) #b00000000000000000000000001111111) (= (mask!5927 newMap!16) #b00000000000000000000000011111111) (= (mask!5927 newMap!16) #b00000000000000000000000111111111) (= (mask!5927 newMap!16) #b00000000000000000000001111111111) (= (mask!5927 newMap!16) #b00000000000000000000011111111111) (= (mask!5927 newMap!16) #b00000000000000000000111111111111) (= (mask!5927 newMap!16) #b00000000000000000001111111111111) (= (mask!5927 newMap!16) #b00000000000000000011111111111111) (= (mask!5927 newMap!16) #b00000000000000000111111111111111) (= (mask!5927 newMap!16) #b00000000000000001111111111111111) (= (mask!5927 newMap!16) #b00000000000000011111111111111111) (= (mask!5927 newMap!16) #b00000000000000111111111111111111) (= (mask!5927 newMap!16) #b00000000000001111111111111111111) (= (mask!5927 newMap!16) #b00000000000011111111111111111111) (= (mask!5927 newMap!16) #b00000000000111111111111111111111) (= (mask!5927 newMap!16) #b00000000001111111111111111111111) (= (mask!5927 newMap!16) #b00000000011111111111111111111111) (= (mask!5927 newMap!16) #b00000000111111111111111111111111) (= (mask!5927 newMap!16) #b00000001111111111111111111111111) (= (mask!5927 newMap!16) #b00000011111111111111111111111111) (= (mask!5927 newMap!16) #b00000111111111111111111111111111) (= (mask!5927 newMap!16) #b00001111111111111111111111111111) (= (mask!5927 newMap!16) #b00011111111111111111111111111111) (= (mask!5927 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!5927 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!11333 d!11417))

(declare-fun d!11419 () Bool)

(declare-fun lt!24167 () Bool)

(declare-fun content!63 (List!1453) (InoxSet tuple2!2048))

(assert (=> d!11419 (= lt!24167 (select (content!63 (toList!704 lt!24153)) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!39135 () Bool)

(assert (=> d!11419 (= lt!24167 e!39135)))

(declare-fun res!33031 () Bool)

(assert (=> d!11419 (=> (not res!33031) (not e!39135))))

(assert (=> d!11419 (= res!33031 ((_ is Cons!1449) (toList!704 lt!24153)))))

(assert (=> d!11419 (= (contains!694 (toList!704 lt!24153) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!24167)))

(declare-fun b!59507 () Bool)

(declare-fun e!39136 () Bool)

(assert (=> b!59507 (= e!39135 e!39136)))

(declare-fun res!33032 () Bool)

(assert (=> b!59507 (=> res!33032 e!39136)))

(assert (=> b!59507 (= res!33032 (= (h!2030 (toList!704 lt!24153)) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!59508 () Bool)

(assert (=> b!59508 (= e!39136 (contains!694 (t!4799 (toList!704 lt!24153)) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!11419 res!33031) b!59507))

(assert (= (and b!59507 (not res!33032)) b!59508))

(declare-fun m!51399 () Bool)

(assert (=> d!11419 m!51399))

(declare-fun m!51401 () Bool)

(assert (=> d!11419 m!51401))

(declare-fun m!51403 () Bool)

(assert (=> b!59508 m!51403))

(assert (=> b!59481 d!11419))

(declare-fun d!11421 () Bool)

(assert (=> d!11421 (= (inRange!0 (ite c!7579 (index!3071 lt!23945) (index!3074 lt!23945)) (mask!5927 newMap!16)) (and (bvsge (ite c!7579 (index!3071 lt!23945) (index!3074 lt!23945)) #b00000000000000000000000000000000) (bvslt (ite c!7579 (index!3071 lt!23945) (index!3074 lt!23945)) (bvadd (mask!5927 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!4434 d!11421))

(declare-fun d!11423 () Bool)

(assert (=> d!11423 (= (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!59426 d!11423))

(declare-fun d!11425 () Bool)

(assert (=> d!11425 (= (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!298 (getValueByKey!123 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2574 () Bool)

(assert (= bs!2574 d!11425))

(assert (=> bs!2574 m!51017))

(declare-fun m!51405 () Bool)

(assert (=> bs!2574 m!51405))

(assert (=> b!59429 d!11425))

(declare-fun b!59512 () Bool)

(declare-fun e!39138 () Option!129)

(assert (=> b!59512 (= e!39138 None!127)))

(declare-fun d!11427 () Bool)

(declare-fun c!7622 () Bool)

(assert (=> d!11427 (= c!7622 (and ((_ is Cons!1449) (toList!704 lt!23743)) (= (_1!1034 (h!2030 (toList!704 lt!23743))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!39137 () Option!129)

(assert (=> d!11427 (= (getValueByKey!123 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000) e!39137)))

(declare-fun b!59509 () Bool)

(assert (=> b!59509 (= e!39137 (Some!128 (_2!1034 (h!2030 (toList!704 lt!23743)))))))

(declare-fun b!59511 () Bool)

(assert (=> b!59511 (= e!39138 (getValueByKey!123 (t!4799 (toList!704 lt!23743)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59510 () Bool)

(assert (=> b!59510 (= e!39137 e!39138)))

(declare-fun c!7623 () Bool)

(assert (=> b!59510 (= c!7623 (and ((_ is Cons!1449) (toList!704 lt!23743)) (not (= (_1!1034 (h!2030 (toList!704 lt!23743))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!11427 c!7622) b!59509))

(assert (= (and d!11427 (not c!7622)) b!59510))

(assert (= (and b!59510 c!7623) b!59511))

(assert (= (and b!59510 (not c!7623)) b!59512))

(declare-fun m!51407 () Bool)

(assert (=> b!59511 m!51407))

(assert (=> b!59429 d!11427))

(assert (=> b!59315 d!11279))

(declare-fun d!11429 () Bool)

(declare-fun e!39139 () Bool)

(assert (=> d!11429 e!39139))

(declare-fun res!33033 () Bool)

(assert (=> d!11429 (=> res!33033 e!39139)))

(declare-fun lt!24168 () Bool)

(assert (=> d!11429 (= res!33033 (not lt!24168))))

(declare-fun lt!24171 () Bool)

(assert (=> d!11429 (= lt!24168 lt!24171)))

(declare-fun lt!24170 () Unit!1553)

(declare-fun e!39140 () Unit!1553)

(assert (=> d!11429 (= lt!24170 e!39140)))

(declare-fun c!7624 () Bool)

(assert (=> d!11429 (= c!7624 lt!24171)))

(assert (=> d!11429 (= lt!24171 (containsKey!127 (toList!704 lt!24112) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!11429 (= (contains!692 lt!24112 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!24168)))

(declare-fun b!59513 () Bool)

(declare-fun lt!24169 () Unit!1553)

(assert (=> b!59513 (= e!39140 lt!24169)))

(assert (=> b!59513 (= lt!24169 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!24112) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!59513 (isDefined!77 (getValueByKey!123 (toList!704 lt!24112) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!59514 () Bool)

(declare-fun Unit!1578 () Unit!1553)

(assert (=> b!59514 (= e!39140 Unit!1578)))

(declare-fun b!59515 () Bool)

(assert (=> b!59515 (= e!39139 (isDefined!77 (getValueByKey!123 (toList!704 lt!24112) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!11429 c!7624) b!59513))

(assert (= (and d!11429 (not c!7624)) b!59514))

(assert (= (and d!11429 (not res!33033)) b!59515))

(declare-fun m!51409 () Bool)

(assert (=> d!11429 m!51409))

(declare-fun m!51411 () Bool)

(assert (=> b!59513 m!51411))

(assert (=> b!59513 m!51249))

(assert (=> b!59513 m!51249))

(declare-fun m!51413 () Bool)

(assert (=> b!59513 m!51413))

(assert (=> b!59515 m!51249))

(assert (=> b!59515 m!51249))

(assert (=> b!59515 m!51413))

(assert (=> d!11361 d!11429))

(declare-fun b!59519 () Bool)

(declare-fun e!39142 () Option!129)

(assert (=> b!59519 (= e!39142 None!127)))

(declare-fun c!7625 () Bool)

(declare-fun d!11431 () Bool)

(assert (=> d!11431 (= c!7625 (and ((_ is Cons!1449) lt!24109) (= (_1!1034 (h!2030 lt!24109)) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!39141 () Option!129)

(assert (=> d!11431 (= (getValueByKey!123 lt!24109 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!39141)))

(declare-fun b!59516 () Bool)

(assert (=> b!59516 (= e!39141 (Some!128 (_2!1034 (h!2030 lt!24109))))))

(declare-fun b!59518 () Bool)

(assert (=> b!59518 (= e!39142 (getValueByKey!123 (t!4799 lt!24109) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!59517 () Bool)

(assert (=> b!59517 (= e!39141 e!39142)))

(declare-fun c!7626 () Bool)

(assert (=> b!59517 (= c!7626 (and ((_ is Cons!1449) lt!24109) (not (= (_1!1034 (h!2030 lt!24109)) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!11431 c!7625) b!59516))

(assert (= (and d!11431 (not c!7625)) b!59517))

(assert (= (and b!59517 c!7626) b!59518))

(assert (= (and b!59517 (not c!7626)) b!59519))

(declare-fun m!51415 () Bool)

(assert (=> b!59518 m!51415))

(assert (=> d!11361 d!11431))

(declare-fun d!11433 () Bool)

(assert (=> d!11433 (= (getValueByKey!123 lt!24109 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!128 (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!24174 () Unit!1553)

(declare-fun choose!319 (List!1453 (_ BitVec 64) V!2843) Unit!1553)

(assert (=> d!11433 (= lt!24174 (choose!319 lt!24109 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!39145 () Bool)

(assert (=> d!11433 e!39145))

(declare-fun res!33038 () Bool)

(assert (=> d!11433 (=> (not res!33038) (not e!39145))))

(assert (=> d!11433 (= res!33038 (isStrictlySorted!279 lt!24109))))

(assert (=> d!11433 (= (lemmaContainsTupThenGetReturnValue!42 lt!24109 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!24174)))

(declare-fun b!59524 () Bool)

(declare-fun res!33039 () Bool)

(assert (=> b!59524 (=> (not res!33039) (not e!39145))))

(assert (=> b!59524 (= res!33039 (containsKey!127 lt!24109 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!59525 () Bool)

(assert (=> b!59525 (= e!39145 (contains!694 lt!24109 (tuple2!2049 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!11433 res!33038) b!59524))

(assert (= (and b!59524 res!33039) b!59525))

(assert (=> d!11433 m!51243))

(declare-fun m!51417 () Bool)

(assert (=> d!11433 m!51417))

(declare-fun m!51419 () Bool)

(assert (=> d!11433 m!51419))

(declare-fun m!51421 () Bool)

(assert (=> b!59524 m!51421))

(declare-fun m!51423 () Bool)

(assert (=> b!59525 m!51423))

(assert (=> d!11361 d!11433))

(declare-fun b!59546 () Bool)

(declare-fun lt!24177 () List!1453)

(declare-fun e!39159 () Bool)

(assert (=> b!59546 (= e!39159 (contains!694 lt!24177 (tuple2!2049 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!59547 () Bool)

(declare-fun e!39157 () List!1453)

(declare-fun e!39156 () List!1453)

(assert (=> b!59547 (= e!39157 e!39156)))

(declare-fun c!7635 () Bool)

(assert (=> b!59547 (= c!7635 (and ((_ is Cons!1449) (toList!704 e!38888)) (= (_1!1034 (h!2030 (toList!704 e!38888))) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!39158 () List!1453)

(declare-fun c!7638 () Bool)

(declare-fun call!4472 () List!1453)

(declare-fun bm!4467 () Bool)

(declare-fun $colon$colon!59 (List!1453 tuple2!2048) List!1453)

(assert (=> bm!4467 (= call!4472 ($colon$colon!59 e!39158 (ite c!7638 (h!2030 (toList!704 e!38888)) (tuple2!2049 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!7637 () Bool)

(assert (=> bm!4467 (= c!7637 c!7638)))

(declare-fun d!11435 () Bool)

(assert (=> d!11435 e!39159))

(declare-fun res!33045 () Bool)

(assert (=> d!11435 (=> (not res!33045) (not e!39159))))

(assert (=> d!11435 (= res!33045 (isStrictlySorted!279 lt!24177))))

(assert (=> d!11435 (= lt!24177 e!39157)))

(assert (=> d!11435 (= c!7638 (and ((_ is Cons!1449) (toList!704 e!38888)) (bvslt (_1!1034 (h!2030 (toList!704 e!38888))) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!11435 (isStrictlySorted!279 (toList!704 e!38888))))

(assert (=> d!11435 (= (insertStrictlySorted!44 (toList!704 e!38888) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!24177)))

(declare-fun b!59548 () Bool)

(declare-fun e!39160 () List!1453)

(declare-fun call!4470 () List!1453)

(assert (=> b!59548 (= e!39160 call!4470)))

(declare-fun b!59549 () Bool)

(assert (=> b!59549 (= e!39157 call!4472)))

(declare-fun bm!4468 () Bool)

(declare-fun call!4471 () List!1453)

(assert (=> bm!4468 (= call!4470 call!4471)))

(declare-fun c!7636 () Bool)

(declare-fun b!59550 () Bool)

(assert (=> b!59550 (= e!39158 (ite c!7635 (t!4799 (toList!704 e!38888)) (ite c!7636 (Cons!1449 (h!2030 (toList!704 e!38888)) (t!4799 (toList!704 e!38888))) Nil!1450)))))

(declare-fun b!59551 () Bool)

(assert (=> b!59551 (= e!39156 call!4471)))

(declare-fun b!59552 () Bool)

(declare-fun res!33044 () Bool)

(assert (=> b!59552 (=> (not res!33044) (not e!39159))))

(assert (=> b!59552 (= res!33044 (containsKey!127 lt!24177 (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!59553 () Bool)

(assert (=> b!59553 (= e!39160 call!4470)))

(declare-fun b!59554 () Bool)

(assert (=> b!59554 (= c!7636 (and ((_ is Cons!1449) (toList!704 e!38888)) (bvsgt (_1!1034 (h!2030 (toList!704 e!38888))) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!59554 (= e!39156 e!39160)))

(declare-fun b!59555 () Bool)

(assert (=> b!59555 (= e!39158 (insertStrictlySorted!44 (t!4799 (toList!704 e!38888)) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!4469 () Bool)

(assert (=> bm!4469 (= call!4471 call!4472)))

(assert (= (and d!11435 c!7638) b!59549))

(assert (= (and d!11435 (not c!7638)) b!59547))

(assert (= (and b!59547 c!7635) b!59551))

(assert (= (and b!59547 (not c!7635)) b!59554))

(assert (= (and b!59554 c!7636) b!59553))

(assert (= (and b!59554 (not c!7636)) b!59548))

(assert (= (or b!59553 b!59548) bm!4468))

(assert (= (or b!59551 bm!4468) bm!4469))

(assert (= (or b!59549 bm!4469) bm!4467))

(assert (= (and bm!4467 c!7637) b!59555))

(assert (= (and bm!4467 (not c!7637)) b!59550))

(assert (= (and d!11435 res!33045) b!59552))

(assert (= (and b!59552 res!33044) b!59546))

(declare-fun m!51425 () Bool)

(assert (=> b!59555 m!51425))

(declare-fun m!51427 () Bool)

(assert (=> b!59546 m!51427))

(declare-fun m!51429 () Bool)

(assert (=> bm!4467 m!51429))

(declare-fun m!51431 () Bool)

(assert (=> b!59552 m!51431))

(declare-fun m!51433 () Bool)

(assert (=> d!11435 m!51433))

(declare-fun m!51435 () Bool)

(assert (=> d!11435 m!51435))

(assert (=> d!11361 d!11435))

(declare-fun d!11437 () Bool)

(assert (=> d!11437 (= (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!59216 d!11437))

(declare-fun d!11439 () Bool)

(declare-fun res!33046 () Bool)

(declare-fun e!39161 () Bool)

(assert (=> d!11439 (=> res!33046 e!39161)))

(assert (=> d!11439 (= res!33046 (and ((_ is Cons!1449) (t!4799 (toList!704 lt!23660))) (= (_1!1034 (h!2030 (t!4799 (toList!704 lt!23660)))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(assert (=> d!11439 (= (containsKey!127 (t!4799 (toList!704 lt!23660)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) e!39161)))

(declare-fun b!59556 () Bool)

(declare-fun e!39162 () Bool)

(assert (=> b!59556 (= e!39161 e!39162)))

(declare-fun res!33047 () Bool)

(assert (=> b!59556 (=> (not res!33047) (not e!39162))))

(assert (=> b!59556 (= res!33047 (and (or (not ((_ is Cons!1449) (t!4799 (toList!704 lt!23660)))) (bvsle (_1!1034 (h!2030 (t!4799 (toList!704 lt!23660)))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))) ((_ is Cons!1449) (t!4799 (toList!704 lt!23660))) (bvslt (_1!1034 (h!2030 (t!4799 (toList!704 lt!23660)))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(declare-fun b!59557 () Bool)

(assert (=> b!59557 (= e!39162 (containsKey!127 (t!4799 (t!4799 (toList!704 lt!23660))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (= (and d!11439 (not res!33046)) b!59556))

(assert (= (and b!59556 res!33047) b!59557))

(assert (=> b!59557 m!50591))

(declare-fun m!51437 () Bool)

(assert (=> b!59557 m!51437))

(assert (=> b!59461 d!11439))

(assert (=> b!59373 d!11325))

(declare-fun lt!24178 () Bool)

(declare-fun d!11441 () Bool)

(assert (=> d!11441 (= lt!24178 (select (content!62 (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!39164 () Bool)

(assert (=> d!11441 (= lt!24178 e!39164)))

(declare-fun res!33048 () Bool)

(assert (=> d!11441 (=> (not res!33048) (not e!39164))))

(assert (=> d!11441 (= res!33048 ((_ is Cons!1450) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)))))

(assert (=> d!11441 (= (contains!693 (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!24178)))

(declare-fun b!59558 () Bool)

(declare-fun e!39163 () Bool)

(assert (=> b!59558 (= e!39164 e!39163)))

(declare-fun res!33049 () Bool)

(assert (=> b!59558 (=> res!33049 e!39163)))

(assert (=> b!59558 (= res!33049 (= (h!2031 (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!59559 () Bool)

(assert (=> b!59559 (= e!39163 (contains!693 (t!4800 (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!11441 res!33048) b!59558))

(assert (= (and b!59558 (not res!33049)) b!59559))

(declare-fun m!51439 () Bool)

(assert (=> d!11441 m!51439))

(assert (=> d!11441 m!51225))

(declare-fun m!51441 () Bool)

(assert (=> d!11441 m!51441))

(assert (=> b!59559 m!51225))

(declare-fun m!51443 () Bool)

(assert (=> b!59559 m!51443))

(assert (=> b!59423 d!11441))

(assert (=> b!59162 d!11437))

(declare-fun d!11443 () Bool)

(declare-fun e!39165 () Bool)

(assert (=> d!11443 e!39165))

(declare-fun res!33050 () Bool)

(assert (=> d!11443 (=> res!33050 e!39165)))

(declare-fun lt!24179 () Bool)

(assert (=> d!11443 (= res!33050 (not lt!24179))))

(declare-fun lt!24182 () Bool)

(assert (=> d!11443 (= lt!24179 lt!24182)))

(declare-fun lt!24181 () Unit!1553)

(declare-fun e!39166 () Unit!1553)

(assert (=> d!11443 (= lt!24181 e!39166)))

(declare-fun c!7639 () Bool)

(assert (=> d!11443 (= c!7639 lt!24182)))

(assert (=> d!11443 (= lt!24182 (containsKey!127 (toList!704 lt!23900) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11443 (= (contains!692 lt!23900 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24179)))

(declare-fun b!59560 () Bool)

(declare-fun lt!24180 () Unit!1553)

(assert (=> b!59560 (= e!39166 lt!24180)))

(assert (=> b!59560 (= lt!24180 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23900) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> b!59560 (isDefined!77 (getValueByKey!123 (toList!704 lt!23900) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!59561 () Bool)

(declare-fun Unit!1579 () Unit!1553)

(assert (=> b!59561 (= e!39166 Unit!1579)))

(declare-fun b!59562 () Bool)

(assert (=> b!59562 (= e!39165 (isDefined!77 (getValueByKey!123 (toList!704 lt!23900) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (= (and d!11443 c!7639) b!59560))

(assert (= (and d!11443 (not c!7639)) b!59561))

(assert (= (and d!11443 (not res!33050)) b!59562))

(declare-fun m!51445 () Bool)

(assert (=> d!11443 m!51445))

(declare-fun m!51447 () Bool)

(assert (=> b!59560 m!51447))

(assert (=> b!59560 m!50937))

(assert (=> b!59560 m!50937))

(declare-fun m!51449 () Bool)

(assert (=> b!59560 m!51449))

(assert (=> b!59562 m!50937))

(assert (=> b!59562 m!50937))

(assert (=> b!59562 m!51449))

(assert (=> d!11307 d!11443))

(declare-fun b!59566 () Bool)

(declare-fun e!39168 () Option!129)

(assert (=> b!59566 (= e!39168 None!127)))

(declare-fun d!11445 () Bool)

(declare-fun c!7640 () Bool)

(assert (=> d!11445 (= c!7640 (and ((_ is Cons!1449) lt!23897) (= (_1!1034 (h!2030 lt!23897)) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39167 () Option!129)

(assert (=> d!11445 (= (getValueByKey!123 lt!23897 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) e!39167)))

(declare-fun b!59563 () Bool)

(assert (=> b!59563 (= e!39167 (Some!128 (_2!1034 (h!2030 lt!23897))))))

(declare-fun b!59565 () Bool)

(assert (=> b!59565 (= e!39168 (getValueByKey!123 (t!4799 lt!23897) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!59564 () Bool)

(assert (=> b!59564 (= e!39167 e!39168)))

(declare-fun c!7641 () Bool)

(assert (=> b!59564 (= c!7641 (and ((_ is Cons!1449) lt!23897) (not (= (_1!1034 (h!2030 lt!23897)) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11445 c!7640) b!59563))

(assert (= (and d!11445 (not c!7640)) b!59564))

(assert (= (and b!59564 c!7641) b!59565))

(assert (= (and b!59564 (not c!7641)) b!59566))

(declare-fun m!51451 () Bool)

(assert (=> b!59565 m!51451))

(assert (=> d!11307 d!11445))

(declare-fun d!11447 () Bool)

(assert (=> d!11447 (= (getValueByKey!123 lt!23897 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun lt!24183 () Unit!1553)

(assert (=> d!11447 (= lt!24183 (choose!319 lt!23897 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun e!39169 () Bool)

(assert (=> d!11447 e!39169))

(declare-fun res!33051 () Bool)

(assert (=> d!11447 (=> (not res!33051) (not e!39169))))

(assert (=> d!11447 (= res!33051 (isStrictlySorted!279 lt!23897))))

(assert (=> d!11447 (= (lemmaContainsTupThenGetReturnValue!42 lt!23897 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24183)))

(declare-fun b!59567 () Bool)

(declare-fun res!33052 () Bool)

(assert (=> b!59567 (=> (not res!33052) (not e!39169))))

(assert (=> b!59567 (= res!33052 (containsKey!127 lt!23897 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!59568 () Bool)

(assert (=> b!59568 (= e!39169 (contains!694 lt!23897 (tuple2!2049 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (= (and d!11447 res!33051) b!59567))

(assert (= (and b!59567 res!33052) b!59568))

(assert (=> d!11447 m!50931))

(declare-fun m!51453 () Bool)

(assert (=> d!11447 m!51453))

(declare-fun m!51455 () Bool)

(assert (=> d!11447 m!51455))

(declare-fun m!51457 () Bool)

(assert (=> b!59567 m!51457))

(declare-fun m!51459 () Bool)

(assert (=> b!59568 m!51459))

(assert (=> d!11307 d!11447))

(declare-fun b!59569 () Bool)

(declare-fun e!39173 () Bool)

(declare-fun lt!24184 () List!1453)

(assert (=> b!59569 (= e!39173 (contains!694 lt!24184 (tuple2!2049 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!59570 () Bool)

(declare-fun e!39171 () List!1453)

(declare-fun e!39170 () List!1453)

(assert (=> b!59570 (= e!39171 e!39170)))

(declare-fun c!7642 () Bool)

(assert (=> b!59570 (= c!7642 (and ((_ is Cons!1449) (toList!704 call!4337)) (= (_1!1034 (h!2030 (toList!704 call!4337))) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun bm!4470 () Bool)

(declare-fun e!39172 () List!1453)

(declare-fun call!4475 () List!1453)

(declare-fun c!7645 () Bool)

(assert (=> bm!4470 (= call!4475 ($colon$colon!59 e!39172 (ite c!7645 (h!2030 (toList!704 call!4337)) (tuple2!2049 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(declare-fun c!7644 () Bool)

(assert (=> bm!4470 (= c!7644 c!7645)))

(declare-fun d!11449 () Bool)

(assert (=> d!11449 e!39173))

(declare-fun res!33054 () Bool)

(assert (=> d!11449 (=> (not res!33054) (not e!39173))))

(assert (=> d!11449 (= res!33054 (isStrictlySorted!279 lt!24184))))

(assert (=> d!11449 (= lt!24184 e!39171)))

(assert (=> d!11449 (= c!7645 (and ((_ is Cons!1449) (toList!704 call!4337)) (bvslt (_1!1034 (h!2030 (toList!704 call!4337))) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> d!11449 (isStrictlySorted!279 (toList!704 call!4337))))

(assert (=> d!11449 (= (insertStrictlySorted!44 (toList!704 call!4337) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24184)))

(declare-fun b!59571 () Bool)

(declare-fun e!39174 () List!1453)

(declare-fun call!4473 () List!1453)

(assert (=> b!59571 (= e!39174 call!4473)))

(declare-fun b!59572 () Bool)

(assert (=> b!59572 (= e!39171 call!4475)))

(declare-fun bm!4471 () Bool)

(declare-fun call!4474 () List!1453)

(assert (=> bm!4471 (= call!4473 call!4474)))

(declare-fun b!59573 () Bool)

(declare-fun c!7643 () Bool)

(assert (=> b!59573 (= e!39172 (ite c!7642 (t!4799 (toList!704 call!4337)) (ite c!7643 (Cons!1449 (h!2030 (toList!704 call!4337)) (t!4799 (toList!704 call!4337))) Nil!1450)))))

(declare-fun b!59574 () Bool)

(assert (=> b!59574 (= e!39170 call!4474)))

(declare-fun b!59575 () Bool)

(declare-fun res!33053 () Bool)

(assert (=> b!59575 (=> (not res!33053) (not e!39173))))

(assert (=> b!59575 (= res!33053 (containsKey!127 lt!24184 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!59576 () Bool)

(assert (=> b!59576 (= e!39174 call!4473)))

(declare-fun b!59577 () Bool)

(assert (=> b!59577 (= c!7643 (and ((_ is Cons!1449) (toList!704 call!4337)) (bvsgt (_1!1034 (h!2030 (toList!704 call!4337))) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> b!59577 (= e!39170 e!39174)))

(declare-fun b!59578 () Bool)

(assert (=> b!59578 (= e!39172 (insertStrictlySorted!44 (t!4799 (toList!704 call!4337)) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun bm!4472 () Bool)

(assert (=> bm!4472 (= call!4474 call!4475)))

(assert (= (and d!11449 c!7645) b!59572))

(assert (= (and d!11449 (not c!7645)) b!59570))

(assert (= (and b!59570 c!7642) b!59574))

(assert (= (and b!59570 (not c!7642)) b!59577))

(assert (= (and b!59577 c!7643) b!59576))

(assert (= (and b!59577 (not c!7643)) b!59571))

(assert (= (or b!59576 b!59571) bm!4471))

(assert (= (or b!59574 bm!4471) bm!4472))

(assert (= (or b!59572 bm!4472) bm!4470))

(assert (= (and bm!4470 c!7644) b!59578))

(assert (= (and bm!4470 (not c!7644)) b!59573))

(assert (= (and d!11449 res!33054) b!59575))

(assert (= (and b!59575 res!33053) b!59569))

(declare-fun m!51461 () Bool)

(assert (=> b!59578 m!51461))

(declare-fun m!51463 () Bool)

(assert (=> b!59569 m!51463))

(declare-fun m!51465 () Bool)

(assert (=> bm!4470 m!51465))

(declare-fun m!51467 () Bool)

(assert (=> b!59575 m!51467))

(declare-fun m!51469 () Bool)

(assert (=> d!11449 m!51469))

(declare-fun m!51471 () Bool)

(assert (=> d!11449 m!51471))

(assert (=> d!11307 d!11449))

(declare-fun b!59579 () Bool)

(declare-fun e!39177 () Bool)

(declare-fun call!4476 () Bool)

(assert (=> b!59579 (= e!39177 call!4476)))

(declare-fun d!11451 () Bool)

(declare-fun res!33055 () Bool)

(declare-fun e!39175 () Bool)

(assert (=> d!11451 (=> res!33055 e!39175)))

(assert (=> d!11451 (= res!33055 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> d!11451 (= (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000000 Nil!1451) e!39175)))

(declare-fun b!59580 () Bool)

(declare-fun e!39176 () Bool)

(assert (=> b!59580 (= e!39176 (contains!693 Nil!1451 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!59581 () Bool)

(declare-fun e!39178 () Bool)

(assert (=> b!59581 (= e!39175 e!39178)))

(declare-fun res!33057 () Bool)

(assert (=> b!59581 (=> (not res!33057) (not e!39178))))

(assert (=> b!59581 (= res!33057 (not e!39176))))

(declare-fun res!33056 () Bool)

(assert (=> b!59581 (=> (not res!33056) (not e!39176))))

(assert (=> b!59581 (= res!33056 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!59582 () Bool)

(assert (=> b!59582 (= e!39177 call!4476)))

(declare-fun bm!4473 () Bool)

(declare-fun c!7646 () Bool)

(assert (=> bm!4473 (= call!4476 (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!7646 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b00000000000000000000000000000000) Nil!1451) Nil!1451)))))

(declare-fun b!59583 () Bool)

(assert (=> b!59583 (= e!39178 e!39177)))

(assert (=> b!59583 (= c!7646 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!11451 (not res!33055)) b!59581))

(assert (= (and b!59581 res!33056) b!59580))

(assert (= (and b!59581 res!33057) b!59583))

(assert (= (and b!59583 c!7646) b!59579))

(assert (= (and b!59583 (not c!7646)) b!59582))

(assert (= (or b!59579 b!59582) bm!4473))

(declare-fun m!51473 () Bool)

(assert (=> b!59580 m!51473))

(assert (=> b!59580 m!51473))

(declare-fun m!51475 () Bool)

(assert (=> b!59580 m!51475))

(assert (=> b!59581 m!51473))

(assert (=> b!59581 m!51473))

(declare-fun m!51477 () Bool)

(assert (=> b!59581 m!51477))

(assert (=> bm!4473 m!51473))

(declare-fun m!51479 () Bool)

(assert (=> bm!4473 m!51479))

(assert (=> b!59583 m!51473))

(assert (=> b!59583 m!51473))

(assert (=> b!59583 m!51477))

(assert (=> b!59421 d!11451))

(declare-fun d!11453 () Bool)

(declare-fun e!39179 () Bool)

(assert (=> d!11453 e!39179))

(declare-fun res!33058 () Bool)

(assert (=> d!11453 (=> res!33058 e!39179)))

(declare-fun lt!24185 () Bool)

(assert (=> d!11453 (= res!33058 (not lt!24185))))

(declare-fun lt!24188 () Bool)

(assert (=> d!11453 (= lt!24185 lt!24188)))

(declare-fun lt!24187 () Unit!1553)

(declare-fun e!39180 () Unit!1553)

(assert (=> d!11453 (= lt!24187 e!39180)))

(declare-fun c!7647 () Bool)

(assert (=> d!11453 (= c!7647 lt!24188)))

(assert (=> d!11453 (= lt!24188 (containsKey!127 (toList!704 lt!24083) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!11453 (= (contains!692 lt!24083 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) lt!24185)))

(declare-fun b!59584 () Bool)

(declare-fun lt!24186 () Unit!1553)

(assert (=> b!59584 (= e!39180 lt!24186)))

(assert (=> b!59584 (= lt!24186 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!24083) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!59584 (isDefined!77 (getValueByKey!123 (toList!704 lt!24083) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!59585 () Bool)

(declare-fun Unit!1580 () Unit!1553)

(assert (=> b!59585 (= e!39180 Unit!1580)))

(declare-fun b!59586 () Bool)

(assert (=> b!59586 (= e!39179 (isDefined!77 (getValueByKey!123 (toList!704 lt!24083) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!11453 c!7647) b!59584))

(assert (= (and d!11453 (not c!7647)) b!59585))

(assert (= (and d!11453 (not res!33058)) b!59586))

(assert (=> d!11453 m!50843))

(declare-fun m!51481 () Bool)

(assert (=> d!11453 m!51481))

(assert (=> b!59584 m!50843))

(declare-fun m!51483 () Bool)

(assert (=> b!59584 m!51483))

(assert (=> b!59584 m!50843))

(declare-fun m!51485 () Bool)

(assert (=> b!59584 m!51485))

(assert (=> b!59584 m!51485))

(declare-fun m!51487 () Bool)

(assert (=> b!59584 m!51487))

(assert (=> b!59586 m!50843))

(assert (=> b!59586 m!51485))

(assert (=> b!59586 m!51485))

(assert (=> b!59586 m!51487))

(assert (=> b!59402 d!11453))

(assert (=> bm!4447 d!11351))

(assert (=> d!11371 d!11373))

(assert (=> d!11371 d!11389))

(declare-fun d!11455 () Bool)

(assert (=> d!11455 (= (apply!66 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23745) (apply!66 lt!23754 lt!23745))))

(assert (=> d!11455 true))

(declare-fun _$34!760 () Unit!1553)

(assert (=> d!11455 (= (choose!317 lt!23754 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23745) _$34!760)))

(declare-fun bs!2575 () Bool)

(assert (= bs!2575 d!11455))

(assert (=> bs!2575 m!50717))

(assert (=> bs!2575 m!50717))

(assert (=> bs!2575 m!50723))

(assert (=> bs!2575 m!50727))

(assert (=> d!11371 d!11455))

(assert (=> d!11371 d!11379))

(declare-fun d!11457 () Bool)

(declare-fun e!39181 () Bool)

(assert (=> d!11457 e!39181))

(declare-fun res!33059 () Bool)

(assert (=> d!11457 (=> res!33059 e!39181)))

(declare-fun lt!24189 () Bool)

(assert (=> d!11457 (= res!33059 (not lt!24189))))

(declare-fun lt!24192 () Bool)

(assert (=> d!11457 (= lt!24189 lt!24192)))

(declare-fun lt!24191 () Unit!1553)

(declare-fun e!39182 () Unit!1553)

(assert (=> d!11457 (= lt!24191 e!39182)))

(declare-fun c!7648 () Bool)

(assert (=> d!11457 (= c!7648 lt!24192)))

(assert (=> d!11457 (= lt!24192 (containsKey!127 (toList!704 lt!23754) lt!23745))))

(assert (=> d!11457 (= (contains!692 lt!23754 lt!23745) lt!24189)))

(declare-fun b!59587 () Bool)

(declare-fun lt!24190 () Unit!1553)

(assert (=> b!59587 (= e!39182 lt!24190)))

(assert (=> b!59587 (= lt!24190 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23754) lt!23745))))

(assert (=> b!59587 (isDefined!77 (getValueByKey!123 (toList!704 lt!23754) lt!23745))))

(declare-fun b!59588 () Bool)

(declare-fun Unit!1581 () Unit!1553)

(assert (=> b!59588 (= e!39182 Unit!1581)))

(declare-fun b!59589 () Bool)

(assert (=> b!59589 (= e!39181 (isDefined!77 (getValueByKey!123 (toList!704 lt!23754) lt!23745)))))

(assert (= (and d!11457 c!7648) b!59587))

(assert (= (and d!11457 (not c!7648)) b!59588))

(assert (= (and d!11457 (not res!33059)) b!59589))

(declare-fun m!51489 () Bool)

(assert (=> d!11457 m!51489))

(declare-fun m!51491 () Bool)

(assert (=> b!59587 m!51491))

(assert (=> b!59587 m!51335))

(assert (=> b!59587 m!51335))

(declare-fun m!51493 () Bool)

(assert (=> b!59587 m!51493))

(assert (=> b!59589 m!51335))

(assert (=> b!59589 m!51335))

(assert (=> b!59589 m!51493))

(assert (=> d!11371 d!11457))

(declare-fun d!11459 () Bool)

(assert (=> d!11459 (= (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!298 (getValueByKey!123 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2576 () Bool)

(assert (= bs!2576 d!11459))

(assert (=> bs!2576 m!51153))

(declare-fun m!51495 () Bool)

(assert (=> bs!2576 m!51495))

(assert (=> b!59416 d!11459))

(declare-fun b!59593 () Bool)

(declare-fun e!39184 () Option!129)

(assert (=> b!59593 (= e!39184 None!127)))

(declare-fun d!11461 () Bool)

(declare-fun c!7649 () Bool)

(assert (=> d!11461 (= c!7649 (and ((_ is Cons!1449) (toList!704 lt!23743)) (= (_1!1034 (h!2030 (toList!704 lt!23743))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!39183 () Option!129)

(assert (=> d!11461 (= (getValueByKey!123 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000) e!39183)))

(declare-fun b!59590 () Bool)

(assert (=> b!59590 (= e!39183 (Some!128 (_2!1034 (h!2030 (toList!704 lt!23743)))))))

(declare-fun b!59592 () Bool)

(assert (=> b!59592 (= e!39184 (getValueByKey!123 (t!4799 (toList!704 lt!23743)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59591 () Bool)

(assert (=> b!59591 (= e!39183 e!39184)))

(declare-fun c!7650 () Bool)

(assert (=> b!59591 (= c!7650 (and ((_ is Cons!1449) (toList!704 lt!23743)) (not (= (_1!1034 (h!2030 (toList!704 lt!23743))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!11461 c!7649) b!59590))

(assert (= (and d!11461 (not c!7649)) b!59591))

(assert (= (and b!59591 c!7650) b!59592))

(assert (= (and b!59591 (not c!7650)) b!59593))

(declare-fun m!51497 () Bool)

(assert (=> b!59592 m!51497))

(assert (=> b!59416 d!11461))

(assert (=> b!59290 d!11365))

(declare-fun lt!24197 () SeekEntryResult!237)

(declare-fun d!11463 () Bool)

(assert (=> d!11463 (and (or ((_ is Undefined!237) lt!24197) (not ((_ is Found!237) lt!24197)) (and (bvsge (index!3072 lt!24197) #b00000000000000000000000000000000) (bvslt (index!3072 lt!24197) (size!2010 (_keys!3667 newMap!16))))) (or ((_ is Undefined!237) lt!24197) ((_ is Found!237) lt!24197) (not ((_ is MissingVacant!237) lt!24197)) (not (= (index!3074 lt!24197) (index!3073 lt!23938))) (and (bvsge (index!3074 lt!24197) #b00000000000000000000000000000000) (bvslt (index!3074 lt!24197) (size!2010 (_keys!3667 newMap!16))))) (or ((_ is Undefined!237) lt!24197) (ite ((_ is Found!237) lt!24197) (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!24197)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (and ((_ is MissingVacant!237) lt!24197) (= (index!3074 lt!24197) (index!3073 lt!23938)) (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3074 lt!24197)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!39192 () SeekEntryResult!237)

(assert (=> d!11463 (= lt!24197 e!39192)))

(declare-fun c!7657 () Bool)

(assert (=> d!11463 (= c!7657 (bvsge (x!10013 lt!23938) #b01111111111111111111111111111110))))

(declare-fun lt!24198 () (_ BitVec 64))

(assert (=> d!11463 (= lt!24198 (select (arr!1780 (_keys!3667 newMap!16)) (index!3073 lt!23938)))))

(assert (=> d!11463 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11463 (= (seekKeyOrZeroReturnVacant!0 (x!10013 lt!23938) (index!3073 lt!23938) (index!3073 lt!23938) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)) lt!24197)))

(declare-fun b!59606 () Bool)

(declare-fun e!39191 () SeekEntryResult!237)

(assert (=> b!59606 (= e!39192 e!39191)))

(declare-fun c!7658 () Bool)

(assert (=> b!59606 (= c!7658 (= lt!24198 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59607 () Bool)

(declare-fun e!39193 () SeekEntryResult!237)

(assert (=> b!59607 (= e!39193 (MissingVacant!237 (index!3073 lt!23938)))))

(declare-fun b!59608 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!59608 (= e!39193 (seekKeyOrZeroReturnVacant!0 (bvadd (x!10013 lt!23938) #b00000000000000000000000000000001) (nextIndex!0 (index!3073 lt!23938) (x!10013 lt!23938) (mask!5927 newMap!16)) (index!3073 lt!23938) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(declare-fun b!59609 () Bool)

(assert (=> b!59609 (= e!39191 (Found!237 (index!3073 lt!23938)))))

(declare-fun b!59610 () Bool)

(declare-fun c!7659 () Bool)

(assert (=> b!59610 (= c!7659 (= lt!24198 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59610 (= e!39191 e!39193)))

(declare-fun b!59611 () Bool)

(assert (=> b!59611 (= e!39192 Undefined!237)))

(assert (= (and d!11463 c!7657) b!59611))

(assert (= (and d!11463 (not c!7657)) b!59606))

(assert (= (and b!59606 c!7658) b!59609))

(assert (= (and b!59606 (not c!7658)) b!59610))

(assert (= (and b!59610 c!7659) b!59607))

(assert (= (and b!59610 (not c!7659)) b!59608))

(declare-fun m!51499 () Bool)

(assert (=> d!11463 m!51499))

(declare-fun m!51501 () Bool)

(assert (=> d!11463 m!51501))

(assert (=> d!11463 m!51033))

(assert (=> d!11463 m!50833))

(declare-fun m!51503 () Bool)

(assert (=> b!59608 m!51503))

(assert (=> b!59608 m!51503))

(assert (=> b!59608 m!50591))

(declare-fun m!51505 () Bool)

(assert (=> b!59608 m!51505))

(assert (=> b!59259 d!11463))

(declare-fun d!11465 () Bool)

(assert (=> d!11465 (= (inRange!0 (index!3072 lt!23978) (mask!5927 newMap!16)) (and (bvsge (index!3072 lt!23978) #b00000000000000000000000000000000) (bvslt (index!3072 lt!23978) (bvadd (mask!5927 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!59331 d!11465))

(declare-fun d!11467 () Bool)

(declare-fun e!39194 () Bool)

(assert (=> d!11467 e!39194))

(declare-fun res!33060 () Bool)

(assert (=> d!11467 (=> res!33060 e!39194)))

(declare-fun lt!24199 () Bool)

(assert (=> d!11467 (= res!33060 (not lt!24199))))

(declare-fun lt!24202 () Bool)

(assert (=> d!11467 (= lt!24199 lt!24202)))

(declare-fun lt!24201 () Unit!1553)

(declare-fun e!39195 () Unit!1553)

(assert (=> d!11467 (= lt!24201 e!39195)))

(declare-fun c!7660 () Bool)

(assert (=> d!11467 (= c!7660 lt!24202)))

(assert (=> d!11467 (= lt!24202 (containsKey!127 (toList!704 (getCurrentListMap!401 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)))))))

(assert (=> d!11467 (= (contains!692 (getCurrentListMap!401 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (select (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)))) lt!24199)))

(declare-fun b!59612 () Bool)

(declare-fun lt!24200 () Unit!1553)

(assert (=> b!59612 (= e!39195 lt!24200)))

(assert (=> b!59612 (= lt!24200 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 (getCurrentListMap!401 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)))))))

(assert (=> b!59612 (isDefined!77 (getValueByKey!123 (toList!704 (getCurrentListMap!401 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)))))))

(declare-fun b!59613 () Bool)

(declare-fun Unit!1582 () Unit!1553)

(assert (=> b!59613 (= e!39195 Unit!1582)))

(declare-fun b!59614 () Bool)

(assert (=> b!59614 (= e!39194 (isDefined!77 (getValueByKey!123 (toList!704 (getCurrentListMap!401 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839))))))))

(assert (= (and d!11467 c!7660) b!59612))

(assert (= (and d!11467 (not c!7660)) b!59613))

(assert (= (and d!11467 (not res!33060)) b!59614))

(assert (=> d!11467 m!51095))

(declare-fun m!51507 () Bool)

(assert (=> d!11467 m!51507))

(assert (=> b!59612 m!51095))

(declare-fun m!51509 () Bool)

(assert (=> b!59612 m!51509))

(assert (=> b!59612 m!51095))

(declare-fun m!51511 () Bool)

(assert (=> b!59612 m!51511))

(assert (=> b!59612 m!51511))

(declare-fun m!51513 () Bool)

(assert (=> b!59612 m!51513))

(assert (=> b!59614 m!51095))

(assert (=> b!59614 m!51511))

(assert (=> b!59614 m!51511))

(assert (=> b!59614 m!51513))

(assert (=> d!11337 d!11467))

(declare-fun call!4477 () Bool)

(declare-fun bm!4474 () Bool)

(assert (=> bm!4474 (= call!4477 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (mask!5927 newMap!16)))))

(declare-fun b!59615 () Bool)

(declare-fun e!39197 () Bool)

(assert (=> b!59615 (= e!39197 call!4477)))

(declare-fun b!59616 () Bool)

(declare-fun e!39196 () Bool)

(assert (=> b!59616 (= e!39196 call!4477)))

(declare-fun b!59617 () Bool)

(declare-fun e!39198 () Bool)

(assert (=> b!59617 (= e!39198 e!39197)))

(declare-fun c!7661 () Bool)

(assert (=> b!59617 (= c!7661 (validKeyInArray!0 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!11469 () Bool)

(declare-fun res!33062 () Bool)

(assert (=> d!11469 (=> res!33062 e!39198)))

(assert (=> d!11469 (= res!33062 (bvsge #b00000000000000000000000000000000 (size!2010 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))))))

(assert (=> d!11469 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (mask!5927 newMap!16)) e!39198)))

(declare-fun b!59618 () Bool)

(assert (=> b!59618 (= e!39197 e!39196)))

(declare-fun lt!24205 () (_ BitVec 64))

(assert (=> b!59618 (= lt!24205 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!24203 () Unit!1553)

(assert (=> b!59618 (= lt!24203 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) lt!24205 #b00000000000000000000000000000000))))

(assert (=> b!59618 (arrayContainsKey!0 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) lt!24205 #b00000000000000000000000000000000)))

(declare-fun lt!24204 () Unit!1553)

(assert (=> b!59618 (= lt!24204 lt!24203)))

(declare-fun res!33061 () Bool)

(assert (=> b!59618 (= res!33061 (= (seekEntryOrOpen!0 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000) (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (mask!5927 newMap!16)) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!59618 (=> (not res!33061) (not e!39196))))

(assert (= (and d!11469 (not res!33062)) b!59617))

(assert (= (and b!59617 c!7661) b!59618))

(assert (= (and b!59617 (not c!7661)) b!59615))

(assert (= (and b!59618 res!33061) b!59616))

(assert (= (or b!59616 b!59615) bm!4474))

(declare-fun m!51515 () Bool)

(assert (=> bm!4474 m!51515))

(declare-fun m!51517 () Bool)

(assert (=> b!59617 m!51517))

(assert (=> b!59617 m!51517))

(declare-fun m!51519 () Bool)

(assert (=> b!59617 m!51519))

(assert (=> b!59618 m!51517))

(declare-fun m!51521 () Bool)

(assert (=> b!59618 m!51521))

(declare-fun m!51523 () Bool)

(assert (=> b!59618 m!51523))

(assert (=> b!59618 m!51517))

(declare-fun m!51525 () Bool)

(assert (=> b!59618 m!51525))

(assert (=> d!11337 d!11469))

(assert (=> d!11337 d!11343))

(assert (=> d!11337 d!11289))

(assert (=> d!11337 d!11245))

(declare-fun b!59619 () Bool)

(declare-fun e!39201 () Bool)

(declare-fun call!4478 () Bool)

(assert (=> b!59619 (= e!39201 call!4478)))

(declare-fun d!11471 () Bool)

(declare-fun res!33063 () Bool)

(declare-fun e!39199 () Bool)

(assert (=> d!11471 (=> res!33063 e!39199)))

(assert (=> d!11471 (= res!33063 (bvsge lt!24041 (size!2010 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))))))

(assert (=> d!11471 (= (arrayNoDuplicates!0 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) lt!24041 lt!24045) e!39199)))

(declare-fun e!39200 () Bool)

(declare-fun b!59620 () Bool)

(assert (=> b!59620 (= e!39200 (contains!693 lt!24045 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) lt!24041)))))

(declare-fun b!59621 () Bool)

(declare-fun e!39202 () Bool)

(assert (=> b!59621 (= e!39199 e!39202)))

(declare-fun res!33065 () Bool)

(assert (=> b!59621 (=> (not res!33065) (not e!39202))))

(assert (=> b!59621 (= res!33065 (not e!39200))))

(declare-fun res!33064 () Bool)

(assert (=> b!59621 (=> (not res!33064) (not e!39200))))

(assert (=> b!59621 (= res!33064 (validKeyInArray!0 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) lt!24041)))))

(declare-fun b!59622 () Bool)

(assert (=> b!59622 (= e!39201 call!4478)))

(declare-fun c!7662 () Bool)

(declare-fun bm!4475 () Bool)

(assert (=> bm!4475 (= call!4478 (arrayNoDuplicates!0 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (bvadd lt!24041 #b00000000000000000000000000000001) (ite c!7662 (Cons!1450 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) lt!24041) lt!24045) lt!24045)))))

(declare-fun b!59623 () Bool)

(assert (=> b!59623 (= e!39202 e!39201)))

(assert (=> b!59623 (= c!7662 (validKeyInArray!0 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) lt!24041)))))

(assert (= (and d!11471 (not res!33063)) b!59621))

(assert (= (and b!59621 res!33064) b!59620))

(assert (= (and b!59621 res!33065) b!59623))

(assert (= (and b!59623 c!7662) b!59619))

(assert (= (and b!59623 (not c!7662)) b!59622))

(assert (= (or b!59619 b!59622) bm!4475))

(declare-fun m!51527 () Bool)

(assert (=> b!59620 m!51527))

(assert (=> b!59620 m!51527))

(declare-fun m!51529 () Bool)

(assert (=> b!59620 m!51529))

(assert (=> b!59621 m!51527))

(assert (=> b!59621 m!51527))

(declare-fun m!51531 () Bool)

(assert (=> b!59621 m!51531))

(assert (=> bm!4475 m!51527))

(declare-fun m!51533 () Bool)

(assert (=> bm!4475 m!51533))

(assert (=> b!59623 m!51527))

(assert (=> b!59623 m!51527))

(assert (=> b!59623 m!51531))

(assert (=> d!11337 d!11471))

(assert (=> d!11337 d!11351))

(declare-fun call!4479 () (_ BitVec 32))

(declare-fun bm!4476 () Bool)

(assert (=> bm!4476 (= call!4479 (arrayCountValidKeys!0 lt!24050 (bvadd (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000001) (bvadd (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000001)))))

(declare-fun lt!24206 () (_ BitVec 32))

(declare-fun d!11473 () Bool)

(assert (=> d!11473 (and (bvsge lt!24206 #b00000000000000000000000000000000) (bvsle lt!24206 (bvsub (size!2010 lt!24050) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)))))))

(declare-fun e!39204 () (_ BitVec 32))

(assert (=> d!11473 (= lt!24206 e!39204)))

(declare-fun c!7664 () Bool)

(assert (=> d!11473 (= c!7664 (bvsge (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (bvadd (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000001)))))

(assert (=> d!11473 (and (bvsle (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (bvadd (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000001)) (bvsge (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000001) (size!2010 lt!24050)))))

(assert (=> d!11473 (= (arrayCountValidKeys!0 lt!24050 (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (bvadd (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000001)) lt!24206)))

(declare-fun b!59624 () Bool)

(declare-fun e!39203 () (_ BitVec 32))

(assert (=> b!59624 (= e!39204 e!39203)))

(declare-fun c!7663 () Bool)

(assert (=> b!59624 (= c!7663 (validKeyInArray!0 (select (arr!1780 lt!24050) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)))))))

(declare-fun b!59625 () Bool)

(assert (=> b!59625 (= e!39203 (bvadd #b00000000000000000000000000000001 call!4479))))

(declare-fun b!59626 () Bool)

(assert (=> b!59626 (= e!39204 #b00000000000000000000000000000000)))

(declare-fun b!59627 () Bool)

(assert (=> b!59627 (= e!39203 call!4479)))

(assert (= (and d!11473 c!7664) b!59626))

(assert (= (and d!11473 (not c!7664)) b!59624))

(assert (= (and b!59624 c!7663) b!59625))

(assert (= (and b!59624 (not c!7663)) b!59627))

(assert (= (or b!59625 b!59627) bm!4476))

(declare-fun m!51535 () Bool)

(assert (=> bm!4476 m!51535))

(declare-fun m!51537 () Bool)

(assert (=> b!59624 m!51537))

(assert (=> b!59624 m!51537))

(declare-fun m!51539 () Bool)

(assert (=> b!59624 m!51539))

(assert (=> d!11337 d!11473))

(declare-fun d!11475 () Bool)

(declare-fun e!39207 () Bool)

(assert (=> d!11475 e!39207))

(declare-fun res!33068 () Bool)

(assert (=> d!11475 (=> (not res!33068) (not e!39207))))

(assert (=> d!11475 (= res!33068 (and (bvsge (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000000) (bvslt (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (size!2010 (_keys!3667 newMap!16)))))))

(declare-fun lt!24209 () Unit!1553)

(declare-fun choose!41 (array!3720 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1454) Unit!1553)

(assert (=> d!11475 (= lt!24209 (choose!41 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) lt!24041 lt!24045))))

(assert (=> d!11475 (bvslt (size!2010 (_keys!3667 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!11475 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) lt!24041 lt!24045) lt!24209)))

(declare-fun b!59630 () Bool)

(assert (=> b!59630 (= e!39207 (arrayNoDuplicates!0 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) lt!24041 lt!24045))))

(assert (= (and d!11475 res!33068) b!59630))

(assert (=> d!11475 m!50591))

(declare-fun m!51541 () Bool)

(assert (=> d!11475 m!51541))

(assert (=> b!59630 m!51113))

(assert (=> b!59630 m!51121))

(assert (=> d!11337 d!11475))

(declare-fun call!4480 () (_ BitVec 32))

(declare-fun bm!4477 () Bool)

(assert (=> bm!4477 (= call!4480 (arrayCountValidKeys!0 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun d!11477 () Bool)

(declare-fun lt!24210 () (_ BitVec 32))

(assert (=> d!11477 (and (bvsge lt!24210 #b00000000000000000000000000000000) (bvsle lt!24210 (bvsub (size!2010 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!39209 () (_ BitVec 32))

(assert (=> d!11477 (= lt!24210 e!39209)))

(declare-fun c!7666 () Bool)

(assert (=> d!11477 (= c!7666 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11477 (and (bvsle #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2010 (_keys!3667 newMap!16)) (size!2010 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))))))

(assert (=> d!11477 (= (arrayCountValidKeys!0 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) lt!24210)))

(declare-fun b!59631 () Bool)

(declare-fun e!39208 () (_ BitVec 32))

(assert (=> b!59631 (= e!39209 e!39208)))

(declare-fun c!7665 () Bool)

(assert (=> b!59631 (= c!7665 (validKeyInArray!0 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!59632 () Bool)

(assert (=> b!59632 (= e!39208 (bvadd #b00000000000000000000000000000001 call!4480))))

(declare-fun b!59633 () Bool)

(assert (=> b!59633 (= e!39209 #b00000000000000000000000000000000)))

(declare-fun b!59634 () Bool)

(assert (=> b!59634 (= e!39208 call!4480)))

(assert (= (and d!11477 c!7666) b!59633))

(assert (= (and d!11477 (not c!7666)) b!59631))

(assert (= (and b!59631 c!7665) b!59632))

(assert (= (and b!59631 (not c!7665)) b!59634))

(assert (= (or b!59632 b!59634) bm!4477))

(declare-fun m!51543 () Bool)

(assert (=> bm!4477 m!51543))

(assert (=> b!59631 m!51517))

(assert (=> b!59631 m!51517))

(assert (=> b!59631 m!51519))

(assert (=> d!11337 d!11477))

(declare-fun bm!4478 () Bool)

(declare-fun call!4481 () ListLongMap!1377)

(declare-fun call!4483 () ListLongMap!1377)

(assert (=> bm!4478 (= call!4481 call!4483)))

(declare-fun d!11479 () Bool)

(declare-fun e!39211 () Bool)

(assert (=> d!11479 e!39211))

(declare-fun res!33076 () Bool)

(assert (=> d!11479 (=> (not res!33076) (not e!39211))))

(assert (=> d!11479 (= res!33076 (or (bvsge #b00000000000000000000000000000000 (size!2010 lt!24048)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 lt!24048)))))))

(declare-fun lt!24215 () ListLongMap!1377)

(declare-fun lt!24231 () ListLongMap!1377)

(assert (=> d!11479 (= lt!24215 lt!24231)))

(declare-fun lt!24220 () Unit!1553)

(declare-fun e!39219 () Unit!1553)

(assert (=> d!11479 (= lt!24220 e!39219)))

(declare-fun c!7668 () Bool)

(declare-fun e!39218 () Bool)

(assert (=> d!11479 (= c!7668 e!39218)))

(declare-fun res!33073 () Bool)

(assert (=> d!11479 (=> (not res!33073) (not e!39218))))

(assert (=> d!11479 (= res!33073 (bvslt #b00000000000000000000000000000000 (size!2010 lt!24048)))))

(declare-fun e!39222 () ListLongMap!1377)

(assert (=> d!11479 (= lt!24231 e!39222)))

(declare-fun c!7671 () Bool)

(assert (=> d!11479 (= c!7671 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11479 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11479 (= (getCurrentListMap!401 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!24215)))

(declare-fun b!59635 () Bool)

(declare-fun e!39212 () Bool)

(declare-fun call!4482 () Bool)

(assert (=> b!59635 (= e!39212 (not call!4482))))

(declare-fun b!59636 () Bool)

(assert (=> b!59636 (= e!39222 (+!81 call!4483 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))

(declare-fun b!59637 () Bool)

(declare-fun e!39213 () Bool)

(assert (=> b!59637 (= e!39212 e!39213)))

(declare-fun res!33070 () Bool)

(assert (=> b!59637 (= res!33070 call!4482)))

(assert (=> b!59637 (=> (not res!33070) (not e!39213))))

(declare-fun b!59638 () Bool)

(declare-fun e!39210 () Bool)

(assert (=> b!59638 (= e!39210 (validKeyInArray!0 (select (arr!1780 lt!24048) #b00000000000000000000000000000000)))))

(declare-fun bm!4479 () Bool)

(declare-fun call!4487 () ListLongMap!1377)

(declare-fun call!4485 () ListLongMap!1377)

(assert (=> bm!4479 (= call!4487 call!4485)))

(declare-fun b!59639 () Bool)

(declare-fun e!39214 () ListLongMap!1377)

(assert (=> b!59639 (= e!39214 call!4487)))

(declare-fun bm!4480 () Bool)

(assert (=> bm!4480 (= call!4482 (contains!692 lt!24215 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59640 () Bool)

(declare-fun Unit!1583 () Unit!1553)

(assert (=> b!59640 (= e!39219 Unit!1583)))

(declare-fun bm!4481 () Bool)

(declare-fun call!4484 () Bool)

(assert (=> bm!4481 (= call!4484 (contains!692 lt!24215 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59641 () Bool)

(declare-fun e!39216 () Bool)

(assert (=> b!59641 (= e!39216 (not call!4484))))

(declare-fun b!59642 () Bool)

(declare-fun e!39215 () Bool)

(assert (=> b!59642 (= e!39215 (= (apply!66 lt!24215 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1959 newMap!16)))))

(declare-fun bm!4482 () Bool)

(declare-fun call!4486 () ListLongMap!1377)

(assert (=> bm!4482 (= call!4485 call!4486)))

(declare-fun b!59643 () Bool)

(declare-fun res!33071 () Bool)

(assert (=> b!59643 (=> (not res!33071) (not e!39211))))

(assert (=> b!59643 (= res!33071 e!39216)))

(declare-fun c!7667 () Bool)

(assert (=> b!59643 (= c!7667 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!59644 () Bool)

(declare-fun e!39220 () Bool)

(declare-fun e!39217 () Bool)

(assert (=> b!59644 (= e!39220 e!39217)))

(declare-fun res!33069 () Bool)

(assert (=> b!59644 (=> (not res!33069) (not e!39217))))

(assert (=> b!59644 (= res!33069 (contains!692 lt!24215 (select (arr!1780 lt!24048) #b00000000000000000000000000000000)))))

(assert (=> b!59644 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 lt!24048)))))

(declare-fun b!59645 () Bool)

(assert (=> b!59645 (= e!39214 call!4481)))

(declare-fun b!59646 () Bool)

(assert (=> b!59646 (= e!39218 (validKeyInArray!0 (select (arr!1780 lt!24048) #b00000000000000000000000000000000)))))

(declare-fun bm!4483 () Bool)

(assert (=> bm!4483 (= call!4486 (getCurrentListMapNoExtraKeys!44 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun b!59647 () Bool)

(declare-fun res!33072 () Bool)

(assert (=> b!59647 (=> (not res!33072) (not e!39211))))

(assert (=> b!59647 (= res!33072 e!39220)))

(declare-fun res!33074 () Bool)

(assert (=> b!59647 (=> res!33074 e!39220)))

(assert (=> b!59647 (= res!33074 (not e!39210))))

(declare-fun res!33075 () Bool)

(assert (=> b!59647 (=> (not res!33075) (not e!39210))))

(assert (=> b!59647 (= res!33075 (bvslt #b00000000000000000000000000000000 (size!2010 lt!24048)))))

(declare-fun b!59648 () Bool)

(assert (=> b!59648 (= e!39213 (= (apply!66 lt!24215 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1959 newMap!16)))))

(declare-fun b!59649 () Bool)

(assert (=> b!59649 (= e!39211 e!39212)))

(declare-fun c!7670 () Bool)

(assert (=> b!59649 (= c!7670 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59650 () Bool)

(declare-fun c!7669 () Bool)

(assert (=> b!59650 (= c!7669 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!39221 () ListLongMap!1377)

(assert (=> b!59650 (= e!39221 e!39214)))

(declare-fun b!59651 () Bool)

(assert (=> b!59651 (= e!39216 e!39215)))

(declare-fun res!33077 () Bool)

(assert (=> b!59651 (= res!33077 call!4484)))

(assert (=> b!59651 (=> (not res!33077) (not e!39215))))

(declare-fun bm!4484 () Bool)

(declare-fun c!7672 () Bool)

(assert (=> bm!4484 (= call!4483 (+!81 (ite c!7671 call!4486 (ite c!7672 call!4485 call!4487)) (ite (or c!7671 c!7672) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(declare-fun b!59652 () Bool)

(declare-fun lt!24224 () Unit!1553)

(assert (=> b!59652 (= e!39219 lt!24224)))

(declare-fun lt!24229 () ListLongMap!1377)

(assert (=> b!59652 (= lt!24229 (getCurrentListMapNoExtraKeys!44 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24228 () (_ BitVec 64))

(assert (=> b!59652 (= lt!24228 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24211 () (_ BitVec 64))

(assert (=> b!59652 (= lt!24211 (select (arr!1780 lt!24048) #b00000000000000000000000000000000))))

(declare-fun lt!24225 () Unit!1553)

(assert (=> b!59652 (= lt!24225 (addStillContains!42 lt!24229 lt!24228 (zeroValue!1959 newMap!16) lt!24211))))

(assert (=> b!59652 (contains!692 (+!81 lt!24229 (tuple2!2049 lt!24228 (zeroValue!1959 newMap!16))) lt!24211)))

(declare-fun lt!24212 () Unit!1553)

(assert (=> b!59652 (= lt!24212 lt!24225)))

(declare-fun lt!24226 () ListLongMap!1377)

(assert (=> b!59652 (= lt!24226 (getCurrentListMapNoExtraKeys!44 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24213 () (_ BitVec 64))

(assert (=> b!59652 (= lt!24213 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24217 () (_ BitVec 64))

(assert (=> b!59652 (= lt!24217 (select (arr!1780 lt!24048) #b00000000000000000000000000000000))))

(declare-fun lt!24219 () Unit!1553)

(assert (=> b!59652 (= lt!24219 (addApplyDifferent!42 lt!24226 lt!24213 (minValue!1959 newMap!16) lt!24217))))

(assert (=> b!59652 (= (apply!66 (+!81 lt!24226 (tuple2!2049 lt!24213 (minValue!1959 newMap!16))) lt!24217) (apply!66 lt!24226 lt!24217))))

(declare-fun lt!24232 () Unit!1553)

(assert (=> b!59652 (= lt!24232 lt!24219)))

(declare-fun lt!24216 () ListLongMap!1377)

(assert (=> b!59652 (= lt!24216 (getCurrentListMapNoExtraKeys!44 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24227 () (_ BitVec 64))

(assert (=> b!59652 (= lt!24227 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24222 () (_ BitVec 64))

(assert (=> b!59652 (= lt!24222 (select (arr!1780 lt!24048) #b00000000000000000000000000000000))))

(declare-fun lt!24230 () Unit!1553)

(assert (=> b!59652 (= lt!24230 (addApplyDifferent!42 lt!24216 lt!24227 (zeroValue!1959 newMap!16) lt!24222))))

(assert (=> b!59652 (= (apply!66 (+!81 lt!24216 (tuple2!2049 lt!24227 (zeroValue!1959 newMap!16))) lt!24222) (apply!66 lt!24216 lt!24222))))

(declare-fun lt!24214 () Unit!1553)

(assert (=> b!59652 (= lt!24214 lt!24230)))

(declare-fun lt!24218 () ListLongMap!1377)

(assert (=> b!59652 (= lt!24218 (getCurrentListMapNoExtraKeys!44 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24223 () (_ BitVec 64))

(assert (=> b!59652 (= lt!24223 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24221 () (_ BitVec 64))

(assert (=> b!59652 (= lt!24221 (select (arr!1780 lt!24048) #b00000000000000000000000000000000))))

(assert (=> b!59652 (= lt!24224 (addApplyDifferent!42 lt!24218 lt!24223 (minValue!1959 newMap!16) lt!24221))))

(assert (=> b!59652 (= (apply!66 (+!81 lt!24218 (tuple2!2049 lt!24223 (minValue!1959 newMap!16))) lt!24221) (apply!66 lt!24218 lt!24221))))

(declare-fun b!59653 () Bool)

(assert (=> b!59653 (= e!39221 call!4481)))

(declare-fun b!59654 () Bool)

(assert (=> b!59654 (= e!39222 e!39221)))

(assert (=> b!59654 (= c!7672 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59655 () Bool)

(assert (=> b!59655 (= e!39217 (= (apply!66 lt!24215 (select (arr!1780 lt!24048) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 lt!24047) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!59655 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 lt!24047)))))

(assert (=> b!59655 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 lt!24048)))))

(assert (= (and d!11479 c!7671) b!59636))

(assert (= (and d!11479 (not c!7671)) b!59654))

(assert (= (and b!59654 c!7672) b!59653))

(assert (= (and b!59654 (not c!7672)) b!59650))

(assert (= (and b!59650 c!7669) b!59645))

(assert (= (and b!59650 (not c!7669)) b!59639))

(assert (= (or b!59645 b!59639) bm!4479))

(assert (= (or b!59653 bm!4479) bm!4482))

(assert (= (or b!59653 b!59645) bm!4478))

(assert (= (or b!59636 bm!4482) bm!4483))

(assert (= (or b!59636 bm!4478) bm!4484))

(assert (= (and d!11479 res!33073) b!59646))

(assert (= (and d!11479 c!7668) b!59652))

(assert (= (and d!11479 (not c!7668)) b!59640))

(assert (= (and d!11479 res!33076) b!59647))

(assert (= (and b!59647 res!33075) b!59638))

(assert (= (and b!59647 (not res!33074)) b!59644))

(assert (= (and b!59644 res!33069) b!59655))

(assert (= (and b!59647 res!33072) b!59643))

(assert (= (and b!59643 c!7667) b!59651))

(assert (= (and b!59643 (not c!7667)) b!59641))

(assert (= (and b!59651 res!33077) b!59642))

(assert (= (or b!59651 b!59641) bm!4481))

(assert (= (and b!59643 res!33071) b!59649))

(assert (= (and b!59649 c!7670) b!59637))

(assert (= (and b!59649 (not c!7670)) b!59635))

(assert (= (and b!59637 res!33070) b!59648))

(assert (= (or b!59637 b!59635) bm!4480))

(declare-fun b_lambda!2631 () Bool)

(assert (=> (not b_lambda!2631) (not b!59655)))

(assert (=> b!59655 t!4806))

(declare-fun b_and!3601 () Bool)

(assert (= b_and!3597 (and (=> t!4806 result!2389) b_and!3601)))

(assert (=> b!59655 t!4808))

(declare-fun b_and!3603 () Bool)

(assert (= b_and!3599 (and (=> t!4808 result!2391) b_and!3603)))

(declare-fun m!51545 () Bool)

(assert (=> b!59648 m!51545))

(declare-fun m!51547 () Bool)

(assert (=> b!59655 m!51547))

(assert (=> b!59655 m!51547))

(declare-fun m!51549 () Bool)

(assert (=> b!59655 m!51549))

(declare-fun m!51551 () Bool)

(assert (=> b!59655 m!51551))

(assert (=> b!59655 m!50849))

(assert (=> b!59655 m!51551))

(assert (=> b!59655 m!50849))

(declare-fun m!51553 () Bool)

(assert (=> b!59655 m!51553))

(assert (=> b!59638 m!51547))

(assert (=> b!59638 m!51547))

(declare-fun m!51555 () Bool)

(assert (=> b!59638 m!51555))

(declare-fun m!51557 () Bool)

(assert (=> b!59642 m!51557))

(assert (=> b!59652 m!51547))

(declare-fun m!51559 () Bool)

(assert (=> b!59652 m!51559))

(declare-fun m!51561 () Bool)

(assert (=> b!59652 m!51561))

(declare-fun m!51563 () Bool)

(assert (=> b!59652 m!51563))

(declare-fun m!51565 () Bool)

(assert (=> b!59652 m!51565))

(declare-fun m!51567 () Bool)

(assert (=> b!59652 m!51567))

(declare-fun m!51569 () Bool)

(assert (=> b!59652 m!51569))

(assert (=> b!59652 m!51565))

(declare-fun m!51571 () Bool)

(assert (=> b!59652 m!51571))

(declare-fun m!51573 () Bool)

(assert (=> b!59652 m!51573))

(declare-fun m!51575 () Bool)

(assert (=> b!59652 m!51575))

(declare-fun m!51577 () Bool)

(assert (=> b!59652 m!51577))

(declare-fun m!51579 () Bool)

(assert (=> b!59652 m!51579))

(declare-fun m!51581 () Bool)

(assert (=> b!59652 m!51581))

(declare-fun m!51583 () Bool)

(assert (=> b!59652 m!51583))

(declare-fun m!51585 () Bool)

(assert (=> b!59652 m!51585))

(assert (=> b!59652 m!51585))

(declare-fun m!51587 () Bool)

(assert (=> b!59652 m!51587))

(assert (=> b!59652 m!51559))

(assert (=> b!59652 m!51579))

(declare-fun m!51589 () Bool)

(assert (=> b!59652 m!51589))

(declare-fun m!51591 () Bool)

(assert (=> bm!4484 m!51591))

(assert (=> b!59644 m!51547))

(assert (=> b!59644 m!51547))

(declare-fun m!51593 () Bool)

(assert (=> b!59644 m!51593))

(assert (=> d!11479 m!50833))

(declare-fun m!51595 () Bool)

(assert (=> b!59636 m!51595))

(declare-fun m!51597 () Bool)

(assert (=> bm!4481 m!51597))

(declare-fun m!51599 () Bool)

(assert (=> bm!4480 m!51599))

(assert (=> b!59646 m!51547))

(assert (=> b!59646 m!51547))

(assert (=> b!59646 m!51555))

(assert (=> bm!4483 m!51563))

(assert (=> d!11337 d!11479))

(declare-fun d!11481 () Bool)

(declare-fun res!33078 () Bool)

(declare-fun e!39223 () Bool)

(assert (=> d!11481 (=> res!33078 e!39223)))

(assert (=> d!11481 (= res!33078 (= (select (arr!1780 lt!24052) #b00000000000000000000000000000000) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11481 (= (arrayContainsKey!0 lt!24052 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000) e!39223)))

(declare-fun b!59656 () Bool)

(declare-fun e!39224 () Bool)

(assert (=> b!59656 (= e!39223 e!39224)))

(declare-fun res!33079 () Bool)

(assert (=> b!59656 (=> (not res!33079) (not e!39224))))

(assert (=> b!59656 (= res!33079 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 lt!24052)))))

(declare-fun b!59657 () Bool)

(assert (=> b!59657 (= e!39224 (arrayContainsKey!0 lt!24052 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!11481 (not res!33078)) b!59656))

(assert (= (and b!59656 res!33079) b!59657))

(declare-fun m!51601 () Bool)

(assert (=> d!11481 m!51601))

(assert (=> b!59657 m!50591))

(declare-fun m!51603 () Bool)

(assert (=> b!59657 m!51603))

(assert (=> d!11337 d!11481))

(declare-fun d!11483 () Bool)

(assert (=> d!11483 (arrayContainsKey!0 lt!24052 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!24235 () Unit!1553)

(declare-fun choose!13 (array!3720 (_ BitVec 64) (_ BitVec 32)) Unit!1553)

(assert (=> d!11483 (= lt!24235 (choose!13 lt!24052 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839))))))

(assert (=> d!11483 (bvsge (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000000)))

(assert (=> d!11483 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!24052 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839))) lt!24235)))

(declare-fun bs!2577 () Bool)

(assert (= bs!2577 d!11483))

(assert (=> bs!2577 m!50591))

(assert (=> bs!2577 m!51115))

(assert (=> bs!2577 m!50591))

(declare-fun m!51605 () Bool)

(assert (=> bs!2577 m!51605))

(assert (=> d!11337 d!11483))

(declare-fun d!11485 () Bool)

(declare-fun e!39225 () Bool)

(assert (=> d!11485 e!39225))

(declare-fun res!33081 () Bool)

(assert (=> d!11485 (=> (not res!33081) (not e!39225))))

(declare-fun lt!24239 () ListLongMap!1377)

(assert (=> d!11485 (= res!33081 (contains!692 lt!24239 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!24236 () List!1453)

(assert (=> d!11485 (= lt!24239 (ListLongMap!1378 lt!24236))))

(declare-fun lt!24238 () Unit!1553)

(declare-fun lt!24237 () Unit!1553)

(assert (=> d!11485 (= lt!24238 lt!24237)))

(assert (=> d!11485 (= (getValueByKey!123 lt!24236 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11485 (= lt!24237 (lemmaContainsTupThenGetReturnValue!42 lt!24236 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11485 (= lt!24236 (insertStrictlySorted!44 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11485 (= (+!81 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!24239)))

(declare-fun b!59658 () Bool)

(declare-fun res!33080 () Bool)

(assert (=> b!59658 (=> (not res!33080) (not e!39225))))

(assert (=> b!59658 (= res!33080 (= (getValueByKey!123 (toList!704 lt!24239) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!59659 () Bool)

(assert (=> b!59659 (= e!39225 (contains!694 (toList!704 lt!24239) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!11485 res!33081) b!59658))

(assert (= (and b!59658 res!33080) b!59659))

(declare-fun m!51607 () Bool)

(assert (=> d!11485 m!51607))

(declare-fun m!51609 () Bool)

(assert (=> d!11485 m!51609))

(declare-fun m!51611 () Bool)

(assert (=> d!11485 m!51611))

(declare-fun m!51613 () Bool)

(assert (=> d!11485 m!51613))

(declare-fun m!51615 () Bool)

(assert (=> b!59658 m!51615))

(declare-fun m!51617 () Bool)

(assert (=> b!59659 m!51617))

(assert (=> d!11337 d!11485))

(declare-fun d!11487 () Bool)

(declare-fun e!39228 () Bool)

(assert (=> d!11487 e!39228))

(declare-fun res!33084 () Bool)

(assert (=> d!11487 (=> (not res!33084) (not e!39228))))

(assert (=> d!11487 (= res!33084 (and (bvsge (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000000) (bvslt (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (size!2010 (_keys!3667 newMap!16))) (bvslt (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (size!2011 (_values!2026 newMap!16)))))))

(declare-fun lt!24242 () Unit!1553)

(declare-fun choose!320 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 32) (_ BitVec 64) V!2843 Int) Unit!1553)

(assert (=> d!11487 (= lt!24242 (choose!320 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2043 newMap!16)))))

(assert (=> d!11487 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11487 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!5 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2043 newMap!16)) lt!24242)))

(declare-fun b!59662 () Bool)

(assert (=> b!59662 (= e!39228 (= (+!81 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!401 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))))))

(assert (= (and d!11487 res!33084) b!59662))

(assert (=> d!11487 m!50591))

(assert (=> d!11487 m!50619))

(declare-fun m!51619 () Bool)

(assert (=> d!11487 m!51619))

(assert (=> d!11487 m!50833))

(assert (=> b!59662 m!51113))

(assert (=> b!59662 m!51097))

(assert (=> b!59662 m!50697))

(assert (=> b!59662 m!51087))

(assert (=> b!59662 m!51123))

(assert (=> b!59662 m!50697))

(assert (=> d!11337 d!11487))

(declare-fun d!11489 () Bool)

(declare-fun e!39231 () Bool)

(assert (=> d!11489 e!39231))

(declare-fun res!33087 () Bool)

(assert (=> d!11489 (=> (not res!33087) (not e!39231))))

(assert (=> d!11489 (= res!33087 (and (bvsge (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000000) (bvslt (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (size!2010 (_keys!3667 newMap!16)))))))

(declare-fun lt!24245 () Unit!1553)

(declare-fun choose!102 ((_ BitVec 64) array!3720 (_ BitVec 32) (_ BitVec 32)) Unit!1553)

(assert (=> d!11489 (= lt!24245 (choose!102 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (mask!5927 newMap!16)))))

(assert (=> d!11489 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11489 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (mask!5927 newMap!16)) lt!24245)))

(declare-fun b!59665 () Bool)

(assert (=> b!59665 (= e!39231 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (mask!5927 newMap!16)))))

(assert (= (and d!11489 res!33087) b!59665))

(assert (=> d!11489 m!50591))

(declare-fun m!51621 () Bool)

(assert (=> d!11489 m!51621))

(assert (=> d!11489 m!50833))

(assert (=> b!59665 m!51113))

(assert (=> b!59665 m!51089))

(assert (=> d!11337 d!11489))

(assert (=> d!11337 d!11301))

(declare-fun d!11491 () Bool)

(declare-fun e!39232 () Bool)

(assert (=> d!11491 e!39232))

(declare-fun res!33088 () Bool)

(assert (=> d!11491 (=> (not res!33088) (not e!39232))))

(assert (=> d!11491 (= res!33088 (and (bvsge (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000000) (bvslt (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (size!2010 lt!24048))))))

(declare-fun lt!24246 () Unit!1553)

(assert (=> d!11491 (= lt!24246 (choose!315 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (defaultEntry!2043 newMap!16)))))

(assert (=> d!11491 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11491 (= (lemmaValidKeyInArrayIsInListMap!73 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (defaultEntry!2043 newMap!16)) lt!24246)))

(declare-fun b!59666 () Bool)

(assert (=> b!59666 (= e!39232 (contains!692 (getCurrentListMap!401 lt!24048 lt!24047 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (select (arr!1780 lt!24048) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)))))))

(assert (= (and d!11491 res!33088) b!59666))

(declare-fun m!51623 () Bool)

(assert (=> d!11491 m!51623))

(assert (=> d!11491 m!50833))

(assert (=> b!59666 m!51093))

(declare-fun m!51625 () Bool)

(assert (=> b!59666 m!51625))

(assert (=> b!59666 m!51093))

(assert (=> b!59666 m!51625))

(declare-fun m!51627 () Bool)

(assert (=> b!59666 m!51627))

(assert (=> d!11337 d!11491))

(declare-fun d!11493 () Bool)

(assert (=> d!11493 (= (arrayCountValidKeys!0 lt!24050 (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (bvadd (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!24249 () Unit!1553)

(declare-fun choose!2 (array!3720 (_ BitVec 32)) Unit!1553)

(assert (=> d!11493 (= lt!24249 (choose!2 lt!24050 (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839))))))

(declare-fun e!39235 () Bool)

(assert (=> d!11493 e!39235))

(declare-fun res!33093 () Bool)

(assert (=> d!11493 (=> (not res!33093) (not e!39235))))

(assert (=> d!11493 (= res!33093 (and (bvsge (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000000) (bvslt (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (size!2010 lt!24050))))))

(assert (=> d!11493 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!24050 (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839))) lt!24249)))

(declare-fun b!59671 () Bool)

(declare-fun res!33094 () Bool)

(assert (=> b!59671 (=> (not res!33094) (not e!39235))))

(assert (=> b!59671 (= res!33094 (validKeyInArray!0 (select (arr!1780 lt!24050) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)))))))

(declare-fun b!59672 () Bool)

(assert (=> b!59672 (= e!39235 (bvslt (size!2010 lt!24050) #b01111111111111111111111111111111))))

(assert (= (and d!11493 res!33093) b!59671))

(assert (= (and b!59671 res!33094) b!59672))

(assert (=> d!11493 m!51119))

(declare-fun m!51629 () Bool)

(assert (=> d!11493 m!51629))

(assert (=> b!59671 m!51537))

(assert (=> b!59671 m!51537))

(assert (=> b!59671 m!51539))

(assert (=> d!11337 d!11493))

(declare-fun b!59681 () Bool)

(declare-fun res!33103 () Bool)

(declare-fun e!39241 () Bool)

(assert (=> b!59681 (=> (not res!33103) (not e!39241))))

(assert (=> b!59681 (= res!33103 (not (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839))))))))

(declare-fun b!59682 () Bool)

(declare-fun res!33104 () Bool)

(assert (=> b!59682 (=> (not res!33104) (not e!39241))))

(assert (=> b!59682 (= res!33104 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun e!39240 () Bool)

(declare-fun b!59684 () Bool)

(assert (=> b!59684 (= e!39240 (= (arrayCountValidKeys!0 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3667 newMap!16) #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!11495 () Bool)

(assert (=> d!11495 e!39240))

(declare-fun res!33105 () Bool)

(assert (=> d!11495 (=> (not res!33105) (not e!39240))))

(assert (=> d!11495 (= res!33105 (and (bvsge (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000000) (bvslt (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (size!2010 (_keys!3667 newMap!16)))))))

(declare-fun lt!24252 () Unit!1553)

(declare-fun choose!1 (array!3720 (_ BitVec 32) (_ BitVec 64)) Unit!1553)

(assert (=> d!11495 (= lt!24252 (choose!1 (_keys!3667 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11495 e!39241))

(declare-fun res!33106 () Bool)

(assert (=> d!11495 (=> (not res!33106) (not e!39241))))

(assert (=> d!11495 (= res!33106 (and (bvsge (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) #b00000000000000000000000000000000) (bvslt (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (size!2010 (_keys!3667 newMap!16)))))))

(assert (=> d!11495 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3667 newMap!16) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) lt!24252)))

(declare-fun b!59683 () Bool)

(assert (=> b!59683 (= e!39241 (bvslt (size!2010 (_keys!3667 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!11495 res!33106) b!59681))

(assert (= (and b!59681 res!33103) b!59682))

(assert (= (and b!59682 res!33104) b!59683))

(assert (= (and d!11495 res!33105) b!59684))

(declare-fun m!51631 () Bool)

(assert (=> b!59681 m!51631))

(assert (=> b!59681 m!51631))

(declare-fun m!51633 () Bool)

(assert (=> b!59681 m!51633))

(assert (=> b!59682 m!50591))

(assert (=> b!59682 m!50693))

(assert (=> b!59684 m!51113))

(assert (=> b!59684 m!51105))

(assert (=> b!59684 m!50675))

(assert (=> d!11495 m!50591))

(declare-fun m!51635 () Bool)

(assert (=> d!11495 m!51635))

(assert (=> d!11337 d!11495))

(declare-fun bm!4485 () Bool)

(declare-fun call!4488 () ListLongMap!1377)

(declare-fun call!4490 () ListLongMap!1377)

(assert (=> bm!4485 (= call!4488 call!4490)))

(declare-fun d!11497 () Bool)

(declare-fun e!39243 () Bool)

(assert (=> d!11497 e!39243))

(declare-fun res!33114 () Bool)

(assert (=> d!11497 (=> (not res!33114) (not e!39243))))

(assert (=> d!11497 (= res!33114 (or (bvsge #b00000000000000000000000000000000 (size!2010 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))))))))

(declare-fun lt!24257 () ListLongMap!1377)

(declare-fun lt!24273 () ListLongMap!1377)

(assert (=> d!11497 (= lt!24257 lt!24273)))

(declare-fun lt!24262 () Unit!1553)

(declare-fun e!39251 () Unit!1553)

(assert (=> d!11497 (= lt!24262 e!39251)))

(declare-fun c!7674 () Bool)

(declare-fun e!39250 () Bool)

(assert (=> d!11497 (= c!7674 e!39250)))

(declare-fun res!33111 () Bool)

(assert (=> d!11497 (=> (not res!33111) (not e!39250))))

(assert (=> d!11497 (= res!33111 (bvslt #b00000000000000000000000000000000 (size!2010 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))))))

(declare-fun e!39254 () ListLongMap!1377)

(assert (=> d!11497 (= lt!24273 e!39254)))

(declare-fun c!7677 () Bool)

(assert (=> d!11497 (= c!7677 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11497 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11497 (= (getCurrentListMap!401 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!24257)))

(declare-fun b!59685 () Bool)

(declare-fun e!39244 () Bool)

(declare-fun call!4489 () Bool)

(assert (=> b!59685 (= e!39244 (not call!4489))))

(declare-fun b!59686 () Bool)

(assert (=> b!59686 (= e!39254 (+!81 call!4490 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))

(declare-fun b!59687 () Bool)

(declare-fun e!39245 () Bool)

(assert (=> b!59687 (= e!39244 e!39245)))

(declare-fun res!33108 () Bool)

(assert (=> b!59687 (= res!33108 call!4489)))

(assert (=> b!59687 (=> (not res!33108) (not e!39245))))

(declare-fun e!39242 () Bool)

(declare-fun b!59688 () Bool)

(assert (=> b!59688 (= e!39242 (validKeyInArray!0 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!4486 () Bool)

(declare-fun call!4494 () ListLongMap!1377)

(declare-fun call!4492 () ListLongMap!1377)

(assert (=> bm!4486 (= call!4494 call!4492)))

(declare-fun b!59689 () Bool)

(declare-fun e!39246 () ListLongMap!1377)

(assert (=> b!59689 (= e!39246 call!4494)))

(declare-fun bm!4487 () Bool)

(assert (=> bm!4487 (= call!4489 (contains!692 lt!24257 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59690 () Bool)

(declare-fun Unit!1584 () Unit!1553)

(assert (=> b!59690 (= e!39251 Unit!1584)))

(declare-fun bm!4488 () Bool)

(declare-fun call!4491 () Bool)

(assert (=> bm!4488 (= call!4491 (contains!692 lt!24257 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59691 () Bool)

(declare-fun e!39248 () Bool)

(assert (=> b!59691 (= e!39248 (not call!4491))))

(declare-fun b!59692 () Bool)

(declare-fun e!39247 () Bool)

(assert (=> b!59692 (= e!39247 (= (apply!66 lt!24257 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1959 newMap!16)))))

(declare-fun bm!4489 () Bool)

(declare-fun call!4493 () ListLongMap!1377)

(assert (=> bm!4489 (= call!4492 call!4493)))

(declare-fun b!59693 () Bool)

(declare-fun res!33109 () Bool)

(assert (=> b!59693 (=> (not res!33109) (not e!39243))))

(assert (=> b!59693 (= res!33109 e!39248)))

(declare-fun c!7673 () Bool)

(assert (=> b!59693 (= c!7673 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!59694 () Bool)

(declare-fun e!39252 () Bool)

(declare-fun e!39249 () Bool)

(assert (=> b!59694 (= e!39252 e!39249)))

(declare-fun res!33107 () Bool)

(assert (=> b!59694 (=> (not res!33107) (not e!39249))))

(assert (=> b!59694 (= res!33107 (contains!692 lt!24257 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!59694 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))))))

(declare-fun b!59695 () Bool)

(assert (=> b!59695 (= e!39246 call!4488)))

(declare-fun b!59696 () Bool)

(assert (=> b!59696 (= e!39250 (validKeyInArray!0 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!4490 () Bool)

(assert (=> bm!4490 (= call!4493 (getCurrentListMapNoExtraKeys!44 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun b!59697 () Bool)

(declare-fun res!33110 () Bool)

(assert (=> b!59697 (=> (not res!33110) (not e!39243))))

(assert (=> b!59697 (= res!33110 e!39252)))

(declare-fun res!33112 () Bool)

(assert (=> b!59697 (=> res!33112 e!39252)))

(assert (=> b!59697 (= res!33112 (not e!39242))))

(declare-fun res!33113 () Bool)

(assert (=> b!59697 (=> (not res!33113) (not e!39242))))

(assert (=> b!59697 (= res!33113 (bvslt #b00000000000000000000000000000000 (size!2010 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))))))

(declare-fun b!59698 () Bool)

(assert (=> b!59698 (= e!39245 (= (apply!66 lt!24257 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1959 newMap!16)))))

(declare-fun b!59699 () Bool)

(assert (=> b!59699 (= e!39243 e!39244)))

(declare-fun c!7676 () Bool)

(assert (=> b!59699 (= c!7676 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59700 () Bool)

(declare-fun c!7675 () Bool)

(assert (=> b!59700 (= c!7675 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!39253 () ListLongMap!1377)

(assert (=> b!59700 (= e!39253 e!39246)))

(declare-fun b!59701 () Bool)

(assert (=> b!59701 (= e!39248 e!39247)))

(declare-fun res!33115 () Bool)

(assert (=> b!59701 (= res!33115 call!4491)))

(assert (=> b!59701 (=> (not res!33115) (not e!39247))))

(declare-fun c!7678 () Bool)

(declare-fun bm!4491 () Bool)

(assert (=> bm!4491 (= call!4490 (+!81 (ite c!7677 call!4493 (ite c!7678 call!4492 call!4494)) (ite (or c!7677 c!7678) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(declare-fun b!59702 () Bool)

(declare-fun lt!24266 () Unit!1553)

(assert (=> b!59702 (= e!39251 lt!24266)))

(declare-fun lt!24271 () ListLongMap!1377)

(assert (=> b!59702 (= lt!24271 (getCurrentListMapNoExtraKeys!44 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24270 () (_ BitVec 64))

(assert (=> b!59702 (= lt!24270 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24253 () (_ BitVec 64))

(assert (=> b!59702 (= lt!24253 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!24267 () Unit!1553)

(assert (=> b!59702 (= lt!24267 (addStillContains!42 lt!24271 lt!24270 (zeroValue!1959 newMap!16) lt!24253))))

(assert (=> b!59702 (contains!692 (+!81 lt!24271 (tuple2!2049 lt!24270 (zeroValue!1959 newMap!16))) lt!24253)))

(declare-fun lt!24254 () Unit!1553)

(assert (=> b!59702 (= lt!24254 lt!24267)))

(declare-fun lt!24268 () ListLongMap!1377)

(assert (=> b!59702 (= lt!24268 (getCurrentListMapNoExtraKeys!44 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24255 () (_ BitVec 64))

(assert (=> b!59702 (= lt!24255 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24259 () (_ BitVec 64))

(assert (=> b!59702 (= lt!24259 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!24261 () Unit!1553)

(assert (=> b!59702 (= lt!24261 (addApplyDifferent!42 lt!24268 lt!24255 (minValue!1959 newMap!16) lt!24259))))

(assert (=> b!59702 (= (apply!66 (+!81 lt!24268 (tuple2!2049 lt!24255 (minValue!1959 newMap!16))) lt!24259) (apply!66 lt!24268 lt!24259))))

(declare-fun lt!24274 () Unit!1553)

(assert (=> b!59702 (= lt!24274 lt!24261)))

(declare-fun lt!24258 () ListLongMap!1377)

(assert (=> b!59702 (= lt!24258 (getCurrentListMapNoExtraKeys!44 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24269 () (_ BitVec 64))

(assert (=> b!59702 (= lt!24269 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24264 () (_ BitVec 64))

(assert (=> b!59702 (= lt!24264 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!24272 () Unit!1553)

(assert (=> b!59702 (= lt!24272 (addApplyDifferent!42 lt!24258 lt!24269 (zeroValue!1959 newMap!16) lt!24264))))

(assert (=> b!59702 (= (apply!66 (+!81 lt!24258 (tuple2!2049 lt!24269 (zeroValue!1959 newMap!16))) lt!24264) (apply!66 lt!24258 lt!24264))))

(declare-fun lt!24256 () Unit!1553)

(assert (=> b!59702 (= lt!24256 lt!24272)))

(declare-fun lt!24260 () ListLongMap!1377)

(assert (=> b!59702 (= lt!24260 (getCurrentListMapNoExtraKeys!44 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24265 () (_ BitVec 64))

(assert (=> b!59702 (= lt!24265 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24263 () (_ BitVec 64))

(assert (=> b!59702 (= lt!24263 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!59702 (= lt!24266 (addApplyDifferent!42 lt!24260 lt!24265 (minValue!1959 newMap!16) lt!24263))))

(assert (=> b!59702 (= (apply!66 (+!81 lt!24260 (tuple2!2049 lt!24265 (minValue!1959 newMap!16))) lt!24263) (apply!66 lt!24260 lt!24263))))

(declare-fun b!59703 () Bool)

(assert (=> b!59703 (= e!39253 call!4488)))

(declare-fun b!59704 () Bool)

(assert (=> b!59704 (= e!39254 e!39253)))

(assert (=> b!59704 (= c!7678 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59705 () Bool)

(assert (=> b!59705 (= e!39249 (= (apply!66 lt!24257 (select (arr!1780 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16)))) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!59705 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))))))

(assert (=> b!59705 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (array!3721 (store (arr!1780 (_keys!3667 newMap!16)) (ite c!7526 (index!3074 lt!23839) (index!3071 lt!23839)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (size!2010 (_keys!3667 newMap!16))))))))

(assert (= (and d!11497 c!7677) b!59686))

(assert (= (and d!11497 (not c!7677)) b!59704))

(assert (= (and b!59704 c!7678) b!59703))

(assert (= (and b!59704 (not c!7678)) b!59700))

(assert (= (and b!59700 c!7675) b!59695))

(assert (= (and b!59700 (not c!7675)) b!59689))

(assert (= (or b!59695 b!59689) bm!4486))

(assert (= (or b!59703 bm!4486) bm!4489))

(assert (= (or b!59703 b!59695) bm!4485))

(assert (= (or b!59686 bm!4489) bm!4490))

(assert (= (or b!59686 bm!4485) bm!4491))

(assert (= (and d!11497 res!33111) b!59696))

(assert (= (and d!11497 c!7674) b!59702))

(assert (= (and d!11497 (not c!7674)) b!59690))

(assert (= (and d!11497 res!33114) b!59697))

(assert (= (and b!59697 res!33113) b!59688))

(assert (= (and b!59697 (not res!33112)) b!59694))

(assert (= (and b!59694 res!33107) b!59705))

(assert (= (and b!59697 res!33110) b!59693))

(assert (= (and b!59693 c!7673) b!59701))

(assert (= (and b!59693 (not c!7673)) b!59691))

(assert (= (and b!59701 res!33115) b!59692))

(assert (= (or b!59701 b!59691) bm!4488))

(assert (= (and b!59693 res!33109) b!59699))

(assert (= (and b!59699 c!7676) b!59687))

(assert (= (and b!59699 (not c!7676)) b!59685))

(assert (= (and b!59687 res!33108) b!59698))

(assert (= (or b!59687 b!59685) bm!4487))

(declare-fun b_lambda!2633 () Bool)

(assert (=> (not b_lambda!2633) (not b!59705)))

(assert (=> b!59705 t!4806))

(declare-fun b_and!3605 () Bool)

(assert (= b_and!3601 (and (=> t!4806 result!2389) b_and!3605)))

(assert (=> b!59705 t!4808))

(declare-fun b_and!3607 () Bool)

(assert (= b_and!3603 (and (=> t!4808 result!2391) b_and!3607)))

(declare-fun m!51637 () Bool)

(assert (=> b!59698 m!51637))

(assert (=> b!59705 m!51517))

(assert (=> b!59705 m!51517))

(declare-fun m!51639 () Bool)

(assert (=> b!59705 m!51639))

(declare-fun m!51641 () Bool)

(assert (=> b!59705 m!51641))

(assert (=> b!59705 m!50849))

(assert (=> b!59705 m!51641))

(assert (=> b!59705 m!50849))

(declare-fun m!51643 () Bool)

(assert (=> b!59705 m!51643))

(assert (=> b!59688 m!51517))

(assert (=> b!59688 m!51517))

(assert (=> b!59688 m!51519))

(declare-fun m!51645 () Bool)

(assert (=> b!59692 m!51645))

(assert (=> b!59702 m!51517))

(declare-fun m!51647 () Bool)

(assert (=> b!59702 m!51647))

(declare-fun m!51649 () Bool)

(assert (=> b!59702 m!51649))

(declare-fun m!51651 () Bool)

(assert (=> b!59702 m!51651))

(declare-fun m!51653 () Bool)

(assert (=> b!59702 m!51653))

(declare-fun m!51655 () Bool)

(assert (=> b!59702 m!51655))

(declare-fun m!51657 () Bool)

(assert (=> b!59702 m!51657))

(assert (=> b!59702 m!51653))

(declare-fun m!51659 () Bool)

(assert (=> b!59702 m!51659))

(declare-fun m!51661 () Bool)

(assert (=> b!59702 m!51661))

(declare-fun m!51663 () Bool)

(assert (=> b!59702 m!51663))

(declare-fun m!51665 () Bool)

(assert (=> b!59702 m!51665))

(declare-fun m!51667 () Bool)

(assert (=> b!59702 m!51667))

(declare-fun m!51669 () Bool)

(assert (=> b!59702 m!51669))

(declare-fun m!51671 () Bool)

(assert (=> b!59702 m!51671))

(declare-fun m!51673 () Bool)

(assert (=> b!59702 m!51673))

(assert (=> b!59702 m!51673))

(declare-fun m!51675 () Bool)

(assert (=> b!59702 m!51675))

(assert (=> b!59702 m!51647))

(assert (=> b!59702 m!51667))

(declare-fun m!51677 () Bool)

(assert (=> b!59702 m!51677))

(declare-fun m!51679 () Bool)

(assert (=> bm!4491 m!51679))

(assert (=> b!59694 m!51517))

(assert (=> b!59694 m!51517))

(declare-fun m!51681 () Bool)

(assert (=> b!59694 m!51681))

(assert (=> d!11497 m!50833))

(declare-fun m!51683 () Bool)

(assert (=> b!59686 m!51683))

(declare-fun m!51685 () Bool)

(assert (=> bm!4488 m!51685))

(declare-fun m!51687 () Bool)

(assert (=> bm!4487 m!51687))

(assert (=> b!59696 m!51517))

(assert (=> b!59696 m!51517))

(assert (=> b!59696 m!51519))

(assert (=> bm!4490 m!51651))

(assert (=> d!11337 d!11497))

(declare-fun b!59706 () Bool)

(declare-fun e!39260 () ListLongMap!1377)

(declare-fun e!39259 () ListLongMap!1377)

(assert (=> b!59706 (= e!39260 e!39259)))

(declare-fun c!7681 () Bool)

(assert (=> b!59706 (= c!7681 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!59707 () Bool)

(declare-fun e!39256 () Bool)

(declare-fun e!39261 () Bool)

(assert (=> b!59707 (= e!39256 e!39261)))

(declare-fun c!7680 () Bool)

(declare-fun e!39258 () Bool)

(assert (=> b!59707 (= c!7680 e!39258)))

(declare-fun res!33118 () Bool)

(assert (=> b!59707 (=> (not res!33118) (not e!39258))))

(assert (=> b!59707 (= res!33118 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun d!11499 () Bool)

(assert (=> d!11499 e!39256))

(declare-fun res!33117 () Bool)

(assert (=> d!11499 (=> (not res!33117) (not e!39256))))

(declare-fun lt!24277 () ListLongMap!1377)

(assert (=> d!11499 (= res!33117 (not (contains!692 lt!24277 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!11499 (= lt!24277 e!39260)))

(declare-fun c!7679 () Bool)

(assert (=> d!11499 (= c!7679 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11499 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11499 (= (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834) (mask!5927 newMap!16) (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!24277)))

(declare-fun b!59708 () Bool)

(declare-fun res!33116 () Bool)

(assert (=> b!59708 (=> (not res!33116) (not e!39256))))

(assert (=> b!59708 (= res!33116 (not (contains!692 lt!24277 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!59709 () Bool)

(declare-fun lt!24276 () Unit!1553)

(declare-fun lt!24278 () Unit!1553)

(assert (=> b!59709 (= lt!24276 lt!24278)))

(declare-fun lt!24279 () V!2843)

(declare-fun lt!24275 () ListLongMap!1377)

(declare-fun lt!24280 () (_ BitVec 64))

(declare-fun lt!24281 () (_ BitVec 64))

(assert (=> b!59709 (not (contains!692 (+!81 lt!24275 (tuple2!2049 lt!24280 lt!24279)) lt!24281))))

(assert (=> b!59709 (= lt!24278 (addStillNotContains!17 lt!24275 lt!24280 lt!24279 lt!24281))))

(assert (=> b!59709 (= lt!24281 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!59709 (= lt!24279 (get!1080 (select (arr!1781 (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!59709 (= lt!24280 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!4495 () ListLongMap!1377)

(assert (=> b!59709 (= lt!24275 call!4495)))

(assert (=> b!59709 (= e!39259 (+!81 call!4495 (tuple2!2049 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) (get!1080 (select (arr!1781 (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!59710 () Bool)

(assert (=> b!59710 (= e!39259 call!4495)))

(declare-fun b!59711 () Bool)

(declare-fun e!39255 () Bool)

(assert (=> b!59711 (= e!39255 (isEmpty!299 lt!24277))))

(declare-fun bm!4492 () Bool)

(assert (=> bm!4492 (= call!4495 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834) (mask!5927 newMap!16) (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2043 newMap!16)))))

(declare-fun b!59712 () Bool)

(assert (=> b!59712 (= e!39260 (ListLongMap!1378 Nil!1450))))

(declare-fun b!59713 () Bool)

(assert (=> b!59713 (= e!39255 (= lt!24277 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834) (mask!5927 newMap!16) (ite c!7529 (ite c!7521 lt!23852 lt!23841) (extraKeys!1930 newMap!16)) (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2043 newMap!16))))))

(declare-fun b!59714 () Bool)

(assert (=> b!59714 (= e!39258 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!59714 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!59715 () Bool)

(assert (=> b!59715 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (=> b!59715 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834))))))

(declare-fun e!39257 () Bool)

(assert (=> b!59715 (= e!39257 (= (apply!66 lt!24277 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!59716 () Bool)

(assert (=> b!59716 (= e!39261 e!39255)))

(declare-fun c!7682 () Bool)

(assert (=> b!59716 (= c!7682 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59717 () Bool)

(assert (=> b!59717 (= e!39261 e!39257)))

(assert (=> b!59717 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun res!33119 () Bool)

(assert (=> b!59717 (= res!33119 (contains!692 lt!24277 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!59717 (=> (not res!33119) (not e!39257))))

(assert (= (and d!11499 c!7679) b!59712))

(assert (= (and d!11499 (not c!7679)) b!59706))

(assert (= (and b!59706 c!7681) b!59709))

(assert (= (and b!59706 (not c!7681)) b!59710))

(assert (= (or b!59709 b!59710) bm!4492))

(assert (= (and d!11499 res!33117) b!59708))

(assert (= (and b!59708 res!33116) b!59707))

(assert (= (and b!59707 res!33118) b!59714))

(assert (= (and b!59707 c!7680) b!59717))

(assert (= (and b!59707 (not c!7680)) b!59716))

(assert (= (and b!59717 res!33119) b!59715))

(assert (= (and b!59716 c!7682) b!59713))

(assert (= (and b!59716 (not c!7682)) b!59711))

(declare-fun b_lambda!2635 () Bool)

(assert (=> (not b_lambda!2635) (not b!59709)))

(assert (=> b!59709 t!4806))

(declare-fun b_and!3609 () Bool)

(assert (= b_and!3605 (and (=> t!4806 result!2389) b_and!3609)))

(assert (=> b!59709 t!4808))

(declare-fun b_and!3611 () Bool)

(assert (= b_and!3607 (and (=> t!4808 result!2391) b_and!3611)))

(declare-fun b_lambda!2637 () Bool)

(assert (=> (not b_lambda!2637) (not b!59715)))

(assert (=> b!59715 t!4806))

(declare-fun b_and!3613 () Bool)

(assert (= b_and!3609 (and (=> t!4806 result!2389) b_and!3613)))

(assert (=> b!59715 t!4808))

(declare-fun b_and!3615 () Bool)

(assert (= b_and!3611 (and (=> t!4808 result!2391) b_and!3615)))

(declare-fun m!51689 () Bool)

(assert (=> d!11499 m!51689))

(assert (=> d!11499 m!50833))

(assert (=> b!59714 m!50843))

(assert (=> b!59714 m!50843))

(assert (=> b!59714 m!50853))

(declare-fun m!51691 () Bool)

(assert (=> b!59711 m!51691))

(assert (=> b!59717 m!50843))

(assert (=> b!59717 m!50843))

(declare-fun m!51693 () Bool)

(assert (=> b!59717 m!51693))

(declare-fun m!51695 () Bool)

(assert (=> b!59713 m!51695))

(declare-fun m!51697 () Bool)

(assert (=> b!59708 m!51697))

(assert (=> b!59715 m!50965))

(assert (=> b!59715 m!50849))

(assert (=> b!59715 m!50967))

(assert (=> b!59715 m!50965))

(assert (=> b!59715 m!50849))

(assert (=> b!59715 m!50843))

(assert (=> b!59715 m!50843))

(declare-fun m!51699 () Bool)

(assert (=> b!59715 m!51699))

(assert (=> b!59709 m!50965))

(assert (=> b!59709 m!50849))

(assert (=> b!59709 m!50967))

(assert (=> b!59709 m!50965))

(assert (=> b!59709 m!50849))

(declare-fun m!51701 () Bool)

(assert (=> b!59709 m!51701))

(declare-fun m!51703 () Bool)

(assert (=> b!59709 m!51703))

(declare-fun m!51705 () Bool)

(assert (=> b!59709 m!51705))

(assert (=> b!59709 m!50843))

(declare-fun m!51707 () Bool)

(assert (=> b!59709 m!51707))

(assert (=> b!59709 m!51701))

(assert (=> bm!4492 m!51695))

(assert (=> b!59706 m!50843))

(assert (=> b!59706 m!50843))

(assert (=> b!59706 m!50853))

(assert (=> bm!4427 d!11499))

(declare-fun d!11501 () Bool)

(assert (=> d!11501 (contains!692 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))

(declare-fun lt!24284 () Unit!1553)

(declare-fun choose!321 (array!3720 array!3722 (_ BitVec 32) (_ BitVec 32) V!2843 V!2843 (_ BitVec 64) (_ BitVec 32) Int) Unit!1553)

(assert (=> d!11501 (= lt!24284 (choose!321 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(assert (=> d!11501 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11501 (= (lemmaArrayContainsKeyThenInListMap!5 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!24284)))

(declare-fun bs!2578 () Bool)

(assert (= bs!2578 d!11501))

(assert (=> bs!2578 m!50697))

(assert (=> bs!2578 m!50697))

(assert (=> bs!2578 m!50591))

(assert (=> bs!2578 m!50793))

(assert (=> bs!2578 m!50591))

(declare-fun m!51709 () Bool)

(assert (=> bs!2578 m!51709))

(assert (=> bs!2578 m!50833))

(assert (=> b!59367 d!11501))

(assert (=> b!59367 d!11343))

(assert (=> b!59367 d!11289))

(declare-fun d!11503 () Bool)

(assert (not d!11503))

(assert (=> b!59196 d!11503))

(declare-fun b!59721 () Bool)

(declare-fun e!39263 () Option!129)

(assert (=> b!59721 (= e!39263 None!127)))

(declare-fun c!7683 () Bool)

(declare-fun d!11505 () Bool)

(assert (=> d!11505 (= c!7683 (and ((_ is Cons!1449) (t!4799 (toList!704 lt!23660))) (= (_1!1034 (h!2030 (t!4799 (toList!704 lt!23660)))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(declare-fun e!39262 () Option!129)

(assert (=> d!11505 (= (getValueByKey!123 (t!4799 (toList!704 lt!23660)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) e!39262)))

(declare-fun b!59718 () Bool)

(assert (=> b!59718 (= e!39262 (Some!128 (_2!1034 (h!2030 (t!4799 (toList!704 lt!23660))))))))

(declare-fun b!59720 () Bool)

(assert (=> b!59720 (= e!39263 (getValueByKey!123 (t!4799 (t!4799 (toList!704 lt!23660))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59719 () Bool)

(assert (=> b!59719 (= e!39262 e!39263)))

(declare-fun c!7684 () Bool)

(assert (=> b!59719 (= c!7684 (and ((_ is Cons!1449) (t!4799 (toList!704 lt!23660))) (not (= (_1!1034 (h!2030 (t!4799 (toList!704 lt!23660)))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))))

(assert (= (and d!11505 c!7683) b!59718))

(assert (= (and d!11505 (not c!7683)) b!59719))

(assert (= (and b!59719 c!7684) b!59720))

(assert (= (and b!59719 (not c!7684)) b!59721))

(assert (=> b!59720 m!50591))

(declare-fun m!51711 () Bool)

(assert (=> b!59720 m!51711))

(assert (=> b!59244 d!11505))

(declare-fun lt!24285 () Bool)

(declare-fun d!11507 () Bool)

(assert (=> d!11507 (= lt!24285 (select (content!63 (toList!704 lt!24112)) (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!39264 () Bool)

(assert (=> d!11507 (= lt!24285 e!39264)))

(declare-fun res!33120 () Bool)

(assert (=> d!11507 (=> (not res!33120) (not e!39264))))

(assert (=> d!11507 (= res!33120 ((_ is Cons!1449) (toList!704 lt!24112)))))

(assert (=> d!11507 (= (contains!694 (toList!704 lt!24112) (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!24285)))

(declare-fun b!59722 () Bool)

(declare-fun e!39265 () Bool)

(assert (=> b!59722 (= e!39264 e!39265)))

(declare-fun res!33121 () Bool)

(assert (=> b!59722 (=> res!33121 e!39265)))

(assert (=> b!59722 (= res!33121 (= (h!2030 (toList!704 lt!24112)) (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!59723 () Bool)

(assert (=> b!59723 (= e!39265 (contains!694 (t!4799 (toList!704 lt!24112)) (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!11507 res!33120) b!59722))

(assert (= (and b!59722 (not res!33121)) b!59723))

(declare-fun m!51713 () Bool)

(assert (=> d!11507 m!51713))

(declare-fun m!51715 () Bool)

(assert (=> d!11507 m!51715))

(declare-fun m!51717 () Bool)

(assert (=> b!59723 m!51717))

(assert (=> b!59443 d!11507))

(declare-fun b!59727 () Bool)

(declare-fun e!39267 () Option!129)

(assert (=> b!59727 (= e!39267 None!127)))

(declare-fun d!11509 () Bool)

(declare-fun c!7685 () Bool)

(assert (=> d!11509 (= c!7685 (and ((_ is Cons!1449) (toList!704 lt!24146)) (= (_1!1034 (h!2030 (toList!704 lt!24146))) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39266 () Option!129)

(assert (=> d!11509 (= (getValueByKey!123 (toList!704 lt!24146) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) e!39266)))

(declare-fun b!59724 () Bool)

(assert (=> b!59724 (= e!39266 (Some!128 (_2!1034 (h!2030 (toList!704 lt!24146)))))))

(declare-fun b!59726 () Bool)

(assert (=> b!59726 (= e!39267 (getValueByKey!123 (t!4799 (toList!704 lt!24146)) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!59725 () Bool)

(assert (=> b!59725 (= e!39266 e!39267)))

(declare-fun c!7686 () Bool)

(assert (=> b!59725 (= c!7686 (and ((_ is Cons!1449) (toList!704 lt!24146)) (not (= (_1!1034 (h!2030 (toList!704 lt!24146))) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11509 c!7685) b!59724))

(assert (= (and d!11509 (not c!7685)) b!59725))

(assert (= (and b!59725 c!7686) b!59726))

(assert (= (and b!59725 (not c!7686)) b!59727))

(declare-fun m!51719 () Bool)

(assert (=> b!59726 m!51719))

(assert (=> b!59477 d!11509))

(assert (=> b!59323 d!11279))

(declare-fun bm!4493 () Bool)

(declare-fun call!4496 () Bool)

(assert (=> bm!4493 (= call!4496 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3667 (_2!1033 lt!23848)) (mask!5927 (_2!1033 lt!23848))))))

(declare-fun b!59728 () Bool)

(declare-fun e!39269 () Bool)

(assert (=> b!59728 (= e!39269 call!4496)))

(declare-fun b!59729 () Bool)

(declare-fun e!39268 () Bool)

(assert (=> b!59729 (= e!39268 call!4496)))

(declare-fun b!59730 () Bool)

(declare-fun e!39270 () Bool)

(assert (=> b!59730 (= e!39270 e!39269)))

(declare-fun c!7687 () Bool)

(assert (=> b!59730 (= c!7687 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000)))))

(declare-fun d!11511 () Bool)

(declare-fun res!33123 () Bool)

(assert (=> d!11511 (=> res!33123 e!39270)))

(assert (=> d!11511 (= res!33123 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))))))

(assert (=> d!11511 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3667 (_2!1033 lt!23848)) (mask!5927 (_2!1033 lt!23848))) e!39270)))

(declare-fun b!59731 () Bool)

(assert (=> b!59731 (= e!39269 e!39268)))

(declare-fun lt!24288 () (_ BitVec 64))

(assert (=> b!59731 (= lt!24288 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000))))

(declare-fun lt!24286 () Unit!1553)

(assert (=> b!59731 (= lt!24286 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3667 (_2!1033 lt!23848)) lt!24288 #b00000000000000000000000000000000))))

(assert (=> b!59731 (arrayContainsKey!0 (_keys!3667 (_2!1033 lt!23848)) lt!24288 #b00000000000000000000000000000000)))

(declare-fun lt!24287 () Unit!1553)

(assert (=> b!59731 (= lt!24287 lt!24286)))

(declare-fun res!33122 () Bool)

(assert (=> b!59731 (= res!33122 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000) (_keys!3667 (_2!1033 lt!23848)) (mask!5927 (_2!1033 lt!23848))) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!59731 (=> (not res!33122) (not e!39268))))

(assert (= (and d!11511 (not res!33123)) b!59730))

(assert (= (and b!59730 c!7687) b!59731))

(assert (= (and b!59730 (not c!7687)) b!59728))

(assert (= (and b!59731 res!33122) b!59729))

(assert (= (or b!59729 b!59728) bm!4493))

(declare-fun m!51721 () Bool)

(assert (=> bm!4493 m!51721))

(declare-fun m!51723 () Bool)

(assert (=> b!59730 m!51723))

(assert (=> b!59730 m!51723))

(declare-fun m!51725 () Bool)

(assert (=> b!59730 m!51725))

(assert (=> b!59731 m!51723))

(declare-fun m!51727 () Bool)

(assert (=> b!59731 m!51727))

(declare-fun m!51729 () Bool)

(assert (=> b!59731 m!51729))

(assert (=> b!59731 m!51723))

(declare-fun m!51731 () Bool)

(assert (=> b!59731 m!51731))

(assert (=> b!59173 d!11511))

(assert (=> b!59454 d!11437))

(declare-fun d!11513 () Bool)

(assert (=> d!11513 (= (apply!66 lt!24083 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (getValueByKey!123 (toList!704 lt!24083) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2579 () Bool)

(assert (= bs!2579 d!11513))

(assert (=> bs!2579 m!50843))

(assert (=> bs!2579 m!51485))

(assert (=> bs!2579 m!51485))

(declare-fun m!51733 () Bool)

(assert (=> bs!2579 m!51733))

(assert (=> b!59413 d!11513))

(declare-fun c!7688 () Bool)

(declare-fun d!11515 () Bool)

(assert (=> d!11515 (= c!7688 ((_ is ValueCellFull!855) (select (arr!1781 (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!39271 () V!2843)

(assert (=> d!11515 (= (get!1080 (select (arr!1781 (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!39271)))

(declare-fun b!59732 () Bool)

(assert (=> b!59732 (= e!39271 (get!1081 (select (arr!1781 (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!59733 () Bool)

(assert (=> b!59733 (= e!39271 (get!1082 (select (arr!1781 (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11515 c!7688) b!59732))

(assert (= (and d!11515 (not c!7688)) b!59733))

(assert (=> b!59732 m!51161))

(assert (=> b!59732 m!50849))

(declare-fun m!51735 () Bool)

(assert (=> b!59732 m!51735))

(assert (=> b!59733 m!51161))

(assert (=> b!59733 m!50849))

(declare-fun m!51737 () Bool)

(assert (=> b!59733 m!51737))

(assert (=> b!59413 d!11515))

(declare-fun d!11517 () Bool)

(assert (=> d!11517 (= (content!62 Nil!1451) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!11303 d!11517))

(assert (=> b!59154 d!11437))

(declare-fun b!59737 () Bool)

(declare-fun e!39273 () Option!129)

(assert (=> b!59737 (= e!39273 None!127)))

(declare-fun d!11519 () Bool)

(declare-fun c!7689 () Bool)

(assert (=> d!11519 (= c!7689 (and ((_ is Cons!1449) (toList!704 lt!23900)) (= (_1!1034 (h!2030 (toList!704 lt!23900))) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39272 () Option!129)

(assert (=> d!11519 (= (getValueByKey!123 (toList!704 lt!23900) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) e!39272)))

(declare-fun b!59734 () Bool)

(assert (=> b!59734 (= e!39272 (Some!128 (_2!1034 (h!2030 (toList!704 lt!23900)))))))

(declare-fun b!59736 () Bool)

(assert (=> b!59736 (= e!39273 (getValueByKey!123 (t!4799 (toList!704 lt!23900)) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!59735 () Bool)

(assert (=> b!59735 (= e!39272 e!39273)))

(declare-fun c!7690 () Bool)

(assert (=> b!59735 (= c!7690 (and ((_ is Cons!1449) (toList!704 lt!23900)) (not (= (_1!1034 (h!2030 (toList!704 lt!23900))) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11519 c!7689) b!59734))

(assert (= (and d!11519 (not c!7689)) b!59735))

(assert (= (and b!59735 c!7690) b!59736))

(assert (= (and b!59735 (not c!7690)) b!59737))

(declare-fun m!51739 () Bool)

(assert (=> b!59736 m!51739))

(assert (=> b!59206 d!11519))

(declare-fun d!11521 () Bool)

(declare-fun isEmpty!300 (List!1453) Bool)

(assert (=> d!11521 (= (isEmpty!299 lt!23968) (isEmpty!300 (toList!704 lt!23968)))))

(declare-fun bs!2580 () Bool)

(assert (= bs!2580 d!11521))

(declare-fun m!51741 () Bool)

(assert (=> bs!2580 m!51741))

(assert (=> b!59320 d!11521))

(declare-fun b!59741 () Bool)

(declare-fun e!39275 () Option!129)

(assert (=> b!59741 (= e!39275 None!127)))

(declare-fun c!7691 () Bool)

(declare-fun d!11523 () Bool)

(assert (=> d!11523 (= c!7691 (and ((_ is Cons!1449) (toList!704 lt!24138)) (= (_1!1034 (h!2030 (toList!704 lt!24138))) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39274 () Option!129)

(assert (=> d!11523 (= (getValueByKey!123 (toList!704 lt!24138) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) e!39274)))

(declare-fun b!59738 () Bool)

(assert (=> b!59738 (= e!39274 (Some!128 (_2!1034 (h!2030 (toList!704 lt!24138)))))))

(declare-fun b!59740 () Bool)

(assert (=> b!59740 (= e!39275 (getValueByKey!123 (t!4799 (toList!704 lt!24138)) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!59739 () Bool)

(assert (=> b!59739 (= e!39274 e!39275)))

(declare-fun c!7692 () Bool)

(assert (=> b!59739 (= c!7692 (and ((_ is Cons!1449) (toList!704 lt!24138)) (not (= (_1!1034 (h!2030 (toList!704 lt!24138))) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11523 c!7691) b!59738))

(assert (= (and d!11523 (not c!7691)) b!59739))

(assert (= (and b!59739 c!7692) b!59740))

(assert (= (and b!59739 (not c!7692)) b!59741))

(declare-fun m!51743 () Bool)

(assert (=> b!59740 m!51743))

(assert (=> b!59473 d!11523))

(declare-fun d!11525 () Bool)

(declare-fun res!33124 () Bool)

(declare-fun e!39276 () Bool)

(assert (=> d!11525 (=> res!33124 e!39276)))

(assert (=> d!11525 (= res!33124 (= (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11525 (= (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!39276)))

(declare-fun b!59742 () Bool)

(declare-fun e!39277 () Bool)

(assert (=> b!59742 (= e!39276 e!39277)))

(declare-fun res!33125 () Bool)

(assert (=> b!59742 (=> (not res!33125) (not e!39277))))

(assert (=> b!59742 (= res!33125 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!59743 () Bool)

(assert (=> b!59743 (= e!39277 (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!11525 (not res!33124)) b!59742))

(assert (= (and b!59742 res!33125) b!59743))

(declare-fun m!51745 () Bool)

(assert (=> d!11525 m!51745))

(assert (=> b!59743 m!50591))

(declare-fun m!51747 () Bool)

(assert (=> b!59743 m!51747))

(assert (=> b!59176 d!11525))

(declare-fun d!11527 () Bool)

(declare-fun res!33126 () Bool)

(declare-fun e!39278 () Bool)

(assert (=> d!11527 (=> (not res!33126) (not e!39278))))

(assert (=> d!11527 (= res!33126 (simpleValid!41 (_2!1033 lt!24051)))))

(assert (=> d!11527 (= (valid!249 (_2!1033 lt!24051)) e!39278)))

(declare-fun b!59744 () Bool)

(declare-fun res!33127 () Bool)

(assert (=> b!59744 (=> (not res!33127) (not e!39278))))

(assert (=> b!59744 (= res!33127 (= (arrayCountValidKeys!0 (_keys!3667 (_2!1033 lt!24051)) #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!24051)))) (_size!358 (_2!1033 lt!24051))))))

(declare-fun b!59745 () Bool)

(declare-fun res!33128 () Bool)

(assert (=> b!59745 (=> (not res!33128) (not e!39278))))

(assert (=> b!59745 (= res!33128 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3667 (_2!1033 lt!24051)) (mask!5927 (_2!1033 lt!24051))))))

(declare-fun b!59746 () Bool)

(assert (=> b!59746 (= e!39278 (arrayNoDuplicates!0 (_keys!3667 (_2!1033 lt!24051)) #b00000000000000000000000000000000 Nil!1451))))

(assert (= (and d!11527 res!33126) b!59744))

(assert (= (and b!59744 res!33127) b!59745))

(assert (= (and b!59745 res!33128) b!59746))

(declare-fun m!51749 () Bool)

(assert (=> d!11527 m!51749))

(declare-fun m!51751 () Bool)

(assert (=> b!59744 m!51751))

(declare-fun m!51753 () Bool)

(assert (=> b!59745 m!51753))

(declare-fun m!51755 () Bool)

(assert (=> b!59746 m!51755))

(assert (=> b!59378 d!11527))

(declare-fun d!11529 () Bool)

(declare-fun e!39279 () Bool)

(assert (=> d!11529 e!39279))

(declare-fun res!33130 () Bool)

(assert (=> d!11529 (=> (not res!33130) (not e!39279))))

(declare-fun lt!24292 () ListLongMap!1377)

(assert (=> d!11529 (= res!33130 (contains!692 lt!24292 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(declare-fun lt!24289 () List!1453)

(assert (=> d!11529 (= lt!24292 (ListLongMap!1378 lt!24289))))

(declare-fun lt!24291 () Unit!1553)

(declare-fun lt!24290 () Unit!1553)

(assert (=> d!11529 (= lt!24291 lt!24290)))

(assert (=> d!11529 (= (getValueByKey!123 lt!24289 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(assert (=> d!11529 (= lt!24290 (lemmaContainsTupThenGetReturnValue!42 lt!24289 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(assert (=> d!11529 (= lt!24289 (insertStrictlySorted!44 (toList!704 call!4455) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(assert (=> d!11529 (= (+!81 call!4455 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))) lt!24292)))

(declare-fun b!59747 () Bool)

(declare-fun res!33129 () Bool)

(assert (=> b!59747 (=> (not res!33129) (not e!39279))))

(assert (=> b!59747 (= res!33129 (= (getValueByKey!123 (toList!704 lt!24292) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))))

(declare-fun b!59748 () Bool)

(assert (=> b!59748 (= e!39279 (contains!694 (toList!704 lt!24292) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))

(assert (= (and d!11529 res!33130) b!59747))

(assert (= (and b!59747 res!33129) b!59748))

(declare-fun m!51757 () Bool)

(assert (=> d!11529 m!51757))

(declare-fun m!51759 () Bool)

(assert (=> d!11529 m!51759))

(declare-fun m!51761 () Bool)

(assert (=> d!11529 m!51761))

(declare-fun m!51763 () Bool)

(assert (=> d!11529 m!51763))

(declare-fun m!51765 () Bool)

(assert (=> b!59747 m!51765))

(declare-fun m!51767 () Bool)

(assert (=> b!59748 m!51767))

(assert (=> b!59394 d!11529))

(assert (=> d!11397 d!11255))

(declare-fun d!11531 () Bool)

(declare-fun e!39280 () Bool)

(assert (=> d!11531 e!39280))

(declare-fun res!33131 () Bool)

(assert (=> d!11531 (=> res!33131 e!39280)))

(declare-fun lt!24293 () Bool)

(assert (=> d!11531 (= res!33131 (not lt!24293))))

(declare-fun lt!24296 () Bool)

(assert (=> d!11531 (= lt!24293 lt!24296)))

(declare-fun lt!24295 () Unit!1553)

(declare-fun e!39281 () Unit!1553)

(assert (=> d!11531 (= lt!24295 e!39281)))

(declare-fun c!7693 () Bool)

(assert (=> d!11531 (= c!7693 lt!24296)))

(assert (=> d!11531 (= lt!24296 (containsKey!127 (toList!704 lt!23913) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!11531 (= (contains!692 lt!23913 #b0000000000000000000000000000000000000000000000000000000000000000) lt!24293)))

(declare-fun b!59749 () Bool)

(declare-fun lt!24294 () Unit!1553)

(assert (=> b!59749 (= e!39281 lt!24294)))

(assert (=> b!59749 (= lt!24294 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23913) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59749 (isDefined!77 (getValueByKey!123 (toList!704 lt!23913) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59750 () Bool)

(declare-fun Unit!1585 () Unit!1553)

(assert (=> b!59750 (= e!39281 Unit!1585)))

(declare-fun b!59751 () Bool)

(assert (=> b!59751 (= e!39280 (isDefined!77 (getValueByKey!123 (toList!704 lt!23913) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11531 c!7693) b!59749))

(assert (= (and d!11531 (not c!7693)) b!59750))

(assert (= (and d!11531 (not res!33131)) b!59751))

(declare-fun m!51769 () Bool)

(assert (=> d!11531 m!51769))

(declare-fun m!51771 () Bool)

(assert (=> b!59749 m!51771))

(declare-fun m!51773 () Bool)

(assert (=> b!59749 m!51773))

(assert (=> b!59749 m!51773))

(declare-fun m!51775 () Bool)

(assert (=> b!59749 m!51775))

(assert (=> b!59751 m!51773))

(assert (=> b!59751 m!51773))

(assert (=> b!59751 m!51775))

(assert (=> bm!4425 d!11531))

(declare-fun d!11533 () Bool)

(declare-fun e!39282 () Bool)

(assert (=> d!11533 e!39282))

(declare-fun res!33133 () Bool)

(assert (=> d!11533 (=> (not res!33133) (not e!39282))))

(declare-fun lt!24300 () ListLongMap!1377)

(assert (=> d!11533 (= res!33133 (contains!692 lt!24300 (_1!1034 (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))))

(declare-fun lt!24297 () List!1453)

(assert (=> d!11533 (= lt!24300 (ListLongMap!1378 lt!24297))))

(declare-fun lt!24299 () Unit!1553)

(declare-fun lt!24298 () Unit!1553)

(assert (=> d!11533 (= lt!24299 lt!24298)))

(assert (=> d!11533 (= (getValueByKey!123 lt!24297 (_1!1034 (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))) (Some!128 (_2!1034 (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))))

(assert (=> d!11533 (= lt!24298 (lemmaContainsTupThenGetReturnValue!42 lt!24297 (_1!1034 (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))) (_2!1034 (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))))

(assert (=> d!11533 (= lt!24297 (insertStrictlySorted!44 (toList!704 (ite c!7609 call!4458 (ite c!7610 call!4457 call!4459))) (_1!1034 (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))) (_2!1034 (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))))

(assert (=> d!11533 (= (+!81 (ite c!7609 call!4458 (ite c!7610 call!4457 call!4459)) (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))) lt!24300)))

(declare-fun b!59752 () Bool)

(declare-fun res!33132 () Bool)

(assert (=> b!59752 (=> (not res!33132) (not e!39282))))

(assert (=> b!59752 (= res!33132 (= (getValueByKey!123 (toList!704 lt!24300) (_1!1034 (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))) (Some!128 (_2!1034 (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))))

(declare-fun b!59753 () Bool)

(assert (=> b!59753 (= e!39282 (contains!694 (toList!704 lt!24300) (ite (or c!7609 c!7610) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(assert (= (and d!11533 res!33133) b!59752))

(assert (= (and b!59752 res!33132) b!59753))

(declare-fun m!51777 () Bool)

(assert (=> d!11533 m!51777))

(declare-fun m!51779 () Bool)

(assert (=> d!11533 m!51779))

(declare-fun m!51781 () Bool)

(assert (=> d!11533 m!51781))

(declare-fun m!51783 () Bool)

(assert (=> d!11533 m!51783))

(declare-fun m!51785 () Bool)

(assert (=> b!59752 m!51785))

(declare-fun m!51787 () Bool)

(assert (=> b!59753 m!51787))

(assert (=> bm!4456 d!11533))

(declare-fun d!11535 () Bool)

(assert (=> d!11535 (= (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23749)) (v!2385 (getValueByKey!123 (toList!704 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23749)))))

(assert (=> d!11393 d!11535))

(declare-fun b!59757 () Bool)

(declare-fun e!39284 () Option!129)

(assert (=> b!59757 (= e!39284 None!127)))

(declare-fun c!7694 () Bool)

(declare-fun d!11537 () Bool)

(assert (=> d!11537 (= c!7694 (and ((_ is Cons!1449) (toList!704 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) (= (_1!1034 (h!2030 (toList!704 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))) lt!23749)))))

(declare-fun e!39283 () Option!129)

(assert (=> d!11537 (= (getValueByKey!123 (toList!704 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23749) e!39283)))

(declare-fun b!59754 () Bool)

(assert (=> b!59754 (= e!39283 (Some!128 (_2!1034 (h!2030 (toList!704 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))))

(declare-fun b!59756 () Bool)

(assert (=> b!59756 (= e!39284 (getValueByKey!123 (t!4799 (toList!704 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) lt!23749))))

(declare-fun b!59755 () Bool)

(assert (=> b!59755 (= e!39283 e!39284)))

(declare-fun c!7695 () Bool)

(assert (=> b!59755 (= c!7695 (and ((_ is Cons!1449) (toList!704 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) (not (= (_1!1034 (h!2030 (toList!704 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))) lt!23749))))))

(assert (= (and d!11537 c!7694) b!59754))

(assert (= (and d!11537 (not c!7694)) b!59755))

(assert (= (and b!59755 c!7695) b!59756))

(assert (= (and b!59755 (not c!7695)) b!59757))

(declare-fun m!51789 () Bool)

(assert (=> b!59756 m!51789))

(assert (=> d!11393 d!11537))

(declare-fun b!59758 () Bool)

(declare-fun res!33134 () Bool)

(declare-fun e!39285 () Bool)

(assert (=> b!59758 (=> (not res!33134) (not e!39285))))

(assert (=> b!59758 (= res!33134 (and (= (size!2011 (_values!2026 (_2!1033 lt!23848))) (bvadd (mask!5927 (_2!1033 lt!23848)) #b00000000000000000000000000000001)) (= (size!2010 (_keys!3667 (_2!1033 lt!23848))) (size!2011 (_values!2026 (_2!1033 lt!23848)))) (bvsge (_size!358 (_2!1033 lt!23848)) #b00000000000000000000000000000000) (bvsle (_size!358 (_2!1033 lt!23848)) (bvadd (mask!5927 (_2!1033 lt!23848)) #b00000000000000000000000000000001))))))

(declare-fun b!59760 () Bool)

(declare-fun res!33136 () Bool)

(assert (=> b!59760 (=> (not res!33136) (not e!39285))))

(assert (=> b!59760 (= res!33136 (= (size!2014 (_2!1033 lt!23848)) (bvadd (_size!358 (_2!1033 lt!23848)) (bvsdiv (bvadd (extraKeys!1930 (_2!1033 lt!23848)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!11539 () Bool)

(declare-fun res!33135 () Bool)

(assert (=> d!11539 (=> (not res!33135) (not e!39285))))

(assert (=> d!11539 (= res!33135 (validMask!0 (mask!5927 (_2!1033 lt!23848))))))

(assert (=> d!11539 (= (simpleValid!41 (_2!1033 lt!23848)) e!39285)))

(declare-fun b!59759 () Bool)

(declare-fun res!33137 () Bool)

(assert (=> b!59759 (=> (not res!33137) (not e!39285))))

(assert (=> b!59759 (= res!33137 (bvsge (size!2014 (_2!1033 lt!23848)) (_size!358 (_2!1033 lt!23848))))))

(declare-fun b!59761 () Bool)

(assert (=> b!59761 (= e!39285 (and (bvsge (extraKeys!1930 (_2!1033 lt!23848)) #b00000000000000000000000000000000) (bvsle (extraKeys!1930 (_2!1033 lt!23848)) #b00000000000000000000000000000011) (bvsge (_vacant!358 (_2!1033 lt!23848)) #b00000000000000000000000000000000)))))

(assert (= (and d!11539 res!33135) b!59758))

(assert (= (and b!59758 res!33134) b!59759))

(assert (= (and b!59759 res!33137) b!59760))

(assert (= (and b!59760 res!33136) b!59761))

(declare-fun m!51791 () Bool)

(assert (=> b!59760 m!51791))

(declare-fun m!51793 () Bool)

(assert (=> d!11539 m!51793))

(assert (=> b!59759 m!51791))

(assert (=> d!11293 d!11539))

(assert (=> b!59318 d!11299))

(declare-fun d!11541 () Bool)

(declare-fun e!39286 () Bool)

(assert (=> d!11541 e!39286))

(declare-fun res!33139 () Bool)

(assert (=> d!11541 (=> (not res!33139) (not e!39286))))

(declare-fun lt!24304 () ListLongMap!1377)

(assert (=> d!11541 (= res!33139 (contains!692 lt!24304 (_1!1034 (tuple2!2049 lt!23971 lt!23970))))))

(declare-fun lt!24301 () List!1453)

(assert (=> d!11541 (= lt!24304 (ListLongMap!1378 lt!24301))))

(declare-fun lt!24303 () Unit!1553)

(declare-fun lt!24302 () Unit!1553)

(assert (=> d!11541 (= lt!24303 lt!24302)))

(assert (=> d!11541 (= (getValueByKey!123 lt!24301 (_1!1034 (tuple2!2049 lt!23971 lt!23970))) (Some!128 (_2!1034 (tuple2!2049 lt!23971 lt!23970))))))

(assert (=> d!11541 (= lt!24302 (lemmaContainsTupThenGetReturnValue!42 lt!24301 (_1!1034 (tuple2!2049 lt!23971 lt!23970)) (_2!1034 (tuple2!2049 lt!23971 lt!23970))))))

(assert (=> d!11541 (= lt!24301 (insertStrictlySorted!44 (toList!704 lt!23966) (_1!1034 (tuple2!2049 lt!23971 lt!23970)) (_2!1034 (tuple2!2049 lt!23971 lt!23970))))))

(assert (=> d!11541 (= (+!81 lt!23966 (tuple2!2049 lt!23971 lt!23970)) lt!24304)))

(declare-fun b!59762 () Bool)

(declare-fun res!33138 () Bool)

(assert (=> b!59762 (=> (not res!33138) (not e!39286))))

(assert (=> b!59762 (= res!33138 (= (getValueByKey!123 (toList!704 lt!24304) (_1!1034 (tuple2!2049 lt!23971 lt!23970))) (Some!128 (_2!1034 (tuple2!2049 lt!23971 lt!23970)))))))

(declare-fun b!59763 () Bool)

(assert (=> b!59763 (= e!39286 (contains!694 (toList!704 lt!24304) (tuple2!2049 lt!23971 lt!23970)))))

(assert (= (and d!11541 res!33139) b!59762))

(assert (= (and b!59762 res!33138) b!59763))

(declare-fun m!51795 () Bool)

(assert (=> d!11541 m!51795))

(declare-fun m!51797 () Bool)

(assert (=> d!11541 m!51797))

(declare-fun m!51799 () Bool)

(assert (=> d!11541 m!51799))

(declare-fun m!51801 () Bool)

(assert (=> d!11541 m!51801))

(declare-fun m!51803 () Bool)

(assert (=> b!59762 m!51803))

(declare-fun m!51805 () Bool)

(assert (=> b!59763 m!51805))

(assert (=> b!59318 d!11541))

(declare-fun d!11543 () Bool)

(declare-fun e!39287 () Bool)

(assert (=> d!11543 e!39287))

(declare-fun res!33141 () Bool)

(assert (=> d!11543 (=> (not res!33141) (not e!39287))))

(declare-fun lt!24308 () ListLongMap!1377)

(assert (=> d!11543 (= res!33141 (contains!692 lt!24308 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!24305 () List!1453)

(assert (=> d!11543 (= lt!24308 (ListLongMap!1378 lt!24305))))

(declare-fun lt!24307 () Unit!1553)

(declare-fun lt!24306 () Unit!1553)

(assert (=> d!11543 (= lt!24307 lt!24306)))

(assert (=> d!11543 (= (getValueByKey!123 lt!24305 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11543 (= lt!24306 (lemmaContainsTupThenGetReturnValue!42 lt!24305 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11543 (= lt!24305 (insertStrictlySorted!44 (toList!704 call!4440) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11543 (= (+!81 call!4440 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!24308)))

(declare-fun b!59764 () Bool)

(declare-fun res!33140 () Bool)

(assert (=> b!59764 (=> (not res!33140) (not e!39287))))

(assert (=> b!59764 (= res!33140 (= (getValueByKey!123 (toList!704 lt!24308) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!59765 () Bool)

(assert (=> b!59765 (= e!39287 (contains!694 (toList!704 lt!24308) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!11543 res!33141) b!59764))

(assert (= (and b!59764 res!33140) b!59765))

(declare-fun m!51807 () Bool)

(assert (=> d!11543 m!51807))

(declare-fun m!51809 () Bool)

(assert (=> d!11543 m!51809))

(declare-fun m!51811 () Bool)

(assert (=> d!11543 m!51811))

(declare-fun m!51813 () Bool)

(assert (=> d!11543 m!51813))

(declare-fun m!51815 () Bool)

(assert (=> b!59764 m!51815))

(declare-fun m!51817 () Bool)

(assert (=> b!59765 m!51817))

(assert (=> b!59318 d!11543))

(declare-fun d!11545 () Bool)

(declare-fun e!39288 () Bool)

(assert (=> d!11545 e!39288))

(declare-fun res!33142 () Bool)

(assert (=> d!11545 (=> res!33142 e!39288)))

(declare-fun lt!24309 () Bool)

(assert (=> d!11545 (= res!33142 (not lt!24309))))

(declare-fun lt!24312 () Bool)

(assert (=> d!11545 (= lt!24309 lt!24312)))

(declare-fun lt!24311 () Unit!1553)

(declare-fun e!39289 () Unit!1553)

(assert (=> d!11545 (= lt!24311 e!39289)))

(declare-fun c!7696 () Bool)

(assert (=> d!11545 (= c!7696 lt!24312)))

(assert (=> d!11545 (= lt!24312 (containsKey!127 (toList!704 (+!81 lt!23966 (tuple2!2049 lt!23971 lt!23970))) lt!23972))))

(assert (=> d!11545 (= (contains!692 (+!81 lt!23966 (tuple2!2049 lt!23971 lt!23970)) lt!23972) lt!24309)))

(declare-fun b!59766 () Bool)

(declare-fun lt!24310 () Unit!1553)

(assert (=> b!59766 (= e!39289 lt!24310)))

(assert (=> b!59766 (= lt!24310 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 (+!81 lt!23966 (tuple2!2049 lt!23971 lt!23970))) lt!23972))))

(assert (=> b!59766 (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!23966 (tuple2!2049 lt!23971 lt!23970))) lt!23972))))

(declare-fun b!59767 () Bool)

(declare-fun Unit!1586 () Unit!1553)

(assert (=> b!59767 (= e!39289 Unit!1586)))

(declare-fun b!59768 () Bool)

(assert (=> b!59768 (= e!39288 (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!23966 (tuple2!2049 lt!23971 lt!23970))) lt!23972)))))

(assert (= (and d!11545 c!7696) b!59766))

(assert (= (and d!11545 (not c!7696)) b!59767))

(assert (= (and d!11545 (not res!33142)) b!59768))

(declare-fun m!51819 () Bool)

(assert (=> d!11545 m!51819))

(declare-fun m!51821 () Bool)

(assert (=> b!59766 m!51821))

(declare-fun m!51823 () Bool)

(assert (=> b!59766 m!51823))

(assert (=> b!59766 m!51823))

(declare-fun m!51825 () Bool)

(assert (=> b!59766 m!51825))

(assert (=> b!59768 m!51823))

(assert (=> b!59768 m!51823))

(assert (=> b!59768 m!51825))

(assert (=> b!59318 d!11545))

(declare-fun d!11547 () Bool)

(assert (=> d!11547 (not (contains!692 (+!81 lt!23966 (tuple2!2049 lt!23971 lt!23970)) lt!23972))))

(declare-fun lt!24315 () Unit!1553)

(declare-fun choose!322 (ListLongMap!1377 (_ BitVec 64) V!2843 (_ BitVec 64)) Unit!1553)

(assert (=> d!11547 (= lt!24315 (choose!322 lt!23966 lt!23971 lt!23970 lt!23972))))

(declare-fun e!39292 () Bool)

(assert (=> d!11547 e!39292))

(declare-fun res!33145 () Bool)

(assert (=> d!11547 (=> (not res!33145) (not e!39292))))

(assert (=> d!11547 (= res!33145 (not (contains!692 lt!23966 lt!23972)))))

(assert (=> d!11547 (= (addStillNotContains!17 lt!23966 lt!23971 lt!23970 lt!23972) lt!24315)))

(declare-fun b!59772 () Bool)

(assert (=> b!59772 (= e!39292 (not (= lt!23971 lt!23972)))))

(assert (= (and d!11547 res!33145) b!59772))

(assert (=> d!11547 m!51065))

(assert (=> d!11547 m!51065))

(assert (=> d!11547 m!51067))

(declare-fun m!51827 () Bool)

(assert (=> d!11547 m!51827))

(declare-fun m!51829 () Bool)

(assert (=> d!11547 m!51829))

(assert (=> b!59318 d!11547))

(assert (=> bm!4433 d!11351))

(declare-fun d!11549 () Bool)

(declare-fun e!39293 () Bool)

(assert (=> d!11549 e!39293))

(declare-fun res!33146 () Bool)

(assert (=> d!11549 (=> res!33146 e!39293)))

(declare-fun lt!24316 () Bool)

(assert (=> d!11549 (= res!33146 (not lt!24316))))

(declare-fun lt!24319 () Bool)

(assert (=> d!11549 (= lt!24316 lt!24319)))

(declare-fun lt!24318 () Unit!1553)

(declare-fun e!39294 () Unit!1553)

(assert (=> d!11549 (= lt!24318 e!39294)))

(declare-fun c!7697 () Bool)

(assert (=> d!11549 (= c!7697 lt!24319)))

(assert (=> d!11549 (= lt!24319 (containsKey!127 (toList!704 lt!23913) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!11549 (= (contains!692 lt!23913 #b1000000000000000000000000000000000000000000000000000000000000000) lt!24316)))

(declare-fun b!59773 () Bool)

(declare-fun lt!24317 () Unit!1553)

(assert (=> b!59773 (= e!39294 lt!24317)))

(assert (=> b!59773 (= lt!24317 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23913) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59773 (isDefined!77 (getValueByKey!123 (toList!704 lt!23913) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59774 () Bool)

(declare-fun Unit!1587 () Unit!1553)

(assert (=> b!59774 (= e!39294 Unit!1587)))

(declare-fun b!59775 () Bool)

(assert (=> b!59775 (= e!39293 (isDefined!77 (getValueByKey!123 (toList!704 lt!23913) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11549 c!7697) b!59773))

(assert (= (and d!11549 (not c!7697)) b!59774))

(assert (= (and d!11549 (not res!33146)) b!59775))

(declare-fun m!51831 () Bool)

(assert (=> d!11549 m!51831))

(declare-fun m!51833 () Bool)

(assert (=> b!59773 m!51833))

(declare-fun m!51835 () Bool)

(assert (=> b!59773 m!51835))

(assert (=> b!59773 m!51835))

(declare-fun m!51837 () Bool)

(assert (=> b!59773 m!51837))

(assert (=> b!59775 m!51835))

(assert (=> b!59775 m!51835))

(assert (=> b!59775 m!51837))

(assert (=> bm!4424 d!11549))

(declare-fun d!11551 () Bool)

(assert (=> d!11551 (= (get!1082 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59178 d!11551))

(declare-fun bm!4494 () Bool)

(declare-fun call!4497 () ListLongMap!1377)

(declare-fun call!4499 () ListLongMap!1377)

(assert (=> bm!4494 (= call!4497 call!4499)))

(declare-fun d!11553 () Bool)

(declare-fun e!39296 () Bool)

(assert (=> d!11553 e!39296))

(declare-fun res!33154 () Bool)

(assert (=> d!11553 (=> (not res!33154) (not e!39296))))

(assert (=> d!11553 (= res!33154 (or (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))))))))

(declare-fun lt!24324 () ListLongMap!1377)

(declare-fun lt!24340 () ListLongMap!1377)

(assert (=> d!11553 (= lt!24324 lt!24340)))

(declare-fun lt!24329 () Unit!1553)

(declare-fun e!39304 () Unit!1553)

(assert (=> d!11553 (= lt!24329 e!39304)))

(declare-fun c!7699 () Bool)

(declare-fun e!39303 () Bool)

(assert (=> d!11553 (= c!7699 e!39303)))

(declare-fun res!33151 () Bool)

(assert (=> d!11553 (=> (not res!33151) (not e!39303))))

(assert (=> d!11553 (= res!33151 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))))))

(declare-fun e!39307 () ListLongMap!1377)

(assert (=> d!11553 (= lt!24340 e!39307)))

(declare-fun c!7702 () Bool)

(assert (=> d!11553 (= c!7702 (and (not (= (bvand (extraKeys!1930 (_2!1033 lt!23848)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1930 (_2!1033 lt!23848)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11553 (validMask!0 (mask!5927 (_2!1033 lt!23848)))))

(assert (=> d!11553 (= (getCurrentListMap!401 (_keys!3667 (_2!1033 lt!23848)) (_values!2026 (_2!1033 lt!23848)) (mask!5927 (_2!1033 lt!23848)) (extraKeys!1930 (_2!1033 lt!23848)) (zeroValue!1959 (_2!1033 lt!23848)) (minValue!1959 (_2!1033 lt!23848)) #b00000000000000000000000000000000 (defaultEntry!2043 (_2!1033 lt!23848))) lt!24324)))

(declare-fun b!59776 () Bool)

(declare-fun e!39297 () Bool)

(declare-fun call!4498 () Bool)

(assert (=> b!59776 (= e!39297 (not call!4498))))

(declare-fun b!59777 () Bool)

(assert (=> b!59777 (= e!39307 (+!81 call!4499 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (_2!1033 lt!23848)))))))

(declare-fun b!59778 () Bool)

(declare-fun e!39298 () Bool)

(assert (=> b!59778 (= e!39297 e!39298)))

(declare-fun res!33148 () Bool)

(assert (=> b!59778 (= res!33148 call!4498)))

(assert (=> b!59778 (=> (not res!33148) (not e!39298))))

(declare-fun b!59779 () Bool)

(declare-fun e!39295 () Bool)

(assert (=> b!59779 (= e!39295 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000)))))

(declare-fun bm!4495 () Bool)

(declare-fun call!4503 () ListLongMap!1377)

(declare-fun call!4501 () ListLongMap!1377)

(assert (=> bm!4495 (= call!4503 call!4501)))

(declare-fun b!59780 () Bool)

(declare-fun e!39299 () ListLongMap!1377)

(assert (=> b!59780 (= e!39299 call!4503)))

(declare-fun bm!4496 () Bool)

(assert (=> bm!4496 (= call!4498 (contains!692 lt!24324 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59781 () Bool)

(declare-fun Unit!1588 () Unit!1553)

(assert (=> b!59781 (= e!39304 Unit!1588)))

(declare-fun bm!4497 () Bool)

(declare-fun call!4500 () Bool)

(assert (=> bm!4497 (= call!4500 (contains!692 lt!24324 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59782 () Bool)

(declare-fun e!39301 () Bool)

(assert (=> b!59782 (= e!39301 (not call!4500))))

(declare-fun b!59783 () Bool)

(declare-fun e!39300 () Bool)

(assert (=> b!59783 (= e!39300 (= (apply!66 lt!24324 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1959 (_2!1033 lt!23848))))))

(declare-fun bm!4498 () Bool)

(declare-fun call!4502 () ListLongMap!1377)

(assert (=> bm!4498 (= call!4501 call!4502)))

(declare-fun b!59784 () Bool)

(declare-fun res!33149 () Bool)

(assert (=> b!59784 (=> (not res!33149) (not e!39296))))

(assert (=> b!59784 (= res!33149 e!39301)))

(declare-fun c!7698 () Bool)

(assert (=> b!59784 (= c!7698 (not (= (bvand (extraKeys!1930 (_2!1033 lt!23848)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!59785 () Bool)

(declare-fun e!39305 () Bool)

(declare-fun e!39302 () Bool)

(assert (=> b!59785 (= e!39305 e!39302)))

(declare-fun res!33147 () Bool)

(assert (=> b!59785 (=> (not res!33147) (not e!39302))))

(assert (=> b!59785 (= res!33147 (contains!692 lt!24324 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000)))))

(assert (=> b!59785 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))))))

(declare-fun b!59786 () Bool)

(assert (=> b!59786 (= e!39299 call!4497)))

(declare-fun b!59787 () Bool)

(assert (=> b!59787 (= e!39303 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000)))))

(declare-fun bm!4499 () Bool)

(assert (=> bm!4499 (= call!4502 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (_2!1033 lt!23848)) (_values!2026 (_2!1033 lt!23848)) (mask!5927 (_2!1033 lt!23848)) (extraKeys!1930 (_2!1033 lt!23848)) (zeroValue!1959 (_2!1033 lt!23848)) (minValue!1959 (_2!1033 lt!23848)) #b00000000000000000000000000000000 (defaultEntry!2043 (_2!1033 lt!23848))))))

(declare-fun b!59788 () Bool)

(declare-fun res!33150 () Bool)

(assert (=> b!59788 (=> (not res!33150) (not e!39296))))

(assert (=> b!59788 (= res!33150 e!39305)))

(declare-fun res!33152 () Bool)

(assert (=> b!59788 (=> res!33152 e!39305)))

(assert (=> b!59788 (= res!33152 (not e!39295))))

(declare-fun res!33153 () Bool)

(assert (=> b!59788 (=> (not res!33153) (not e!39295))))

(assert (=> b!59788 (= res!33153 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))))))

(declare-fun b!59789 () Bool)

(assert (=> b!59789 (= e!39298 (= (apply!66 lt!24324 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1959 (_2!1033 lt!23848))))))

(declare-fun b!59790 () Bool)

(assert (=> b!59790 (= e!39296 e!39297)))

(declare-fun c!7701 () Bool)

(assert (=> b!59790 (= c!7701 (not (= (bvand (extraKeys!1930 (_2!1033 lt!23848)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59791 () Bool)

(declare-fun c!7700 () Bool)

(assert (=> b!59791 (= c!7700 (and (not (= (bvand (extraKeys!1930 (_2!1033 lt!23848)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 (_2!1033 lt!23848)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!39306 () ListLongMap!1377)

(assert (=> b!59791 (= e!39306 e!39299)))

(declare-fun b!59792 () Bool)

(assert (=> b!59792 (= e!39301 e!39300)))

(declare-fun res!33155 () Bool)

(assert (=> b!59792 (= res!33155 call!4500)))

(assert (=> b!59792 (=> (not res!33155) (not e!39300))))

(declare-fun bm!4500 () Bool)

(declare-fun c!7703 () Bool)

(assert (=> bm!4500 (= call!4499 (+!81 (ite c!7702 call!4502 (ite c!7703 call!4501 call!4503)) (ite (or c!7702 c!7703) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (_2!1033 lt!23848))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (_2!1033 lt!23848))))))))

(declare-fun b!59793 () Bool)

(declare-fun lt!24333 () Unit!1553)

(assert (=> b!59793 (= e!39304 lt!24333)))

(declare-fun lt!24338 () ListLongMap!1377)

(assert (=> b!59793 (= lt!24338 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (_2!1033 lt!23848)) (_values!2026 (_2!1033 lt!23848)) (mask!5927 (_2!1033 lt!23848)) (extraKeys!1930 (_2!1033 lt!23848)) (zeroValue!1959 (_2!1033 lt!23848)) (minValue!1959 (_2!1033 lt!23848)) #b00000000000000000000000000000000 (defaultEntry!2043 (_2!1033 lt!23848))))))

(declare-fun lt!24337 () (_ BitVec 64))

(assert (=> b!59793 (= lt!24337 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24320 () (_ BitVec 64))

(assert (=> b!59793 (= lt!24320 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000))))

(declare-fun lt!24334 () Unit!1553)

(assert (=> b!59793 (= lt!24334 (addStillContains!42 lt!24338 lt!24337 (zeroValue!1959 (_2!1033 lt!23848)) lt!24320))))

(assert (=> b!59793 (contains!692 (+!81 lt!24338 (tuple2!2049 lt!24337 (zeroValue!1959 (_2!1033 lt!23848)))) lt!24320)))

(declare-fun lt!24321 () Unit!1553)

(assert (=> b!59793 (= lt!24321 lt!24334)))

(declare-fun lt!24335 () ListLongMap!1377)

(assert (=> b!59793 (= lt!24335 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (_2!1033 lt!23848)) (_values!2026 (_2!1033 lt!23848)) (mask!5927 (_2!1033 lt!23848)) (extraKeys!1930 (_2!1033 lt!23848)) (zeroValue!1959 (_2!1033 lt!23848)) (minValue!1959 (_2!1033 lt!23848)) #b00000000000000000000000000000000 (defaultEntry!2043 (_2!1033 lt!23848))))))

(declare-fun lt!24322 () (_ BitVec 64))

(assert (=> b!59793 (= lt!24322 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24326 () (_ BitVec 64))

(assert (=> b!59793 (= lt!24326 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000))))

(declare-fun lt!24328 () Unit!1553)

(assert (=> b!59793 (= lt!24328 (addApplyDifferent!42 lt!24335 lt!24322 (minValue!1959 (_2!1033 lt!23848)) lt!24326))))

(assert (=> b!59793 (= (apply!66 (+!81 lt!24335 (tuple2!2049 lt!24322 (minValue!1959 (_2!1033 lt!23848)))) lt!24326) (apply!66 lt!24335 lt!24326))))

(declare-fun lt!24341 () Unit!1553)

(assert (=> b!59793 (= lt!24341 lt!24328)))

(declare-fun lt!24325 () ListLongMap!1377)

(assert (=> b!59793 (= lt!24325 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (_2!1033 lt!23848)) (_values!2026 (_2!1033 lt!23848)) (mask!5927 (_2!1033 lt!23848)) (extraKeys!1930 (_2!1033 lt!23848)) (zeroValue!1959 (_2!1033 lt!23848)) (minValue!1959 (_2!1033 lt!23848)) #b00000000000000000000000000000000 (defaultEntry!2043 (_2!1033 lt!23848))))))

(declare-fun lt!24336 () (_ BitVec 64))

(assert (=> b!59793 (= lt!24336 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24331 () (_ BitVec 64))

(assert (=> b!59793 (= lt!24331 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000))))

(declare-fun lt!24339 () Unit!1553)

(assert (=> b!59793 (= lt!24339 (addApplyDifferent!42 lt!24325 lt!24336 (zeroValue!1959 (_2!1033 lt!23848)) lt!24331))))

(assert (=> b!59793 (= (apply!66 (+!81 lt!24325 (tuple2!2049 lt!24336 (zeroValue!1959 (_2!1033 lt!23848)))) lt!24331) (apply!66 lt!24325 lt!24331))))

(declare-fun lt!24323 () Unit!1553)

(assert (=> b!59793 (= lt!24323 lt!24339)))

(declare-fun lt!24327 () ListLongMap!1377)

(assert (=> b!59793 (= lt!24327 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (_2!1033 lt!23848)) (_values!2026 (_2!1033 lt!23848)) (mask!5927 (_2!1033 lt!23848)) (extraKeys!1930 (_2!1033 lt!23848)) (zeroValue!1959 (_2!1033 lt!23848)) (minValue!1959 (_2!1033 lt!23848)) #b00000000000000000000000000000000 (defaultEntry!2043 (_2!1033 lt!23848))))))

(declare-fun lt!24332 () (_ BitVec 64))

(assert (=> b!59793 (= lt!24332 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24330 () (_ BitVec 64))

(assert (=> b!59793 (= lt!24330 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000))))

(assert (=> b!59793 (= lt!24333 (addApplyDifferent!42 lt!24327 lt!24332 (minValue!1959 (_2!1033 lt!23848)) lt!24330))))

(assert (=> b!59793 (= (apply!66 (+!81 lt!24327 (tuple2!2049 lt!24332 (minValue!1959 (_2!1033 lt!23848)))) lt!24330) (apply!66 lt!24327 lt!24330))))

(declare-fun b!59794 () Bool)

(assert (=> b!59794 (= e!39306 call!4497)))

(declare-fun b!59795 () Bool)

(assert (=> b!59795 (= e!39307 e!39306)))

(assert (=> b!59795 (= c!7703 (and (not (= (bvand (extraKeys!1930 (_2!1033 lt!23848)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 (_2!1033 lt!23848)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59796 () Bool)

(assert (=> b!59796 (= e!39302 (= (apply!66 lt!24324 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 (_values!2026 (_2!1033 lt!23848))) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 (_2!1033 lt!23848)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!59796 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 (_values!2026 (_2!1033 lt!23848)))))))

(assert (=> b!59796 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))))))

(assert (= (and d!11553 c!7702) b!59777))

(assert (= (and d!11553 (not c!7702)) b!59795))

(assert (= (and b!59795 c!7703) b!59794))

(assert (= (and b!59795 (not c!7703)) b!59791))

(assert (= (and b!59791 c!7700) b!59786))

(assert (= (and b!59791 (not c!7700)) b!59780))

(assert (= (or b!59786 b!59780) bm!4495))

(assert (= (or b!59794 bm!4495) bm!4498))

(assert (= (or b!59794 b!59786) bm!4494))

(assert (= (or b!59777 bm!4498) bm!4499))

(assert (= (or b!59777 bm!4494) bm!4500))

(assert (= (and d!11553 res!33151) b!59787))

(assert (= (and d!11553 c!7699) b!59793))

(assert (= (and d!11553 (not c!7699)) b!59781))

(assert (= (and d!11553 res!33154) b!59788))

(assert (= (and b!59788 res!33153) b!59779))

(assert (= (and b!59788 (not res!33152)) b!59785))

(assert (= (and b!59785 res!33147) b!59796))

(assert (= (and b!59788 res!33150) b!59784))

(assert (= (and b!59784 c!7698) b!59792))

(assert (= (and b!59784 (not c!7698)) b!59782))

(assert (= (and b!59792 res!33155) b!59783))

(assert (= (or b!59792 b!59782) bm!4497))

(assert (= (and b!59784 res!33149) b!59790))

(assert (= (and b!59790 c!7701) b!59778))

(assert (= (and b!59790 (not c!7701)) b!59776))

(assert (= (and b!59778 res!33148) b!59789))

(assert (= (or b!59778 b!59776) bm!4496))

(declare-fun b_lambda!2639 () Bool)

(assert (=> (not b_lambda!2639) (not b!59796)))

(declare-fun tb!1333 () Bool)

(declare-fun t!4810 () Bool)

(assert (=> (and b!58833 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 (_2!1033 lt!23848))) t!4810) tb!1333))

(declare-fun result!2393 () Bool)

(assert (=> tb!1333 (= result!2393 tp_is_empty!2397)))

(assert (=> b!59796 t!4810))

(declare-fun b_and!3617 () Bool)

(assert (= b_and!3613 (and (=> t!4810 result!2393) b_and!3617)))

(declare-fun tb!1335 () Bool)

(declare-fun t!4812 () Bool)

(assert (=> (and b!58818 (= (defaultEntry!2043 newMap!16) (defaultEntry!2043 (_2!1033 lt!23848))) t!4812) tb!1335))

(declare-fun result!2395 () Bool)

(assert (= result!2395 result!2393))

(assert (=> b!59796 t!4812))

(declare-fun b_and!3619 () Bool)

(assert (= b_and!3615 (and (=> t!4812 result!2395) b_and!3619)))

(declare-fun m!51839 () Bool)

(assert (=> b!59789 m!51839))

(assert (=> b!59796 m!51723))

(assert (=> b!59796 m!51723))

(declare-fun m!51841 () Bool)

(assert (=> b!59796 m!51841))

(declare-fun m!51843 () Bool)

(assert (=> b!59796 m!51843))

(declare-fun m!51845 () Bool)

(assert (=> b!59796 m!51845))

(assert (=> b!59796 m!51843))

(assert (=> b!59796 m!51845))

(declare-fun m!51847 () Bool)

(assert (=> b!59796 m!51847))

(assert (=> b!59779 m!51723))

(assert (=> b!59779 m!51723))

(assert (=> b!59779 m!51725))

(declare-fun m!51849 () Bool)

(assert (=> b!59783 m!51849))

(assert (=> b!59793 m!51723))

(declare-fun m!51851 () Bool)

(assert (=> b!59793 m!51851))

(declare-fun m!51853 () Bool)

(assert (=> b!59793 m!51853))

(declare-fun m!51855 () Bool)

(assert (=> b!59793 m!51855))

(declare-fun m!51857 () Bool)

(assert (=> b!59793 m!51857))

(declare-fun m!51859 () Bool)

(assert (=> b!59793 m!51859))

(declare-fun m!51861 () Bool)

(assert (=> b!59793 m!51861))

(assert (=> b!59793 m!51857))

(declare-fun m!51863 () Bool)

(assert (=> b!59793 m!51863))

(declare-fun m!51865 () Bool)

(assert (=> b!59793 m!51865))

(declare-fun m!51867 () Bool)

(assert (=> b!59793 m!51867))

(declare-fun m!51869 () Bool)

(assert (=> b!59793 m!51869))

(declare-fun m!51871 () Bool)

(assert (=> b!59793 m!51871))

(declare-fun m!51873 () Bool)

(assert (=> b!59793 m!51873))

(declare-fun m!51875 () Bool)

(assert (=> b!59793 m!51875))

(declare-fun m!51877 () Bool)

(assert (=> b!59793 m!51877))

(assert (=> b!59793 m!51877))

(declare-fun m!51879 () Bool)

(assert (=> b!59793 m!51879))

(assert (=> b!59793 m!51851))

(assert (=> b!59793 m!51871))

(declare-fun m!51881 () Bool)

(assert (=> b!59793 m!51881))

(declare-fun m!51883 () Bool)

(assert (=> bm!4500 m!51883))

(assert (=> b!59785 m!51723))

(assert (=> b!59785 m!51723))

(declare-fun m!51885 () Bool)

(assert (=> b!59785 m!51885))

(assert (=> d!11553 m!51793))

(declare-fun m!51887 () Bool)

(assert (=> b!59777 m!51887))

(declare-fun m!51889 () Bool)

(assert (=> bm!4497 m!51889))

(declare-fun m!51891 () Bool)

(assert (=> bm!4496 m!51891))

(assert (=> b!59787 m!51723))

(assert (=> b!59787 m!51723))

(assert (=> b!59787 m!51725))

(assert (=> bm!4499 m!51855))

(assert (=> d!11405 d!11553))

(declare-fun b!59800 () Bool)

(declare-fun e!39309 () Option!129)

(assert (=> b!59800 (= e!39309 None!127)))

(declare-fun c!7704 () Bool)

(declare-fun d!11555 () Bool)

(assert (=> d!11555 (= c!7704 (and ((_ is Cons!1449) (toList!704 lt!24153)) (= (_1!1034 (h!2030 (toList!704 lt!24153))) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!39308 () Option!129)

(assert (=> d!11555 (= (getValueByKey!123 (toList!704 lt!24153) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!39308)))

(declare-fun b!59797 () Bool)

(assert (=> b!59797 (= e!39308 (Some!128 (_2!1034 (h!2030 (toList!704 lt!24153)))))))

(declare-fun b!59799 () Bool)

(assert (=> b!59799 (= e!39309 (getValueByKey!123 (t!4799 (toList!704 lt!24153)) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!59798 () Bool)

(assert (=> b!59798 (= e!39308 e!39309)))

(declare-fun c!7705 () Bool)

(assert (=> b!59798 (= c!7705 (and ((_ is Cons!1449) (toList!704 lt!24153)) (not (= (_1!1034 (h!2030 (toList!704 lt!24153))) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!11555 c!7704) b!59797))

(assert (= (and d!11555 (not c!7704)) b!59798))

(assert (= (and b!59798 c!7705) b!59799))

(assert (= (and b!59798 (not c!7705)) b!59800))

(declare-fun m!51893 () Bool)

(assert (=> b!59799 m!51893))

(assert (=> b!59480 d!11555))

(declare-fun d!11557 () Bool)

(assert (=> d!11557 (= (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23750)) (v!2385 (getValueByKey!123 (toList!704 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23750)))))

(assert (=> d!11383 d!11557))

(declare-fun b!59804 () Bool)

(declare-fun e!39311 () Option!129)

(assert (=> b!59804 (= e!39311 None!127)))

(declare-fun d!11559 () Bool)

(declare-fun c!7706 () Bool)

(assert (=> d!11559 (= c!7706 (and ((_ is Cons!1449) (toList!704 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))) (= (_1!1034 (h!2030 (toList!704 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))) lt!23750)))))

(declare-fun e!39310 () Option!129)

(assert (=> d!11559 (= (getValueByKey!123 (toList!704 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23750) e!39310)))

(declare-fun b!59801 () Bool)

(assert (=> b!59801 (= e!39310 (Some!128 (_2!1034 (h!2030 (toList!704 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))))

(declare-fun b!59803 () Bool)

(assert (=> b!59803 (= e!39311 (getValueByKey!123 (t!4799 (toList!704 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))) lt!23750))))

(declare-fun b!59802 () Bool)

(assert (=> b!59802 (= e!39310 e!39311)))

(declare-fun c!7707 () Bool)

(assert (=> b!59802 (= c!7707 (and ((_ is Cons!1449) (toList!704 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))) (not (= (_1!1034 (h!2030 (toList!704 (+!81 lt!23744 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))) lt!23750))))))

(assert (= (and d!11559 c!7706) b!59801))

(assert (= (and d!11559 (not c!7706)) b!59802))

(assert (= (and b!59802 c!7707) b!59803))

(assert (= (and b!59802 (not c!7707)) b!59804))

(declare-fun m!51895 () Bool)

(assert (=> b!59803 m!51895))

(assert (=> d!11383 d!11559))

(declare-fun d!11561 () Bool)

(declare-fun e!39312 () Bool)

(assert (=> d!11561 e!39312))

(declare-fun res!33156 () Bool)

(assert (=> d!11561 (=> res!33156 e!39312)))

(declare-fun lt!24342 () Bool)

(assert (=> d!11561 (= res!33156 (not lt!24342))))

(declare-fun lt!24345 () Bool)

(assert (=> d!11561 (= lt!24342 lt!24345)))

(declare-fun lt!24344 () Unit!1553)

(declare-fun e!39313 () Unit!1553)

(assert (=> d!11561 (= lt!24344 e!39313)))

(declare-fun c!7708 () Bool)

(assert (=> d!11561 (= c!7708 lt!24345)))

(assert (=> d!11561 (= lt!24345 (containsKey!127 (toList!704 lt!23904) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> d!11561 (= (contains!692 lt!23904 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) lt!24342)))

(declare-fun b!59805 () Bool)

(declare-fun lt!24343 () Unit!1553)

(assert (=> b!59805 (= e!39313 lt!24343)))

(assert (=> b!59805 (= lt!24343 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23904) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> b!59805 (isDefined!77 (getValueByKey!123 (toList!704 lt!23904) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!59806 () Bool)

(declare-fun Unit!1589 () Unit!1553)

(assert (=> b!59806 (= e!39313 Unit!1589)))

(declare-fun b!59807 () Bool)

(assert (=> b!59807 (= e!39312 (isDefined!77 (getValueByKey!123 (toList!704 lt!23904) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11561 c!7708) b!59805))

(assert (= (and d!11561 (not c!7708)) b!59806))

(assert (= (and d!11561 (not res!33156)) b!59807))

(declare-fun m!51897 () Bool)

(assert (=> d!11561 m!51897))

(declare-fun m!51899 () Bool)

(assert (=> b!59805 m!51899))

(assert (=> b!59805 m!50949))

(assert (=> b!59805 m!50949))

(declare-fun m!51901 () Bool)

(assert (=> b!59805 m!51901))

(assert (=> b!59807 m!50949))

(assert (=> b!59807 m!50949))

(assert (=> b!59807 m!51901))

(assert (=> d!11309 d!11561))

(declare-fun b!59811 () Bool)

(declare-fun e!39315 () Option!129)

(assert (=> b!59811 (= e!39315 None!127)))

(declare-fun c!7709 () Bool)

(declare-fun d!11563 () Bool)

(assert (=> d!11563 (= c!7709 (and ((_ is Cons!1449) lt!23901) (= (_1!1034 (h!2030 lt!23901)) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(declare-fun e!39314 () Option!129)

(assert (=> d!11563 (= (getValueByKey!123 lt!23901 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) e!39314)))

(declare-fun b!59808 () Bool)

(assert (=> b!59808 (= e!39314 (Some!128 (_2!1034 (h!2030 lt!23901))))))

(declare-fun b!59810 () Bool)

(assert (=> b!59810 (= e!39315 (getValueByKey!123 (t!4799 lt!23901) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!59809 () Bool)

(assert (=> b!59809 (= e!39314 e!39315)))

(declare-fun c!7710 () Bool)

(assert (=> b!59809 (= c!7710 (and ((_ is Cons!1449) lt!23901) (not (= (_1!1034 (h!2030 lt!23901)) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))))

(assert (= (and d!11563 c!7709) b!59808))

(assert (= (and d!11563 (not c!7709)) b!59809))

(assert (= (and b!59809 c!7710) b!59810))

(assert (= (and b!59809 (not c!7710)) b!59811))

(declare-fun m!51903 () Bool)

(assert (=> b!59810 m!51903))

(assert (=> d!11309 d!11563))

(declare-fun d!11565 () Bool)

(assert (=> d!11565 (= (getValueByKey!123 lt!23901 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) (Some!128 (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun lt!24346 () Unit!1553)

(assert (=> d!11565 (= lt!24346 (choose!319 lt!23901 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39316 () Bool)

(assert (=> d!11565 e!39316))

(declare-fun res!33157 () Bool)

(assert (=> d!11565 (=> (not res!33157) (not e!39316))))

(assert (=> d!11565 (= res!33157 (isStrictlySorted!279 lt!23901))))

(assert (=> d!11565 (= (lemmaContainsTupThenGetReturnValue!42 lt!23901 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) lt!24346)))

(declare-fun b!59812 () Bool)

(declare-fun res!33158 () Bool)

(assert (=> b!59812 (=> (not res!33158) (not e!39316))))

(assert (=> b!59812 (= res!33158 (containsKey!127 lt!23901 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!59813 () Bool)

(assert (=> b!59813 (= e!39316 (contains!694 lt!23901 (tuple2!2049 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11565 res!33157) b!59812))

(assert (= (and b!59812 res!33158) b!59813))

(assert (=> d!11565 m!50943))

(declare-fun m!51905 () Bool)

(assert (=> d!11565 m!51905))

(declare-fun m!51907 () Bool)

(assert (=> d!11565 m!51907))

(declare-fun m!51909 () Bool)

(assert (=> b!59812 m!51909))

(declare-fun m!51911 () Bool)

(assert (=> b!59813 m!51911))

(assert (=> d!11309 d!11565))

(declare-fun e!39320 () Bool)

(declare-fun lt!24347 () List!1453)

(declare-fun b!59814 () Bool)

(assert (=> b!59814 (= e!39320 (contains!694 lt!24347 (tuple2!2049 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(declare-fun b!59815 () Bool)

(declare-fun e!39318 () List!1453)

(declare-fun e!39317 () List!1453)

(assert (=> b!59815 (= e!39318 e!39317)))

(declare-fun c!7711 () Bool)

(assert (=> b!59815 (= c!7711 (and ((_ is Cons!1449) (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341)))) (= (_1!1034 (h!2030 (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341))))) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(declare-fun call!4506 () List!1453)

(declare-fun e!39319 () List!1453)

(declare-fun c!7714 () Bool)

(declare-fun bm!4501 () Bool)

(assert (=> bm!4501 (= call!4506 ($colon$colon!59 e!39319 (ite c!7714 (h!2030 (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341)))) (tuple2!2049 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))))

(declare-fun c!7713 () Bool)

(assert (=> bm!4501 (= c!7713 c!7714)))

(declare-fun d!11567 () Bool)

(assert (=> d!11567 e!39320))

(declare-fun res!33160 () Bool)

(assert (=> d!11567 (=> (not res!33160) (not e!39320))))

(assert (=> d!11567 (= res!33160 (isStrictlySorted!279 lt!24347))))

(assert (=> d!11567 (= lt!24347 e!39318)))

(assert (=> d!11567 (= c!7714 (and ((_ is Cons!1449) (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341)))) (bvslt (_1!1034 (h!2030 (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341))))) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (=> d!11567 (isStrictlySorted!279 (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341))))))

(assert (=> d!11567 (= (insertStrictlySorted!44 (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341))) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) lt!24347)))

(declare-fun b!59816 () Bool)

(declare-fun e!39321 () List!1453)

(declare-fun call!4504 () List!1453)

(assert (=> b!59816 (= e!39321 call!4504)))

(declare-fun b!59817 () Bool)

(assert (=> b!59817 (= e!39318 call!4506)))

(declare-fun bm!4502 () Bool)

(declare-fun call!4505 () List!1453)

(assert (=> bm!4502 (= call!4504 call!4505)))

(declare-fun c!7712 () Bool)

(declare-fun b!59818 () Bool)

(assert (=> b!59818 (= e!39319 (ite c!7711 (t!4799 (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341)))) (ite c!7712 (Cons!1449 (h!2030 (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341)))) (t!4799 (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341))))) Nil!1450)))))

(declare-fun b!59819 () Bool)

(assert (=> b!59819 (= e!39317 call!4505)))

(declare-fun b!59820 () Bool)

(declare-fun res!33159 () Bool)

(assert (=> b!59820 (=> (not res!33159) (not e!39320))))

(assert (=> b!59820 (= res!33159 (containsKey!127 lt!24347 (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!59821 () Bool)

(assert (=> b!59821 (= e!39321 call!4504)))

(declare-fun b!59822 () Bool)

(assert (=> b!59822 (= c!7712 (and ((_ is Cons!1449) (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341)))) (bvsgt (_1!1034 (h!2030 (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341))))) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (=> b!59822 (= e!39317 e!39321)))

(declare-fun b!59823 () Bool)

(assert (=> b!59823 (= e!39319 (insertStrictlySorted!44 (t!4799 (toList!704 (ite c!7487 call!4340 (ite c!7488 call!4339 call!4341)))) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (_2!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun bm!4503 () Bool)

(assert (=> bm!4503 (= call!4505 call!4506)))

(assert (= (and d!11567 c!7714) b!59817))

(assert (= (and d!11567 (not c!7714)) b!59815))

(assert (= (and b!59815 c!7711) b!59819))

(assert (= (and b!59815 (not c!7711)) b!59822))

(assert (= (and b!59822 c!7712) b!59821))

(assert (= (and b!59822 (not c!7712)) b!59816))

(assert (= (or b!59821 b!59816) bm!4502))

(assert (= (or b!59819 bm!4502) bm!4503))

(assert (= (or b!59817 bm!4503) bm!4501))

(assert (= (and bm!4501 c!7713) b!59823))

(assert (= (and bm!4501 (not c!7713)) b!59818))

(assert (= (and d!11567 res!33160) b!59820))

(assert (= (and b!59820 res!33159) b!59814))

(declare-fun m!51913 () Bool)

(assert (=> b!59823 m!51913))

(declare-fun m!51915 () Bool)

(assert (=> b!59814 m!51915))

(declare-fun m!51917 () Bool)

(assert (=> bm!4501 m!51917))

(declare-fun m!51919 () Bool)

(assert (=> b!59820 m!51919))

(declare-fun m!51921 () Bool)

(assert (=> d!11567 m!51921))

(declare-fun m!51923 () Bool)

(assert (=> d!11567 m!51923))

(assert (=> d!11309 d!11567))

(declare-fun d!11569 () Bool)

(assert (=> d!11569 (= (apply!66 lt!23865 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1083 (getValueByKey!123 (toList!704 lt!23865) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2581 () Bool)

(assert (= bs!2581 d!11569))

(declare-fun m!51925 () Bool)

(assert (=> bs!2581 m!51925))

(assert (=> bs!2581 m!51925))

(declare-fun m!51927 () Bool)

(assert (=> bs!2581 m!51927))

(assert (=> b!59164 d!11569))

(declare-fun d!11571 () Bool)

(assert (=> d!11571 (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739))))

(declare-fun lt!24348 () Unit!1553)

(assert (=> d!11571 (= lt!24348 (choose!313 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739))))

(declare-fun e!39322 () Bool)

(assert (=> d!11571 e!39322))

(declare-fun res!33161 () Bool)

(assert (=> d!11571 (=> (not res!33161) (not e!39322))))

(assert (=> d!11571 (= res!33161 (isStrictlySorted!279 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> d!11571 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739) lt!24348)))

(declare-fun b!59824 () Bool)

(assert (=> b!59824 (= e!39322 (containsKey!127 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739))))

(assert (= (and d!11571 res!33161) b!59824))

(assert (=> d!11571 m!51295))

(assert (=> d!11571 m!51295))

(assert (=> d!11571 m!51297))

(declare-fun m!51929 () Bool)

(assert (=> d!11571 m!51929))

(declare-fun m!51931 () Bool)

(assert (=> d!11571 m!51931))

(assert (=> b!59824 m!51291))

(assert (=> b!59470 d!11571))

(declare-fun d!11573 () Bool)

(assert (=> d!11573 (= (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739)) (not (isEmpty!298 (getValueByKey!123 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739))))))

(declare-fun bs!2582 () Bool)

(assert (= bs!2582 d!11573))

(assert (=> bs!2582 m!51295))

(declare-fun m!51933 () Bool)

(assert (=> bs!2582 m!51933))

(assert (=> b!59470 d!11573))

(declare-fun b!59828 () Bool)

(declare-fun e!39324 () Option!129)

(assert (=> b!59828 (= e!39324 None!127)))

(declare-fun d!11575 () Bool)

(declare-fun c!7715 () Bool)

(assert (=> d!11575 (= c!7715 (and ((_ is Cons!1449) (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))) (= (_1!1034 (h!2030 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))) lt!23739)))))

(declare-fun e!39323 () Option!129)

(assert (=> d!11575 (= (getValueByKey!123 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739) e!39323)))

(declare-fun b!59825 () Bool)

(assert (=> b!59825 (= e!39323 (Some!128 (_2!1034 (h!2030 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))))

(declare-fun b!59827 () Bool)

(assert (=> b!59827 (= e!39324 (getValueByKey!123 (t!4799 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))) lt!23739))))

(declare-fun b!59826 () Bool)

(assert (=> b!59826 (= e!39323 e!39324)))

(declare-fun c!7716 () Bool)

(assert (=> b!59826 (= c!7716 (and ((_ is Cons!1449) (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))) (not (= (_1!1034 (h!2030 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))) lt!23739))))))

(assert (= (and d!11575 c!7715) b!59825))

(assert (= (and d!11575 (not c!7715)) b!59826))

(assert (= (and b!59826 c!7716) b!59827))

(assert (= (and b!59826 (not c!7716)) b!59828))

(declare-fun m!51935 () Bool)

(assert (=> b!59827 m!51935))

(assert (=> b!59470 d!11575))

(declare-fun b!59829 () Bool)

(declare-fun e!39327 () Bool)

(declare-fun call!4507 () Bool)

(assert (=> b!59829 (= e!39327 call!4507)))

(declare-fun d!11577 () Bool)

(declare-fun res!33162 () Bool)

(declare-fun e!39325 () Bool)

(assert (=> d!11577 (=> res!33162 e!39325)))

(assert (=> d!11577 (= res!33162 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> d!11577 (= (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!7612 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451))) e!39325)))

(declare-fun b!59830 () Bool)

(declare-fun e!39326 () Bool)

(assert (=> b!59830 (= e!39326 (contains!693 (ite c!7612 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!59831 () Bool)

(declare-fun e!39328 () Bool)

(assert (=> b!59831 (= e!39325 e!39328)))

(declare-fun res!33164 () Bool)

(assert (=> b!59831 (=> (not res!33164) (not e!39328))))

(assert (=> b!59831 (= res!33164 (not e!39326))))

(declare-fun res!33163 () Bool)

(assert (=> b!59831 (=> (not res!33163) (not e!39326))))

(assert (=> b!59831 (= res!33163 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!59832 () Bool)

(assert (=> b!59832 (= e!39327 call!4507)))

(declare-fun bm!4504 () Bool)

(declare-fun c!7717 () Bool)

(assert (=> bm!4504 (= call!4507 (arrayNoDuplicates!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!7717 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!7612 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451))) (ite c!7612 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)) (ite c!7470 (Cons!1450 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) Nil!1451) Nil!1451)))))))

(declare-fun b!59833 () Bool)

(assert (=> b!59833 (= e!39328 e!39327)))

(assert (=> b!59833 (= c!7717 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!11577 (not res!33162)) b!59831))

(assert (= (and b!59831 res!33163) b!59830))

(assert (= (and b!59831 res!33164) b!59833))

(assert (= (and b!59833 c!7717) b!59829))

(assert (= (and b!59833 (not c!7717)) b!59832))

(assert (= (or b!59829 b!59832) bm!4504))

(declare-fun m!51937 () Bool)

(assert (=> b!59830 m!51937))

(assert (=> b!59830 m!51937))

(declare-fun m!51939 () Bool)

(assert (=> b!59830 m!51939))

(assert (=> b!59831 m!51937))

(assert (=> b!59831 m!51937))

(declare-fun m!51941 () Bool)

(assert (=> b!59831 m!51941))

(assert (=> bm!4504 m!51937))

(declare-fun m!51943 () Bool)

(assert (=> bm!4504 m!51943))

(assert (=> b!59833 m!51937))

(assert (=> b!59833 m!51937))

(assert (=> b!59833 m!51941))

(assert (=> bm!4457 d!11577))

(declare-fun b!59834 () Bool)

(declare-fun e!39334 () ListLongMap!1377)

(declare-fun e!39333 () ListLongMap!1377)

(assert (=> b!59834 (= e!39334 e!39333)))

(declare-fun c!7720 () Bool)

(assert (=> b!59834 (= c!7720 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!59835 () Bool)

(declare-fun e!39330 () Bool)

(declare-fun e!39335 () Bool)

(assert (=> b!59835 (= e!39330 e!39335)))

(declare-fun c!7719 () Bool)

(declare-fun e!39332 () Bool)

(assert (=> b!59835 (= c!7719 e!39332)))

(declare-fun res!33167 () Bool)

(assert (=> b!59835 (=> (not res!33167) (not e!39332))))

(assert (=> b!59835 (= res!33167 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun d!11579 () Bool)

(assert (=> d!11579 e!39330))

(declare-fun res!33166 () Bool)

(assert (=> d!11579 (=> (not res!33166) (not e!39330))))

(declare-fun lt!24351 () ListLongMap!1377)

(assert (=> d!11579 (= res!33166 (not (contains!692 lt!24351 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!11579 (= lt!24351 e!39334)))

(declare-fun c!7718 () Bool)

(assert (=> d!11579 (= c!7718 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11579 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11579 (= (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!24351)))

(declare-fun b!59836 () Bool)

(declare-fun res!33165 () Bool)

(assert (=> b!59836 (=> (not res!33165) (not e!39330))))

(assert (=> b!59836 (= res!33165 (not (contains!692 lt!24351 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!59837 () Bool)

(declare-fun lt!24350 () Unit!1553)

(declare-fun lt!24352 () Unit!1553)

(assert (=> b!59837 (= lt!24350 lt!24352)))

(declare-fun lt!24354 () (_ BitVec 64))

(declare-fun lt!24353 () V!2843)

(declare-fun lt!24355 () (_ BitVec 64))

(declare-fun lt!24349 () ListLongMap!1377)

(assert (=> b!59837 (not (contains!692 (+!81 lt!24349 (tuple2!2049 lt!24354 lt!24353)) lt!24355))))

(assert (=> b!59837 (= lt!24352 (addStillNotContains!17 lt!24349 lt!24354 lt!24353 lt!24355))))

(assert (=> b!59837 (= lt!24355 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!59837 (= lt!24353 (get!1080 (select (arr!1781 (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!59837 (= lt!24354 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!4508 () ListLongMap!1377)

(assert (=> b!59837 (= lt!24349 call!4508)))

(assert (=> b!59837 (= e!39333 (+!81 call!4508 (tuple2!2049 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) (get!1080 (select (arr!1781 (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!59838 () Bool)

(assert (=> b!59838 (= e!39333 call!4508)))

(declare-fun b!59839 () Bool)

(declare-fun e!39329 () Bool)

(assert (=> b!59839 (= e!39329 (isEmpty!299 lt!24351))))

(declare-fun bm!4505 () Bool)

(assert (=> bm!4505 (= call!4508 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2043 newMap!16)))))

(declare-fun b!59840 () Bool)

(assert (=> b!59840 (= e!39334 (ListLongMap!1378 Nil!1450))))

(declare-fun b!59841 () Bool)

(assert (=> b!59841 (= e!39329 (= lt!24351 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2043 newMap!16))))))

(declare-fun b!59842 () Bool)

(assert (=> b!59842 (= e!39332 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!59842 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!59843 () Bool)

(assert (=> b!59843 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (=> b!59843 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))))))))

(declare-fun e!39331 () Bool)

(assert (=> b!59843 (= e!39331 (= (apply!66 lt!24351 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 (ite c!7529 (_values!2026 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!59844 () Bool)

(assert (=> b!59844 (= e!39335 e!39329)))

(declare-fun c!7721 () Bool)

(assert (=> b!59844 (= c!7721 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59845 () Bool)

(assert (=> b!59845 (= e!39335 e!39331)))

(assert (=> b!59845 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun res!33168 () Bool)

(assert (=> b!59845 (= res!33168 (contains!692 lt!24351 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!59845 (=> (not res!33168) (not e!39331))))

(assert (= (and d!11579 c!7718) b!59840))

(assert (= (and d!11579 (not c!7718)) b!59834))

(assert (= (and b!59834 c!7720) b!59837))

(assert (= (and b!59834 (not c!7720)) b!59838))

(assert (= (or b!59837 b!59838) bm!4505))

(assert (= (and d!11579 res!33166) b!59836))

(assert (= (and b!59836 res!33165) b!59835))

(assert (= (and b!59835 res!33167) b!59842))

(assert (= (and b!59835 c!7719) b!59845))

(assert (= (and b!59835 (not c!7719)) b!59844))

(assert (= (and b!59845 res!33168) b!59843))

(assert (= (and b!59844 c!7721) b!59841))

(assert (= (and b!59844 (not c!7721)) b!59839))

(declare-fun b_lambda!2641 () Bool)

(assert (=> (not b_lambda!2641) (not b!59837)))

(assert (=> b!59837 t!4806))

(declare-fun b_and!3621 () Bool)

(assert (= b_and!3617 (and (=> t!4806 result!2389) b_and!3621)))

(assert (=> b!59837 t!4808))

(declare-fun b_and!3623 () Bool)

(assert (= b_and!3619 (and (=> t!4808 result!2391) b_and!3623)))

(declare-fun b_lambda!2643 () Bool)

(assert (=> (not b_lambda!2643) (not b!59843)))

(assert (=> b!59843 t!4806))

(declare-fun b_and!3625 () Bool)

(assert (= b_and!3621 (and (=> t!4806 result!2389) b_and!3625)))

(assert (=> b!59843 t!4808))

(declare-fun b_and!3627 () Bool)

(assert (= b_and!3623 (and (=> t!4808 result!2391) b_and!3627)))

(declare-fun m!51945 () Bool)

(assert (=> d!11579 m!51945))

(assert (=> d!11579 m!50833))

(assert (=> b!59842 m!50843))

(assert (=> b!59842 m!50843))

(assert (=> b!59842 m!50853))

(declare-fun m!51947 () Bool)

(assert (=> b!59839 m!51947))

(assert (=> b!59845 m!50843))

(assert (=> b!59845 m!50843))

(declare-fun m!51949 () Bool)

(assert (=> b!59845 m!51949))

(declare-fun m!51951 () Bool)

(assert (=> b!59841 m!51951))

(declare-fun m!51953 () Bool)

(assert (=> b!59836 m!51953))

(assert (=> b!59843 m!51161))

(assert (=> b!59843 m!50849))

(assert (=> b!59843 m!51163))

(assert (=> b!59843 m!51161))

(assert (=> b!59843 m!50849))

(assert (=> b!59843 m!50843))

(assert (=> b!59843 m!50843))

(declare-fun m!51955 () Bool)

(assert (=> b!59843 m!51955))

(assert (=> b!59837 m!51161))

(assert (=> b!59837 m!50849))

(assert (=> b!59837 m!51163))

(assert (=> b!59837 m!51161))

(assert (=> b!59837 m!50849))

(declare-fun m!51957 () Bool)

(assert (=> b!59837 m!51957))

(declare-fun m!51959 () Bool)

(assert (=> b!59837 m!51959))

(declare-fun m!51961 () Bool)

(assert (=> b!59837 m!51961))

(assert (=> b!59837 m!50843))

(declare-fun m!51963 () Bool)

(assert (=> b!59837 m!51963))

(assert (=> b!59837 m!51957))

(assert (=> bm!4505 m!51951))

(assert (=> b!59834 m!50843))

(assert (=> b!59834 m!50843))

(assert (=> b!59834 m!50853))

(assert (=> bm!4455 d!11579))

(declare-fun d!11581 () Bool)

(assert (=> d!11581 (= (apply!66 lt!23914 lt!23920) (get!1083 (getValueByKey!123 (toList!704 lt!23914) lt!23920)))))

(declare-fun bs!2583 () Bool)

(assert (= bs!2583 d!11581))

(declare-fun m!51965 () Bool)

(assert (=> bs!2583 m!51965))

(assert (=> bs!2583 m!51965))

(declare-fun m!51967 () Bool)

(assert (=> bs!2583 m!51967))

(assert (=> b!59230 d!11581))

(declare-fun d!11583 () Bool)

(declare-fun e!39336 () Bool)

(assert (=> d!11583 e!39336))

(declare-fun res!33170 () Bool)

(assert (=> d!11583 (=> (not res!33170) (not e!39336))))

(declare-fun lt!24359 () ListLongMap!1377)

(assert (=> d!11583 (= res!33170 (contains!692 lt!24359 (_1!1034 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))))))

(declare-fun lt!24356 () List!1453)

(assert (=> d!11583 (= lt!24359 (ListLongMap!1378 lt!24356))))

(declare-fun lt!24358 () Unit!1553)

(declare-fun lt!24357 () Unit!1553)

(assert (=> d!11583 (= lt!24358 lt!24357)))

(assert (=> d!11583 (= (getValueByKey!123 lt!24356 (_1!1034 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))) (Some!128 (_2!1034 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))))))

(assert (=> d!11583 (= lt!24357 (lemmaContainsTupThenGetReturnValue!42 lt!24356 (_1!1034 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) (_2!1034 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))))))

(assert (=> d!11583 (= lt!24356 (insertStrictlySorted!44 (toList!704 lt!23927) (_1!1034 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) (_2!1034 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))))))

(assert (=> d!11583 (= (+!81 lt!23927 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) lt!24359)))

(declare-fun b!59846 () Bool)

(declare-fun res!33169 () Bool)

(assert (=> b!59846 (=> (not res!33169) (not e!39336))))

(assert (=> b!59846 (= res!33169 (= (getValueByKey!123 (toList!704 lt!24359) (_1!1034 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))) (Some!128 (_2!1034 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))))))))

(declare-fun b!59847 () Bool)

(assert (=> b!59847 (= e!39336 (contains!694 (toList!704 lt!24359) (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))))))

(assert (= (and d!11583 res!33170) b!59846))

(assert (= (and b!59846 res!33169) b!59847))

(declare-fun m!51969 () Bool)

(assert (=> d!11583 m!51969))

(declare-fun m!51971 () Bool)

(assert (=> d!11583 m!51971))

(declare-fun m!51973 () Bool)

(assert (=> d!11583 m!51973))

(declare-fun m!51975 () Bool)

(assert (=> d!11583 m!51975))

(declare-fun m!51977 () Bool)

(assert (=> b!59846 m!51977))

(declare-fun m!51979 () Bool)

(assert (=> b!59847 m!51979))

(assert (=> b!59230 d!11583))

(declare-fun d!11585 () Bool)

(assert (=> d!11585 (= (apply!66 lt!23916 lt!23919) (get!1083 (getValueByKey!123 (toList!704 lt!23916) lt!23919)))))

(declare-fun bs!2584 () Bool)

(assert (= bs!2584 d!11585))

(declare-fun m!51981 () Bool)

(assert (=> bs!2584 m!51981))

(assert (=> bs!2584 m!51981))

(declare-fun m!51983 () Bool)

(assert (=> bs!2584 m!51983))

(assert (=> b!59230 d!11585))

(declare-fun d!11587 () Bool)

(declare-fun e!39337 () Bool)

(assert (=> d!11587 e!39337))

(declare-fun res!33172 () Bool)

(assert (=> d!11587 (=> (not res!33172) (not e!39337))))

(declare-fun lt!24363 () ListLongMap!1377)

(assert (=> d!11587 (= res!33172 (contains!692 lt!24363 (_1!1034 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(declare-fun lt!24360 () List!1453)

(assert (=> d!11587 (= lt!24363 (ListLongMap!1378 lt!24360))))

(declare-fun lt!24362 () Unit!1553)

(declare-fun lt!24361 () Unit!1553)

(assert (=> d!11587 (= lt!24362 lt!24361)))

(assert (=> d!11587 (= (getValueByKey!123 lt!24360 (_1!1034 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))) (Some!128 (_2!1034 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(assert (=> d!11587 (= lt!24361 (lemmaContainsTupThenGetReturnValue!42 lt!24360 (_1!1034 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) (_2!1034 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(assert (=> d!11587 (= lt!24360 (insertStrictlySorted!44 (toList!704 lt!23916) (_1!1034 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) (_2!1034 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(assert (=> d!11587 (= (+!81 lt!23916 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) lt!24363)))

(declare-fun b!59848 () Bool)

(declare-fun res!33171 () Bool)

(assert (=> b!59848 (=> (not res!33171) (not e!39337))))

(assert (=> b!59848 (= res!33171 (= (getValueByKey!123 (toList!704 lt!24363) (_1!1034 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))) (Some!128 (_2!1034 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))))))

(declare-fun b!59849 () Bool)

(assert (=> b!59849 (= e!39337 (contains!694 (toList!704 lt!24363) (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))))

(assert (= (and d!11587 res!33172) b!59848))

(assert (= (and b!59848 res!33171) b!59849))

(declare-fun m!51985 () Bool)

(assert (=> d!11587 m!51985))

(declare-fun m!51987 () Bool)

(assert (=> d!11587 m!51987))

(declare-fun m!51989 () Bool)

(assert (=> d!11587 m!51989))

(declare-fun m!51991 () Bool)

(assert (=> d!11587 m!51991))

(declare-fun m!51993 () Bool)

(assert (=> b!59848 m!51993))

(declare-fun m!51995 () Bool)

(assert (=> b!59849 m!51995))

(assert (=> b!59230 d!11587))

(declare-fun d!11589 () Bool)

(declare-fun e!39338 () Bool)

(assert (=> d!11589 e!39338))

(declare-fun res!33174 () Bool)

(assert (=> d!11589 (=> (not res!33174) (not e!39338))))

(declare-fun lt!24367 () ListLongMap!1377)

(assert (=> d!11589 (= res!33174 (contains!692 lt!24367 (_1!1034 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))))))

(declare-fun lt!24364 () List!1453)

(assert (=> d!11589 (= lt!24367 (ListLongMap!1378 lt!24364))))

(declare-fun lt!24366 () Unit!1553)

(declare-fun lt!24365 () Unit!1553)

(assert (=> d!11589 (= lt!24366 lt!24365)))

(assert (=> d!11589 (= (getValueByKey!123 lt!24364 (_1!1034 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))) (Some!128 (_2!1034 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))))))

(assert (=> d!11589 (= lt!24365 (lemmaContainsTupThenGetReturnValue!42 lt!24364 (_1!1034 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) (_2!1034 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))))))

(assert (=> d!11589 (= lt!24364 (insertStrictlySorted!44 (toList!704 lt!23914) (_1!1034 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) (_2!1034 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))))))

(assert (=> d!11589 (= (+!81 lt!23914 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) lt!24367)))

(declare-fun b!59850 () Bool)

(declare-fun res!33173 () Bool)

(assert (=> b!59850 (=> (not res!33173) (not e!39338))))

(assert (=> b!59850 (= res!33173 (= (getValueByKey!123 (toList!704 lt!24367) (_1!1034 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))) (Some!128 (_2!1034 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))))))))

(declare-fun b!59851 () Bool)

(assert (=> b!59851 (= e!39338 (contains!694 (toList!704 lt!24367) (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))))))

(assert (= (and d!11589 res!33174) b!59850))

(assert (= (and b!59850 res!33173) b!59851))

(declare-fun m!51997 () Bool)

(assert (=> d!11589 m!51997))

(declare-fun m!51999 () Bool)

(assert (=> d!11589 m!51999))

(declare-fun m!52001 () Bool)

(assert (=> d!11589 m!52001))

(declare-fun m!52003 () Bool)

(assert (=> d!11589 m!52003))

(declare-fun m!52005 () Bool)

(assert (=> b!59850 m!52005))

(declare-fun m!52007 () Bool)

(assert (=> b!59851 m!52007))

(assert (=> b!59230 d!11589))

(declare-fun d!11591 () Bool)

(assert (=> d!11591 (contains!692 (+!81 lt!23927 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) lt!23909)))

(declare-fun lt!24368 () Unit!1553)

(assert (=> d!11591 (= lt!24368 (choose!318 lt!23927 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) lt!23909))))

(assert (=> d!11591 (contains!692 lt!23927 lt!23909)))

(assert (=> d!11591 (= (addStillContains!42 lt!23927 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) lt!23909) lt!24368)))

(declare-fun bs!2585 () Bool)

(assert (= bs!2585 d!11591))

(assert (=> bs!2585 m!50997))

(assert (=> bs!2585 m!50997))

(assert (=> bs!2585 m!50999))

(declare-fun m!52009 () Bool)

(assert (=> bs!2585 m!52009))

(declare-fun m!52011 () Bool)

(assert (=> bs!2585 m!52011))

(assert (=> b!59230 d!11591))

(declare-fun d!11593 () Bool)

(assert (=> d!11593 (= (apply!66 lt!23924 lt!23915) (get!1083 (getValueByKey!123 (toList!704 lt!23924) lt!23915)))))

(declare-fun bs!2586 () Bool)

(assert (= bs!2586 d!11593))

(declare-fun m!52013 () Bool)

(assert (=> bs!2586 m!52013))

(assert (=> bs!2586 m!52013))

(declare-fun m!52015 () Bool)

(assert (=> bs!2586 m!52015))

(assert (=> b!59230 d!11593))

(declare-fun d!11595 () Bool)

(declare-fun e!39339 () Bool)

(assert (=> d!11595 e!39339))

(declare-fun res!33175 () Bool)

(assert (=> d!11595 (=> res!33175 e!39339)))

(declare-fun lt!24369 () Bool)

(assert (=> d!11595 (= res!33175 (not lt!24369))))

(declare-fun lt!24372 () Bool)

(assert (=> d!11595 (= lt!24369 lt!24372)))

(declare-fun lt!24371 () Unit!1553)

(declare-fun e!39340 () Unit!1553)

(assert (=> d!11595 (= lt!24371 e!39340)))

(declare-fun c!7722 () Bool)

(assert (=> d!11595 (= c!7722 lt!24372)))

(assert (=> d!11595 (= lt!24372 (containsKey!127 (toList!704 (+!81 lt!23927 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))) lt!23909))))

(assert (=> d!11595 (= (contains!692 (+!81 lt!23927 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) lt!23909) lt!24369)))

(declare-fun b!59852 () Bool)

(declare-fun lt!24370 () Unit!1553)

(assert (=> b!59852 (= e!39340 lt!24370)))

(assert (=> b!59852 (= lt!24370 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 (+!81 lt!23927 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))) lt!23909))))

(assert (=> b!59852 (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!23927 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))) lt!23909))))

(declare-fun b!59853 () Bool)

(declare-fun Unit!1590 () Unit!1553)

(assert (=> b!59853 (= e!39340 Unit!1590)))

(declare-fun b!59854 () Bool)

(assert (=> b!59854 (= e!39339 (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!23927 (tuple2!2049 lt!23926 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))) lt!23909)))))

(assert (= (and d!11595 c!7722) b!59852))

(assert (= (and d!11595 (not c!7722)) b!59853))

(assert (= (and d!11595 (not res!33175)) b!59854))

(declare-fun m!52017 () Bool)

(assert (=> d!11595 m!52017))

(declare-fun m!52019 () Bool)

(assert (=> b!59852 m!52019))

(declare-fun m!52021 () Bool)

(assert (=> b!59852 m!52021))

(assert (=> b!59852 m!52021))

(declare-fun m!52023 () Bool)

(assert (=> b!59852 m!52023))

(assert (=> b!59854 m!52021))

(assert (=> b!59854 m!52021))

(assert (=> b!59854 m!52023))

(assert (=> b!59230 d!11595))

(declare-fun d!11597 () Bool)

(assert (=> d!11597 (= (apply!66 (+!81 lt!23924 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) lt!23915) (apply!66 lt!23924 lt!23915))))

(declare-fun lt!24373 () Unit!1553)

(assert (=> d!11597 (= lt!24373 (choose!317 lt!23924 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) lt!23915))))

(declare-fun e!39341 () Bool)

(assert (=> d!11597 e!39341))

(declare-fun res!33176 () Bool)

(assert (=> d!11597 (=> (not res!33176) (not e!39341))))

(assert (=> d!11597 (= res!33176 (contains!692 lt!23924 lt!23915))))

(assert (=> d!11597 (= (addApplyDifferent!42 lt!23924 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) lt!23915) lt!24373)))

(declare-fun b!59855 () Bool)

(assert (=> b!59855 (= e!39341 (not (= lt!23915 lt!23911)))))

(assert (= (and d!11597 res!33176) b!59855))

(declare-fun m!52025 () Bool)

(assert (=> d!11597 m!52025))

(assert (=> d!11597 m!50977))

(assert (=> d!11597 m!50977))

(assert (=> d!11597 m!50983))

(assert (=> d!11597 m!50987))

(declare-fun m!52027 () Bool)

(assert (=> d!11597 m!52027))

(assert (=> b!59230 d!11597))

(declare-fun d!11599 () Bool)

(declare-fun e!39342 () Bool)

(assert (=> d!11599 e!39342))

(declare-fun res!33178 () Bool)

(assert (=> d!11599 (=> (not res!33178) (not e!39342))))

(declare-fun lt!24377 () ListLongMap!1377)

(assert (=> d!11599 (= res!33178 (contains!692 lt!24377 (_1!1034 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(declare-fun lt!24374 () List!1453)

(assert (=> d!11599 (= lt!24377 (ListLongMap!1378 lt!24374))))

(declare-fun lt!24376 () Unit!1553)

(declare-fun lt!24375 () Unit!1553)

(assert (=> d!11599 (= lt!24376 lt!24375)))

(assert (=> d!11599 (= (getValueByKey!123 lt!24374 (_1!1034 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))) (Some!128 (_2!1034 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(assert (=> d!11599 (= lt!24375 (lemmaContainsTupThenGetReturnValue!42 lt!24374 (_1!1034 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) (_2!1034 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(assert (=> d!11599 (= lt!24374 (insertStrictlySorted!44 (toList!704 lt!23924) (_1!1034 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) (_2!1034 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(assert (=> d!11599 (= (+!81 lt!23924 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) lt!24377)))

(declare-fun b!59856 () Bool)

(declare-fun res!33177 () Bool)

(assert (=> b!59856 (=> (not res!33177) (not e!39342))))

(assert (=> b!59856 (= res!33177 (= (getValueByKey!123 (toList!704 lt!24377) (_1!1034 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))) (Some!128 (_2!1034 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))))))

(declare-fun b!59857 () Bool)

(assert (=> b!59857 (= e!39342 (contains!694 (toList!704 lt!24377) (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))))

(assert (= (and d!11599 res!33178) b!59856))

(assert (= (and b!59856 res!33177) b!59857))

(declare-fun m!52029 () Bool)

(assert (=> d!11599 m!52029))

(declare-fun m!52031 () Bool)

(assert (=> d!11599 m!52031))

(declare-fun m!52033 () Bool)

(assert (=> d!11599 m!52033))

(declare-fun m!52035 () Bool)

(assert (=> d!11599 m!52035))

(declare-fun m!52037 () Bool)

(assert (=> b!59856 m!52037))

(declare-fun m!52039 () Bool)

(assert (=> b!59857 m!52039))

(assert (=> b!59230 d!11599))

(declare-fun d!11601 () Bool)

(assert (=> d!11601 (= (apply!66 (+!81 lt!23914 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) lt!23920) (apply!66 lt!23914 lt!23920))))

(declare-fun lt!24378 () Unit!1553)

(assert (=> d!11601 (= lt!24378 (choose!317 lt!23914 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) lt!23920))))

(declare-fun e!39343 () Bool)

(assert (=> d!11601 e!39343))

(declare-fun res!33179 () Bool)

(assert (=> d!11601 (=> (not res!33179) (not e!39343))))

(assert (=> d!11601 (= res!33179 (contains!692 lt!23914 lt!23920))))

(assert (=> d!11601 (= (addApplyDifferent!42 lt!23914 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)) lt!23920) lt!24378)))

(declare-fun b!59858 () Bool)

(assert (=> b!59858 (= e!39343 (not (= lt!23920 lt!23925)))))

(assert (= (and d!11601 res!33179) b!59858))

(declare-fun m!52041 () Bool)

(assert (=> d!11601 m!52041))

(assert (=> d!11601 m!50991))

(assert (=> d!11601 m!50991))

(assert (=> d!11601 m!51001))

(assert (=> d!11601 m!50985))

(declare-fun m!52043 () Bool)

(assert (=> d!11601 m!52043))

(assert (=> b!59230 d!11601))

(declare-fun d!11603 () Bool)

(assert (=> d!11603 (= (apply!66 (+!81 lt!23924 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) lt!23915) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23924 (tuple2!2049 lt!23911 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))) lt!23915)))))

(declare-fun bs!2587 () Bool)

(assert (= bs!2587 d!11603))

(declare-fun m!52045 () Bool)

(assert (=> bs!2587 m!52045))

(assert (=> bs!2587 m!52045))

(declare-fun m!52047 () Bool)

(assert (=> bs!2587 m!52047))

(assert (=> b!59230 d!11603))

(assert (=> b!59230 d!11499))

(declare-fun d!11605 () Bool)

(assert (=> d!11605 (= (apply!66 (+!81 lt!23916 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) lt!23919) (apply!66 lt!23916 lt!23919))))

(declare-fun lt!24379 () Unit!1553)

(assert (=> d!11605 (= lt!24379 (choose!317 lt!23916 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) lt!23919))))

(declare-fun e!39344 () Bool)

(assert (=> d!11605 e!39344))

(declare-fun res!33180 () Bool)

(assert (=> d!11605 (=> (not res!33180) (not e!39344))))

(assert (=> d!11605 (= res!33180 (contains!692 lt!23916 lt!23919))))

(assert (=> d!11605 (= (addApplyDifferent!42 lt!23916 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)) lt!23919) lt!24379)))

(declare-fun b!59859 () Bool)

(assert (=> b!59859 (= e!39344 (not (= lt!23919 lt!23921)))))

(assert (= (and d!11605 res!33180) b!59859))

(declare-fun m!52049 () Bool)

(assert (=> d!11605 m!52049))

(assert (=> d!11605 m!50971))

(assert (=> d!11605 m!50971))

(assert (=> d!11605 m!50973))

(assert (=> d!11605 m!50993))

(declare-fun m!52051 () Bool)

(assert (=> d!11605 m!52051))

(assert (=> b!59230 d!11605))

(declare-fun d!11607 () Bool)

(assert (=> d!11607 (= (apply!66 (+!81 lt!23914 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16)))) lt!23920) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23914 (tuple2!2049 lt!23925 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))))) lt!23920)))))

(declare-fun bs!2588 () Bool)

(assert (= bs!2588 d!11607))

(declare-fun m!52053 () Bool)

(assert (=> bs!2588 m!52053))

(assert (=> bs!2588 m!52053))

(declare-fun m!52055 () Bool)

(assert (=> bs!2588 m!52055))

(assert (=> b!59230 d!11607))

(declare-fun d!11609 () Bool)

(assert (=> d!11609 (= (apply!66 (+!81 lt!23916 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) lt!23919) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23916 (tuple2!2049 lt!23921 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))) lt!23919)))))

(declare-fun bs!2589 () Bool)

(assert (= bs!2589 d!11609))

(declare-fun m!52057 () Bool)

(assert (=> bs!2589 m!52057))

(assert (=> bs!2589 m!52057))

(declare-fun m!52059 () Bool)

(assert (=> bs!2589 m!52059))

(assert (=> b!59230 d!11609))

(declare-fun d!11611 () Bool)

(declare-fun e!39345 () Bool)

(assert (=> d!11611 e!39345))

(declare-fun res!33182 () Bool)

(assert (=> d!11611 (=> (not res!33182) (not e!39345))))

(declare-fun lt!24383 () ListLongMap!1377)

(assert (=> d!11611 (= res!33182 (contains!692 lt!24383 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!24380 () List!1453)

(assert (=> d!11611 (= lt!24383 (ListLongMap!1378 lt!24380))))

(declare-fun lt!24382 () Unit!1553)

(declare-fun lt!24381 () Unit!1553)

(assert (=> d!11611 (= lt!24382 lt!24381)))

(assert (=> d!11611 (= (getValueByKey!123 lt!24380 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11611 (= lt!24381 (lemmaContainsTupThenGetReturnValue!42 lt!24380 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11611 (= lt!24380 (insertStrictlySorted!44 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11611 (= (+!81 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!24383)))

(declare-fun b!59860 () Bool)

(declare-fun res!33181 () Bool)

(assert (=> b!59860 (=> (not res!33181) (not e!39345))))

(assert (=> b!59860 (= res!33181 (= (getValueByKey!123 (toList!704 lt!24383) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!59861 () Bool)

(assert (=> b!59861 (= e!39345 (contains!694 (toList!704 lt!24383) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!11611 res!33182) b!59860))

(assert (= (and b!59860 res!33181) b!59861))

(declare-fun m!52061 () Bool)

(assert (=> d!11611 m!52061))

(declare-fun m!52063 () Bool)

(assert (=> d!11611 m!52063))

(declare-fun m!52065 () Bool)

(assert (=> d!11611 m!52065))

(declare-fun m!52067 () Bool)

(assert (=> d!11611 m!52067))

(declare-fun m!52069 () Bool)

(assert (=> b!59860 m!52069))

(declare-fun m!52071 () Bool)

(assert (=> b!59861 m!52071))

(assert (=> d!11327 d!11611))

(assert (=> d!11327 d!11289))

(assert (=> d!11327 d!11417))

(declare-fun bm!4506 () Bool)

(declare-fun call!4509 () ListLongMap!1377)

(declare-fun call!4511 () ListLongMap!1377)

(assert (=> bm!4506 (= call!4509 call!4511)))

(declare-fun d!11613 () Bool)

(declare-fun e!39347 () Bool)

(assert (=> d!11613 e!39347))

(declare-fun res!33190 () Bool)

(assert (=> d!11613 (=> (not res!33190) (not e!39347))))

(assert (=> d!11613 (= res!33190 (or (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))))

(declare-fun lt!24388 () ListLongMap!1377)

(declare-fun lt!24404 () ListLongMap!1377)

(assert (=> d!11613 (= lt!24388 lt!24404)))

(declare-fun lt!24393 () Unit!1553)

(declare-fun e!39355 () Unit!1553)

(assert (=> d!11613 (= lt!24393 e!39355)))

(declare-fun c!7724 () Bool)

(declare-fun e!39354 () Bool)

(assert (=> d!11613 (= c!7724 e!39354)))

(declare-fun res!33187 () Bool)

(assert (=> d!11613 (=> (not res!33187) (not e!39354))))

(assert (=> d!11613 (= res!33187 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun e!39358 () ListLongMap!1377)

(assert (=> d!11613 (= lt!24404 e!39358)))

(declare-fun c!7727 () Bool)

(assert (=> d!11613 (= c!7727 (and (not (= (bvand lt!23841 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!23841 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11613 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11613 (= (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!24388)))

(declare-fun b!59862 () Bool)

(declare-fun e!39348 () Bool)

(declare-fun call!4510 () Bool)

(assert (=> b!59862 (= e!39348 (not call!4510))))

(declare-fun b!59863 () Bool)

(assert (=> b!59863 (= e!39358 (+!81 call!4511 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!59864 () Bool)

(declare-fun e!39349 () Bool)

(assert (=> b!59864 (= e!39348 e!39349)))

(declare-fun res!33184 () Bool)

(assert (=> b!59864 (= res!33184 call!4510)))

(assert (=> b!59864 (=> (not res!33184) (not e!39349))))

(declare-fun b!59865 () Bool)

(declare-fun e!39346 () Bool)

(assert (=> b!59865 (= e!39346 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4507 () Bool)

(declare-fun call!4515 () ListLongMap!1377)

(declare-fun call!4513 () ListLongMap!1377)

(assert (=> bm!4507 (= call!4515 call!4513)))

(declare-fun b!59866 () Bool)

(declare-fun e!39350 () ListLongMap!1377)

(assert (=> b!59866 (= e!39350 call!4515)))

(declare-fun bm!4508 () Bool)

(assert (=> bm!4508 (= call!4510 (contains!692 lt!24388 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59867 () Bool)

(declare-fun Unit!1591 () Unit!1553)

(assert (=> b!59867 (= e!39355 Unit!1591)))

(declare-fun bm!4509 () Bool)

(declare-fun call!4512 () Bool)

(assert (=> bm!4509 (= call!4512 (contains!692 lt!24388 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59868 () Bool)

(declare-fun e!39352 () Bool)

(assert (=> b!59868 (= e!39352 (not call!4512))))

(declare-fun b!59869 () Bool)

(declare-fun e!39351 () Bool)

(assert (=> b!59869 (= e!39351 (= (apply!66 lt!24388 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1959 newMap!16)))))

(declare-fun bm!4510 () Bool)

(declare-fun call!4514 () ListLongMap!1377)

(assert (=> bm!4510 (= call!4513 call!4514)))

(declare-fun b!59870 () Bool)

(declare-fun res!33185 () Bool)

(assert (=> b!59870 (=> (not res!33185) (not e!39347))))

(assert (=> b!59870 (= res!33185 e!39352)))

(declare-fun c!7723 () Bool)

(assert (=> b!59870 (= c!7723 (not (= (bvand lt!23841 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!59871 () Bool)

(declare-fun e!39356 () Bool)

(declare-fun e!39353 () Bool)

(assert (=> b!59871 (= e!39356 e!39353)))

(declare-fun res!33183 () Bool)

(assert (=> b!59871 (=> (not res!33183) (not e!39353))))

(assert (=> b!59871 (= res!33183 (contains!692 lt!24388 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!59871 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59872 () Bool)

(assert (=> b!59872 (= e!39350 call!4509)))

(declare-fun b!59873 () Bool)

(assert (=> b!59873 (= e!39354 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4511 () Bool)

(assert (=> bm!4511 (= call!4514 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun b!59874 () Bool)

(declare-fun res!33186 () Bool)

(assert (=> b!59874 (=> (not res!33186) (not e!39347))))

(assert (=> b!59874 (= res!33186 e!39356)))

(declare-fun res!33188 () Bool)

(assert (=> b!59874 (=> res!33188 e!39356)))

(assert (=> b!59874 (= res!33188 (not e!39346))))

(declare-fun res!33189 () Bool)

(assert (=> b!59874 (=> (not res!33189) (not e!39346))))

(assert (=> b!59874 (= res!33189 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59875 () Bool)

(assert (=> b!59875 (= e!39349 (= (apply!66 lt!24388 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!59876 () Bool)

(assert (=> b!59876 (= e!39347 e!39348)))

(declare-fun c!7726 () Bool)

(assert (=> b!59876 (= c!7726 (not (= (bvand lt!23841 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59877 () Bool)

(declare-fun c!7725 () Bool)

(assert (=> b!59877 (= c!7725 (and (not (= (bvand lt!23841 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!23841 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!39357 () ListLongMap!1377)

(assert (=> b!59877 (= e!39357 e!39350)))

(declare-fun b!59878 () Bool)

(assert (=> b!59878 (= e!39352 e!39351)))

(declare-fun res!33191 () Bool)

(assert (=> b!59878 (= res!33191 call!4512)))

(assert (=> b!59878 (=> (not res!33191) (not e!39351))))

(declare-fun bm!4512 () Bool)

(declare-fun c!7728 () Bool)

(assert (=> bm!4512 (= call!4511 (+!81 (ite c!7727 call!4514 (ite c!7728 call!4513 call!4515)) (ite (or c!7727 c!7728) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!59879 () Bool)

(declare-fun lt!24397 () Unit!1553)

(assert (=> b!59879 (= e!39355 lt!24397)))

(declare-fun lt!24402 () ListLongMap!1377)

(assert (=> b!59879 (= lt!24402 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24401 () (_ BitVec 64))

(assert (=> b!59879 (= lt!24401 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24384 () (_ BitVec 64))

(assert (=> b!59879 (= lt!24384 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24398 () Unit!1553)

(assert (=> b!59879 (= lt!24398 (addStillContains!42 lt!24402 lt!24401 (zeroValue!1959 newMap!16) lt!24384))))

(assert (=> b!59879 (contains!692 (+!81 lt!24402 (tuple2!2049 lt!24401 (zeroValue!1959 newMap!16))) lt!24384)))

(declare-fun lt!24385 () Unit!1553)

(assert (=> b!59879 (= lt!24385 lt!24398)))

(declare-fun lt!24399 () ListLongMap!1377)

(assert (=> b!59879 (= lt!24399 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24386 () (_ BitVec 64))

(assert (=> b!59879 (= lt!24386 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24390 () (_ BitVec 64))

(assert (=> b!59879 (= lt!24390 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24392 () Unit!1553)

(assert (=> b!59879 (= lt!24392 (addApplyDifferent!42 lt!24399 lt!24386 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!24390))))

(assert (=> b!59879 (= (apply!66 (+!81 lt!24399 (tuple2!2049 lt!24386 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!24390) (apply!66 lt!24399 lt!24390))))

(declare-fun lt!24405 () Unit!1553)

(assert (=> b!59879 (= lt!24405 lt!24392)))

(declare-fun lt!24389 () ListLongMap!1377)

(assert (=> b!59879 (= lt!24389 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24400 () (_ BitVec 64))

(assert (=> b!59879 (= lt!24400 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24395 () (_ BitVec 64))

(assert (=> b!59879 (= lt!24395 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24403 () Unit!1553)

(assert (=> b!59879 (= lt!24403 (addApplyDifferent!42 lt!24389 lt!24400 (zeroValue!1959 newMap!16) lt!24395))))

(assert (=> b!59879 (= (apply!66 (+!81 lt!24389 (tuple2!2049 lt!24400 (zeroValue!1959 newMap!16))) lt!24395) (apply!66 lt!24389 lt!24395))))

(declare-fun lt!24387 () Unit!1553)

(assert (=> b!59879 (= lt!24387 lt!24403)))

(declare-fun lt!24391 () ListLongMap!1377)

(assert (=> b!59879 (= lt!24391 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24396 () (_ BitVec 64))

(assert (=> b!59879 (= lt!24396 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24394 () (_ BitVec 64))

(assert (=> b!59879 (= lt!24394 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!59879 (= lt!24397 (addApplyDifferent!42 lt!24391 lt!24396 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!24394))))

(assert (=> b!59879 (= (apply!66 (+!81 lt!24391 (tuple2!2049 lt!24396 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!24394) (apply!66 lt!24391 lt!24394))))

(declare-fun b!59880 () Bool)

(assert (=> b!59880 (= e!39357 call!4509)))

(declare-fun b!59881 () Bool)

(assert (=> b!59881 (= e!39358 e!39357)))

(assert (=> b!59881 (= c!7728 (and (not (= (bvand lt!23841 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!23841 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59882 () Bool)

(assert (=> b!59882 (= e!39353 (= (apply!66 lt!24388 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 (_values!2026 newMap!16)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!59882 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 (_values!2026 newMap!16))))))

(assert (=> b!59882 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (= (and d!11613 c!7727) b!59863))

(assert (= (and d!11613 (not c!7727)) b!59881))

(assert (= (and b!59881 c!7728) b!59880))

(assert (= (and b!59881 (not c!7728)) b!59877))

(assert (= (and b!59877 c!7725) b!59872))

(assert (= (and b!59877 (not c!7725)) b!59866))

(assert (= (or b!59872 b!59866) bm!4507))

(assert (= (or b!59880 bm!4507) bm!4510))

(assert (= (or b!59880 b!59872) bm!4506))

(assert (= (or b!59863 bm!4510) bm!4511))

(assert (= (or b!59863 bm!4506) bm!4512))

(assert (= (and d!11613 res!33187) b!59873))

(assert (= (and d!11613 c!7724) b!59879))

(assert (= (and d!11613 (not c!7724)) b!59867))

(assert (= (and d!11613 res!33190) b!59874))

(assert (= (and b!59874 res!33189) b!59865))

(assert (= (and b!59874 (not res!33188)) b!59871))

(assert (= (and b!59871 res!33183) b!59882))

(assert (= (and b!59874 res!33186) b!59870))

(assert (= (and b!59870 c!7723) b!59878))

(assert (= (and b!59870 (not c!7723)) b!59868))

(assert (= (and b!59878 res!33191) b!59869))

(assert (= (or b!59878 b!59868) bm!4509))

(assert (= (and b!59870 res!33185) b!59876))

(assert (= (and b!59876 c!7726) b!59864))

(assert (= (and b!59876 (not c!7726)) b!59862))

(assert (= (and b!59864 res!33184) b!59875))

(assert (= (or b!59864 b!59862) bm!4508))

(declare-fun b_lambda!2645 () Bool)

(assert (=> (not b_lambda!2645) (not b!59882)))

(assert (=> b!59882 t!4806))

(declare-fun b_and!3629 () Bool)

(assert (= b_and!3625 (and (=> t!4806 result!2389) b_and!3629)))

(assert (=> b!59882 t!4808))

(declare-fun b_and!3631 () Bool)

(assert (= b_and!3627 (and (=> t!4808 result!2391) b_and!3631)))

(declare-fun m!52073 () Bool)

(assert (=> b!59875 m!52073))

(assert (=> b!59882 m!50843))

(assert (=> b!59882 m!50843))

(declare-fun m!52075 () Bool)

(assert (=> b!59882 m!52075))

(assert (=> b!59882 m!50847))

(assert (=> b!59882 m!50849))

(assert (=> b!59882 m!50847))

(assert (=> b!59882 m!50849))

(assert (=> b!59882 m!50851))

(assert (=> b!59865 m!50843))

(assert (=> b!59865 m!50843))

(assert (=> b!59865 m!50853))

(declare-fun m!52077 () Bool)

(assert (=> b!59869 m!52077))

(assert (=> b!59879 m!50843))

(declare-fun m!52079 () Bool)

(assert (=> b!59879 m!52079))

(declare-fun m!52081 () Bool)

(assert (=> b!59879 m!52081))

(assert (=> b!59879 m!50619))

(declare-fun m!52083 () Bool)

(assert (=> b!59879 m!52083))

(declare-fun m!52085 () Bool)

(assert (=> b!59879 m!52085))

(assert (=> b!59879 m!50619))

(declare-fun m!52087 () Bool)

(assert (=> b!59879 m!52087))

(assert (=> b!59879 m!50619))

(declare-fun m!52089 () Bool)

(assert (=> b!59879 m!52089))

(assert (=> b!59879 m!52085))

(declare-fun m!52091 () Bool)

(assert (=> b!59879 m!52091))

(declare-fun m!52093 () Bool)

(assert (=> b!59879 m!52093))

(declare-fun m!52095 () Bool)

(assert (=> b!59879 m!52095))

(declare-fun m!52097 () Bool)

(assert (=> b!59879 m!52097))

(declare-fun m!52099 () Bool)

(assert (=> b!59879 m!52099))

(declare-fun m!52101 () Bool)

(assert (=> b!59879 m!52101))

(declare-fun m!52103 () Bool)

(assert (=> b!59879 m!52103))

(declare-fun m!52105 () Bool)

(assert (=> b!59879 m!52105))

(assert (=> b!59879 m!52105))

(declare-fun m!52107 () Bool)

(assert (=> b!59879 m!52107))

(assert (=> b!59879 m!52079))

(assert (=> b!59879 m!52099))

(declare-fun m!52109 () Bool)

(assert (=> b!59879 m!52109))

(declare-fun m!52111 () Bool)

(assert (=> bm!4512 m!52111))

(assert (=> b!59871 m!50843))

(assert (=> b!59871 m!50843))

(declare-fun m!52113 () Bool)

(assert (=> b!59871 m!52113))

(assert (=> d!11613 m!50833))

(declare-fun m!52115 () Bool)

(assert (=> b!59863 m!52115))

(declare-fun m!52117 () Bool)

(assert (=> bm!4509 m!52117))

(declare-fun m!52119 () Bool)

(assert (=> bm!4508 m!52119))

(assert (=> b!59873 m!50843))

(assert (=> b!59873 m!50843))

(assert (=> b!59873 m!50853))

(assert (=> bm!4511 m!50619))

(assert (=> bm!4511 m!52083))

(assert (=> d!11327 d!11613))

(declare-fun d!11615 () Bool)

(assert (=> d!11615 (= (+!81 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(assert (=> d!11615 true))

(declare-fun _$8!46 () Unit!1553)

(assert (=> d!11615 (= (choose!312 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) lt!23841 (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2043 newMap!16)) _$8!46)))

(declare-fun bs!2590 () Bool)

(assert (= bs!2590 d!11615))

(assert (=> bs!2590 m!50697))

(assert (=> bs!2590 m!50697))

(assert (=> bs!2590 m!51045))

(assert (=> bs!2590 m!50619))

(assert (=> bs!2590 m!51047))

(assert (=> d!11327 d!11615))

(assert (=> b!59389 d!11485))

(assert (=> b!59389 d!11289))

(declare-fun bm!4513 () Bool)

(declare-fun call!4516 () ListLongMap!1377)

(declare-fun call!4518 () ListLongMap!1377)

(assert (=> bm!4513 (= call!4516 call!4518)))

(declare-fun d!11617 () Bool)

(declare-fun e!39360 () Bool)

(assert (=> d!11617 e!39360))

(declare-fun res!33199 () Bool)

(assert (=> d!11617 (=> (not res!33199) (not e!39360))))

(assert (=> d!11617 (= res!33199 (or (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))))

(declare-fun lt!24410 () ListLongMap!1377)

(declare-fun lt!24426 () ListLongMap!1377)

(assert (=> d!11617 (= lt!24410 lt!24426)))

(declare-fun lt!24415 () Unit!1553)

(declare-fun e!39368 () Unit!1553)

(assert (=> d!11617 (= lt!24415 e!39368)))

(declare-fun c!7730 () Bool)

(declare-fun e!39367 () Bool)

(assert (=> d!11617 (= c!7730 e!39367)))

(declare-fun res!33196 () Bool)

(assert (=> d!11617 (=> (not res!33196) (not e!39367))))

(assert (=> d!11617 (= res!33196 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun e!39371 () ListLongMap!1377)

(assert (=> d!11617 (= lt!24426 e!39371)))

(declare-fun c!7733 () Bool)

(assert (=> d!11617 (= c!7733 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11617 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11617 (= (getCurrentListMap!401 (_keys!3667 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!24410)))

(declare-fun b!59883 () Bool)

(declare-fun e!39361 () Bool)

(declare-fun call!4517 () Bool)

(assert (=> b!59883 (= e!39361 (not call!4517))))

(declare-fun b!59884 () Bool)

(assert (=> b!59884 (= e!39371 (+!81 call!4518 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))

(declare-fun b!59885 () Bool)

(declare-fun e!39362 () Bool)

(assert (=> b!59885 (= e!39361 e!39362)))

(declare-fun res!33193 () Bool)

(assert (=> b!59885 (= res!33193 call!4517)))

(assert (=> b!59885 (=> (not res!33193) (not e!39362))))

(declare-fun b!59886 () Bool)

(declare-fun e!39359 () Bool)

(assert (=> b!59886 (= e!39359 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4514 () Bool)

(declare-fun call!4522 () ListLongMap!1377)

(declare-fun call!4520 () ListLongMap!1377)

(assert (=> bm!4514 (= call!4522 call!4520)))

(declare-fun b!59887 () Bool)

(declare-fun e!39363 () ListLongMap!1377)

(assert (=> b!59887 (= e!39363 call!4522)))

(declare-fun bm!4515 () Bool)

(assert (=> bm!4515 (= call!4517 (contains!692 lt!24410 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59888 () Bool)

(declare-fun Unit!1592 () Unit!1553)

(assert (=> b!59888 (= e!39368 Unit!1592)))

(declare-fun bm!4516 () Bool)

(declare-fun call!4519 () Bool)

(assert (=> bm!4516 (= call!4519 (contains!692 lt!24410 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59889 () Bool)

(declare-fun e!39365 () Bool)

(assert (=> b!59889 (= e!39365 (not call!4519))))

(declare-fun b!59890 () Bool)

(declare-fun e!39364 () Bool)

(assert (=> b!59890 (= e!39364 (= (apply!66 lt!24410 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1959 newMap!16)))))

(declare-fun bm!4517 () Bool)

(declare-fun call!4521 () ListLongMap!1377)

(assert (=> bm!4517 (= call!4520 call!4521)))

(declare-fun b!59891 () Bool)

(declare-fun res!33194 () Bool)

(assert (=> b!59891 (=> (not res!33194) (not e!39360))))

(assert (=> b!59891 (= res!33194 e!39365)))

(declare-fun c!7729 () Bool)

(assert (=> b!59891 (= c!7729 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!59892 () Bool)

(declare-fun e!39369 () Bool)

(declare-fun e!39366 () Bool)

(assert (=> b!59892 (= e!39369 e!39366)))

(declare-fun res!33192 () Bool)

(assert (=> b!59892 (=> (not res!33192) (not e!39366))))

(assert (=> b!59892 (= res!33192 (contains!692 lt!24410 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!59892 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59893 () Bool)

(assert (=> b!59893 (= e!39363 call!4516)))

(declare-fun b!59894 () Bool)

(assert (=> b!59894 (= e!39367 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4518 () Bool)

(assert (=> bm!4518 (= call!4521 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun b!59895 () Bool)

(declare-fun res!33195 () Bool)

(assert (=> b!59895 (=> (not res!33195) (not e!39360))))

(assert (=> b!59895 (= res!33195 e!39369)))

(declare-fun res!33197 () Bool)

(assert (=> b!59895 (=> res!33197 e!39369)))

(assert (=> b!59895 (= res!33197 (not e!39359))))

(declare-fun res!33198 () Bool)

(assert (=> b!59895 (=> (not res!33198) (not e!39359))))

(assert (=> b!59895 (= res!33198 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!59896 () Bool)

(assert (=> b!59896 (= e!39362 (= (apply!66 lt!24410 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1959 newMap!16)))))

(declare-fun b!59897 () Bool)

(assert (=> b!59897 (= e!39360 e!39361)))

(declare-fun c!7732 () Bool)

(assert (=> b!59897 (= c!7732 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59898 () Bool)

(declare-fun c!7731 () Bool)

(assert (=> b!59898 (= c!7731 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!39370 () ListLongMap!1377)

(assert (=> b!59898 (= e!39370 e!39363)))

(declare-fun b!59899 () Bool)

(assert (=> b!59899 (= e!39365 e!39364)))

(declare-fun res!33200 () Bool)

(assert (=> b!59899 (= res!33200 call!4519)))

(assert (=> b!59899 (=> (not res!33200) (not e!39364))))

(declare-fun bm!4519 () Bool)

(declare-fun c!7734 () Bool)

(assert (=> bm!4519 (= call!4518 (+!81 (ite c!7733 call!4521 (ite c!7734 call!4520 call!4522)) (ite (or c!7733 c!7734) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(declare-fun b!59900 () Bool)

(declare-fun lt!24419 () Unit!1553)

(assert (=> b!59900 (= e!39368 lt!24419)))

(declare-fun lt!24424 () ListLongMap!1377)

(assert (=> b!59900 (= lt!24424 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24423 () (_ BitVec 64))

(assert (=> b!59900 (= lt!24423 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24406 () (_ BitVec 64))

(assert (=> b!59900 (= lt!24406 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24420 () Unit!1553)

(assert (=> b!59900 (= lt!24420 (addStillContains!42 lt!24424 lt!24423 (zeroValue!1959 newMap!16) lt!24406))))

(assert (=> b!59900 (contains!692 (+!81 lt!24424 (tuple2!2049 lt!24423 (zeroValue!1959 newMap!16))) lt!24406)))

(declare-fun lt!24407 () Unit!1553)

(assert (=> b!59900 (= lt!24407 lt!24420)))

(declare-fun lt!24421 () ListLongMap!1377)

(assert (=> b!59900 (= lt!24421 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24408 () (_ BitVec 64))

(assert (=> b!59900 (= lt!24408 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24412 () (_ BitVec 64))

(assert (=> b!59900 (= lt!24412 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24414 () Unit!1553)

(assert (=> b!59900 (= lt!24414 (addApplyDifferent!42 lt!24421 lt!24408 (minValue!1959 newMap!16) lt!24412))))

(assert (=> b!59900 (= (apply!66 (+!81 lt!24421 (tuple2!2049 lt!24408 (minValue!1959 newMap!16))) lt!24412) (apply!66 lt!24421 lt!24412))))

(declare-fun lt!24427 () Unit!1553)

(assert (=> b!59900 (= lt!24427 lt!24414)))

(declare-fun lt!24411 () ListLongMap!1377)

(assert (=> b!59900 (= lt!24411 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24422 () (_ BitVec 64))

(assert (=> b!59900 (= lt!24422 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24417 () (_ BitVec 64))

(assert (=> b!59900 (= lt!24417 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24425 () Unit!1553)

(assert (=> b!59900 (= lt!24425 (addApplyDifferent!42 lt!24411 lt!24422 (zeroValue!1959 newMap!16) lt!24417))))

(assert (=> b!59900 (= (apply!66 (+!81 lt!24411 (tuple2!2049 lt!24422 (zeroValue!1959 newMap!16))) lt!24417) (apply!66 lt!24411 lt!24417))))

(declare-fun lt!24409 () Unit!1553)

(assert (=> b!59900 (= lt!24409 lt!24425)))

(declare-fun lt!24413 () ListLongMap!1377)

(assert (=> b!59900 (= lt!24413 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24418 () (_ BitVec 64))

(assert (=> b!59900 (= lt!24418 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24416 () (_ BitVec 64))

(assert (=> b!59900 (= lt!24416 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!59900 (= lt!24419 (addApplyDifferent!42 lt!24413 lt!24418 (minValue!1959 newMap!16) lt!24416))))

(assert (=> b!59900 (= (apply!66 (+!81 lt!24413 (tuple2!2049 lt!24418 (minValue!1959 newMap!16))) lt!24416) (apply!66 lt!24413 lt!24416))))

(declare-fun b!59901 () Bool)

(assert (=> b!59901 (= e!39370 call!4516)))

(declare-fun b!59902 () Bool)

(assert (=> b!59902 (= e!39371 e!39370)))

(assert (=> b!59902 (= c!7734 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!59903 () Bool)

(assert (=> b!59903 (= e!39366 (= (apply!66 lt!24410 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!59903 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))))))))

(assert (=> b!59903 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (= (and d!11617 c!7733) b!59884))

(assert (= (and d!11617 (not c!7733)) b!59902))

(assert (= (and b!59902 c!7734) b!59901))

(assert (= (and b!59902 (not c!7734)) b!59898))

(assert (= (and b!59898 c!7731) b!59893))

(assert (= (and b!59898 (not c!7731)) b!59887))

(assert (= (or b!59893 b!59887) bm!4514))

(assert (= (or b!59901 bm!4514) bm!4517))

(assert (= (or b!59901 b!59893) bm!4513))

(assert (= (or b!59884 bm!4517) bm!4518))

(assert (= (or b!59884 bm!4513) bm!4519))

(assert (= (and d!11617 res!33196) b!59894))

(assert (= (and d!11617 c!7730) b!59900))

(assert (= (and d!11617 (not c!7730)) b!59888))

(assert (= (and d!11617 res!33199) b!59895))

(assert (= (and b!59895 res!33198) b!59886))

(assert (= (and b!59895 (not res!33197)) b!59892))

(assert (= (and b!59892 res!33192) b!59903))

(assert (= (and b!59895 res!33195) b!59891))

(assert (= (and b!59891 c!7729) b!59899))

(assert (= (and b!59891 (not c!7729)) b!59889))

(assert (= (and b!59899 res!33200) b!59890))

(assert (= (or b!59899 b!59889) bm!4516))

(assert (= (and b!59891 res!33194) b!59897))

(assert (= (and b!59897 c!7732) b!59885))

(assert (= (and b!59897 (not c!7732)) b!59883))

(assert (= (and b!59885 res!33193) b!59896))

(assert (= (or b!59885 b!59883) bm!4515))

(declare-fun b_lambda!2647 () Bool)

(assert (=> (not b_lambda!2647) (not b!59903)))

(assert (=> b!59903 t!4806))

(declare-fun b_and!3633 () Bool)

(assert (= b_and!3629 (and (=> t!4806 result!2389) b_and!3633)))

(assert (=> b!59903 t!4808))

(declare-fun b_and!3635 () Bool)

(assert (= b_and!3631 (and (=> t!4808 result!2391) b_and!3635)))

(declare-fun m!52121 () Bool)

(assert (=> b!59896 m!52121))

(assert (=> b!59903 m!50843))

(assert (=> b!59903 m!50843))

(declare-fun m!52123 () Bool)

(assert (=> b!59903 m!52123))

(declare-fun m!52125 () Bool)

(assert (=> b!59903 m!52125))

(assert (=> b!59903 m!50849))

(assert (=> b!59903 m!52125))

(assert (=> b!59903 m!50849))

(declare-fun m!52127 () Bool)

(assert (=> b!59903 m!52127))

(assert (=> b!59886 m!50843))

(assert (=> b!59886 m!50843))

(assert (=> b!59886 m!50853))

(declare-fun m!52129 () Bool)

(assert (=> b!59890 m!52129))

(assert (=> b!59900 m!50843))

(declare-fun m!52131 () Bool)

(assert (=> b!59900 m!52131))

(declare-fun m!52133 () Bool)

(assert (=> b!59900 m!52133))

(declare-fun m!52135 () Bool)

(assert (=> b!59900 m!52135))

(declare-fun m!52137 () Bool)

(assert (=> b!59900 m!52137))

(declare-fun m!52139 () Bool)

(assert (=> b!59900 m!52139))

(declare-fun m!52141 () Bool)

(assert (=> b!59900 m!52141))

(assert (=> b!59900 m!52137))

(declare-fun m!52143 () Bool)

(assert (=> b!59900 m!52143))

(declare-fun m!52145 () Bool)

(assert (=> b!59900 m!52145))

(declare-fun m!52147 () Bool)

(assert (=> b!59900 m!52147))

(declare-fun m!52149 () Bool)

(assert (=> b!59900 m!52149))

(declare-fun m!52151 () Bool)

(assert (=> b!59900 m!52151))

(declare-fun m!52153 () Bool)

(assert (=> b!59900 m!52153))

(declare-fun m!52155 () Bool)

(assert (=> b!59900 m!52155))

(declare-fun m!52157 () Bool)

(assert (=> b!59900 m!52157))

(assert (=> b!59900 m!52157))

(declare-fun m!52159 () Bool)

(assert (=> b!59900 m!52159))

(assert (=> b!59900 m!52131))

(assert (=> b!59900 m!52151))

(declare-fun m!52161 () Bool)

(assert (=> b!59900 m!52161))

(declare-fun m!52163 () Bool)

(assert (=> bm!4519 m!52163))

(assert (=> b!59892 m!50843))

(assert (=> b!59892 m!50843))

(declare-fun m!52165 () Bool)

(assert (=> b!59892 m!52165))

(assert (=> d!11617 m!50833))

(declare-fun m!52167 () Bool)

(assert (=> b!59884 m!52167))

(declare-fun m!52169 () Bool)

(assert (=> bm!4516 m!52169))

(declare-fun m!52171 () Bool)

(assert (=> bm!4515 m!52171))

(assert (=> b!59894 m!50843))

(assert (=> b!59894 m!50843))

(assert (=> b!59894 m!50853))

(assert (=> bm!4518 m!52135))

(assert (=> b!59389 d!11617))

(declare-fun d!11619 () Bool)

(assert (=> d!11619 (= (isEmpty!298 (getValueByKey!123 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))) (not ((_ is Some!128) (getValueByKey!123 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))))

(assert (=> d!11315 d!11619))

(declare-fun bm!4520 () Bool)

(declare-fun call!4523 () Bool)

(assert (=> bm!4520 (= call!4523 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3667 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun b!59904 () Bool)

(declare-fun e!39373 () Bool)

(assert (=> b!59904 (= e!39373 call!4523)))

(declare-fun b!59905 () Bool)

(declare-fun e!39372 () Bool)

(assert (=> b!59905 (= e!39372 call!4523)))

(declare-fun b!59906 () Bool)

(declare-fun e!39374 () Bool)

(assert (=> b!59906 (= e!39374 e!39373)))

(declare-fun c!7735 () Bool)

(assert (=> b!59906 (= c!7735 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!11621 () Bool)

(declare-fun res!33202 () Bool)

(assert (=> d!11621 (=> res!33202 e!39374)))

(assert (=> d!11621 (= res!33202 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> d!11621 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992)))) e!39374)))

(declare-fun b!59907 () Bool)

(assert (=> b!59907 (= e!39373 e!39372)))

(declare-fun lt!24430 () (_ BitVec 64))

(assert (=> b!59907 (= lt!24430 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!24428 () Unit!1553)

(assert (=> b!59907 (= lt!24428 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) lt!24430 #b00000000000000000000000000000000))))

(assert (=> b!59907 (arrayContainsKey!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) lt!24430 #b00000000000000000000000000000000)))

(declare-fun lt!24429 () Unit!1553)

(assert (=> b!59907 (= lt!24429 lt!24428)))

(declare-fun res!33201 () Bool)

(assert (=> b!59907 (= res!33201 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b00000000000000000000000000000000) (_keys!3667 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992)))) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!59907 (=> (not res!33201) (not e!39372))))

(assert (= (and d!11621 (not res!33202)) b!59906))

(assert (= (and b!59906 c!7735) b!59907))

(assert (= (and b!59906 (not c!7735)) b!59904))

(assert (= (and b!59907 res!33201) b!59905))

(assert (= (or b!59905 b!59904) bm!4520))

(declare-fun m!52173 () Bool)

(assert (=> bm!4520 m!52173))

(assert (=> b!59906 m!51473))

(assert (=> b!59906 m!51473))

(assert (=> b!59906 m!51477))

(assert (=> b!59907 m!51473))

(declare-fun m!52175 () Bool)

(assert (=> b!59907 m!52175))

(declare-fun m!52177 () Bool)

(assert (=> b!59907 m!52177))

(assert (=> b!59907 m!51473))

(declare-fun m!52179 () Bool)

(assert (=> b!59907 m!52179))

(assert (=> b!59420 d!11621))

(declare-fun d!11623 () Bool)

(assert (=> d!11623 (= (size!2014 newMap!16) (bvadd (_size!358 newMap!16) (bvsdiv (bvadd (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!59440 d!11623))

(declare-fun d!11625 () Bool)

(declare-fun e!39375 () Bool)

(assert (=> d!11625 e!39375))

(declare-fun res!33203 () Bool)

(assert (=> d!11625 (=> res!33203 e!39375)))

(declare-fun lt!24431 () Bool)

(assert (=> d!11625 (= res!33203 (not lt!24431))))

(declare-fun lt!24434 () Bool)

(assert (=> d!11625 (= lt!24431 lt!24434)))

(declare-fun lt!24433 () Unit!1553)

(declare-fun e!39376 () Unit!1553)

(assert (=> d!11625 (= lt!24433 e!39376)))

(declare-fun c!7736 () Bool)

(assert (=> d!11625 (= c!7736 lt!24434)))

(assert (=> d!11625 (= lt!24434 (containsKey!127 (toList!704 lt!24153) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11625 (= (contains!692 lt!24153 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!24431)))

(declare-fun b!59908 () Bool)

(declare-fun lt!24432 () Unit!1553)

(assert (=> b!59908 (= e!39376 lt!24432)))

(assert (=> b!59908 (= lt!24432 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!24153) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!59908 (isDefined!77 (getValueByKey!123 (toList!704 lt!24153) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!59909 () Bool)

(declare-fun Unit!1593 () Unit!1553)

(assert (=> b!59909 (= e!39376 Unit!1593)))

(declare-fun b!59910 () Bool)

(assert (=> b!59910 (= e!39375 (isDefined!77 (getValueByKey!123 (toList!704 lt!24153) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!11625 c!7736) b!59908))

(assert (= (and d!11625 (not c!7736)) b!59909))

(assert (= (and d!11625 (not res!33203)) b!59910))

(declare-fun m!52181 () Bool)

(assert (=> d!11625 m!52181))

(declare-fun m!52183 () Bool)

(assert (=> b!59908 m!52183))

(assert (=> b!59908 m!51367))

(assert (=> b!59908 m!51367))

(declare-fun m!52185 () Bool)

(assert (=> b!59908 m!52185))

(assert (=> b!59910 m!51367))

(assert (=> b!59910 m!51367))

(assert (=> b!59910 m!52185))

(assert (=> d!11399 d!11625))

(declare-fun b!59914 () Bool)

(declare-fun e!39378 () Option!129)

(assert (=> b!59914 (= e!39378 None!127)))

(declare-fun c!7737 () Bool)

(declare-fun d!11627 () Bool)

(assert (=> d!11627 (= c!7737 (and ((_ is Cons!1449) lt!24150) (= (_1!1034 (h!2030 lt!24150)) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!39377 () Option!129)

(assert (=> d!11627 (= (getValueByKey!123 lt!24150 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!39377)))

(declare-fun b!59911 () Bool)

(assert (=> b!59911 (= e!39377 (Some!128 (_2!1034 (h!2030 lt!24150))))))

(declare-fun b!59913 () Bool)

(assert (=> b!59913 (= e!39378 (getValueByKey!123 (t!4799 lt!24150) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!59912 () Bool)

(assert (=> b!59912 (= e!39377 e!39378)))

(declare-fun c!7738 () Bool)

(assert (=> b!59912 (= c!7738 (and ((_ is Cons!1449) lt!24150) (not (= (_1!1034 (h!2030 lt!24150)) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!11627 c!7737) b!59911))

(assert (= (and d!11627 (not c!7737)) b!59912))

(assert (= (and b!59912 c!7738) b!59913))

(assert (= (and b!59912 (not c!7738)) b!59914))

(declare-fun m!52187 () Bool)

(assert (=> b!59913 m!52187))

(assert (=> d!11399 d!11627))

(declare-fun d!11629 () Bool)

(assert (=> d!11629 (= (getValueByKey!123 lt!24150 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!24435 () Unit!1553)

(assert (=> d!11629 (= lt!24435 (choose!319 lt!24150 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!39379 () Bool)

(assert (=> d!11629 e!39379))

(declare-fun res!33204 () Bool)

(assert (=> d!11629 (=> (not res!33204) (not e!39379))))

(assert (=> d!11629 (= res!33204 (isStrictlySorted!279 lt!24150))))

(assert (=> d!11629 (= (lemmaContainsTupThenGetReturnValue!42 lt!24150 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!24435)))

(declare-fun b!59915 () Bool)

(declare-fun res!33205 () Bool)

(assert (=> b!59915 (=> (not res!33205) (not e!39379))))

(assert (=> b!59915 (= res!33205 (containsKey!127 lt!24150 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!59916 () Bool)

(assert (=> b!59916 (= e!39379 (contains!694 lt!24150 (tuple2!2049 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!11629 res!33204) b!59915))

(assert (= (and b!59915 res!33205) b!59916))

(assert (=> d!11629 m!51361))

(declare-fun m!52189 () Bool)

(assert (=> d!11629 m!52189))

(declare-fun m!52191 () Bool)

(assert (=> d!11629 m!52191))

(declare-fun m!52193 () Bool)

(assert (=> b!59915 m!52193))

(declare-fun m!52195 () Bool)

(assert (=> b!59916 m!52195))

(assert (=> d!11399 d!11629))

(declare-fun lt!24436 () List!1453)

(declare-fun b!59917 () Bool)

(declare-fun e!39383 () Bool)

(assert (=> b!59917 (= e!39383 (contains!694 lt!24436 (tuple2!2049 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!59918 () Bool)

(declare-fun e!39381 () List!1453)

(declare-fun e!39380 () List!1453)

(assert (=> b!59918 (= e!39381 e!39380)))

(declare-fun c!7739 () Bool)

(assert (=> b!59918 (= c!7739 (and ((_ is Cons!1449) (toList!704 call!4403)) (= (_1!1034 (h!2030 (toList!704 call!4403))) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun call!4526 () List!1453)

(declare-fun e!39382 () List!1453)

(declare-fun c!7742 () Bool)

(declare-fun bm!4521 () Bool)

(assert (=> bm!4521 (= call!4526 ($colon$colon!59 e!39382 (ite c!7742 (h!2030 (toList!704 call!4403)) (tuple2!2049 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!7741 () Bool)

(assert (=> bm!4521 (= c!7741 c!7742)))

(declare-fun d!11631 () Bool)

(assert (=> d!11631 e!39383))

(declare-fun res!33207 () Bool)

(assert (=> d!11631 (=> (not res!33207) (not e!39383))))

(assert (=> d!11631 (= res!33207 (isStrictlySorted!279 lt!24436))))

(assert (=> d!11631 (= lt!24436 e!39381)))

(assert (=> d!11631 (= c!7742 (and ((_ is Cons!1449) (toList!704 call!4403)) (bvslt (_1!1034 (h!2030 (toList!704 call!4403))) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!11631 (isStrictlySorted!279 (toList!704 call!4403))))

(assert (=> d!11631 (= (insertStrictlySorted!44 (toList!704 call!4403) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!24436)))

(declare-fun b!59919 () Bool)

(declare-fun e!39384 () List!1453)

(declare-fun call!4524 () List!1453)

(assert (=> b!59919 (= e!39384 call!4524)))

(declare-fun b!59920 () Bool)

(assert (=> b!59920 (= e!39381 call!4526)))

(declare-fun bm!4522 () Bool)

(declare-fun call!4525 () List!1453)

(assert (=> bm!4522 (= call!4524 call!4525)))

(declare-fun c!7740 () Bool)

(declare-fun b!59921 () Bool)

(assert (=> b!59921 (= e!39382 (ite c!7739 (t!4799 (toList!704 call!4403)) (ite c!7740 (Cons!1449 (h!2030 (toList!704 call!4403)) (t!4799 (toList!704 call!4403))) Nil!1450)))))

(declare-fun b!59922 () Bool)

(assert (=> b!59922 (= e!39380 call!4525)))

(declare-fun b!59923 () Bool)

(declare-fun res!33206 () Bool)

(assert (=> b!59923 (=> (not res!33206) (not e!39383))))

(assert (=> b!59923 (= res!33206 (containsKey!127 lt!24436 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!59924 () Bool)

(assert (=> b!59924 (= e!39384 call!4524)))

(declare-fun b!59925 () Bool)

(assert (=> b!59925 (= c!7740 (and ((_ is Cons!1449) (toList!704 call!4403)) (bvsgt (_1!1034 (h!2030 (toList!704 call!4403))) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!59925 (= e!39380 e!39384)))

(declare-fun b!59926 () Bool)

(assert (=> b!59926 (= e!39382 (insertStrictlySorted!44 (t!4799 (toList!704 call!4403)) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!4523 () Bool)

(assert (=> bm!4523 (= call!4525 call!4526)))

(assert (= (and d!11631 c!7742) b!59920))

(assert (= (and d!11631 (not c!7742)) b!59918))

(assert (= (and b!59918 c!7739) b!59922))

(assert (= (and b!59918 (not c!7739)) b!59925))

(assert (= (and b!59925 c!7740) b!59924))

(assert (= (and b!59925 (not c!7740)) b!59919))

(assert (= (or b!59924 b!59919) bm!4522))

(assert (= (or b!59922 bm!4522) bm!4523))

(assert (= (or b!59920 bm!4523) bm!4521))

(assert (= (and bm!4521 c!7741) b!59926))

(assert (= (and bm!4521 (not c!7741)) b!59921))

(assert (= (and d!11631 res!33207) b!59923))

(assert (= (and b!59923 res!33206) b!59917))

(declare-fun m!52197 () Bool)

(assert (=> b!59926 m!52197))

(declare-fun m!52199 () Bool)

(assert (=> b!59917 m!52199))

(declare-fun m!52201 () Bool)

(assert (=> bm!4521 m!52201))

(declare-fun m!52203 () Bool)

(assert (=> b!59923 m!52203))

(declare-fun m!52205 () Bool)

(assert (=> d!11631 m!52205))

(declare-fun m!52207 () Bool)

(assert (=> d!11631 m!52207))

(assert (=> d!11399 d!11631))

(declare-fun d!11633 () Bool)

(assert (=> d!11633 (= (isDefined!77 (getValueByKey!123 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))) (not (isEmpty!298 (getValueByKey!123 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))))

(declare-fun bs!2591 () Bool)

(assert (= bs!2591 d!11633))

(assert (=> bs!2591 m!51149))

(declare-fun m!52209 () Bool)

(assert (=> bs!2591 m!52209))

(assert (=> b!59392 d!11633))

(declare-fun b!59930 () Bool)

(declare-fun e!39386 () Option!129)

(assert (=> b!59930 (= e!39386 None!127)))

(declare-fun c!7743 () Bool)

(declare-fun d!11635 () Bool)

(assert (=> d!11635 (= c!7743 (and ((_ is Cons!1449) (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))) (= (_1!1034 (h!2030 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(declare-fun e!39385 () Option!129)

(assert (=> d!11635 (= (getValueByKey!123 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) e!39385)))

(declare-fun b!59927 () Bool)

(assert (=> b!59927 (= e!39385 (Some!128 (_2!1034 (h!2030 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))))))

(declare-fun b!59929 () Bool)

(assert (=> b!59929 (= e!39386 (getValueByKey!123 (t!4799 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59928 () Bool)

(assert (=> b!59928 (= e!39385 e!39386)))

(declare-fun c!7744 () Bool)

(assert (=> b!59928 (= c!7744 (and ((_ is Cons!1449) (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))) (not (= (_1!1034 (h!2030 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))))

(assert (= (and d!11635 c!7743) b!59927))

(assert (= (and d!11635 (not c!7743)) b!59928))

(assert (= (and b!59928 c!7744) b!59929))

(assert (= (and b!59928 (not c!7744)) b!59930))

(assert (=> b!59929 m!50591))

(declare-fun m!52211 () Bool)

(assert (=> b!59929 m!52211))

(assert (=> b!59392 d!11635))

(declare-fun d!11637 () Bool)

(assert (=> d!11637 (= (apply!66 lt!23865 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1083 (getValueByKey!123 (toList!704 lt!23865) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2592 () Bool)

(assert (= bs!2592 d!11637))

(declare-fun m!52213 () Bool)

(assert (=> bs!2592 m!52213))

(assert (=> bs!2592 m!52213))

(declare-fun m!52215 () Bool)

(assert (=> bs!2592 m!52215))

(assert (=> b!59158 d!11637))

(declare-fun d!11639 () Bool)

(assert (=> d!11639 (= (+!81 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!401 (_keys!3667 newMap!16) (array!3723 (store (arr!1781 (_values!2026 newMap!16)) (index!3072 lt!23839) (ValueCellFull!855 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2011 (_values!2026 newMap!16))) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(assert (=> d!11639 true))

(declare-fun _$5!62 () Unit!1553)

(assert (=> d!11639 (= (choose!316 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (index!3072 lt!23839) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2043 newMap!16)) _$5!62)))

(declare-fun bs!2593 () Bool)

(assert (= bs!2593 d!11639))

(assert (=> bs!2593 m!50697))

(assert (=> bs!2593 m!50697))

(assert (=> bs!2593 m!51087))

(assert (=> bs!2593 m!50787))

(assert (=> bs!2593 m!51143))

(assert (=> d!11341 d!11639))

(assert (=> d!11341 d!11417))

(declare-fun d!11641 () Bool)

(assert (=> d!11641 (= (isDefined!77 (getValueByKey!123 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839))))) (not (isEmpty!298 (getValueByKey!123 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))))

(declare-fun bs!2594 () Bool)

(assert (= bs!2594 d!11641))

(assert (=> bs!2594 m!50957))

(declare-fun m!52217 () Bool)

(assert (=> bs!2594 m!52217))

(assert (=> b!59212 d!11641))

(declare-fun b!59934 () Bool)

(declare-fun e!39388 () Option!129)

(assert (=> b!59934 (= e!39388 None!127)))

(declare-fun d!11643 () Bool)

(declare-fun c!7745 () Bool)

(assert (=> d!11643 (= c!7745 (and ((_ is Cons!1449) (toList!704 call!4401)) (= (_1!1034 (h!2030 (toList!704 call!4401))) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839))))))))

(declare-fun e!39387 () Option!129)

(assert (=> d!11643 (= (getValueByKey!123 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))) e!39387)))

(declare-fun b!59931 () Bool)

(assert (=> b!59931 (= e!39387 (Some!128 (_2!1034 (h!2030 (toList!704 call!4401)))))))

(declare-fun b!59933 () Bool)

(assert (=> b!59933 (= e!39388 (getValueByKey!123 (t!4799 (toList!704 call!4401)) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))

(declare-fun b!59932 () Bool)

(assert (=> b!59932 (= e!39387 e!39388)))

(declare-fun c!7746 () Bool)

(assert (=> b!59932 (= c!7746 (and ((_ is Cons!1449) (toList!704 call!4401)) (not (= (_1!1034 (h!2030 (toList!704 call!4401))) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))))

(assert (= (and d!11643 c!7745) b!59931))

(assert (= (and d!11643 (not c!7745)) b!59932))

(assert (= (and b!59932 c!7746) b!59933))

(assert (= (and b!59932 (not c!7746)) b!59934))

(declare-fun m!52219 () Bool)

(assert (=> b!59933 m!52219))

(assert (=> b!59212 d!11643))

(declare-fun d!11645 () Bool)

(declare-fun e!39389 () Bool)

(assert (=> d!11645 e!39389))

(declare-fun res!33208 () Bool)

(assert (=> d!11645 (=> res!33208 e!39389)))

(declare-fun lt!24437 () Bool)

(assert (=> d!11645 (= res!33208 (not lt!24437))))

(declare-fun lt!24440 () Bool)

(assert (=> d!11645 (= lt!24437 lt!24440)))

(declare-fun lt!24439 () Unit!1553)

(declare-fun e!39390 () Unit!1553)

(assert (=> d!11645 (= lt!24439 e!39390)))

(declare-fun c!7747 () Bool)

(assert (=> d!11645 (= c!7747 lt!24440)))

(assert (=> d!11645 (= lt!24440 (containsKey!127 (toList!704 lt!23968) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!11645 (= (contains!692 lt!23968 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!24437)))

(declare-fun b!59935 () Bool)

(declare-fun lt!24438 () Unit!1553)

(assert (=> b!59935 (= e!39390 lt!24438)))

(assert (=> b!59935 (= lt!24438 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23968) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!59935 (isDefined!77 (getValueByKey!123 (toList!704 lt!23968) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!59936 () Bool)

(declare-fun Unit!1594 () Unit!1553)

(assert (=> b!59936 (= e!39390 Unit!1594)))

(declare-fun b!59937 () Bool)

(assert (=> b!59937 (= e!39389 (isDefined!77 (getValueByKey!123 (toList!704 lt!23968) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!11645 c!7747) b!59935))

(assert (= (and d!11645 (not c!7747)) b!59936))

(assert (= (and d!11645 (not res!33208)) b!59937))

(assert (=> d!11645 m!50685))

(declare-fun m!52221 () Bool)

(assert (=> d!11645 m!52221))

(assert (=> b!59935 m!50685))

(declare-fun m!52223 () Bool)

(assert (=> b!59935 m!52223))

(assert (=> b!59935 m!50685))

(declare-fun m!52225 () Bool)

(assert (=> b!59935 m!52225))

(assert (=> b!59935 m!52225))

(declare-fun m!52227 () Bool)

(assert (=> b!59935 m!52227))

(assert (=> b!59937 m!50685))

(assert (=> b!59937 m!52225))

(assert (=> b!59937 m!52225))

(assert (=> b!59937 m!52227))

(assert (=> b!59326 d!11645))

(declare-fun d!11647 () Bool)

(declare-fun e!39391 () Bool)

(assert (=> d!11647 e!39391))

(declare-fun res!33209 () Bool)

(assert (=> d!11647 (=> res!33209 e!39391)))

(declare-fun lt!24441 () Bool)

(assert (=> d!11647 (= res!33209 (not lt!24441))))

(declare-fun lt!24444 () Bool)

(assert (=> d!11647 (= lt!24441 lt!24444)))

(declare-fun lt!24443 () Unit!1553)

(declare-fun e!39392 () Unit!1553)

(assert (=> d!11647 (= lt!24443 e!39392)))

(declare-fun c!7748 () Bool)

(assert (=> d!11647 (= c!7748 lt!24444)))

(assert (=> d!11647 (= lt!24444 (containsKey!127 (toList!704 lt!24083) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!11647 (= (contains!692 lt!24083 #b0000000000000000000000000000000000000000000000000000000000000000) lt!24441)))

(declare-fun b!59938 () Bool)

(declare-fun lt!24442 () Unit!1553)

(assert (=> b!59938 (= e!39392 lt!24442)))

(assert (=> b!59938 (= lt!24442 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!24083) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59938 (isDefined!77 (getValueByKey!123 (toList!704 lt!24083) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59939 () Bool)

(declare-fun Unit!1595 () Unit!1553)

(assert (=> b!59939 (= e!39392 Unit!1595)))

(declare-fun b!59940 () Bool)

(assert (=> b!59940 (= e!39391 (isDefined!77 (getValueByKey!123 (toList!704 lt!24083) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11647 c!7748) b!59938))

(assert (= (and d!11647 (not c!7748)) b!59939))

(assert (= (and d!11647 (not res!33209)) b!59940))

(declare-fun m!52229 () Bool)

(assert (=> d!11647 m!52229))

(declare-fun m!52231 () Bool)

(assert (=> b!59938 m!52231))

(declare-fun m!52233 () Bool)

(assert (=> b!59938 m!52233))

(assert (=> b!59938 m!52233))

(declare-fun m!52235 () Bool)

(assert (=> b!59938 m!52235))

(assert (=> b!59940 m!52233))

(assert (=> b!59940 m!52233))

(assert (=> b!59940 m!52235))

(assert (=> bm!4453 d!11647))

(assert (=> d!11325 d!11323))

(declare-fun d!11649 () Bool)

(declare-fun e!39404 () Bool)

(assert (=> d!11649 e!39404))

(declare-fun c!7754 () Bool)

(declare-fun lt!24447 () SeekEntryResult!237)

(assert (=> d!11649 (= c!7754 ((_ is MissingZero!237) lt!24447))))

(assert (=> d!11649 (= lt!24447 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(assert (=> d!11649 true))

(declare-fun _$34!763 () Unit!1553)

(assert (=> d!11649 (= (choose!311 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (defaultEntry!2043 newMap!16)) _$34!763)))

(declare-fun call!4531 () Bool)

(declare-fun bm!4528 () Bool)

(assert (=> bm!4528 (= call!4531 (arrayContainsKey!0 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!59957 () Bool)

(declare-fun res!33218 () Bool)

(assert (=> b!59957 (= res!33218 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3071 lt!24447)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!39402 () Bool)

(assert (=> b!59957 (=> (not res!33218) (not e!39402))))

(declare-fun b!59958 () Bool)

(declare-fun res!33221 () Bool)

(declare-fun e!39403 () Bool)

(assert (=> b!59958 (=> (not res!33221) (not e!39403))))

(assert (=> b!59958 (= res!33221 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3074 lt!24447)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59959 () Bool)

(assert (=> b!59959 (= e!39403 (not call!4531))))

(declare-fun b!59960 () Bool)

(assert (=> b!59960 (= e!39404 e!39402)))

(declare-fun res!33220 () Bool)

(declare-fun call!4532 () Bool)

(assert (=> b!59960 (= res!33220 call!4532)))

(assert (=> b!59960 (=> (not res!33220) (not e!39402))))

(declare-fun b!59961 () Bool)

(declare-fun e!39401 () Bool)

(assert (=> b!59961 (= e!39404 e!39401)))

(declare-fun c!7753 () Bool)

(assert (=> b!59961 (= c!7753 ((_ is MissingVacant!237) lt!24447))))

(declare-fun b!59962 () Bool)

(assert (=> b!59962 (= e!39401 ((_ is Undefined!237) lt!24447))))

(declare-fun b!59963 () Bool)

(assert (=> b!59963 (= e!39402 (not call!4531))))

(declare-fun b!59964 () Bool)

(declare-fun res!33219 () Bool)

(assert (=> b!59964 (=> (not res!33219) (not e!39403))))

(assert (=> b!59964 (= res!33219 call!4532)))

(assert (=> b!59964 (= e!39401 e!39403)))

(declare-fun bm!4529 () Bool)

(assert (=> bm!4529 (= call!4532 (inRange!0 (ite c!7754 (index!3071 lt!24447) (index!3074 lt!24447)) (mask!5927 newMap!16)))))

(assert (= (and d!11649 c!7754) b!59960))

(assert (= (and d!11649 (not c!7754)) b!59961))

(assert (= (and b!59960 res!33220) b!59957))

(assert (= (and b!59957 res!33218) b!59963))

(assert (= (and b!59961 c!7753) b!59964))

(assert (= (and b!59961 (not c!7753)) b!59962))

(assert (= (and b!59964 res!33219) b!59958))

(assert (= (and b!59958 res!33221) b!59959))

(assert (= (or b!59960 b!59964) bm!4529))

(assert (= (or b!59963 b!59959) bm!4528))

(declare-fun m!52237 () Bool)

(assert (=> b!59958 m!52237))

(assert (=> bm!4528 m!50591))

(assert (=> bm!4528 m!50797))

(declare-fun m!52239 () Bool)

(assert (=> bm!4529 m!52239))

(declare-fun m!52241 () Bool)

(assert (=> b!59957 m!52241))

(assert (=> d!11649 m!50591))

(assert (=> d!11649 m!50803))

(assert (=> d!11325 d!11649))

(assert (=> d!11325 d!11417))

(assert (=> b!59224 d!11437))

(declare-fun d!11651 () Bool)

(assert (=> d!11651 (= (map!1107 (_2!1033 lt!24051)) (getCurrentListMap!401 (_keys!3667 (_2!1033 lt!24051)) (_values!2026 (_2!1033 lt!24051)) (mask!5927 (_2!1033 lt!24051)) (extraKeys!1930 (_2!1033 lt!24051)) (zeroValue!1959 (_2!1033 lt!24051)) (minValue!1959 (_2!1033 lt!24051)) #b00000000000000000000000000000000 (defaultEntry!2043 (_2!1033 lt!24051))))))

(declare-fun bs!2595 () Bool)

(assert (= bs!2595 d!11651))

(declare-fun m!52243 () Bool)

(assert (=> bs!2595 m!52243))

(assert (=> b!59383 d!11651))

(declare-fun d!11653 () Bool)

(declare-fun e!39405 () Bool)

(assert (=> d!11653 e!39405))

(declare-fun res!33223 () Bool)

(assert (=> d!11653 (=> (not res!33223) (not e!39405))))

(declare-fun lt!24451 () ListLongMap!1377)

(assert (=> d!11653 (= res!33223 (contains!692 lt!24451 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!24448 () List!1453)

(assert (=> d!11653 (= lt!24451 (ListLongMap!1378 lt!24448))))

(declare-fun lt!24450 () Unit!1553)

(declare-fun lt!24449 () Unit!1553)

(assert (=> d!11653 (= lt!24450 lt!24449)))

(assert (=> d!11653 (= (getValueByKey!123 lt!24448 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11653 (= lt!24449 (lemmaContainsTupThenGetReturnValue!42 lt!24448 (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11653 (= lt!24448 (insertStrictlySorted!44 (toList!704 (map!1107 newMap!16)) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11653 (= (+!81 (map!1107 newMap!16) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!24451)))

(declare-fun b!59965 () Bool)

(declare-fun res!33222 () Bool)

(assert (=> b!59965 (=> (not res!33222) (not e!39405))))

(assert (=> b!59965 (= res!33222 (= (getValueByKey!123 (toList!704 lt!24451) (_1!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!59966 () Bool)

(assert (=> b!59966 (= e!39405 (contains!694 (toList!704 lt!24451) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!11653 res!33223) b!59965))

(assert (= (and b!59965 res!33222) b!59966))

(declare-fun m!52245 () Bool)

(assert (=> d!11653 m!52245))

(declare-fun m!52247 () Bool)

(assert (=> d!11653 m!52247))

(declare-fun m!52249 () Bool)

(assert (=> d!11653 m!52249))

(declare-fun m!52251 () Bool)

(assert (=> d!11653 m!52251))

(declare-fun m!52253 () Bool)

(assert (=> b!59965 m!52253))

(declare-fun m!52255 () Bool)

(assert (=> b!59966 m!52255))

(assert (=> b!59383 d!11653))

(assert (=> b!59383 d!11263))

(assert (=> b!59199 d!11437))

(assert (=> d!11359 d!11417))

(declare-fun d!11655 () Bool)

(declare-fun e!39406 () Bool)

(assert (=> d!11655 e!39406))

(declare-fun res!33224 () Bool)

(assert (=> d!11655 (=> res!33224 e!39406)))

(declare-fun lt!24452 () Bool)

(assert (=> d!11655 (= res!33224 (not lt!24452))))

(declare-fun lt!24455 () Bool)

(assert (=> d!11655 (= lt!24452 lt!24455)))

(declare-fun lt!24454 () Unit!1553)

(declare-fun e!39407 () Unit!1553)

(assert (=> d!11655 (= lt!24454 e!39407)))

(declare-fun c!7755 () Bool)

(assert (=> d!11655 (= c!7755 lt!24455)))

(assert (=> d!11655 (= lt!24455 (containsKey!127 (toList!704 lt!23865) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!11655 (= (contains!692 lt!23865 #b1000000000000000000000000000000000000000000000000000000000000000) lt!24452)))

(declare-fun b!59967 () Bool)

(declare-fun lt!24453 () Unit!1553)

(assert (=> b!59967 (= e!39407 lt!24453)))

(assert (=> b!59967 (= lt!24453 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23865) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!59967 (isDefined!77 (getValueByKey!123 (toList!704 lt!23865) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!59968 () Bool)

(declare-fun Unit!1596 () Unit!1553)

(assert (=> b!59968 (= e!39407 Unit!1596)))

(declare-fun b!59969 () Bool)

(assert (=> b!59969 (= e!39406 (isDefined!77 (getValueByKey!123 (toList!704 lt!23865) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11655 c!7755) b!59967))

(assert (= (and d!11655 (not c!7755)) b!59968))

(assert (= (and d!11655 (not res!33224)) b!59969))

(declare-fun m!52257 () Bool)

(assert (=> d!11655 m!52257))

(declare-fun m!52259 () Bool)

(assert (=> b!59967 m!52259))

(assert (=> b!59967 m!51925))

(assert (=> b!59967 m!51925))

(declare-fun m!52261 () Bool)

(assert (=> b!59967 m!52261))

(assert (=> b!59969 m!51925))

(assert (=> b!59969 m!51925))

(assert (=> b!59969 m!52261))

(assert (=> bm!4413 d!11655))

(declare-fun b!59970 () Bool)

(declare-fun e!39413 () ListLongMap!1377)

(declare-fun e!39412 () ListLongMap!1377)

(assert (=> b!59970 (= e!39413 e!39412)))

(declare-fun c!7758 () Bool)

(assert (=> b!59970 (= c!7758 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!59971 () Bool)

(declare-fun e!39409 () Bool)

(declare-fun e!39414 () Bool)

(assert (=> b!59971 (= e!39409 e!39414)))

(declare-fun c!7757 () Bool)

(declare-fun e!39411 () Bool)

(assert (=> b!59971 (= c!7757 e!39411)))

(declare-fun res!33227 () Bool)

(assert (=> b!59971 (=> (not res!33227) (not e!39411))))

(assert (=> b!59971 (= res!33227 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun d!11657 () Bool)

(assert (=> d!11657 e!39409))

(declare-fun res!33226 () Bool)

(assert (=> d!11657 (=> (not res!33226) (not e!39409))))

(declare-fun lt!24458 () ListLongMap!1377)

(assert (=> d!11657 (= res!33226 (not (contains!692 lt!24458 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!11657 (= lt!24458 e!39413)))

(declare-fun c!7756 () Bool)

(assert (=> d!11657 (= c!7756 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> d!11657 (validMask!0 (mask!5927 (v!2381 (underlying!225 thiss!992))))))

(assert (=> d!11657 (= (getCurrentListMapNoExtraKeys!44 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))) lt!24458)))

(declare-fun b!59972 () Bool)

(declare-fun res!33225 () Bool)

(assert (=> b!59972 (=> (not res!33225) (not e!39409))))

(assert (=> b!59972 (= res!33225 (not (contains!692 lt!24458 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!59973 () Bool)

(declare-fun lt!24457 () Unit!1553)

(declare-fun lt!24459 () Unit!1553)

(assert (=> b!59973 (= lt!24457 lt!24459)))

(declare-fun lt!24460 () V!2843)

(declare-fun lt!24461 () (_ BitVec 64))

(declare-fun lt!24462 () (_ BitVec 64))

(declare-fun lt!24456 () ListLongMap!1377)

(assert (=> b!59973 (not (contains!692 (+!81 lt!24456 (tuple2!2049 lt!24461 lt!24460)) lt!24462))))

(assert (=> b!59973 (= lt!24459 (addStillNotContains!17 lt!24456 lt!24461 lt!24460 lt!24462))))

(assert (=> b!59973 (= lt!24462 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!59973 (= lt!24460 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!59973 (= lt!24461 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!4533 () ListLongMap!1377)

(assert (=> b!59973 (= lt!24456 call!4533)))

(assert (=> b!59973 (= e!39412 (+!81 call!4533 (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!59974 () Bool)

(assert (=> b!59974 (= e!39412 call!4533)))

(declare-fun b!59975 () Bool)

(declare-fun e!39408 () Bool)

(assert (=> b!59975 (= e!39408 (isEmpty!299 lt!24458))))

(declare-fun bm!4530 () Bool)

(assert (=> bm!4530 (= call!4533 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun b!59976 () Bool)

(assert (=> b!59976 (= e!39413 (ListLongMap!1378 Nil!1450))))

(declare-fun b!59977 () Bool)

(assert (=> b!59977 (= e!39408 (= lt!24458 (getCurrentListMapNoExtraKeys!44 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (_values!2026 (v!2381 (underlying!225 thiss!992))) (mask!5927 (v!2381 (underlying!225 thiss!992))) (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) (minValue!1959 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!59978 () Bool)

(assert (=> b!59978 (= e!39411 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!59978 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!59979 () Bool)

(assert (=> b!59979 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> b!59979 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2011 (_values!2026 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun e!39410 () Bool)

(assert (=> b!59979 (= e!39410 (= (apply!66 lt!24458 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!59980 () Bool)

(assert (=> b!59980 (= e!39414 e!39408)))

(declare-fun c!7759 () Bool)

(assert (=> b!59980 (= c!7759 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!59981 () Bool)

(assert (=> b!59981 (= e!39414 e!39410)))

(assert (=> b!59981 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun res!33228 () Bool)

(assert (=> b!59981 (= res!33228 (contains!692 lt!24458 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!59981 (=> (not res!33228) (not e!39410))))

(assert (= (and d!11657 c!7756) b!59976))

(assert (= (and d!11657 (not c!7756)) b!59970))

(assert (= (and b!59970 c!7758) b!59973))

(assert (= (and b!59970 (not c!7758)) b!59974))

(assert (= (or b!59973 b!59974) bm!4530))

(assert (= (and d!11657 res!33226) b!59972))

(assert (= (and b!59972 res!33225) b!59971))

(assert (= (and b!59971 res!33227) b!59978))

(assert (= (and b!59971 c!7757) b!59981))

(assert (= (and b!59971 (not c!7757)) b!59980))

(assert (= (and b!59981 res!33228) b!59979))

(assert (= (and b!59980 c!7759) b!59977))

(assert (= (and b!59980 (not c!7759)) b!59975))

(declare-fun b_lambda!2649 () Bool)

(assert (=> (not b_lambda!2649) (not b!59973)))

(assert (=> b!59973 t!4796))

(declare-fun b_and!3637 () Bool)

(assert (= b_and!3633 (and (=> t!4796 result!2375) b_and!3637)))

(assert (=> b!59973 t!4798))

(declare-fun b_and!3639 () Bool)

(assert (= b_and!3635 (and (=> t!4798 result!2379) b_and!3639)))

(declare-fun b_lambda!2651 () Bool)

(assert (=> (not b_lambda!2651) (not b!59979)))

(assert (=> b!59979 t!4796))

(declare-fun b_and!3641 () Bool)

(assert (= b_and!3637 (and (=> t!4796 result!2375) b_and!3641)))

(assert (=> b!59979 t!4798))

(declare-fun b_and!3643 () Bool)

(assert (= b_and!3639 (and (=> t!4798 result!2379) b_and!3643)))

(declare-fun m!52263 () Bool)

(assert (=> d!11657 m!52263))

(assert (=> d!11657 m!50609))

(assert (=> b!59978 m!50907))

(assert (=> b!59978 m!50907))

(declare-fun m!52265 () Bool)

(assert (=> b!59978 m!52265))

(declare-fun m!52267 () Bool)

(assert (=> b!59975 m!52267))

(assert (=> b!59981 m!50907))

(assert (=> b!59981 m!50907))

(declare-fun m!52269 () Bool)

(assert (=> b!59981 m!52269))

(declare-fun m!52271 () Bool)

(assert (=> b!59977 m!52271))

(declare-fun m!52273 () Bool)

(assert (=> b!59972 m!52273))

(declare-fun m!52275 () Bool)

(assert (=> b!59979 m!52275))

(assert (=> b!59979 m!50617))

(declare-fun m!52277 () Bool)

(assert (=> b!59979 m!52277))

(assert (=> b!59979 m!52275))

(assert (=> b!59979 m!50617))

(assert (=> b!59979 m!50907))

(assert (=> b!59979 m!50907))

(declare-fun m!52279 () Bool)

(assert (=> b!59979 m!52279))

(assert (=> b!59973 m!52275))

(assert (=> b!59973 m!50617))

(assert (=> b!59973 m!52277))

(assert (=> b!59973 m!52275))

(assert (=> b!59973 m!50617))

(declare-fun m!52281 () Bool)

(assert (=> b!59973 m!52281))

(declare-fun m!52283 () Bool)

(assert (=> b!59973 m!52283))

(declare-fun m!52285 () Bool)

(assert (=> b!59973 m!52285))

(assert (=> b!59973 m!50907))

(declare-fun m!52287 () Bool)

(assert (=> b!59973 m!52287))

(assert (=> b!59973 m!52281))

(assert (=> bm!4530 m!52271))

(assert (=> b!59970 m!50907))

(assert (=> b!59970 m!50907))

(assert (=> b!59970 m!52265))

(assert (=> b!59322 d!11657))

(declare-fun d!11659 () Bool)

(declare-fun lt!24463 () Bool)

(assert (=> d!11659 (= lt!24463 (select (content!63 (toList!704 lt!23904)) (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun e!39415 () Bool)

(assert (=> d!11659 (= lt!24463 e!39415)))

(declare-fun res!33229 () Bool)

(assert (=> d!11659 (=> (not res!33229) (not e!39415))))

(assert (=> d!11659 (= res!33229 ((_ is Cons!1449) (toList!704 lt!23904)))))

(assert (=> d!11659 (= (contains!694 (toList!704 lt!23904) (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24463)))

(declare-fun b!59982 () Bool)

(declare-fun e!39416 () Bool)

(assert (=> b!59982 (= e!39415 e!39416)))

(declare-fun res!33230 () Bool)

(assert (=> b!59982 (=> res!33230 e!39416)))

(assert (=> b!59982 (= res!33230 (= (h!2030 (toList!704 lt!23904)) (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!59983 () Bool)

(assert (=> b!59983 (= e!39416 (contains!694 (t!4799 (toList!704 lt!23904)) (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (= (and d!11659 res!33229) b!59982))

(assert (= (and b!59982 (not res!33230)) b!59983))

(declare-fun m!52289 () Bool)

(assert (=> d!11659 m!52289))

(declare-fun m!52291 () Bool)

(assert (=> d!11659 m!52291))

(declare-fun m!52293 () Bool)

(assert (=> b!59983 m!52293))

(assert (=> b!59209 d!11659))

(declare-fun bm!4531 () Bool)

(declare-fun call!4534 () (_ BitVec 32))

(assert (=> bm!4531 (= call!4534 (arrayCountValidKeys!0 (_keys!3667 (_2!1033 lt!23848)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (_2!1033 lt!23848)))))))

(declare-fun d!11661 () Bool)

(declare-fun lt!24464 () (_ BitVec 32))

(assert (=> d!11661 (and (bvsge lt!24464 #b00000000000000000000000000000000) (bvsle lt!24464 (bvsub (size!2010 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000)))))

(declare-fun e!39418 () (_ BitVec 32))

(assert (=> d!11661 (= lt!24464 e!39418)))

(declare-fun c!7761 () Bool)

(assert (=> d!11661 (= c!7761 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))))))

(assert (=> d!11661 (and (bvsle #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2010 (_keys!3667 (_2!1033 lt!23848))) (size!2010 (_keys!3667 (_2!1033 lt!23848)))))))

(assert (=> d!11661 (= (arrayCountValidKeys!0 (_keys!3667 (_2!1033 lt!23848)) #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))) lt!24464)))

(declare-fun b!59984 () Bool)

(declare-fun e!39417 () (_ BitVec 32))

(assert (=> b!59984 (= e!39418 e!39417)))

(declare-fun c!7760 () Bool)

(assert (=> b!59984 (= c!7760 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000)))))

(declare-fun b!59985 () Bool)

(assert (=> b!59985 (= e!39417 (bvadd #b00000000000000000000000000000001 call!4534))))

(declare-fun b!59986 () Bool)

(assert (=> b!59986 (= e!39418 #b00000000000000000000000000000000)))

(declare-fun b!59987 () Bool)

(assert (=> b!59987 (= e!39417 call!4534)))

(assert (= (and d!11661 c!7761) b!59986))

(assert (= (and d!11661 (not c!7761)) b!59984))

(assert (= (and b!59984 c!7760) b!59985))

(assert (= (and b!59984 (not c!7760)) b!59987))

(assert (= (or b!59985 b!59987) bm!4531))

(declare-fun m!52295 () Bool)

(assert (=> bm!4531 m!52295))

(assert (=> b!59984 m!51723))

(assert (=> b!59984 m!51723))

(assert (=> b!59984 m!51725))

(assert (=> b!59172 d!11661))

(assert (=> d!11347 d!11417))

(declare-fun d!11663 () Bool)

(assert (=> d!11663 (= (get!1083 (getValueByKey!123 (toList!704 lt!23746) lt!23749)) (v!2385 (getValueByKey!123 (toList!704 lt!23746) lt!23749)))))

(assert (=> d!11387 d!11663))

(declare-fun b!59991 () Bool)

(declare-fun e!39420 () Option!129)

(assert (=> b!59991 (= e!39420 None!127)))

(declare-fun d!11665 () Bool)

(declare-fun c!7762 () Bool)

(assert (=> d!11665 (= c!7762 (and ((_ is Cons!1449) (toList!704 lt!23746)) (= (_1!1034 (h!2030 (toList!704 lt!23746))) lt!23749)))))

(declare-fun e!39419 () Option!129)

(assert (=> d!11665 (= (getValueByKey!123 (toList!704 lt!23746) lt!23749) e!39419)))

(declare-fun b!59988 () Bool)

(assert (=> b!59988 (= e!39419 (Some!128 (_2!1034 (h!2030 (toList!704 lt!23746)))))))

(declare-fun b!59990 () Bool)

(assert (=> b!59990 (= e!39420 (getValueByKey!123 (t!4799 (toList!704 lt!23746)) lt!23749))))

(declare-fun b!59989 () Bool)

(assert (=> b!59989 (= e!39419 e!39420)))

(declare-fun c!7763 () Bool)

(assert (=> b!59989 (= c!7763 (and ((_ is Cons!1449) (toList!704 lt!23746)) (not (= (_1!1034 (h!2030 (toList!704 lt!23746))) lt!23749))))))

(assert (= (and d!11665 c!7762) b!59988))

(assert (= (and d!11665 (not c!7762)) b!59989))

(assert (= (and b!59989 c!7763) b!59990))

(assert (= (and b!59989 (not c!7763)) b!59991))

(declare-fun m!52297 () Bool)

(assert (=> b!59990 m!52297))

(assert (=> d!11387 d!11665))

(declare-fun b!59995 () Bool)

(declare-fun e!39422 () Option!129)

(assert (=> b!59995 (= e!39422 None!127)))

(declare-fun c!7764 () Bool)

(declare-fun d!11667 () Bool)

(assert (=> d!11667 (= c!7764 (and ((_ is Cons!1449) (toList!704 lt!24112)) (= (_1!1034 (h!2030 (toList!704 lt!24112))) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!39421 () Option!129)

(assert (=> d!11667 (= (getValueByKey!123 (toList!704 lt!24112) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!39421)))

(declare-fun b!59992 () Bool)

(assert (=> b!59992 (= e!39421 (Some!128 (_2!1034 (h!2030 (toList!704 lt!24112)))))))

(declare-fun b!59994 () Bool)

(assert (=> b!59994 (= e!39422 (getValueByKey!123 (t!4799 (toList!704 lt!24112)) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!59993 () Bool)

(assert (=> b!59993 (= e!39421 e!39422)))

(declare-fun c!7765 () Bool)

(assert (=> b!59993 (= c!7765 (and ((_ is Cons!1449) (toList!704 lt!24112)) (not (= (_1!1034 (h!2030 (toList!704 lt!24112))) (_1!1034 (ite c!7529 (ite c!7521 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!11667 c!7764) b!59992))

(assert (= (and d!11667 (not c!7764)) b!59993))

(assert (= (and b!59993 c!7765) b!59994))

(assert (= (and b!59993 (not c!7765)) b!59995))

(declare-fun m!52299 () Bool)

(assert (=> b!59994 m!52299))

(assert (=> b!59442 d!11667))

(declare-fun d!11669 () Bool)

(assert (=> d!11669 (= (isDefined!77 (getValueByKey!123 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))) (not (isEmpty!298 (getValueByKey!123 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))))

(declare-fun bs!2596 () Bool)

(assert (= bs!2596 d!11669))

(assert (=> bs!2596 m!51375))

(declare-fun m!52301 () Bool)

(assert (=> bs!2596 m!52301))

(assert (=> b!59484 d!11669))

(declare-fun b!59999 () Bool)

(declare-fun e!39424 () Option!129)

(assert (=> b!59999 (= e!39424 None!127)))

(declare-fun c!7766 () Bool)

(declare-fun d!11671 () Bool)

(assert (=> d!11671 (= c!7766 (and ((_ is Cons!1449) (toList!704 call!4404)) (= (_1!1034 (h!2030 (toList!704 call!4404))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(declare-fun e!39423 () Option!129)

(assert (=> d!11671 (= (getValueByKey!123 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) e!39423)))

(declare-fun b!59996 () Bool)

(assert (=> b!59996 (= e!39423 (Some!128 (_2!1034 (h!2030 (toList!704 call!4404)))))))

(declare-fun b!59998 () Bool)

(assert (=> b!59998 (= e!39424 (getValueByKey!123 (t!4799 (toList!704 call!4404)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!59997 () Bool)

(assert (=> b!59997 (= e!39423 e!39424)))

(declare-fun c!7767 () Bool)

(assert (=> b!59997 (= c!7767 (and ((_ is Cons!1449) (toList!704 call!4404)) (not (= (_1!1034 (h!2030 (toList!704 call!4404))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))))

(assert (= (and d!11671 c!7766) b!59996))

(assert (= (and d!11671 (not c!7766)) b!59997))

(assert (= (and b!59997 c!7767) b!59998))

(assert (= (and b!59997 (not c!7767)) b!59999))

(assert (=> b!59998 m!50591))

(declare-fun m!52303 () Bool)

(assert (=> b!59998 m!52303))

(assert (=> b!59484 d!11671))

(declare-fun d!11673 () Bool)

(assert (=> d!11673 (= (apply!66 lt!23868 lt!23871) (get!1083 (getValueByKey!123 (toList!704 lt!23868) lt!23871)))))

(declare-fun bs!2597 () Bool)

(assert (= bs!2597 d!11673))

(declare-fun m!52305 () Bool)

(assert (=> bs!2597 m!52305))

(assert (=> bs!2597 m!52305))

(declare-fun m!52307 () Bool)

(assert (=> bs!2597 m!52307))

(assert (=> b!59168 d!11673))

(declare-fun d!11675 () Bool)

(declare-fun e!39425 () Bool)

(assert (=> d!11675 e!39425))

(declare-fun res!33232 () Bool)

(assert (=> d!11675 (=> (not res!33232) (not e!39425))))

(declare-fun lt!24468 () ListLongMap!1377)

(assert (=> d!11675 (= res!33232 (contains!692 lt!24468 (_1!1034 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16)))))))

(declare-fun lt!24465 () List!1453)

(assert (=> d!11675 (= lt!24468 (ListLongMap!1378 lt!24465))))

(declare-fun lt!24467 () Unit!1553)

(declare-fun lt!24466 () Unit!1553)

(assert (=> d!11675 (= lt!24467 lt!24466)))

(assert (=> d!11675 (= (getValueByKey!123 lt!24465 (_1!1034 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11675 (= lt!24466 (lemmaContainsTupThenGetReturnValue!42 lt!24465 (_1!1034 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11675 (= lt!24465 (insertStrictlySorted!44 (toList!704 lt!23879) (_1!1034 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11675 (= (+!81 lt!23879 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16))) lt!24468)))

(declare-fun b!60000 () Bool)

(declare-fun res!33231 () Bool)

(assert (=> b!60000 (=> (not res!33231) (not e!39425))))

(assert (=> b!60000 (= res!33231 (= (getValueByKey!123 (toList!704 lt!24468) (_1!1034 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16))))))))

(declare-fun b!60001 () Bool)

(assert (=> b!60001 (= e!39425 (contains!694 (toList!704 lt!24468) (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16))))))

(assert (= (and d!11675 res!33232) b!60000))

(assert (= (and b!60000 res!33231) b!60001))

(declare-fun m!52309 () Bool)

(assert (=> d!11675 m!52309))

(declare-fun m!52311 () Bool)

(assert (=> d!11675 m!52311))

(declare-fun m!52313 () Bool)

(assert (=> d!11675 m!52313))

(declare-fun m!52315 () Bool)

(assert (=> d!11675 m!52315))

(declare-fun m!52317 () Bool)

(assert (=> b!60000 m!52317))

(declare-fun m!52319 () Bool)

(assert (=> b!60001 m!52319))

(assert (=> b!59168 d!11675))

(declare-fun d!11677 () Bool)

(declare-fun e!39426 () Bool)

(assert (=> d!11677 e!39426))

(declare-fun res!33233 () Bool)

(assert (=> d!11677 (=> res!33233 e!39426)))

(declare-fun lt!24469 () Bool)

(assert (=> d!11677 (= res!33233 (not lt!24469))))

(declare-fun lt!24472 () Bool)

(assert (=> d!11677 (= lt!24469 lt!24472)))

(declare-fun lt!24471 () Unit!1553)

(declare-fun e!39427 () Unit!1553)

(assert (=> d!11677 (= lt!24471 e!39427)))

(declare-fun c!7768 () Bool)

(assert (=> d!11677 (= c!7768 lt!24472)))

(assert (=> d!11677 (= lt!24472 (containsKey!127 (toList!704 (+!81 lt!23879 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16)))) lt!23861))))

(assert (=> d!11677 (= (contains!692 (+!81 lt!23879 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16))) lt!23861) lt!24469)))

(declare-fun b!60002 () Bool)

(declare-fun lt!24470 () Unit!1553)

(assert (=> b!60002 (= e!39427 lt!24470)))

(assert (=> b!60002 (= lt!24470 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 (+!81 lt!23879 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16)))) lt!23861))))

(assert (=> b!60002 (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!23879 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16)))) lt!23861))))

(declare-fun b!60003 () Bool)

(declare-fun Unit!1597 () Unit!1553)

(assert (=> b!60003 (= e!39427 Unit!1597)))

(declare-fun b!60004 () Bool)

(assert (=> b!60004 (= e!39426 (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!23879 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16)))) lt!23861)))))

(assert (= (and d!11677 c!7768) b!60002))

(assert (= (and d!11677 (not c!7768)) b!60003))

(assert (= (and d!11677 (not res!33233)) b!60004))

(declare-fun m!52321 () Bool)

(assert (=> d!11677 m!52321))

(declare-fun m!52323 () Bool)

(assert (=> b!60002 m!52323))

(declare-fun m!52325 () Bool)

(assert (=> b!60002 m!52325))

(assert (=> b!60002 m!52325))

(declare-fun m!52327 () Bool)

(assert (=> b!60002 m!52327))

(assert (=> b!60004 m!52325))

(assert (=> b!60004 m!52325))

(assert (=> b!60004 m!52327))

(assert (=> b!59168 d!11677))

(declare-fun d!11679 () Bool)

(assert (=> d!11679 (= (apply!66 lt!23866 lt!23872) (get!1083 (getValueByKey!123 (toList!704 lt!23866) lt!23872)))))

(declare-fun bs!2598 () Bool)

(assert (= bs!2598 d!11679))

(declare-fun m!52329 () Bool)

(assert (=> bs!2598 m!52329))

(assert (=> bs!2598 m!52329))

(declare-fun m!52331 () Bool)

(assert (=> bs!2598 m!52331))

(assert (=> b!59168 d!11679))

(declare-fun d!11681 () Bool)

(assert (=> d!11681 (= (apply!66 (+!81 lt!23866 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16))) lt!23872) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23866 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16)))) lt!23872)))))

(declare-fun bs!2599 () Bool)

(assert (= bs!2599 d!11681))

(declare-fun m!52333 () Bool)

(assert (=> bs!2599 m!52333))

(assert (=> bs!2599 m!52333))

(declare-fun m!52335 () Bool)

(assert (=> bs!2599 m!52335))

(assert (=> b!59168 d!11681))

(declare-fun d!11683 () Bool)

(declare-fun e!39428 () Bool)

(assert (=> d!11683 e!39428))

(declare-fun res!33235 () Bool)

(assert (=> d!11683 (=> (not res!33235) (not e!39428))))

(declare-fun lt!24476 () ListLongMap!1377)

(assert (=> d!11683 (= res!33235 (contains!692 lt!24476 (_1!1034 (tuple2!2049 lt!23873 (minValue!1959 newMap!16)))))))

(declare-fun lt!24473 () List!1453)

(assert (=> d!11683 (= lt!24476 (ListLongMap!1378 lt!24473))))

(declare-fun lt!24475 () Unit!1553)

(declare-fun lt!24474 () Unit!1553)

(assert (=> d!11683 (= lt!24475 lt!24474)))

(assert (=> d!11683 (= (getValueByKey!123 lt!24473 (_1!1034 (tuple2!2049 lt!23873 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!23873 (minValue!1959 newMap!16)))))))

(assert (=> d!11683 (= lt!24474 (lemmaContainsTupThenGetReturnValue!42 lt!24473 (_1!1034 (tuple2!2049 lt!23873 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!23873 (minValue!1959 newMap!16)))))))

(assert (=> d!11683 (= lt!24473 (insertStrictlySorted!44 (toList!704 lt!23868) (_1!1034 (tuple2!2049 lt!23873 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!23873 (minValue!1959 newMap!16)))))))

(assert (=> d!11683 (= (+!81 lt!23868 (tuple2!2049 lt!23873 (minValue!1959 newMap!16))) lt!24476)))

(declare-fun b!60005 () Bool)

(declare-fun res!33234 () Bool)

(assert (=> b!60005 (=> (not res!33234) (not e!39428))))

(assert (=> b!60005 (= res!33234 (= (getValueByKey!123 (toList!704 lt!24476) (_1!1034 (tuple2!2049 lt!23873 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!23873 (minValue!1959 newMap!16))))))))

(declare-fun b!60006 () Bool)

(assert (=> b!60006 (= e!39428 (contains!694 (toList!704 lt!24476) (tuple2!2049 lt!23873 (minValue!1959 newMap!16))))))

(assert (= (and d!11683 res!33235) b!60005))

(assert (= (and b!60005 res!33234) b!60006))

(declare-fun m!52337 () Bool)

(assert (=> d!11683 m!52337))

(declare-fun m!52339 () Bool)

(assert (=> d!11683 m!52339))

(declare-fun m!52341 () Bool)

(assert (=> d!11683 m!52341))

(declare-fun m!52343 () Bool)

(assert (=> d!11683 m!52343))

(declare-fun m!52345 () Bool)

(assert (=> b!60005 m!52345))

(declare-fun m!52347 () Bool)

(assert (=> b!60006 m!52347))

(assert (=> b!59168 d!11683))

(declare-fun d!11685 () Bool)

(assert (=> d!11685 (= (apply!66 lt!23876 lt!23867) (get!1083 (getValueByKey!123 (toList!704 lt!23876) lt!23867)))))

(declare-fun bs!2600 () Bool)

(assert (= bs!2600 d!11685))

(declare-fun m!52349 () Bool)

(assert (=> bs!2600 m!52349))

(assert (=> bs!2600 m!52349))

(declare-fun m!52351 () Bool)

(assert (=> bs!2600 m!52351))

(assert (=> b!59168 d!11685))

(declare-fun d!11687 () Bool)

(assert (=> d!11687 (= (apply!66 (+!81 lt!23876 (tuple2!2049 lt!23863 (minValue!1959 newMap!16))) lt!23867) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23876 (tuple2!2049 lt!23863 (minValue!1959 newMap!16)))) lt!23867)))))

(declare-fun bs!2601 () Bool)

(assert (= bs!2601 d!11687))

(declare-fun m!52353 () Bool)

(assert (=> bs!2601 m!52353))

(assert (=> bs!2601 m!52353))

(declare-fun m!52355 () Bool)

(assert (=> bs!2601 m!52355))

(assert (=> b!59168 d!11687))

(declare-fun d!11689 () Bool)

(declare-fun e!39429 () Bool)

(assert (=> d!11689 e!39429))

(declare-fun res!33237 () Bool)

(assert (=> d!11689 (=> (not res!33237) (not e!39429))))

(declare-fun lt!24480 () ListLongMap!1377)

(assert (=> d!11689 (= res!33237 (contains!692 lt!24480 (_1!1034 (tuple2!2049 lt!23863 (minValue!1959 newMap!16)))))))

(declare-fun lt!24477 () List!1453)

(assert (=> d!11689 (= lt!24480 (ListLongMap!1378 lt!24477))))

(declare-fun lt!24479 () Unit!1553)

(declare-fun lt!24478 () Unit!1553)

(assert (=> d!11689 (= lt!24479 lt!24478)))

(assert (=> d!11689 (= (getValueByKey!123 lt!24477 (_1!1034 (tuple2!2049 lt!23863 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!23863 (minValue!1959 newMap!16)))))))

(assert (=> d!11689 (= lt!24478 (lemmaContainsTupThenGetReturnValue!42 lt!24477 (_1!1034 (tuple2!2049 lt!23863 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!23863 (minValue!1959 newMap!16)))))))

(assert (=> d!11689 (= lt!24477 (insertStrictlySorted!44 (toList!704 lt!23876) (_1!1034 (tuple2!2049 lt!23863 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!23863 (minValue!1959 newMap!16)))))))

(assert (=> d!11689 (= (+!81 lt!23876 (tuple2!2049 lt!23863 (minValue!1959 newMap!16))) lt!24480)))

(declare-fun b!60007 () Bool)

(declare-fun res!33236 () Bool)

(assert (=> b!60007 (=> (not res!33236) (not e!39429))))

(assert (=> b!60007 (= res!33236 (= (getValueByKey!123 (toList!704 lt!24480) (_1!1034 (tuple2!2049 lt!23863 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!23863 (minValue!1959 newMap!16))))))))

(declare-fun b!60008 () Bool)

(assert (=> b!60008 (= e!39429 (contains!694 (toList!704 lt!24480) (tuple2!2049 lt!23863 (minValue!1959 newMap!16))))))

(assert (= (and d!11689 res!33237) b!60007))

(assert (= (and b!60007 res!33236) b!60008))

(declare-fun m!52357 () Bool)

(assert (=> d!11689 m!52357))

(declare-fun m!52359 () Bool)

(assert (=> d!11689 m!52359))

(declare-fun m!52361 () Bool)

(assert (=> d!11689 m!52361))

(declare-fun m!52363 () Bool)

(assert (=> d!11689 m!52363))

(declare-fun m!52365 () Bool)

(assert (=> b!60007 m!52365))

(declare-fun m!52367 () Bool)

(assert (=> b!60008 m!52367))

(assert (=> b!59168 d!11689))

(declare-fun d!11691 () Bool)

(declare-fun e!39430 () Bool)

(assert (=> d!11691 e!39430))

(declare-fun res!33239 () Bool)

(assert (=> d!11691 (=> (not res!33239) (not e!39430))))

(declare-fun lt!24484 () ListLongMap!1377)

(assert (=> d!11691 (= res!33239 (contains!692 lt!24484 (_1!1034 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16)))))))

(declare-fun lt!24481 () List!1453)

(assert (=> d!11691 (= lt!24484 (ListLongMap!1378 lt!24481))))

(declare-fun lt!24483 () Unit!1553)

(declare-fun lt!24482 () Unit!1553)

(assert (=> d!11691 (= lt!24483 lt!24482)))

(assert (=> d!11691 (= (getValueByKey!123 lt!24481 (_1!1034 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11691 (= lt!24482 (lemmaContainsTupThenGetReturnValue!42 lt!24481 (_1!1034 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11691 (= lt!24481 (insertStrictlySorted!44 (toList!704 lt!23866) (_1!1034 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11691 (= (+!81 lt!23866 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16))) lt!24484)))

(declare-fun b!60009 () Bool)

(declare-fun res!33238 () Bool)

(assert (=> b!60009 (=> (not res!33238) (not e!39430))))

(assert (=> b!60009 (= res!33238 (= (getValueByKey!123 (toList!704 lt!24484) (_1!1034 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16))))))))

(declare-fun b!60010 () Bool)

(assert (=> b!60010 (= e!39430 (contains!694 (toList!704 lt!24484) (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16))))))

(assert (= (and d!11691 res!33239) b!60009))

(assert (= (and b!60009 res!33238) b!60010))

(declare-fun m!52369 () Bool)

(assert (=> d!11691 m!52369))

(declare-fun m!52371 () Bool)

(assert (=> d!11691 m!52371))

(declare-fun m!52373 () Bool)

(assert (=> d!11691 m!52373))

(declare-fun m!52375 () Bool)

(assert (=> d!11691 m!52375))

(declare-fun m!52377 () Bool)

(assert (=> b!60009 m!52377))

(declare-fun m!52379 () Bool)

(assert (=> b!60010 m!52379))

(assert (=> b!59168 d!11691))

(declare-fun b!60011 () Bool)

(declare-fun e!39436 () ListLongMap!1377)

(declare-fun e!39435 () ListLongMap!1377)

(assert (=> b!60011 (= e!39436 e!39435)))

(declare-fun c!7771 () Bool)

(assert (=> b!60011 (= c!7771 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!60012 () Bool)

(declare-fun e!39432 () Bool)

(declare-fun e!39437 () Bool)

(assert (=> b!60012 (= e!39432 e!39437)))

(declare-fun c!7770 () Bool)

(declare-fun e!39434 () Bool)

(assert (=> b!60012 (= c!7770 e!39434)))

(declare-fun res!33242 () Bool)

(assert (=> b!60012 (=> (not res!33242) (not e!39434))))

(assert (=> b!60012 (= res!33242 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun d!11693 () Bool)

(assert (=> d!11693 e!39432))

(declare-fun res!33241 () Bool)

(assert (=> d!11693 (=> (not res!33241) (not e!39432))))

(declare-fun lt!24487 () ListLongMap!1377)

(assert (=> d!11693 (= res!33241 (not (contains!692 lt!24487 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!11693 (= lt!24487 e!39436)))

(declare-fun c!7769 () Bool)

(assert (=> d!11693 (= c!7769 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11693 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11693 (= (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!24487)))

(declare-fun b!60013 () Bool)

(declare-fun res!33240 () Bool)

(assert (=> b!60013 (=> (not res!33240) (not e!39432))))

(assert (=> b!60013 (= res!33240 (not (contains!692 lt!24487 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!60014 () Bool)

(declare-fun lt!24486 () Unit!1553)

(declare-fun lt!24488 () Unit!1553)

(assert (=> b!60014 (= lt!24486 lt!24488)))

(declare-fun lt!24490 () (_ BitVec 64))

(declare-fun lt!24491 () (_ BitVec 64))

(declare-fun lt!24489 () V!2843)

(declare-fun lt!24485 () ListLongMap!1377)

(assert (=> b!60014 (not (contains!692 (+!81 lt!24485 (tuple2!2049 lt!24490 lt!24489)) lt!24491))))

(assert (=> b!60014 (= lt!24488 (addStillNotContains!17 lt!24485 lt!24490 lt!24489 lt!24491))))

(assert (=> b!60014 (= lt!24491 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!60014 (= lt!24489 (get!1080 (select (arr!1781 (_values!2026 newMap!16)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!60014 (= lt!24490 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!4535 () ListLongMap!1377)

(assert (=> b!60014 (= lt!24485 call!4535)))

(assert (=> b!60014 (= e!39435 (+!81 call!4535 (tuple2!2049 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) (get!1080 (select (arr!1781 (_values!2026 newMap!16)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!60015 () Bool)

(assert (=> b!60015 (= e!39435 call!4535)))

(declare-fun b!60016 () Bool)

(declare-fun e!39431 () Bool)

(assert (=> b!60016 (= e!39431 (isEmpty!299 lt!24487))))

(declare-fun bm!4532 () Bool)

(assert (=> bm!4532 (= call!4535 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2043 newMap!16)))))

(declare-fun b!60017 () Bool)

(assert (=> b!60017 (= e!39436 (ListLongMap!1378 Nil!1450))))

(declare-fun b!60018 () Bool)

(assert (=> b!60018 (= e!39431 (= lt!24487 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2043 newMap!16))))))

(declare-fun b!60019 () Bool)

(assert (=> b!60019 (= e!39434 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!60019 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!60020 () Bool)

(assert (=> b!60020 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (=> b!60020 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 (_values!2026 newMap!16))))))

(declare-fun e!39433 () Bool)

(assert (=> b!60020 (= e!39433 (= (apply!66 lt!24487 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 (_values!2026 newMap!16)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!60021 () Bool)

(assert (=> b!60021 (= e!39437 e!39431)))

(declare-fun c!7772 () Bool)

(assert (=> b!60021 (= c!7772 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!60022 () Bool)

(assert (=> b!60022 (= e!39437 e!39433)))

(assert (=> b!60022 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun res!33243 () Bool)

(assert (=> b!60022 (= res!33243 (contains!692 lt!24487 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!60022 (=> (not res!33243) (not e!39433))))

(assert (= (and d!11693 c!7769) b!60017))

(assert (= (and d!11693 (not c!7769)) b!60011))

(assert (= (and b!60011 c!7771) b!60014))

(assert (= (and b!60011 (not c!7771)) b!60015))

(assert (= (or b!60014 b!60015) bm!4532))

(assert (= (and d!11693 res!33241) b!60013))

(assert (= (and b!60013 res!33240) b!60012))

(assert (= (and b!60012 res!33242) b!60019))

(assert (= (and b!60012 c!7770) b!60022))

(assert (= (and b!60012 (not c!7770)) b!60021))

(assert (= (and b!60022 res!33243) b!60020))

(assert (= (and b!60021 c!7772) b!60018))

(assert (= (and b!60021 (not c!7772)) b!60016))

(declare-fun b_lambda!2653 () Bool)

(assert (=> (not b_lambda!2653) (not b!60014)))

(assert (=> b!60014 t!4806))

(declare-fun b_and!3645 () Bool)

(assert (= b_and!3641 (and (=> t!4806 result!2389) b_and!3645)))

(assert (=> b!60014 t!4808))

(declare-fun b_and!3647 () Bool)

(assert (= b_and!3643 (and (=> t!4808 result!2391) b_and!3647)))

(declare-fun b_lambda!2655 () Bool)

(assert (=> (not b_lambda!2655) (not b!60020)))

(assert (=> b!60020 t!4806))

(declare-fun b_and!3649 () Bool)

(assert (= b_and!3645 (and (=> t!4806 result!2389) b_and!3649)))

(assert (=> b!60020 t!4808))

(declare-fun b_and!3651 () Bool)

(assert (= b_and!3647 (and (=> t!4808 result!2391) b_and!3651)))

(declare-fun m!52381 () Bool)

(assert (=> d!11693 m!52381))

(assert (=> d!11693 m!50833))

(assert (=> b!60019 m!50843))

(assert (=> b!60019 m!50843))

(assert (=> b!60019 m!50853))

(declare-fun m!52383 () Bool)

(assert (=> b!60016 m!52383))

(assert (=> b!60022 m!50843))

(assert (=> b!60022 m!50843))

(declare-fun m!52385 () Bool)

(assert (=> b!60022 m!52385))

(declare-fun m!52387 () Bool)

(assert (=> b!60018 m!52387))

(declare-fun m!52389 () Bool)

(assert (=> b!60013 m!52389))

(assert (=> b!60020 m!50847))

(assert (=> b!60020 m!50849))

(assert (=> b!60020 m!50851))

(assert (=> b!60020 m!50847))

(assert (=> b!60020 m!50849))

(assert (=> b!60020 m!50843))

(assert (=> b!60020 m!50843))

(declare-fun m!52391 () Bool)

(assert (=> b!60020 m!52391))

(assert (=> b!60014 m!50847))

(assert (=> b!60014 m!50849))

(assert (=> b!60014 m!50851))

(assert (=> b!60014 m!50847))

(assert (=> b!60014 m!50849))

(declare-fun m!52393 () Bool)

(assert (=> b!60014 m!52393))

(declare-fun m!52395 () Bool)

(assert (=> b!60014 m!52395))

(declare-fun m!52397 () Bool)

(assert (=> b!60014 m!52397))

(assert (=> b!60014 m!50843))

(declare-fun m!52399 () Bool)

(assert (=> b!60014 m!52399))

(assert (=> b!60014 m!52393))

(assert (=> bm!4532 m!52387))

(assert (=> b!60011 m!50843))

(assert (=> b!60011 m!50843))

(assert (=> b!60011 m!50853))

(assert (=> b!59168 d!11693))

(declare-fun d!11695 () Bool)

(assert (=> d!11695 (= (apply!66 (+!81 lt!23876 (tuple2!2049 lt!23863 (minValue!1959 newMap!16))) lt!23867) (apply!66 lt!23876 lt!23867))))

(declare-fun lt!24492 () Unit!1553)

(assert (=> d!11695 (= lt!24492 (choose!317 lt!23876 lt!23863 (minValue!1959 newMap!16) lt!23867))))

(declare-fun e!39438 () Bool)

(assert (=> d!11695 e!39438))

(declare-fun res!33244 () Bool)

(assert (=> d!11695 (=> (not res!33244) (not e!39438))))

(assert (=> d!11695 (= res!33244 (contains!692 lt!23876 lt!23867))))

(assert (=> d!11695 (= (addApplyDifferent!42 lt!23876 lt!23863 (minValue!1959 newMap!16) lt!23867) lt!24492)))

(declare-fun b!60023 () Bool)

(assert (=> b!60023 (= e!39438 (not (= lt!23867 lt!23863)))))

(assert (= (and d!11695 res!33244) b!60023))

(declare-fun m!52401 () Bool)

(assert (=> d!11695 m!52401))

(assert (=> d!11695 m!50863))

(assert (=> d!11695 m!50863))

(assert (=> d!11695 m!50869))

(assert (=> d!11695 m!50873))

(declare-fun m!52403 () Bool)

(assert (=> d!11695 m!52403))

(assert (=> b!59168 d!11695))

(declare-fun d!11697 () Bool)

(assert (=> d!11697 (contains!692 (+!81 lt!23879 (tuple2!2049 lt!23878 (zeroValue!1959 newMap!16))) lt!23861)))

(declare-fun lt!24493 () Unit!1553)

(assert (=> d!11697 (= lt!24493 (choose!318 lt!23879 lt!23878 (zeroValue!1959 newMap!16) lt!23861))))

(assert (=> d!11697 (contains!692 lt!23879 lt!23861)))

(assert (=> d!11697 (= (addStillContains!42 lt!23879 lt!23878 (zeroValue!1959 newMap!16) lt!23861) lt!24493)))

(declare-fun bs!2602 () Bool)

(assert (= bs!2602 d!11697))

(assert (=> bs!2602 m!50883))

(assert (=> bs!2602 m!50883))

(assert (=> bs!2602 m!50885))

(declare-fun m!52405 () Bool)

(assert (=> bs!2602 m!52405))

(declare-fun m!52407 () Bool)

(assert (=> bs!2602 m!52407))

(assert (=> b!59168 d!11697))

(declare-fun d!11699 () Bool)

(assert (=> d!11699 (= (apply!66 (+!81 lt!23868 (tuple2!2049 lt!23873 (minValue!1959 newMap!16))) lt!23871) (apply!66 lt!23868 lt!23871))))

(declare-fun lt!24494 () Unit!1553)

(assert (=> d!11699 (= lt!24494 (choose!317 lt!23868 lt!23873 (minValue!1959 newMap!16) lt!23871))))

(declare-fun e!39439 () Bool)

(assert (=> d!11699 e!39439))

(declare-fun res!33245 () Bool)

(assert (=> d!11699 (=> (not res!33245) (not e!39439))))

(assert (=> d!11699 (= res!33245 (contains!692 lt!23868 lt!23871))))

(assert (=> d!11699 (= (addApplyDifferent!42 lt!23868 lt!23873 (minValue!1959 newMap!16) lt!23871) lt!24494)))

(declare-fun b!60024 () Bool)

(assert (=> b!60024 (= e!39439 (not (= lt!23871 lt!23873)))))

(assert (= (and d!11699 res!33245) b!60024))

(declare-fun m!52409 () Bool)

(assert (=> d!11699 m!52409))

(assert (=> d!11699 m!50857))

(assert (=> d!11699 m!50857))

(assert (=> d!11699 m!50859))

(assert (=> d!11699 m!50879))

(declare-fun m!52411 () Bool)

(assert (=> d!11699 m!52411))

(assert (=> b!59168 d!11699))

(declare-fun d!11701 () Bool)

(assert (=> d!11701 (= (apply!66 (+!81 lt!23866 (tuple2!2049 lt!23877 (zeroValue!1959 newMap!16))) lt!23872) (apply!66 lt!23866 lt!23872))))

(declare-fun lt!24495 () Unit!1553)

(assert (=> d!11701 (= lt!24495 (choose!317 lt!23866 lt!23877 (zeroValue!1959 newMap!16) lt!23872))))

(declare-fun e!39440 () Bool)

(assert (=> d!11701 e!39440))

(declare-fun res!33246 () Bool)

(assert (=> d!11701 (=> (not res!33246) (not e!39440))))

(assert (=> d!11701 (= res!33246 (contains!692 lt!23866 lt!23872))))

(assert (=> d!11701 (= (addApplyDifferent!42 lt!23866 lt!23877 (zeroValue!1959 newMap!16) lt!23872) lt!24495)))

(declare-fun b!60025 () Bool)

(assert (=> b!60025 (= e!39440 (not (= lt!23872 lt!23877)))))

(assert (= (and d!11701 res!33246) b!60025))

(declare-fun m!52413 () Bool)

(assert (=> d!11701 m!52413))

(assert (=> d!11701 m!50877))

(assert (=> d!11701 m!50877))

(assert (=> d!11701 m!50887))

(assert (=> d!11701 m!50871))

(declare-fun m!52415 () Bool)

(assert (=> d!11701 m!52415))

(assert (=> b!59168 d!11701))

(declare-fun d!11703 () Bool)

(assert (=> d!11703 (= (apply!66 (+!81 lt!23868 (tuple2!2049 lt!23873 (minValue!1959 newMap!16))) lt!23871) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23868 (tuple2!2049 lt!23873 (minValue!1959 newMap!16)))) lt!23871)))))

(declare-fun bs!2603 () Bool)

(assert (= bs!2603 d!11703))

(declare-fun m!52417 () Bool)

(assert (=> bs!2603 m!52417))

(assert (=> bs!2603 m!52417))

(declare-fun m!52419 () Bool)

(assert (=> bs!2603 m!52419))

(assert (=> b!59168 d!11703))

(declare-fun d!11705 () Bool)

(assert (=> d!11705 (= (get!1083 (getValueByKey!123 (toList!704 lt!23744) lt!23750)) (v!2385 (getValueByKey!123 (toList!704 lt!23744) lt!23750)))))

(assert (=> d!11375 d!11705))

(declare-fun b!60029 () Bool)

(declare-fun e!39442 () Option!129)

(assert (=> b!60029 (= e!39442 None!127)))

(declare-fun d!11707 () Bool)

(declare-fun c!7773 () Bool)

(assert (=> d!11707 (= c!7773 (and ((_ is Cons!1449) (toList!704 lt!23744)) (= (_1!1034 (h!2030 (toList!704 lt!23744))) lt!23750)))))

(declare-fun e!39441 () Option!129)

(assert (=> d!11707 (= (getValueByKey!123 (toList!704 lt!23744) lt!23750) e!39441)))

(declare-fun b!60026 () Bool)

(assert (=> b!60026 (= e!39441 (Some!128 (_2!1034 (h!2030 (toList!704 lt!23744)))))))

(declare-fun b!60028 () Bool)

(assert (=> b!60028 (= e!39442 (getValueByKey!123 (t!4799 (toList!704 lt!23744)) lt!23750))))

(declare-fun b!60027 () Bool)

(assert (=> b!60027 (= e!39441 e!39442)))

(declare-fun c!7774 () Bool)

(assert (=> b!60027 (= c!7774 (and ((_ is Cons!1449) (toList!704 lt!23744)) (not (= (_1!1034 (h!2030 (toList!704 lt!23744))) lt!23750))))))

(assert (= (and d!11707 c!7773) b!60026))

(assert (= (and d!11707 (not c!7773)) b!60027))

(assert (= (and b!60027 c!7774) b!60028))

(assert (= (and b!60027 (not c!7774)) b!60029))

(declare-fun m!52421 () Bool)

(assert (=> b!60028 m!52421))

(assert (=> d!11375 d!11707))

(declare-fun d!11709 () Bool)

(declare-fun e!39443 () Bool)

(assert (=> d!11709 e!39443))

(declare-fun res!33247 () Bool)

(assert (=> d!11709 (=> res!33247 e!39443)))

(declare-fun lt!24496 () Bool)

(assert (=> d!11709 (= res!33247 (not lt!24496))))

(declare-fun lt!24499 () Bool)

(assert (=> d!11709 (= lt!24496 lt!24499)))

(declare-fun lt!24498 () Unit!1553)

(declare-fun e!39444 () Unit!1553)

(assert (=> d!11709 (= lt!24498 e!39444)))

(declare-fun c!7775 () Bool)

(assert (=> d!11709 (= c!7775 lt!24499)))

(assert (=> d!11709 (= lt!24499 (containsKey!127 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839))))))

(assert (=> d!11709 (= (contains!692 (getCurrentListMap!401 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839))) lt!24496)))

(declare-fun b!60030 () Bool)

(declare-fun lt!24497 () Unit!1553)

(assert (=> b!60030 (= e!39444 lt!24497)))

(assert (=> b!60030 (= lt!24497 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839))))))

(assert (=> b!60030 (isDefined!77 (getValueByKey!123 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839))))))

(declare-fun b!60031 () Bool)

(declare-fun Unit!1598 () Unit!1553)

(assert (=> b!60031 (= e!39444 Unit!1598)))

(declare-fun b!60032 () Bool)

(assert (=> b!60032 (= e!39443 (isDefined!77 (getValueByKey!123 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))

(assert (= (and d!11709 c!7775) b!60030))

(assert (= (and d!11709 (not c!7775)) b!60031))

(assert (= (and d!11709 (not res!33247)) b!60032))

(assert (=> d!11709 m!50777))

(declare-fun m!52423 () Bool)

(assert (=> d!11709 m!52423))

(assert (=> b!60030 m!50777))

(declare-fun m!52425 () Bool)

(assert (=> b!60030 m!52425))

(assert (=> b!60030 m!50777))

(declare-fun m!52427 () Bool)

(assert (=> b!60030 m!52427))

(assert (=> b!60030 m!52427))

(declare-fun m!52429 () Bool)

(assert (=> b!60030 m!52429))

(assert (=> b!60032 m!50777))

(assert (=> b!60032 m!52427))

(assert (=> b!60032 m!52427))

(assert (=> b!60032 m!52429))

(assert (=> b!59386 d!11709))

(declare-fun bm!4533 () Bool)

(declare-fun call!4536 () ListLongMap!1377)

(declare-fun call!4538 () ListLongMap!1377)

(assert (=> bm!4533 (= call!4536 call!4538)))

(declare-fun d!11711 () Bool)

(declare-fun e!39446 () Bool)

(assert (=> d!11711 e!39446))

(declare-fun res!33255 () Bool)

(assert (=> d!11711 (=> (not res!33255) (not e!39446))))

(assert (=> d!11711 (= res!33255 (or (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))))

(declare-fun lt!24504 () ListLongMap!1377)

(declare-fun lt!24520 () ListLongMap!1377)

(assert (=> d!11711 (= lt!24504 lt!24520)))

(declare-fun lt!24509 () Unit!1553)

(declare-fun e!39454 () Unit!1553)

(assert (=> d!11711 (= lt!24509 e!39454)))

(declare-fun c!7777 () Bool)

(declare-fun e!39453 () Bool)

(assert (=> d!11711 (= c!7777 e!39453)))

(declare-fun res!33252 () Bool)

(assert (=> d!11711 (=> (not res!33252) (not e!39453))))

(assert (=> d!11711 (= res!33252 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun e!39457 () ListLongMap!1377)

(assert (=> d!11711 (= lt!24520 e!39457)))

(declare-fun c!7780 () Bool)

(assert (=> d!11711 (= c!7780 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11711 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11711 (= (getCurrentListMap!401 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!24504)))

(declare-fun b!60033 () Bool)

(declare-fun e!39447 () Bool)

(declare-fun call!4537 () Bool)

(assert (=> b!60033 (= e!39447 (not call!4537))))

(declare-fun b!60034 () Bool)

(assert (=> b!60034 (= e!39457 (+!81 call!4538 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))

(declare-fun b!60035 () Bool)

(declare-fun e!39448 () Bool)

(assert (=> b!60035 (= e!39447 e!39448)))

(declare-fun res!33249 () Bool)

(assert (=> b!60035 (= res!33249 call!4537)))

(assert (=> b!60035 (=> (not res!33249) (not e!39448))))

(declare-fun b!60036 () Bool)

(declare-fun e!39445 () Bool)

(assert (=> b!60036 (= e!39445 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4534 () Bool)

(declare-fun call!4542 () ListLongMap!1377)

(declare-fun call!4540 () ListLongMap!1377)

(assert (=> bm!4534 (= call!4542 call!4540)))

(declare-fun b!60037 () Bool)

(declare-fun e!39449 () ListLongMap!1377)

(assert (=> b!60037 (= e!39449 call!4542)))

(declare-fun bm!4535 () Bool)

(assert (=> bm!4535 (= call!4537 (contains!692 lt!24504 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60038 () Bool)

(declare-fun Unit!1599 () Unit!1553)

(assert (=> b!60038 (= e!39454 Unit!1599)))

(declare-fun bm!4536 () Bool)

(declare-fun call!4539 () Bool)

(assert (=> bm!4536 (= call!4539 (contains!692 lt!24504 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60039 () Bool)

(declare-fun e!39451 () Bool)

(assert (=> b!60039 (= e!39451 (not call!4539))))

(declare-fun b!60040 () Bool)

(declare-fun e!39450 () Bool)

(assert (=> b!60040 (= e!39450 (= (apply!66 lt!24504 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1959 newMap!16)))))

(declare-fun bm!4537 () Bool)

(declare-fun call!4541 () ListLongMap!1377)

(assert (=> bm!4537 (= call!4540 call!4541)))

(declare-fun b!60041 () Bool)

(declare-fun res!33250 () Bool)

(assert (=> b!60041 (=> (not res!33250) (not e!39446))))

(assert (=> b!60041 (= res!33250 e!39451)))

(declare-fun c!7776 () Bool)

(assert (=> b!60041 (= c!7776 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!60042 () Bool)

(declare-fun e!39455 () Bool)

(declare-fun e!39452 () Bool)

(assert (=> b!60042 (= e!39455 e!39452)))

(declare-fun res!33248 () Bool)

(assert (=> b!60042 (=> (not res!33248) (not e!39452))))

(assert (=> b!60042 (= res!33248 (contains!692 lt!24504 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!60042 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!60043 () Bool)

(assert (=> b!60043 (= e!39449 call!4536)))

(declare-fun b!60044 () Bool)

(assert (=> b!60044 (= e!39453 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4538 () Bool)

(assert (=> bm!4538 (= call!4541 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun b!60045 () Bool)

(declare-fun res!33251 () Bool)

(assert (=> b!60045 (=> (not res!33251) (not e!39446))))

(assert (=> b!60045 (= res!33251 e!39455)))

(declare-fun res!33253 () Bool)

(assert (=> b!60045 (=> res!33253 e!39455)))

(assert (=> b!60045 (= res!33253 (not e!39445))))

(declare-fun res!33254 () Bool)

(assert (=> b!60045 (=> (not res!33254) (not e!39445))))

(assert (=> b!60045 (= res!33254 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!60046 () Bool)

(assert (=> b!60046 (= e!39448 (= (apply!66 lt!24504 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1959 newMap!16)))))

(declare-fun b!60047 () Bool)

(assert (=> b!60047 (= e!39446 e!39447)))

(declare-fun c!7779 () Bool)

(assert (=> b!60047 (= c!7779 (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!60048 () Bool)

(declare-fun c!7778 () Bool)

(assert (=> b!60048 (= c!7778 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!39456 () ListLongMap!1377)

(assert (=> b!60048 (= e!39456 e!39449)))

(declare-fun b!60049 () Bool)

(assert (=> b!60049 (= e!39451 e!39450)))

(declare-fun res!33256 () Bool)

(assert (=> b!60049 (= res!33256 call!4539)))

(assert (=> b!60049 (=> (not res!33256) (not e!39450))))

(declare-fun bm!4539 () Bool)

(declare-fun c!7781 () Bool)

(assert (=> bm!4539 (= call!4538 (+!81 (ite c!7780 call!4541 (ite c!7781 call!4540 call!4542)) (ite (or c!7780 c!7781) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(declare-fun b!60050 () Bool)

(declare-fun lt!24513 () Unit!1553)

(assert (=> b!60050 (= e!39454 lt!24513)))

(declare-fun lt!24518 () ListLongMap!1377)

(assert (=> b!60050 (= lt!24518 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24517 () (_ BitVec 64))

(assert (=> b!60050 (= lt!24517 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24500 () (_ BitVec 64))

(assert (=> b!60050 (= lt!24500 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24514 () Unit!1553)

(assert (=> b!60050 (= lt!24514 (addStillContains!42 lt!24518 lt!24517 (zeroValue!1959 newMap!16) lt!24500))))

(assert (=> b!60050 (contains!692 (+!81 lt!24518 (tuple2!2049 lt!24517 (zeroValue!1959 newMap!16))) lt!24500)))

(declare-fun lt!24501 () Unit!1553)

(assert (=> b!60050 (= lt!24501 lt!24514)))

(declare-fun lt!24515 () ListLongMap!1377)

(assert (=> b!60050 (= lt!24515 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24502 () (_ BitVec 64))

(assert (=> b!60050 (= lt!24502 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24506 () (_ BitVec 64))

(assert (=> b!60050 (= lt!24506 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24508 () Unit!1553)

(assert (=> b!60050 (= lt!24508 (addApplyDifferent!42 lt!24515 lt!24502 (minValue!1959 newMap!16) lt!24506))))

(assert (=> b!60050 (= (apply!66 (+!81 lt!24515 (tuple2!2049 lt!24502 (minValue!1959 newMap!16))) lt!24506) (apply!66 lt!24515 lt!24506))))

(declare-fun lt!24521 () Unit!1553)

(assert (=> b!60050 (= lt!24521 lt!24508)))

(declare-fun lt!24505 () ListLongMap!1377)

(assert (=> b!60050 (= lt!24505 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24516 () (_ BitVec 64))

(assert (=> b!60050 (= lt!24516 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24511 () (_ BitVec 64))

(assert (=> b!60050 (= lt!24511 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24519 () Unit!1553)

(assert (=> b!60050 (= lt!24519 (addApplyDifferent!42 lt!24505 lt!24516 (zeroValue!1959 newMap!16) lt!24511))))

(assert (=> b!60050 (= (apply!66 (+!81 lt!24505 (tuple2!2049 lt!24516 (zeroValue!1959 newMap!16))) lt!24511) (apply!66 lt!24505 lt!24511))))

(declare-fun lt!24503 () Unit!1553)

(assert (=> b!60050 (= lt!24503 lt!24519)))

(declare-fun lt!24507 () ListLongMap!1377)

(assert (=> b!60050 (= lt!24507 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24512 () (_ BitVec 64))

(assert (=> b!60050 (= lt!24512 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24510 () (_ BitVec 64))

(assert (=> b!60050 (= lt!24510 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!60050 (= lt!24513 (addApplyDifferent!42 lt!24507 lt!24512 (minValue!1959 newMap!16) lt!24510))))

(assert (=> b!60050 (= (apply!66 (+!81 lt!24507 (tuple2!2049 lt!24512 (minValue!1959 newMap!16))) lt!24510) (apply!66 lt!24507 lt!24510))))

(declare-fun b!60051 () Bool)

(assert (=> b!60051 (= e!39456 call!4536)))

(declare-fun b!60052 () Bool)

(assert (=> b!60052 (= e!39457 e!39456)))

(assert (=> b!60052 (= c!7781 (and (not (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1930 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!60053 () Bool)

(assert (=> b!60053 (= e!39452 (= (apply!66 lt!24504 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 lt!23834) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!60053 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 lt!23834)))))

(assert (=> b!60053 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (= (and d!11711 c!7780) b!60034))

(assert (= (and d!11711 (not c!7780)) b!60052))

(assert (= (and b!60052 c!7781) b!60051))

(assert (= (and b!60052 (not c!7781)) b!60048))

(assert (= (and b!60048 c!7778) b!60043))

(assert (= (and b!60048 (not c!7778)) b!60037))

(assert (= (or b!60043 b!60037) bm!4534))

(assert (= (or b!60051 bm!4534) bm!4537))

(assert (= (or b!60051 b!60043) bm!4533))

(assert (= (or b!60034 bm!4537) bm!4538))

(assert (= (or b!60034 bm!4533) bm!4539))

(assert (= (and d!11711 res!33252) b!60044))

(assert (= (and d!11711 c!7777) b!60050))

(assert (= (and d!11711 (not c!7777)) b!60038))

(assert (= (and d!11711 res!33255) b!60045))

(assert (= (and b!60045 res!33254) b!60036))

(assert (= (and b!60045 (not res!33253)) b!60042))

(assert (= (and b!60042 res!33248) b!60053))

(assert (= (and b!60045 res!33251) b!60041))

(assert (= (and b!60041 c!7776) b!60049))

(assert (= (and b!60041 (not c!7776)) b!60039))

(assert (= (and b!60049 res!33256) b!60040))

(assert (= (or b!60049 b!60039) bm!4536))

(assert (= (and b!60041 res!33250) b!60047))

(assert (= (and b!60047 c!7779) b!60035))

(assert (= (and b!60047 (not c!7779)) b!60033))

(assert (= (and b!60035 res!33249) b!60046))

(assert (= (or b!60035 b!60033) bm!4535))

(declare-fun b_lambda!2657 () Bool)

(assert (=> (not b_lambda!2657) (not b!60053)))

(assert (=> b!60053 t!4806))

(declare-fun b_and!3653 () Bool)

(assert (= b_and!3649 (and (=> t!4806 result!2389) b_and!3653)))

(assert (=> b!60053 t!4808))

(declare-fun b_and!3655 () Bool)

(assert (= b_and!3651 (and (=> t!4808 result!2391) b_and!3655)))

(declare-fun m!52431 () Bool)

(assert (=> b!60046 m!52431))

(assert (=> b!60053 m!50843))

(assert (=> b!60053 m!50843))

(declare-fun m!52433 () Bool)

(assert (=> b!60053 m!52433))

(declare-fun m!52435 () Bool)

(assert (=> b!60053 m!52435))

(assert (=> b!60053 m!50849))

(assert (=> b!60053 m!52435))

(assert (=> b!60053 m!50849))

(declare-fun m!52437 () Bool)

(assert (=> b!60053 m!52437))

(assert (=> b!60036 m!50843))

(assert (=> b!60036 m!50843))

(assert (=> b!60036 m!50853))

(declare-fun m!52439 () Bool)

(assert (=> b!60040 m!52439))

(assert (=> b!60050 m!50843))

(declare-fun m!52441 () Bool)

(assert (=> b!60050 m!52441))

(declare-fun m!52443 () Bool)

(assert (=> b!60050 m!52443))

(declare-fun m!52445 () Bool)

(assert (=> b!60050 m!52445))

(declare-fun m!52447 () Bool)

(assert (=> b!60050 m!52447))

(declare-fun m!52449 () Bool)

(assert (=> b!60050 m!52449))

(declare-fun m!52451 () Bool)

(assert (=> b!60050 m!52451))

(assert (=> b!60050 m!52447))

(declare-fun m!52453 () Bool)

(assert (=> b!60050 m!52453))

(declare-fun m!52455 () Bool)

(assert (=> b!60050 m!52455))

(declare-fun m!52457 () Bool)

(assert (=> b!60050 m!52457))

(declare-fun m!52459 () Bool)

(assert (=> b!60050 m!52459))

(declare-fun m!52461 () Bool)

(assert (=> b!60050 m!52461))

(declare-fun m!52463 () Bool)

(assert (=> b!60050 m!52463))

(declare-fun m!52465 () Bool)

(assert (=> b!60050 m!52465))

(declare-fun m!52467 () Bool)

(assert (=> b!60050 m!52467))

(assert (=> b!60050 m!52467))

(declare-fun m!52469 () Bool)

(assert (=> b!60050 m!52469))

(assert (=> b!60050 m!52441))

(assert (=> b!60050 m!52461))

(declare-fun m!52471 () Bool)

(assert (=> b!60050 m!52471))

(declare-fun m!52473 () Bool)

(assert (=> bm!4539 m!52473))

(assert (=> b!60042 m!50843))

(assert (=> b!60042 m!50843))

(declare-fun m!52475 () Bool)

(assert (=> b!60042 m!52475))

(assert (=> d!11711 m!50833))

(declare-fun m!52477 () Bool)

(assert (=> b!60034 m!52477))

(declare-fun m!52479 () Bool)

(assert (=> bm!4536 m!52479))

(declare-fun m!52481 () Bool)

(assert (=> bm!4535 m!52481))

(assert (=> b!60044 m!50843))

(assert (=> b!60044 m!50843))

(assert (=> b!60044 m!50853))

(assert (=> bm!4538 m!52445))

(assert (=> b!59386 d!11711))

(declare-fun d!11713 () Bool)

(assert (=> d!11713 (= (get!1081 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2380 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!59177 d!11713))

(declare-fun d!11715 () Bool)

(declare-fun e!39458 () Bool)

(assert (=> d!11715 e!39458))

(declare-fun res!33257 () Bool)

(assert (=> d!11715 (=> res!33257 e!39458)))

(declare-fun lt!24522 () Bool)

(assert (=> d!11715 (= res!33257 (not lt!24522))))

(declare-fun lt!24525 () Bool)

(assert (=> d!11715 (= lt!24522 lt!24525)))

(declare-fun lt!24524 () Unit!1553)

(declare-fun e!39459 () Unit!1553)

(assert (=> d!11715 (= lt!24524 e!39459)))

(declare-fun c!7782 () Bool)

(assert (=> d!11715 (= c!7782 lt!24525)))

(assert (=> d!11715 (= lt!24525 (containsKey!127 (toList!704 lt!23968) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!11715 (= (contains!692 lt!23968 #b1000000000000000000000000000000000000000000000000000000000000000) lt!24522)))

(declare-fun b!60054 () Bool)

(declare-fun lt!24523 () Unit!1553)

(assert (=> b!60054 (= e!39459 lt!24523)))

(assert (=> b!60054 (= lt!24523 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23968) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!60054 (isDefined!77 (getValueByKey!123 (toList!704 lt!23968) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60055 () Bool)

(declare-fun Unit!1600 () Unit!1553)

(assert (=> b!60055 (= e!39459 Unit!1600)))

(declare-fun b!60056 () Bool)

(assert (=> b!60056 (= e!39458 (isDefined!77 (getValueByKey!123 (toList!704 lt!23968) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11715 c!7782) b!60054))

(assert (= (and d!11715 (not c!7782)) b!60055))

(assert (= (and d!11715 (not res!33257)) b!60056))

(declare-fun m!52483 () Bool)

(assert (=> d!11715 m!52483))

(declare-fun m!52485 () Bool)

(assert (=> b!60054 m!52485))

(declare-fun m!52487 () Bool)

(assert (=> b!60054 m!52487))

(assert (=> b!60054 m!52487))

(declare-fun m!52489 () Bool)

(assert (=> b!60054 m!52489))

(assert (=> b!60056 m!52487))

(assert (=> b!60056 m!52487))

(assert (=> b!60056 m!52489))

(assert (=> b!59317 d!11715))

(declare-fun d!11717 () Bool)

(assert (=> d!11717 (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!24526 () Unit!1553)

(assert (=> d!11717 (= lt!24526 (choose!313 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!39460 () Bool)

(assert (=> d!11717 e!39460))

(declare-fun res!33258 () Bool)

(assert (=> d!11717 (=> (not res!33258) (not e!39460))))

(assert (=> d!11717 (= res!33258 (isStrictlySorted!279 (toList!704 lt!23743)))))

(assert (=> d!11717 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!24526)))

(declare-fun b!60057 () Bool)

(assert (=> b!60057 (= e!39460 (containsKey!127 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!11717 res!33258) b!60057))

(assert (=> d!11717 m!50685))

(assert (=> d!11717 m!50829))

(assert (=> d!11717 m!50829))

(assert (=> d!11717 m!50831))

(assert (=> d!11717 m!50685))

(declare-fun m!52491 () Bool)

(assert (=> d!11717 m!52491))

(declare-fun m!52493 () Bool)

(assert (=> d!11717 m!52493))

(assert (=> b!60057 m!50685))

(assert (=> b!60057 m!50825))

(assert (=> b!59142 d!11717))

(assert (=> b!59142 d!11411))

(assert (=> b!59142 d!11413))

(assert (=> b!59187 d!11437))

(declare-fun d!11719 () Bool)

(assert (=> d!11719 (= (apply!66 lt!23913 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (getValueByKey!123 (toList!704 lt!23913) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2604 () Bool)

(assert (= bs!2604 d!11719))

(assert (=> bs!2604 m!50843))

(declare-fun m!52495 () Bool)

(assert (=> bs!2604 m!52495))

(assert (=> bs!2604 m!52495))

(declare-fun m!52497 () Bool)

(assert (=> bs!2604 m!52497))

(assert (=> b!59233 d!11719))

(declare-fun c!7783 () Bool)

(declare-fun d!11721 () Bool)

(assert (=> d!11721 (= c!7783 ((_ is ValueCellFull!855) (select (arr!1781 (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834)) #b00000000000000000000000000000000)))))

(declare-fun e!39461 () V!2843)

(assert (=> d!11721 (= (get!1080 (select (arr!1781 (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!39461)))

(declare-fun b!60058 () Bool)

(assert (=> b!60058 (= e!39461 (get!1081 (select (arr!1781 (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!60059 () Bool)

(assert (=> b!60059 (= e!39461 (get!1082 (select (arr!1781 (ite (or c!7529 c!7518) (_values!2026 newMap!16) lt!23834)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11721 c!7783) b!60058))

(assert (= (and d!11721 (not c!7783)) b!60059))

(assert (=> b!60058 m!50965))

(assert (=> b!60058 m!50849))

(declare-fun m!52499 () Bool)

(assert (=> b!60058 m!52499))

(assert (=> b!60059 m!50965))

(assert (=> b!60059 m!50849))

(declare-fun m!52501 () Bool)

(assert (=> b!60059 m!52501))

(assert (=> b!59233 d!11721))

(declare-fun d!11723 () Bool)

(declare-fun e!39462 () Bool)

(assert (=> d!11723 e!39462))

(declare-fun res!33259 () Bool)

(assert (=> d!11723 (=> res!33259 e!39462)))

(declare-fun lt!24527 () Bool)

(assert (=> d!11723 (= res!33259 (not lt!24527))))

(declare-fun lt!24530 () Bool)

(assert (=> d!11723 (= lt!24527 lt!24530)))

(declare-fun lt!24529 () Unit!1553)

(declare-fun e!39463 () Unit!1553)

(assert (=> d!11723 (= lt!24529 e!39463)))

(declare-fun c!7784 () Bool)

(assert (=> d!11723 (= c!7784 lt!24530)))

(assert (=> d!11723 (= lt!24530 (containsKey!127 (toList!704 lt!23968) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!11723 (= (contains!692 lt!23968 #b0000000000000000000000000000000000000000000000000000000000000000) lt!24527)))

(declare-fun b!60060 () Bool)

(declare-fun lt!24528 () Unit!1553)

(assert (=> b!60060 (= e!39463 lt!24528)))

(assert (=> b!60060 (= lt!24528 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23968) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!60060 (isDefined!77 (getValueByKey!123 (toList!704 lt!23968) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60061 () Bool)

(declare-fun Unit!1601 () Unit!1553)

(assert (=> b!60061 (= e!39463 Unit!1601)))

(declare-fun b!60062 () Bool)

(assert (=> b!60062 (= e!39462 (isDefined!77 (getValueByKey!123 (toList!704 lt!23968) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11723 c!7784) b!60060))

(assert (= (and d!11723 (not c!7784)) b!60061))

(assert (= (and d!11723 (not res!33259)) b!60062))

(declare-fun m!52503 () Bool)

(assert (=> d!11723 m!52503))

(declare-fun m!52505 () Bool)

(assert (=> b!60060 m!52505))

(declare-fun m!52507 () Bool)

(assert (=> b!60060 m!52507))

(assert (=> b!60060 m!52507))

(declare-fun m!52509 () Bool)

(assert (=> b!60060 m!52509))

(assert (=> b!60062 m!52507))

(assert (=> b!60062 m!52507))

(assert (=> b!60062 m!52509))

(assert (=> d!11331 d!11723))

(assert (=> d!11331 d!11257))

(declare-fun d!11725 () Bool)

(assert (=> d!11725 (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!24531 () Unit!1553)

(assert (=> d!11725 (= lt!24531 (choose!313 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!39464 () Bool)

(assert (=> d!11725 e!39464))

(declare-fun res!33260 () Bool)

(assert (=> d!11725 (=> (not res!33260) (not e!39464))))

(assert (=> d!11725 (= res!33260 (isStrictlySorted!279 (toList!704 lt!23743)))))

(assert (=> d!11725 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000) lt!24531)))

(declare-fun b!60063 () Bool)

(assert (=> b!60063 (= e!39464 (containsKey!127 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!11725 res!33260) b!60063))

(assert (=> d!11725 m!51017))

(assert (=> d!11725 m!51017))

(assert (=> d!11725 m!51237))

(declare-fun m!52511 () Bool)

(assert (=> d!11725 m!52511))

(assert (=> d!11725 m!52493))

(assert (=> b!60063 m!51233))

(assert (=> b!59427 d!11725))

(assert (=> b!59427 d!11425))

(assert (=> b!59427 d!11427))

(assert (=> b!59404 d!11437))

(declare-fun d!11727 () Bool)

(declare-fun e!39465 () Bool)

(assert (=> d!11727 e!39465))

(declare-fun res!33262 () Bool)

(assert (=> d!11727 (=> (not res!33262) (not e!39465))))

(declare-fun lt!24535 () ListLongMap!1377)

(assert (=> d!11727 (= res!33262 (contains!692 lt!24535 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(declare-fun lt!24532 () List!1453)

(assert (=> d!11727 (= lt!24535 (ListLongMap!1378 lt!24532))))

(declare-fun lt!24534 () Unit!1553)

(declare-fun lt!24533 () Unit!1553)

(assert (=> d!11727 (= lt!24534 lt!24533)))

(assert (=> d!11727 (= (getValueByKey!123 lt!24532 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))) (Some!128 (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(assert (=> d!11727 (= lt!24533 (lemmaContainsTupThenGetReturnValue!42 lt!24532 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(assert (=> d!11727 (= lt!24532 (insertStrictlySorted!44 (toList!704 call!4427) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(assert (=> d!11727 (= (+!81 call!4427 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))) lt!24535)))

(declare-fun b!60064 () Bool)

(declare-fun res!33261 () Bool)

(assert (=> b!60064 (=> (not res!33261) (not e!39465))))

(assert (=> b!60064 (= res!33261 (= (getValueByKey!123 (toList!704 lt!24535) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))) (Some!128 (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))))))

(declare-fun b!60065 () Bool)

(assert (=> b!60065 (= e!39465 (contains!694 (toList!704 lt!24535) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))))

(assert (= (and d!11727 res!33262) b!60064))

(assert (= (and b!60064 res!33261) b!60065))

(declare-fun m!52513 () Bool)

(assert (=> d!11727 m!52513))

(declare-fun m!52515 () Bool)

(assert (=> d!11727 m!52515))

(declare-fun m!52517 () Bool)

(assert (=> d!11727 m!52517))

(declare-fun m!52519 () Bool)

(assert (=> d!11727 m!52519))

(declare-fun m!52521 () Bool)

(assert (=> b!60064 m!52521))

(declare-fun m!52523 () Bool)

(assert (=> b!60065 m!52523))

(assert (=> b!59214 d!11727))

(declare-fun d!11729 () Bool)

(declare-fun e!39466 () Bool)

(assert (=> d!11729 e!39466))

(declare-fun res!33264 () Bool)

(assert (=> d!11729 (=> (not res!33264) (not e!39466))))

(declare-fun lt!24539 () ListLongMap!1377)

(assert (=> d!11729 (= res!33264 (contains!692 lt!24539 (_1!1034 (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))))))

(declare-fun lt!24536 () List!1453)

(assert (=> d!11729 (= lt!24539 (ListLongMap!1378 lt!24536))))

(declare-fun lt!24538 () Unit!1553)

(declare-fun lt!24537 () Unit!1553)

(assert (=> d!11729 (= lt!24538 lt!24537)))

(assert (=> d!11729 (= (getValueByKey!123 lt!24536 (_1!1034 (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))) (Some!128 (_2!1034 (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))))))

(assert (=> d!11729 (= lt!24537 (lemmaContainsTupThenGetReturnValue!42 lt!24536 (_1!1034 (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))) (_2!1034 (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))))))

(assert (=> d!11729 (= lt!24536 (insertStrictlySorted!44 (toList!704 (ite c!7557 call!4430 (ite c!7558 call!4429 call!4431))) (_1!1034 (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))) (_2!1034 (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))))))

(assert (=> d!11729 (= (+!81 (ite c!7557 call!4430 (ite c!7558 call!4429 call!4431)) (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))) lt!24539)))

(declare-fun b!60066 () Bool)

(declare-fun res!33263 () Bool)

(assert (=> b!60066 (=> (not res!33263) (not e!39466))))

(assert (=> b!60066 (= res!33263 (= (getValueByKey!123 (toList!704 lt!24539) (_1!1034 (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16)))))) (Some!128 (_2!1034 (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))))

(declare-fun b!60067 () Bool)

(assert (=> b!60067 (= e!39466 (contains!694 (toList!704 lt!24539) (ite (or c!7557 c!7558) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7529 c!7521) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1959 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7529 (ite c!7521 (minValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1959 newMap!16))))))))

(assert (= (and d!11729 res!33264) b!60066))

(assert (= (and b!60066 res!33263) b!60067))

(declare-fun m!52525 () Bool)

(assert (=> d!11729 m!52525))

(declare-fun m!52527 () Bool)

(assert (=> d!11729 m!52527))

(declare-fun m!52529 () Bool)

(assert (=> d!11729 m!52529))

(declare-fun m!52531 () Bool)

(assert (=> d!11729 m!52531))

(declare-fun m!52533 () Bool)

(assert (=> b!60066 m!52533))

(declare-fun m!52535 () Bool)

(assert (=> b!60067 m!52535))

(assert (=> bm!4428 d!11729))

(declare-fun bm!4540 () Bool)

(declare-fun call!4543 () (_ BitVec 32))

(assert (=> bm!4540 (= call!4543 (arrayCountValidKeys!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun d!11731 () Bool)

(declare-fun lt!24540 () (_ BitVec 32))

(assert (=> d!11731 (and (bvsge lt!24540 #b00000000000000000000000000000000) (bvsle lt!24540 (bvsub (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!39468 () (_ BitVec 32))

(assert (=> d!11731 (= lt!24540 e!39468)))

(declare-fun c!7786 () Bool)

(assert (=> d!11731 (= c!7786 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> d!11731 (and (bvsle #b00000000000000000000000000000000 (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))))))

(assert (=> d!11731 (= (arrayCountValidKeys!0 (_keys!3667 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000000 (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992))))) lt!24540)))

(declare-fun b!60068 () Bool)

(declare-fun e!39467 () (_ BitVec 32))

(assert (=> b!60068 (= e!39468 e!39467)))

(declare-fun c!7785 () Bool)

(assert (=> b!60068 (= c!7785 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!60069 () Bool)

(assert (=> b!60069 (= e!39467 (bvadd #b00000000000000000000000000000001 call!4543))))

(declare-fun b!60070 () Bool)

(assert (=> b!60070 (= e!39468 #b00000000000000000000000000000000)))

(declare-fun b!60071 () Bool)

(assert (=> b!60071 (= e!39467 call!4543)))

(assert (= (and d!11731 c!7786) b!60070))

(assert (= (and d!11731 (not c!7786)) b!60068))

(assert (= (and b!60068 c!7785) b!60069))

(assert (= (and b!60068 (not c!7785)) b!60071))

(assert (= (or b!60069 b!60071) bm!4540))

(declare-fun m!52537 () Bool)

(assert (=> bm!4540 m!52537))

(assert (=> b!60068 m!51473))

(assert (=> b!60068 m!51473))

(assert (=> b!60068 m!51477))

(assert (=> b!59419 d!11731))

(declare-fun d!11733 () Bool)

(declare-fun e!39469 () Bool)

(assert (=> d!11733 e!39469))

(declare-fun res!33265 () Bool)

(assert (=> d!11733 (=> res!33265 e!39469)))

(declare-fun lt!24541 () Bool)

(assert (=> d!11733 (= res!33265 (not lt!24541))))

(declare-fun lt!24544 () Bool)

(assert (=> d!11733 (= lt!24541 lt!24544)))

(declare-fun lt!24543 () Unit!1553)

(declare-fun e!39470 () Unit!1553)

(assert (=> d!11733 (= lt!24543 e!39470)))

(declare-fun c!7787 () Bool)

(assert (=> d!11733 (= c!7787 lt!24544)))

(assert (=> d!11733 (= lt!24544 (containsKey!127 (toList!704 lt!23865) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!11733 (= (contains!692 lt!23865 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) lt!24541)))

(declare-fun b!60072 () Bool)

(declare-fun lt!24542 () Unit!1553)

(assert (=> b!60072 (= e!39470 lt!24542)))

(assert (=> b!60072 (= lt!24542 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23865) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!60072 (isDefined!77 (getValueByKey!123 (toList!704 lt!23865) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!60073 () Bool)

(declare-fun Unit!1602 () Unit!1553)

(assert (=> b!60073 (= e!39470 Unit!1602)))

(declare-fun b!60074 () Bool)

(assert (=> b!60074 (= e!39469 (isDefined!77 (getValueByKey!123 (toList!704 lt!23865) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!11733 c!7787) b!60072))

(assert (= (and d!11733 (not c!7787)) b!60073))

(assert (= (and d!11733 (not res!33265)) b!60074))

(assert (=> d!11733 m!50843))

(declare-fun m!52539 () Bool)

(assert (=> d!11733 m!52539))

(assert (=> b!60072 m!50843))

(declare-fun m!52541 () Bool)

(assert (=> b!60072 m!52541))

(assert (=> b!60072 m!50843))

(declare-fun m!52543 () Bool)

(assert (=> b!60072 m!52543))

(assert (=> b!60072 m!52543))

(declare-fun m!52545 () Bool)

(assert (=> b!60072 m!52545))

(assert (=> b!60074 m!50843))

(assert (=> b!60074 m!52543))

(assert (=> b!60074 m!52543))

(assert (=> b!60074 m!52545))

(assert (=> b!59160 d!11733))

(declare-fun d!11735 () Bool)

(declare-fun lt!24545 () Bool)

(assert (=> d!11735 (= lt!24545 (select (content!63 (toList!704 lt!24142)) (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun e!39471 () Bool)

(assert (=> d!11735 (= lt!24545 e!39471)))

(declare-fun res!33266 () Bool)

(assert (=> d!11735 (=> (not res!33266) (not e!39471))))

(assert (=> d!11735 (= res!33266 ((_ is Cons!1449) (toList!704 lt!24142)))))

(assert (=> d!11735 (= (contains!694 (toList!704 lt!24142) (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!24545)))

(declare-fun b!60075 () Bool)

(declare-fun e!39472 () Bool)

(assert (=> b!60075 (= e!39471 e!39472)))

(declare-fun res!33267 () Bool)

(assert (=> b!60075 (=> res!33267 e!39472)))

(assert (=> b!60075 (= res!33267 (= (h!2030 (toList!704 lt!24142)) (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!60076 () Bool)

(assert (=> b!60076 (= e!39472 (contains!694 (t!4799 (toList!704 lt!24142)) (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(assert (= (and d!11735 res!33266) b!60075))

(assert (= (and b!60075 (not res!33267)) b!60076))

(declare-fun m!52547 () Bool)

(assert (=> d!11735 m!52547))

(declare-fun m!52549 () Bool)

(assert (=> d!11735 m!52549))

(declare-fun m!52551 () Bool)

(assert (=> b!60076 m!52551))

(assert (=> b!59476 d!11735))

(assert (=> b!59439 d!11623))

(declare-fun d!11737 () Bool)

(declare-fun e!39473 () Bool)

(assert (=> d!11737 e!39473))

(declare-fun res!33268 () Bool)

(assert (=> d!11737 (=> res!33268 e!39473)))

(declare-fun lt!24546 () Bool)

(assert (=> d!11737 (= res!33268 (not lt!24546))))

(declare-fun lt!24549 () Bool)

(assert (=> d!11737 (= lt!24546 lt!24549)))

(declare-fun lt!24548 () Unit!1553)

(declare-fun e!39474 () Unit!1553)

(assert (=> d!11737 (= lt!24548 e!39474)))

(declare-fun c!7788 () Bool)

(assert (=> d!11737 (= c!7788 lt!24549)))

(assert (=> d!11737 (= lt!24549 (containsKey!127 (toList!704 (map!1107 (_2!1033 lt!24051))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11737 (= (contains!692 (map!1107 (_2!1033 lt!24051)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) lt!24546)))

(declare-fun b!60077 () Bool)

(declare-fun lt!24547 () Unit!1553)

(assert (=> b!60077 (= e!39474 lt!24547)))

(assert (=> b!60077 (= lt!24547 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 (map!1107 (_2!1033 lt!24051))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> b!60077 (isDefined!77 (getValueByKey!123 (toList!704 (map!1107 (_2!1033 lt!24051))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun b!60078 () Bool)

(declare-fun Unit!1603 () Unit!1553)

(assert (=> b!60078 (= e!39474 Unit!1603)))

(declare-fun b!60079 () Bool)

(assert (=> b!60079 (= e!39473 (isDefined!77 (getValueByKey!123 (toList!704 (map!1107 (_2!1033 lt!24051))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(assert (= (and d!11737 c!7788) b!60077))

(assert (= (and d!11737 (not c!7788)) b!60078))

(assert (= (and d!11737 (not res!33268)) b!60079))

(assert (=> d!11737 m!50591))

(declare-fun m!52553 () Bool)

(assert (=> d!11737 m!52553))

(assert (=> b!60077 m!50591))

(declare-fun m!52555 () Bool)

(assert (=> b!60077 m!52555))

(assert (=> b!60077 m!50591))

(declare-fun m!52557 () Bool)

(assert (=> b!60077 m!52557))

(assert (=> b!60077 m!52557))

(declare-fun m!52559 () Bool)

(assert (=> b!60077 m!52559))

(assert (=> b!60079 m!50591))

(assert (=> b!60079 m!52557))

(assert (=> b!60079 m!52557))

(assert (=> b!60079 m!52559))

(assert (=> b!59368 d!11737))

(assert (=> b!59368 d!11651))

(declare-fun d!11739 () Bool)

(assert (=> d!11739 (= (get!1083 (getValueByKey!123 (toList!704 lt!23754) lt!23745)) (v!2385 (getValueByKey!123 (toList!704 lt!23754) lt!23745)))))

(assert (=> d!11389 d!11739))

(declare-fun b!60083 () Bool)

(declare-fun e!39476 () Option!129)

(assert (=> b!60083 (= e!39476 None!127)))

(declare-fun d!11741 () Bool)

(declare-fun c!7789 () Bool)

(assert (=> d!11741 (= c!7789 (and ((_ is Cons!1449) (toList!704 lt!23754)) (= (_1!1034 (h!2030 (toList!704 lt!23754))) lt!23745)))))

(declare-fun e!39475 () Option!129)

(assert (=> d!11741 (= (getValueByKey!123 (toList!704 lt!23754) lt!23745) e!39475)))

(declare-fun b!60080 () Bool)

(assert (=> b!60080 (= e!39475 (Some!128 (_2!1034 (h!2030 (toList!704 lt!23754)))))))

(declare-fun b!60082 () Bool)

(assert (=> b!60082 (= e!39476 (getValueByKey!123 (t!4799 (toList!704 lt!23754)) lt!23745))))

(declare-fun b!60081 () Bool)

(assert (=> b!60081 (= e!39475 e!39476)))

(declare-fun c!7790 () Bool)

(assert (=> b!60081 (= c!7790 (and ((_ is Cons!1449) (toList!704 lt!23754)) (not (= (_1!1034 (h!2030 (toList!704 lt!23754))) lt!23745))))))

(assert (= (and d!11741 c!7789) b!60080))

(assert (= (and d!11741 (not c!7789)) b!60081))

(assert (= (and b!60081 c!7790) b!60082))

(assert (= (and b!60081 (not c!7790)) b!60083))

(declare-fun m!52561 () Bool)

(assert (=> b!60082 m!52561))

(assert (=> d!11389 d!11741))

(declare-fun d!11743 () Bool)

(assert (=> d!11743 (isDefined!77 (getValueByKey!123 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!24550 () Unit!1553)

(assert (=> d!11743 (= lt!24550 (choose!313 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!39477 () Bool)

(assert (=> d!11743 e!39477))

(declare-fun res!33269 () Bool)

(assert (=> d!11743 (=> (not res!33269) (not e!39477))))

(assert (=> d!11743 (= res!33269 (isStrictlySorted!279 (toList!704 lt!23743)))))

(assert (=> d!11743 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000) lt!24550)))

(declare-fun b!60084 () Bool)

(assert (=> b!60084 (= e!39477 (containsKey!127 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!11743 res!33269) b!60084))

(assert (=> d!11743 m!51153))

(assert (=> d!11743 m!51153))

(assert (=> d!11743 m!51213))

(declare-fun m!52563 () Bool)

(assert (=> d!11743 m!52563))

(assert (=> d!11743 m!52493))

(assert (=> b!60084 m!51209))

(assert (=> b!59414 d!11743))

(assert (=> b!59414 d!11459))

(assert (=> b!59414 d!11461))

(declare-fun d!11745 () Bool)

(assert (=> d!11745 (= (apply!66 lt!23913 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1083 (getValueByKey!123 (toList!704 lt!23913) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2605 () Bool)

(assert (= bs!2605 d!11745))

(assert (=> bs!2605 m!51835))

(assert (=> bs!2605 m!51835))

(declare-fun m!52565 () Bool)

(assert (=> bs!2605 m!52565))

(assert (=> b!59226 d!11745))

(declare-fun d!11747 () Bool)

(declare-fun lt!24551 () Bool)

(assert (=> d!11747 (= lt!24551 (select (content!63 (toList!704 lt!24130)) (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun e!39478 () Bool)

(assert (=> d!11747 (= lt!24551 e!39478)))

(declare-fun res!33270 () Bool)

(assert (=> d!11747 (=> (not res!33270) (not e!39478))))

(assert (=> d!11747 (= res!33270 ((_ is Cons!1449) (toList!704 lt!24130)))))

(assert (=> d!11747 (= (contains!694 (toList!704 lt!24130) (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!24551)))

(declare-fun b!60085 () Bool)

(declare-fun e!39479 () Bool)

(assert (=> b!60085 (= e!39478 e!39479)))

(declare-fun res!33271 () Bool)

(assert (=> b!60085 (=> res!33271 e!39479)))

(assert (=> b!60085 (= res!33271 (= (h!2030 (toList!704 lt!24130)) (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!60086 () Bool)

(assert (=> b!60086 (= e!39479 (contains!694 (t!4799 (toList!704 lt!24130)) (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(assert (= (and d!11747 res!33270) b!60085))

(assert (= (and b!60085 (not res!33271)) b!60086))

(declare-fun m!52567 () Bool)

(assert (=> d!11747 m!52567))

(declare-fun m!52569 () Bool)

(assert (=> d!11747 m!52569))

(declare-fun m!52571 () Bool)

(assert (=> b!60086 m!52571))

(assert (=> b!59469 d!11747))

(assert (=> b!59201 d!11437))

(declare-fun d!11749 () Bool)

(declare-fun res!33272 () Bool)

(declare-fun e!39480 () Bool)

(assert (=> d!11749 (=> res!33272 e!39480)))

(assert (=> d!11749 (= res!33272 (and ((_ is Cons!1449) (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))) (= (_1!1034 (h!2030 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))) lt!23739)))))

(assert (=> d!11749 (= (containsKey!127 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23739) e!39480)))

(declare-fun b!60087 () Bool)

(declare-fun e!39481 () Bool)

(assert (=> b!60087 (= e!39480 e!39481)))

(declare-fun res!33273 () Bool)

(assert (=> b!60087 (=> (not res!33273) (not e!39481))))

(assert (=> b!60087 (= res!33273 (and (or (not ((_ is Cons!1449) (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))) (bvsle (_1!1034 (h!2030 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))) lt!23739)) ((_ is Cons!1449) (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))) (bvslt (_1!1034 (h!2030 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))) lt!23739)))))

(declare-fun b!60088 () Bool)

(assert (=> b!60088 (= e!39481 (containsKey!127 (t!4799 (toList!704 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))) lt!23739))))

(assert (= (and d!11749 (not res!33272)) b!60087))

(assert (= (and b!60087 res!33273) b!60088))

(declare-fun m!52573 () Bool)

(assert (=> b!60088 m!52573))

(assert (=> d!11377 d!11749))

(declare-fun d!11751 () Bool)

(assert (=> d!11751 (= (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23745)) (v!2385 (getValueByKey!123 (toList!704 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23745)))))

(assert (=> d!11379 d!11751))

(declare-fun b!60092 () Bool)

(declare-fun e!39483 () Option!129)

(assert (=> b!60092 (= e!39483 None!127)))

(declare-fun d!11753 () Bool)

(declare-fun c!7791 () Bool)

(assert (=> d!11753 (= c!7791 (and ((_ is Cons!1449) (toList!704 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) (= (_1!1034 (h!2030 (toList!704 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))) lt!23745)))))

(declare-fun e!39482 () Option!129)

(assert (=> d!11753 (= (getValueByKey!123 (toList!704 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!23745) e!39482)))

(declare-fun b!60089 () Bool)

(assert (=> b!60089 (= e!39482 (Some!128 (_2!1034 (h!2030 (toList!704 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))))

(declare-fun b!60091 () Bool)

(assert (=> b!60091 (= e!39483 (getValueByKey!123 (t!4799 (toList!704 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) lt!23745))))

(declare-fun b!60090 () Bool)

(assert (=> b!60090 (= e!39482 e!39483)))

(declare-fun c!7792 () Bool)

(assert (=> b!60090 (= c!7792 (and ((_ is Cons!1449) (toList!704 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) (not (= (_1!1034 (h!2030 (toList!704 (+!81 lt!23754 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))) lt!23745))))))

(assert (= (and d!11753 c!7791) b!60089))

(assert (= (and d!11753 (not c!7791)) b!60090))

(assert (= (and b!60090 c!7792) b!60091))

(assert (= (and b!60090 (not c!7792)) b!60092))

(declare-fun m!52575 () Bool)

(assert (=> b!60091 m!52575))

(assert (=> d!11379 d!11753))

(declare-fun d!11755 () Bool)

(assert (=> d!11755 (= (get!1083 (getValueByKey!123 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2385 (getValueByKey!123 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!11297 d!11755))

(assert (=> d!11297 d!11413))

(declare-fun d!11757 () Bool)

(assert (=> d!11757 (= (inRange!0 (ite c!7601 (index!3072 lt!24066) (ite c!7602 (index!3071 lt!24039) (index!3074 lt!24039))) (mask!5927 newMap!16)) (and (bvsge (ite c!7601 (index!3072 lt!24066) (ite c!7602 (index!3071 lt!24039) (index!3074 lt!24039))) #b00000000000000000000000000000000) (bvslt (ite c!7601 (index!3072 lt!24066) (ite c!7602 (index!3071 lt!24039) (index!3074 lt!24039))) (bvadd (mask!5927 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!4449 d!11757))

(declare-fun d!11759 () Bool)

(declare-fun lt!24552 () Bool)

(assert (=> d!11759 (= lt!24552 (select (content!62 Nil!1451) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!39485 () Bool)

(assert (=> d!11759 (= lt!24552 e!39485)))

(declare-fun res!33274 () Bool)

(assert (=> d!11759 (=> (not res!33274) (not e!39485))))

(assert (=> d!11759 (= res!33274 ((_ is Cons!1450) Nil!1451))))

(assert (=> d!11759 (= (contains!693 Nil!1451 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) lt!24552)))

(declare-fun b!60093 () Bool)

(declare-fun e!39484 () Bool)

(assert (=> b!60093 (= e!39485 e!39484)))

(declare-fun res!33275 () Bool)

(assert (=> b!60093 (=> res!33275 e!39484)))

(assert (=> b!60093 (= res!33275 (= (h!2031 Nil!1451) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!60094 () Bool)

(assert (=> b!60094 (= e!39484 (contains!693 (t!4800 Nil!1451) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!11759 res!33274) b!60093))

(assert (= (and b!60093 (not res!33275)) b!60094))

(assert (=> d!11759 m!50919))

(assert (=> d!11759 m!50843))

(declare-fun m!52577 () Bool)

(assert (=> d!11759 m!52577))

(assert (=> b!60094 m!50843))

(declare-fun m!52579 () Bool)

(assert (=> b!60094 m!52579))

(assert (=> b!59198 d!11759))

(declare-fun b!60098 () Bool)

(declare-fun e!39487 () Option!129)

(assert (=> b!60098 (= e!39487 None!127)))

(declare-fun d!11761 () Bool)

(declare-fun c!7793 () Bool)

(assert (=> d!11761 (= c!7793 (and ((_ is Cons!1449) (toList!704 lt!23904)) (= (_1!1034 (h!2030 (toList!704 lt!23904))) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(declare-fun e!39486 () Option!129)

(assert (=> d!11761 (= (getValueByKey!123 (toList!704 lt!23904) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))) e!39486)))

(declare-fun b!60095 () Bool)

(assert (=> b!60095 (= e!39486 (Some!128 (_2!1034 (h!2030 (toList!704 lt!23904)))))))

(declare-fun b!60097 () Bool)

(assert (=> b!60097 (= e!39487 (getValueByKey!123 (t!4799 (toList!704 lt!23904)) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!60096 () Bool)

(assert (=> b!60096 (= e!39486 e!39487)))

(declare-fun c!7794 () Bool)

(assert (=> b!60096 (= c!7794 (and ((_ is Cons!1449) (toList!704 lt!23904)) (not (= (_1!1034 (h!2030 (toList!704 lt!23904))) (_1!1034 (ite (or c!7487 c!7488) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))))

(assert (= (and d!11761 c!7793) b!60095))

(assert (= (and d!11761 (not c!7793)) b!60096))

(assert (= (and b!60096 c!7794) b!60097))

(assert (= (and b!60096 (not c!7794)) b!60098))

(declare-fun m!52581 () Bool)

(assert (=> b!60097 m!52581))

(assert (=> b!59208 d!11761))

(declare-fun d!11763 () Bool)

(assert (=> d!11763 (= (apply!66 lt!23865 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (getValueByKey!123 (toList!704 lt!23865) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2606 () Bool)

(assert (= bs!2606 d!11763))

(assert (=> bs!2606 m!50843))

(assert (=> bs!2606 m!52543))

(assert (=> bs!2606 m!52543))

(declare-fun m!52583 () Bool)

(assert (=> bs!2606 m!52583))

(assert (=> b!59171 d!11763))

(declare-fun d!11765 () Bool)

(declare-fun c!7795 () Bool)

(assert (=> d!11765 (= c!7795 ((_ is ValueCellFull!855) (select (arr!1781 (_values!2026 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!39488 () V!2843)

(assert (=> d!11765 (= (get!1080 (select (arr!1781 (_values!2026 newMap!16)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!39488)))

(declare-fun b!60099 () Bool)

(assert (=> b!60099 (= e!39488 (get!1081 (select (arr!1781 (_values!2026 newMap!16)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!60100 () Bool)

(assert (=> b!60100 (= e!39488 (get!1082 (select (arr!1781 (_values!2026 newMap!16)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11765 c!7795) b!60099))

(assert (= (and d!11765 (not c!7795)) b!60100))

(assert (=> b!60099 m!50847))

(assert (=> b!60099 m!50849))

(declare-fun m!52585 () Bool)

(assert (=> b!60099 m!52585))

(assert (=> b!60100 m!50847))

(assert (=> b!60100 m!50849))

(declare-fun m!52587 () Bool)

(assert (=> b!60100 m!52587))

(assert (=> b!59171 d!11765))

(assert (=> b!59396 d!11437))

(declare-fun d!11767 () Bool)

(declare-fun e!39489 () Bool)

(assert (=> d!11767 e!39489))

(declare-fun res!33276 () Bool)

(assert (=> d!11767 (=> res!33276 e!39489)))

(declare-fun lt!24553 () Bool)

(assert (=> d!11767 (= res!33276 (not lt!24553))))

(declare-fun lt!24556 () Bool)

(assert (=> d!11767 (= lt!24553 lt!24556)))

(declare-fun lt!24555 () Unit!1553)

(declare-fun e!39490 () Unit!1553)

(assert (=> d!11767 (= lt!24555 e!39490)))

(declare-fun c!7796 () Bool)

(assert (=> d!11767 (= c!7796 lt!24556)))

(assert (=> d!11767 (= lt!24556 (containsKey!127 (toList!704 lt!23746) lt!23749))))

(assert (=> d!11767 (= (contains!692 lt!23746 lt!23749) lt!24553)))

(declare-fun b!60101 () Bool)

(declare-fun lt!24554 () Unit!1553)

(assert (=> b!60101 (= e!39490 lt!24554)))

(assert (=> b!60101 (= lt!24554 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23746) lt!23749))))

(assert (=> b!60101 (isDefined!77 (getValueByKey!123 (toList!704 lt!23746) lt!23749))))

(declare-fun b!60102 () Bool)

(declare-fun Unit!1604 () Unit!1553)

(assert (=> b!60102 (= e!39490 Unit!1604)))

(declare-fun b!60103 () Bool)

(assert (=> b!60103 (= e!39489 (isDefined!77 (getValueByKey!123 (toList!704 lt!23746) lt!23749)))))

(assert (= (and d!11767 c!7796) b!60101))

(assert (= (and d!11767 (not c!7796)) b!60102))

(assert (= (and d!11767 (not res!33276)) b!60103))

(declare-fun m!52589 () Bool)

(assert (=> d!11767 m!52589))

(declare-fun m!52591 () Bool)

(assert (=> b!60101 m!52591))

(assert (=> b!60101 m!51331))

(assert (=> b!60101 m!51331))

(declare-fun m!52593 () Bool)

(assert (=> b!60101 m!52593))

(assert (=> b!60103 m!51331))

(assert (=> b!60103 m!51331))

(assert (=> b!60103 m!52593))

(assert (=> d!11369 d!11767))

(declare-fun d!11769 () Bool)

(assert (=> d!11769 (= (apply!66 (+!81 lt!23746 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23749) (apply!66 lt!23746 lt!23749))))

(assert (=> d!11769 true))

(declare-fun _$34!764 () Unit!1553)

(assert (=> d!11769 (= (choose!317 lt!23746 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23749) _$34!764)))

(declare-fun bs!2607 () Bool)

(assert (= bs!2607 d!11769))

(assert (=> bs!2607 m!50711))

(assert (=> bs!2607 m!50711))

(assert (=> bs!2607 m!50713))

(assert (=> bs!2607 m!50733))

(assert (=> d!11369 d!11769))

(assert (=> d!11369 d!11393))

(assert (=> d!11369 d!11385))

(assert (=> d!11369 d!11387))

(declare-fun d!11771 () Bool)

(assert (=> d!11771 (= (apply!66 lt!23913 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1083 (getValueByKey!123 (toList!704 lt!23913) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2608 () Bool)

(assert (= bs!2608 d!11771))

(assert (=> bs!2608 m!51773))

(assert (=> bs!2608 m!51773))

(declare-fun m!52595 () Bool)

(assert (=> bs!2608 m!52595))

(assert (=> b!59220 d!11771))

(declare-fun d!11773 () Bool)

(assert (=> d!11773 (contains!692 (getCurrentListMap!401 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))

(assert (=> d!11773 true))

(declare-fun _$16!78 () Unit!1553)

(assert (=> d!11773 (= (choose!315 (_keys!3667 newMap!16) lt!23834 (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) (index!3072 lt!23839) (defaultEntry!2043 newMap!16)) _$16!78)))

(declare-fun bs!2609 () Bool)

(assert (= bs!2609 d!11773))

(assert (=> bs!2609 m!51137))

(assert (=> bs!2609 m!50777))

(assert (=> bs!2609 m!51137))

(assert (=> bs!2609 m!50777))

(assert (=> bs!2609 m!51139))

(assert (=> d!11339 d!11773))

(assert (=> d!11339 d!11417))

(assert (=> bm!4448 d!11323))

(declare-fun d!11775 () Bool)

(declare-fun e!39491 () Bool)

(assert (=> d!11775 e!39491))

(declare-fun res!33278 () Bool)

(assert (=> d!11775 (=> (not res!33278) (not e!39491))))

(declare-fun lt!24560 () ListLongMap!1377)

(assert (=> d!11775 (= res!33278 (contains!692 lt!24560 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(declare-fun lt!24557 () List!1453)

(assert (=> d!11775 (= lt!24560 (ListLongMap!1378 lt!24557))))

(declare-fun lt!24559 () Unit!1553)

(declare-fun lt!24558 () Unit!1553)

(assert (=> d!11775 (= lt!24559 lt!24558)))

(assert (=> d!11775 (= (getValueByKey!123 lt!24557 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(assert (=> d!11775 (= lt!24558 (lemmaContainsTupThenGetReturnValue!42 lt!24557 (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(assert (=> d!11775 (= lt!24557 (insertStrictlySorted!44 (toList!704 call!4416) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(assert (=> d!11775 (= (+!81 call!4416 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))) lt!24560)))

(declare-fun b!60104 () Bool)

(declare-fun res!33277 () Bool)

(assert (=> b!60104 (=> (not res!33277) (not e!39491))))

(assert (=> b!60104 (= res!33277 (= (getValueByKey!123 (toList!704 lt!24560) (_1!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))))

(declare-fun b!60105 () Bool)

(assert (=> b!60105 (= e!39491 (contains!694 (toList!704 lt!24560) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))

(assert (= (and d!11775 res!33278) b!60104))

(assert (= (and b!60104 res!33277) b!60105))

(declare-fun m!52597 () Bool)

(assert (=> d!11775 m!52597))

(declare-fun m!52599 () Bool)

(assert (=> d!11775 m!52599))

(declare-fun m!52601 () Bool)

(assert (=> d!11775 m!52601))

(declare-fun m!52603 () Bool)

(assert (=> d!11775 m!52603))

(declare-fun m!52605 () Bool)

(assert (=> b!60104 m!52605))

(declare-fun m!52607 () Bool)

(assert (=> b!60105 m!52607))

(assert (=> b!59152 d!11775))

(declare-fun d!11777 () Bool)

(declare-fun e!39492 () Bool)

(assert (=> d!11777 e!39492))

(declare-fun res!33280 () Bool)

(assert (=> d!11777 (=> (not res!33280) (not e!39492))))

(declare-fun lt!24564 () ListLongMap!1377)

(assert (=> d!11777 (= res!33280 (contains!692 lt!24564 (_1!1034 (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))))

(declare-fun lt!24561 () List!1453)

(assert (=> d!11777 (= lt!24564 (ListLongMap!1378 lt!24561))))

(declare-fun lt!24563 () Unit!1553)

(declare-fun lt!24562 () Unit!1553)

(assert (=> d!11777 (= lt!24563 lt!24562)))

(assert (=> d!11777 (= (getValueByKey!123 lt!24561 (_1!1034 (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))) (Some!128 (_2!1034 (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))))

(assert (=> d!11777 (= lt!24562 (lemmaContainsTupThenGetReturnValue!42 lt!24561 (_1!1034 (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))) (_2!1034 (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))))

(assert (=> d!11777 (= lt!24561 (insertStrictlySorted!44 (toList!704 (ite c!7542 call!4419 (ite c!7543 call!4418 call!4420))) (_1!1034 (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))) (_2!1034 (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))))

(assert (=> d!11777 (= (+!81 (ite c!7542 call!4419 (ite c!7543 call!4418 call!4420)) (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))) lt!24564)))

(declare-fun b!60106 () Bool)

(declare-fun res!33279 () Bool)

(assert (=> b!60106 (=> (not res!33279) (not e!39492))))

(assert (=> b!60106 (= res!33279 (= (getValueByKey!123 (toList!704 lt!24564) (_1!1034 (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))) (Some!128 (_2!1034 (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))))

(declare-fun b!60107 () Bool)

(assert (=> b!60107 (= e!39492 (contains!694 (toList!704 lt!24564) (ite (or c!7542 c!7543) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1959 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(assert (= (and d!11777 res!33280) b!60106))

(assert (= (and b!60106 res!33279) b!60107))

(declare-fun m!52609 () Bool)

(assert (=> d!11777 m!52609))

(declare-fun m!52611 () Bool)

(assert (=> d!11777 m!52611))

(declare-fun m!52613 () Bool)

(assert (=> d!11777 m!52613))

(declare-fun m!52615 () Bool)

(assert (=> d!11777 m!52615))

(declare-fun m!52617 () Bool)

(assert (=> b!60106 m!52617))

(declare-fun m!52619 () Bool)

(assert (=> b!60107 m!52619))

(assert (=> bm!4417 d!11777))

(assert (=> b!59472 d!11573))

(assert (=> b!59472 d!11575))

(declare-fun d!11779 () Bool)

(declare-fun e!39493 () Bool)

(assert (=> d!11779 e!39493))

(declare-fun res!33281 () Bool)

(assert (=> d!11779 (=> res!33281 e!39493)))

(declare-fun lt!24565 () Bool)

(assert (=> d!11779 (= res!33281 (not lt!24565))))

(declare-fun lt!24568 () Bool)

(assert (=> d!11779 (= lt!24565 lt!24568)))

(declare-fun lt!24567 () Unit!1553)

(declare-fun e!39494 () Unit!1553)

(assert (=> d!11779 (= lt!24567 e!39494)))

(declare-fun c!7797 () Bool)

(assert (=> d!11779 (= c!7797 lt!24568)))

(assert (=> d!11779 (= lt!24568 (containsKey!127 (toList!704 lt!24146) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11779 (= (contains!692 lt!24146 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24565)))

(declare-fun b!60108 () Bool)

(declare-fun lt!24566 () Unit!1553)

(assert (=> b!60108 (= e!39494 lt!24566)))

(assert (=> b!60108 (= lt!24566 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!24146) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> b!60108 (isDefined!77 (getValueByKey!123 (toList!704 lt!24146) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60109 () Bool)

(declare-fun Unit!1605 () Unit!1553)

(assert (=> b!60109 (= e!39494 Unit!1605)))

(declare-fun b!60110 () Bool)

(assert (=> b!60110 (= e!39493 (isDefined!77 (getValueByKey!123 (toList!704 lt!24146) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (= (and d!11779 c!7797) b!60108))

(assert (= (and d!11779 (not c!7797)) b!60109))

(assert (= (and d!11779 (not res!33281)) b!60110))

(declare-fun m!52621 () Bool)

(assert (=> d!11779 m!52621))

(declare-fun m!52623 () Bool)

(assert (=> b!60108 m!52623))

(assert (=> b!60108 m!51347))

(assert (=> b!60108 m!51347))

(declare-fun m!52625 () Bool)

(assert (=> b!60108 m!52625))

(assert (=> b!60110 m!51347))

(assert (=> b!60110 m!51347))

(assert (=> b!60110 m!52625))

(assert (=> d!11391 d!11779))

(declare-fun b!60114 () Bool)

(declare-fun e!39496 () Option!129)

(assert (=> b!60114 (= e!39496 None!127)))

(declare-fun d!11781 () Bool)

(declare-fun c!7798 () Bool)

(assert (=> d!11781 (= c!7798 (and ((_ is Cons!1449) lt!24143) (= (_1!1034 (h!2030 lt!24143)) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39495 () Option!129)

(assert (=> d!11781 (= (getValueByKey!123 lt!24143 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) e!39495)))

(declare-fun b!60111 () Bool)

(assert (=> b!60111 (= e!39495 (Some!128 (_2!1034 (h!2030 lt!24143))))))

(declare-fun b!60113 () Bool)

(assert (=> b!60113 (= e!39496 (getValueByKey!123 (t!4799 lt!24143) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60112 () Bool)

(assert (=> b!60112 (= e!39495 e!39496)))

(declare-fun c!7799 () Bool)

(assert (=> b!60112 (= c!7799 (and ((_ is Cons!1449) lt!24143) (not (= (_1!1034 (h!2030 lt!24143)) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11781 c!7798) b!60111))

(assert (= (and d!11781 (not c!7798)) b!60112))

(assert (= (and b!60112 c!7799) b!60113))

(assert (= (and b!60112 (not c!7799)) b!60114))

(declare-fun m!52627 () Bool)

(assert (=> b!60113 m!52627))

(assert (=> d!11391 d!11781))

(declare-fun d!11783 () Bool)

(assert (=> d!11783 (= (getValueByKey!123 lt!24143 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun lt!24569 () Unit!1553)

(assert (=> d!11783 (= lt!24569 (choose!319 lt!24143 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun e!39497 () Bool)

(assert (=> d!11783 e!39497))

(declare-fun res!33282 () Bool)

(assert (=> d!11783 (=> (not res!33282) (not e!39497))))

(assert (=> d!11783 (= res!33282 (isStrictlySorted!279 lt!24143))))

(assert (=> d!11783 (= (lemmaContainsTupThenGetReturnValue!42 lt!24143 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24569)))

(declare-fun b!60115 () Bool)

(declare-fun res!33283 () Bool)

(assert (=> b!60115 (=> (not res!33283) (not e!39497))))

(assert (=> b!60115 (= res!33283 (containsKey!127 lt!24143 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60116 () Bool)

(assert (=> b!60116 (= e!39497 (contains!694 lt!24143 (tuple2!2049 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (= (and d!11783 res!33282) b!60115))

(assert (= (and b!60115 res!33283) b!60116))

(assert (=> d!11783 m!51341))

(declare-fun m!52629 () Bool)

(assert (=> d!11783 m!52629))

(declare-fun m!52631 () Bool)

(assert (=> d!11783 m!52631))

(declare-fun m!52633 () Bool)

(assert (=> b!60115 m!52633))

(declare-fun m!52635 () Bool)

(assert (=> b!60116 m!52635))

(assert (=> d!11391 d!11783))

(declare-fun e!39501 () Bool)

(declare-fun lt!24570 () List!1453)

(declare-fun b!60117 () Bool)

(assert (=> b!60117 (= e!39501 (contains!694 lt!24570 (tuple2!2049 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!60118 () Bool)

(declare-fun e!39499 () List!1453)

(declare-fun e!39498 () List!1453)

(assert (=> b!60118 (= e!39499 e!39498)))

(declare-fun c!7800 () Bool)

(assert (=> b!60118 (= c!7800 (and ((_ is Cons!1449) (toList!704 lt!23757)) (= (_1!1034 (h!2030 (toList!704 lt!23757))) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun call!4546 () List!1453)

(declare-fun bm!4541 () Bool)

(declare-fun c!7803 () Bool)

(declare-fun e!39500 () List!1453)

(assert (=> bm!4541 (= call!4546 ($colon$colon!59 e!39500 (ite c!7803 (h!2030 (toList!704 lt!23757)) (tuple2!2049 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(declare-fun c!7802 () Bool)

(assert (=> bm!4541 (= c!7802 c!7803)))

(declare-fun d!11785 () Bool)

(assert (=> d!11785 e!39501))

(declare-fun res!33285 () Bool)

(assert (=> d!11785 (=> (not res!33285) (not e!39501))))

(assert (=> d!11785 (= res!33285 (isStrictlySorted!279 lt!24570))))

(assert (=> d!11785 (= lt!24570 e!39499)))

(assert (=> d!11785 (= c!7803 (and ((_ is Cons!1449) (toList!704 lt!23757)) (bvslt (_1!1034 (h!2030 (toList!704 lt!23757))) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> d!11785 (isStrictlySorted!279 (toList!704 lt!23757))))

(assert (=> d!11785 (= (insertStrictlySorted!44 (toList!704 lt!23757) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24570)))

(declare-fun b!60119 () Bool)

(declare-fun e!39502 () List!1453)

(declare-fun call!4544 () List!1453)

(assert (=> b!60119 (= e!39502 call!4544)))

(declare-fun b!60120 () Bool)

(assert (=> b!60120 (= e!39499 call!4546)))

(declare-fun bm!4542 () Bool)

(declare-fun call!4545 () List!1453)

(assert (=> bm!4542 (= call!4544 call!4545)))

(declare-fun c!7801 () Bool)

(declare-fun b!60121 () Bool)

(assert (=> b!60121 (= e!39500 (ite c!7800 (t!4799 (toList!704 lt!23757)) (ite c!7801 (Cons!1449 (h!2030 (toList!704 lt!23757)) (t!4799 (toList!704 lt!23757))) Nil!1450)))))

(declare-fun b!60122 () Bool)

(assert (=> b!60122 (= e!39498 call!4545)))

(declare-fun b!60123 () Bool)

(declare-fun res!33284 () Bool)

(assert (=> b!60123 (=> (not res!33284) (not e!39501))))

(assert (=> b!60123 (= res!33284 (containsKey!127 lt!24570 (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60124 () Bool)

(assert (=> b!60124 (= e!39502 call!4544)))

(declare-fun b!60125 () Bool)

(assert (=> b!60125 (= c!7801 (and ((_ is Cons!1449) (toList!704 lt!23757)) (bvsgt (_1!1034 (h!2030 (toList!704 lt!23757))) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> b!60125 (= e!39498 e!39502)))

(declare-fun b!60126 () Bool)

(assert (=> b!60126 (= e!39500 (insertStrictlySorted!44 (t!4799 (toList!704 lt!23757)) (_1!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun bm!4543 () Bool)

(assert (=> bm!4543 (= call!4545 call!4546)))

(assert (= (and d!11785 c!7803) b!60120))

(assert (= (and d!11785 (not c!7803)) b!60118))

(assert (= (and b!60118 c!7800) b!60122))

(assert (= (and b!60118 (not c!7800)) b!60125))

(assert (= (and b!60125 c!7801) b!60124))

(assert (= (and b!60125 (not c!7801)) b!60119))

(assert (= (or b!60124 b!60119) bm!4542))

(assert (= (or b!60122 bm!4542) bm!4543))

(assert (= (or b!60120 bm!4543) bm!4541))

(assert (= (and bm!4541 c!7802) b!60126))

(assert (= (and bm!4541 (not c!7802)) b!60121))

(assert (= (and d!11785 res!33285) b!60123))

(assert (= (and b!60123 res!33284) b!60117))

(declare-fun m!52637 () Bool)

(assert (=> b!60126 m!52637))

(declare-fun m!52639 () Bool)

(assert (=> b!60117 m!52639))

(declare-fun m!52641 () Bool)

(assert (=> bm!4541 m!52641))

(declare-fun m!52643 () Bool)

(assert (=> b!60123 m!52643))

(declare-fun m!52645 () Bool)

(assert (=> d!11785 m!52645))

(declare-fun m!52647 () Bool)

(assert (=> d!11785 m!52647))

(assert (=> d!11391 d!11785))

(assert (=> d!11313 d!11417))

(declare-fun d!11787 () Bool)

(declare-fun res!33286 () Bool)

(declare-fun e!39503 () Bool)

(assert (=> d!11787 (=> res!33286 e!39503)))

(assert (=> d!11787 (= res!33286 (and ((_ is Cons!1449) (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))) (= (_1!1034 (h!2030 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(assert (=> d!11787 (= (containsKey!127 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) e!39503)))

(declare-fun b!60127 () Bool)

(declare-fun e!39504 () Bool)

(assert (=> b!60127 (= e!39503 e!39504)))

(declare-fun res!33287 () Bool)

(assert (=> b!60127 (=> (not res!33287) (not e!39504))))

(assert (=> b!60127 (= res!33287 (and (or (not ((_ is Cons!1449) (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))))) (bvsle (_1!1034 (h!2030 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))) ((_ is Cons!1449) (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))) (bvslt (_1!1034 (h!2030 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(declare-fun b!60128 () Bool)

(assert (=> b!60128 (= e!39504 (containsKey!127 (t!4799 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (= (and d!11787 (not res!33286)) b!60127))

(assert (= (and b!60127 res!33287) b!60128))

(assert (=> b!60128 m!50591))

(declare-fun m!52649 () Bool)

(assert (=> b!60128 m!52649))

(assert (=> d!11343 d!11787))

(declare-fun d!11789 () Bool)

(declare-fun res!33288 () Bool)

(declare-fun e!39505 () Bool)

(assert (=> d!11789 (=> res!33288 e!39505)))

(assert (=> d!11789 (= res!33288 (and ((_ is Cons!1449) (toList!704 call!4401)) (= (_1!1034 (h!2030 (toList!704 call!4401))) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839))))))))

(assert (=> d!11789 (= (containsKey!127 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))) e!39505)))

(declare-fun b!60129 () Bool)

(declare-fun e!39506 () Bool)

(assert (=> b!60129 (= e!39505 e!39506)))

(declare-fun res!33289 () Bool)

(assert (=> b!60129 (=> (not res!33289) (not e!39506))))

(assert (=> b!60129 (= res!33289 (and (or (not ((_ is Cons!1449) (toList!704 call!4401))) (bvsle (_1!1034 (h!2030 (toList!704 call!4401))) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839))))) ((_ is Cons!1449) (toList!704 call!4401)) (bvslt (_1!1034 (h!2030 (toList!704 call!4401))) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839))))))))

(declare-fun b!60130 () Bool)

(assert (=> b!60130 (= e!39506 (containsKey!127 (t!4799 (toList!704 call!4401)) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))

(assert (= (and d!11789 (not res!33288)) b!60129))

(assert (= (and b!60129 res!33289) b!60130))

(declare-fun m!52651 () Bool)

(assert (=> b!60130 m!52651))

(assert (=> d!11311 d!11789))

(declare-fun d!11791 () Bool)

(assert (=> d!11791 (= (get!1083 (getValueByKey!123 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2385 (getValueByKey!123 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!11345 d!11791))

(assert (=> d!11345 d!11461))

(assert (=> d!11335 d!11251))

(declare-fun d!11793 () Bool)

(assert (=> d!11793 (= (apply!66 lt!24083 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1083 (getValueByKey!123 (toList!704 lt!24083) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2610 () Bool)

(assert (= bs!2610 d!11793))

(declare-fun m!52653 () Bool)

(assert (=> bs!2610 m!52653))

(assert (=> bs!2610 m!52653))

(declare-fun m!52655 () Bool)

(assert (=> bs!2610 m!52655))

(assert (=> b!59406 d!11793))

(declare-fun bm!4544 () Bool)

(declare-fun call!4547 () (_ BitVec 32))

(assert (=> bm!4544 (= call!4547 (arrayCountValidKeys!0 (_keys!3667 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun d!11795 () Bool)

(declare-fun lt!24571 () (_ BitVec 32))

(assert (=> d!11795 (and (bvsge lt!24571 #b00000000000000000000000000000000) (bvsle lt!24571 (bvsub (size!2010 (_keys!3667 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!39508 () (_ BitVec 32))

(assert (=> d!11795 (= lt!24571 e!39508)))

(declare-fun c!7805 () Bool)

(assert (=> d!11795 (= c!7805 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11795 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 (_keys!3667 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2010 (_keys!3667 newMap!16)) (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11795 (= (arrayCountValidKeys!0 (_keys!3667 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 (_keys!3667 newMap!16))) lt!24571)))

(declare-fun b!60131 () Bool)

(declare-fun e!39507 () (_ BitVec 32))

(assert (=> b!60131 (= e!39508 e!39507)))

(declare-fun c!7804 () Bool)

(assert (=> b!60131 (= c!7804 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!60132 () Bool)

(assert (=> b!60132 (= e!39507 (bvadd #b00000000000000000000000000000001 call!4547))))

(declare-fun b!60133 () Bool)

(assert (=> b!60133 (= e!39508 #b00000000000000000000000000000000)))

(declare-fun b!60134 () Bool)

(assert (=> b!60134 (= e!39507 call!4547)))

(assert (= (and d!11795 c!7805) b!60133))

(assert (= (and d!11795 (not c!7805)) b!60131))

(assert (= (and b!60131 c!7804) b!60132))

(assert (= (and b!60131 (not c!7804)) b!60134))

(assert (= (or b!60132 b!60134) bm!4544))

(declare-fun m!52657 () Bool)

(assert (=> bm!4544 m!52657))

(declare-fun m!52659 () Bool)

(assert (=> b!60131 m!52659))

(assert (=> b!60131 m!52659))

(declare-fun m!52661 () Bool)

(assert (=> b!60131 m!52661))

(assert (=> bm!4420 d!11795))

(assert (=> b!59424 d!11423))

(assert (=> d!11329 d!11315))

(assert (=> d!11329 d!11317))

(declare-fun d!11797 () Bool)

(assert (=> d!11797 (isDefined!77 (getValueByKey!123 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11797 true))

(declare-fun _$12!305 () Unit!1553)

(assert (=> d!11797 (= (choose!313 (toList!704 lt!23660) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) _$12!305)))

(declare-fun bs!2611 () Bool)

(assert (= bs!2611 d!11797))

(assert (=> bs!2611 m!50591))

(assert (=> bs!2611 m!50757))

(assert (=> bs!2611 m!50757))

(assert (=> bs!2611 m!50759))

(assert (=> d!11329 d!11797))

(declare-fun d!11799 () Bool)

(declare-fun res!33294 () Bool)

(declare-fun e!39513 () Bool)

(assert (=> d!11799 (=> res!33294 e!39513)))

(assert (=> d!11799 (= res!33294 (or ((_ is Nil!1450) (toList!704 lt!23660)) ((_ is Nil!1450) (t!4799 (toList!704 lt!23660)))))))

(assert (=> d!11799 (= (isStrictlySorted!279 (toList!704 lt!23660)) e!39513)))

(declare-fun b!60139 () Bool)

(declare-fun e!39514 () Bool)

(assert (=> b!60139 (= e!39513 e!39514)))

(declare-fun res!33295 () Bool)

(assert (=> b!60139 (=> (not res!33295) (not e!39514))))

(assert (=> b!60139 (= res!33295 (bvslt (_1!1034 (h!2030 (toList!704 lt!23660))) (_1!1034 (h!2030 (t!4799 (toList!704 lt!23660))))))))

(declare-fun b!60140 () Bool)

(assert (=> b!60140 (= e!39514 (isStrictlySorted!279 (t!4799 (toList!704 lt!23660))))))

(assert (= (and d!11799 (not res!33294)) b!60139))

(assert (= (and b!60139 res!33295) b!60140))

(declare-fun m!52663 () Bool)

(assert (=> b!60140 m!52663))

(assert (=> d!11329 d!11799))

(assert (=> bm!4416 d!11693))

(declare-fun d!11801 () Bool)

(declare-fun e!39515 () Bool)

(assert (=> d!11801 e!39515))

(declare-fun res!33296 () Bool)

(assert (=> d!11801 (=> res!33296 e!39515)))

(declare-fun lt!24572 () Bool)

(assert (=> d!11801 (= res!33296 (not lt!24572))))

(declare-fun lt!24575 () Bool)

(assert (=> d!11801 (= lt!24572 lt!24575)))

(declare-fun lt!24574 () Unit!1553)

(declare-fun e!39516 () Unit!1553)

(assert (=> d!11801 (= lt!24574 e!39516)))

(declare-fun c!7806 () Bool)

(assert (=> d!11801 (= c!7806 lt!24575)))

(assert (=> d!11801 (= lt!24575 (containsKey!127 (toList!704 lt!24138) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11801 (= (contains!692 lt!24138 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24572)))

(declare-fun b!60141 () Bool)

(declare-fun lt!24573 () Unit!1553)

(assert (=> b!60141 (= e!39516 lt!24573)))

(assert (=> b!60141 (= lt!24573 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!24138) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> b!60141 (isDefined!77 (getValueByKey!123 (toList!704 lt!24138) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60142 () Bool)

(declare-fun Unit!1606 () Unit!1553)

(assert (=> b!60142 (= e!39516 Unit!1606)))

(declare-fun b!60143 () Bool)

(assert (=> b!60143 (= e!39515 (isDefined!77 (getValueByKey!123 (toList!704 lt!24138) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (= (and d!11801 c!7806) b!60141))

(assert (= (and d!11801 (not c!7806)) b!60142))

(assert (= (and d!11801 (not res!33296)) b!60143))

(declare-fun m!52665 () Bool)

(assert (=> d!11801 m!52665))

(declare-fun m!52667 () Bool)

(assert (=> b!60141 m!52667))

(assert (=> b!60141 m!51311))

(assert (=> b!60141 m!51311))

(declare-fun m!52669 () Bool)

(assert (=> b!60141 m!52669))

(assert (=> b!60143 m!51311))

(assert (=> b!60143 m!51311))

(assert (=> b!60143 m!52669))

(assert (=> d!11381 d!11801))

(declare-fun b!60147 () Bool)

(declare-fun e!39518 () Option!129)

(assert (=> b!60147 (= e!39518 None!127)))

(declare-fun c!7807 () Bool)

(declare-fun d!11803 () Bool)

(assert (=> d!11803 (= c!7807 (and ((_ is Cons!1449) lt!24135) (= (_1!1034 (h!2030 lt!24135)) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39517 () Option!129)

(assert (=> d!11803 (= (getValueByKey!123 lt!24135 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) e!39517)))

(declare-fun b!60144 () Bool)

(assert (=> b!60144 (= e!39517 (Some!128 (_2!1034 (h!2030 lt!24135))))))

(declare-fun b!60146 () Bool)

(assert (=> b!60146 (= e!39518 (getValueByKey!123 (t!4799 lt!24135) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60145 () Bool)

(assert (=> b!60145 (= e!39517 e!39518)))

(declare-fun c!7808 () Bool)

(assert (=> b!60145 (= c!7808 (and ((_ is Cons!1449) lt!24135) (not (= (_1!1034 (h!2030 lt!24135)) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11803 c!7807) b!60144))

(assert (= (and d!11803 (not c!7807)) b!60145))

(assert (= (and b!60145 c!7808) b!60146))

(assert (= (and b!60145 (not c!7808)) b!60147))

(declare-fun m!52671 () Bool)

(assert (=> b!60146 m!52671))

(assert (=> d!11381 d!11803))

(declare-fun d!11805 () Bool)

(assert (=> d!11805 (= (getValueByKey!123 lt!24135 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun lt!24576 () Unit!1553)

(assert (=> d!11805 (= lt!24576 (choose!319 lt!24135 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun e!39519 () Bool)

(assert (=> d!11805 e!39519))

(declare-fun res!33297 () Bool)

(assert (=> d!11805 (=> (not res!33297) (not e!39519))))

(assert (=> d!11805 (= res!33297 (isStrictlySorted!279 lt!24135))))

(assert (=> d!11805 (= (lemmaContainsTupThenGetReturnValue!42 lt!24135 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24576)))

(declare-fun b!60148 () Bool)

(declare-fun res!33298 () Bool)

(assert (=> b!60148 (=> (not res!33298) (not e!39519))))

(assert (=> b!60148 (= res!33298 (containsKey!127 lt!24135 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60149 () Bool)

(assert (=> b!60149 (= e!39519 (contains!694 lt!24135 (tuple2!2049 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (= (and d!11805 res!33297) b!60148))

(assert (= (and b!60148 res!33298) b!60149))

(assert (=> d!11805 m!51305))

(declare-fun m!52673 () Bool)

(assert (=> d!11805 m!52673))

(declare-fun m!52675 () Bool)

(assert (=> d!11805 m!52675))

(declare-fun m!52677 () Bool)

(assert (=> b!60148 m!52677))

(declare-fun m!52679 () Bool)

(assert (=> b!60149 m!52679))

(assert (=> d!11381 d!11805))

(declare-fun b!60150 () Bool)

(declare-fun e!39523 () Bool)

(declare-fun lt!24577 () List!1453)

(assert (=> b!60150 (= e!39523 (contains!694 lt!24577 (tuple2!2049 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!60151 () Bool)

(declare-fun e!39521 () List!1453)

(declare-fun e!39520 () List!1453)

(assert (=> b!60151 (= e!39521 e!39520)))

(declare-fun c!7809 () Bool)

(assert (=> b!60151 (= c!7809 (and ((_ is Cons!1449) (toList!704 lt!23744)) (= (_1!1034 (h!2030 (toList!704 lt!23744))) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun bm!4545 () Bool)

(declare-fun c!7812 () Bool)

(declare-fun call!4550 () List!1453)

(declare-fun e!39522 () List!1453)

(assert (=> bm!4545 (= call!4550 ($colon$colon!59 e!39522 (ite c!7812 (h!2030 (toList!704 lt!23744)) (tuple2!2049 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(declare-fun c!7811 () Bool)

(assert (=> bm!4545 (= c!7811 c!7812)))

(declare-fun d!11807 () Bool)

(assert (=> d!11807 e!39523))

(declare-fun res!33300 () Bool)

(assert (=> d!11807 (=> (not res!33300) (not e!39523))))

(assert (=> d!11807 (= res!33300 (isStrictlySorted!279 lt!24577))))

(assert (=> d!11807 (= lt!24577 e!39521)))

(assert (=> d!11807 (= c!7812 (and ((_ is Cons!1449) (toList!704 lt!23744)) (bvslt (_1!1034 (h!2030 (toList!704 lt!23744))) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> d!11807 (isStrictlySorted!279 (toList!704 lt!23744))))

(assert (=> d!11807 (= (insertStrictlySorted!44 (toList!704 lt!23744) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24577)))

(declare-fun b!60152 () Bool)

(declare-fun e!39524 () List!1453)

(declare-fun call!4548 () List!1453)

(assert (=> b!60152 (= e!39524 call!4548)))

(declare-fun b!60153 () Bool)

(assert (=> b!60153 (= e!39521 call!4550)))

(declare-fun bm!4546 () Bool)

(declare-fun call!4549 () List!1453)

(assert (=> bm!4546 (= call!4548 call!4549)))

(declare-fun c!7810 () Bool)

(declare-fun b!60154 () Bool)

(assert (=> b!60154 (= e!39522 (ite c!7809 (t!4799 (toList!704 lt!23744)) (ite c!7810 (Cons!1449 (h!2030 (toList!704 lt!23744)) (t!4799 (toList!704 lt!23744))) Nil!1450)))))

(declare-fun b!60155 () Bool)

(assert (=> b!60155 (= e!39520 call!4549)))

(declare-fun b!60156 () Bool)

(declare-fun res!33299 () Bool)

(assert (=> b!60156 (=> (not res!33299) (not e!39523))))

(assert (=> b!60156 (= res!33299 (containsKey!127 lt!24577 (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60157 () Bool)

(assert (=> b!60157 (= e!39524 call!4548)))

(declare-fun b!60158 () Bool)

(assert (=> b!60158 (= c!7810 (and ((_ is Cons!1449) (toList!704 lt!23744)) (bvsgt (_1!1034 (h!2030 (toList!704 lt!23744))) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> b!60158 (= e!39520 e!39524)))

(declare-fun b!60159 () Bool)

(assert (=> b!60159 (= e!39522 (insertStrictlySorted!44 (t!4799 (toList!704 lt!23744)) (_1!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun bm!4547 () Bool)

(assert (=> bm!4547 (= call!4549 call!4550)))

(assert (= (and d!11807 c!7812) b!60153))

(assert (= (and d!11807 (not c!7812)) b!60151))

(assert (= (and b!60151 c!7809) b!60155))

(assert (= (and b!60151 (not c!7809)) b!60158))

(assert (= (and b!60158 c!7810) b!60157))

(assert (= (and b!60158 (not c!7810)) b!60152))

(assert (= (or b!60157 b!60152) bm!4546))

(assert (= (or b!60155 bm!4546) bm!4547))

(assert (= (or b!60153 bm!4547) bm!4545))

(assert (= (and bm!4545 c!7811) b!60159))

(assert (= (and bm!4545 (not c!7811)) b!60154))

(assert (= (and d!11807 res!33300) b!60156))

(assert (= (and b!60156 res!33299) b!60150))

(declare-fun m!52681 () Bool)

(assert (=> b!60159 m!52681))

(declare-fun m!52683 () Bool)

(assert (=> b!60150 m!52683))

(declare-fun m!52685 () Bool)

(assert (=> bm!4545 m!52685))

(declare-fun m!52687 () Bool)

(assert (=> b!60156 m!52687))

(declare-fun m!52689 () Bool)

(assert (=> d!11807 m!52689))

(declare-fun m!52691 () Bool)

(assert (=> d!11807 m!52691))

(assert (=> d!11381 d!11807))

(assert (=> b!59370 d!11333))

(declare-fun d!11809 () Bool)

(declare-fun res!33301 () Bool)

(declare-fun e!39525 () Bool)

(assert (=> d!11809 (=> res!33301 e!39525)))

(assert (=> d!11809 (= res!33301 (and ((_ is Cons!1449) (toList!704 call!4404)) (= (_1!1034 (h!2030 (toList!704 call!4404))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(assert (=> d!11809 (= (containsKey!127 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) e!39525)))

(declare-fun b!60160 () Bool)

(declare-fun e!39526 () Bool)

(assert (=> b!60160 (= e!39525 e!39526)))

(declare-fun res!33302 () Bool)

(assert (=> b!60160 (=> (not res!33302) (not e!39526))))

(assert (=> b!60160 (= res!33302 (and (or (not ((_ is Cons!1449) (toList!704 call!4404))) (bvsle (_1!1034 (h!2030 (toList!704 call!4404))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))) ((_ is Cons!1449) (toList!704 call!4404)) (bvslt (_1!1034 (h!2030 (toList!704 call!4404))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355))))))

(declare-fun b!60161 () Bool)

(assert (=> b!60161 (= e!39526 (containsKey!127 (t!4799 (toList!704 call!4404)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (= (and d!11809 (not res!33301)) b!60160))

(assert (= (and b!60160 res!33302) b!60161))

(assert (=> b!60161 m!50591))

(declare-fun m!52693 () Bool)

(assert (=> b!60161 m!52693))

(assert (=> d!11401 d!11809))

(assert (=> b!59149 d!11251))

(declare-fun d!11811 () Bool)

(assert (=> d!11811 (= (get!1083 (getValueByKey!123 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2385 (getValueByKey!123 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!11319 d!11811))

(assert (=> d!11319 d!11427))

(declare-fun b!60165 () Bool)

(declare-fun e!39528 () Option!129)

(assert (=> b!60165 (= e!39528 None!127)))

(declare-fun c!7813 () Bool)

(declare-fun d!11813 () Bool)

(assert (=> d!11813 (= c!7813 (and ((_ is Cons!1449) (toList!704 lt!24142)) (= (_1!1034 (h!2030 (toList!704 lt!24142))) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39527 () Option!129)

(assert (=> d!11813 (= (getValueByKey!123 (toList!704 lt!24142) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) e!39527)))

(declare-fun b!60162 () Bool)

(assert (=> b!60162 (= e!39527 (Some!128 (_2!1034 (h!2030 (toList!704 lt!24142)))))))

(declare-fun b!60164 () Bool)

(assert (=> b!60164 (= e!39528 (getValueByKey!123 (t!4799 (toList!704 lt!24142)) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60163 () Bool)

(assert (=> b!60163 (= e!39527 e!39528)))

(declare-fun c!7814 () Bool)

(assert (=> b!60163 (= c!7814 (and ((_ is Cons!1449) (toList!704 lt!24142)) (not (= (_1!1034 (h!2030 (toList!704 lt!24142))) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11813 c!7813) b!60162))

(assert (= (and d!11813 (not c!7813)) b!60163))

(assert (= (and b!60163 c!7814) b!60164))

(assert (= (and b!60163 (not c!7814)) b!60165))

(declare-fun m!52695 () Bool)

(assert (=> b!60164 m!52695))

(assert (=> b!59475 d!11813))

(declare-fun d!11815 () Bool)

(declare-fun res!33303 () Bool)

(declare-fun e!39529 () Bool)

(assert (=> d!11815 (=> res!33303 e!39529)))

(assert (=> d!11815 (= res!33303 (and ((_ is Cons!1449) (toList!704 lt!23743)) (= (_1!1034 (h!2030 (toList!704 lt!23743))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!11815 (= (containsKey!127 (toList!704 lt!23743) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!39529)))

(declare-fun b!60166 () Bool)

(declare-fun e!39530 () Bool)

(assert (=> b!60166 (= e!39529 e!39530)))

(declare-fun res!33304 () Bool)

(assert (=> b!60166 (=> (not res!33304) (not e!39530))))

(assert (=> b!60166 (= res!33304 (and (or (not ((_ is Cons!1449) (toList!704 lt!23743))) (bvsle (_1!1034 (h!2030 (toList!704 lt!23743))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1449) (toList!704 lt!23743)) (bvslt (_1!1034 (h!2030 (toList!704 lt!23743))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!60167 () Bool)

(assert (=> b!60167 (= e!39530 (containsKey!127 (t!4799 (toList!704 lt!23743)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!11815 (not res!33303)) b!60166))

(assert (= (and b!60166 res!33304) b!60167))

(assert (=> b!60167 m!50685))

(declare-fun m!52697 () Bool)

(assert (=> b!60167 m!52697))

(assert (=> d!11281 d!11815))

(declare-fun d!11817 () Bool)

(assert (=> d!11817 (= (apply!66 lt!24083 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1083 (getValueByKey!123 (toList!704 lt!24083) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2612 () Bool)

(assert (= bs!2612 d!11817))

(assert (=> bs!2612 m!52233))

(assert (=> bs!2612 m!52233))

(declare-fun m!52699 () Bool)

(assert (=> bs!2612 m!52699))

(assert (=> b!59400 d!11817))

(declare-fun b!60171 () Bool)

(declare-fun e!39532 () Option!129)

(assert (=> b!60171 (= e!39532 None!127)))

(declare-fun c!7815 () Bool)

(declare-fun d!11819 () Bool)

(assert (=> d!11819 (= c!7815 (and ((_ is Cons!1449) (toList!704 lt!24130)) (= (_1!1034 (h!2030 (toList!704 lt!24130))) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39531 () Option!129)

(assert (=> d!11819 (= (getValueByKey!123 (toList!704 lt!24130) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) e!39531)))

(declare-fun b!60168 () Bool)

(assert (=> b!60168 (= e!39531 (Some!128 (_2!1034 (h!2030 (toList!704 lt!24130)))))))

(declare-fun b!60170 () Bool)

(assert (=> b!60170 (= e!39532 (getValueByKey!123 (t!4799 (toList!704 lt!24130)) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60169 () Bool)

(assert (=> b!60169 (= e!39531 e!39532)))

(declare-fun c!7816 () Bool)

(assert (=> b!60169 (= c!7816 (and ((_ is Cons!1449) (toList!704 lt!24130)) (not (= (_1!1034 (h!2030 (toList!704 lt!24130))) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11819 c!7815) b!60168))

(assert (= (and d!11819 (not c!7815)) b!60169))

(assert (= (and b!60169 c!7816) b!60170))

(assert (= (and b!60169 (not c!7816)) b!60171))

(declare-fun m!52701 () Bool)

(assert (=> b!60170 m!52701))

(assert (=> b!59468 d!11819))

(declare-fun b!60172 () Bool)

(declare-fun res!33305 () Bool)

(declare-fun e!39533 () Bool)

(assert (=> b!60172 (=> (not res!33305) (not e!39533))))

(assert (=> b!60172 (= res!33305 (and (= (size!2011 (_values!2026 (v!2381 (underlying!225 thiss!992)))) (bvadd (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000001)) (= (size!2010 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (size!2011 (_values!2026 (v!2381 (underlying!225 thiss!992))))) (bvsge (_size!358 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!358 (v!2381 (underlying!225 thiss!992))) (bvadd (mask!5927 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!60174 () Bool)

(declare-fun res!33307 () Bool)

(assert (=> b!60174 (=> (not res!33307) (not e!39533))))

(assert (=> b!60174 (= res!33307 (= (size!2014 (v!2381 (underlying!225 thiss!992))) (bvadd (_size!358 (v!2381 (underlying!225 thiss!992))) (bvsdiv (bvadd (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!11821 () Bool)

(declare-fun res!33306 () Bool)

(assert (=> d!11821 (=> (not res!33306) (not e!39533))))

(assert (=> d!11821 (= res!33306 (validMask!0 (mask!5927 (v!2381 (underlying!225 thiss!992)))))))

(assert (=> d!11821 (= (simpleValid!41 (v!2381 (underlying!225 thiss!992))) e!39533)))

(declare-fun b!60173 () Bool)

(declare-fun res!33308 () Bool)

(assert (=> b!60173 (=> (not res!33308) (not e!39533))))

(assert (=> b!60173 (= res!33308 (bvsge (size!2014 (v!2381 (underlying!225 thiss!992))) (_size!358 (v!2381 (underlying!225 thiss!992)))))))

(declare-fun b!60175 () Bool)

(assert (=> b!60175 (= e!39533 (and (bvsge (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!1930 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!358 (v!2381 (underlying!225 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!11821 res!33306) b!60172))

(assert (= (and b!60172 res!33305) b!60173))

(assert (= (and b!60173 res!33308) b!60174))

(assert (= (and b!60174 res!33307) b!60175))

(declare-fun m!52703 () Bool)

(assert (=> b!60174 m!52703))

(assert (=> d!11821 m!50609))

(assert (=> b!60173 m!52703))

(assert (=> d!11353 d!11821))

(declare-fun b!60176 () Bool)

(declare-fun e!39536 () Bool)

(declare-fun call!4551 () Bool)

(assert (=> b!60176 (= e!39536 call!4551)))

(declare-fun d!11823 () Bool)

(declare-fun res!33309 () Bool)

(declare-fun e!39534 () Bool)

(assert (=> d!11823 (=> res!33309 e!39534)))

(assert (=> d!11823 (= res!33309 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11823 (= (arrayNoDuplicates!0 (_keys!3667 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!7551 (Cons!1450 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) Nil!1451) Nil!1451)) e!39534)))

(declare-fun b!60177 () Bool)

(declare-fun e!39535 () Bool)

(assert (=> b!60177 (= e!39535 (contains!693 (ite c!7551 (Cons!1450 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) Nil!1451) Nil!1451) (select (arr!1780 (_keys!3667 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!60178 () Bool)

(declare-fun e!39537 () Bool)

(assert (=> b!60178 (= e!39534 e!39537)))

(declare-fun res!33311 () Bool)

(assert (=> b!60178 (=> (not res!33311) (not e!39537))))

(assert (=> b!60178 (= res!33311 (not e!39535))))

(declare-fun res!33310 () Bool)

(assert (=> b!60178 (=> (not res!33310) (not e!39535))))

(assert (=> b!60178 (= res!33310 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!60179 () Bool)

(assert (=> b!60179 (= e!39536 call!4551)))

(declare-fun bm!4548 () Bool)

(declare-fun c!7817 () Bool)

(assert (=> bm!4548 (= call!4551 (arrayNoDuplicates!0 (_keys!3667 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!7817 (Cons!1450 (select (arr!1780 (_keys!3667 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!7551 (Cons!1450 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) Nil!1451) Nil!1451)) (ite c!7551 (Cons!1450 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) Nil!1451) Nil!1451))))))

(declare-fun b!60180 () Bool)

(assert (=> b!60180 (= e!39537 e!39536)))

(assert (=> b!60180 (= c!7817 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!11823 (not res!33309)) b!60178))

(assert (= (and b!60178 res!33310) b!60177))

(assert (= (and b!60178 res!33311) b!60180))

(assert (= (and b!60180 c!7817) b!60176))

(assert (= (and b!60180 (not c!7817)) b!60179))

(assert (= (or b!60176 b!60179) bm!4548))

(assert (=> b!60177 m!52659))

(assert (=> b!60177 m!52659))

(declare-fun m!52705 () Bool)

(assert (=> b!60177 m!52705))

(assert (=> b!60178 m!52659))

(assert (=> b!60178 m!52659))

(assert (=> b!60178 m!52661))

(assert (=> bm!4548 m!52659))

(declare-fun m!52707 () Bool)

(assert (=> bm!4548 m!52707))

(assert (=> b!60180 m!52659))

(assert (=> b!60180 m!52659))

(assert (=> b!60180 m!52661))

(assert (=> bm!4421 d!11823))

(declare-fun d!11825 () Bool)

(declare-fun e!39538 () Bool)

(assert (=> d!11825 e!39538))

(declare-fun res!33312 () Bool)

(assert (=> d!11825 (=> res!33312 e!39538)))

(declare-fun lt!24578 () Bool)

(assert (=> d!11825 (= res!33312 (not lt!24578))))

(declare-fun lt!24581 () Bool)

(assert (=> d!11825 (= lt!24578 lt!24581)))

(declare-fun lt!24580 () Unit!1553)

(declare-fun e!39539 () Unit!1553)

(assert (=> d!11825 (= lt!24580 e!39539)))

(declare-fun c!7818 () Bool)

(assert (=> d!11825 (= c!7818 lt!24581)))

(assert (=> d!11825 (= lt!24581 (containsKey!127 (toList!704 lt!23865) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!11825 (= (contains!692 lt!23865 #b0000000000000000000000000000000000000000000000000000000000000000) lt!24578)))

(declare-fun b!60181 () Bool)

(declare-fun lt!24579 () Unit!1553)

(assert (=> b!60181 (= e!39539 lt!24579)))

(assert (=> b!60181 (= lt!24579 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23865) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!60181 (isDefined!77 (getValueByKey!123 (toList!704 lt!23865) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60182 () Bool)

(declare-fun Unit!1607 () Unit!1553)

(assert (=> b!60182 (= e!39539 Unit!1607)))

(declare-fun b!60183 () Bool)

(assert (=> b!60183 (= e!39538 (isDefined!77 (getValueByKey!123 (toList!704 lt!23865) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11825 c!7818) b!60181))

(assert (= (and d!11825 (not c!7818)) b!60182))

(assert (= (and d!11825 (not res!33312)) b!60183))

(declare-fun m!52709 () Bool)

(assert (=> d!11825 m!52709))

(declare-fun m!52711 () Bool)

(assert (=> b!60181 m!52711))

(assert (=> b!60181 m!52213))

(assert (=> b!60181 m!52213))

(declare-fun m!52713 () Bool)

(assert (=> b!60181 m!52713))

(assert (=> b!60183 m!52213))

(assert (=> b!60183 m!52213))

(assert (=> b!60183 m!52713))

(assert (=> bm!4414 d!11825))

(declare-fun d!11827 () Bool)

(assert (=> d!11827 (isDefined!77 (getValueByKey!123 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))

(declare-fun lt!24582 () Unit!1553)

(assert (=> d!11827 (= lt!24582 (choose!313 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))

(declare-fun e!39540 () Bool)

(assert (=> d!11827 e!39540))

(declare-fun res!33313 () Bool)

(assert (=> d!11827 (=> (not res!33313) (not e!39540))))

(assert (=> d!11827 (= res!33313 (isStrictlySorted!279 (toList!704 call!4401)))))

(assert (=> d!11827 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))) lt!24582)))

(declare-fun b!60184 () Bool)

(assert (=> b!60184 (= e!39540 (containsKey!127 (toList!704 call!4401) (ite c!7518 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!23839)))))))

(assert (= (and d!11827 res!33313) b!60184))

(assert (=> d!11827 m!50957))

(assert (=> d!11827 m!50957))

(assert (=> d!11827 m!50959))

(declare-fun m!52715 () Bool)

(assert (=> d!11827 m!52715))

(declare-fun m!52717 () Bool)

(assert (=> d!11827 m!52717))

(assert (=> b!60184 m!50953))

(assert (=> b!59210 d!11827))

(assert (=> b!59210 d!11641))

(assert (=> b!59210 d!11643))

(declare-fun d!11829 () Bool)

(declare-fun res!33314 () Bool)

(declare-fun e!39541 () Bool)

(assert (=> d!11829 (=> res!33314 e!39541)))

(assert (=> d!11829 (= res!33314 (and ((_ is Cons!1449) (toList!704 lt!23743)) (= (_1!1034 (h!2030 (toList!704 lt!23743))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!11829 (= (containsKey!127 (toList!704 lt!23743) #b1000000000000000000000000000000000000000000000000000000000000000) e!39541)))

(declare-fun b!60185 () Bool)

(declare-fun e!39542 () Bool)

(assert (=> b!60185 (= e!39541 e!39542)))

(declare-fun res!33315 () Bool)

(assert (=> b!60185 (=> (not res!33315) (not e!39542))))

(assert (=> b!60185 (= res!33315 (and (or (not ((_ is Cons!1449) (toList!704 lt!23743))) (bvsle (_1!1034 (h!2030 (toList!704 lt!23743))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1449) (toList!704 lt!23743)) (bvslt (_1!1034 (h!2030 (toList!704 lt!23743))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!60186 () Bool)

(assert (=> b!60186 (= e!39542 (containsKey!127 (t!4799 (toList!704 lt!23743)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!11829 (not res!33314)) b!60185))

(assert (= (and b!60185 res!33315) b!60186))

(declare-fun m!52719 () Bool)

(assert (=> b!60186 m!52719))

(assert (=> d!11357 d!11829))

(declare-fun d!11831 () Bool)

(assert (=> d!11831 (isDefined!77 (getValueByKey!123 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun lt!24583 () Unit!1553)

(assert (=> d!11831 (= lt!24583 (choose!313 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun e!39543 () Bool)

(assert (=> d!11831 e!39543))

(declare-fun res!33316 () Bool)

(assert (=> d!11831 (=> (not res!33316) (not e!39543))))

(assert (=> d!11831 (= res!33316 (isStrictlySorted!279 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))))

(assert (=> d!11831 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) lt!24583)))

(declare-fun b!60187 () Bool)

(assert (=> b!60187 (= e!39543 (containsKey!127 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (= (and d!11831 res!33316) b!60187))

(assert (=> d!11831 m!50591))

(assert (=> d!11831 m!51149))

(assert (=> d!11831 m!51149))

(assert (=> d!11831 m!51151))

(assert (=> d!11831 m!50591))

(declare-fun m!52721 () Bool)

(assert (=> d!11831 m!52721))

(declare-fun m!52723 () Bool)

(assert (=> d!11831 m!52723))

(assert (=> b!60187 m!50591))

(assert (=> b!60187 m!51145))

(assert (=> b!59390 d!11831))

(assert (=> b!59390 d!11633))

(assert (=> b!59390 d!11635))

(declare-fun b!60188 () Bool)

(declare-fun e!39546 () Bool)

(declare-fun call!4552 () Bool)

(assert (=> b!60188 (= e!39546 call!4552)))

(declare-fun d!11833 () Bool)

(declare-fun res!33317 () Bool)

(declare-fun e!39544 () Bool)

(assert (=> d!11833 (=> res!33317 e!39544)))

(assert (=> d!11833 (= res!33317 (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 (_2!1033 lt!23848)))))))

(assert (=> d!11833 (= (arrayNoDuplicates!0 (_keys!3667 (_2!1033 lt!23848)) #b00000000000000000000000000000000 Nil!1451) e!39544)))

(declare-fun b!60189 () Bool)

(declare-fun e!39545 () Bool)

(assert (=> b!60189 (= e!39545 (contains!693 Nil!1451 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000)))))

(declare-fun b!60190 () Bool)

(declare-fun e!39547 () Bool)

(assert (=> b!60190 (= e!39544 e!39547)))

(declare-fun res!33319 () Bool)

(assert (=> b!60190 (=> (not res!33319) (not e!39547))))

(assert (=> b!60190 (= res!33319 (not e!39545))))

(declare-fun res!33318 () Bool)

(assert (=> b!60190 (=> (not res!33318) (not e!39545))))

(assert (=> b!60190 (= res!33318 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000)))))

(declare-fun b!60191 () Bool)

(assert (=> b!60191 (= e!39546 call!4552)))

(declare-fun bm!4549 () Bool)

(declare-fun c!7819 () Bool)

(assert (=> bm!4549 (= call!4552 (arrayNoDuplicates!0 (_keys!3667 (_2!1033 lt!23848)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!7819 (Cons!1450 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000) Nil!1451) Nil!1451)))))

(declare-fun b!60192 () Bool)

(assert (=> b!60192 (= e!39547 e!39546)))

(assert (=> b!60192 (= c!7819 (validKeyInArray!0 (select (arr!1780 (_keys!3667 (_2!1033 lt!23848))) #b00000000000000000000000000000000)))))

(assert (= (and d!11833 (not res!33317)) b!60190))

(assert (= (and b!60190 res!33318) b!60189))

(assert (= (and b!60190 res!33319) b!60192))

(assert (= (and b!60192 c!7819) b!60188))

(assert (= (and b!60192 (not c!7819)) b!60191))

(assert (= (or b!60188 b!60191) bm!4549))

(assert (=> b!60189 m!51723))

(assert (=> b!60189 m!51723))

(declare-fun m!52725 () Bool)

(assert (=> b!60189 m!52725))

(assert (=> b!60190 m!51723))

(assert (=> b!60190 m!51723))

(assert (=> b!60190 m!51725))

(assert (=> bm!4549 m!51723))

(declare-fun m!52727 () Bool)

(assert (=> bm!4549 m!52727))

(assert (=> b!60192 m!51723))

(assert (=> b!60192 m!51723))

(assert (=> b!60192 m!51725))

(assert (=> b!59174 d!11833))

(declare-fun d!11835 () Bool)

(assert (=> d!11835 (arrayContainsKey!0 (_keys!3667 newMap!16) lt!24121 #b00000000000000000000000000000000)))

(declare-fun lt!24584 () Unit!1553)

(assert (=> d!11835 (= lt!24584 (choose!13 (_keys!3667 newMap!16) lt!24121 #b00000000000000000000000000000000))))

(assert (=> d!11835 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!11835 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3667 newMap!16) lt!24121 #b00000000000000000000000000000000) lt!24584)))

(declare-fun bs!2613 () Bool)

(assert (= bs!2613 d!11835))

(assert (=> bs!2613 m!51257))

(declare-fun m!52729 () Bool)

(assert (=> bs!2613 m!52729))

(assert (=> b!59455 d!11835))

(declare-fun d!11837 () Bool)

(declare-fun res!33320 () Bool)

(declare-fun e!39548 () Bool)

(assert (=> d!11837 (=> res!33320 e!39548)))

(assert (=> d!11837 (= res!33320 (= (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) lt!24121))))

(assert (=> d!11837 (= (arrayContainsKey!0 (_keys!3667 newMap!16) lt!24121 #b00000000000000000000000000000000) e!39548)))

(declare-fun b!60193 () Bool)

(declare-fun e!39549 () Bool)

(assert (=> b!60193 (= e!39548 e!39549)))

(declare-fun res!33321 () Bool)

(assert (=> b!60193 (=> (not res!33321) (not e!39549))))

(assert (=> b!60193 (= res!33321 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!60194 () Bool)

(assert (=> b!60194 (= e!39549 (arrayContainsKey!0 (_keys!3667 newMap!16) lt!24121 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!11837 (not res!33320)) b!60193))

(assert (= (and b!60193 res!33321) b!60194))

(assert (=> d!11837 m!50843))

(declare-fun m!52731 () Bool)

(assert (=> b!60194 m!52731))

(assert (=> b!59455 d!11837))

(declare-fun b!60195 () Bool)

(declare-fun e!39550 () SeekEntryResult!237)

(assert (=> b!60195 (= e!39550 Undefined!237)))

(declare-fun b!60196 () Bool)

(declare-fun e!39552 () SeekEntryResult!237)

(declare-fun lt!24586 () SeekEntryResult!237)

(assert (=> b!60196 (= e!39552 (seekKeyOrZeroReturnVacant!0 (x!10013 lt!24586) (index!3073 lt!24586) (index!3073 lt!24586) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(declare-fun b!60197 () Bool)

(assert (=> b!60197 (= e!39552 (MissingZero!237 (index!3073 lt!24586)))))

(declare-fun d!11839 () Bool)

(declare-fun lt!24587 () SeekEntryResult!237)

(assert (=> d!11839 (and (or ((_ is Undefined!237) lt!24587) (not ((_ is Found!237) lt!24587)) (and (bvsge (index!3072 lt!24587) #b00000000000000000000000000000000) (bvslt (index!3072 lt!24587) (size!2010 (_keys!3667 newMap!16))))) (or ((_ is Undefined!237) lt!24587) ((_ is Found!237) lt!24587) (not ((_ is MissingZero!237) lt!24587)) (and (bvsge (index!3071 lt!24587) #b00000000000000000000000000000000) (bvslt (index!3071 lt!24587) (size!2010 (_keys!3667 newMap!16))))) (or ((_ is Undefined!237) lt!24587) ((_ is Found!237) lt!24587) ((_ is MissingZero!237) lt!24587) (not ((_ is MissingVacant!237) lt!24587)) (and (bvsge (index!3074 lt!24587) #b00000000000000000000000000000000) (bvslt (index!3074 lt!24587) (size!2010 (_keys!3667 newMap!16))))) (or ((_ is Undefined!237) lt!24587) (ite ((_ is Found!237) lt!24587) (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3072 lt!24587)) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!237) lt!24587) (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3071 lt!24587)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!237) lt!24587) (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3074 lt!24587)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11839 (= lt!24587 e!39550)))

(declare-fun c!7822 () Bool)

(assert (=> d!11839 (= c!7822 (and ((_ is Intermediate!237) lt!24586) (undefined!1049 lt!24586)))))

(assert (=> d!11839 (= lt!24586 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) (mask!5927 newMap!16)) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(assert (=> d!11839 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11839 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000) (_keys!3667 newMap!16) (mask!5927 newMap!16)) lt!24587)))

(declare-fun b!60198 () Bool)

(declare-fun c!7821 () Bool)

(declare-fun lt!24585 () (_ BitVec 64))

(assert (=> b!60198 (= c!7821 (= lt!24585 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!39551 () SeekEntryResult!237)

(assert (=> b!60198 (= e!39551 e!39552)))

(declare-fun b!60199 () Bool)

(assert (=> b!60199 (= e!39550 e!39551)))

(assert (=> b!60199 (= lt!24585 (select (arr!1780 (_keys!3667 newMap!16)) (index!3073 lt!24586)))))

(declare-fun c!7820 () Bool)

(assert (=> b!60199 (= c!7820 (= lt!24585 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!60200 () Bool)

(assert (=> b!60200 (= e!39551 (Found!237 (index!3073 lt!24586)))))

(assert (= (and d!11839 c!7822) b!60195))

(assert (= (and d!11839 (not c!7822)) b!60199))

(assert (= (and b!60199 c!7820) b!60200))

(assert (= (and b!60199 (not c!7820)) b!60198))

(assert (= (and b!60198 c!7821) b!60197))

(assert (= (and b!60198 (not c!7821)) b!60196))

(assert (=> b!60196 m!50843))

(declare-fun m!52733 () Bool)

(assert (=> b!60196 m!52733))

(declare-fun m!52735 () Bool)

(assert (=> d!11839 m!52735))

(declare-fun m!52737 () Bool)

(assert (=> d!11839 m!52737))

(assert (=> d!11839 m!50843))

(declare-fun m!52739 () Bool)

(assert (=> d!11839 m!52739))

(declare-fun m!52741 () Bool)

(assert (=> d!11839 m!52741))

(declare-fun m!52743 () Bool)

(assert (=> d!11839 m!52743))

(assert (=> d!11839 m!50833))

(assert (=> d!11839 m!50843))

(assert (=> d!11839 m!52737))

(declare-fun m!52745 () Bool)

(assert (=> b!60199 m!52745))

(assert (=> b!59455 d!11839))

(declare-fun d!11841 () Bool)

(declare-fun e!39553 () Bool)

(assert (=> d!11841 e!39553))

(declare-fun res!33322 () Bool)

(assert (=> d!11841 (=> res!33322 e!39553)))

(declare-fun lt!24588 () Bool)

(assert (=> d!11841 (= res!33322 (not lt!24588))))

(declare-fun lt!24591 () Bool)

(assert (=> d!11841 (= lt!24588 lt!24591)))

(declare-fun lt!24590 () Unit!1553)

(declare-fun e!39554 () Unit!1553)

(assert (=> d!11841 (= lt!24590 e!39554)))

(declare-fun c!7823 () Bool)

(assert (=> d!11841 (= c!7823 lt!24591)))

(assert (=> d!11841 (= lt!24591 (containsKey!127 (toList!704 lt!23913) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!11841 (= (contains!692 lt!23913 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) lt!24588)))

(declare-fun b!60201 () Bool)

(declare-fun lt!24589 () Unit!1553)

(assert (=> b!60201 (= e!39554 lt!24589)))

(assert (=> b!60201 (= lt!24589 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23913) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!60201 (isDefined!77 (getValueByKey!123 (toList!704 lt!23913) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!60202 () Bool)

(declare-fun Unit!1608 () Unit!1553)

(assert (=> b!60202 (= e!39554 Unit!1608)))

(declare-fun b!60203 () Bool)

(assert (=> b!60203 (= e!39553 (isDefined!77 (getValueByKey!123 (toList!704 lt!23913) (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!11841 c!7823) b!60201))

(assert (= (and d!11841 (not c!7823)) b!60202))

(assert (= (and d!11841 (not res!33322)) b!60203))

(assert (=> d!11841 m!50843))

(declare-fun m!52747 () Bool)

(assert (=> d!11841 m!52747))

(assert (=> b!60201 m!50843))

(declare-fun m!52749 () Bool)

(assert (=> b!60201 m!52749))

(assert (=> b!60201 m!50843))

(assert (=> b!60201 m!52495))

(assert (=> b!60201 m!52495))

(declare-fun m!52751 () Bool)

(assert (=> b!60201 m!52751))

(assert (=> b!60203 m!50843))

(assert (=> b!60203 m!52495))

(assert (=> b!60203 m!52495))

(assert (=> b!60203 m!52751))

(assert (=> b!59222 d!11841))

(declare-fun d!11843 () Bool)

(assert (=> d!11843 (= (apply!66 lt!23968 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1083 (getValueByKey!123 (toList!704 lt!23968) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2614 () Bool)

(assert (= bs!2614 d!11843))

(assert (=> bs!2614 m!50685))

(assert (=> bs!2614 m!52225))

(assert (=> bs!2614 m!52225))

(declare-fun m!52753 () Bool)

(assert (=> bs!2614 m!52753))

(assert (=> b!59324 d!11843))

(assert (=> b!59324 d!11299))

(assert (=> d!11395 d!11377))

(assert (=> d!11395 d!11391))

(declare-fun d!11845 () Bool)

(assert (=> d!11845 (contains!692 (+!81 lt!23757 (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!23739)))

(assert (=> d!11845 true))

(declare-fun _$35!300 () Unit!1553)

(assert (=> d!11845 (= (choose!318 lt!23757 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))) lt!23739) _$35!300)))

(declare-fun bs!2615 () Bool)

(assert (= bs!2615 d!11845))

(assert (=> bs!2615 m!50737))

(assert (=> bs!2615 m!50737))

(assert (=> bs!2615 m!50739))

(assert (=> d!11395 d!11845))

(declare-fun d!11847 () Bool)

(declare-fun e!39555 () Bool)

(assert (=> d!11847 e!39555))

(declare-fun res!33323 () Bool)

(assert (=> d!11847 (=> res!33323 e!39555)))

(declare-fun lt!24592 () Bool)

(assert (=> d!11847 (= res!33323 (not lt!24592))))

(declare-fun lt!24595 () Bool)

(assert (=> d!11847 (= lt!24592 lt!24595)))

(declare-fun lt!24594 () Unit!1553)

(declare-fun e!39556 () Unit!1553)

(assert (=> d!11847 (= lt!24594 e!39556)))

(declare-fun c!7824 () Bool)

(assert (=> d!11847 (= c!7824 lt!24595)))

(assert (=> d!11847 (= lt!24595 (containsKey!127 (toList!704 lt!23757) lt!23739))))

(assert (=> d!11847 (= (contains!692 lt!23757 lt!23739) lt!24592)))

(declare-fun b!60205 () Bool)

(declare-fun lt!24593 () Unit!1553)

(assert (=> b!60205 (= e!39556 lt!24593)))

(assert (=> b!60205 (= lt!24593 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!23757) lt!23739))))

(assert (=> b!60205 (isDefined!77 (getValueByKey!123 (toList!704 lt!23757) lt!23739))))

(declare-fun b!60206 () Bool)

(declare-fun Unit!1609 () Unit!1553)

(assert (=> b!60206 (= e!39556 Unit!1609)))

(declare-fun b!60207 () Bool)

(assert (=> b!60207 (= e!39555 (isDefined!77 (getValueByKey!123 (toList!704 lt!23757) lt!23739)))))

(assert (= (and d!11847 c!7824) b!60205))

(assert (= (and d!11847 (not c!7824)) b!60206))

(assert (= (and d!11847 (not res!33323)) b!60207))

(declare-fun m!52755 () Bool)

(assert (=> d!11847 m!52755))

(declare-fun m!52757 () Bool)

(assert (=> b!60205 m!52757))

(declare-fun m!52759 () Bool)

(assert (=> b!60205 m!52759))

(assert (=> b!60205 m!52759))

(declare-fun m!52761 () Bool)

(assert (=> b!60205 m!52761))

(assert (=> b!60207 m!52759))

(assert (=> b!60207 m!52759))

(assert (=> b!60207 m!52761))

(assert (=> d!11395 d!11847))

(declare-fun d!11849 () Bool)

(declare-fun e!39557 () Bool)

(assert (=> d!11849 e!39557))

(declare-fun res!33324 () Bool)

(assert (=> d!11849 (=> res!33324 e!39557)))

(declare-fun lt!24596 () Bool)

(assert (=> d!11849 (= res!33324 (not lt!24596))))

(declare-fun lt!24599 () Bool)

(assert (=> d!11849 (= lt!24596 lt!24599)))

(declare-fun lt!24598 () Unit!1553)

(declare-fun e!39558 () Unit!1553)

(assert (=> d!11849 (= lt!24598 e!39558)))

(declare-fun c!7825 () Bool)

(assert (=> d!11849 (= c!7825 lt!24599)))

(assert (=> d!11849 (= lt!24599 (containsKey!127 (toList!704 lt!24083) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!11849 (= (contains!692 lt!24083 #b1000000000000000000000000000000000000000000000000000000000000000) lt!24596)))

(declare-fun b!60208 () Bool)

(declare-fun lt!24597 () Unit!1553)

(assert (=> b!60208 (= e!39558 lt!24597)))

(assert (=> b!60208 (= lt!24597 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!24083) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!60208 (isDefined!77 (getValueByKey!123 (toList!704 lt!24083) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60209 () Bool)

(declare-fun Unit!1610 () Unit!1553)

(assert (=> b!60209 (= e!39558 Unit!1610)))

(declare-fun b!60210 () Bool)

(assert (=> b!60210 (= e!39557 (isDefined!77 (getValueByKey!123 (toList!704 lt!24083) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11849 c!7825) b!60208))

(assert (= (and d!11849 (not c!7825)) b!60209))

(assert (= (and d!11849 (not res!33324)) b!60210))

(declare-fun m!52763 () Bool)

(assert (=> d!11849 m!52763))

(declare-fun m!52765 () Bool)

(assert (=> b!60208 m!52765))

(assert (=> b!60208 m!52653))

(assert (=> b!60208 m!52653))

(declare-fun m!52767 () Bool)

(assert (=> b!60208 m!52767))

(assert (=> b!60210 m!52653))

(assert (=> b!60210 m!52653))

(assert (=> b!60210 m!52767))

(assert (=> bm!4452 d!11849))

(declare-fun lt!24600 () Bool)

(declare-fun d!11851 () Bool)

(assert (=> d!11851 (= lt!24600 (select (content!63 (toList!704 lt!24146)) (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun e!39559 () Bool)

(assert (=> d!11851 (= lt!24600 e!39559)))

(declare-fun res!33325 () Bool)

(assert (=> d!11851 (=> (not res!33325) (not e!39559))))

(assert (=> d!11851 (= res!33325 ((_ is Cons!1449) (toList!704 lt!24146)))))

(assert (=> d!11851 (= (contains!694 (toList!704 lt!24146) (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!24600)))

(declare-fun b!60211 () Bool)

(declare-fun e!39560 () Bool)

(assert (=> b!60211 (= e!39559 e!39560)))

(declare-fun res!33326 () Bool)

(assert (=> b!60211 (=> res!33326 e!39560)))

(assert (=> b!60211 (= res!33326 (= (h!2030 (toList!704 lt!24146)) (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!60212 () Bool)

(assert (=> b!60212 (= e!39560 (contains!694 (t!4799 (toList!704 lt!24146)) (tuple2!2049 lt!23756 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(assert (= (and d!11851 res!33325) b!60211))

(assert (= (and b!60211 (not res!33326)) b!60212))

(declare-fun m!52769 () Bool)

(assert (=> d!11851 m!52769))

(declare-fun m!52771 () Bool)

(assert (=> d!11851 m!52771))

(declare-fun m!52773 () Bool)

(assert (=> b!60212 m!52773))

(assert (=> b!59478 d!11851))

(assert (=> d!11289 d!11417))

(declare-fun d!11853 () Bool)

(declare-fun res!33327 () Bool)

(declare-fun e!39561 () Bool)

(assert (=> d!11853 (=> res!33327 e!39561)))

(assert (=> d!11853 (= res!33327 (= (select (arr!1780 (_keys!3667 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> d!11853 (= (arrayContainsKey!0 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!39561)))

(declare-fun b!60213 () Bool)

(declare-fun e!39562 () Bool)

(assert (=> b!60213 (= e!39561 e!39562)))

(declare-fun res!33328 () Bool)

(assert (=> b!60213 (=> (not res!33328) (not e!39562))))

(assert (=> b!60213 (= res!33328 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!60214 () Bool)

(assert (=> b!60214 (= e!39562 (arrayContainsKey!0 (_keys!3667 newMap!16) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!11853 (not res!33327)) b!60213))

(assert (= (and b!60213 res!33328) b!60214))

(assert (=> d!11853 m!52659))

(assert (=> b!60214 m!50591))

(declare-fun m!52775 () Bool)

(assert (=> b!60214 m!52775))

(assert (=> b!59418 d!11853))

(declare-fun b!60233 () Bool)

(declare-fun e!39574 () Bool)

(declare-fun e!39575 () Bool)

(assert (=> b!60233 (= e!39574 e!39575)))

(declare-fun res!33335 () Bool)

(declare-fun lt!24605 () SeekEntryResult!237)

(assert (=> b!60233 (= res!33335 (and ((_ is Intermediate!237) lt!24605) (not (undefined!1049 lt!24605)) (bvslt (x!10013 lt!24605) #b01111111111111111111111111111110) (bvsge (x!10013 lt!24605) #b00000000000000000000000000000000) (bvsge (x!10013 lt!24605) #b00000000000000000000000000000000)))))

(assert (=> b!60233 (=> (not res!33335) (not e!39575))))

(declare-fun b!60234 () Bool)

(declare-fun e!39576 () SeekEntryResult!237)

(assert (=> b!60234 (= e!39576 (Intermediate!237 true (toIndex!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (mask!5927 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun e!39573 () SeekEntryResult!237)

(declare-fun b!60235 () Bool)

(assert (=> b!60235 (= e!39573 (Intermediate!237 false (toIndex!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (mask!5927 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!60236 () Bool)

(assert (=> b!60236 (and (bvsge (index!3073 lt!24605) #b00000000000000000000000000000000) (bvslt (index!3073 lt!24605) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun res!33336 () Bool)

(assert (=> b!60236 (= res!33336 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3073 lt!24605)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!39577 () Bool)

(assert (=> b!60236 (=> res!33336 e!39577)))

(declare-fun b!60237 () Bool)

(assert (=> b!60237 (= e!39573 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (mask!5927 newMap!16)) #b00000000000000000000000000000000 (mask!5927 newMap!16)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(declare-fun b!60238 () Bool)

(assert (=> b!60238 (and (bvsge (index!3073 lt!24605) #b00000000000000000000000000000000) (bvslt (index!3073 lt!24605) (size!2010 (_keys!3667 newMap!16))))))

(declare-fun res!33337 () Bool)

(assert (=> b!60238 (= res!33337 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3073 lt!24605)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (=> b!60238 (=> res!33337 e!39577)))

(assert (=> b!60238 (= e!39575 e!39577)))

(declare-fun b!60239 () Bool)

(assert (=> b!60239 (= e!39576 e!39573)))

(declare-fun c!7833 () Bool)

(declare-fun lt!24606 () (_ BitVec 64))

(assert (=> b!60239 (= c!7833 (or (= lt!24606 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) (= (bvadd lt!24606 lt!24606) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!11855 () Bool)

(assert (=> d!11855 e!39574))

(declare-fun c!7832 () Bool)

(assert (=> d!11855 (= c!7832 (and ((_ is Intermediate!237) lt!24605) (undefined!1049 lt!24605)))))

(assert (=> d!11855 (= lt!24605 e!39576)))

(declare-fun c!7834 () Bool)

(assert (=> d!11855 (= c!7834 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!11855 (= lt!24606 (select (arr!1780 (_keys!3667 newMap!16)) (toIndex!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (mask!5927 newMap!16))))))

(assert (=> d!11855 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11855 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (mask!5927 newMap!16)) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (_keys!3667 newMap!16) (mask!5927 newMap!16)) lt!24605)))

(declare-fun b!60240 () Bool)

(assert (=> b!60240 (and (bvsge (index!3073 lt!24605) #b00000000000000000000000000000000) (bvslt (index!3073 lt!24605) (size!2010 (_keys!3667 newMap!16))))))

(assert (=> b!60240 (= e!39577 (= (select (arr!1780 (_keys!3667 newMap!16)) (index!3073 lt!24605)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60241 () Bool)

(assert (=> b!60241 (= e!39574 (bvsge (x!10013 lt!24605) #b01111111111111111111111111111110))))

(assert (= (and d!11855 c!7834) b!60234))

(assert (= (and d!11855 (not c!7834)) b!60239))

(assert (= (and b!60239 c!7833) b!60235))

(assert (= (and b!60239 (not c!7833)) b!60237))

(assert (= (and d!11855 c!7832) b!60241))

(assert (= (and d!11855 (not c!7832)) b!60233))

(assert (= (and b!60233 res!33335) b!60238))

(assert (= (and b!60238 (not res!33337)) b!60236))

(assert (= (and b!60236 (not res!33336)) b!60240))

(declare-fun m!52777 () Bool)

(assert (=> b!60236 m!52777))

(assert (=> b!60240 m!52777))

(assert (=> d!11855 m!51025))

(declare-fun m!52779 () Bool)

(assert (=> d!11855 m!52779))

(assert (=> d!11855 m!50833))

(assert (=> b!60238 m!52777))

(assert (=> b!60237 m!51025))

(declare-fun m!52781 () Bool)

(assert (=> b!60237 m!52781))

(assert (=> b!60237 m!52781))

(assert (=> b!60237 m!50591))

(declare-fun m!52783 () Bool)

(assert (=> b!60237 m!52783))

(assert (=> d!11323 d!11855))

(declare-fun d!11857 () Bool)

(declare-fun lt!24612 () (_ BitVec 32))

(declare-fun lt!24611 () (_ BitVec 32))

(assert (=> d!11857 (= lt!24612 (bvmul (bvxor lt!24611 (bvlshr lt!24611 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!11857 (= lt!24611 ((_ extract 31 0) (bvand (bvxor (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvlshr (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!11857 (and (bvsge (mask!5927 newMap!16) #b00000000000000000000000000000000) (let ((res!33338 (let ((h!2032 ((_ extract 31 0) (bvand (bvxor (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (bvlshr (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!10117 (bvmul (bvxor h!2032 (bvlshr h!2032 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!10117 (bvlshr x!10117 #b00000000000000000000000000001101)) (mask!5927 newMap!16)))))) (and (bvslt res!33338 (bvadd (mask!5927 newMap!16) #b00000000000000000000000000000001)) (bvsge res!33338 #b00000000000000000000000000000000))))))

(assert (=> d!11857 (= (toIndex!0 (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355) (mask!5927 newMap!16)) (bvand (bvxor lt!24612 (bvlshr lt!24612 #b00000000000000000000000000001101)) (mask!5927 newMap!16)))))

(assert (=> d!11323 d!11857))

(assert (=> d!11323 d!11417))

(declare-fun d!11859 () Bool)

(declare-fun lt!24613 () Bool)

(assert (=> d!11859 (= lt!24613 (select (content!63 (toList!704 lt!23900)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun e!39578 () Bool)

(assert (=> d!11859 (= lt!24613 e!39578)))

(declare-fun res!33339 () Bool)

(assert (=> d!11859 (=> (not res!33339) (not e!39578))))

(assert (=> d!11859 (= res!33339 ((_ is Cons!1449) (toList!704 lt!23900)))))

(assert (=> d!11859 (= (contains!694 (toList!704 lt!23900) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!24613)))

(declare-fun b!60242 () Bool)

(declare-fun e!39579 () Bool)

(assert (=> b!60242 (= e!39578 e!39579)))

(declare-fun res!33340 () Bool)

(assert (=> b!60242 (=> res!33340 e!39579)))

(assert (=> b!60242 (= res!33340 (= (h!2030 (toList!704 lt!23900)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!60243 () Bool)

(assert (=> b!60243 (= e!39579 (contains!694 (t!4799 (toList!704 lt!23900)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(assert (= (and d!11859 res!33339) b!60242))

(assert (= (and b!60242 (not res!33340)) b!60243))

(declare-fun m!52785 () Bool)

(assert (=> d!11859 m!52785))

(declare-fun m!52787 () Bool)

(assert (=> d!11859 m!52787))

(declare-fun m!52789 () Bool)

(assert (=> b!60243 m!52789))

(assert (=> b!59207 d!11859))

(declare-fun d!11861 () Bool)

(declare-fun e!39580 () Bool)

(assert (=> d!11861 e!39580))

(declare-fun res!33341 () Bool)

(assert (=> d!11861 (=> res!33341 e!39580)))

(declare-fun lt!24614 () Bool)

(assert (=> d!11861 (= res!33341 (not lt!24614))))

(declare-fun lt!24617 () Bool)

(assert (=> d!11861 (= lt!24614 lt!24617)))

(declare-fun lt!24616 () Unit!1553)

(declare-fun e!39581 () Unit!1553)

(assert (=> d!11861 (= lt!24616 e!39581)))

(declare-fun c!7835 () Bool)

(assert (=> d!11861 (= c!7835 lt!24617)))

(assert (=> d!11861 (= lt!24617 (containsKey!127 (toList!704 lt!24142) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11861 (= (contains!692 lt!24142 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24614)))

(declare-fun b!60244 () Bool)

(declare-fun lt!24615 () Unit!1553)

(assert (=> b!60244 (= e!39581 lt!24615)))

(assert (=> b!60244 (= lt!24615 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!24142) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> b!60244 (isDefined!77 (getValueByKey!123 (toList!704 lt!24142) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60245 () Bool)

(declare-fun Unit!1611 () Unit!1553)

(assert (=> b!60245 (= e!39581 Unit!1611)))

(declare-fun b!60246 () Bool)

(assert (=> b!60246 (= e!39580 (isDefined!77 (getValueByKey!123 (toList!704 lt!24142) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (= (and d!11861 c!7835) b!60244))

(assert (= (and d!11861 (not c!7835)) b!60245))

(assert (= (and d!11861 (not res!33341)) b!60246))

(declare-fun m!52791 () Bool)

(assert (=> d!11861 m!52791))

(declare-fun m!52793 () Bool)

(assert (=> b!60244 m!52793))

(assert (=> b!60244 m!51327))

(assert (=> b!60244 m!51327))

(declare-fun m!52795 () Bool)

(assert (=> b!60244 m!52795))

(assert (=> b!60246 m!51327))

(assert (=> b!60246 m!51327))

(assert (=> b!60246 m!52795))

(assert (=> d!11385 d!11861))

(declare-fun b!60250 () Bool)

(declare-fun e!39583 () Option!129)

(assert (=> b!60250 (= e!39583 None!127)))

(declare-fun d!11863 () Bool)

(declare-fun c!7836 () Bool)

(assert (=> d!11863 (= c!7836 (and ((_ is Cons!1449) lt!24139) (= (_1!1034 (h!2030 lt!24139)) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39582 () Option!129)

(assert (=> d!11863 (= (getValueByKey!123 lt!24139 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) e!39582)))

(declare-fun b!60247 () Bool)

(assert (=> b!60247 (= e!39582 (Some!128 (_2!1034 (h!2030 lt!24139))))))

(declare-fun b!60249 () Bool)

(assert (=> b!60249 (= e!39583 (getValueByKey!123 (t!4799 lt!24139) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60248 () Bool)

(assert (=> b!60248 (= e!39582 e!39583)))

(declare-fun c!7837 () Bool)

(assert (=> b!60248 (= c!7837 (and ((_ is Cons!1449) lt!24139) (not (= (_1!1034 (h!2030 lt!24139)) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11863 c!7836) b!60247))

(assert (= (and d!11863 (not c!7836)) b!60248))

(assert (= (and b!60248 c!7837) b!60249))

(assert (= (and b!60248 (not c!7837)) b!60250))

(declare-fun m!52797 () Bool)

(assert (=> b!60249 m!52797))

(assert (=> d!11385 d!11863))

(declare-fun d!11865 () Bool)

(assert (=> d!11865 (= (getValueByKey!123 lt!24139 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun lt!24618 () Unit!1553)

(assert (=> d!11865 (= lt!24618 (choose!319 lt!24139 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun e!39584 () Bool)

(assert (=> d!11865 e!39584))

(declare-fun res!33342 () Bool)

(assert (=> d!11865 (=> (not res!33342) (not e!39584))))

(assert (=> d!11865 (= res!33342 (isStrictlySorted!279 lt!24139))))

(assert (=> d!11865 (= (lemmaContainsTupThenGetReturnValue!42 lt!24139 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24618)))

(declare-fun b!60251 () Bool)

(declare-fun res!33343 () Bool)

(assert (=> b!60251 (=> (not res!33343) (not e!39584))))

(assert (=> b!60251 (= res!33343 (containsKey!127 lt!24139 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60252 () Bool)

(assert (=> b!60252 (= e!39584 (contains!694 lt!24139 (tuple2!2049 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (= (and d!11865 res!33342) b!60251))

(assert (= (and b!60251 res!33343) b!60252))

(assert (=> d!11865 m!51321))

(declare-fun m!52799 () Bool)

(assert (=> d!11865 m!52799))

(declare-fun m!52801 () Bool)

(assert (=> d!11865 m!52801))

(declare-fun m!52803 () Bool)

(assert (=> b!60251 m!52803))

(declare-fun m!52805 () Bool)

(assert (=> b!60252 m!52805))

(assert (=> d!11385 d!11865))

(declare-fun lt!24619 () List!1453)

(declare-fun e!39588 () Bool)

(declare-fun b!60253 () Bool)

(assert (=> b!60253 (= e!39588 (contains!694 lt!24619 (tuple2!2049 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!60254 () Bool)

(declare-fun e!39586 () List!1453)

(declare-fun e!39585 () List!1453)

(assert (=> b!60254 (= e!39586 e!39585)))

(declare-fun c!7838 () Bool)

(assert (=> b!60254 (= c!7838 (and ((_ is Cons!1449) (toList!704 lt!23746)) (= (_1!1034 (h!2030 (toList!704 lt!23746))) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39587 () List!1453)

(declare-fun call!4555 () List!1453)

(declare-fun c!7841 () Bool)

(declare-fun bm!4550 () Bool)

(assert (=> bm!4550 (= call!4555 ($colon$colon!59 e!39587 (ite c!7841 (h!2030 (toList!704 lt!23746)) (tuple2!2049 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(declare-fun c!7840 () Bool)

(assert (=> bm!4550 (= c!7840 c!7841)))

(declare-fun d!11867 () Bool)

(assert (=> d!11867 e!39588))

(declare-fun res!33345 () Bool)

(assert (=> d!11867 (=> (not res!33345) (not e!39588))))

(assert (=> d!11867 (= res!33345 (isStrictlySorted!279 lt!24619))))

(assert (=> d!11867 (= lt!24619 e!39586)))

(assert (=> d!11867 (= c!7841 (and ((_ is Cons!1449) (toList!704 lt!23746)) (bvslt (_1!1034 (h!2030 (toList!704 lt!23746))) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> d!11867 (isStrictlySorted!279 (toList!704 lt!23746))))

(assert (=> d!11867 (= (insertStrictlySorted!44 (toList!704 lt!23746) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24619)))

(declare-fun b!60255 () Bool)

(declare-fun e!39589 () List!1453)

(declare-fun call!4553 () List!1453)

(assert (=> b!60255 (= e!39589 call!4553)))

(declare-fun b!60256 () Bool)

(assert (=> b!60256 (= e!39586 call!4555)))

(declare-fun bm!4551 () Bool)

(declare-fun call!4554 () List!1453)

(assert (=> bm!4551 (= call!4553 call!4554)))

(declare-fun c!7839 () Bool)

(declare-fun b!60257 () Bool)

(assert (=> b!60257 (= e!39587 (ite c!7838 (t!4799 (toList!704 lt!23746)) (ite c!7839 (Cons!1449 (h!2030 (toList!704 lt!23746)) (t!4799 (toList!704 lt!23746))) Nil!1450)))))

(declare-fun b!60258 () Bool)

(assert (=> b!60258 (= e!39585 call!4554)))

(declare-fun b!60259 () Bool)

(declare-fun res!33344 () Bool)

(assert (=> b!60259 (=> (not res!33344) (not e!39588))))

(assert (=> b!60259 (= res!33344 (containsKey!127 lt!24619 (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60260 () Bool)

(assert (=> b!60260 (= e!39589 call!4553)))

(declare-fun b!60261 () Bool)

(assert (=> b!60261 (= c!7839 (and ((_ is Cons!1449) (toList!704 lt!23746)) (bvsgt (_1!1034 (h!2030 (toList!704 lt!23746))) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> b!60261 (= e!39585 e!39589)))

(declare-fun b!60262 () Bool)

(assert (=> b!60262 (= e!39587 (insertStrictlySorted!44 (t!4799 (toList!704 lt!23746)) (_1!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23751 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun bm!4552 () Bool)

(assert (=> bm!4552 (= call!4554 call!4555)))

(assert (= (and d!11867 c!7841) b!60256))

(assert (= (and d!11867 (not c!7841)) b!60254))

(assert (= (and b!60254 c!7838) b!60258))

(assert (= (and b!60254 (not c!7838)) b!60261))

(assert (= (and b!60261 c!7839) b!60260))

(assert (= (and b!60261 (not c!7839)) b!60255))

(assert (= (or b!60260 b!60255) bm!4551))

(assert (= (or b!60258 bm!4551) bm!4552))

(assert (= (or b!60256 bm!4552) bm!4550))

(assert (= (and bm!4550 c!7840) b!60262))

(assert (= (and bm!4550 (not c!7840)) b!60257))

(assert (= (and d!11867 res!33345) b!60259))

(assert (= (and b!60259 res!33344) b!60253))

(declare-fun m!52807 () Bool)

(assert (=> b!60262 m!52807))

(declare-fun m!52809 () Bool)

(assert (=> b!60253 m!52809))

(declare-fun m!52811 () Bool)

(assert (=> bm!4550 m!52811))

(declare-fun m!52813 () Bool)

(assert (=> b!60259 m!52813))

(declare-fun m!52815 () Bool)

(assert (=> d!11867 m!52815))

(declare-fun m!52817 () Bool)

(assert (=> d!11867 m!52817))

(assert (=> d!11385 d!11867))

(declare-fun d!11869 () Bool)

(declare-fun lt!24620 () Bool)

(assert (=> d!11869 (= lt!24620 (select (content!63 (toList!704 lt!24138)) (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun e!39590 () Bool)

(assert (=> d!11869 (= lt!24620 e!39590)))

(declare-fun res!33346 () Bool)

(assert (=> d!11869 (=> (not res!33346) (not e!39590))))

(assert (=> d!11869 (= res!33346 ((_ is Cons!1449) (toList!704 lt!24138)))))

(assert (=> d!11869 (= (contains!694 (toList!704 lt!24138) (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))) lt!24620)))

(declare-fun b!60263 () Bool)

(declare-fun e!39591 () Bool)

(assert (=> b!60263 (= e!39590 e!39591)))

(declare-fun res!33347 () Bool)

(assert (=> b!60263 (=> res!33347 e!39591)))

(assert (=> b!60263 (= res!33347 (= (h!2030 (toList!704 lt!24138)) (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(declare-fun b!60264 () Bool)

(assert (=> b!60264 (= e!39591 (contains!694 (t!4799 (toList!704 lt!24138)) (tuple2!2049 lt!23755 (zeroValue!1959 (v!2381 (underlying!225 thiss!992))))))))

(assert (= (and d!11869 res!33346) b!60263))

(assert (= (and b!60263 (not res!33347)) b!60264))

(declare-fun m!52819 () Bool)

(assert (=> d!11869 m!52819))

(declare-fun m!52821 () Bool)

(assert (=> d!11869 m!52821))

(declare-fun m!52823 () Bool)

(assert (=> b!60264 m!52823))

(assert (=> b!59474 d!11869))

(declare-fun bm!4553 () Bool)

(declare-fun call!4556 () Bool)

(assert (=> bm!4553 (= call!4556 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3667 newMap!16) (mask!5927 newMap!16)))))

(declare-fun b!60265 () Bool)

(declare-fun e!39593 () Bool)

(assert (=> b!60265 (= e!39593 call!4556)))

(declare-fun b!60266 () Bool)

(declare-fun e!39592 () Bool)

(assert (=> b!60266 (= e!39592 call!4556)))

(declare-fun b!60267 () Bool)

(declare-fun e!39594 () Bool)

(assert (=> b!60267 (= e!39594 e!39593)))

(declare-fun c!7842 () Bool)

(assert (=> b!60267 (= c!7842 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!11871 () Bool)

(declare-fun res!33349 () Bool)

(assert (=> d!11871 (=> res!33349 e!39594)))

(assert (=> d!11871 (= res!33349 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2010 (_keys!3667 newMap!16))))))

(assert (=> d!11871 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3667 newMap!16) (mask!5927 newMap!16)) e!39594)))

(declare-fun b!60268 () Bool)

(assert (=> b!60268 (= e!39593 e!39592)))

(declare-fun lt!24623 () (_ BitVec 64))

(assert (=> b!60268 (= lt!24623 (select (arr!1780 (_keys!3667 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!24621 () Unit!1553)

(assert (=> b!60268 (= lt!24621 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3667 newMap!16) lt!24623 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!60268 (arrayContainsKey!0 (_keys!3667 newMap!16) lt!24623 #b00000000000000000000000000000000)))

(declare-fun lt!24622 () Unit!1553)

(assert (=> b!60268 (= lt!24622 lt!24621)))

(declare-fun res!33348 () Bool)

(assert (=> b!60268 (= res!33348 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3667 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3667 newMap!16) (mask!5927 newMap!16)) (Found!237 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!60268 (=> (not res!33348) (not e!39592))))

(assert (= (and d!11871 (not res!33349)) b!60267))

(assert (= (and b!60267 c!7842) b!60268))

(assert (= (and b!60267 (not c!7842)) b!60265))

(assert (= (and b!60268 res!33348) b!60266))

(assert (= (or b!60266 b!60265) bm!4553))

(declare-fun m!52825 () Bool)

(assert (=> bm!4553 m!52825))

(assert (=> b!60267 m!52659))

(assert (=> b!60267 m!52659))

(assert (=> b!60267 m!52661))

(assert (=> b!60268 m!52659))

(declare-fun m!52827 () Bool)

(assert (=> b!60268 m!52827))

(declare-fun m!52829 () Bool)

(assert (=> b!60268 m!52829))

(assert (=> b!60268 m!52659))

(declare-fun m!52831 () Bool)

(assert (=> b!60268 m!52831))

(assert (=> bm!4460 d!11871))

(declare-fun d!11873 () Bool)

(declare-fun e!39595 () Bool)

(assert (=> d!11873 e!39595))

(declare-fun res!33351 () Bool)

(assert (=> d!11873 (=> (not res!33351) (not e!39595))))

(declare-fun lt!24627 () ListLongMap!1377)

(assert (=> d!11873 (= res!33351 (contains!692 lt!24627 (_1!1034 (tuple2!2049 lt!24091 (minValue!1959 newMap!16)))))))

(declare-fun lt!24624 () List!1453)

(assert (=> d!11873 (= lt!24627 (ListLongMap!1378 lt!24624))))

(declare-fun lt!24626 () Unit!1553)

(declare-fun lt!24625 () Unit!1553)

(assert (=> d!11873 (= lt!24626 lt!24625)))

(assert (=> d!11873 (= (getValueByKey!123 lt!24624 (_1!1034 (tuple2!2049 lt!24091 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!24091 (minValue!1959 newMap!16)))))))

(assert (=> d!11873 (= lt!24625 (lemmaContainsTupThenGetReturnValue!42 lt!24624 (_1!1034 (tuple2!2049 lt!24091 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!24091 (minValue!1959 newMap!16)))))))

(assert (=> d!11873 (= lt!24624 (insertStrictlySorted!44 (toList!704 lt!24086) (_1!1034 (tuple2!2049 lt!24091 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!24091 (minValue!1959 newMap!16)))))))

(assert (=> d!11873 (= (+!81 lt!24086 (tuple2!2049 lt!24091 (minValue!1959 newMap!16))) lt!24627)))

(declare-fun b!60269 () Bool)

(declare-fun res!33350 () Bool)

(assert (=> b!60269 (=> (not res!33350) (not e!39595))))

(assert (=> b!60269 (= res!33350 (= (getValueByKey!123 (toList!704 lt!24627) (_1!1034 (tuple2!2049 lt!24091 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!24091 (minValue!1959 newMap!16))))))))

(declare-fun b!60270 () Bool)

(assert (=> b!60270 (= e!39595 (contains!694 (toList!704 lt!24627) (tuple2!2049 lt!24091 (minValue!1959 newMap!16))))))

(assert (= (and d!11873 res!33351) b!60269))

(assert (= (and b!60269 res!33350) b!60270))

(declare-fun m!52833 () Bool)

(assert (=> d!11873 m!52833))

(declare-fun m!52835 () Bool)

(assert (=> d!11873 m!52835))

(declare-fun m!52837 () Bool)

(assert (=> d!11873 m!52837))

(declare-fun m!52839 () Bool)

(assert (=> d!11873 m!52839))

(declare-fun m!52841 () Bool)

(assert (=> b!60269 m!52841))

(declare-fun m!52843 () Bool)

(assert (=> b!60270 m!52843))

(assert (=> b!59410 d!11873))

(declare-fun d!11875 () Bool)

(declare-fun e!39596 () Bool)

(assert (=> d!11875 e!39596))

(declare-fun res!33353 () Bool)

(assert (=> d!11875 (=> (not res!33353) (not e!39596))))

(declare-fun lt!24631 () ListLongMap!1377)

(assert (=> d!11875 (= res!33353 (contains!692 lt!24631 (_1!1034 (tuple2!2049 lt!24081 (minValue!1959 newMap!16)))))))

(declare-fun lt!24628 () List!1453)

(assert (=> d!11875 (= lt!24631 (ListLongMap!1378 lt!24628))))

(declare-fun lt!24630 () Unit!1553)

(declare-fun lt!24629 () Unit!1553)

(assert (=> d!11875 (= lt!24630 lt!24629)))

(assert (=> d!11875 (= (getValueByKey!123 lt!24628 (_1!1034 (tuple2!2049 lt!24081 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!24081 (minValue!1959 newMap!16)))))))

(assert (=> d!11875 (= lt!24629 (lemmaContainsTupThenGetReturnValue!42 lt!24628 (_1!1034 (tuple2!2049 lt!24081 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!24081 (minValue!1959 newMap!16)))))))

(assert (=> d!11875 (= lt!24628 (insertStrictlySorted!44 (toList!704 lt!24094) (_1!1034 (tuple2!2049 lt!24081 (minValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!24081 (minValue!1959 newMap!16)))))))

(assert (=> d!11875 (= (+!81 lt!24094 (tuple2!2049 lt!24081 (minValue!1959 newMap!16))) lt!24631)))

(declare-fun b!60271 () Bool)

(declare-fun res!33352 () Bool)

(assert (=> b!60271 (=> (not res!33352) (not e!39596))))

(assert (=> b!60271 (= res!33352 (= (getValueByKey!123 (toList!704 lt!24631) (_1!1034 (tuple2!2049 lt!24081 (minValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!24081 (minValue!1959 newMap!16))))))))

(declare-fun b!60272 () Bool)

(assert (=> b!60272 (= e!39596 (contains!694 (toList!704 lt!24631) (tuple2!2049 lt!24081 (minValue!1959 newMap!16))))))

(assert (= (and d!11875 res!33353) b!60271))

(assert (= (and b!60271 res!33352) b!60272))

(declare-fun m!52845 () Bool)

(assert (=> d!11875 m!52845))

(declare-fun m!52847 () Bool)

(assert (=> d!11875 m!52847))

(declare-fun m!52849 () Bool)

(assert (=> d!11875 m!52849))

(declare-fun m!52851 () Bool)

(assert (=> d!11875 m!52851))

(declare-fun m!52853 () Bool)

(assert (=> b!60271 m!52853))

(declare-fun m!52855 () Bool)

(assert (=> b!60272 m!52855))

(assert (=> b!59410 d!11875))

(declare-fun d!11877 () Bool)

(declare-fun e!39597 () Bool)

(assert (=> d!11877 e!39597))

(declare-fun res!33355 () Bool)

(assert (=> d!11877 (=> (not res!33355) (not e!39597))))

(declare-fun lt!24635 () ListLongMap!1377)

(assert (=> d!11877 (= res!33355 (contains!692 lt!24635 (_1!1034 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16)))))))

(declare-fun lt!24632 () List!1453)

(assert (=> d!11877 (= lt!24635 (ListLongMap!1378 lt!24632))))

(declare-fun lt!24634 () Unit!1553)

(declare-fun lt!24633 () Unit!1553)

(assert (=> d!11877 (= lt!24634 lt!24633)))

(assert (=> d!11877 (= (getValueByKey!123 lt!24632 (_1!1034 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11877 (= lt!24633 (lemmaContainsTupThenGetReturnValue!42 lt!24632 (_1!1034 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11877 (= lt!24632 (insertStrictlySorted!44 (toList!704 lt!24084) (_1!1034 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11877 (= (+!81 lt!24084 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16))) lt!24635)))

(declare-fun b!60273 () Bool)

(declare-fun res!33354 () Bool)

(assert (=> b!60273 (=> (not res!33354) (not e!39597))))

(assert (=> b!60273 (= res!33354 (= (getValueByKey!123 (toList!704 lt!24635) (_1!1034 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16))))))))

(declare-fun b!60274 () Bool)

(assert (=> b!60274 (= e!39597 (contains!694 (toList!704 lt!24635) (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16))))))

(assert (= (and d!11877 res!33355) b!60273))

(assert (= (and b!60273 res!33354) b!60274))

(declare-fun m!52857 () Bool)

(assert (=> d!11877 m!52857))

(declare-fun m!52859 () Bool)

(assert (=> d!11877 m!52859))

(declare-fun m!52861 () Bool)

(assert (=> d!11877 m!52861))

(declare-fun m!52863 () Bool)

(assert (=> d!11877 m!52863))

(declare-fun m!52865 () Bool)

(assert (=> b!60273 m!52865))

(declare-fun m!52867 () Bool)

(assert (=> b!60274 m!52867))

(assert (=> b!59410 d!11877))

(declare-fun d!11879 () Bool)

(assert (=> d!11879 (contains!692 (+!81 lt!24097 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16))) lt!24079)))

(declare-fun lt!24636 () Unit!1553)

(assert (=> d!11879 (= lt!24636 (choose!318 lt!24097 lt!24096 (zeroValue!1959 newMap!16) lt!24079))))

(assert (=> d!11879 (contains!692 lt!24097 lt!24079)))

(assert (=> d!11879 (= (addStillContains!42 lt!24097 lt!24096 (zeroValue!1959 newMap!16) lt!24079) lt!24636)))

(declare-fun bs!2616 () Bool)

(assert (= bs!2616 d!11879))

(assert (=> bs!2616 m!51193))

(assert (=> bs!2616 m!51193))

(assert (=> bs!2616 m!51195))

(declare-fun m!52869 () Bool)

(assert (=> bs!2616 m!52869))

(declare-fun m!52871 () Bool)

(assert (=> bs!2616 m!52871))

(assert (=> b!59410 d!11879))

(declare-fun d!11881 () Bool)

(assert (=> d!11881 (= (apply!66 lt!24086 lt!24089) (get!1083 (getValueByKey!123 (toList!704 lt!24086) lt!24089)))))

(declare-fun bs!2617 () Bool)

(assert (= bs!2617 d!11881))

(declare-fun m!52873 () Bool)

(assert (=> bs!2617 m!52873))

(assert (=> bs!2617 m!52873))

(declare-fun m!52875 () Bool)

(assert (=> bs!2617 m!52875))

(assert (=> b!59410 d!11881))

(declare-fun d!11883 () Bool)

(assert (=> d!11883 (= (apply!66 lt!24094 lt!24085) (get!1083 (getValueByKey!123 (toList!704 lt!24094) lt!24085)))))

(declare-fun bs!2618 () Bool)

(assert (= bs!2618 d!11883))

(declare-fun m!52877 () Bool)

(assert (=> bs!2618 m!52877))

(assert (=> bs!2618 m!52877))

(declare-fun m!52879 () Bool)

(assert (=> bs!2618 m!52879))

(assert (=> b!59410 d!11883))

(declare-fun d!11885 () Bool)

(assert (=> d!11885 (= (apply!66 (+!81 lt!24094 (tuple2!2049 lt!24081 (minValue!1959 newMap!16))) lt!24085) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!24094 (tuple2!2049 lt!24081 (minValue!1959 newMap!16)))) lt!24085)))))

(declare-fun bs!2619 () Bool)

(assert (= bs!2619 d!11885))

(declare-fun m!52881 () Bool)

(assert (=> bs!2619 m!52881))

(assert (=> bs!2619 m!52881))

(declare-fun m!52883 () Bool)

(assert (=> bs!2619 m!52883))

(assert (=> b!59410 d!11885))

(declare-fun d!11887 () Bool)

(declare-fun e!39598 () Bool)

(assert (=> d!11887 e!39598))

(declare-fun res!33356 () Bool)

(assert (=> d!11887 (=> res!33356 e!39598)))

(declare-fun lt!24637 () Bool)

(assert (=> d!11887 (= res!33356 (not lt!24637))))

(declare-fun lt!24640 () Bool)

(assert (=> d!11887 (= lt!24637 lt!24640)))

(declare-fun lt!24639 () Unit!1553)

(declare-fun e!39599 () Unit!1553)

(assert (=> d!11887 (= lt!24639 e!39599)))

(declare-fun c!7843 () Bool)

(assert (=> d!11887 (= c!7843 lt!24640)))

(assert (=> d!11887 (= lt!24640 (containsKey!127 (toList!704 (+!81 lt!24097 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16)))) lt!24079))))

(assert (=> d!11887 (= (contains!692 (+!81 lt!24097 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16))) lt!24079) lt!24637)))

(declare-fun b!60275 () Bool)

(declare-fun lt!24638 () Unit!1553)

(assert (=> b!60275 (= e!39599 lt!24638)))

(assert (=> b!60275 (= lt!24638 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 (+!81 lt!24097 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16)))) lt!24079))))

(assert (=> b!60275 (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!24097 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16)))) lt!24079))))

(declare-fun b!60276 () Bool)

(declare-fun Unit!1612 () Unit!1553)

(assert (=> b!60276 (= e!39599 Unit!1612)))

(declare-fun b!60277 () Bool)

(assert (=> b!60277 (= e!39598 (isDefined!77 (getValueByKey!123 (toList!704 (+!81 lt!24097 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16)))) lt!24079)))))

(assert (= (and d!11887 c!7843) b!60275))

(assert (= (and d!11887 (not c!7843)) b!60276))

(assert (= (and d!11887 (not res!33356)) b!60277))

(declare-fun m!52885 () Bool)

(assert (=> d!11887 m!52885))

(declare-fun m!52887 () Bool)

(assert (=> b!60275 m!52887))

(declare-fun m!52889 () Bool)

(assert (=> b!60275 m!52889))

(assert (=> b!60275 m!52889))

(declare-fun m!52891 () Bool)

(assert (=> b!60275 m!52891))

(assert (=> b!60277 m!52889))

(assert (=> b!60277 m!52889))

(assert (=> b!60277 m!52891))

(assert (=> b!59410 d!11887))

(declare-fun d!11889 () Bool)

(assert (=> d!11889 (= (apply!66 (+!81 lt!24086 (tuple2!2049 lt!24091 (minValue!1959 newMap!16))) lt!24089) (apply!66 lt!24086 lt!24089))))

(declare-fun lt!24641 () Unit!1553)

(assert (=> d!11889 (= lt!24641 (choose!317 lt!24086 lt!24091 (minValue!1959 newMap!16) lt!24089))))

(declare-fun e!39600 () Bool)

(assert (=> d!11889 e!39600))

(declare-fun res!33357 () Bool)

(assert (=> d!11889 (=> (not res!33357) (not e!39600))))

(assert (=> d!11889 (= res!33357 (contains!692 lt!24086 lt!24089))))

(assert (=> d!11889 (= (addApplyDifferent!42 lt!24086 lt!24091 (minValue!1959 newMap!16) lt!24089) lt!24641)))

(declare-fun b!60278 () Bool)

(assert (=> b!60278 (= e!39600 (not (= lt!24089 lt!24091)))))

(assert (= (and d!11889 res!33357) b!60278))

(declare-fun m!52893 () Bool)

(assert (=> d!11889 m!52893))

(assert (=> d!11889 m!51167))

(assert (=> d!11889 m!51167))

(assert (=> d!11889 m!51169))

(assert (=> d!11889 m!51189))

(declare-fun m!52895 () Bool)

(assert (=> d!11889 m!52895))

(assert (=> b!59410 d!11889))

(declare-fun d!11891 () Bool)

(declare-fun e!39601 () Bool)

(assert (=> d!11891 e!39601))

(declare-fun res!33359 () Bool)

(assert (=> d!11891 (=> (not res!33359) (not e!39601))))

(declare-fun lt!24645 () ListLongMap!1377)

(assert (=> d!11891 (= res!33359 (contains!692 lt!24645 (_1!1034 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16)))))))

(declare-fun lt!24642 () List!1453)

(assert (=> d!11891 (= lt!24645 (ListLongMap!1378 lt!24642))))

(declare-fun lt!24644 () Unit!1553)

(declare-fun lt!24643 () Unit!1553)

(assert (=> d!11891 (= lt!24644 lt!24643)))

(assert (=> d!11891 (= (getValueByKey!123 lt!24642 (_1!1034 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11891 (= lt!24643 (lemmaContainsTupThenGetReturnValue!42 lt!24642 (_1!1034 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11891 (= lt!24642 (insertStrictlySorted!44 (toList!704 lt!24097) (_1!1034 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16))) (_2!1034 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16)))))))

(assert (=> d!11891 (= (+!81 lt!24097 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16))) lt!24645)))

(declare-fun b!60279 () Bool)

(declare-fun res!33358 () Bool)

(assert (=> b!60279 (=> (not res!33358) (not e!39601))))

(assert (=> b!60279 (= res!33358 (= (getValueByKey!123 (toList!704 lt!24645) (_1!1034 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16)))) (Some!128 (_2!1034 (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16))))))))

(declare-fun b!60280 () Bool)

(assert (=> b!60280 (= e!39601 (contains!694 (toList!704 lt!24645) (tuple2!2049 lt!24096 (zeroValue!1959 newMap!16))))))

(assert (= (and d!11891 res!33359) b!60279))

(assert (= (and b!60279 res!33358) b!60280))

(declare-fun m!52897 () Bool)

(assert (=> d!11891 m!52897))

(declare-fun m!52899 () Bool)

(assert (=> d!11891 m!52899))

(declare-fun m!52901 () Bool)

(assert (=> d!11891 m!52901))

(declare-fun m!52903 () Bool)

(assert (=> d!11891 m!52903))

(declare-fun m!52905 () Bool)

(assert (=> b!60279 m!52905))

(declare-fun m!52907 () Bool)

(assert (=> b!60280 m!52907))

(assert (=> b!59410 d!11891))

(assert (=> b!59410 d!11579))

(declare-fun d!11893 () Bool)

(assert (=> d!11893 (= (apply!66 (+!81 lt!24084 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16))) lt!24090) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!24084 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16)))) lt!24090)))))

(declare-fun bs!2620 () Bool)

(assert (= bs!2620 d!11893))

(declare-fun m!52909 () Bool)

(assert (=> bs!2620 m!52909))

(assert (=> bs!2620 m!52909))

(declare-fun m!52911 () Bool)

(assert (=> bs!2620 m!52911))

(assert (=> b!59410 d!11893))

(declare-fun d!11895 () Bool)

(assert (=> d!11895 (= (apply!66 (+!81 lt!24094 (tuple2!2049 lt!24081 (minValue!1959 newMap!16))) lt!24085) (apply!66 lt!24094 lt!24085))))

(declare-fun lt!24646 () Unit!1553)

(assert (=> d!11895 (= lt!24646 (choose!317 lt!24094 lt!24081 (minValue!1959 newMap!16) lt!24085))))

(declare-fun e!39602 () Bool)

(assert (=> d!11895 e!39602))

(declare-fun res!33360 () Bool)

(assert (=> d!11895 (=> (not res!33360) (not e!39602))))

(assert (=> d!11895 (= res!33360 (contains!692 lt!24094 lt!24085))))

(assert (=> d!11895 (= (addApplyDifferent!42 lt!24094 lt!24081 (minValue!1959 newMap!16) lt!24085) lt!24646)))

(declare-fun b!60281 () Bool)

(assert (=> b!60281 (= e!39602 (not (= lt!24085 lt!24081)))))

(assert (= (and d!11895 res!33360) b!60281))

(declare-fun m!52913 () Bool)

(assert (=> d!11895 m!52913))

(assert (=> d!11895 m!51173))

(assert (=> d!11895 m!51173))

(assert (=> d!11895 m!51179))

(assert (=> d!11895 m!51183))

(declare-fun m!52915 () Bool)

(assert (=> d!11895 m!52915))

(assert (=> b!59410 d!11895))

(declare-fun d!11897 () Bool)

(assert (=> d!11897 (= (apply!66 lt!24084 lt!24090) (get!1083 (getValueByKey!123 (toList!704 lt!24084) lt!24090)))))

(declare-fun bs!2621 () Bool)

(assert (= bs!2621 d!11897))

(declare-fun m!52917 () Bool)

(assert (=> bs!2621 m!52917))

(assert (=> bs!2621 m!52917))

(declare-fun m!52919 () Bool)

(assert (=> bs!2621 m!52919))

(assert (=> b!59410 d!11897))

(declare-fun d!11899 () Bool)

(assert (=> d!11899 (= (apply!66 (+!81 lt!24084 (tuple2!2049 lt!24095 (zeroValue!1959 newMap!16))) lt!24090) (apply!66 lt!24084 lt!24090))))

(declare-fun lt!24647 () Unit!1553)

(assert (=> d!11899 (= lt!24647 (choose!317 lt!24084 lt!24095 (zeroValue!1959 newMap!16) lt!24090))))

(declare-fun e!39603 () Bool)

(assert (=> d!11899 e!39603))

(declare-fun res!33361 () Bool)

(assert (=> d!11899 (=> (not res!33361) (not e!39603))))

(assert (=> d!11899 (= res!33361 (contains!692 lt!24084 lt!24090))))

(assert (=> d!11899 (= (addApplyDifferent!42 lt!24084 lt!24095 (zeroValue!1959 newMap!16) lt!24090) lt!24647)))

(declare-fun b!60282 () Bool)

(assert (=> b!60282 (= e!39603 (not (= lt!24090 lt!24095)))))

(assert (= (and d!11899 res!33361) b!60282))

(declare-fun m!52921 () Bool)

(assert (=> d!11899 m!52921))

(assert (=> d!11899 m!51187))

(assert (=> d!11899 m!51187))

(assert (=> d!11899 m!51197))

(assert (=> d!11899 m!51181))

(declare-fun m!52923 () Bool)

(assert (=> d!11899 m!52923))

(assert (=> b!59410 d!11899))

(declare-fun d!11901 () Bool)

(assert (=> d!11901 (= (apply!66 (+!81 lt!24086 (tuple2!2049 lt!24091 (minValue!1959 newMap!16))) lt!24089) (get!1083 (getValueByKey!123 (toList!704 (+!81 lt!24086 (tuple2!2049 lt!24091 (minValue!1959 newMap!16)))) lt!24089)))))

(declare-fun bs!2622 () Bool)

(assert (= bs!2622 d!11901))

(declare-fun m!52925 () Bool)

(assert (=> bs!2622 m!52925))

(assert (=> bs!2622 m!52925))

(declare-fun m!52927 () Bool)

(assert (=> bs!2622 m!52927))

(assert (=> b!59410 d!11901))

(assert (=> bm!4437 d!11657))

(declare-fun d!11903 () Bool)

(declare-fun e!39604 () Bool)

(assert (=> d!11903 e!39604))

(declare-fun res!33362 () Bool)

(assert (=> d!11903 (=> res!33362 e!39604)))

(declare-fun lt!24648 () Bool)

(assert (=> d!11903 (= res!33362 (not lt!24648))))

(declare-fun lt!24651 () Bool)

(assert (=> d!11903 (= lt!24648 lt!24651)))

(declare-fun lt!24650 () Unit!1553)

(declare-fun e!39605 () Unit!1553)

(assert (=> d!11903 (= lt!24650 e!39605)))

(declare-fun c!7844 () Bool)

(assert (=> d!11903 (= c!7844 lt!24651)))

(assert (=> d!11903 (= lt!24651 (containsKey!127 (toList!704 lt!24130) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> d!11903 (= (contains!692 lt!24130 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24648)))

(declare-fun b!60283 () Bool)

(declare-fun lt!24649 () Unit!1553)

(assert (=> b!60283 (= e!39605 lt!24649)))

(assert (=> b!60283 (= lt!24649 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 lt!24130) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(assert (=> b!60283 (isDefined!77 (getValueByKey!123 (toList!704 lt!24130) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60284 () Bool)

(declare-fun Unit!1613 () Unit!1553)

(assert (=> b!60284 (= e!39605 Unit!1613)))

(declare-fun b!60285 () Bool)

(assert (=> b!60285 (= e!39604 (isDefined!77 (getValueByKey!123 (toList!704 lt!24130) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (= (and d!11903 c!7844) b!60283))

(assert (= (and d!11903 (not c!7844)) b!60284))

(assert (= (and d!11903 (not res!33362)) b!60285))

(declare-fun m!52929 () Bool)

(assert (=> d!11903 m!52929))

(declare-fun m!52931 () Bool)

(assert (=> b!60283 m!52931))

(assert (=> b!60283 m!51283))

(assert (=> b!60283 m!51283))

(declare-fun m!52933 () Bool)

(assert (=> b!60283 m!52933))

(assert (=> b!60285 m!51283))

(assert (=> b!60285 m!51283))

(assert (=> b!60285 m!52933))

(assert (=> d!11373 d!11903))

(declare-fun b!60289 () Bool)

(declare-fun e!39607 () Option!129)

(assert (=> b!60289 (= e!39607 None!127)))

(declare-fun d!11905 () Bool)

(declare-fun c!7845 () Bool)

(assert (=> d!11905 (= c!7845 (and ((_ is Cons!1449) lt!24127) (= (_1!1034 (h!2030 lt!24127)) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39606 () Option!129)

(assert (=> d!11905 (= (getValueByKey!123 lt!24127 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) e!39606)))

(declare-fun b!60286 () Bool)

(assert (=> b!60286 (= e!39606 (Some!128 (_2!1034 (h!2030 lt!24127))))))

(declare-fun b!60288 () Bool)

(assert (=> b!60288 (= e!39607 (getValueByKey!123 (t!4799 lt!24127) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60287 () Bool)

(assert (=> b!60287 (= e!39606 e!39607)))

(declare-fun c!7846 () Bool)

(assert (=> b!60287 (= c!7846 (and ((_ is Cons!1449) lt!24127) (not (= (_1!1034 (h!2030 lt!24127)) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(assert (= (and d!11905 c!7845) b!60286))

(assert (= (and d!11905 (not c!7845)) b!60287))

(assert (= (and b!60287 c!7846) b!60288))

(assert (= (and b!60287 (not c!7846)) b!60289))

(declare-fun m!52935 () Bool)

(assert (=> b!60288 m!52935))

(assert (=> d!11373 d!11905))

(declare-fun d!11907 () Bool)

(assert (=> d!11907 (= (getValueByKey!123 lt!24127 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) (Some!128 (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun lt!24652 () Unit!1553)

(assert (=> d!11907 (= lt!24652 (choose!319 lt!24127 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun e!39608 () Bool)

(assert (=> d!11907 e!39608))

(declare-fun res!33363 () Bool)

(assert (=> d!11907 (=> (not res!33363) (not e!39608))))

(assert (=> d!11907 (= res!33363 (isStrictlySorted!279 lt!24127))))

(assert (=> d!11907 (= (lemmaContainsTupThenGetReturnValue!42 lt!24127 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24652)))

(declare-fun b!60290 () Bool)

(declare-fun res!33364 () Bool)

(assert (=> b!60290 (=> (not res!33364) (not e!39608))))

(assert (=> b!60290 (= res!33364 (containsKey!127 lt!24127 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60291 () Bool)

(assert (=> b!60291 (= e!39608 (contains!694 lt!24127 (tuple2!2049 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (= (and d!11907 res!33363) b!60290))

(assert (= (and b!60290 res!33364) b!60291))

(assert (=> d!11907 m!51277))

(declare-fun m!52937 () Bool)

(assert (=> d!11907 m!52937))

(declare-fun m!52939 () Bool)

(assert (=> d!11907 m!52939))

(declare-fun m!52941 () Bool)

(assert (=> b!60290 m!52941))

(declare-fun m!52943 () Bool)

(assert (=> b!60291 m!52943))

(assert (=> d!11373 d!11907))

(declare-fun e!39612 () Bool)

(declare-fun b!60292 () Bool)

(declare-fun lt!24653 () List!1453)

(assert (=> b!60292 (= e!39612 (contains!694 lt!24653 (tuple2!2049 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun b!60293 () Bool)

(declare-fun e!39610 () List!1453)

(declare-fun e!39609 () List!1453)

(assert (=> b!60293 (= e!39610 e!39609)))

(declare-fun c!7847 () Bool)

(assert (=> b!60293 (= c!7847 (and ((_ is Cons!1449) (toList!704 lt!23754)) (= (_1!1034 (h!2030 (toList!704 lt!23754))) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(declare-fun e!39611 () List!1453)

(declare-fun c!7850 () Bool)

(declare-fun bm!4554 () Bool)

(declare-fun call!4559 () List!1453)

(assert (=> bm!4554 (= call!4559 ($colon$colon!59 e!39611 (ite c!7850 (h!2030 (toList!704 lt!23754)) (tuple2!2049 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))))

(declare-fun c!7849 () Bool)

(assert (=> bm!4554 (= c!7849 c!7850)))

(declare-fun d!11909 () Bool)

(assert (=> d!11909 e!39612))

(declare-fun res!33366 () Bool)

(assert (=> d!11909 (=> (not res!33366) (not e!39612))))

(assert (=> d!11909 (= res!33366 (isStrictlySorted!279 lt!24653))))

(assert (=> d!11909 (= lt!24653 e!39610)))

(assert (=> d!11909 (= c!7850 (and ((_ is Cons!1449) (toList!704 lt!23754)) (bvslt (_1!1034 (h!2030 (toList!704 lt!23754))) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> d!11909 (isStrictlySorted!279 (toList!704 lt!23754))))

(assert (=> d!11909 (= (insertStrictlySorted!44 (toList!704 lt!23754) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))) lt!24653)))

(declare-fun b!60294 () Bool)

(declare-fun e!39613 () List!1453)

(declare-fun call!4557 () List!1453)

(assert (=> b!60294 (= e!39613 call!4557)))

(declare-fun b!60295 () Bool)

(assert (=> b!60295 (= e!39610 call!4559)))

(declare-fun bm!4555 () Bool)

(declare-fun call!4558 () List!1453)

(assert (=> bm!4555 (= call!4557 call!4558)))

(declare-fun c!7848 () Bool)

(declare-fun b!60296 () Bool)

(assert (=> b!60296 (= e!39611 (ite c!7847 (t!4799 (toList!704 lt!23754)) (ite c!7848 (Cons!1449 (h!2030 (toList!704 lt!23754)) (t!4799 (toList!704 lt!23754))) Nil!1450)))))

(declare-fun b!60297 () Bool)

(assert (=> b!60297 (= e!39609 call!4558)))

(declare-fun b!60298 () Bool)

(declare-fun res!33365 () Bool)

(assert (=> b!60298 (=> (not res!33365) (not e!39612))))

(assert (=> b!60298 (= res!33365 (containsKey!127 lt!24653 (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun b!60299 () Bool)

(assert (=> b!60299 (= e!39613 call!4557)))

(declare-fun b!60300 () Bool)

(assert (=> b!60300 (= c!7848 (and ((_ is Cons!1449) (toList!704 lt!23754)) (bvsgt (_1!1034 (h!2030 (toList!704 lt!23754))) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))))))))

(assert (=> b!60300 (= e!39609 e!39613)))

(declare-fun b!60301 () Bool)

(assert (=> b!60301 (= e!39611 (insertStrictlySorted!44 (t!4799 (toList!704 lt!23754)) (_1!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992))))) (_2!1034 (tuple2!2049 lt!23741 (minValue!1959 (v!2381 (underlying!225 thiss!992)))))))))

(declare-fun bm!4556 () Bool)

(assert (=> bm!4556 (= call!4558 call!4559)))

(assert (= (and d!11909 c!7850) b!60295))

(assert (= (and d!11909 (not c!7850)) b!60293))

(assert (= (and b!60293 c!7847) b!60297))

(assert (= (and b!60293 (not c!7847)) b!60300))

(assert (= (and b!60300 c!7848) b!60299))

(assert (= (and b!60300 (not c!7848)) b!60294))

(assert (= (or b!60299 b!60294) bm!4555))

(assert (= (or b!60297 bm!4555) bm!4556))

(assert (= (or b!60295 bm!4556) bm!4554))

(assert (= (and bm!4554 c!7849) b!60301))

(assert (= (and bm!4554 (not c!7849)) b!60296))

(assert (= (and d!11909 res!33366) b!60298))

(assert (= (and b!60298 res!33365) b!60292))

(declare-fun m!52945 () Bool)

(assert (=> b!60301 m!52945))

(declare-fun m!52947 () Bool)

(assert (=> b!60292 m!52947))

(declare-fun m!52949 () Bool)

(assert (=> bm!4554 m!52949))

(declare-fun m!52951 () Bool)

(assert (=> b!60298 m!52951))

(declare-fun m!52953 () Bool)

(assert (=> d!11909 m!52953))

(declare-fun m!52955 () Bool)

(assert (=> d!11909 m!52955))

(assert (=> d!11373 d!11909))

(declare-fun d!11911 () Bool)

(declare-fun e!39614 () Bool)

(assert (=> d!11911 e!39614))

(declare-fun res!33368 () Bool)

(assert (=> d!11911 (=> (not res!33368) (not e!39614))))

(declare-fun lt!24657 () ListLongMap!1377)

(assert (=> d!11911 (= res!33368 (contains!692 lt!24657 (_1!1034 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!24654 () List!1453)

(assert (=> d!11911 (= lt!24657 (ListLongMap!1378 lt!24654))))

(declare-fun lt!24656 () Unit!1553)

(declare-fun lt!24655 () Unit!1553)

(assert (=> d!11911 (= lt!24656 lt!24655)))

(assert (=> d!11911 (= (getValueByKey!123 lt!24654 (_1!1034 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11911 (= lt!24655 (lemmaContainsTupThenGetReturnValue!42 lt!24654 (_1!1034 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11911 (= lt!24654 (insertStrictlySorted!44 (toList!704 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16))) (_1!1034 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1034 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11911 (= (+!81 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!24657)))

(declare-fun b!60302 () Bool)

(declare-fun res!33367 () Bool)

(assert (=> b!60302 (=> (not res!33367) (not e!39614))))

(assert (=> b!60302 (= res!33367 (= (getValueByKey!123 (toList!704 lt!24657) (_1!1034 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1034 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!60303 () Bool)

(assert (=> b!60303 (= e!39614 (contains!694 (toList!704 lt!24657) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!11911 res!33368) b!60302))

(assert (= (and b!60302 res!33367) b!60303))

(declare-fun m!52957 () Bool)

(assert (=> d!11911 m!52957))

(declare-fun m!52959 () Bool)

(assert (=> d!11911 m!52959))

(declare-fun m!52961 () Bool)

(assert (=> d!11911 m!52961))

(declare-fun m!52963 () Bool)

(assert (=> d!11911 m!52963))

(declare-fun m!52965 () Bool)

(assert (=> b!60302 m!52965))

(declare-fun m!52967 () Bool)

(assert (=> b!60303 m!52967))

(assert (=> d!11287 d!11911))

(declare-fun d!11913 () Bool)

(assert (=> d!11913 (= (+!81 (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) (zeroValue!1959 newMap!16) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23852 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(assert (=> d!11913 true))

(declare-fun _$7!44 () Unit!1553)

(assert (=> d!11913 (= (choose!310 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) (extraKeys!1930 newMap!16) lt!23852 (zeroValue!1959 newMap!16) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) (defaultEntry!2043 newMap!16)) _$7!44)))

(declare-fun bs!2623 () Bool)

(assert (= bs!2623 d!11913))

(assert (=> bs!2623 m!50697))

(assert (=> bs!2623 m!50697))

(assert (=> bs!2623 m!50837))

(assert (=> bs!2623 m!50619))

(assert (=> bs!2623 m!50835))

(assert (=> d!11287 d!11913))

(assert (=> d!11287 d!11289))

(declare-fun bm!4557 () Bool)

(declare-fun call!4560 () ListLongMap!1377)

(declare-fun call!4562 () ListLongMap!1377)

(assert (=> bm!4557 (= call!4560 call!4562)))

(declare-fun d!11915 () Bool)

(declare-fun e!39616 () Bool)

(assert (=> d!11915 e!39616))

(declare-fun res!33376 () Bool)

(assert (=> d!11915 (=> (not res!33376) (not e!39616))))

(assert (=> d!11915 (= res!33376 (or (bvsge #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))))

(declare-fun lt!24662 () ListLongMap!1377)

(declare-fun lt!24678 () ListLongMap!1377)

(assert (=> d!11915 (= lt!24662 lt!24678)))

(declare-fun lt!24667 () Unit!1553)

(declare-fun e!39624 () Unit!1553)

(assert (=> d!11915 (= lt!24667 e!39624)))

(declare-fun c!7852 () Bool)

(declare-fun e!39623 () Bool)

(assert (=> d!11915 (= c!7852 e!39623)))

(declare-fun res!33373 () Bool)

(assert (=> d!11915 (=> (not res!33373) (not e!39623))))

(assert (=> d!11915 (= res!33373 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun e!39627 () ListLongMap!1377)

(assert (=> d!11915 (= lt!24678 e!39627)))

(declare-fun c!7855 () Bool)

(assert (=> d!11915 (= c!7855 (and (not (= (bvand lt!23852 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!23852 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11915 (validMask!0 (mask!5927 newMap!16))))

(assert (=> d!11915 (= (getCurrentListMap!401 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23852 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)) lt!24662)))

(declare-fun b!60304 () Bool)

(declare-fun e!39617 () Bool)

(declare-fun call!4561 () Bool)

(assert (=> b!60304 (= e!39617 (not call!4561))))

(declare-fun b!60305 () Bool)

(assert (=> b!60305 (= e!39627 (+!81 call!4562 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16))))))

(declare-fun b!60306 () Bool)

(declare-fun e!39618 () Bool)

(assert (=> b!60306 (= e!39617 e!39618)))

(declare-fun res!33370 () Bool)

(assert (=> b!60306 (= res!33370 call!4561)))

(assert (=> b!60306 (=> (not res!33370) (not e!39618))))

(declare-fun b!60307 () Bool)

(declare-fun e!39615 () Bool)

(assert (=> b!60307 (= e!39615 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4558 () Bool)

(declare-fun call!4566 () ListLongMap!1377)

(declare-fun call!4564 () ListLongMap!1377)

(assert (=> bm!4558 (= call!4566 call!4564)))

(declare-fun b!60308 () Bool)

(declare-fun e!39619 () ListLongMap!1377)

(assert (=> b!60308 (= e!39619 call!4566)))

(declare-fun bm!4559 () Bool)

(assert (=> bm!4559 (= call!4561 (contains!692 lt!24662 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60309 () Bool)

(declare-fun Unit!1614 () Unit!1553)

(assert (=> b!60309 (= e!39624 Unit!1614)))

(declare-fun bm!4560 () Bool)

(declare-fun call!4563 () Bool)

(assert (=> bm!4560 (= call!4563 (contains!692 lt!24662 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60310 () Bool)

(declare-fun e!39621 () Bool)

(assert (=> b!60310 (= e!39621 (not call!4563))))

(declare-fun e!39620 () Bool)

(declare-fun b!60311 () Bool)

(assert (=> b!60311 (= e!39620 (= (apply!66 lt!24662 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!4561 () Bool)

(declare-fun call!4565 () ListLongMap!1377)

(assert (=> bm!4561 (= call!4564 call!4565)))

(declare-fun b!60312 () Bool)

(declare-fun res!33371 () Bool)

(assert (=> b!60312 (=> (not res!33371) (not e!39616))))

(assert (=> b!60312 (= res!33371 e!39621)))

(declare-fun c!7851 () Bool)

(assert (=> b!60312 (= c!7851 (not (= (bvand lt!23852 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!60313 () Bool)

(declare-fun e!39625 () Bool)

(declare-fun e!39622 () Bool)

(assert (=> b!60313 (= e!39625 e!39622)))

(declare-fun res!33369 () Bool)

(assert (=> b!60313 (=> (not res!33369) (not e!39622))))

(assert (=> b!60313 (= res!33369 (contains!692 lt!24662 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!60313 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!60314 () Bool)

(assert (=> b!60314 (= e!39619 call!4560)))

(declare-fun b!60315 () Bool)

(assert (=> b!60315 (= e!39623 (validKeyInArray!0 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4562 () Bool)

(assert (=> bm!4562 (= call!4565 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23852 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun b!60316 () Bool)

(declare-fun res!33372 () Bool)

(assert (=> b!60316 (=> (not res!33372) (not e!39616))))

(assert (=> b!60316 (= res!33372 e!39625)))

(declare-fun res!33374 () Bool)

(assert (=> b!60316 (=> res!33374 e!39625)))

(assert (=> b!60316 (= res!33374 (not e!39615))))

(declare-fun res!33375 () Bool)

(assert (=> b!60316 (=> (not res!33375) (not e!39615))))

(assert (=> b!60316 (= res!33375 (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(declare-fun b!60317 () Bool)

(assert (=> b!60317 (= e!39618 (= (apply!66 lt!24662 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1959 newMap!16)))))

(declare-fun b!60318 () Bool)

(assert (=> b!60318 (= e!39616 e!39617)))

(declare-fun c!7854 () Bool)

(assert (=> b!60318 (= c!7854 (not (= (bvand lt!23852 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!60319 () Bool)

(declare-fun c!7853 () Bool)

(assert (=> b!60319 (= c!7853 (and (not (= (bvand lt!23852 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!23852 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!39626 () ListLongMap!1377)

(assert (=> b!60319 (= e!39626 e!39619)))

(declare-fun b!60320 () Bool)

(assert (=> b!60320 (= e!39621 e!39620)))

(declare-fun res!33377 () Bool)

(assert (=> b!60320 (= res!33377 call!4563)))

(assert (=> b!60320 (=> (not res!33377) (not e!39620))))

(declare-fun bm!4563 () Bool)

(declare-fun c!7856 () Bool)

(assert (=> bm!4563 (= call!4562 (+!81 (ite c!7855 call!4565 (ite c!7856 call!4564 call!4566)) (ite (or c!7855 c!7856) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1959 newMap!16)))))))

(declare-fun b!60321 () Bool)

(declare-fun lt!24671 () Unit!1553)

(assert (=> b!60321 (= e!39624 lt!24671)))

(declare-fun lt!24676 () ListLongMap!1377)

(assert (=> b!60321 (= lt!24676 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23852 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24675 () (_ BitVec 64))

(assert (=> b!60321 (= lt!24675 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24658 () (_ BitVec 64))

(assert (=> b!60321 (= lt!24658 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24672 () Unit!1553)

(assert (=> b!60321 (= lt!24672 (addStillContains!42 lt!24676 lt!24675 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!24658))))

(assert (=> b!60321 (contains!692 (+!81 lt!24676 (tuple2!2049 lt!24675 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!24658)))

(declare-fun lt!24659 () Unit!1553)

(assert (=> b!60321 (= lt!24659 lt!24672)))

(declare-fun lt!24673 () ListLongMap!1377)

(assert (=> b!60321 (= lt!24673 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23852 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24660 () (_ BitVec 64))

(assert (=> b!60321 (= lt!24660 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24664 () (_ BitVec 64))

(assert (=> b!60321 (= lt!24664 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24666 () Unit!1553)

(assert (=> b!60321 (= lt!24666 (addApplyDifferent!42 lt!24673 lt!24660 (minValue!1959 newMap!16) lt!24664))))

(assert (=> b!60321 (= (apply!66 (+!81 lt!24673 (tuple2!2049 lt!24660 (minValue!1959 newMap!16))) lt!24664) (apply!66 lt!24673 lt!24664))))

(declare-fun lt!24679 () Unit!1553)

(assert (=> b!60321 (= lt!24679 lt!24666)))

(declare-fun lt!24663 () ListLongMap!1377)

(assert (=> b!60321 (= lt!24663 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23852 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24674 () (_ BitVec 64))

(assert (=> b!60321 (= lt!24674 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24669 () (_ BitVec 64))

(assert (=> b!60321 (= lt!24669 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!24677 () Unit!1553)

(assert (=> b!60321 (= lt!24677 (addApplyDifferent!42 lt!24663 lt!24674 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!24669))))

(assert (=> b!60321 (= (apply!66 (+!81 lt!24663 (tuple2!2049 lt!24674 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!24669) (apply!66 lt!24663 lt!24669))))

(declare-fun lt!24661 () Unit!1553)

(assert (=> b!60321 (= lt!24661 lt!24677)))

(declare-fun lt!24665 () ListLongMap!1377)

(assert (=> b!60321 (= lt!24665 (getCurrentListMapNoExtraKeys!44 (_keys!3667 newMap!16) (_values!2026 newMap!16) (mask!5927 newMap!16) lt!23852 (get!1080 (select (arr!1781 (_values!2026 (v!2381 (underlying!225 thiss!992)))) from!355) (dynLambda!312 (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1959 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2043 newMap!16)))))

(declare-fun lt!24670 () (_ BitVec 64))

(assert (=> b!60321 (= lt!24670 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24668 () (_ BitVec 64))

(assert (=> b!60321 (= lt!24668 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!60321 (= lt!24671 (addApplyDifferent!42 lt!24665 lt!24670 (minValue!1959 newMap!16) lt!24668))))

(assert (=> b!60321 (= (apply!66 (+!81 lt!24665 (tuple2!2049 lt!24670 (minValue!1959 newMap!16))) lt!24668) (apply!66 lt!24665 lt!24668))))

(declare-fun b!60322 () Bool)

(assert (=> b!60322 (= e!39626 call!4560)))

(declare-fun b!60323 () Bool)

(assert (=> b!60323 (= e!39627 e!39626)))

(assert (=> b!60323 (= c!7856 (and (not (= (bvand lt!23852 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!23852 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!60324 () Bool)

(assert (=> b!60324 (= e!39622 (= (apply!66 lt!24662 (select (arr!1780 (_keys!3667 newMap!16)) #b00000000000000000000000000000000)) (get!1080 (select (arr!1781 (_values!2026 newMap!16)) #b00000000000000000000000000000000) (dynLambda!312 (defaultEntry!2043 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!60324 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2011 (_values!2026 newMap!16))))))

(assert (=> b!60324 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2010 (_keys!3667 newMap!16))))))

(assert (= (and d!11915 c!7855) b!60305))

(assert (= (and d!11915 (not c!7855)) b!60323))

(assert (= (and b!60323 c!7856) b!60322))

(assert (= (and b!60323 (not c!7856)) b!60319))

(assert (= (and b!60319 c!7853) b!60314))

(assert (= (and b!60319 (not c!7853)) b!60308))

(assert (= (or b!60314 b!60308) bm!4558))

(assert (= (or b!60322 bm!4558) bm!4561))

(assert (= (or b!60322 b!60314) bm!4557))

(assert (= (or b!60305 bm!4561) bm!4562))

(assert (= (or b!60305 bm!4557) bm!4563))

(assert (= (and d!11915 res!33373) b!60315))

(assert (= (and d!11915 c!7852) b!60321))

(assert (= (and d!11915 (not c!7852)) b!60309))

(assert (= (and d!11915 res!33376) b!60316))

(assert (= (and b!60316 res!33375) b!60307))

(assert (= (and b!60316 (not res!33374)) b!60313))

(assert (= (and b!60313 res!33369) b!60324))

(assert (= (and b!60316 res!33372) b!60312))

(assert (= (and b!60312 c!7851) b!60320))

(assert (= (and b!60312 (not c!7851)) b!60310))

(assert (= (and b!60320 res!33377) b!60311))

(assert (= (or b!60320 b!60310) bm!4560))

(assert (= (and b!60312 res!33371) b!60318))

(assert (= (and b!60318 c!7854) b!60306))

(assert (= (and b!60318 (not c!7854)) b!60304))

(assert (= (and b!60306 res!33370) b!60317))

(assert (= (or b!60306 b!60304) bm!4559))

(declare-fun b_lambda!2659 () Bool)

(assert (=> (not b_lambda!2659) (not b!60324)))

(assert (=> b!60324 t!4806))

(declare-fun b_and!3657 () Bool)

(assert (= b_and!3653 (and (=> t!4806 result!2389) b_and!3657)))

(assert (=> b!60324 t!4808))

(declare-fun b_and!3659 () Bool)

(assert (= b_and!3655 (and (=> t!4808 result!2391) b_and!3659)))

(declare-fun m!52969 () Bool)

(assert (=> b!60317 m!52969))

(assert (=> b!60324 m!50843))

(assert (=> b!60324 m!50843))

(declare-fun m!52971 () Bool)

(assert (=> b!60324 m!52971))

(assert (=> b!60324 m!50847))

(assert (=> b!60324 m!50849))

(assert (=> b!60324 m!50847))

(assert (=> b!60324 m!50849))

(assert (=> b!60324 m!50851))

(assert (=> b!60307 m!50843))

(assert (=> b!60307 m!50843))

(assert (=> b!60307 m!50853))

(declare-fun m!52973 () Bool)

(assert (=> b!60311 m!52973))

(assert (=> b!60321 m!50843))

(declare-fun m!52975 () Bool)

(assert (=> b!60321 m!52975))

(declare-fun m!52977 () Bool)

(assert (=> b!60321 m!52977))

(assert (=> b!60321 m!50619))

(declare-fun m!52979 () Bool)

(assert (=> b!60321 m!52979))

(declare-fun m!52981 () Bool)

(assert (=> b!60321 m!52981))

(declare-fun m!52983 () Bool)

(assert (=> b!60321 m!52983))

(declare-fun m!52985 () Bool)

(assert (=> b!60321 m!52985))

(assert (=> b!60321 m!52981))

(declare-fun m!52987 () Bool)

(assert (=> b!60321 m!52987))

(declare-fun m!52989 () Bool)

(assert (=> b!60321 m!52989))

(declare-fun m!52991 () Bool)

(assert (=> b!60321 m!52991))

(assert (=> b!60321 m!50619))

(declare-fun m!52993 () Bool)

(assert (=> b!60321 m!52993))

(declare-fun m!52995 () Bool)

(assert (=> b!60321 m!52995))

(declare-fun m!52997 () Bool)

(assert (=> b!60321 m!52997))

(assert (=> b!60321 m!50619))

(declare-fun m!52999 () Bool)

(assert (=> b!60321 m!52999))

(declare-fun m!53001 () Bool)

(assert (=> b!60321 m!53001))

(assert (=> b!60321 m!53001))

(declare-fun m!53003 () Bool)

(assert (=> b!60321 m!53003))

(assert (=> b!60321 m!52975))

(assert (=> b!60321 m!52995))

(declare-fun m!53005 () Bool)

(assert (=> b!60321 m!53005))

(declare-fun m!53007 () Bool)

(assert (=> bm!4563 m!53007))

(assert (=> b!60313 m!50843))

(assert (=> b!60313 m!50843))

(declare-fun m!53009 () Bool)

(assert (=> b!60313 m!53009))

(assert (=> d!11915 m!50833))

(declare-fun m!53011 () Bool)

(assert (=> b!60305 m!53011))

(declare-fun m!53013 () Bool)

(assert (=> bm!4560 m!53013))

(declare-fun m!53015 () Bool)

(assert (=> bm!4559 m!53015))

(assert (=> b!60315 m!50843))

(assert (=> b!60315 m!50843))

(assert (=> b!60315 m!50853))

(assert (=> bm!4562 m!50619))

(assert (=> bm!4562 m!52979))

(assert (=> d!11287 d!11915))

(assert (=> d!11287 d!11417))

(declare-fun d!11917 () Bool)

(declare-fun res!33378 () Bool)

(declare-fun e!39628 () Bool)

(assert (=> d!11917 (=> res!33378 e!39628)))

(assert (=> d!11917 (= res!33378 (and ((_ is Cons!1449) (toList!704 lt!23743)) (= (_1!1034 (h!2030 (toList!704 lt!23743))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!11917 (= (containsKey!127 (toList!704 lt!23743) #b0000000000000000000000000000000000000000000000000000000000000000) e!39628)))

(declare-fun b!60325 () Bool)

(declare-fun e!39629 () Bool)

(assert (=> b!60325 (= e!39628 e!39629)))

(declare-fun res!33379 () Bool)

(assert (=> b!60325 (=> (not res!33379) (not e!39629))))

(assert (=> b!60325 (= res!33379 (and (or (not ((_ is Cons!1449) (toList!704 lt!23743))) (bvsle (_1!1034 (h!2030 (toList!704 lt!23743))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1449) (toList!704 lt!23743)) (bvslt (_1!1034 (h!2030 (toList!704 lt!23743))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!60326 () Bool)

(assert (=> b!60326 (= e!39629 (containsKey!127 (t!4799 (toList!704 lt!23743)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!11917 (not res!33378)) b!60325))

(assert (= (and b!60325 res!33379) b!60326))

(declare-fun m!53017 () Bool)

(assert (=> b!60326 m!53017))

(assert (=> d!11349 d!11917))

(declare-fun d!11919 () Bool)

(assert (=> d!11919 (isDefined!77 (getValueByKey!123 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun lt!24680 () Unit!1553)

(assert (=> d!11919 (= lt!24680 (choose!313 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(declare-fun e!39630 () Bool)

(assert (=> d!11919 e!39630))

(declare-fun res!33380 () Bool)

(assert (=> d!11919 (=> (not res!33380) (not e!39630))))

(assert (=> d!11919 (= res!33380 (isStrictlySorted!279 (toList!704 call!4404)))))

(assert (=> d!11919 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)) lt!24680)))

(declare-fun b!60327 () Bool)

(assert (=> b!60327 (= e!39630 (containsKey!127 (toList!704 call!4404) (select (arr!1780 (_keys!3667 (v!2381 (underlying!225 thiss!992)))) from!355)))))

(assert (= (and d!11919 res!33380) b!60327))

(assert (=> d!11919 m!50591))

(assert (=> d!11919 m!51375))

(assert (=> d!11919 m!51375))

(assert (=> d!11919 m!51377))

(assert (=> d!11919 m!50591))

(declare-fun m!53019 () Bool)

(assert (=> d!11919 m!53019))

(declare-fun m!53021 () Bool)

(assert (=> d!11919 m!53021))

(assert (=> b!60327 m!50591))

(assert (=> b!60327 m!51371))

(assert (=> b!59482 d!11919))

(assert (=> b!59482 d!11669))

(assert (=> b!59482 d!11671))

(declare-fun b!60329 () Bool)

(declare-fun e!39631 () Bool)

(assert (=> b!60329 (= e!39631 tp_is_empty!2397)))

(declare-fun mapIsEmpty!2887 () Bool)

(declare-fun mapRes!2887 () Bool)

(assert (=> mapIsEmpty!2887 mapRes!2887))

(declare-fun b!60328 () Bool)

(declare-fun e!39632 () Bool)

(assert (=> b!60328 (= e!39632 tp_is_empty!2397)))

(declare-fun condMapEmpty!2887 () Bool)

(declare-fun mapDefault!2887 () ValueCell!855)

(assert (=> mapNonEmpty!2886 (= condMapEmpty!2887 (= mapRest!2886 ((as const (Array (_ BitVec 32) ValueCell!855)) mapDefault!2887)))))

(assert (=> mapNonEmpty!2886 (= tp!8016 (and e!39631 mapRes!2887))))

(declare-fun mapNonEmpty!2887 () Bool)

(declare-fun tp!8017 () Bool)

(assert (=> mapNonEmpty!2887 (= mapRes!2887 (and tp!8017 e!39632))))

(declare-fun mapRest!2887 () (Array (_ BitVec 32) ValueCell!855))

(declare-fun mapKey!2887 () (_ BitVec 32))

(declare-fun mapValue!2887 () ValueCell!855)

(assert (=> mapNonEmpty!2887 (= mapRest!2886 (store mapRest!2887 mapKey!2887 mapValue!2887))))

(assert (= (and mapNonEmpty!2886 condMapEmpty!2887) mapIsEmpty!2887))

(assert (= (and mapNonEmpty!2886 (not condMapEmpty!2887)) mapNonEmpty!2887))

(assert (= (and mapNonEmpty!2887 ((_ is ValueCellFull!855) mapValue!2887)) b!60328))

(assert (= (and mapNonEmpty!2886 ((_ is ValueCellFull!855) mapDefault!2887)) b!60329))

(declare-fun m!53023 () Bool)

(assert (=> mapNonEmpty!2887 m!53023))

(declare-fun b!60331 () Bool)

(declare-fun e!39633 () Bool)

(assert (=> b!60331 (= e!39633 tp_is_empty!2397)))

(declare-fun mapIsEmpty!2888 () Bool)

(declare-fun mapRes!2888 () Bool)

(assert (=> mapIsEmpty!2888 mapRes!2888))

(declare-fun b!60330 () Bool)

(declare-fun e!39634 () Bool)

(assert (=> b!60330 (= e!39634 tp_is_empty!2397)))

(declare-fun condMapEmpty!2888 () Bool)

(declare-fun mapDefault!2888 () ValueCell!855)

(assert (=> mapNonEmpty!2885 (= condMapEmpty!2888 (= mapRest!2885 ((as const (Array (_ BitVec 32) ValueCell!855)) mapDefault!2888)))))

(assert (=> mapNonEmpty!2885 (= tp!8015 (and e!39633 mapRes!2888))))

(declare-fun mapNonEmpty!2888 () Bool)

(declare-fun tp!8018 () Bool)

(assert (=> mapNonEmpty!2888 (= mapRes!2888 (and tp!8018 e!39634))))

(declare-fun mapKey!2888 () (_ BitVec 32))

(declare-fun mapRest!2888 () (Array (_ BitVec 32) ValueCell!855))

(declare-fun mapValue!2888 () ValueCell!855)

(assert (=> mapNonEmpty!2888 (= mapRest!2885 (store mapRest!2888 mapKey!2888 mapValue!2888))))

(assert (= (and mapNonEmpty!2885 condMapEmpty!2888) mapIsEmpty!2888))

(assert (= (and mapNonEmpty!2885 (not condMapEmpty!2888)) mapNonEmpty!2888))

(assert (= (and mapNonEmpty!2888 ((_ is ValueCellFull!855) mapValue!2888)) b!60330))

(assert (= (and mapNonEmpty!2885 ((_ is ValueCellFull!855) mapDefault!2888)) b!60331))

(declare-fun m!53025 () Bool)

(assert (=> mapNonEmpty!2888 m!53025))

(declare-fun b_lambda!2661 () Bool)

(assert (= b_lambda!2643 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2661)))

(declare-fun b_lambda!2663 () Bool)

(assert (= b_lambda!2633 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2663)))

(declare-fun b_lambda!2665 () Bool)

(assert (= b_lambda!2657 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2665)))

(declare-fun b_lambda!2667 () Bool)

(assert (= b_lambda!2655 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2667)))

(declare-fun b_lambda!2669 () Bool)

(assert (= b_lambda!2649 (or (and b!58833 b_free!1961) (and b!58818 b_free!1963 (= (defaultEntry!2043 newMap!16) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))))) b_lambda!2669)))

(declare-fun b_lambda!2671 () Bool)

(assert (= b_lambda!2659 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2671)))

(declare-fun b_lambda!2673 () Bool)

(assert (= b_lambda!2647 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2673)))

(declare-fun b_lambda!2675 () Bool)

(assert (= b_lambda!2651 (or (and b!58833 b_free!1961) (and b!58818 b_free!1963 (= (defaultEntry!2043 newMap!16) (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))))) b_lambda!2675)))

(declare-fun b_lambda!2677 () Bool)

(assert (= b_lambda!2645 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2677)))

(declare-fun b_lambda!2679 () Bool)

(assert (= b_lambda!2635 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2679)))

(declare-fun b_lambda!2681 () Bool)

(assert (= b_lambda!2653 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2681)))

(declare-fun b_lambda!2683 () Bool)

(assert (= b_lambda!2637 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2683)))

(declare-fun b_lambda!2685 () Bool)

(assert (= b_lambda!2631 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2685)))

(declare-fun b_lambda!2687 () Bool)

(assert (= b_lambda!2641 (or (and b!58833 b_free!1961 (= (defaultEntry!2043 (v!2381 (underlying!225 thiss!992))) (defaultEntry!2043 newMap!16))) (and b!58818 b_free!1963) b_lambda!2687)))

(check-sat (not b!59717) (not b!59879) (not b!59630) (not b!59575) (not d!11735) (not b!59852) (not b!60244) (not b!60088) (not bm!4550) (not d!11475) (not b!60117) (not b_lambda!2683) (not b!59567) (not d!11491) (not b!60060) (not b!59940) (not d!11911) (not d!11901) (not d!11675) (not b!59846) (not d!11409) (not b!60009) (not b!60170) (not d!11759) (not bm!4499) (not b!59845) (not b!59937) (not bm!4544) (not b!59751) (not b!59966) (not d!11453) (not b!60305) (not d!11607) (not d!11589) (not b!59732) (not d!11875) (not b!59753) (not b!59869) (not d!11889) (not b!59861) (not b!60019) b_and!3657 (not d!11597) (not b!59562) (not b!60274) (not b!59688) (not b!59884) (not d!11435) (not d!11587) (not d!11565) (not d!11865) (not d!11835) (not b_lambda!2663) (not d!11603) (not b!59621) (not b!60077) (not d!11669) (not b!60187) (not b!60148) (not b_lambda!2673) (not b!59682) (not b!60249) (not d!11695) (not d!11429) (not d!11709) (not d!11605) (not d!11513) (not d!11415) (not d!11485) (not d!11639) (not bm!4545) (not b!59709) (not d!11599) (not b!59990) (not b!60252) (not b!59736) (not b!60097) (not b!60062) (not d!11919) (not b!60210) (not bm!4512) (not d!11549) (not b!59694) (not b!59973) (not bm!4508) (not d!11703) (not b!59799) (not b!60050) (not b!59926) (not b!60251) (not b_lambda!2621) (not b_lambda!2667) (not d!11717) (not b!59984) (not bm!4511) (not b!59843) (not b!60065) (not b!59998) (not b!60131) (not b!60167) (not b_lambda!2627) (not bm!4483) (not b!59702) (not b!60013) (not b!60292) (not d!11547) (not bm!4541) (not b!60074) (not b!59907) (not b!59831) (not bm!4500) (not b!59686) (not d!11777) (not b!60000) (not b!59662) (not b!60246) (not b!59524) (not d!11585) (not bm!4504) (not bm!4518) (not b!60058) (not d!11893) (not d!11455) (not b!60099) (not d!11497) (not b!60036) (not d!11561) (not b!60205) (not b!60194) (not b!59886) (not d!11715) (not b!60010) (not d!11821) (not bm!4531) (not b!60018) (not b!59648) (not d!11489) (not b!60079) (not b!59865) (not b!59842) (not d!11861) (not b!60264) (not b!59731) (not bm!4553) (not d!11725) (not bm!4563) (not d!11687) (not b!59659) (not b!60267) (not bm!4480) (not bm!4501) (not d!11785) (not b!59975) (not d!11625) (not bm!4488) (not b!60208) (not d!11743) (not d!11479) (not b!59583) (not b!60291) (not b!59681) (not b!59508) (not bm!4529) (not b!59783) (not bm!4505) (not b!59525) (not b!59969) (not b!59929) (not b!59900) (not b!59762) (not b!60011) (not b!60269) (not bm!4528) (not d!11729) (not d!11769) (not b!59644) (not b_lambda!2661) (not b!60262) (not bm!4536) (not b_lambda!2677) (not b!59623) (not d!11879) (not b!60082) (not b!60094) (not b!60321) (not b!59492) (not bm!4492) (not b_lambda!2669) (not b!60259) (not b!59713) (not d!11449) (not b!59749) (not b!59652) (not d!11779) (not b!60044) (not b!60028) (not d!11441) (not b!60057) (not b!59620) (not b!60173) (not bm!4474) (not bm!4475) (not b!59589) (not b_lambda!2609) (not b_lambda!2675) (not b!60311) (not b!59715) (not d!11841) (not b!59913) (not b!60301) (not bm!4497) (not b!59763) (not b!60106) (not b_lambda!2679) (not bm!4532) (not b!59857) (not b!59765) (not b!60307) (not d!11689) (not b!59903) (not d!11501) (not b!60141) (not b!59684) (not b!59856) (not b!60067) (not d!11849) (not d!11617) (not d!11571) (not d!11681) (not d!11891) (not b!59773) (not d!11467) (not b!60123) (not b!59834) (not d!11825) (not b!59978) (not bm!4539) (not b!59873) (not d!11613) (not b!60006) (not b!59671) (not bm!4520) (not d!11733) (not b!59977) (not bm!4516) (not d!11807) (not b!60126) (not b!60279) (not b!60150) (not b!59746) (not b!59552) (not b!60253) (not b!59824) (not b!59854) (not b!60283) (not d!11867) (not b!59768) (not b!60313) (not b!59787) (not d!11719) (not d!11411) (not b!59923) (not d!11839) (not d!11691) (not d!11647) (not b!59850) (not d!11569) (not b!60317) (not b!59513) (not d!11895) (not b!60288) (not d!11677) (not b!60203) (not d!11443) (not bm!4562) (not d!11425) (not b!60159) (not d!11653) (not bm!4559) (not b!59666) (not b!59733) (not b!59841) (not b!60146) (not d!11615) (not b!59981) tp_is_empty!2397 (not b!59708) (not d!11767) (not b!59511) (not b!60212) (not b!59875) (not d!11609) (not b!59720) (not b!59555) (not d!11419) (not b!60303) (not bm!4467) (not b!59785) (not d!11507) (not d!11457) (not b_next!1961) (not d!11827) (not d!11683) (not d!11851) (not b!60156) (not b!59892) (not b!60007) (not b!59805) (not bm!4484) (not b!59612) (not b_lambda!2687) (not b!60068) (not b!60072) (not d!11601) (not b!60315) (not b!59760) (not b!60101) (not b!59972) (not b!60020) (not b!60116) (not d!11915) (not b!59744) (not b!59714) (not d!11737) (not d!11801) (not b_lambda!2639) (not d!11637) (not b!60140) (not d!11631) (not bm!4473) (not b!60014) (not d!11855) (not d!11539) (not b!59796) (not b!59642) (not bm!4521) (not b!59908) (not b!60130) (not b!59560) (not b!59592) (not b!60103) (not d!11463) (not b!59847) (not d!11797) (not bm!4509) (not b!60302) (not b!59756) (not b!60104) (not b!59994) (not d!11593) (not b!59546) (not b!60143) (not b!59743) (not b!60285) (not d!11727) (not b!60108) (not b!59638) (not b!59827) (not b!60016) (not b!59917) (not d!11447) (not b!59657) (not b!59581) (not d!11805) (not d!11633) (not b!60201) (not d!11903) (not b!59896) (not d!11573) (not bm!4490) (not d!11529) (not d!11701) (not b_lambda!2665) (not bm!4530) (not d!11579) (not d!11495) (not b!59587) (not b!60030) (not b!59711) (not b!60107) (not d!11697) (not b!59970) (not d!11499) (not b!59752) (not b!60002) (not b!60053) (not b!59933) (not b!59501) (not b!59871) (not b!60054) (not b!60178) (not d!11793) (not b!60059) (not d!11859) (not bm!4470) (not d!11629) (not b!59706) (not b!59882) (not d!11567) (not b!60290) (not b!59775) (not b!60207) (not b_lambda!2629) (not b!59723) (not b!59748) (not d!11521) (not b!59837) (not d!11611) (not b!59698) (not b!59614) (not b!60277) (not b!60005) (not d!11583) (not b!59983) (not b!59692) (not b!60128) (not b!60243) (not bm!4487) (not b!59863) (not d!11887) (not b!59490) (not d!11553) (not bm!4491) (not d!11881) (not d!11595) (not b!60174) (not b!59515) (not d!11843) (not d!11651) (not b!59849) (not b!59938) (not d!11543) (not d!11459) (not b!59810) (not b!59696) (not b!60004) (not d!11531) (not b!59618) (not b!59830) (not b!60032) (not b!59759) b_and!3659 (not mapNonEmpty!2888) (not bm!4535) (not b!59580) (not b!60064) (not b!59916) (not b!60268) (not b!59569) (not b_lambda!2623) (not b!59565) (not d!11581) (not d!11773) (not b!60105) (not b!60298) (not b!60022) (not b!59557) (not b!60046) (not b!60327) (not b!59807) (not d!11545) (not b_lambda!2671) (not b!59586) (not d!11541) (not d!11679) (not d!11745) (not b!60164) (not d!11527) (not d!11483) (not b!59730) (not b!60273) (not b!60180) (not b!59823) (not b!60275) (not b!59658) (not b!60186) (not b!59764) (not b!60196) (not b!59631) (not bm!4496) (not b!60001) (not b!60042) (not d!11909) (not b!59860) (not d!11645) (not b!59568) (not d!11649) (not b!59812) (not bm!4548) (not d!11641) (not d!11699) (not b!60113) (not b!60110) (not d!11883) (not b!59578) (not b!60184) (not b!60189) (not b!60324) (not b!59813) (not bm!4519) (not b!60181) (not b!59814) (not b!59747) (not d!11747) (not b!60190) (not b!59766) (not b!60177) (not b!59617) (not b!59803) (not b_lambda!2685) (not b!59624) (not bm!4540) (not b!59836) (not d!11913) (not b_lambda!2625) (not b!59851) (not d!11657) (not b!59495) (not d!11847) (not d!11873) (not d!11783) (not b!59979) (not bm!4538) (not d!11487) (not b!59608) (not b!59910) (not b!60271) (not d!11693) (not mapNonEmpty!2887) (not d!11591) (not b!59584) (not b!59777) (not b!60270) (not b!59745) (not b!59906) (not b!60008) (not b!59915) (not d!11771) (not b_lambda!2605) (not b!59705) (not b!60091) (not d!11907) (not b!60280) (not d!11655) (not b!59793) (not b!60084) (not b!60040) (not b!60063) (not b!60086) (not bm!4554) (not b!60056) (not b!59965) (not b!60183) (not d!11775) (not d!11673) (not bm!4493) (not b!59890) (not b!60066) (not d!11433) (not d!11763) (not d!11533) (not d!11711) (not b!59935) (not b!59646) (not b!60076) (not b!60272) (not bm!4477) (not b!59820) (not b!60326) (not d!11659) (not b!60192) (not b!60161) (not d!11493) (not b!59655) (not d!11685) (not bm!4476) (not d!11831) (not bm!4549) (not b_lambda!2681) (not b!60214) (not b!59518) (not d!11817) (not b!60100) (not b!59665) (not bm!4481) (not b!59833) (not b!59726) (not b!60149) (not b!59848) (not d!11899) (not d!11869) (not bm!4560) (not b!59779) (not b!59789) (not b!60034) (not d!11723) (not b_next!1963) (not b!59559) (not b!59636) (not b!59740) (not d!11845) (not d!11877) (not d!11897) (not d!11885) (not b!59839) (not b!59967) (not b!59894) (not b!60237) (not bm!4515) (not d!11407) (not b!60115))
(check-sat b_and!3657 b_and!3659 (not b_next!1961) (not b_next!1963))
