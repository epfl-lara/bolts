; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!135622 () Bool)

(assert start!135622)

(declare-fun res!1075783 () Bool)

(declare-fun e!878043 () Bool)

(assert (=> start!135622 (=> (not res!1075783) (not e!878043))))

(declare-fun mask!898 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!135622 (= res!1075783 (validMask!0 mask!898))))

(assert (=> start!135622 e!878043))

(assert (=> start!135622 true))

(declare-datatypes ((array!105242 0))(
  ( (array!105243 (arr!50763 (Array (_ BitVec 32) (_ BitVec 64))) (size!51314 (_ BitVec 32))) )
))
(declare-fun _keys!605 () array!105242)

(declare-fun array_inv!39408 (array!105242) Bool)

(assert (=> start!135622 (array_inv!39408 _keys!605)))

(declare-fun b!1574352 () Bool)

(declare-fun res!1075784 () Bool)

(assert (=> b!1574352 (=> (not res!1075784) (not e!878043))))

(assert (=> b!1574352 (= res!1075784 (and (bvsge mask!898 #b00000000000000000000000000000000) (= (size!51314 _keys!605) (bvadd #b00000000000000000000000000000001 mask!898))))))

(declare-fun b!1574353 () Bool)

(declare-fun res!1075782 () Bool)

(assert (=> b!1574353 (=> (not res!1075782) (not e!878043))))

(declare-fun k!761 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1574353 (= res!1075782 (validKeyInArray!0 k!761))))

(declare-fun b!1574354 () Bool)

(declare-fun lt!674734 () (_ BitVec 32))

(assert (=> b!1574354 (= e!878043 (or (bvslt lt!674734 #b00000000000000000000000000000000) (bvsge lt!674734 (bvadd #b00000000000000000000000000000001 mask!898))))))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1574354 (= lt!674734 (toIndex!0 k!761 mask!898))))

(assert (= (and start!135622 res!1075783) b!1574352))

(assert (= (and b!1574352 res!1075784) b!1574353))

(assert (= (and b!1574353 res!1075782) b!1574354))

(declare-fun m!1447631 () Bool)

(assert (=> start!135622 m!1447631))

(declare-fun m!1447633 () Bool)

(assert (=> start!135622 m!1447633))

(declare-fun m!1447635 () Bool)

(assert (=> b!1574353 m!1447635))

(declare-fun m!1447637 () Bool)

(assert (=> b!1574354 m!1447637))

(push 1)

(assert (not start!135622))

(assert (not b!1574354))

(assert (not b!1574353))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!165153 () Bool)

(assert (=> d!165153 (= (validMask!0 mask!898) (and (or (= mask!898 #b00000000000000000000000000000111) (= mask!898 #b00000000000000000000000000001111) (= mask!898 #b00000000000000000000000000011111) (= mask!898 #b00000000000000000000000000111111) (= mask!898 #b00000000000000000000000001111111) (= mask!898 #b00000000000000000000000011111111) (= mask!898 #b00000000000000000000000111111111) (= mask!898 #b00000000000000000000001111111111) (= mask!898 #b00000000000000000000011111111111) (= mask!898 #b00000000000000000000111111111111) (= mask!898 #b00000000000000000001111111111111) (= mask!898 #b00000000000000000011111111111111) (= mask!898 #b00000000000000000111111111111111) (= mask!898 #b00000000000000001111111111111111) (= mask!898 #b00000000000000011111111111111111) (= mask!898 #b00000000000000111111111111111111) (= mask!898 #b00000000000001111111111111111111) (= mask!898 #b00000000000011111111111111111111) (= mask!898 #b00000000000111111111111111111111) (= mask!898 #b00000000001111111111111111111111) (= mask!898 #b00000000011111111111111111111111) (= mask!898 #b00000000111111111111111111111111) (= mask!898 #b00000001111111111111111111111111) (= mask!898 #b00000011111111111111111111111111) (= mask!898 #b00000111111111111111111111111111) (= mask!898 #b00001111111111111111111111111111) (= mask!898 #b00011111111111111111111111111111) (= mask!898 #b00111111111111111111111111111111)) (bvsle mask!898 #b00111111111111111111111111111111)))))

(assert (=> start!135622 d!165153))

(declare-fun d!165165 () Bool)

(assert (=> d!165165 (= (array_inv!39408 _keys!605) (bvsge (size!51314 _keys!605) #b00000000000000000000000000000000))))

(assert (=> start!135622 d!165165))

(declare-fun d!165167 () Bool)

(declare-fun lt!674752 () (_ BitVec 32))

(declare-fun lt!674751 () (_ BitVec 32))

(assert (=> d!165167 (= lt!674752 (bvmul (bvxor lt!674751 (bvlshr lt!674751 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!165167 (= lt!674751 ((_ extract 31 0) (bvand (bvxor k!761 (bvlshr k!761 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!165167 (and (bvsge mask!898 #b00000000000000000000000000000000) (let ((res!1075787 (let ((h!38413 ((_ extract 31 0) (bvand (bvxor k!761 (bvlshr k!761 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141933 (bvmul (bvxor h!38413 (bvlshr h!38413 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141933 (bvlshr x!141933 #b00000000000000000000000000001101)) mask!898))))) (and (bvslt res!1075787 (bvadd mask!898 #b00000000000000000000000000000001)) (bvsge res!1075787 #b00000000000000000000000000000000))))))

(assert (=> d!165167 (= (toIndex!0 k!761 mask!898) (bvand (bvxor lt!674752 (bvlshr lt!674752 #b00000000000000000000000000001101)) mask!898))))

(assert (=> b!1574354 d!165167))

(declare-fun d!165169 () Bool)

(assert (=> d!165169 (= (validKeyInArray!0 k!761) (and (not (= k!761 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k!761 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1574353 d!165169))

(push 1)

(check-sat)

